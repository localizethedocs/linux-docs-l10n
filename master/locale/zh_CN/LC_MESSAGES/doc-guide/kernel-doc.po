# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../doc-guide/kernel-doc.rst:5
msgid "Writing kernel-doc comments"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:7
msgid ""
"The Linux kernel source files may contain structured documentation comments "
"in the kernel-doc format to describe the functions, types and design of the "
"code. It is easier to keep documentation up-to-date when it is embedded in "
"source files."
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:12
msgid ""
"The kernel-doc format is deceptively similar to javadoc, gtk-doc or Doxygen, "
"yet distinctively different, for historical reasons. The kernel source "
"contains tens of thousands of kernel-doc comments. Please stick to the style "
"described here."
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:17
msgid ""
"kernel-doc does not cover Rust code: please see Documentation/rust/general-"
"information.rst instead."
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:20
msgid ""
"The kernel-doc structure is extracted from the comments, and proper `Sphinx "
"C Domain`_ function and type descriptions with anchors are generated from "
"them. The descriptions are filtered for special kernel-doc highlights and "
"cross-references. See below for details."
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:27
msgid ""
"Every function that is exported to loadable modules using ``EXPORT_SYMBOL`` "
"or ``EXPORT_SYMBOL_GPL`` should have a kernel-doc comment. Functions and "
"data structures in header files which are intended to be used by modules "
"should also have kernel-doc comments."
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:32
msgid ""
"It is good practice to also provide kernel-doc formatted documentation for "
"functions externally visible to other kernel files (not marked ``static``). "
"We also recommend providing kernel-doc formatted documentation for private "
"(file ``static``) routines, for consistency of kernel source code layout. "
"This is lower priority and at the discretion of the maintainer of that "
"kernel source file."
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:40
msgid "How to format kernel-doc comments"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:42
msgid ""
"The opening comment mark ``/**`` is used for kernel-doc comments. The "
"``kernel-doc`` tool will extract comments marked this way. The rest of the "
"comment is formatted like a normal multi-line comment with a column of "
"asterisks on the left side, closing with ``*/`` on a line by itself."
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:47
msgid ""
"The function and type kernel-doc comments should be placed just before the "
"function or type being described in order to maximise the chance that "
"somebody changing the code will also change the documentation. The overview "
"kernel-doc comments may be placed anywhere at the top indentation level."
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:53
msgid ""
"Running the ``kernel-doc`` tool with increased verbosity and without actual "
"output generation may be used to verify proper formatting of the "
"documentation comments. For example::"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:59
msgid ""
"The documentation format is verified by the kernel build when it is "
"requested to perform extra gcc checks::"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:65
msgid "Function documentation"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:67
msgid ""
"The general format of a function and function-like macro kernel-doc comment "
"is::"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:92
msgid ""
"The brief description following the function name may span multiple lines, "
"and ends with an argument description, a blank comment line, or the end of "
"the comment block."
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:97
msgid "Function parameters"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:99
msgid ""
"Each function argument should be described in order, immediately following "
"the short function description.  Do not leave a blank line between the "
"function description and the arguments, nor between the arguments."
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:103
msgid "Each ``@argument:`` description may span multiple lines."
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:107
msgid ""
"If the ``@argument`` description has multiple lines, the continuation of the "
"description should start at the same column as the previous line::"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:113
msgid "or::"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:119
msgid ""
"If a function has a variable number of arguments, its description should be "
"written in kernel-doc notation as::"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:125
msgid "Function context"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:127
msgid ""
"The context in which a function can be called should be described in a "
"section named ``Context``. This should include whether the function sleeps "
"or can be called from interrupt context, as well as what locks it takes, "
"releases and expects to be held by its caller."
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:132 ../../../doc-guide/kernel-doc.rst:514
#: ../../../doc-guide/kernel-doc.rst:538
msgid "Examples::"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:143
msgid "Return values"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:145
msgid ""
"The return value, if any, should be described in a dedicated section named "
"``Return`` (or ``Returns``)."
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:150
msgid ""
"The multi-line descriptive text you provide does *not* recognize line "
"breaks, so if you try to format some text nicely, as in::"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:158
msgid "this will all run together and produce::"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:162
msgid ""
"So, in order to produce the desired line breaks, you need to use a ReST "
"list, e. g.::"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:169
msgid ""
"If the descriptive text you provide has lines that begin with some phrase "
"followed by a colon, each of those phrases will be taken as a new section "
"heading, which probably won't produce the desired effect."
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:175
msgid "Structure, union, and enumeration documentation"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:177
msgid "The general format of a struct, union, and enum kernel-doc comment is::"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:189
msgid ""
"You can replace the ``struct`` in the above example with ``union`` or "
"``enum``  to describe unions or enums. ``member`` is used to mean struct and "
"union member names as well as enumerations in an enum."
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:193
msgid ""
"The brief description following the structure name may span multiple lines, "
"and ends with a member description, a blank comment line, or the end of the "
"comment block."
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:198
msgid "Members"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:200
msgid ""
"Members of structs, unions and enums should be documented the same way as "
"function parameters; they immediately succeed the short description and may "
"be multi-line."
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:204
msgid ""
"Inside a struct or union description, you can use the ``private:`` and "
"``public:`` comment tags. Structure fields that are inside a ``private:`` "
"area are not listed in the generated output documentation."
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:208
msgid ""
"The ``private:`` and ``public:`` tags must begin immediately following a ``/"
"*`` comment marker. They may optionally include comments between the ``:`` "
"and the ending ``*/`` marker."
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:212 ../../../doc-guide/kernel-doc.rst:364
#: ../../../doc-guide/kernel-doc.rst:375 ../../../doc-guide/kernel-doc.rst:527
#: ../../../doc-guide/kernel-doc.rst:549 ../../../doc-guide/kernel-doc.rst:564
msgid "Example::"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:232
msgid "Nested structs/unions"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:234
msgid "It is possible to document nested structs and unions, like::"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:276
msgid ""
"When documenting nested structs or unions, if the struct/union ``foo`` is "
"named, the member ``bar`` inside it should be documented as ``@foo.bar:``"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:279
msgid ""
"When the nested struct/union is anonymous, the member ``bar`` in it should "
"be documented as ``@bar:``"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:283
msgid "In-line member documentation comments"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:285
msgid ""
"The structure members may also be documented in-line within the definition. "
"There are two styles, single-line comments where both the opening ``/**`` "
"and closing ``*/`` are on the same line, and multi-line comments where they "
"are each on a line of their own, like all other kernel-doc comments::"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:320
msgid "Typedef documentation"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:322
msgid "The general format of a typedef kernel-doc comment is::"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:330
msgid "Typedefs with function prototypes can also be documented::"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:345
msgid "Object-like macro documentation"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:347
msgid ""
"Object-like macros are distinct from function-like macros. They are "
"differentiated by whether the macro name is immediately followed by a left "
"parenthesis ('(') for function-like macros or not followed by one for object-"
"like macros."
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:352
msgid ""
"Function-like macros are handled like functions by ``scripts/kernel-doc``. "
"They may have a parameter list. Object-like macros have do not have a "
"parameter list."
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:356
msgid "The general format of an object-like macro kernel-doc comment is::"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:390
msgid "Highlights and cross-references"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:392
msgid ""
"The following special patterns are recognized in the kernel-doc comment "
"descriptive text and converted to proper reStructuredText markup and `Sphinx "
"C Domain`_ references."
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:396
msgid ""
"The below are **only** recognized within kernel-doc comments, **not** within "
"normal reStructuredText documents."
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:399
msgid "``funcname()``"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:400
msgid "Function reference."
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:402
msgid "``@parameter``"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:403
msgid "Name of a function parameter. (No cross-referencing, just formatting.)"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:405
msgid "``%CONST``"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:406
msgid "Name of a constant. (No cross-referencing, just formatting.)"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:408
msgid "````literal````"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:409
msgid ""
"A literal block that should be handled as-is. The output will use a "
"``monospaced font``."
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:412
msgid ""
"Useful if you need to use special characters that would otherwise have some "
"meaning either by kernel-doc script or by reStructuredText."
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:415
msgid ""
"This is particularly useful if you need to use things like ``%ph`` inside a "
"function description."
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:418
msgid "``$ENVVAR``"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:419
msgid ""
"Name of an environment variable. (No cross-referencing, just formatting.)"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:421
msgid "``&struct name``"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:422
msgid "Structure reference."
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:424
msgid "``&enum name``"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:425
msgid "Enum reference."
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:427
msgid "``&typedef name``"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:428
msgid "Typedef reference."
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:430
msgid "``&struct_name->member`` or ``&struct_name.member``"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:431
msgid ""
"Structure or union member reference. The cross-reference will be to the "
"struct or union definition, not the member directly."
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:434
msgid "``&name``"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:435
msgid ""
"A generic type reference. Prefer using the full reference described above "
"instead. This is mostly for legacy comments."
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:439
msgid "Cross-referencing from reStructuredText"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:441
msgid ""
"No additional syntax is needed to cross-reference the functions and types "
"defined in the kernel-doc comments from reStructuredText documents. Just end "
"function names with ``()`` and write ``struct``, ``union``, ``enum`` or "
"``typedef`` before types. For example::"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:453
msgid ""
"However, if you want custom text in the cross-reference link, that can be "
"done through the following syntax::"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:459
msgid ""
"For further details, please refer to the `Sphinx C Domain`_ documentation."
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:462
msgid "Overview documentation comments"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:464
msgid ""
"To facilitate having source code and comments close together, you can "
"include kernel-doc documentation blocks that are free-form comments instead "
"of being kernel-doc for functions, structures, unions, enums, or typedefs. "
"This could be used for something like a theory of operation for a driver or "
"library code, for example."
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:470
msgid "This is done by using a ``DOC:`` section keyword with a section title."
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:472
msgid ""
"The general format of an overview or high-level documentation comment is::"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:486
msgid ""
"The title following ``DOC:`` acts as a heading within the source file, but "
"also as an identifier for extracting the documentation comment. Thus, the "
"title must be unique within the file."
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:492
msgid "Including kernel-doc comments"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:494
msgid ""
"The documentation comments may be included in any of the reStructuredText "
"documents using a dedicated kernel-doc Sphinx directive extension."
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:497
msgid "The kernel-doc directive is of the format::"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:502
msgid ""
"The *source* is the path to a source file, relative to the kernel source "
"tree. The following directive options are supported:"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:505
msgid "export: *[source-pattern ...]*"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:506
msgid ""
"Include documentation for all functions in *source* that have been exported "
"using ``EXPORT_SYMBOL`` or ``EXPORT_SYMBOL_GPL`` either in *source* or in "
"any of the files specified by *source-pattern*."
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:510
msgid ""
"The *source-pattern* is useful when the kernel-doc comments have been placed "
"in header files, while ``EXPORT_SYMBOL`` and ``EXPORT_SYMBOL_GPL`` are next "
"to the function definitions."
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:522
msgid "internal: *[source-pattern ...]*"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:523
msgid ""
"Include documentation for all functions and types in *source* that have "
"**not** been exported using ``EXPORT_SYMBOL`` or ``EXPORT_SYMBOL_GPL`` "
"either in *source* or in any of the files specified by *source-pattern*."
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:532
msgid "identifiers: *[ function/type ...]*"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:533
msgid ""
"Include documentation for each *function* and *type* in *source*. If no "
"*function* is specified, the documentation for all functions and types in "
"the *source* will be included. *type* can be a struct, union, enum, or "
"typedef identifier."
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:546
msgid "no-identifiers: *[ function/type ...]*"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:547
msgid "Exclude documentation for each *function* and *type* in *source*."
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:554
msgid "functions: *[ function/type ...]*"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:555
msgid "This is an alias of the 'identifiers' directive and deprecated."
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:557
msgid "doc: *title*"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:558
msgid ""
"Include documentation for the ``DOC:`` paragraph identified by *title* in "
"*source*. Spaces are allowed in *title*; do not quote the *title*. The "
"*title* is only used as an identifier for the paragraph, and is not included "
"in the output. Please make sure to have an appropriate heading in the "
"enclosing reStructuredText document."
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:569
msgid ""
"Without options, the kernel-doc directive includes all documentation "
"comments from the source file."
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:572
msgid ""
"The kernel-doc extension is included in the kernel source tree, at "
"``Documentation/sphinx/kerneldoc.py``. Internally, it uses the ``scripts/"
"kernel-doc`` script to extract the documentation comments from the source."
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:580
msgid "How to use kernel-doc to generate man pages"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:582
msgid ""
"If you just want to use kernel-doc to generate man pages you can do this "
"from the kernel git tree::"
msgstr ""

#: ../../../doc-guide/kernel-doc.rst:589
msgid ""
"Some older versions of git do not support some of the variants of syntax for "
"path exclusion.  One of the following commands may work for those versions::"
msgstr ""
