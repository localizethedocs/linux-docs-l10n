# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-20 11:24+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../driver-api/i3c/device-driver-api.rst:5
msgid "I3C device driver API"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:19
msgid "I3C error codes"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:23
#: include/linux/i3c/device.h:46 include/linux/i3c/device.h:79
msgid "**Constants**"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:25
msgid "``I3C_ERROR_UNKNOWN``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:26
msgid "unknown error, usually means the error is not I3C related"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:29
msgid "``I3C_ERROR_M0``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:30
msgid "M0 error"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:32
msgid "``I3C_ERROR_M1``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:33
msgid "M1 error"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:35
msgid "``I3C_ERROR_M2``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:36
msgid "M2 error"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:38
#: include/linux/i3c/device.h:116 include/linux/i3c/device.h:228
#: include/linux/i3c/device.h:240 include/linux/i3c/device.h:269
#: include/linux/i3c/device.h:288 include/linux/i3c/device.h:329
#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:25
#: drivers/i3c/device.c:84 drivers/i3c/device.c:103 drivers/i3c/device.c:128
#: drivers/i3c/device.c:158 drivers/i3c/device.c:188 drivers/i3c/device.c:269
#: drivers/i3c/device.c:292
msgid "**Description**"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:26
msgid ""
"These are the standard error codes as defined by the I3C specification. When "
"-EIO is returned by the i3c_device_do_priv_xfers() or "
"i3c_device_send_hdr_cmds() one can check the error code in :c:type:"
"`struct_i3c_priv_xfer.err <struct_i3c_priv_xfer>` or :c:type:`struct "
"i3c_hdr_cmd <i3c_hdr_cmd>`.err to get a better idea of what went wrong."
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:42
msgid "HDR mode ids"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:48
msgid "``I3C_HDR_DDR``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:49
msgid "DDR mode"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:51
msgid "``I3C_HDR_TSP``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:52
msgid "TSP mode"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:54
msgid "``I3C_HDR_TSL``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:55
msgid "TSL mode"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:54
msgid "I3C SDR private transfer"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:58
#: include/linux/i3c/device.h:104 include/linux/i3c/device.h:176
#: include/linux/i3c/device.h:318
msgid "**Definition**::"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:71
#: include/linux/i3c/device.h:121 include/linux/i3c/device.h:185
#: include/linux/i3c/device.h:326
msgid "**Members**"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:55
msgid "``rnw``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:56
msgid "encodes the transfer direction. true for a read, false for a write"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:56
msgid "``len``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:57
msgid "transfer length in bytes of the transfer"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:57
msgid "``actual_len``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:58
msgid "actual length in bytes are transferred by the controller"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:58
msgid "``data``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:59
msgid "input/output buffer"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:59
msgid "``data.in``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:60
msgid "input buffer. Must point to a DMA-able buffer"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:60
msgid "``data.out``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:61
msgid "output buffer. Must point to a DMA-able buffer"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:61
msgid "``err``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:62
msgid "I3C error code"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:75
msgid "I3C DCR values"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:81
msgid "``I3C_DCR_GENERIC_DEVICE``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:82
msgid "generic I3C device"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:100
msgid "I3C device information"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:101
msgid "``pid``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:102
msgid "Provisioned ID"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:102
msgid "``bcr``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:103
msgid "Bus Characteristic Register"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:103
msgid "``dcr``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:104
msgid "Device Characteristic Register"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:104
msgid "``static_addr``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:105
msgid "static/I2C address"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:105
msgid "``dyn_addr``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:106
msgid "dynamic address"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:106
msgid "``hdr_cap``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:107
msgid "supported HDR modes"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:107
msgid "``max_read_ds``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:108
msgid "max read speed information"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:108
msgid "``max_write_ds``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:109
msgid "max write speed information"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:109
msgid "``max_ibi_len``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:110
msgid "max IBI payload length"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:110
msgid "``max_read_turnaround``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:111
msgid "max read turn-around time in micro-seconds"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:111
msgid "``max_read_len``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:112
msgid "max private SDR read length in bytes"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:112
msgid "``max_write_len``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:113
msgid "max private SDR write length in bytes"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:113
msgid ""
"These are all basic information that should be advertised by an I3C device. "
"Some of them are optional depending on the device type and device "
"capabilities. For each I3C slave attached to a master with "
"i3c_master_add_i3c_dev_locked(), the core will send the relevant CCC command "
"to retrieve these data."
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:172
msgid "I3C device driver"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:173
msgid "``driver``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:174
msgid "inherit from device_driver"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:174
msgid "``probe``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:175
msgid "I3C device probe method"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:175
msgid "``remove``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:176
msgid "I3C device remove method"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:176
msgid "``id_table``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:177
msgid ""
"I3C device match table. Will be used by the framework to decide which device "
"to bind to this driver"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:193
msgid "``dev_to_i3cdev (__dev)``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:191
msgid "Returns the I3C device containing **dev**"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:195
#: include/linux/i3c/device.h:229 include/linux/i3c/device.h:240
#: include/linux/i3c/device.h:269 include/linux/i3c/device.h:287
#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:22
#: drivers/i3c/device.c:63 drivers/i3c/device.c:83 drivers/i3c/device.c:104
#: drivers/i3c/device.c:129 drivers/i3c/device.c:158 drivers/i3c/device.c:189
#: drivers/i3c/device.c:209 drivers/i3c/device.c:221 drivers/i3c/device.c:268
#: drivers/i3c/device.c:292
msgid "**Parameters**"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:197
msgid "``__dev``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:192
msgid "device object"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:194
#: include/linux/i3c/device.h:245 ../../../driver-api/i3c/device-driver-api:9:
#: drivers/i3c/device.c:28 drivers/i3c/device.c:64 drivers/i3c/device.c:105
#: drivers/i3c/device.c:134 drivers/i3c/device.c:161 drivers/i3c/device.c:208
#: drivers/i3c/device.c:221 drivers/i3c/device.c:270
msgid "**Return**"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:194
msgid "a pointer to an I3C device object."
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:227
msgid "``module_i3c_driver (__drv)``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:225
msgid "Register a module providing an I3C driver"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:231
msgid "``__drv``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:226
#: include/linux/i3c/device.h:237 include/linux/i3c/device.h:266
#: include/linux/i3c/device.h:285
msgid "the I3C driver to register"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:227
msgid ""
"Provide generic init/exit functions that simply register/unregister an I3C "
"driver. Should be used by any driver that does not require extra init/"
"cleanup steps."
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:236
msgid "Register an i2c and an i3c driver"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:242
#: include/linux/i3c/device.h:271
msgid "``struct i3c_driver *i3cdrv``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:239
#: include/linux/i3c/device.h:268
msgid "``struct i2c_driver *i2cdrv``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:238
#: include/linux/i3c/device.h:267 include/linux/i3c/device.h:286
msgid "the I2C driver to register"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:239
msgid ""
"This function registers both **i2cdev** and **i3cdev**, and fails if one of "
"these registrations fails. This is mainly useful for devices that support "
"both I2C and I3C modes. Note that when CONFIG_I3C is not enabled, this "
"function only registers the I2C driver."
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:246
msgid "0 if both registrations succeeds, a negative error code otherwise."
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:265
msgid "Unregister an i2c and an i3c driver"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:268
msgid ""
"This function unregisters both **i3cdrv** and **i2cdrv**. Note that when "
"CONFIG_I3C is not enabled, this function only unregisters the **i2cdrv**."
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:285
msgid "``module_i3c_i2c_driver (__i3cdrv, __i2cdrv)``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:283
msgid "Register a module providing an I3C and an I2C driver"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:289
msgid "``__i3cdrv``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:287
msgid "``__i2cdrv``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:287
msgid ""
"Provide generic init/exit functions that simply register/unregister an I3C "
"and an I2C driver. This macro can be used even if CONFIG_I3C is disabled, in "
"this case, only the I2C driver will be registered. Should be used by any "
"driver that does not require extra init/cleanup steps."
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:314
msgid "IBI setup object"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:315
msgid "``max_payload_len``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:316
msgid ""
"maximum length of the payload associated to an IBI. If one IBI appears to "
"have a payload that is bigger than this number, the IBI will be rejected."
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:318
msgid "``num_slots``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:319
msgid ""
"number of pre-allocated IBI slots. This should be chosen so that the system "
"never runs out of IBI slots, otherwise you'll lose IBIs."
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:321
msgid "``handler``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:322
msgid ""
"IBI handler, every time an IBI is received. This handler is called in a "
"workqueue context. It is allowed to sleep and send new messages on the bus, "
"though it's recommended to keep the processing done there as fast as "
"possible to avoid delaying processing of other queued on the same workqueue."
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:7: include/linux/i3c/device.h:326
msgid ""
"Temporary structure used to pass information to i3c_device_request_ibi(). "
"This object can be allocated on the stack since i3c_device_request_ibi() "
"copies every bit of information and do not use it after "
"i3c_device_request_ibi() has returned."
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:18
msgid "do I3C SDR private transfers directed to a specific device"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:24
#: drivers/i3c/device.c:65 drivers/i3c/device.c:106 drivers/i3c/device.c:131
#: drivers/i3c/device.c:160 drivers/i3c/device.c:191
msgid "``struct i3c_device *dev``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:21
msgid "device with which the transfers should be done"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:23
msgid "``struct i3c_priv_xfer *xfers``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:22
msgid "array of transfers"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:24
msgid "``int nxfers``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:23
msgid "number of transfers"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:24
msgid "Initiate one or several private SDR transfers with **dev**."
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:26
msgid "This function can sleep and thus cannot be called in atomic context."
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:29
#: drivers/i3c/device.c:64 drivers/i3c/device.c:106 drivers/i3c/device.c:135
#: drivers/i3c/device.c:162 drivers/i3c/device.c:271
msgid "0 in case of success, a negative error core otherwise."
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:30
msgid ""
"-EAGAIN: controller lost address arbitration. Target (IBI, HJ or controller "
"role request) win the bus. Client driver needs to resend the 'xfers' some "
"time later. See I3C spec ver 1.1.1 09-Jun-2021. Section: 5.1.2.2.3."
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:59
msgid "do I3C dynamic address assignement with static address"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:62
msgid "device with which the DAA should be done"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:79
msgid "get I3C device information"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:85
msgid "``const struct i3c_device *dev``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:81
msgid "device we want information on"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:83
msgid "``struct i3c_device_info *info``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:82
msgid "the information object to fill in"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:83
msgid "Retrieve I3C dev info."
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:100
msgid "Disable IBIs coming from a specific device"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:101
msgid "device on which IBIs should be disabled"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:102
msgid ""
"This function disable IBIs coming from a specific device and wait for all "
"pending IBIs to be processed."
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:125
msgid "Enable IBIs coming from a specific device"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:126
msgid "device on which IBIs should be enabled"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:127
msgid ""
"This function enable IBIs coming from a specific device and wait for all "
"pending IBIs to be processed. This should be called on a device where "
"i3c_device_request_ibi() has succeeded."
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:131
msgid ""
"Note that IBIs from this device might be received before this function "
"returns to its caller."
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:154
msgid "Request an IBI"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:155
msgid "device for which we should enable IBIs"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:157
msgid "``const struct i3c_ibi_setup *req``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:156
msgid "setup requested for this IBI"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:157
msgid ""
"This function is responsible for pre-allocating all resources needed to "
"process IBIs coming from **dev**. When this function returns, the IBI is not "
"enabled until i3c_device_enable_ibi() is called."
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:185
msgid "Free all resources needed for IBI handling"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:186
msgid "device on which you want to release IBI resources"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:187
msgid ""
"This function is responsible for de-allocating resources previously "
"allocated by i3c_device_request_ibi(). It should be called after disabling "
"IBIs with i3c_device_disable_ibi()."
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:205
msgid "Returns the device embedded in **i3cdev**"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:211
#: drivers/i3c/device.c:223
msgid "``struct i3c_device *i3cdev``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:206
#: drivers/i3c/device.c:218
msgid "I3C device"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:208
msgid "a pointer to a device object."
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:217
msgid "Returns the i3c_device_id entry matching **i3cdev**"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:220
msgid "``const struct i3c_device_id *id_table``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:219
msgid "I3C device match table"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:221
msgid "a pointer to an i3c_device_id object or NULL if there's no match."
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:264
msgid "register an I3C device driver"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:270
#: drivers/i3c/device.c:294
msgid "``struct i3c_driver *drv``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:266
msgid "driver to register"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:268
msgid "``struct module *owner``"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:267
msgid "module that owns this driver"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:268
msgid "Register **drv** to the core."
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:288
msgid "unregister an I3C device driver"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:290
msgid "driver to unregister"
msgstr ""

#: ../../../driver-api/i3c/device-driver-api:9: drivers/i3c/device.c:291
msgid "Unregister **drv**."
msgstr ""
