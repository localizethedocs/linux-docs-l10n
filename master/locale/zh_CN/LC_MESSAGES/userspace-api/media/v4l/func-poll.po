# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../userspace-api/media/v4l/func-poll.rst:8
msgid "V4L2 poll()"
msgstr ""

#: ../../../userspace-api/media/v4l/func-poll.rst:11
msgid "Name"
msgstr ""

#: ../../../userspace-api/media/v4l/func-poll.rst:13
msgid "v4l2-poll - Wait for some event on a file descriptor"
msgstr ""

#: ../../../userspace-api/media/v4l/func-poll.rst:16
msgid "Synopsis"
msgstr ""

#: ../../../userspace-api/media/v4l/func-poll.rst:25
msgid "Arguments"
msgstr ""

#: ../../../userspace-api/media/v4l/func-poll.rst:29
msgid "Description"
msgstr ""

#: ../../../userspace-api/media/v4l/func-poll.rst:31
msgid ""
"With the :c:func:`poll()` function applications can suspend execution until "
"the driver has captured data or is ready to accept data for output."
msgstr ""

#: ../../../userspace-api/media/v4l/func-poll.rst:35
msgid ""
"When streaming I/O has been negotiated this function waits until a buffer "
"has been filled by the capture device and can be dequeued with the :ref:"
"`VIDIOC_DQBUF <VIDIOC_QBUF>` ioctl. For output devices this function waits "
"until the device is ready to accept a new buffer to be queued up with the :"
"ref:`VIDIOC_QBUF <VIDIOC_QBUF>` ioctl for display. When buffers are already "
"in the outgoing queue of the driver (capture) or the incoming queue isn't "
"full (display) the function returns immediately."
msgstr ""

#: ../../../userspace-api/media/v4l/func-poll.rst:44
msgid ""
"On success :c:func:`poll()` returns the number of file descriptors that have "
"been selected (that is, file descriptors for which the ``revents`` field of "
"the respective ``struct pollfd`` structure is non-zero). Capture devices set "
"the ``POLLIN`` and ``POLLRDNORM`` flags in the ``revents`` field, output "
"devices the ``POLLOUT`` and ``POLLWRNORM`` flags. When the function timed "
"out it returns a value of zero, on failure it returns -1 and the ``errno`` "
"variable is set appropriately. When the application did not call :ref:"
"`VIDIOC_STREAMON <VIDIOC_STREAMON>` the :c:func:`poll()` function succeeds, "
"but sets the ``POLLERR`` flag in the ``revents`` field. When the application "
"has called :ref:`VIDIOC_STREAMON <VIDIOC_STREAMON>` for a capture device but "
"hasn't yet called :ref:`VIDIOC_QBUF <VIDIOC_QBUF>`, the :c:func:`poll()` "
"function succeeds and sets the ``POLLERR`` flag in the ``revents`` field. "
"For output devices this same situation will cause :c:func:`poll()` to "
"succeed as well, but it sets the ``POLLOUT`` and ``POLLWRNORM`` flags in the "
"``revents`` field."
msgstr ""

#: ../../../userspace-api/media/v4l/func-poll.rst:62
msgid ""
"If an event occurred (see :ref:`VIDIOC_DQEVENT`) then ``POLLPRI`` will be "
"set in the ``revents`` field and :c:func:`poll()` will return."
msgstr ""

#: ../../../userspace-api/media/v4l/func-poll.rst:66
msgid ""
"When use of the :c:func:`read()` function has been negotiated and the driver "
"does not capture yet, the :c:func:`poll()` function starts capturing. When "
"that fails it returns a ``POLLERR`` as above. Otherwise it waits until data "
"has been captured and can be read. When the driver captures continuously (as "
"opposed to, for example, still images) the function may return immediately."
msgstr ""

#: ../../../userspace-api/media/v4l/func-poll.rst:73
msgid ""
"When use of the :c:func:`write()` function has been negotiated and the "
"driver does not stream yet, the :c:func:`poll()` function starts streaming. "
"When that fails it returns a ``POLLERR`` as above. Otherwise it waits until "
"the driver is ready for a non-blocking :c:func:`write()` call."
msgstr ""

#: ../../../userspace-api/media/v4l/func-poll.rst:79
msgid ""
"If the caller is only interested in events (just ``POLLPRI`` is set in the "
"``events`` field), then :c:func:`poll()` will *not* start streaming if the "
"driver does not stream yet. This makes it possible to just poll for events "
"and not for buffers."
msgstr ""

#: ../../../userspace-api/media/v4l/func-poll.rst:84
msgid ""
"All drivers implementing the :c:func:`read()` or :c:func:`write()` function "
"or streaming I/O must also support the :c:func:`poll()` function."
msgstr ""

#: ../../../userspace-api/media/v4l/func-poll.rst:88
msgid "For more details see the :c:func:`poll()` manual page."
msgstr ""

#: ../../../userspace-api/media/v4l/func-poll.rst:91
msgid "Return Value"
msgstr ""

#: ../../../userspace-api/media/v4l/func-poll.rst:93
msgid ""
"On success, :c:func:`poll()` returns the number structures which have non-"
"zero ``revents`` fields, or zero if the call timed out. On error -1 is "
"returned, and the ``errno`` variable is set appropriately:"
msgstr ""

#: ../../../userspace-api/media/v4l/func-poll.rst:97
msgid "EBADF"
msgstr ""

#: ../../../userspace-api/media/v4l/func-poll.rst:98
msgid "One or more of the ``ufds`` members specify an invalid file descriptor."
msgstr ""

#: ../../../userspace-api/media/v4l/func-poll.rst:101
msgid "EBUSY"
msgstr ""

#: ../../../userspace-api/media/v4l/func-poll.rst:102
msgid ""
"The driver does not support multiple read or write streams and the device is "
"already in use."
msgstr ""

#: ../../../userspace-api/media/v4l/func-poll.rst:105
msgid "EFAULT"
msgstr ""

#: ../../../userspace-api/media/v4l/func-poll.rst:106
msgid "``ufds`` references an inaccessible memory area."
msgstr ""

#: ../../../userspace-api/media/v4l/func-poll.rst:108
msgid "EINTR"
msgstr ""

#: ../../../userspace-api/media/v4l/func-poll.rst:109
msgid "The call was interrupted by a signal."
msgstr ""

#: ../../../userspace-api/media/v4l/func-poll.rst:111
msgid "EINVAL"
msgstr ""

#: ../../../userspace-api/media/v4l/func-poll.rst:112
msgid ""
"The ``nfds`` value exceeds the ``RLIMIT_NOFILE`` value. Use ``getrlimit()`` "
"to obtain this value."
msgstr ""
