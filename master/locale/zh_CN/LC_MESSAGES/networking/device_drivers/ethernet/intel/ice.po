# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:5
msgid "Linux Base Driver for the Intel(R) Ethernet Controller 800 Series"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:7
msgid "Intel ice Linux driver. Copyright(c) 2018-2021 Intel Corporation."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:11
msgid "Contents"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:13
msgid "Overview"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:14
#: ../../../networking/device_drivers/ethernet/intel/ice.rst:33
msgid "Identifying Your Adapter"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:15
#: ../../../networking/device_drivers/ethernet/intel/ice.rst:40
msgid "Important Notes"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:16
msgid "Additional Features & Configurations"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:17
#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1097
msgid "Performance Optimization"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:20
msgid "The associated Virtual Function (VF) driver for this driver is iavf."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:22
msgid "Driver information can be obtained using ethtool and lspci."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:24
msgid ""
"For questions related to hardware requirements, refer to the documentation "
"supplied with your Intel adapter. All hardware requirements listed apply to "
"use with Linux."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:28
msgid ""
"This driver supports XDP (Express Data Path) and AF_XDP zero-copy. Note that "
"XDP is blocked for frame sizes larger than 3KB."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:34
msgid ""
"For information on how to identify your adapter, and for the latest Intel "
"network drivers, refer to the Intel Support website: https://www.intel.com/"
"support"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:43
msgid "Packet drops may occur under receive stress"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:44
msgid ""
"Devices based on the Intel(R) Ethernet Controller 800 Series are designed to "
"tolerate a limited amount of system latency during PCIe and DMA "
"transactions. If these transactions take longer than the tolerated latency, "
"it can impact the length of time the packets are buffered in the device and "
"associated memory, which may result in dropped packets. These packets drops "
"typically do not have a noticeable impact on throughput and performance "
"under standard workloads."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:51
msgid ""
"If these packet drops appear to affect your workload, the following may "
"improve the situation:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:54
msgid ""
"Make sure that your system's physical memory is in a high-performance "
"configuration, as recommended by the platform vendor. A common "
"recommendation is for all channels to be populated with a single DIMM module."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:58
msgid ""
"In your system's BIOS/UEFI settings, select the \"Performance\" profile."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:59
msgid ""
"Your distribution may provide tools like \"tuned,\" which can help tweak "
"kernel settings to achieve better standard settings for different workloads."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:64
msgid "Configuring SR-IOV for improved network security"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:65
msgid ""
"In a virtualized environment, on Intel(R) Ethernet Network Adapters that "
"support SR-IOV, the virtual function (VF) may be subject to malicious "
"behavior. Software-generated layer two frames, like IEEE 802.3x (link flow "
"control), IEEE 802.1Qbb (priority based flow-control), and others of this "
"type, are not expected and can throttle traffic between the host and the "
"virtual switch, reducing performance. To resolve this issue, and to ensure "
"isolation from unintended traffic streams, configure all SR-IOV enabled "
"ports for VLAN tagging from the administrative interface on the PF. This "
"configuration allows unexpected, and potentially malicious, frames to be "
"dropped."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:75
msgid ""
"See \"Configuring VLAN Tagging on SR-IOV Enabled Adapter Ports\" later in "
"this README for configuration instructions."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:80
msgid "Do not unload port driver if VF with active VM is bound to it"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:81
msgid ""
"Do not unload a port's driver if a Virtual Function (VF) with an active "
"Virtual Machine (VM) is bound to it. Doing so will cause the port to appear "
"to hang. Once the VM shuts down, or otherwise releases the VF, the command "
"will complete."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:88
msgid "Additional Features and Configurations"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:91
msgid "ethtool"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:92
msgid ""
"The driver utilizes the ethtool interface for driver configuration and "
"diagnostics, as well as displaying statistical information. The latest "
"ethtool version is required for this functionality. Download it at: https://"
"kernel.org/pub/software/network/ethtool/"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:97
msgid ""
"NOTE: The rx_bytes value of ethtool does not match the rx_bytes value of "
"Netdev, due to the 4-byte CRC being stripped by the device. The difference "
"between the two rx_bytes values will be 4 x the number of Rx packets. For "
"example, if Rx packets are 10 and Netdev (software statistics) displays "
"rx_bytes as \"X\", then ethtool (hardware statistics) will display rx_bytes "
"as \"X+40\" (4 bytes CRC x 10 packets)."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:105
msgid "ethtool reset"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:106
msgid "The driver supports 3 types of resets:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:108
msgid ""
"PF reset - resets only components associated with the given PF, does not "
"impact other PFs"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:111
msgid "CORE reset - whole adapter is affected, reset all PFs"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:113
msgid ""
"GLOBAL reset - same as CORE but mac and phy components are also reinitialized"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:115
msgid "These are mapped to ethtool reset flags as follow:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:117
msgid "PF reset:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:119
msgid "# ethtool --reset <ethX> irq dma filter offload"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:121
msgid "CORE reset:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:123
msgid ""
"# ethtool --reset <ethX> irq-shared dma-shared filter-shared offload-shared "
"\\ ram-shared"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:126
msgid "GLOBAL reset:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:128
msgid ""
"# ethtool --reset <ethX> irq-shared dma-shared filter-shared offload-shared "
"\\ mac-shared phy-shared ram-shared"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:131
msgid "In switchdev mode you can reset a VF using port representor:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:133
msgid "# ethtool --reset <repr> irq dma filter offload"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:137
msgid "Viewing Link Messages"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:138
msgid ""
"Link messages will not be displayed to the console if the distribution is "
"restricting system messages. In order to see network driver link messages on "
"your console, set dmesg to eight by entering the following::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:144
msgid "NOTE: This setting is not saved across reboots."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:148
msgid "Dynamic Device Personalization"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:149
msgid ""
"Dynamic Device Personalization (DDP) allows you to change the packet "
"processing pipeline of a device by applying a profile package to the device "
"at runtime. Profiles can be used to, for example, add support for new "
"protocols, change existing protocols, or change default settings. DDP "
"profiles can also be rolled back without rebooting the system."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:155
msgid ""
"The DDP package loads during device initialization. The driver looks for "
"``intel/ice/ddp/ice.pkg`` in your firmware root (typically ``/lib/firmware/"
"`` or ``/lib/firmware/updates/``) and checks that it contains a valid DDP "
"package file."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:160
msgid ""
"NOTE: Your distribution should likely have provided the latest DDP file, but "
"if ice.pkg is missing, you can find it in the linux-firmware repository or "
"from intel.com."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:164
msgid ""
"If the driver is unable to load the DDP package, the device will enter Safe "
"Mode. Safe Mode disables advanced and performance features and supports only "
"basic traffic and minimal functionality, such as updating the NVM or "
"downloading a new driver or DDP package. Safe Mode only applies to the "
"affected physical function and does not impact any other PFs. See the "
"\"Intel(R) Ethernet Adapters and Devices User Guide\" for more details on "
"DDP and Safe Mode."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:171
#: ../../../networking/device_drivers/ethernet/intel/ice.rst:324
#: ../../../networking/device_drivers/ethernet/intel/ice.rst:433
#: ../../../networking/device_drivers/ethernet/intel/ice.rst:872
msgid "NOTES:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:173
msgid ""
"If you encounter issues with the DDP package file, you may need to download "
"an updated driver or DDP package file. See the log messages for more "
"information."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:177
msgid "The ice.pkg file is a symbolic link to the default DDP package file."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:179
msgid ""
"You cannot update the DDP package if any PF drivers are already loaded. To "
"overwrite a package, unload all PFs and then reload the driver with the new "
"package."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:183
msgid ""
"Only the first loaded PF per device can download a package for that device."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:185
msgid ""
"You can install specific DDP package files for different physical devices in "
"the same system. To install a specific DDP package file:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:188
msgid "Download the DDP package file you want for your device."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:190
msgid ""
"Rename the file ice-xxxxxxxxxxxxxxxx.pkg, where 'xxxxxxxxxxxxxxxx' is the "
"unique 64-bit PCI Express device serial number (in hex) of the device you "
"want the package downloaded on. The filename must include the complete "
"serial number (including leading zeros) and be all lowercase. For example, "
"if the 64-bit serial number is b887a3ffffca0568, then the file name would be "
"ice-b887a3ffffca0568.pkg."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:197
msgid ""
"To find the serial number from the PCI bus address, you can use the "
"following command::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:203
msgid ""
"You can use the following command to format the serial number without the "
"dashes::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:209
msgid ""
"Copy the renamed DDP package file to ``/lib/firmware/updates/intel/ice/ddp/"
"``. If the directory does not yet exist, create it before copying the file."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:213
msgid "Unload all of the PFs on the device."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:215
msgid "Reload the driver with the new package."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:217
msgid ""
"NOTE: The presence of a device-specific DDP package file overrides the "
"loading of the default DDP package file (ice.pkg)."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:222
msgid "Intel(R) Ethernet Flow Director"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:223
msgid "The Intel Ethernet Flow Director performs the following tasks:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:225
msgid "Directs receive packets according to their flows to different queues"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:226
msgid "Enables tight control on routing a flow in the platform"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:227
msgid "Matches flows and CPU cores for flow affinity"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:229
msgid "NOTE: This driver supports the following flow types:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:231
msgid "IPv4"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:232
msgid "TCPv4"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:233
msgid "UDPv4"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:234
msgid "SCTPv4"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:235
msgid "IPv6"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:236
msgid "TCPv6"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:237
msgid "UDPv6"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:238
msgid "SCTPv6"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:240
msgid ""
"Each flow type supports valid combinations of IP addresses (source or "
"destination) and UDP/TCP/SCTP ports (source and destination). You can supply "
"only a source IP address, a source IP address and a destination port, or any "
"combination of one or more of these four parameters."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:245
msgid ""
"NOTE: This driver allows you to filter traffic based on a user-defined "
"flexible two-byte pattern and offset by using the ethtool user-def and mask "
"fields. Only L3 and L4 flow types are supported for user-defined flexible "
"filters. For a given flow type, you must clear all Intel Ethernet Flow "
"Director filters before changing the input set (for that flow type)."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:253
msgid "Flow Director Filters"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:254
msgid ""
"Flow Director filters are used to direct traffic that matches specified "
"characteristics. They are enabled through ethtool's ntuple interface. To "
"enable or disable the Intel Ethernet Flow Director and these filters::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:260
msgid ""
"NOTE: When you disable ntuple filters, all the user programmed filters are "
"flushed from the driver cache and hardware. All needed filters must be re-"
"added when ntuple is re-enabled."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:264
msgid "To display all of the active filters::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:268
msgid "To add a new filter::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:286
msgid "To delete a filter::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:293
msgid "EXAMPLES:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:295
msgid "To add a filter that directs packet to queue 2::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:300
msgid "To set a filter using only the source and destination IP address::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:305
msgid "To set a filter based on a user-defined pattern and offset::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:313
msgid ""
"To match TCP traffic sent from 192.168.0.1, port 5300, directed to "
"192.168.0.5, port 80, and then send it to queue 7::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:319
msgid "To add a TCPv4 filter with a partial mask for a source IP subnet::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:326
msgid ""
"For each flow-type, the programmed filters must all have the same matching "
"input set. For example, issuing the following two commands is acceptable::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:332
msgid ""
"Issuing the next two commands, however, is not acceptable, since the first "
"specifies src-ip and the second specifies dst-ip::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:338
msgid ""
"The second command will fail with an error. You may program multiple filters "
"with the same fields, using different values, but, on one device, you may "
"not program two tcp4 filters with different matching fields."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:342
msgid ""
"The ice driver does not support matching on a subportion of a field, thus "
"partial mask fields are not supported."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:347
msgid "Flex Byte Flow Director Filters"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:348
msgid ""
"The driver also supports matching user-defined data within the packet "
"payload. This flexible data is specified using the \"user-def\" field of the "
"ethtool command in the following way:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:355
msgid "``31    28    24    20    16``"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:355
msgid "``15    12    8    4    0``"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:356
msgid "``offset into packet payload``"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:356
msgid "``2 bytes of flexible data``"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:359
msgid "For example,"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:365
msgid ""
"tells the filter to look 4 bytes into the payload and match that value "
"against 0xFFFF. The offset is based on the beginning of the payload, and not "
"the beginning of the packet. Thus"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:373
msgid ""
"would match TCP/IPv4 packets which have the value 0xBEAF 8 bytes into the "
"TCP/IPv4 payload."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:376
msgid ""
"Note that ICMP headers are parsed as 4 bytes of header and 4 bytes of "
"payload. Thus to match the first byte of the payload, you must actually add "
"4 bytes to the offset. Also note that ip4 filters match both ICMP frames as "
"well as raw (unknown) ip4 frames, where the payload will be the L3 payload "
"of the IP4 frame."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:382
msgid ""
"The maximum offset is 64. The hardware will only read up to 64 bytes of data "
"from the payload. The offset must be even because the flexible data is 2 "
"bytes long and must be aligned to byte 0 of the packet payload."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:386
msgid ""
"The user-defined flexible offset is also considered part of the input set "
"and cannot be programmed separately for multiple filters of the same type. "
"However, the flexible data is not part of the input set and multiple filters "
"may use the same offset but match against different data."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:393
msgid "RSS Hash Flow"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:394
msgid ""
"Allows you to set the hash bytes per flow type and any combination of one or "
"more options for Receive Side Scaling (RSS) hash byte configuration."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:427
msgid "Accelerated Receive Flow Steering (aRFS)"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:428
msgid ""
"Devices based on the Intel(R) Ethernet Controller 800 Series support "
"Accelerated Receive Flow Steering (aRFS) on the PF. aRFS is a load-balancing "
"mechanism that allows you to direct packets to the same CPU where an "
"application is running or consuming the packets in that flow."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:435
msgid "aRFS requires that ntuple filtering is enabled via ethtool."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:436
msgid "aRFS support is limited to the following packet types:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:438
msgid "TCP over IPv4 and IPv6"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:439
msgid "UDP over IPv4 and IPv6"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:440
msgid "Nonfragmented packets"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:442
msgid ""
"aRFS only supports Flow Director filters, which consist of the source/"
"destination IP addresses and source/destination ports."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:444
msgid ""
"aRFS and ethtool's ntuple interface both use the device's Flow Director. "
"aRFS and ntuple features can coexist, but you may encounter unexpected "
"results if there's a conflict between aRFS and ntuple requests. See "
"\"Intel(R) Ethernet Flow Director\" for additional information."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:449
msgid "To set up aRFS:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:451
msgid ""
"Enable the Intel Ethernet Flow Director and ntuple filters using ethtool."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:457
msgid "Set up the number of entries in the global flow table. For example:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:464
msgid "Set up the number of entries in the per-queue flow table. For example:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:473
msgid ""
"Disable the IRQ balance daemon (this is only a temporary stop of the service "
"until the next reboot)."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:480
msgid "Configure the interrupt affinity."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:482
msgid "See ``/Documentation/core-api/irq/irq-affinity.rst``"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:485
msgid "To disable aRFS using ethtool::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:489
msgid ""
"NOTE: This command will disable ntuple filters and clear any aRFS filters in "
"software and hardware."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:492
msgid "Example Use Case:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:494
msgid "Set the server application on the desired CPU (e.g., CPU 4)."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:500
msgid ""
"Use netperf to route traffic from the client to CPU 4 on the server with "
"aRFS configured. This example uses TCP over IPv4."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:509
msgid "Enabling Virtual Functions (VFs)"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:510
msgid "Use sysfs to enable virtual functions (VF)."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:512
msgid "For example, you can create 4 VFs as follows::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:516
msgid "To disable VFs, write 0 to the same file::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:520
msgid ""
"The maximum number of VFs for the ice driver is 256 total (all ports). To "
"check how many VFs each PF supports, use the following command::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:525
msgid ""
"Note: You cannot use SR-IOV when link aggregation (LAG)/bonding is active, "
"and vice versa. To enforce this, the driver checks for this mutual exclusion."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:530
msgid "Displaying VF Statistics on the PF"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:531
msgid ""
"Use the following command to display the statistics for the PF and its VFs::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:535
msgid ""
"NOTE: The output of this command can be very large due to the maximum number "
"of possible VFs."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:538
msgid ""
"The PF driver will display a subset of the statistics for the PF and for all "
"VFs that are configured. The PF will always print a statistics block for "
"each of the possible VFs, and it will show zero for all unconfigured VFs."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:544
msgid "Configuring VLAN Tagging on SR-IOV Enabled Adapter Ports"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:545
msgid ""
"To configure VLAN tagging for the ports on an SR-IOV enabled adapter, use "
"the following command. The VLAN configuration should be done before the VF "
"driver is loaded or the VM is booted. The VF is not aware of the VLAN tag "
"being inserted on transmit and removed on received frames (sometimes called "
"\"port VLAN\" mode)."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:555
msgid ""
"For example, the following will configure PF eth0 and the first VF on VLAN "
"10::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:561
msgid "Enabling a VF link if the port is disconnected"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:562
msgid ""
"If the physical function (PF) link is down, you can force link up (from the "
"host PF) on any virtual functions (VF) bound to the PF."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:565
msgid "For example, to force link up on VF 0 bound to PF eth0::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:569
msgid ""
"Note: If the command does not work, it may not be supported by your system."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:573
msgid "Setting the MAC Address for a VF"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:574
msgid "To change the MAC address for the specified VF::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:578
msgid "For example::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:582
msgid "This setting lasts until the PF is reloaded."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:584
msgid ""
"NOTE: Assigning a MAC address for a VF from the host will disable any "
"subsequent requests to change the MAC address from within the VM. This is a "
"security feature. The VM is not aware of this restriction, so if this is "
"attempted in the VM, it will trigger MDD events."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:591
msgid "Trusted VFs and VF Promiscuous Mode"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:592
msgid ""
"This feature allows you to designate a particular VF as trusted and allows "
"that trusted VF to request selective promiscuous mode on the Physical "
"Function (PF)."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:595
msgid ""
"To set a VF as trusted or untrusted, enter the following command in the "
"Hypervisor::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:600
msgid ""
"NOTE: It's important to set the VF to trusted before setting promiscuous "
"mode. If the VM is not trusted, the PF will ignore promiscuous mode requests "
"from the VF. If the VM becomes trusted after the VF driver is loaded, you "
"must make a new request to set the VF to promiscuous."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:605
msgid ""
"Once the VF is designated as trusted, use the following commands in the VM "
"to set the VF to promiscuous mode."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:608
msgid "For promiscuous all::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:613
msgid "For promiscuous Multicast::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:618
msgid ""
"NOTE: By default, the ethtool private flag vf-true-promisc-support is set to "
"\"off,\" meaning that promiscuous mode for the VF will be limited. To set "
"the promiscuous mode for the VF to true promiscuous and allow the VF to see "
"all ingress traffic, use the following command::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:625
msgid ""
"The vf-true-promisc-support private flag does not enable promiscuous mode; "
"rather, it designates which type of promiscuous mode (limited or true) you "
"will get when you enable promiscuous mode using the ip link commands above. "
"Note that this is a global setting that affects the entire device. However, "
"the vf-true-promisc-support private flag is only exposed to the first PF of "
"the device. The PF remains in limited promiscuous mode regardless of the vf-"
"true-promisc-support setting."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:633
msgid "Next, add a VLAN interface on the VF interface. For example::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:637
msgid ""
"Note that the order in which you set the VF to promiscuous mode and add the "
"VLAN interface does not matter (you can do either first). The result in this "
"example is that the VF will get all traffic that is tagged with VLAN 100."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:643
msgid "Malicious Driver Detection (MDD) for VFs"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:644
msgid ""
"Some Intel Ethernet devices use Malicious Driver Detection (MDD) to detect "
"malicious traffic from the VF and disable Tx/Rx queues or drop the offending "
"packet until a VF driver reset occurs. You can view MDD messages in the PF's "
"system log using the dmesg command."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:649
msgid ""
"If the PF driver logs MDD events from the VF, confirm that the correct VF "
"driver is installed."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:651
msgid ""
"To restore functionality, you can manually reload the VF or VM or enable "
"automatic VF resets."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:653
msgid ""
"When automatic VF resets are enabled, the PF driver will immediately reset "
"the VF and reenable queues when it detects MDD events on the receive path."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:655
msgid ""
"If automatic VF resets are disabled, the PF will not automatically reset the "
"VF when it detects MDD events."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:658
msgid "To enable or disable automatic VF resets, use the following command::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:664
msgid "MAC and VLAN Anti-Spoofing Feature for VFs"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:665
msgid ""
"When a malicious driver on a Virtual Function (VF) interface attempts to "
"send a spoofed packet, it is dropped by the hardware and not transmitted."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:668
msgid "NOTE: This feature can be disabled for a specific VF::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:674
msgid "Jumbo Frames"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:675
msgid ""
"Jumbo Frames support is enabled by changing the Maximum Transmission Unit "
"(MTU) to a value larger than the default value of 1500."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:678
msgid ""
"Use the ifconfig command to increase the MTU size. For example, enter the "
"following where <ethX> is the interface number::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:683
msgid "Alternatively, you can use the ip command as follows::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:688
msgid "This setting is not saved across reboots."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:691
msgid ""
"NOTE: The maximum MTU setting for jumbo frames is 9702. This corresponds to "
"the maximum jumbo frame size of 9728 bytes."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:694
msgid ""
"NOTE: This driver will attempt to use multiple page sized buffers to receive "
"each jumbo packet. This should help to avoid buffer starvation issues when "
"allocating receive packets."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:698
msgid ""
"NOTE: Packet loss may have a greater impact on throughput when you use jumbo "
"frames. If you observe a drop in performance after enabling jumbo frames, "
"enabling flow control may mitigate the issue."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:704
msgid "Speed and Duplex Configuration"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:705
msgid ""
"In addressing speed and duplex configuration issues, you need to distinguish "
"between copper-based adapters and fiber-based adapters."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:708
msgid ""
"In the default mode, an Intel(R) Ethernet Network Adapter using copper "
"connections will attempt to auto-negotiate with its link partner to "
"determine the best setting. If the adapter cannot establish link with the "
"link partner using auto-negotiation, you may need to manually configure the "
"adapter and link partner to identical settings to establish link and pass "
"packets. This should only be needed when attempting to link with an older "
"switch that does not support auto-negotiation or one that has been forced to "
"a specific speed or duplex mode. Your link partner must match the setting "
"you choose. 1 Gbps speeds and higher cannot be forced. Use the "
"autonegotiation advertising setting to manually set devices for 1 Gbps and "
"higher."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:719
msgid ""
"Speed, duplex, and autonegotiation advertising are configured through the "
"ethtool utility. For the latest version, download and install ethtool from "
"the following website:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:723
msgid "https://kernel.org/pub/software/network/ethtool/"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:725
msgid ""
"To see the speed configurations your device supports, run the following::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:729
msgid ""
"Caution: Only experienced network administrators should force speed and "
"duplex or change autonegotiation advertising manually. The settings at the "
"switch must always match the adapter settings. Adapter performance may "
"suffer or your adapter may not operate if you configure the adapter "
"differently from your switch."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:737
msgid "Data Center Bridging (DCB)"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:738
msgid ""
"NOTE: The kernel assumes that TC0 is available, and will disable Priority "
"Flow Control (PFC) on the device if TC0 is not available. To fix this, "
"ensure TC0 is enabled when setting up DCB on your switch."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:742
msgid ""
"DCB is a configuration Quality of Service implementation in hardware. It "
"uses the VLAN priority tag (802.1p) to filter traffic. That means that there "
"are 8 different priorities that traffic can be filtered into. It also "
"enables priority flow control (802.1Qbb) which can limit or eliminate the "
"number of dropped packets during network stress. Bandwidth can be allocated "
"to each of these priorities, which is enforced at the hardware level "
"(802.1Qaz)."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:749
msgid ""
"DCB is normally configured on the network using the DCBX protocol "
"(802.1Qaz), a specialization of LLDP (802.1AB). The ice driver supports the "
"following mutually exclusive variants of DCBX support:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:753
msgid "Firmware-based LLDP Agent"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:754
msgid "Software-based LLDP Agent"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:756
msgid ""
"In firmware-based mode, firmware intercepts all LLDP traffic and handles "
"DCBX negotiation transparently for the user. In this mode, the adapter "
"operates in \"willing\" DCBX mode, receiving DCB settings from the link "
"partner (typically a switch). The local user can only query the negotiated "
"DCB configuration. For information on configuring DCBX parameters on a "
"switch, please consult the switch manufacturer's documentation."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:763
msgid ""
"In software-based mode, LLDP traffic is forwarded to the network stack and "
"user space, where a software agent can handle it. In this mode, the adapter "
"can operate in either \"willing\" or \"nonwilling\" DCBX mode and DCB "
"configuration can be both queried and set locally. This mode requires the FW-"
"based LLDP Agent to be disabled."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:769
#: ../../../networking/device_drivers/ethernet/intel/ice.rst:831
#: ../../../networking/device_drivers/ethernet/intel/ice.rst:858
#: ../../../networking/device_drivers/ethernet/intel/ice.rst:922
msgid "NOTE:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:771
msgid ""
"You can enable and disable the firmware-based LLDP Agent using an ethtool "
"private flag. Refer to the \"FW-LLDP (Firmware Link Layer Discovery "
"Protocol)\" section in this README for more information."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:774
msgid ""
"In software-based DCBX mode, you can configure DCB parameters using software "
"LLDP/DCBX agents that interface with the Linux kernel's DCB Netlink API. We "
"recommend using OpenLLDP as the DCBX agent when running in software mode. "
"For more information, see the OpenLLDP man pages and https://github.com/"
"intel/openlldp."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:779
msgid ""
"The driver implements the DCB netlink interface layer to allow the user "
"space to communicate with the driver and query DCB configuration for the "
"port."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:781
msgid "iSCSI with DCB is not supported."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:785
msgid "FW-LLDP (Firmware Link Layer Discovery Protocol)"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:786
msgid ""
"Use ethtool to change FW-LLDP settings. The FW-LLDP setting is per port and "
"persists across boots."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:789
msgid "To enable LLDP::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:793
msgid "To disable LLDP::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:797
msgid "To check the current LLDP setting::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:801
msgid ""
"NOTE: You must enable the UEFI HII \"LLDP Agent\" attribute for this setting "
"to take effect. If \"LLDP AGENT\" is set to disabled, you cannot enable it "
"from the OS."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:807
msgid "Flow Control"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:808
msgid ""
"Ethernet Flow Control (IEEE 802.3x) can be configured with ethtool to enable "
"receiving and transmitting pause frames for ice. When transmit is enabled, "
"pause frames are generated when the receive packet buffer crosses a "
"predefined threshold. When receive is enabled, the transmit unit will halt "
"for the time delay specified when a pause frame is received."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:814
msgid "NOTE: You must have a flow control capable link partner."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:816
msgid "Flow Control is disabled by default."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:818
msgid "Use ethtool to change the flow control settings."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:820
msgid "To enable or disable Rx or Tx Flow Control::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:824
msgid ""
"Note: This command only enables or disables Flow Control if auto-negotiation "
"is disabled. If auto-negotiation is enabled, this command changes the "
"parameters used for auto-negotiation with the link partner."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:828
msgid ""
"Note: Flow Control auto-negotiation is part of link auto-negotiation. "
"Depending on your device, you may not be able to change the auto-negotiation "
"setting."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:833
msgid ""
"The ice driver requires flow control on both the port and link partner. If "
"flow control is disabled on one of the sides, the port may appear to hang on "
"heavy traffic."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:836
msgid ""
"You may encounter issues with link-level flow control (LFC) after disabling "
"DCB. The LFC status may show as enabled but traffic is not paused. To "
"resolve this issue, disable and reenable LFC using ethtool::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:845
msgid "NAPI"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:847
msgid "This driver supports NAPI (Rx polling mode)."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:849
msgid ""
"See :ref:`Documentation/networking/napi.rst <napi>` for more information."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:852
msgid "MACVLAN"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:853
msgid ""
"This driver supports MACVLAN. Kernel support for MACVLAN can be tested by "
"checking if the MACVLAN driver is loaded. You can run 'lsmod | grep macvlan' "
"to see if the MACVLAN driver is loaded or run 'modprobe macvlan' to try to "
"load the MACVLAN driver."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:860
msgid ""
"In passthru mode, you can only set up one MACVLAN device. It will inherit "
"the MAC address of the underlying PF (Physical Function) device."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:865
msgid "IEEE 802.1ad (QinQ) Support"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:866
msgid ""
"The IEEE 802.1ad standard, informally known as QinQ, allows for multiple "
"VLAN IDs within a single Ethernet frame. VLAN IDs are sometimes referred to "
"as \"tags,\" and multiple VLAN IDs are thus referred to as a \"tag stack.\" "
"Tag stacks allow L2 tunneling and the ability to segregate traffic within a "
"particular VLAN ID, among other uses."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:874
msgid ""
"Receive checksum offloads and VLAN acceleration are not supported for "
"802.1ad (QinQ) packets."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:877
msgid ""
"0x88A8 traffic will not be received unless VLAN stripping is disabled with "
"the following command::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:882
msgid ""
"0x88A8/0x8100 double VLANs cannot be used with 0x8100 or 0x8100/0x8100 VLANS "
"configured on the same port. 0x88a8/0x8100 traffic will not be received if "
"0x8100 VLANs are configured."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:886
msgid ""
"The VF can only transmit 0x88A8/0x8100 (i.e., 802.1ad/802.1Q) traffic if:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:888
msgid "The VF is not assigned a port VLAN."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:889
msgid ""
"spoofchk is disabled from the PF. If you enable spoofchk, the VF will not "
"transmit 0x88A8/0x8100 traffic."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:892
msgid ""
"The VF may not receive all network traffic based on the Inner VLAN header "
"when VF true promiscuous mode (vf-true-promisc-support) and double VLANs are "
"enabled in SR-IOV mode."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:896
msgid "The following are examples of how to configure 802.1ad (QinQ)::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:905
msgid "Tunnel/Overlay Stateless Offloads"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:906
msgid ""
"Supported tunnels and overlays include VXLAN, GENEVE, and others depending "
"on hardware and software configuration. Stateless offloads are enabled by "
"default."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:909
msgid "To view the current state of all offloads::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:915
msgid "UDP Segmentation Offload"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:916
msgid ""
"Allows the adapter to offload transmit segmentation of UDP packets with "
"payloads up to 64K into valid Ethernet frames. Because the adapter hardware "
"is able to complete data segmentation much faster than operating system "
"software, this feature may improve transmission performance. In addition, "
"the adapter may use fewer CPU resources."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:924
msgid ""
"The application sending UDP packets must support UDP segmentation offload."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:926
msgid ""
"To enable/disable UDP Segmentation Offload, issue the following command::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:931
msgid "PTP pin interface"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:932
msgid ""
"All adapters support standard PTP pin interface. SDPs (Software Definable "
"Pin) are single ended pins with both periodic output and external timestamp "
"supported. There are also specific differential input/output pins "
"(TIME_SYNC, 1PPS) with only one of the functions supported."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:937
msgid ""
"There are adapters with DPLL, where pins are connected to the DPLL instead "
"of being exposed on the board. You have to be aware that in those "
"configurations, only SDP pins are exposed and each pin has its own fixed "
"direction. To see input signal on those PTP pins, you need to configure DPLL "
"properly. Output signal is only visible on DPLL and to send it to the board "
"SMA/U.FL pins, DPLL output pins have to be manually configured."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:945
msgid "GNSS module"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:946
msgid ""
"Requires kernel compiled with CONFIG_GNSS=y or CONFIG_GNSS=m. Allows user to "
"read messages from the GNSS hardware module and write supported commands. If "
"the module is physically present, a GNSS device is spawned: ``/dev/"
"gnss<id>``. The protocol of write command is dependent on the GNSS hardware "
"module as the driver writes raw bytes by the GNSS object to the receiver "
"through i2c. Please refer to the hardware GNSS module documentation for "
"configuration details."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:956
msgid "Firmware (FW) logging"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:957
msgid ""
"The driver supports FW logging via the debugfs interface on PF 0 only. The "
"FW running on the NIC must support FW logging; if the FW doesn't support FW "
"logging the 'fwlog' file will not get created in the ice debugfs directory."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:962
msgid "Module configuration"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:963
msgid ""
"Firmware logging is configured on a per module basis. Each module can be set "
"to a value independent of the other modules (unless the module 'all' is "
"specified). The modules will be instantiated under the 'fwlog/modules' "
"directory."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:967
msgid ""
"The user can set the log level for a module by writing to the module file "
"like this::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:972
msgid "where"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:974
msgid ""
"log_level is a name as described below. Each level includes the messages "
"from the previous/lower level"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:977
msgid "none"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:978
msgid "error"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:979
msgid "warning"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:980
msgid "normal"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:981
msgid "verbose"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:983
msgid ""
"module is a name that represents the module to receive events for. The "
"module names are"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:986
msgid "general"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:987
msgid "ctrl"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:988
msgid "link"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:989
msgid "link_topo"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:990
msgid "dnl"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:991
msgid "i2c"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:992
msgid "sdp"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:993
msgid "mdio"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:994
msgid "adminq"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:995
msgid "hdma"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:996
msgid "lldp"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:997
msgid "dcbx"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:998
msgid "dcb"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:999
msgid "xlr"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1000
msgid "nvm"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1001
msgid "auth"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1002
msgid "vpd"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1003
msgid "iosf"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1004
msgid "parser"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1005
msgid "sw"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1006
msgid "scheduler"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1007
msgid "txq"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1008
msgid "rsvd"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1009
msgid "post"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1010
msgid "watchdog"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1011
msgid "task_dispatch"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1012
msgid "mng"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1013
msgid "synce"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1014
msgid "health"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1015
msgid "tsdrv"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1016
msgid "pfreg"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1017
msgid "mdlver"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1018
msgid "all"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1020
msgid ""
"The name 'all' is special and allows the user to set all of the modules to "
"the specified log_level or to read the log_level of all of the modules."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1024
msgid "Example usage to configure the modules"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1026
msgid "To set a single module to 'verbose'::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1030
msgid "To set multiple modules then issue the command multiple times::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1036
msgid "To set all the modules to the same value::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1040
msgid "To read the log_level of a specific module (e.g. module 'general')::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1044
msgid "To read the log_level of all the modules::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1049
msgid "Enabling FW log"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1050
msgid ""
"Configuring the modules indicates to the FW that the configured modules "
"should generate events that the driver is interested in, but it **does not** "
"send the events to the driver until the enable message is sent to the FW. To "
"do this the user can write a 1 (enable) or 0 (disable) to 'fwlog/enable'. An "
"example is::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1059
msgid "Retrieving FW log data"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1060
msgid ""
"The FW log data can be retrieved by reading from 'fwlog/data'. The user can "
"write any value to 'fwlog/data' to clear the data. The data can only be "
"cleared when FW logging is disabled. The FW log data is a binary file that "
"is sent to Intel and used to help debug user issues."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1065
msgid "An example to read the data is::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1069
msgid "An example to clear the data is::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1074
msgid "Changing how often the log events are sent to the driver"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1075
msgid ""
"The driver receives FW log data from the Admin Receive Queue (ARQ). The "
"frequency that the FW sends the ARQ events can be configured by writing to "
"'fwlog/nr_messages'. The range is 1-128 (1 means push every log message, 128 "
"means push only when the max AQ command buffer is full). The suggested value "
"is 10. The user can see what the value is configured to by reading 'fwlog/"
"nr_messages'. An example to set the value is::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1085
msgid "Configuring the amount of memory used to store FW log data"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1086
msgid ""
"The driver stores FW log data within the driver. The default size of the "
"memory used to store the data is 1MB. Some use cases may require more or "
"less data so the user can change the amount of memory that is allocated for "
"FW log data. To change the amount of memory then write to 'fwlog/log_size'. "
"The value must be one of: 128K, 256K, 512K, 1M, or 2M. FW logging must be "
"disabled to change the value. An example of changing the value is::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1098
msgid ""
"Driver defaults are meant to fit a wide variety of workloads, but if further "
"optimization is required, we recommend experimenting with the following "
"settings."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1104
msgid "Rx Descriptor Ring Size"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1105
msgid ""
"To reduce the number of Rx packet discards, increase the number of Rx "
"descriptors for each Rx ring using ethtool."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1108
msgid ""
"Check if the interface is dropping Rx packets due to buffers being full "
"(rx_dropped.nic can mean that there is no PCIe bandwidth)::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1113
msgid ""
"If the previous command shows drops on queues, it may help to increase the "
"number of descriptors using 'ethtool -G'::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1119
msgid ""
"This can provide temporary buffering for issues that create latency while "
"the CPUs process descriptors."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1124
msgid "Interrupt Rate Limiting"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1125
msgid ""
"This driver supports an adaptive interrupt throttle rate (ITR) mechanism "
"that is tuned for general workloads. The user can customize the interrupt "
"rate control for specific workloads, via ethtool, adjusting the number of "
"microseconds between interrupts."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1130
msgid "To set the interrupt rate manually, you must disable adaptive mode::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1134
msgid "For lower CPU utilization:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1136
msgid ""
"Disable adaptive ITR and lower Rx and Tx interrupts. The examples below "
"affect every queue of the specified interface."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1139
msgid ""
"Setting rx-usecs and tx-usecs to 80 will limit interrupts to about 12,500 "
"interrupts per second per queue::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1144
msgid "For reduced latency:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1146
msgid ""
"Disable adaptive ITR and ITR by setting rx-usecs and tx-usecs to 0 using "
"ethtool::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1151
msgid "Per-queue interrupt rate settings:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1153
msgid ""
"The following examples are for queues 1 and 3, but you can adjust other "
"queues."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1156
msgid ""
"To disable Rx adaptive ITR and set static Rx ITR to 10 microseconds or about "
"100,000 interrupts/second, for queues 1 and 3::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1162
msgid "To show the current coalesce settings for queues 1 and 3::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1166
msgid "Bounding interrupt rates using rx-usecs-high:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:0
msgid "Valid Range"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1168
msgid "0-236 (0=no limit)"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1170
msgid ""
"The range of 0-236 microseconds provides an effective range of 4,237 to "
"250,000 interrupts per second. The value of rx-usecs-high can be set "
"independently of rx-usecs and tx-usecs in the same ethtool command, and is "
"also independent of the adaptive interrupt moderation algorithm. The "
"underlying hardware supports granularity in 4-microsecond intervals, so "
"adjacent values may result in the same interrupt rate."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1177
msgid ""
"The following command would disable adaptive interrupt moderation, and allow "
"a maximum of 5 microseconds before indicating a receive or transmit was "
"complete. However, instead of resulting in as many as 200,000 interrupts per "
"second, it limits total interrupts per second to 50,000 via the rx-usecs-"
"high parameter."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1190
msgid "Virtualized Environments"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1191
msgid ""
"In addition to the other suggestions in this section, the following may be "
"helpful to optimize performance in VMs."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1194
msgid ""
"Using the appropriate mechanism (vcpupin) in the VM, pin the CPUs to "
"individual LCPUs, making sure to use a set of CPUs included in the device's "
"local_cpulist: ``/sys/class/net/<ethX>/device/local_cpulist``."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1198
msgid ""
"Configure as many Rx/Tx queues in the VM as available. (See the iavf driver "
"documentation for the number of queues supported.) For example::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1205
msgid "Support"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1206
msgid ""
"For general information, go to the Intel support website at: https://www."
"intel.com/support/"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1209
msgid ""
"If an issue is identified with the released source code on a supported "
"kernel with a supported adapter, email the specific information related to "
"the issue to intel-wired-lan@lists.osuosl.org."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1215
msgid "Trademarks"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1216
msgid ""
"Intel is a trademark or registered trademark of Intel Corporation or its "
"subsidiaries in the United States and/or other countries."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/ice.rst:1219
msgid "Other names and brands may be claimed as the property of others."
msgstr ""
