# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../networking/multi-pf-netdev.rst:6
msgid "Multi-PF Netdev"
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:9
msgid "Contents"
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:11
msgid "`Background`_"
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:12
msgid "`Overview`_"
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:13
msgid "`mlx5 implementation`_"
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:14
msgid "`Channels distribution`_"
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:15
msgid "`Observability`_"
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:16
msgid "`Steering`_"
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:17
msgid "`Mutually exclusive features`_"
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:20
msgid "Background"
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:22
msgid ""
"The Multi-PF NIC technology enables several CPUs within a multi-socket "
"server to connect directly to the network, each through its own dedicated "
"PCIe interface. Through either a connection harness that splits the PCIe "
"lanes between two cards or by bifurcating a PCIe slot for a single card. "
"This results in eliminating the network traffic traversing over the internal "
"bus between the sockets, significantly reducing overhead and latency, in "
"addition to reducing CPU utilization and increasing network throughput."
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:30
msgid "Overview"
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:32
msgid ""
"The feature adds support for combining multiple PFs of the same port in a "
"Multi-PF environment under one netdev instance. It is implemented in the "
"netdev layer. Lower-layer instances like pci func, sysfs entry, and devlink "
"are kept separate. Passing traffic through different devices belonging to "
"different NUMA sockets saves cross-NUMA traffic and allows apps running on "
"the same netdev from different NUMAs to still feel a sense of proximity to "
"the device and achieve improved performance."
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:40
msgid "mlx5 implementation"
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:42
msgid ""
"Multi-PF or Socket-direct in mlx5 is achieved by grouping PFs together which "
"belong to the same NIC and has the socket-direct property enabled, once all "
"PFs are probed, we create a single netdev to represent all of them, "
"symmetrically, we destroy the netdev whenever any of the PFs is removed."
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:46
msgid ""
"The netdev network channels are distributed between all devices, a proper "
"configuration would utilize the correct close NUMA node when working on a "
"certain app/CPU."
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:49
msgid ""
"We pick one PF to be a primary (leader), and it fills a special role. The "
"other devices (secondaries) are disconnected from the network at the chip "
"level (set to silent mode). In silent mode, no south <-> north traffic "
"flowing directly through a secondary PF. It needs the assistance of the "
"leader PF (east <-> west traffic) to function. All Rx/Tx traffic is steered "
"through the primary to/from the secondaries."
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:55
msgid ""
"Currently, we limit the support to PFs only, and up to two PFs (sockets)."
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:58
msgid "Channels distribution"
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:60
msgid ""
"We distribute the channels between the different PFs to achieve local NUMA "
"node performance on multiple NUMA nodes."
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:63
msgid ""
"Each combined channel works against one specific PF, creating all its "
"datapath queues against it. We distribute channels to PFs in a round-robin "
"policy."
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:80
msgid ""
"The reason we prefer round-robin is, it is less influenced by changes in the "
"number of channels. The mapping between a channel index and a PF is fixed, "
"no matter how many channels the user configures. As the channel stats are "
"persistent across channel's closure, changing the mapping every single time "
"would turn the accumulative stats less representing of the channel's history."
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:85
msgid ""
"This is achieved by using the correct core device instance (mdev) in each "
"channel, instead of them all using the same instance under \"priv->mdev\"."
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:89
msgid "Observability"
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:90
msgid ""
"The relation between PF, irq, napi, and queue can be observed via netlink "
"spec::"
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:111
msgid "Here you can clearly observe our channels distribution policy::"
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:121
msgid "Steering"
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:122
msgid ""
"Secondary PFs are set to \"silent\" mode, meaning they are disconnected from "
"the network."
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:124
msgid ""
"In Rx, the steering tables belong to the primary PF only, and it is its role "
"to distribute incoming traffic to other PFs, via cross-vhca steering "
"capabilities. Still maintain a single default RSS table, that is capable of "
"pointing to the receive queues of a different PF."
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:128
msgid ""
"In Tx, the primary PF creates a new Tx flow table, which is aliased by the "
"secondaries, so they can go out to the network through it."
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:131
msgid ""
"In addition, we set default XPS configuration that, based on the CPU, "
"selects an SQ belonging to the PF on the same node as the CPU."
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:134
msgid "XPS default config example:"
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:136
msgid ""
"NUMA node(s):          2 NUMA node0 CPU(s):     0-11 NUMA node1 CPU(s):     "
"12-23"
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:140
msgid "PF0 on node0, PF1 on node1."
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:142
msgid "/sys/class/net/eth2/queues/tx-0/xps_cpus:000001"
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:143
msgid "/sys/class/net/eth2/queues/tx-1/xps_cpus:001000"
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:144
msgid "/sys/class/net/eth2/queues/tx-2/xps_cpus:000002"
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:145
msgid "/sys/class/net/eth2/queues/tx-3/xps_cpus:002000"
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:146
msgid "/sys/class/net/eth2/queues/tx-4/xps_cpus:000004"
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:147
msgid "/sys/class/net/eth2/queues/tx-5/xps_cpus:004000"
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:148
msgid "/sys/class/net/eth2/queues/tx-6/xps_cpus:000008"
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:149
msgid "/sys/class/net/eth2/queues/tx-7/xps_cpus:008000"
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:150
msgid "/sys/class/net/eth2/queues/tx-8/xps_cpus:000010"
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:151
msgid "/sys/class/net/eth2/queues/tx-9/xps_cpus:010000"
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:152
msgid "/sys/class/net/eth2/queues/tx-10/xps_cpus:000020"
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:153
msgid "/sys/class/net/eth2/queues/tx-11/xps_cpus:020000"
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:154
msgid "/sys/class/net/eth2/queues/tx-12/xps_cpus:000040"
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:155
msgid "/sys/class/net/eth2/queues/tx-13/xps_cpus:040000"
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:156
msgid "/sys/class/net/eth2/queues/tx-14/xps_cpus:000080"
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:157
msgid "/sys/class/net/eth2/queues/tx-15/xps_cpus:080000"
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:158
msgid "/sys/class/net/eth2/queues/tx-16/xps_cpus:000100"
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:159
msgid "/sys/class/net/eth2/queues/tx-17/xps_cpus:100000"
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:160
msgid "/sys/class/net/eth2/queues/tx-18/xps_cpus:000200"
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:161
msgid "/sys/class/net/eth2/queues/tx-19/xps_cpus:200000"
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:162
msgid "/sys/class/net/eth2/queues/tx-20/xps_cpus:000400"
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:163
msgid "/sys/class/net/eth2/queues/tx-21/xps_cpus:400000"
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:164
msgid "/sys/class/net/eth2/queues/tx-22/xps_cpus:000800"
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:165
msgid "/sys/class/net/eth2/queues/tx-23/xps_cpus:800000"
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:168
msgid "Mutually exclusive features"
msgstr ""

#: ../../../networking/multi-pf-netdev.rst:170
msgid ""
"The nature of Multi-PF, where different channels work with different PFs, "
"conflicts with stateful features where the state is maintained in one of the "
"PFs. For example, in the TLS device-offload feature, special context objects "
"are created per connection and maintained in the PF.  Transitioning between "
"different RQs/SQs would break the feature. Hence, we disable this "
"combination for now."
msgstr ""
