# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-20 11:24+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../networking/driver.rst:5
msgid "Softnet Driver Issues"
msgstr ""

#: ../../../networking/driver.rst:8
msgid "Probing guidelines"
msgstr ""

#: ../../../networking/driver.rst:11
msgid "Address validation"
msgstr ""

#: ../../../networking/driver.rst:13
msgid ""
"Any hardware layer address you obtain for your device should be verified.  "
"For example, for ethernet check it with linux/etherdevice.h:"
"is_valid_ether_addr()"
msgstr ""

#: ../../../networking/driver.rst:18
msgid "Close/stop guidelines"
msgstr ""

#: ../../../networking/driver.rst:21
msgid "Quiescence"
msgstr ""

#: ../../../networking/driver.rst:23
msgid ""
"After the ndo_stop routine has been called, the hardware must not receive or "
"transmit any data.  All in flight packets must be aborted. If necessary, "
"poll or wait for completion of any reset commands."
msgstr ""

#: ../../../networking/driver.rst:29
msgid "Auto-close"
msgstr ""

#: ../../../networking/driver.rst:31
msgid ""
"The ndo_stop routine will be called by unregister_netdevice if device is "
"still UP."
msgstr ""

#: ../../../networking/driver.rst:35
msgid "Transmit path guidelines"
msgstr ""

#: ../../../networking/driver.rst:38
msgid "Stop queues in advance"
msgstr ""

#: ../../../networking/driver.rst:40
msgid ""
"The ndo_start_xmit method must not return NETDEV_TX_BUSY under any normal "
"circumstances.  It is considered a hard error unless there is no way your "
"device can tell ahead of time when its transmit function will become busy."
msgstr ""

#: ../../../networking/driver.rst:45
msgid ""
"Instead it must maintain the queue properly.  For example, for a driver "
"implementing scatter-gather this means:"
msgstr ""

#: ../../../networking/driver.rst:91
msgid "And then at the end of your TX reclamation event handling:"
msgstr ""

#: ../../../networking/driver.rst:101
msgid "Lockless queue stop / wake helper macros"
msgstr ""

#: ../../../networking/driver:103: include/net/netdev_queues.h:157
msgid ""
"The netif_txq_maybe_stop() and __netif_txq_completed_wake() macros are "
"designed to safely implement stopping and waking netdev queues without full "
"lock protection."
msgstr ""

#: ../../../networking/driver:103: include/net/netdev_queues.h:161
msgid ""
"We assume that there can be no concurrent stop attempts and no concurrent "
"wake attempts. The try-stop should happen from the xmit handler, while wake "
"up should be triggered from NAPI poll context. The two may run concurrently "
"(single producer, single consumer)."
msgstr ""

#: ../../../networking/driver:103: include/net/netdev_queues.h:166
msgid ""
"The try-stop side is expected to run from the xmit handler and therefore it "
"does not reschedule Tx (netif_tx_start_queue() instead of "
"netif_tx_wake_queue()). Uses of the ``stop`` macros outside of the xmit "
"handler may lead to xmit queue being enabled but not run. The waking side "
"does not have similar context restrictions."
msgstr ""

#: ../../../networking/driver:103: include/net/netdev_queues.h:172
msgid ""
"The macros guarantee that rings will not remain stopped if there's space "
"available, but they do *not* prevent false wake ups when the ring is full! "
"Drivers should check for ring full at the start for the xmit handler."
msgstr ""

#: ../../../networking/driver:103: include/net/netdev_queues.h:177
msgid ""
"All descriptor ring indexes (and other relevant shared state) must be "
"updated before invoking the macros."
msgstr ""

#: ../../../networking/driver.rst:107
msgid "No exclusive ownership"
msgstr ""

#: ../../../networking/driver.rst:109
msgid ""
"An ndo_start_xmit method must not modify the shared parts of a cloned SKB."
msgstr ""

#: ../../../networking/driver.rst:113
msgid "Timely completions"
msgstr ""

#: ../../../networking/driver.rst:115
msgid ""
"Do not forget that once you return NETDEV_TX_OK from your ndo_start_xmit "
"method, it is your driver's responsibility to free up the SKB and in some "
"finite amount of time."
msgstr ""

#: ../../../networking/driver.rst:119
msgid ""
"For example, this means that it is not allowed for your TX mitigation scheme "
"to let TX packets \"hang out\" in the TX ring unreclaimed forever if no new "
"TX packets are sent. This error can deadlock sockets waiting for send buffer "
"room to be freed up."
msgstr ""

#: ../../../networking/driver.rst:125
msgid ""
"If you return NETDEV_TX_BUSY from the ndo_start_xmit method, you must not "
"keep any reference to that SKB and you must not attempt to free it up."
msgstr ""
