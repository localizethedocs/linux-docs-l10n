# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../networking/devlink/index.rst:2
msgid "Linux Devlink Documentation"
msgstr ""

#: ../../../networking/devlink/index.rst:4
msgid ""
"devlink is an API to expose device information and resources not directly "
"related to any device class, such as chip-wide/switch-ASIC-wide "
"configuration."
msgstr ""

#: ../../../networking/devlink/index.rst:8
msgid "Locking"
msgstr ""

#: ../../../networking/devlink/index.rst:10
msgid ""
"Driver facing APIs are currently transitioning to allow more explicit "
"locking. Drivers can use the existing ``devlink_*`` set of APIs, or new APIs "
"prefixed by ``devl_*``. The older APIs handle all the locking in devlink "
"core, but don't allow registration of most sub-objects once the main devlink "
"object is itself registered. The newer ``devl_*`` APIs assume the devlink "
"instance lock is already held. Drivers can take the instance lock by calling "
"``devl_lock()``. It is also held all callbacks of devlink netlink commands."
msgstr ""

#: ../../../networking/devlink/index.rst:19
msgid ""
"Drivers are encouraged to use the devlink instance lock for their own needs."
msgstr ""

#: ../../../networking/devlink/index.rst:21
msgid ""
"Drivers need to be cautious when taking devlink instance lock and taking "
"RTNL lock at the same time. Devlink instance lock needs to be taken first, "
"only after that RTNL lock could be taken."
msgstr ""

#: ../../../networking/devlink/index.rst:26
msgid "Nested instances"
msgstr ""

#: ../../../networking/devlink/index.rst:28
msgid ""
"Some objects, like linecards or port functions, could have another devlink "
"instances created underneath. In that case, drivers should make sure to "
"respect following rules:"
msgstr ""

#: ../../../networking/devlink/index.rst:32
msgid ""
"Lock ordering should be maintained. If driver needs to take instance lock of "
"both nested and parent instances at the same time, devlink instance lock of "
"the parent instance should be taken first, only then instance lock of the "
"nested instance could be taken."
msgstr ""

#: ../../../networking/devlink/index.rst:36
msgid ""
"Driver should use object-specific helpers to setup the nested relationship:"
msgstr ""

#: ../../../networking/devlink/index.rst:39
msgid ""
"``devl_nested_devlink_set()`` - called to setup devlink -> nested devlink "
"relationship (could be user for multiple nested instances."
msgstr ""

#: ../../../networking/devlink/index.rst:41
msgid ""
"``devl_port_fn_devlink_set()`` - called to setup port function -> nested "
"devlink relationship."
msgstr ""

#: ../../../networking/devlink/index.rst:43
msgid ""
"``devlink_linecard_nested_dl_set()`` - called to setup linecard -> nested "
"devlink relationship."
msgstr ""

#: ../../../networking/devlink/index.rst:46
msgid ""
"The nested devlink info is exposed to the userspace over object-specific "
"attributes of devlink netlink."
msgstr ""

#: ../../../networking/devlink/index.rst:50
msgid "Interface documentation"
msgstr ""

#: ../../../networking/devlink/index.rst:52
msgid ""
"The following pages describe various interfaces available through devlink in "
"general."
msgstr ""

#: ../../../networking/devlink/index.rst:73
msgid "Driver-specific documentation"
msgstr ""

#: ../../../networking/devlink/index.rst:75
msgid ""
"Each driver that implements ``devlink`` is expected to document what "
"parameters, info versions, and other features it supports."
msgstr ""
