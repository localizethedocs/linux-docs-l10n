# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../dev-tools/kunit/api/resource.rst:5
msgid "Resource API"
msgstr ""

#: ../../../dev-tools/kunit/api/resource.rst:7
msgid "This file documents the KUnit resource API."
msgstr ""

#: ../../../dev-tools/kunit/api/resource.rst:9
msgid ""
"Most users won't need to use this API directly, power users can use it to "
"store state on a per-test basis, register custom cleanup actions, and more."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:25
msgid "represents a *test managed resource*"
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:29
msgid "**Definition**::"
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:37
msgid "**Members**"
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:26
msgid "``data``"
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:27
msgid "for the user to store arbitrary data."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:27
msgid "``name``"
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:28
msgid "optional name"
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:28
msgid "``free``"
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:29
msgid "a user supplied function to free the resource."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:32
#: include/kunit/resource.h:153 include/kunit/resource.h:223
#: include/kunit/resource.h:272 include/kunit/resource.h:384
#: include/kunit/resource.h:400 include/kunit/resource.h:420
#: include/kunit/resource.h:442 include/kunit/resource.h:468
#: include/kunit/resource.h:486 ../../../dev-tools/kunit/api/resource:21:
#: include/kunit/device.h:26 include/kunit/device.h:38
#: include/kunit/device.h:55 include/kunit/device.h:72
msgid "**Description**"
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:29
msgid ""
"Represents a *test managed resource*, a resource which will automatically be "
"cleaned up at the end of a test case. This cleanup is performed by the "
"'free' function. The struct kunit_resource itself is freed automatically "
"with kfree() if it was allocated by KUnit (e.g., by kunit_alloc_resource()), "
"but must be freed by the user otherwise."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:35
msgid ""
"Resources are reference counted so if a resource is retrieved via "
"kunit_alloc_and_get_resource() or kunit_find_resource(), we need to call "
"kunit_put_resource() to reduce the resource reference count when finished "
"with it.  Note that kunit_alloc_resource() does not require a "
"kunit_resource_put() because it does not retrieve the resource itself."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:41
msgid "**Example**"
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:76
msgid ""
"Resources can also be named, with lookup/removal done on a name basis also.  "
"kunit_add_named_resource(), kunit_find_named_resource() and "
"kunit_destroy_named_resource().  Resource names must be unique within the "
"test instance."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:95
msgid ""
"Hold resource for use. Should not need to be used by most users as we "
"automatically get resources retrieved by kunit_find_resource*()."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:99
#: include/kunit/resource.h:129 include/kunit/resource.h:146
#: include/kunit/resource.h:164 include/kunit/resource.h:187
#: include/kunit/resource.h:220 include/kunit/resource.h:269
#: include/kunit/resource.h:308 include/kunit/resource.h:321
#: include/kunit/resource.h:350 include/kunit/resource.h:363
#: include/kunit/resource.h:383 include/kunit/resource.h:398
#: include/kunit/resource.h:419 include/kunit/resource.h:441
#: include/kunit/resource.h:467 include/kunit/resource.h:485
#: ../../../dev-tools/kunit/api/resource:21: include/kunit/device.h:26
#: include/kunit/device.h:38 include/kunit/device.h:54
#: include/kunit/device.h:72
msgid "**Parameters**"
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:101
#: include/kunit/resource.h:131 include/kunit/resource.h:151
#: include/kunit/resource.h:167 include/kunit/resource.h:188
#: include/kunit/resource.h:307 include/kunit/resource.h:383
msgid "``struct kunit_resource *res``"
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:98
#: include/kunit/resource.h:134
msgid "resource"
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:125
msgid ""
"When caller is done with retrieved resource, kunit_put_resource() should be "
"called to drop reference count. The resource list maintains a reference "
"count on resources, so if no users are utilizing a resource and it is "
"removed from the resource list, it will be freed via the associated free "
"function (if any). Only needs to be used if we alloc_and_get() or find() "
"resource."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:142
msgid "Internal helper to add a resource."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:148
#: include/kunit/resource.h:166 include/kunit/resource.h:189
#: include/kunit/resource.h:222 include/kunit/resource.h:271
#: include/kunit/resource.h:310 include/kunit/resource.h:323
#: include/kunit/resource.h:352 include/kunit/resource.h:365
#: include/kunit/resource.h:385 include/kunit/resource.h:421
#: include/kunit/resource.h:443 include/kunit/resource.h:469
#: include/kunit/resource.h:487 ../../../dev-tools/kunit/api/resource:21:
#: include/kunit/device.h:28 include/kunit/device.h:40
#: include/kunit/device.h:56 include/kunit/device.h:74
msgid "``struct kunit *test``"
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:145
#: include/kunit/resource.h:161 include/kunit/resource.h:184
#: include/kunit/resource.h:217 include/kunit/resource.h:266
#: include/kunit/resource.h:381 ../../../dev-tools/kunit/api/resource:21:
#: include/kunit/device.h:23 include/kunit/device.h:35
#: include/kunit/device.h:51
msgid "The test context object."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:147
#: include/kunit/resource.h:163 include/kunit/resource.h:186
#: include/kunit/resource.h:219 include/kunit/resource.h:268
msgid "``kunit_resource_init_t init``"
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:146
#: include/kunit/resource.h:162
msgid ""
"a user-supplied function to initialize the result (if needed).  If none is "
"supplied, the resource data value is simply set to **data**. If an init "
"function is supplied, **data** is passed to it instead."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:150
#: include/kunit/resource.h:166 include/kunit/resource.h:187
#: include/kunit/resource.h:220 include/kunit/resource.h:269
msgid "``kunit_resource_free_t free``"
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:149
#: include/kunit/resource.h:165
msgid "a user-supplied function to free the resource (if needed)."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:150
#: include/kunit/resource.h:166 include/kunit/resource.h:187
#: include/kunit/resource.h:306
msgid "The resource."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:152
#: include/kunit/resource.h:168 include/kunit/resource.h:190
msgid "``void *data``"
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:151
#: include/kunit/resource.h:167 include/kunit/resource.h:189
msgid "value to pass to init function or set in resource data field."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:143
msgid "res->should_kfree is not initialised."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:160
msgid "Add a *test managed resource*."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:183
msgid "Add a named *test managed resource*."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:185
msgid "a user-supplied function to initialize the resource data, if needed."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:186
msgid "a user-supplied function to free the resource data, if needed."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:189
#: include/kunit/resource.h:349 ../../../dev-tools/kunit/api/resource:21:
#: include/kunit/device.h:25 include/kunit/device.h:37
#: include/kunit/device.h:53
msgid "``const char *name``"
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:188
msgid "name to be set for resource."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:216
msgid "Allocates and returns a *test managed resource*."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:218
#: include/kunit/resource.h:267
msgid "a user supplied function to initialize the resource."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:219
#: include/kunit/resource.h:268
msgid "a user supplied function to free the resource (if needed)."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:221
#: include/kunit/resource.h:270
msgid "``gfp_t internal_gfp``"
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:220
#: include/kunit/resource.h:269
msgid "gfp to use for internal allocations, if unsure, use GFP_KERNEL"
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:222
#: include/kunit/resource.h:271
msgid "``void *context``"
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:221
#: include/kunit/resource.h:270
msgid "for the user to pass in arbitrary data to the init function."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:222
#: include/kunit/resource.h:271
msgid ""
"Allocates a *test managed resource*, a resource which will automatically be "
"cleaned up at the end of a test case. See :c:type:`struct kunit_resource "
"<kunit_resource>` for an example."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:226
msgid ""
"This is effectively identical to kunit_alloc_resource, but returns the "
"struct kunit_resource pointer, not just the 'data' pointer. It therefore "
"also increments the resource's refcount, so kunit_put_resource() should be "
"called when you've finished with it."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:231
#: include/kunit/resource.h:275
msgid "**Note**"
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:232
#: include/kunit/resource.h:276
msgid ""
"KUnit needs to allocate memory for a kunit_resource object. You must specify "
"an **internal_gfp** that is compatible with the use context of your resource."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:265
msgid "Allocates a *test managed resource*."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:304
msgid "Match a resource with the same name."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:305
#: include/kunit/resource.h:318 include/kunit/resource.h:347
#: include/kunit/resource.h:360
msgid "Test case to which the resource belongs."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:308
msgid "``void *match_name``"
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:307
msgid "The name to match against."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:317
msgid "Find a resource using match function/data."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:320
#: include/kunit/resource.h:362
msgid "``kunit_resource_match_t match``"
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:319
msgid "match function to be applied to resources/match data."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:321
#: include/kunit/resource.h:363
msgid "``void *match_data``"
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:320
msgid "data to be used in matching."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:346
msgid "Find a resource using match name."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:348
msgid "match name."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:359
msgid "Find a kunit_resource and destroy it."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:361
msgid ""
"Match function. Returns whether a given resource matches **match_data**."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:362
msgid "Data passed into **match**."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:364
#: include/kunit/resource.h:430 include/kunit/resource.h:455
#: ../../../dev-tools/kunit/api/resource:21: include/kunit/device.h:28
#: include/kunit/device.h:43 include/kunit/device.h:59
msgid "**Return**"
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:364
msgid "0 if kunit_resource is found and freed, -ENOENT if not found."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:379
msgid "remove resource from resource list associated with test."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:382
msgid "The resource to be removed."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:383
msgid ""
"Note that the resource will not be immediately freed since it is likely the "
"caller has a reference to it via alloc_and_get() or find(); in this case a "
"final call to kunit_put_resource() is required."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:396
msgid "``KUNIT_DEFINE_ACTION_WRAPPER (wrapper, orig, arg_type)``"
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:394
msgid "Wrap a function for use as a deferred action."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:400
msgid "``wrapper``"
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:396
msgid "The name of the new wrapper function define."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:398
msgid "``orig``"
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:397
msgid "The original function to wrap."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:399
msgid "``arg_type``"
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:398
msgid "The type of the argument accepted by **orig**."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:399
msgid ""
"Defines a wrapper for a function which accepts a single, pointer-sized "
"argument. This wrapper can then be passed to kunit_add_action() and similar. "
"This should be used in preference to casting a function directly to "
"kunit_action_t, as casting function pointers will break control flow "
"integrity (CFI), leading to crashes."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:415
#: include/kunit/resource.h:437
msgid "Call a function when the test ends."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:416
#: include/kunit/resource.h:438
msgid "Test case to associate the action with."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:418
#: include/kunit/resource.h:440 include/kunit/resource.h:466
#: include/kunit/resource.h:484
msgid "``kunit_action_t *action``"
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:417
#: include/kunit/resource.h:439
msgid "The function to run on test exit"
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:419
#: include/kunit/resource.h:441 include/kunit/resource.h:467
#: include/kunit/resource.h:485
msgid "``void *ctx``"
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:418
#: include/kunit/resource.h:440
msgid "Data passed into **func**"
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:419
#: include/kunit/resource.h:441
msgid ""
"Defer the execution of a function until the test exits, either normally or "
"due to a failure.  **ctx** is passed as additional context. All functions "
"registered with kunit_add_action() will execute in the opposite order to "
"that they were registered in."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:424
#: include/kunit/resource.h:446
msgid ""
"This is useful for cleaning up allocated memory and resources, as these "
"functions are called even if the test aborts early due to, e.g., a failed "
"assertion."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:428
msgid "See also: devm_add_action() for the devres equivalent."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:431
#: include/kunit/resource.h:456
msgid "0 on success, an error if the action could not be deferred."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:450
msgid ""
"If the action cannot be created (e.g., due to the system being out of "
"memory), then action(ctx) will be called immediately, and an error will be "
"returned."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:453
msgid "See also: devm_add_action_or_reset() for the devres equivalent."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:463
msgid "Cancel a matching deferred action."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:464
#: include/kunit/resource.h:482
msgid "Test case the action is associated with."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:465
msgid "The deferred function to cancel."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:466
#: include/kunit/resource.h:484
msgid "The context passed to the deferred function to trigger."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:467
msgid ""
"Prevent an action deferred via kunit_add_action() from executing when the "
"test terminates."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:470
msgid ""
"If the function/context pair was deferred multiple times, only the most "
"recent one will be cancelled."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:473
msgid "See also: devm_remove_action() for the devres equivalent."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:481
msgid "Run a matching action call immediately."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:483
msgid "The deferred function to trigger."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:485
msgid ""
"Execute a function deferred via kunit_add_action()) immediately, rather than "
"when the test ends."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:488
msgid ""
"If the function/context pair was deferred multiple times, it will only be "
"executed once here. The most recent deferral will no longer execute when the "
"test ends."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:492
msgid ""
"kunit_release_action(test, func, ctx); is equivalent to func(ctx); "
"kunit_remove_action(test, func, ctx);"
msgstr ""

#: ../../../dev-tools/kunit/api/resource:12: include/kunit/resource.h:497
msgid "See also: devm_release_action() for the devres equivalent."
msgstr ""

#: ../../../dev-tools/kunit/api/resource.rst:16
msgid "Managed Devices"
msgstr ""

#: ../../../dev-tools/kunit/api/resource.rst:18
msgid ""
"Functions for using KUnit-managed struct device and struct device_driver. "
"Include ``kunit/device.h`` to use these."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:21: include/kunit/device.h:22
msgid "Create a struct device_driver attached to the kunit_bus"
msgstr ""

#: ../../../dev-tools/kunit/api/resource:21: include/kunit/device.h:24
msgid "The name to give the created driver."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:21: include/kunit/device.h:25
msgid ""
"Creates a struct device_driver attached to the kunit_bus, with the name "
"**name**. This driver will automatically be cleaned up on test exit."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:21: include/kunit/device.h:29
msgid "a stub struct device_driver, managed by KUnit, with the name **name**."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:21: include/kunit/device.h:34
#: include/kunit/device.h:50
msgid "Create a struct device for use in KUnit tests"
msgstr ""

#: ../../../dev-tools/kunit/api/resource:21: include/kunit/device.h:36
#: include/kunit/device.h:52
msgid "The name to give the created device."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:21: include/kunit/device.h:37
msgid ""
"Creates a struct kunit_device (which is a struct device) with the given "
"name, and a corresponding driver. The device and driver will be cleaned up "
"on test exit, or when kunit_device_unregister is called. See also "
"kunit_device_register_with_driver, if you wish to provide your own struct "
"device_driver."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:21: include/kunit/device.h:44
#: include/kunit/device.h:60
msgid ""
"a pointer to a struct device which will be cleaned up when the test exits, "
"or an error pointer if the device could not be allocated or registered."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:21: include/kunit/device.h:54
msgid "``const struct device_driver *drv``"
msgstr ""

#: ../../../dev-tools/kunit/api/resource:21: include/kunit/device.h:53
msgid "The struct device_driver to associate with the device."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:21: include/kunit/device.h:54
msgid ""
"Creates a struct kunit_device (which is a struct device) with the given "
"name, and driver. The device will be cleaned up on test exit, or when "
"kunit_device_unregister is called. See also kunit_device_register, if you "
"wish KUnit to create and manage a driver for you."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:21: include/kunit/device.h:68
msgid "Unregister a KUnit-managed device"
msgstr ""

#: ../../../dev-tools/kunit/api/resource:21: include/kunit/device.h:69
msgid "The test context object which created the device"
msgstr ""

#: ../../../dev-tools/kunit/api/resource:21: include/kunit/device.h:71
msgid "``struct device *dev``"
msgstr ""

#: ../../../dev-tools/kunit/api/resource:21: include/kunit/device.h:70
msgid "The device."
msgstr ""

#: ../../../dev-tools/kunit/api/resource:21: include/kunit/device.h:71
msgid ""
"Unregisters and destroys a struct device which was created with "
"kunit_device_register or kunit_device_register_with_driver. If KUnit created "
"a driver, cleans it up as well."
msgstr ""
