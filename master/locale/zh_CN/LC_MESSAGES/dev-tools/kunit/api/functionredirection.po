# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../dev-tools/kunit/api/functionredirection.rst:5
msgid "Function Redirection API"
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection.rst:8
msgid "Overview"
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection.rst:10
msgid ""
"When writing unit tests, it's important to be able to isolate the code being "
"tested from other parts of the kernel. This ensures the reliability of the "
"test (it won't be affected by external factors), reduces dependencies on "
"specific hardware or config options (making the test easier to run), and "
"protects the stability of the rest of the system (making it less likely for "
"test-specific state to interfere with the rest of the system)."
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection.rst:17
msgid ""
"While for some code (typically generic data structures, helpers, and other "
"\"pure functions\") this is trivial, for others (like device drivers, "
"filesystems, core subsystems) the code is heavily coupled with other parts "
"of the kernel."
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection.rst:22
msgid ""
"This coupling is often due to global state in some way: be it a global list "
"of devices, the filesystem, or some hardware state. Tests need to either "
"carefully manage, isolate, and restore state, or they can avoid it "
"altogether by replacing access to and mutation of this state with a \"fake\" "
"or \"mock\" variant."
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection.rst:27
msgid ""
"By refactoring access to such state, such as by introducing a layer of "
"indirection which can use or emulate a separate set of test state. However, "
"such refactoring comes with its own costs (and undertaking significant "
"refactoring before being able to write tests is suboptimal)."
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection.rst:32
msgid ""
"A simpler way to intercept and replace some of the function calls is to use "
"function redirection via static stubs."
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection.rst:37
msgid "Static Stubs"
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection.rst:39
msgid ""
"Static stubs are a way of redirecting calls to one function (the \"real\" "
"function) to another function (the \"replacement\" function)."
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection.rst:42
msgid ""
"It works by adding a macro to the \"real\" function which checks to see if a "
"test is running, and if a replacement function is available. If so, that "
"function is called in place of the original."
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection.rst:46
msgid "Using static stubs is pretty straightforward:"
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection.rst:48
msgid ""
"Add the KUNIT_STATIC_STUB_REDIRECT() macro to the start of the \"real\" "
"function."
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection.rst:51
msgid ""
"This should be the first statement in the function, after any variable "
"declarations. KUNIT_STATIC_STUB_REDIRECT() takes the name of the function, "
"followed by all of the arguments passed to the real function."
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection.rst:55
#: ../../../dev-tools/kunit/api/functionredirection.rst:73
#: ../../../dev-tools/kunit/api/functionredirection.rst:105
#: ../../../dev-tools/kunit/api/functionredirection.rst:119
msgid "For example:"
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection.rst:65
msgid "Write one or more replacement functions."
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection.rst:67
msgid ""
"These functions should have the same function signature as the real "
"function. In the event they need to access or modify test-specific state, "
"they can use kunit_get_current_test() to get a struct kunit pointer. This "
"can then be passed to the expectation/assertion macros, or used to look up "
"KUnit resources."
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection.rst:83
msgid "Activate the static stub from your test."
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection.rst:85
msgid ""
"From within a test, the redirection can be enabled with "
"kunit_activate_static_stub(), which accepts a struct kunit pointer, the real "
"function, and the replacement function. You can call this several times with "
"different replacement functions to swap out implementations of the function."
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection.rst:91
msgid "In our example, this would be"
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection.rst:99
msgid "Call (perhaps indirectly) the real function."
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection.rst:101
msgid ""
"Once the redirection is activated, any call to the real function will call "
"the replacement function instead. Such calls may be buried deep in the "
"implementation of another function, but must occur from the test's kthread."
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection.rst:112
msgid "(Optionally) disable the stub."
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection.rst:114
msgid ""
"When you no longer need it, disable the redirection (and hence resume the "
"original behaviour of the 'real' function) using "
"kunit_deactivate_static_stub(). Otherwise, it will be automatically disabled "
"when the test exits."
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection.rst:126
msgid ""
"It's also possible to use these replacement functions to test to see if a "
"function is called at all, for example:"
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection.rst:159
msgid "API Reference"
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection:161:
#: include/kunit/static_stub.h:28
msgid "``KUNIT_STATIC_STUB_REDIRECT (real_fn_name, args...)``"
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection:161:
#: include/kunit/static_stub.h:26
msgid "call a replacement 'static stub' if one exists"
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection:161:
#: include/kunit/static_stub.h:30 include/kunit/static_stub.h:86
#: include/kunit/static_stub.h:106
msgid "**Parameters**"
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection:161:
#: include/kunit/static_stub.h:32
msgid "``real_fn_name``"
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection:161:
#: include/kunit/static_stub.h:27
msgid "The name of this function (as an identifier, not a string)"
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection:161:
#: include/kunit/static_stub.h:29
msgid "``args...``"
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection:161:
#: include/kunit/static_stub.h:28
msgid "All of the arguments passed to this function"
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection:161:
#: include/kunit/static_stub.h:30 include/kunit/static_stub.h:87
#: include/kunit/static_stub.h:106
msgid "**Description**"
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection:161:
#: include/kunit/static_stub.h:29
msgid ""
"This is a function prologue which is used to allow calls to the current "
"function to be redirected by a KUnit test. KUnit tests can call "
"kunit_activate_static_stub() to pass a replacement function in. The "
"replacement function will be called by KUNIT_STATIC_STUB_REDIRECT(), which "
"will then return from the function. If the caller is not in a KUnit context, "
"the function will continue execution as normal."
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection:161:
#: include/kunit/static_stub.h:36
msgid "**Example**"
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection:161:
#: include/kunit/static_stub.h:84
msgid "``kunit_activate_static_stub (test, real_fn_addr, replacement_addr)``"
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection:161:
#: include/kunit/static_stub.h:82
msgid "replace a function using static stubs."
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection:161:
#: include/kunit/static_stub.h:88
msgid "``test``"
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection:161:
#: include/kunit/static_stub.h:83 include/kunit/static_stub.h:103
msgid "A pointer to the 'struct kunit' test context for the current test."
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection:161:
#: include/kunit/static_stub.h:85
msgid "``real_fn_addr``"
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection:161:
#: include/kunit/static_stub.h:84
msgid "The address of the function to replace."
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection:161:
#: include/kunit/static_stub.h:86
msgid "``replacement_addr``"
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection:161:
#: include/kunit/static_stub.h:85
msgid "The address of the function to replace it with."
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection:161:
#: include/kunit/static_stub.h:86
msgid ""
"When activated, calls to real_fn_addr from within this test (even if called "
"indirectly) will instead call replacement_addr. The function pointed to by "
"real_fn_addr must begin with the static stub prologue in "
"KUNIT_STATIC_STUB_REDIRECT() for this to work. real_fn_addr and "
"replacement_addr must have the same type."
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection:161:
#: include/kunit/static_stub.h:92
msgid ""
"The redirection can be disabled again with kunit_deactivate_static_stub()."
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection:161:
#: include/kunit/static_stub.h:102
msgid "disable a function redirection"
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection:161:
#: include/kunit/static_stub.h:108
msgid "``struct kunit *test``"
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection:161:
#: include/kunit/static_stub.h:105
msgid "``void *real_fn_addr``"
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection:161:
#: include/kunit/static_stub.h:104
msgid "The address of the function to no-longer redirect"
msgstr ""

#: ../../../dev-tools/kunit/api/functionredirection:161:
#: include/kunit/static_stub.h:105
msgid ""
"Deactivates a redirection configured with kunit_activate_static_stub(). "
"After this function returns, calls to real_fn_addr() will execute the "
"original real_fn, not any previously-configured replacement."
msgstr ""
