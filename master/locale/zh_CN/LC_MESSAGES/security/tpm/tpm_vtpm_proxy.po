# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-20 11:24+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../security/tpm/tpm_vtpm_proxy.rst:3
msgid "Virtual TPM Proxy Driver for Linux Containers"
msgstr ""

#: ../../../security/tpm/tpm_vtpm_proxy.rst:5
msgid "Authors:"
msgstr ""

#: ../../../security/tpm/tpm_vtpm_proxy.rst:6
msgid "Stefan Berger <stefanb@linux.vnet.ibm.com>"
msgstr ""

#: ../../../security/tpm/tpm_vtpm_proxy.rst:8
msgid ""
"This document describes the virtual Trusted Platform Module (vTPM) proxy "
"device driver for Linux containers."
msgstr ""

#: ../../../security/tpm/tpm_vtpm_proxy.rst:12
msgid "Introduction"
msgstr ""

#: ../../../security/tpm/tpm_vtpm_proxy.rst:14
msgid ""
"The goal of this work is to provide TPM functionality to each Linux "
"container. This allows programs to interact with a TPM in a container the "
"same way they interact with a TPM on the physical system. Each container "
"gets its own unique, emulated, software TPM."
msgstr ""

#: ../../../security/tpm/tpm_vtpm_proxy.rst:20
msgid "Design"
msgstr ""

#: ../../../security/tpm/tpm_vtpm_proxy.rst:22
msgid ""
"To make an emulated software TPM available to each container, the container "
"management stack needs to create a device pair consisting of a client TPM "
"character device ``/dev/tpmX`` (with X=0,1,2...) and a 'server side' file "
"descriptor. The former is moved into the container by creating a character "
"device with the appropriate major and minor numbers while the file "
"descriptor is passed to the TPM emulator. Software inside the container can "
"then send TPM commands using the character device and the emulator will "
"receive the commands via the file descriptor and use it for sending back "
"responses."
msgstr ""

#: ../../../security/tpm/tpm_vtpm_proxy.rst:31
msgid ""
"To support this, the virtual TPM proxy driver provides a device ``/dev/"
"vtpmx`` that is used to create device pairs using an ioctl. The ioctl takes "
"as an input flags for configuring the device. The flags  for example "
"indicate whether TPM 1.2 or TPM 2 functionality is supported by the TPM "
"emulator. The result of the ioctl are the file descriptor for the 'server "
"side' as well as the major and minor numbers of the character device that "
"was created. Besides that the number of the TPM character device is "
"returned. If for example ``/dev/tpm10`` was created, the number "
"(``dev_num``) 10 is returned."
msgstr ""

#: ../../../security/tpm/tpm_vtpm_proxy.rst:40
msgid ""
"Once the device has been created, the driver will immediately try to talk to "
"the TPM. All commands from the driver can be read from the file descriptor "
"returned by the ioctl. The commands should be responded to immediately."
msgstr ""

#: ../../../security/tpm/tpm_vtpm_proxy.rst:45
msgid "UAPI"
msgstr ""

#: ../../../security/tpm/tpm_vtpm_proxy:47: include/uapi/linux/vtpm_proxy.h:24
#: include/uapi/linux/vtpm_proxy.h:35
msgid "flags for the proxy TPM"
msgstr ""

#: ../../../security/tpm/tpm_vtpm_proxy:47: include/uapi/linux/vtpm_proxy.h:28
msgid "**Constants**"
msgstr ""

#: ../../../security/tpm/tpm_vtpm_proxy:47: include/uapi/linux/vtpm_proxy.h:30
msgid "``VTPM_PROXY_FLAG_TPM2``"
msgstr ""

#: ../../../security/tpm/tpm_vtpm_proxy:47: include/uapi/linux/vtpm_proxy.h:31
msgid "the proxy TPM uses TPM 2.0 protocol"
msgstr ""

#: ../../../security/tpm/tpm_vtpm_proxy:47: include/uapi/linux/vtpm_proxy.h:32
msgid "parameter structure for the ``VTPM_PROXY_IOC_NEW_DEV`` ioctl"
msgstr ""

#: ../../../security/tpm/tpm_vtpm_proxy:47: include/uapi/linux/vtpm_proxy.h:36
msgid "**Definition**::"
msgstr ""

#: ../../../security/tpm/tpm_vtpm_proxy:47: include/uapi/linux/vtpm_proxy.h:46
msgid "**Members**"
msgstr ""

#: ../../../security/tpm/tpm_vtpm_proxy:47: include/uapi/linux/vtpm_proxy.h:34
msgid "``flags``"
msgstr ""

#: ../../../security/tpm/tpm_vtpm_proxy:47: include/uapi/linux/vtpm_proxy.h:35
msgid "``tpm_num``"
msgstr ""

#: ../../../security/tpm/tpm_vtpm_proxy:47: include/uapi/linux/vtpm_proxy.h:36
msgid "index of the TPM device"
msgstr ""

#: ../../../security/tpm/tpm_vtpm_proxy:47: include/uapi/linux/vtpm_proxy.h:36
msgid "``fd``"
msgstr ""

#: ../../../security/tpm/tpm_vtpm_proxy:47: include/uapi/linux/vtpm_proxy.h:37
msgid "the file descriptor used by the proxy TPM"
msgstr ""

#: ../../../security/tpm/tpm_vtpm_proxy:47: include/uapi/linux/vtpm_proxy.h:37
msgid "``major``"
msgstr ""

#: ../../../security/tpm/tpm_vtpm_proxy:47: include/uapi/linux/vtpm_proxy.h:38
msgid "the major number of the TPM device"
msgstr ""

#: ../../../security/tpm/tpm_vtpm_proxy:47: include/uapi/linux/vtpm_proxy.h:38
msgid "``minor``"
msgstr ""

#: ../../../security/tpm/tpm_vtpm_proxy:47: include/uapi/linux/vtpm_proxy.h:39
msgid "the minor number of the TPM device"
msgstr ""

#: ../../../security/tpm/tpm_vtpm_proxy:49:
#: drivers/char/tpm/tpm_vtpm_proxy.c:614
msgid "handler for the ``VTPM_PROXY_IOC_NEW_DEV`` ioctl"
msgstr ""

#: ../../../security/tpm/tpm_vtpm_proxy:49:
#: drivers/char/tpm/tpm_vtpm_proxy.c:618
msgid "**Parameters**"
msgstr ""

#: ../../../security/tpm/tpm_vtpm_proxy:49:
#: drivers/char/tpm/tpm_vtpm_proxy.c:620
msgid "``struct file *file``"
msgstr ""

#: ../../../security/tpm/tpm_vtpm_proxy:49:
#: drivers/char/tpm/tpm_vtpm_proxy.c:615
msgid "/dev/vtpmx"
msgstr ""

#: ../../../security/tpm/tpm_vtpm_proxy:49:
#: drivers/char/tpm/tpm_vtpm_proxy.c:617
msgid "``unsigned int ioctl``"
msgstr ""

#: ../../../security/tpm/tpm_vtpm_proxy:49:
#: drivers/char/tpm/tpm_vtpm_proxy.c:616
msgid "the ioctl number"
msgstr ""

#: ../../../security/tpm/tpm_vtpm_proxy:49:
#: drivers/char/tpm/tpm_vtpm_proxy.c:618
msgid "``unsigned long arg``"
msgstr ""

#: ../../../security/tpm/tpm_vtpm_proxy:49:
#: drivers/char/tpm/tpm_vtpm_proxy.c:617
msgid "pointer to the struct vtpmx_proxy_new_dev"
msgstr ""

#: ../../../security/tpm/tpm_vtpm_proxy:49:
#: drivers/char/tpm/tpm_vtpm_proxy.c:619
msgid "**Description**"
msgstr ""

#: ../../../security/tpm/tpm_vtpm_proxy:49:
#: drivers/char/tpm/tpm_vtpm_proxy.c:618
msgid ""
"Creates an anonymous file that is used by the process acting as a TPM to "
"communicate with the client processes. The function will also add a new TPM "
"device through which data is proxied to this TPM acting process. The caller "
"will be provided with a file descriptor to communicate with the clients and "
"major and minor numbers for the TPM device."
msgstr ""
