# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-06 15:47+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../security/lsm-development.rst:3
msgid "Linux Security Module Development"
msgstr ""

#: ../../../security/lsm-development.rst:5
msgid ""
"Based on https://lore.kernel.org/r/20071026073721.618b4778@laptopd505.fenrus."
"org, a new LSM is accepted into the kernel when its intent (a description of "
"what it tries to protect against and in what cases one would expect to use "
"it) has been appropriately documented in ``Documentation/admin-guide/LSM/``. "
"This allows an LSM's code to be easily compared to its goals, and so that "
"end users and distros can make a more informed decision about which LSMs "
"suit their requirements."
msgstr ""

#: ../../../security/lsm-development.rst:13
msgid ""
"For extensive documentation on the available LSM hook interfaces, please see "
"``security/security.c`` and associated structures:"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1485
msgid "Free memory associated with mount options"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1489
#: security/security.c:1504 security/security.c:1519 security/security.c:1536
#: security/security.c:1646 security/security.c:1675 security/security.c:1782
#: security/security.c:1806 security/security.c:1830 security/security.c:1926
#: security/security.c:1961 security/security.c:1996 security/security.c:2049
#: security/security.c:2141 security/security.c:2227 security/security.c:2371
#: security/security.c:2784 security/security.c:2818 security/security.c:2836
#: security/security.c:2861 security/security.c:2972 security/security.c:2991
#: security/security.c:3191 security/security.c:3338 security/security.c:3353
#: security/security.c:3413 security/security.c:3430 security/security.c:3450
#: security/security.c:3465 security/security.c:3586 security/security.c:3600
#: security/security.c:4142 security/security.c:4353 security/security.c:4367
#: security/security.c:4385 security/security.c:4417 security/security.c:4434
#: security/security.c:4447 security/security.c:4460 security/security.c:4481
#: security/security.c:4503 security/security.c:4574 security/security.c:4602
#: security/security.c:4669 security/security.c:4855 security/security.c:4895
#: security/security.c:4966 security/security.c:4979 security/security.c:4992
#: security/security.c:5006 security/security.c:5020 security/security.c:5050
#: security/security.c:5064 security/security.c:5078 security/security.c:5089
#: security/security.c:5100 security/security.c:5126 security/security.c:5138
#: security/security.c:5151 security/security.c:5165 security/security.c:5181
#: security/security.c:5196 security/security.c:5212 security/security.c:5233
#: security/security.c:5250 security/security.c:5287 security/security.c:5303
#: security/security.c:5320 security/security.c:5345 security/security.c:5359
#: security/security.c:5394 security/security.c:5419 security/security.c:5455
#: security/security.c:5913 security/security.c:5928 security/security.c:5954
#: security/security.c:5972
msgid "**Parameters**"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1491
#: security/security.c:1503
msgid "``void **mnt_opts``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1486
#: security/security.c:1502
msgid "LSM processed mount options"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3
#: security/security.c:1488 security/security.c:1504 security/security.c:1519
#: security/security.c:1536 security/security.c:1648 security/security.c:1677
#: security/security.c:1785 security/security.c:1809 security/security.c:1833
#: security/security.c:1928 security/security.c:1962 security/security.c:1996
#: security/security.c:2052 security/security.c:2142 security/security.c:2228
#: security/security.c:2372 security/security.c:2785 security/security.c:2818
#: security/security.c:2836 security/security.c:2863 security/security.c:2973
#: security/security.c:2992 security/security.c:3191 security/security.c:3338
#: security/security.c:3353 security/security.c:3414 security/security.c:3432
#: security/security.c:3450 security/security.c:3467 security/security.c:3585
#: security/security.c:3600 security/security.c:4142 security/security.c:4352
#: security/security.c:4367 security/security.c:4386 security/security.c:4418
#: security/security.c:4433 security/security.c:4446 security/security.c:4461
#: security/security.c:4482 security/security.c:4503 security/security.c:4575
#: security/security.c:4602 security/security.c:4669 security/security.c:4855
#: security/security.c:4896 security/security.c:4966 security/security.c:4979
#: security/security.c:4992 security/security.c:5006 security/security.c:5021
#: security/security.c:5050 security/security.c:5063 security/security.c:5099
#: security/security.c:5125 security/security.c:5150 security/security.c:5165
#: security/security.c:5180 security/security.c:5196 security/security.c:5214
#: security/security.c:5234 security/security.c:5250 security/security.c:5288
#: security/security.c:5304 security/security.c:5319 security/security.c:5344
#: security/security.c:5360 security/security.c:5393 security/security.c:5419
#: security/security.c:5454 security/security.c:5912 security/security.c:5927
#: security/security.c:5953 security/security.c:5974
msgid "**Description**"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1487
msgid "Free memory associated with **mnt_ops**."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1500
msgid "Consume LSM mount options"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1506
msgid "``char *options``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1501
msgid "mount options"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1503
msgid "Eat (scan **options**) and save them in **mnt_opts**."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1505
#: security/security.c:1521 security/security.c:1538 security/security.c:1649
#: security/security.c:1678 security/security.c:1788 security/security.c:1813
#: security/security.c:1848 security/security.c:1930 security/security.c:1963
#: security/security.c:1997 security/security.c:2053 security/security.c:2143
#: security/security.c:2230 security/security.c:2376 security/security.c:2789
#: security/security.c:2822 security/security.c:2839 security/security.c:2865
#: security/security.c:2977 security/security.c:2994 security/security.c:3194
#: security/security.c:3415 security/security.c:3435 security/security.c:3451
#: security/security.c:3471 security/security.c:4353 security/security.c:4371
#: security/security.c:4395 security/security.c:4419 security/security.c:4467
#: security/security.c:4489 security/security.c:4505 security/security.c:4587
#: security/security.c:4614 security/security.c:4670 security/security.c:4859
#: security/security.c:4901 security/security.c:5022 security/security.c:5064
#: security/security.c:5101 security/security.c:5137 security/security.c:5151
#: security/security.c:5167 security/security.c:5182 security/security.c:5197
#: security/security.c:5218 security/security.c:5252 security/security.c:5289
#: security/security.c:5305 security/security.c:5320 security/security.c:5362
#: security/security.c:5422 security/security.c:5455 security/security.c:5914
#: security/security.c:5930 security/security.c:5991
msgid "**Return**"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1506
#: security/security.c:1789 security/security.c:2866 security/security.c:5992
msgid "Returns 0 on success, negative values on failure."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1515
msgid "Check if new mount options are allowed"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1521
#: security/security.c:1538 security/security.c:1648
msgid "``struct super_block *sb``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1516
#: security/security.c:1533 security/security.c:1643
msgid "filesystem superblock"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1518
#: security/security.c:1535 security/security.c:1645
msgid "``void *mnt_opts``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1517
msgid "new mount options"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1518
msgid ""
"Determine if the new mount options in **mnt_opts** are allowed given the "
"existing mounted filesystem at **sb**.  **sb** superblock being compared."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1522
msgid "Returns 0 if options are compatible."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1532
msgid "Verify no incompatible mount changes during remount"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1534
msgid "(re)mount options"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1535
msgid ""
"Extracts security system specific mount options and verifies no changes are "
"being made to those options."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1539
#: security/security.c:1931 security/security.c:1964 security/security.c:1998
#: security/security.c:2054 security/security.c:2144 security/security.c:2231
#: security/security.c:2377 security/security.c:2978 security/security.c:2995
#: security/security.c:3195 security/security.c:3416 security/security.c:3436
#: security/security.c:3452 security/security.c:3472 security/security.c:4588
#: security/security.c:4615 security/security.c:4860 security/security.c:5023
#: security/security.c:5065 security/security.c:5138 security/security.c:5152
#: security/security.c:5168 security/security.c:5183 security/security.c:5253
#: security/security.c:5290 security/security.c:5306 security/security.c:5456
#: security/security.c:5915
msgid "Returns 0 if permission is granted."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1642
msgid "Set the mount options for a filesystem"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1644
msgid "binary mount options"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1646
#: security/security.c:1675
msgid "``unsigned long kern_flags``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1645
#: security/security.c:1674
msgid "kernel flags (in)"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1647
#: security/security.c:1676
msgid "``unsigned long *set_kern_flags``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1646
#: security/security.c:1675
msgid "kernel flags (out)"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1647
msgid "Set the security relevant mount options used for a superblock."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1650
#: security/security.c:1679 security/security.c:1814 security/security.c:4420
#: security/security.c:4468 security/security.c:4490 security/security.c:4506
#: security/security.c:4902 security/security.c:5198 security/security.c:5219
msgid "Returns 0 on success, error on failure."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1671
msgid "Duplicate superblock mount options"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1677
msgid "``const struct super_block *oldsb``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1672
msgid "source superblock"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1674
msgid "``struct super_block *newsb``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1673
msgid "destination superblock"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1676
msgid "Copy all security options from a given superblock to another."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1778
#: security/security.c:1802
msgid "Perform dentry initialization"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1784
#: security/security.c:1808 security/security.c:1925 security/security.c:1960
#: security/security.c:1995 security/security.c:2140 security/security.c:2226
#: security/security.c:2370 security/security.c:4144 security/security.c:4483
msgid "``struct dentry *dentry``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1779
#: security/security.c:1803
msgid "the dentry to initialize"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1781
#: security/security.c:1805
msgid "``int mode``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1780
#: security/security.c:1804
msgid "mode used to determine resource type"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1782
#: security/security.c:1806
msgid "``const struct qstr *name``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1781
#: security/security.c:1805
msgid "name of the last path component"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1783
msgid "``const char **xattr_name``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1782
msgid "name of the security/LSM xattr"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1784
msgid "``struct lsm_context *lsmctx``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1783
msgid "pointer to the resulting LSM context"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1784
msgid ""
"Compute a context for a dentry as the inode is not yet available since NFSv4 "
"has no label backed by an EA anyway.  It is important to note that "
"**xattr_name** does not need to be free'd by the caller, it is a static "
"string."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1807
msgid "``const struct cred *old``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1806
msgid "creds to use for LSM context calculations"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1808
msgid "``struct cred *new``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1807
msgid "creds to modify"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1808
msgid ""
"Compute a context for a dentry as the inode is not yet available and set "
"that context in passed in creds so that new files are created using that "
"context. Context is calculated using the passed in creds and not the creds "
"of the caller."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1826
msgid "Initialize an inode's LSM context"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1832
#: security/security.c:2786 security/security.c:4141 security/security.c:4449
#: security/security.c:4462 security/security.c:4505
msgid "``struct inode *inode``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1827
msgid "the inode"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1829
#: security/security.c:2143 security/security.c:2229
msgid "``struct inode *dir``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1828
#: security/security.c:1923 security/security.c:1958 security/security.c:1993
#: security/security.c:2224
msgid "parent directory"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1830
msgid "``const struct qstr *qstr``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1829
msgid "last component of the pathname"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1831
msgid "``const initxattrs initxattrs``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1830
msgid "callback function to write xattrs"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1832
msgid "``void *fs_data``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1831
msgid "filesystem specific data"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1832
msgid ""
"Obtain the security attribute name suffix and value to set on a newly "
"created inode and set up the incore security field for the new inode.  This "
"hook is called by the fs code as part of the inode creation transaction and "
"provides for atomic labeling of the inode, unlike the post_create/mkdir/... "
"hooks called by the VFS."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1838
msgid ""
"The hook function is expected to populate the xattrs array, by calling "
"lsm_get_xattr_slot() to retrieve the slots reserved by the security module "
"with the lbs_xattr_count field of the lsm_blob_sizes structure.  For each "
"slot, the hook function should set ->name to the attribute name suffix (e.g. "
"selinux), to allocate ->value (will be freed by the caller) and set it to "
"the attribute value, to set ->value_len to the length of the value.  If the "
"security module does not use security attributes or does not wish to put a "
"security attribute on this particular inode, then it should return -"
"EOPNOTSUPP to skip this processing."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1849
msgid ""
"Returns 0 if the LSM successfully initialized all of the inode security "
"attributes that are required, negative values otherwise."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1922
msgid "Check if creating a special file is allowed"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1928
#: security/security.c:1963 security/security.c:1998
msgid "``const struct path *dir``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1924
msgid "new file"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1926
#: security/security.c:1961 security/security.c:2141 security/security.c:2227
msgid "``umode_t mode``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1925
msgid "new file mode"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1927
msgid "``unsigned int dev``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1926
msgid "device number"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1927
msgid ""
"Check permissions when creating a file. Note that this hook is called even "
"if mknod operation is being done for a regular file."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1957
#: security/security.c:2223
msgid "Check if creating a new directory is allowed"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1959
#: security/security.c:2225
msgid "new directory"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1960
#: security/security.c:2226
msgid "new directory mode"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1961
msgid "Check permissions to create a new directory in the existing directory."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1992
msgid "Check if removing a hard link is allowed"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1994
#: security/security.c:2369 security/security.c:3410 security/security.c:3427
msgid "file"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1995
msgid "Check the permission to remove a hard link to a file."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2045
msgid "Check if renaming a file is allowed"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2051
msgid "``const struct path *old_dir``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2046
msgid "parent directory of the old file"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2048
msgid "``struct dentry *old_dentry``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2047
msgid "the old file"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2049
msgid "``const struct path *new_dir``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2048
msgid "parent directory of the new file"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2050
msgid "``struct dentry *new_dentry``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2049
msgid "the new file"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2051
msgid "``unsigned int flags``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2050
msgid "flags"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2051
msgid "Check for permission to rename a file or directory."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2137
msgid "Check if creating a file is allowed"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2138
msgid "the parent directory"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2139
msgid "the file being created"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2140
msgid "requested file mode"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2141
msgid "Check permission to create a regular file."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2227
msgid ""
"Check permissions to create a new directory in the existing directory "
"associated with inode structure **dir**."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2367
msgid "Check if setting file attributes is allowed"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2373
msgid "``struct mnt_idmap *idmap``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2368
msgid "idmap of the mount"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2371
msgid "``struct iattr *attr``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2370
msgid "new attributes"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2371
msgid ""
"Check permission before setting file attributes.  Note that the kernel call "
"to notify_change is performed from several locations, whenever file "
"attributes change (such as when a file is truncated, chown/chmod operations, "
"transferring disk quotas, etc)."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2780
msgid "List the xattr security label names"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2781
#: security/security.c:2858 security/security.c:4140 security/security.c:4444
#: security/security.c:4457 security/security.c:4478 security/security.c:4500
msgid "inode"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2783
msgid "``char *buffer``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2782
msgid "buffer"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2784
msgid "``size_t buffer_size``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2783
msgid "size of buffer"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2784
msgid ""
"Copy the extended attribute names for the security labels associated with "
"**inode** into **buffer**.  The maximum size of **buffer** is specified by "
"**buffer_size**.  **buffer** may be NULL to request the size of the buffer "
"required."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2790
msgid "Returns number of bytes used/required on success."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2814
msgid "Create new creds for an overlayfs copy-up op"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2820
#: security/security.c:2838
msgid "``struct dentry *src``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2815
#: security/security.c:2833
msgid "union dentry of copy-up file"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2817
msgid "``struct cred **new``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2816
msgid "newly created creds"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2817
msgid ""
"A file is about to be copied up from lower layer to upper layer of overlay "
"filesystem. Security module can prepare a set of new creds and modify as "
"need be and return new creds. Caller will switch to new creds temporarily to "
"create new file and release newly allocated creds."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2823
msgid "Returns 0 on success or a negative error code on error."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2832
msgid "Filter xattrs in an overlayfs copy-up op"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2835
#: security/security.c:4355
msgid "``const char *name``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2834
msgid "xattr name"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2835
msgid ""
"Filter the xattrs being copied up when a unioned file is copied up from a "
"lower layer to the union/overlay layer.   The caller is responsible for "
"reading and writing the xattrs, this hook is merely a filter."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2840
msgid ""
"Returns 0 to accept the xattr, -ECANCELED to discard the xattr, -EOPNOTSUPP "
"if the security module does not know about attribute, or a negative error "
"code to abort the copy up."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2857
msgid "Set the inode's integrity data"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2863
msgid "``const struct inode *inode``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2860
#: security/security.c:5971
msgid "``enum lsm_integrity_type type``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2859
#: security/security.c:5970
msgid "type of integrity, e.g. hash digest, signature, etc"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2861
#: security/security.c:5972
msgid "``const void *value``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2860
#: security/security.c:5971
msgid "the integrity value"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2862
#: security/security.c:5973
msgid "``size_t size``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2861
#: security/security.c:5972
msgid "size of the integrity value"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2862
msgid ""
"Register a verified integrity measurement of a inode with LSMs. LSMs should "
"free the previously saved data if **value** is NULL."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2968
msgid "Check if an ioctl is allowed"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2974
#: security/security.c:2993 security/security.c:3193 security/security.c:3415
#: security/security.c:3432
msgid "``struct file *file``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2969
#: security/security.c:2988
msgid "associated file"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2971
#: security/security.c:2990
msgid "``unsigned int cmd``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2970
#: security/security.c:2989
msgid "ioctl cmd"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2972
#: security/security.c:2991
msgid "``unsigned long arg``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2971
#: security/security.c:2990
msgid "ioctl arguments"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2972
msgid ""
"Check permission for an ioctl operation on **file**.  Note that **arg** "
"sometimes represents a user space pointer; in other cases, it may be a "
"simple integer value.  When **arg** represents a user space pointer, it "
"should never be used by the security module."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2987
msgid "Check if an ioctl is allowed in compat mode"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2991
msgid ""
"Compat version of security_file_ioctl() that correctly handles 32-bit "
"processes running on 64-bit kernels."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3187
msgid "Evaluate a file after it has been opened"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3188
msgid "the file"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3190
msgid "``int mask``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3189
msgid "access mask"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3190
msgid ""
"Evaluate an opened file and the access mask requested with open(). The hook "
"is useful for LSMs that require the file content to be available in order to "
"make decisions."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3334
msgid "Get the secid from a set of credentials"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3340
#: security/security.c:3355
msgid "``const struct cred *c``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3335
#: security/security.c:3350
msgid "credentials"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3337
#: security/security.c:4417 security/security.c:4895
msgid "``u32 *secid``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3336
msgid "secid value"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3337
msgid ""
"Retrieve the security identifier of the cred structure **c**.  In case of "
"failure, **secid** will be set to zero."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3349
msgid "Get the LSM data from a set of credentials"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3352
#: security/security.c:3588 security/security.c:3599 security/security.c:4387
msgid "``struct lsm_prop *prop``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3351
msgid "destination for the LSM data"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3352
msgid ""
"Retrieve the security data of the cred structure **c**.  In case of failure, "
"**prop** will be cleared."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3409
#: security/security.c:3426
msgid "Read a file specified by userspace"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3412
#: security/security.c:3431
msgid "``enum kernel_read_file_id id``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3411
#: security/security.c:3430
msgid "file identifier"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3413
#: security/security.c:3449
msgid "``bool contents``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3412
msgid "trust if security_kernel_post_read_file() will be called"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3413
msgid "Read a file specified by userspace."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3429
#: security/security.c:3467
msgid "``char *buf``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3428
msgid "file contents"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3430
#: security/security.c:3464
msgid "``loff_t size``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3429
msgid "size of file contents"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3431
msgid ""
"Read a file specified by userspace.  This must be paired with a prior call "
"to security_kernel_read_file() call that indicated this hook would also be "
"called, see security_kernel_read_file() for more information."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3446
msgid "Load data provided by userspace"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3452
#: security/security.c:3465
msgid "``enum kernel_load_data_id id``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3447
#: security/security.c:3464
msgid "data identifier"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3448
msgid "true if security_kernel_post_load_data() will be called"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3449
msgid "Load data provided by userspace."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3461
msgid "Load userspace data from a non-file source"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3462
msgid "data"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3463
msgid "size of data"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3466
msgid "``char *description``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3465
msgid "text description of data, specific to the id value"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3466
msgid ""
"Load data provided by a non-file source (usually userspace buffer).  This "
"must be paired with a prior security_kernel_load_data() call that indicated "
"this hook would also be called, see security_kernel_load_data() for more "
"information."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3582
msgid "Current task's subjective LSM data"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3583
#: security/security.c:3598 security/security.c:4382
msgid "lsm specific information"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3584
msgid ""
"Retrieve the subjective security identifier of the current task and return "
"it in **prop**."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3596
msgid "Get a task's objective LSM data"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3602
msgid "``struct task_struct *p``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3597
msgid "target task"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3599
msgid ""
"Retrieve the objective security identifier of the task_struct in **p** and "
"return it in **prop**."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4138
msgid "Populate an inode's LSM state based on a dentry"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4139
msgid "dentry"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4141
msgid "Fill in **inode** security information for a **dentry** if allowed."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4349
msgid "Check if the named attribute is a MAC label"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4350
msgid "full extended attribute name"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4351
msgid ""
"Check if the extended attribute specified by **name** represents a MAC label."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4354
msgid "Returns 1 if name is a MAC attribute otherwise returns 0."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4363
msgid "Convert a secid to a secctx"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4369
#: security/security.c:5066
msgid "``u32 secid``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4364
#: security/security.c:4416
msgid "secid"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4366
#: security/security.c:4384 security/security.c:4436 security/security.c:4502
msgid "``struct lsm_context *cp``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4365
#: security/security.c:4383
msgid "the LSM context"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4366
msgid ""
"Convert secid to security context.  If **cp** is NULL the length of the "
"result will be returned, but no data will be returned.  This does mean that "
"the length could change between calls to check the length and the next call "
"which actually allocates and returns the data."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4372
#: security/security.c:4396
msgid "Return length of data on success, error on failure."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4381
msgid "Convert a lsm_prop to a secctx"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4385
msgid "``int lsmid``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4384
msgid "which security module to report"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4385
msgid ""
"Convert a **prop** entry to security context.  If **cp** is NULL the length "
"of the result will be returned. This does mean that the length could change "
"between calls to check the length and the next call which actually allocates "
"and returns the **cp**."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4390
msgid ""
"**lsmid** identifies which LSM should supply the context. A value of "
"LSM_ID_UNDEF indicates that the first LSM suppling the hook should be used. "
"This is used in cases where the ID of the supplying LSM is unambiguous."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4413
msgid "Convert a secctx to a secid"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4419
msgid "``const char *secdata``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4414
#: security/security.c:4458 security/security.c:4479
msgid "secctx"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4416
msgid "``u32 seclen``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4415
#: security/security.c:4459 security/security.c:4480
msgid "length of secctx"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4417
msgid "Convert security context to secid."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4430
msgid "Free a secctx buffer"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4431
msgid "the security context"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4432
msgid "Release the security context."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4443
msgid "Invalidate an inode's security label"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4445
msgid ""
"Notify the security module that it must revalidate the security context of "
"an inode."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4456
msgid "Notify the LSM of an inode's security label"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4459
#: security/security.c:4480
msgid "``void *ctx``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4460
#: security/security.c:4481
msgid "``u32 ctxlen``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4460
msgid ""
"Notify the security module of what the security context of an inode should "
"be.  Initializes the incore security context managed by the security module "
"for this inode.  Example usage: NFS client invokes this hook to initialize "
"the security context in its incore inode to the value provided by the server "
"for the file when the server returned the file's attributes to the client. "
"Must be called with inode->i_mutex locked."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4477
msgid "Change the security label of an inode"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4481
msgid ""
"Change the security context of an inode.  Updates the incore security "
"context managed by the security module and invokes the fs code as needed "
"(via __vfs_setxattr_noperm) to update any backing xattrs that represent the "
"context.  Example usage: NFS server invokes this hook to change the security "
"context in its incore inode and on the backing filesystem to a value "
"provided by the client on a SETATTR operation.  Must be called with inode-"
">i_mutex locked."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4499
msgid "Get the security label of an inode"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4501
msgid "security context"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4502
msgid ""
"On success, returns 0 and fills out **cp** with the security context for the "
"given **inode**."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4570
msgid "Check if a AF_UNIX stream is allowed"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4576
msgid "``struct sock *sock``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4571
#: security/security.c:4599
msgid "originating sock"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4573
msgid "``struct sock *other``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4572
#: security/security.c:4600
msgid "peer sock"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4574
#: security/security.c:4965 security/security.c:5233
msgid "``struct sock *newsk``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4573
msgid "new sock"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4574
msgid ""
"Check permissions before establishing a Unix domain stream connection "
"between **sock** and **other**."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4577
#: security/security.c:4604
msgid ""
"The **unix_stream_connect** and **unix_may_send** hooks were necessary "
"because Linux provides an alternative to the conventional file name space "
"for Unix domain sockets.  Whereas binding and connecting to sockets in the "
"file name space is mediated by the typical file permissions (and caught by "
"the mknod and permission hooks in inode_security_ops), binding and "
"connecting to sockets in the abstract name space is completely unmediated.  "
"Sufficient control of Unix domain sockets in the abstract name space isn't "
"possible using only the socket layer hooks, since we need to know the actual "
"target socket, which is not looked up until we are inside the af_unix code."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4598
msgid "Check if AF_UNIX socket can send datagrams"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4604
#: security/security.c:4897
msgid "``struct socket *sock``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4601
msgid "``struct socket *other``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4601
msgid ""
"Check permissions before connecting or sending datagrams from **sock** to "
"**other**."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4665
msgid "Check if creating a socketpair is allowed"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4671
msgid "``struct socket *socka``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4666
msgid "first socket"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4668
msgid "``struct socket *sockb``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4667
msgid "second socket"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4668
msgid "Check permissions before creating a fresh pair of sockets."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4671
msgid "Returns 0 if permission is granted and the connection was established."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4851
msgid "Check if an incoming network packet is allowed"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4857
#: security/security.c:5008 security/security.c:5052 security/security.c:5167
#: security/security.c:5214 security/security.c:5232
msgid "``struct sock *sk``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4852
msgid "destination sock"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4854
#: security/security.c:4894 security/security.c:5019 security/security.c:5049
#: security/security.c:5195 security/security.c:5249
msgid "``struct sk_buff *skb``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4853
msgid "incoming packet"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4854
msgid ""
"Check permissions on incoming network packets.  This hook is distinct from "
"Netfilter's IP input hooks since it is the first time that the incoming "
"sk_buff **skb** has been associated with a particular socket, **sk**.  Must "
"not sleep inside this hook because some callers hold spinlocks."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4891
msgid "Get the remote peer label"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4892
#: security/security.c:5209
msgid "socket"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4893
msgid "datagram packet"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4894
msgid "remote peer label secid"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4895
msgid ""
"This hook allows the security module to provide peer socket security state "
"for udp sockets on a per-packet basis to userspace via getsockopt "
"SO_GETPEERSEC. The application must first have indicated the IP_PASSSEC "
"option via getsockopt. It can then retrieve the security state returned by "
"this hook for a packet via the SCM_SECURITY ancillary message type."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4962
msgid "Clone a sock's LSM state"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4968
#: security/security.c:4981 security/security.c:5022
msgid "``const struct sock *sk``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4963
#: security/security.c:5231
msgid "original sock"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4964
#: security/security.c:5232
msgid "target sock"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4965
msgid "Clone/copy security structure."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4975
msgid "Set a flow's secid based on socket"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4976
msgid "original socket"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4978
#: security/security.c:4991
msgid "``struct flowi_common *flic``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4977
#: security/security.c:4990
msgid "target flow"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4978
msgid "Set the target flow's secid to socket's secid."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4988
msgid "Set a flow's secid based on request_sock"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4994
msgid "``const struct request_sock *req``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4989
msgid "request_sock"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4991
msgid "Sets **flic**'s secid to **req**'s secid."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5002
msgid "Reconcile LSM state when grafting a sock on a socket"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5003
msgid "sock being grafted"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5005
msgid "``struct socket *parent``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5004
msgid "target parent socket"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5005
msgid ""
"Sets **parent**'s inode secid to **sk**'s secid and update **sk** with any "
"necessary LSM state from **parent**."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5016
msgid "Set request_sock state using incoming connect"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5017
msgid "parent listening sock"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5018
msgid "incoming connection"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5020
msgid "``struct request_sock *req``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5019
msgid "new request_sock"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5020
msgid ""
"Initialize the **req** LSM state based on **sk** and the incoming connect in "
"**skb**."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5046
msgid "Update sock's LSM state with connection"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5047
msgid "sock"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5048
msgid "connection packet"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5049
msgid "Update **sock**'s LSM state to represent a new connection from **skb**."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5060
msgid "Check if setting a secmark is allowed"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5061
msgid "new secmark value"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5062
msgid "Check if the process should be allowed to relabel packets to **secid**."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5074
msgid "Increment the secmark labeling rule count"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5080
#: security/security.c:5091 security/security.c:5140
msgid "``void``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1
msgid "no arguments"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5075
msgid "Tells the LSM to increment the number of secmark labeling rules loaded."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5085
msgid "Decrement the secmark labeling rule count"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5086
msgid "Tells the LSM to decrement the number of secmark labeling rules loaded."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5096
msgid "Allocate a LSM blob for a TUN device"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5102
msgid "``void **security``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5097
msgid "pointer to the LSM blob"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5098
msgid ""
"This hook allows a module to allocate a security structure for a TUN device, "
"returning the pointer in **security**."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5102
msgid "Returns a zero on success, negative values on failure."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5122
msgid "Free a TUN device LSM blob"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5128
#: security/security.c:5153 security/security.c:5164 security/security.c:5183
msgid "``void *security``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5123
#: security/security.c:5284 security/security.c:5300 security/security.c:5317
#: security/security.c:5342
msgid "LSM blob"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5124
msgid ""
"This hook allows a module to free the security structure for a TUN device."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5134
msgid "Check if creating a TUN device is allowed"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5135
msgid "Check permissions prior to creating a new TUN device."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5147
msgid "Check if attaching a TUN queue is allowed"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5148
#: security/security.c:5163 security/security.c:5178
msgid "TUN device LSM blob"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5149
msgid "Check permissions prior to attaching to a TUN device queue."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5161
msgid "Update TUN device LSM state on attach"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5162
msgid "associated sock"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5164
msgid ""
"This hook can be used by the module to update any security state associated "
"with the TUN device's sock structure."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5177
msgid "Update TUN device LSM state on open"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5179
msgid ""
"This hook can be used by the module to update any security state associated "
"with the TUN device's security structure."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5192
msgid "Update the LSM on a SCTP association req"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5198
#: security/security.c:5235 security/security.c:5252
msgid "``struct sctp_association *asoc``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5193
#: security/security.c:5230 security/security.c:5247
msgid "SCTP association"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5194
msgid "packet requesting the association"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5195
msgid ""
"Passes the **asoc** and **chunk->skb** of the association INIT packet to the "
"LSM."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5208
msgid "Validate a list of addrs for a SCTP option"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5211
msgid "``int optname``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5210
msgid "SCTP option to validate"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5212
msgid "``struct sockaddr *address``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5211
msgid "list of IP addresses to validate"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5213
msgid "``int addrlen``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5212
msgid "length of the address list"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5213
msgid ""
"Validiate permissions required for each address associated with sock **sk**. "
"Depending on **optname**, the addresses will be treated as either a connect "
"or bind service. The **addrlen** is calculated on each IPv4 and IPv6 address "
"using sizeof(struct sockaddr_in) or sizeof(struct sockaddr_in6)."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5229
msgid "Clone a SCTP sock's LSM state"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5233
msgid ""
"Called whenever a new socket is created by accept(2) (i.e. a TCP style "
"socket) or when a socket is 'peeled off' e.g userspace calls sctp_peeloff(3)."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5246
msgid "Update LSM state when assoc established"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5248
msgid "packet establishing the association"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5249
msgid ""
"Passes the **asoc** and **chunk->skb** of the association COOKIE_ACK packet "
"to the security module."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5283
msgid "Check if access to an IB pkey is allowed"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5289
#: security/security.c:5305 security/security.c:5347
msgid "``void *sec``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5286
msgid "``u64 subnet_prefix``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5285
msgid "subnet prefix of the port"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5287
msgid "``u16 pkey``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5286
msgid "IB pkey"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5287
msgid "Check permission to access a pkey when modifying a QP."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5299
msgid "Check if SMPs traffic is allowed"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5302
msgid "``const char *dev_name``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5301
msgid "IB device name"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5303
msgid "``u8 port_num``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5302
msgid "port number"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5303
msgid "Check permissions to send and receive SMPs on a end port."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5316
msgid "Allocate an Infiniband LSM blob"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5322
msgid "``void **sec``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5318
msgid "Allocate a security structure for Infiniband objects."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5321
msgid "Returns 0 on success, non-zero on failure."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5341
msgid "Free an Infiniband LSM blob"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5343
msgid "Deallocate an Infiniband security structure."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5355
msgid "Allocate a xfrm policy LSM blob"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5361
msgid "``struct xfrm_sec_ctx **ctxp``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5356
msgid "xfrm security context being added to the SPD"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5358
#: security/security.c:5418
msgid "``struct xfrm_user_sec_ctx *sec_ctx``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5357
#: security/security.c:5417
msgid "security label provided by userspace"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5359
msgid "``gfp_t gfp``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5358
msgid "gfp flags"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5359
msgid ""
"Allocate a security structure to the xp->security field; the security field "
"is initialized to NULL when the xfrm_policy is allocated."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5363
#: security/security.c:5423 security/security.c:5931
msgid "Return 0 if operation was successful."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5390
msgid "Free a xfrm security context"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5396
msgid "``struct xfrm_sec_ctx *ctx``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5391
msgid "xfrm security context"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5392
msgid "Free LSM resources associated with **ctx**."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5415
msgid "Allocate a xfrm state LSM blob"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5421
#: security/security.c:5457
msgid "``struct xfrm_state *x``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5416
msgid "xfrm state being added to the SAD"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5418
msgid ""
"Allocate a security structure to the **x->security** field; the security "
"field is initialized to NULL when the xfrm_state is allocated. Set the "
"context to correspond to **sec_ctx**."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5451
msgid "Check if deleting a xfrm state is allowed"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5452
msgid "xfrm state"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5453
msgid "Authorize deletion of x->security."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5909
msgid "Check if a kernel feature is allowed"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5915
msgid "``enum lockdown_reason what``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5910
msgid "requested kernel feature"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5911
msgid ""
"Determine whether a kernel feature that potentially enables arbitrary code "
"execution in kernel space should be permitted."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5924
msgid "Allocate a block device LSM blob"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5930
#: security/security.c:5956 security/security.c:5974
msgid "``struct block_device *bdev``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5925
#: security/security.c:5951 security/security.c:5969
msgid "block device"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5926
msgid ""
"Allocate and attach a security structure to **bdev->bd_security**.  The "
"security field is initialized to NULL when the bdev structure is allocated."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5950
msgid "Free a block device's LSM blob"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5952
msgid ""
"Deallocate the bdev security structure and set **bdev->bd_security** to NULL."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5968
msgid "Set the device's integrity data"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5973
msgid ""
"Register a verified integrity measurement of a bdev with LSMs. LSMs should "
"free the previously saved data if **value** is NULL. Please note that the "
"new hook should be invoked every time the security information is updated to "
"keep these data current. For example, in dm-verity, if the mapping table is "
"reloaded and configured to use a different dm-verity target with a new "
"roothash and signing information, the previously stored data in the LSM blob "
"will become obsolete. It is crucial to re-invoke the hook to refresh these "
"data and ensure they are up to date. This necessity arises from the design "
"of device-mapper, where a device-mapper device is first created, and then "
"targets are subsequently loaded into it. These targets can be modified "
"multiple times during the device's lifetime. Therefore, while the LSM blob "
"is allocated during the creation of the block device, its actual contents "
"are not initialized at this stage and can change substantially over time. "
"This includes alterations from data that the LSMs 'trusts' to those they do "
"not, making it essential to handle these changes correctly. Failure to "
"address this dynamic aspect could potentially allow for bypassing LSM checks."
msgstr ""
