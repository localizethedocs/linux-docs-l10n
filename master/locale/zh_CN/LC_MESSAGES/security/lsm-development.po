# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../security/lsm-development.rst:3
msgid "Linux Security Module Development"
msgstr ""

#: ../../../security/lsm-development.rst:5
msgid ""
"Based on https://lore.kernel.org/r/20071026073721.618b4778@laptopd505.fenrus."
"org, a new LSM is accepted into the kernel when its intent (a description of "
"what it tries to protect against and in what cases one would expect to use "
"it) has been appropriately documented in ``Documentation/admin-guide/LSM/``. "
"This allows an LSM's code to be easily compared to its goals, and so that "
"end users and distros can make a more informed decision about which LSMs "
"suit their requirements."
msgstr ""

#: ../../../security/lsm-development.rst:13
msgid ""
"For extensive documentation on the available LSM hook interfaces, please see "
"``security/security.c`` and associated structures:"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1446
msgid "Free memory associated with mount options"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1450
#: security/security.c:1465 security/security.c:1480 security/security.c:1497
#: security/security.c:1607 security/security.c:1636 security/security.c:1743
#: security/security.c:1767 security/security.c:1791 security/security.c:1887
#: security/security.c:1922 security/security.c:1957 security/security.c:2010
#: security/security.c:2102 security/security.c:2188 security/security.c:2332
#: security/security.c:2745 security/security.c:2779 security/security.c:2797
#: security/security.c:2822 security/security.c:2933 security/security.c:2952
#: security/security.c:3152 security/security.c:3299 security/security.c:3314
#: security/security.c:3374 security/security.c:3391 security/security.c:3411
#: security/security.c:3426 security/security.c:3547 security/security.c:3561
#: security/security.c:4103 security/security.c:4314 security/security.c:4328
#: security/security.c:4346 security/security.c:4364 security/security.c:4381
#: security/security.c:4394 security/security.c:4407 security/security.c:4428
#: security/security.c:4450 security/security.c:4521 security/security.c:4549
#: security/security.c:4616 security/security.c:4802 security/security.c:4842
#: security/security.c:4913 security/security.c:4926 security/security.c:4939
#: security/security.c:4953 security/security.c:4967 security/security.c:4997
#: security/security.c:5011 security/security.c:5025 security/security.c:5036
#: security/security.c:5047 security/security.c:5073 security/security.c:5085
#: security/security.c:5098 security/security.c:5112 security/security.c:5128
#: security/security.c:5143 security/security.c:5159 security/security.c:5180
#: security/security.c:5197 security/security.c:5234 security/security.c:5250
#: security/security.c:5267 security/security.c:5292 security/security.c:5306
#: security/security.c:5341 security/security.c:5366 security/security.c:5402
#: security/security.c:5827 security/security.c:5842 security/security.c:5868
#: security/security.c:5886
msgid "**Parameters**"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1452
#: security/security.c:1464
msgid "``void **mnt_opts``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1447
#: security/security.c:1463
msgid "LSM processed mount options"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3
#: security/security.c:1449 security/security.c:1465 security/security.c:1480
#: security/security.c:1497 security/security.c:1609 security/security.c:1638
#: security/security.c:1746 security/security.c:1770 security/security.c:1794
#: security/security.c:1889 security/security.c:1923 security/security.c:1957
#: security/security.c:2013 security/security.c:2103 security/security.c:2189
#: security/security.c:2333 security/security.c:2746 security/security.c:2779
#: security/security.c:2797 security/security.c:2824 security/security.c:2934
#: security/security.c:2953 security/security.c:3152 security/security.c:3299
#: security/security.c:3314 security/security.c:3375 security/security.c:3393
#: security/security.c:3411 security/security.c:3428 security/security.c:3546
#: security/security.c:3561 security/security.c:4103 security/security.c:4313
#: security/security.c:4328 security/security.c:4346 security/security.c:4365
#: security/security.c:4380 security/security.c:4393 security/security.c:4408
#: security/security.c:4429 security/security.c:4450 security/security.c:4522
#: security/security.c:4549 security/security.c:4616 security/security.c:4802
#: security/security.c:4843 security/security.c:4913 security/security.c:4926
#: security/security.c:4939 security/security.c:4953 security/security.c:4968
#: security/security.c:4997 security/security.c:5010 security/security.c:5046
#: security/security.c:5072 security/security.c:5097 security/security.c:5112
#: security/security.c:5127 security/security.c:5143 security/security.c:5161
#: security/security.c:5181 security/security.c:5197 security/security.c:5235
#: security/security.c:5251 security/security.c:5266 security/security.c:5291
#: security/security.c:5307 security/security.c:5340 security/security.c:5366
#: security/security.c:5401 security/security.c:5826 security/security.c:5841
#: security/security.c:5867 security/security.c:5888
msgid "**Description**"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1448
msgid "Free memory associated with **mnt_ops**."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1461
msgid "Consume LSM mount options"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1467
msgid "``char *options``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1462
msgid "mount options"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1464
msgid "Eat (scan **options**) and save them in **mnt_opts**."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1466
#: security/security.c:1482 security/security.c:1499 security/security.c:1610
#: security/security.c:1639 security/security.c:1749 security/security.c:1774
#: security/security.c:1809 security/security.c:1891 security/security.c:1924
#: security/security.c:1958 security/security.c:2014 security/security.c:2104
#: security/security.c:2191 security/security.c:2337 security/security.c:2750
#: security/security.c:2783 security/security.c:2800 security/security.c:2826
#: security/security.c:2938 security/security.c:2955 security/security.c:3155
#: security/security.c:3376 security/security.c:3396 security/security.c:3412
#: security/security.c:3432 security/security.c:4314 security/security.c:4332
#: security/security.c:4350 security/security.c:4366 security/security.c:4414
#: security/security.c:4436 security/security.c:4452 security/security.c:4534
#: security/security.c:4561 security/security.c:4617 security/security.c:4806
#: security/security.c:4848 security/security.c:4969 security/security.c:5011
#: security/security.c:5048 security/security.c:5084 security/security.c:5098
#: security/security.c:5114 security/security.c:5129 security/security.c:5144
#: security/security.c:5165 security/security.c:5199 security/security.c:5236
#: security/security.c:5252 security/security.c:5267 security/security.c:5309
#: security/security.c:5369 security/security.c:5402 security/security.c:5828
#: security/security.c:5844 security/security.c:5905
msgid "**Return**"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1467
#: security/security.c:1750 security/security.c:2827 security/security.c:5906
msgid "Returns 0 on success, negative values on failure."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1476
msgid "Check if new mount options are allowed"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1482
#: security/security.c:1499 security/security.c:1609
msgid "``struct super_block *sb``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1477
#: security/security.c:1494 security/security.c:1604
msgid "filesystem superblock"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1479
#: security/security.c:1496 security/security.c:1606
msgid "``void *mnt_opts``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1478
msgid "new mount options"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1479
msgid ""
"Determine if the new mount options in **mnt_opts** are allowed given the "
"existing mounted filesystem at **sb**.  **sb** superblock being compared."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1483
msgid "Returns 0 if options are compatible."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1493
msgid "Verify no incompatible mount changes during remount"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1495
msgid "(re)mount options"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1496
msgid ""
"Extracts security system specific mount options and verifies no changes are "
"being made to those options."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1500
#: security/security.c:1892 security/security.c:1925 security/security.c:1959
#: security/security.c:2015 security/security.c:2105 security/security.c:2192
#: security/security.c:2338 security/security.c:2939 security/security.c:2956
#: security/security.c:3156 security/security.c:3377 security/security.c:3397
#: security/security.c:3413 security/security.c:3433 security/security.c:4535
#: security/security.c:4562 security/security.c:4807 security/security.c:4970
#: security/security.c:5012 security/security.c:5085 security/security.c:5099
#: security/security.c:5115 security/security.c:5130 security/security.c:5200
#: security/security.c:5237 security/security.c:5253 security/security.c:5403
#: security/security.c:5829
msgid "Returns 0 if permission is granted."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1603
msgid "Set the mount options for a filesystem"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1605
msgid "binary mount options"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1607
#: security/security.c:1636
msgid "``unsigned long kern_flags``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1606
#: security/security.c:1635
msgid "kernel flags (in)"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1608
#: security/security.c:1637
msgid "``unsigned long *set_kern_flags``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1607
#: security/security.c:1636
msgid "kernel flags (out)"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1608
msgid "Set the security relevant mount options used for a superblock."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1611
#: security/security.c:1640 security/security.c:1775 security/security.c:4367
#: security/security.c:4415 security/security.c:4437 security/security.c:4453
#: security/security.c:4849 security/security.c:5145 security/security.c:5166
msgid "Returns 0 on success, error on failure."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1632
msgid "Duplicate superblock mount options"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1638
msgid "``const struct super_block *oldsb``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1633
msgid "source superblock"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1635
msgid "``struct super_block *newsb``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1634
msgid "destination superblock"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1637
msgid "Copy all security options from a given superblock to another."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1739
#: security/security.c:1763
msgid "Perform dentry initialization"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1745
#: security/security.c:1769 security/security.c:1886 security/security.c:1921
#: security/security.c:1956 security/security.c:2101 security/security.c:2187
#: security/security.c:2331 security/security.c:4105 security/security.c:4430
msgid "``struct dentry *dentry``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1740
#: security/security.c:1764
msgid "the dentry to initialize"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1742
#: security/security.c:1766
msgid "``int mode``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1741
#: security/security.c:1765
msgid "mode used to determine resource type"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1743
msgid "``const struct qstr *name``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1742
#: security/security.c:1766
msgid "name of the last path component"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1744
msgid "``const char **xattr_name``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1743
msgid "name of the security/LSM xattr"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1745
msgid "``struct lsm_context *lsmctx``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1744
msgid "pointer to the resulting LSM context"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1745
msgid ""
"Compute a context for a dentry as the inode is not yet available since NFSv4 "
"has no label backed by an EA anyway.  It is important to note that "
"**xattr_name** does not need to be free'd by the caller, it is a static "
"string."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1767
msgid "``struct qstr *name``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1768
msgid "``const struct cred *old``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1767
msgid "creds to use for LSM context calculations"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1769
msgid "``struct cred *new``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1768
msgid "creds to modify"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1769
msgid ""
"Compute a context for a dentry as the inode is not yet available and set "
"that context in passed in creds so that new files are created using that "
"context. Context is calculated using the passed in creds and not the creds "
"of the caller."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1787
msgid "Initialize an inode's LSM context"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1793
#: security/security.c:2747 security/security.c:4102 security/security.c:4396
#: security/security.c:4409 security/security.c:4452
msgid "``struct inode *inode``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1788
msgid "the inode"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1790
#: security/security.c:2104 security/security.c:2190
msgid "``struct inode *dir``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1789
#: security/security.c:1884 security/security.c:1919 security/security.c:1954
#: security/security.c:2185
msgid "parent directory"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1791
msgid "``const struct qstr *qstr``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1790
msgid "last component of the pathname"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1792
msgid "``const initxattrs initxattrs``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1791
msgid "callback function to write xattrs"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1793
msgid "``void *fs_data``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1792
msgid "filesystem specific data"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1793
msgid ""
"Obtain the security attribute name suffix and value to set on a newly "
"created inode and set up the incore security field for the new inode.  This "
"hook is called by the fs code as part of the inode creation transaction and "
"provides for atomic labeling of the inode, unlike the post_create/mkdir/... "
"hooks called by the VFS."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1799
msgid ""
"The hook function is expected to populate the xattrs array, by calling "
"lsm_get_xattr_slot() to retrieve the slots reserved by the security module "
"with the lbs_xattr_count field of the lsm_blob_sizes structure.  For each "
"slot, the hook function should set ->name to the attribute name suffix (e.g. "
"selinux), to allocate ->value (will be freed by the caller) and set it to "
"the attribute value, to set ->value_len to the length of the value.  If the "
"security module does not use security attributes or does not wish to put a "
"security attribute on this particular inode, then it should return -"
"EOPNOTSUPP to skip this processing."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1810
msgid ""
"Returns 0 if the LSM successfully initialized all of the inode security "
"attributes that are required, negative values otherwise."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1883
msgid "Check if creating a special file is allowed"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1889
#: security/security.c:1924 security/security.c:1959
msgid "``const struct path *dir``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1885
msgid "new file"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1887
#: security/security.c:1922 security/security.c:2102 security/security.c:2188
msgid "``umode_t mode``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1886
msgid "new file mode"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1888
msgid "``unsigned int dev``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1887
msgid "device number"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1888
msgid ""
"Check permissions when creating a file. Note that this hook is called even "
"if mknod operation is being done for a regular file."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1918
#: security/security.c:2184
msgid "Check if creating a new directory is allowed"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1920
#: security/security.c:2186
msgid "new directory"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1921
#: security/security.c:2187
msgid "new directory mode"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1922
msgid "Check permissions to create a new directory in the existing directory."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1953
msgid "Check if removing a hard link is allowed"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1955
#: security/security.c:2330 security/security.c:3371 security/security.c:3388
msgid "file"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1956
msgid "Check the permission to remove a hard link to a file."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2006
msgid "Check if renaming a file is allowed"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2012
msgid "``const struct path *old_dir``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2007
msgid "parent directory of the old file"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2009
msgid "``struct dentry *old_dentry``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2008
msgid "the old file"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2010
msgid "``const struct path *new_dir``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2009
msgid "parent directory of the new file"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2011
msgid "``struct dentry *new_dentry``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2010
msgid "the new file"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2012
msgid "``unsigned int flags``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2011
msgid "flags"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2012
msgid "Check for permission to rename a file or directory."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2098
msgid "Check if creating a file is allowed"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2099
msgid "the parent directory"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2100
msgid "the file being created"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2101
msgid "requested file mode"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2102
msgid "Check permission to create a regular file."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2188
msgid ""
"Check permissions to create a new directory in the existing directory "
"associated with inode structure **dir**."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2328
msgid "Check if setting file attributes is allowed"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2334
msgid "``struct mnt_idmap *idmap``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2329
msgid "idmap of the mount"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2332
msgid "``struct iattr *attr``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2331
msgid "new attributes"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2332
msgid ""
"Check permission before setting file attributes.  Note that the kernel call "
"to notify_change is performed from several locations, whenever file "
"attributes change (such as when a file is truncated, chown/chmod operations, "
"transferring disk quotas, etc)."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2741
msgid "List the xattr security label names"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2742
#: security/security.c:2819 security/security.c:4101 security/security.c:4391
#: security/security.c:4404 security/security.c:4425 security/security.c:4447
msgid "inode"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2744
msgid "``char *buffer``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2743
msgid "buffer"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2745
msgid "``size_t buffer_size``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2744
msgid "size of buffer"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2745
msgid ""
"Copy the extended attribute names for the security labels associated with "
"**inode** into **buffer**.  The maximum size of **buffer** is specified by "
"**buffer_size**.  **buffer** may be NULL to request the size of the buffer "
"required."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2751
msgid "Returns number of bytes used/required on success."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2775
msgid "Create new creds for an overlayfs copy-up op"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2781
#: security/security.c:2799
msgid "``struct dentry *src``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2776
#: security/security.c:2794
msgid "union dentry of copy-up file"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2778
msgid "``struct cred **new``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2777
msgid "newly created creds"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2778
msgid ""
"A file is about to be copied up from lower layer to upper layer of overlay "
"filesystem. Security module can prepare a set of new creds and modify as "
"need be and return new creds. Caller will switch to new creds temporarily to "
"create new file and release newly allocated creds."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2784
msgid "Returns 0 on success or a negative error code on error."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2793
msgid "Filter xattrs in an overlayfs copy-up op"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2796
#: security/security.c:4316
msgid "``const char *name``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2795
msgid "xattr name"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2796
msgid ""
"Filter the xattrs being copied up when a unioned file is copied up from a "
"lower layer to the union/overlay layer.   The caller is responsible for "
"reading and writing the xattrs, this hook is merely a filter."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2801
msgid ""
"Returns 0 to accept the xattr, -ECANCELED to discard the xattr, -EOPNOTSUPP "
"if the security module does not know about attribute, or a negative error "
"code to abort the copy up."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2818
msgid "Set the inode's integrity data"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2824
msgid "``const struct inode *inode``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2821
#: security/security.c:5885
msgid "``enum lsm_integrity_type type``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2820
#: security/security.c:5884
msgid "type of integrity, e.g. hash digest, signature, etc"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2822
#: security/security.c:5886
msgid "``const void *value``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2821
#: security/security.c:5885
msgid "the integrity value"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2823
#: security/security.c:5887
msgid "``size_t size``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2822
#: security/security.c:5886
msgid "size of the integrity value"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2823
msgid ""
"Register a verified integrity measurement of a inode with LSMs. LSMs should "
"free the previously saved data if **value** is NULL."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2929
msgid "Check if an ioctl is allowed"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2935
#: security/security.c:2954 security/security.c:3154 security/security.c:3376
#: security/security.c:3393
msgid "``struct file *file``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2930
#: security/security.c:2949
msgid "associated file"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2932
#: security/security.c:2951
msgid "``unsigned int cmd``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2931
#: security/security.c:2950
msgid "ioctl cmd"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2933
#: security/security.c:2952
msgid "``unsigned long arg``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2932
#: security/security.c:2951
msgid "ioctl arguments"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2933
msgid ""
"Check permission for an ioctl operation on **file**.  Note that **arg** "
"sometimes represents a user space pointer; in other cases, it may be a "
"simple integer value.  When **arg** represents a user space pointer, it "
"should never be used by the security module."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2948
msgid "Check if an ioctl is allowed in compat mode"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:2952
msgid ""
"Compat version of security_file_ioctl() that correctly handles 32-bit "
"processes running on 64-bit kernels."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3148
msgid "Evaluate a file after it has been opened"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3149
msgid "the file"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3151
msgid "``int mask``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3150
msgid "access mask"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3151
msgid ""
"Evaluate an opened file and the access mask requested with open(). The hook "
"is useful for LSMs that require the file content to be available in order to "
"make decisions."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3295
msgid "Get the secid from a set of credentials"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3301
#: security/security.c:3316
msgid "``const struct cred *c``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3296
#: security/security.c:3311
msgid "credentials"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3298
#: security/security.c:4364 security/security.c:4842
msgid "``u32 *secid``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3297
msgid "secid value"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3298
msgid ""
"Retrieve the security identifier of the cred structure **c**.  In case of "
"failure, **secid** will be set to zero."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3310
msgid "Get the LSM data from a set of credentials"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3313
#: security/security.c:3549 security/security.c:3560 security/security.c:4348
msgid "``struct lsm_prop *prop``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3312
msgid "destination for the LSM data"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3313
msgid ""
"Retrieve the security data of the cred structure **c**.  In case of failure, "
"**prop** will be cleared."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3370
#: security/security.c:3387
msgid "Read a file specified by userspace"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3373
#: security/security.c:3392
msgid "``enum kernel_read_file_id id``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3372
#: security/security.c:3391
msgid "file identifier"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3374
#: security/security.c:3410
msgid "``bool contents``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3373
msgid "trust if security_kernel_post_read_file() will be called"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3374
msgid "Read a file specified by userspace."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3390
#: security/security.c:3428
msgid "``char *buf``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3389
msgid "file contents"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3391
#: security/security.c:3425
msgid "``loff_t size``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3390
msgid "size of file contents"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3392
msgid ""
"Read a file specified by userspace.  This must be paired with a prior call "
"to security_kernel_read_file() call that indicated this hook would also be "
"called, see security_kernel_read_file() for more information."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3407
msgid "Load data provided by userspace"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3413
#: security/security.c:3426
msgid "``enum kernel_load_data_id id``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3408
#: security/security.c:3425
msgid "data identifier"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3409
msgid "true if security_kernel_post_load_data() will be called"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3410
msgid "Load data provided by userspace."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3422
msgid "Load userspace data from a non-file source"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3423
msgid "data"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3424
msgid "size of data"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3427
msgid "``char *description``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3426
msgid "text description of data, specific to the id value"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3427
msgid ""
"Load data provided by a non-file source (usually userspace buffer).  This "
"must be paired with a prior security_kernel_load_data() call that indicated "
"this hook would also be called, see security_kernel_load_data() for more "
"information."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3543
msgid "Current task's subjective LSM data"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3544
#: security/security.c:3559 security/security.c:4343
msgid "lsm specific information"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3545
msgid ""
"Retrieve the subjective security identifier of the current task and return "
"it in **prop**."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3557
msgid "Get a task's objective LSM data"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3563
msgid "``struct task_struct *p``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3558
msgid "target task"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:3560
msgid ""
"Retrieve the objective security identifier of the task_struct in **p** and "
"return it in **prop**."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4099
msgid "Populate an inode's LSM state based on a dentry"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4100
msgid "dentry"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4102
msgid "Fill in **inode** security information for a **dentry** if allowed."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4310
msgid "Check if the named attribute is a MAC label"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4311
msgid "full extended attribute name"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4312
msgid ""
"Check if the extended attribute specified by **name** represents a MAC label."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4315
msgid "Returns 1 if name is a MAC attribute otherwise returns 0."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4324
msgid "Convert a secid to a secctx"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4330
#: security/security.c:5013
msgid "``u32 secid``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4325
#: security/security.c:4363
msgid "secid"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4327
#: security/security.c:4345 security/security.c:4383 security/security.c:4449
msgid "``struct lsm_context *cp``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4326
#: security/security.c:4344
msgid "the LSM context"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4327
msgid ""
"Convert secid to security context.  If **cp** is NULL the length of the "
"result will be returned, but no data will be returned.  This does mean that "
"the length could change between calls to check the length and the next call "
"which actually allocates and returns the data."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4333
#: security/security.c:4351
msgid "Return length of data on success, error on failure."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4342
msgid "Convert a lsm_prop to a secctx"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4345
msgid ""
"Convert a **prop** entry to security context.  If **cp** is NULL the length "
"of the result will be returned. This does mean that the length could change "
"between calls to check the length and the next call which actually allocates "
"and returns the **cp**."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4360
msgid "Convert a secctx to a secid"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4366
msgid "``const char *secdata``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4361
#: security/security.c:4405 security/security.c:4426
msgid "secctx"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4363
msgid "``u32 seclen``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4362
#: security/security.c:4406 security/security.c:4427
msgid "length of secctx"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4364
msgid "Convert security context to secid."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4377
msgid "Free a secctx buffer"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4378
msgid "the security context"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4379
msgid "Release the security context."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4390
msgid "Invalidate an inode's security label"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4392
msgid ""
"Notify the security module that it must revalidate the security context of "
"an inode."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4403
msgid "Notify the LSM of an inode's security label"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4406
#: security/security.c:4427
msgid "``void *ctx``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4407
#: security/security.c:4428
msgid "``u32 ctxlen``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4407
msgid ""
"Notify the security module of what the security context of an inode should "
"be.  Initializes the incore security context managed by the security module "
"for this inode.  Example usage: NFS client invokes this hook to initialize "
"the security context in its incore inode to the value provided by the server "
"for the file when the server returned the file's attributes to the client. "
"Must be called with inode->i_mutex locked."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4424
msgid "Change the security label of an inode"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4428
msgid ""
"Change the security context of an inode.  Updates the incore security "
"context managed by the security module and invokes the fs code as needed "
"(via __vfs_setxattr_noperm) to update any backing xattrs that represent the "
"context.  Example usage: NFS server invokes this hook to change the security "
"context in its incore inode and on the backing filesystem to a value "
"provided by the client on a SETATTR operation.  Must be called with inode-"
">i_mutex locked."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4446
msgid "Get the security label of an inode"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4448
msgid "security context"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4449
msgid ""
"On success, returns 0 and fills out **cp** with the security context for the "
"given **inode**."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4517
msgid "Check if a AF_UNIX stream is allowed"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4523
msgid "``struct sock *sock``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4518
#: security/security.c:4546
msgid "originating sock"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4520
msgid "``struct sock *other``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4519
#: security/security.c:4547
msgid "peer sock"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4521
#: security/security.c:4912 security/security.c:5180
msgid "``struct sock *newsk``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4520
msgid "new sock"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4521
msgid ""
"Check permissions before establishing a Unix domain stream connection "
"between **sock** and **other**."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4524
#: security/security.c:4551
msgid ""
"The **unix_stream_connect** and **unix_may_send** hooks were necessary "
"because Linux provides an alternative to the conventional file name space "
"for Unix domain sockets.  Whereas binding and connecting to sockets in the "
"file name space is mediated by the typical file permissions (and caught by "
"the mknod and permission hooks in inode_security_ops), binding and "
"connecting to sockets in the abstract name space is completely unmediated.  "
"Sufficient control of Unix domain sockets in the abstract name space isn't "
"possible using only the socket layer hooks, since we need to know the actual "
"target socket, which is not looked up until we are inside the af_unix code."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4545
msgid "Check if AF_UNIX socket can send datagrams"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4551
#: security/security.c:4844
msgid "``struct socket *sock``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4548
msgid "``struct socket *other``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4548
msgid ""
"Check permissions before connecting or sending datagrams from **sock** to "
"**other**."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4612
msgid "Check if creating a socketpair is allowed"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4618
msgid "``struct socket *socka``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4613
msgid "first socket"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4615
msgid "``struct socket *sockb``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4614
msgid "second socket"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4615
msgid "Check permissions before creating a fresh pair of sockets."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4618
msgid "Returns 0 if permission is granted and the connection was established."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4798
msgid "Check if an incoming network packet is allowed"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4804
#: security/security.c:4955 security/security.c:4999 security/security.c:5114
#: security/security.c:5161 security/security.c:5179
msgid "``struct sock *sk``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4799
msgid "destination sock"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4801
#: security/security.c:4841 security/security.c:4966 security/security.c:4996
#: security/security.c:5142 security/security.c:5196
msgid "``struct sk_buff *skb``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4800
msgid "incoming packet"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4801
msgid ""
"Check permissions on incoming network packets.  This hook is distinct from "
"Netfilter's IP input hooks since it is the first time that the incoming "
"sk_buff **skb** has been associated with a particular socket, **sk**.  Must "
"not sleep inside this hook because some callers hold spinlocks."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4838
msgid "Get the remote peer label"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4839
#: security/security.c:5156
msgid "socket"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4840
msgid "datagram packet"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4841
msgid "remote peer label secid"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4842
msgid ""
"This hook allows the security module to provide peer socket security state "
"for udp sockets on a per-packet basis to userspace via getsockopt "
"SO_GETPEERSEC. The application must first have indicated the IP_PASSSEC "
"option via getsockopt. It can then retrieve the security state returned by "
"this hook for a packet via the SCM_SECURITY ancillary message type."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4909
msgid "Clone a sock's LSM state"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4915
#: security/security.c:4928 security/security.c:4969
msgid "``const struct sock *sk``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4910
#: security/security.c:5178
msgid "original sock"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4911
#: security/security.c:5179
msgid "target sock"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4912
msgid "Clone/copy security structure."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4922
msgid "Set a flow's secid based on socket"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4923
msgid "original socket"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4925
#: security/security.c:4938
msgid "``struct flowi_common *flic``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4924
#: security/security.c:4937
msgid "target flow"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4925
msgid "Set the target flow's secid to socket's secid."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4935
msgid "Set a flow's secid based on request_sock"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4941
msgid "``const struct request_sock *req``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4936
msgid "request_sock"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4938
msgid "Sets **flic**'s secid to **req**'s secid."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4949
msgid "Reconcile LSM state when grafting a sock on a socket"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4950
msgid "sock being grafted"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4952
msgid "``struct socket *parent``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4951
msgid "target parent socket"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4952
msgid ""
"Sets **parent**'s inode secid to **sk**'s secid and update **sk** with any "
"necessary LSM state from **parent**."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4963
msgid "Set request_sock state using incoming connect"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4964
msgid "parent listening sock"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4965
msgid "incoming connection"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4967
msgid "``struct request_sock *req``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4966
msgid "new request_sock"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4967
msgid ""
"Initialize the **req** LSM state based on **sk** and the incoming connect in "
"**skb**."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4993
msgid "Update sock's LSM state with connection"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4994
msgid "sock"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4995
msgid "connection packet"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:4996
msgid "Update **sock**'s LSM state to represent a new connection from **skb**."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5007
msgid "Check if setting a secmark is allowed"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5008
msgid "new secmark value"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5009
msgid "Check if the process should be allowed to relabel packets to **secid**."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5021
msgid "Increment the secmark labeling rule count"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5027
#: security/security.c:5038 security/security.c:5087
msgid "``void``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:1
msgid "no arguments"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5022
msgid "Tells the LSM to increment the number of secmark labeling rules loaded."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5032
msgid "Decrement the secmark labeling rule count"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5033
msgid "Tells the LSM to decrement the number of secmark labeling rules loaded."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5043
msgid "Allocate a LSM blob for a TUN device"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5049
msgid "``void **security``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5044
msgid "pointer to the LSM blob"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5045
msgid ""
"This hook allows a module to allocate a security structure for a TUN device, "
"returning the pointer in **security**."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5049
msgid "Returns a zero on success, negative values on failure."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5069
msgid "Free a TUN device LSM blob"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5075
#: security/security.c:5100 security/security.c:5111 security/security.c:5130
msgid "``void *security``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5070
#: security/security.c:5231 security/security.c:5247 security/security.c:5264
#: security/security.c:5289
msgid "LSM blob"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5071
msgid ""
"This hook allows a module to free the security structure for a TUN device."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5081
msgid "Check if creating a TUN device is allowed"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5082
msgid "Check permissions prior to creating a new TUN device."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5094
msgid "Check if attaching a TUN queue is allowed"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5095
#: security/security.c:5110 security/security.c:5125
msgid "TUN device LSM blob"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5096
msgid "Check permissions prior to attaching to a TUN device queue."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5108
msgid "Update TUN device LSM state on attach"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5109
msgid "associated sock"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5111
msgid ""
"This hook can be used by the module to update any security state associated "
"with the TUN device's sock structure."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5124
msgid "Update TUN device LSM state on open"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5126
msgid ""
"This hook can be used by the module to update any security state associated "
"with the TUN device's security structure."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5139
msgid "Update the LSM on a SCTP association req"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5145
#: security/security.c:5182 security/security.c:5199
msgid "``struct sctp_association *asoc``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5140
#: security/security.c:5177 security/security.c:5194
msgid "SCTP association"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5141
msgid "packet requesting the association"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5142
msgid ""
"Passes the **asoc** and **chunk->skb** of the association INIT packet to the "
"LSM."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5155
msgid "Validate a list of addrs for a SCTP option"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5158
msgid "``int optname``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5157
msgid "SCTP option to validate"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5159
msgid "``struct sockaddr *address``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5158
msgid "list of IP addresses to validate"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5160
msgid "``int addrlen``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5159
msgid "length of the address list"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5160
msgid ""
"Validiate permissions required for each address associated with sock **sk**. "
"Depending on **optname**, the addresses will be treated as either a connect "
"or bind service. The **addrlen** is calculated on each IPv4 and IPv6 address "
"using sizeof(struct sockaddr_in) or sizeof(struct sockaddr_in6)."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5176
msgid "Clone a SCTP sock's LSM state"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5180
msgid ""
"Called whenever a new socket is created by accept(2) (i.e. a TCP style "
"socket) or when a socket is 'peeled off' e.g userspace calls sctp_peeloff(3)."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5193
msgid "Update LSM state when assoc established"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5195
msgid "packet establishing the association"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5196
msgid ""
"Passes the **asoc** and **chunk->skb** of the association COOKIE_ACK packet "
"to the security module."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5230
msgid "Check if access to an IB pkey is allowed"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5236
#: security/security.c:5252 security/security.c:5294
msgid "``void *sec``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5233
msgid "``u64 subnet_prefix``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5232
msgid "subnet prefix of the port"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5234
msgid "``u16 pkey``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5233
msgid "IB pkey"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5234
msgid "Check permission to access a pkey when modifying a QP."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5246
msgid "Check if SMPs traffic is allowed"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5249
msgid "``const char *dev_name``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5248
msgid "IB device name"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5250
msgid "``u8 port_num``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5249
msgid "port number"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5250
msgid "Check permissions to send and receive SMPs on a end port."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5263
msgid "Allocate an Infiniband LSM blob"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5269
msgid "``void **sec``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5265
msgid "Allocate a security structure for Infiniband objects."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5268
msgid "Returns 0 on success, non-zero on failure."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5288
msgid "Free an Infiniband LSM blob"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5290
msgid "Deallocate an Infiniband security structure."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5302
msgid "Allocate a xfrm policy LSM blob"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5308
msgid "``struct xfrm_sec_ctx **ctxp``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5303
msgid "xfrm security context being added to the SPD"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5305
#: security/security.c:5365
msgid "``struct xfrm_user_sec_ctx *sec_ctx``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5304
#: security/security.c:5364
msgid "security label provided by userspace"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5306
msgid "``gfp_t gfp``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5305
msgid "gfp flags"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5306
msgid ""
"Allocate a security structure to the xp->security field; the security field "
"is initialized to NULL when the xfrm_policy is allocated."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5310
#: security/security.c:5370 security/security.c:5845
msgid "Return 0 if operation was successful."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5337
msgid "Free a xfrm security context"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5343
msgid "``struct xfrm_sec_ctx *ctx``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5338
msgid "xfrm security context"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5339
msgid "Free LSM resources associated with **ctx**."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5362
msgid "Allocate a xfrm state LSM blob"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5368
#: security/security.c:5404
msgid "``struct xfrm_state *x``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5363
msgid "xfrm state being added to the SAD"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5365
msgid ""
"Allocate a security structure to the **x->security** field; the security "
"field is initialized to NULL when the xfrm_state is allocated. Set the "
"context to correspond to **sec_ctx**."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5398
msgid "Check if deleting a xfrm state is allowed"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5399
msgid "xfrm state"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5400
msgid "Authorize deletion of x->security."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5823
msgid "Check if a kernel feature is allowed"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5829
msgid "``enum lockdown_reason what``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5824
msgid "requested kernel feature"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5825
msgid ""
"Determine whether a kernel feature that potentially enables arbitrary code "
"execution in kernel space should be permitted."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5838
msgid "Allocate a block device LSM blob"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5844
#: security/security.c:5870 security/security.c:5888
msgid "``struct block_device *bdev``"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5839
#: security/security.c:5865 security/security.c:5883
msgid "block device"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5840
msgid ""
"Allocate and attach a security structure to **bdev->bd_security**.  The "
"security field is initialized to NULL when the bdev structure is allocated."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5864
msgid "Free a block device's LSM blob"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5866
msgid ""
"Deallocate the bdev security structure and set **bdev->bd_security** to NULL."
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5882
msgid "Set the device's integrity data"
msgstr ""

#: ../../../security/lsm-development:16: security/security.c:5887
msgid ""
"Register a verified integrity measurement of a bdev with LSMs. LSMs should "
"free the previously saved data if **value** is NULL. Please note that the "
"new hook should be invoked every time the security information is updated to "
"keep these data current. For example, in dm-verity, if the mapping table is "
"reloaded and configured to use a different dm-verity target with a new "
"roothash and signing information, the previously stored data in the LSM blob "
"will become obsolete. It is crucial to re-invoke the hook to refresh these "
"data and ensure they are up to date. This necessity arises from the design "
"of device-mapper, where a device-mapper device is first created, and then "
"targets are subsequently loaded into it. These targets can be modified "
"multiple times during the device's lifetime. Therefore, while the LSM blob "
"is allocated during the creation of the block device, its actual contents "
"are not initialized at this stage and can change substantially over time. "
"This includes alterations from data that the LSMs 'trusts' to those they do "
"not, making it essential to handle these changes correctly. Failure to "
"address this dynamic aspect could potentially allow for bypassing LSM checks."
msgstr ""
