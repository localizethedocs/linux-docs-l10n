# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../usb/gadget_serial.rst:3
msgid "Linux Gadget Serial Driver v2.0"
msgstr ""

#: ../../../usb/gadget_serial.rst:5
msgid "11/20/2004"
msgstr ""

#: ../../../usb/gadget_serial.rst:7
msgid "(updated 8-May-2008 for v2.3)"
msgstr ""

#: ../../../usb/gadget_serial.rst:11
msgid "License and Disclaimer"
msgstr ""

#: ../../../usb/gadget_serial.rst:12
msgid ""
"This program is free software; you can redistribute it and/or modify it "
"under the terms of the GNU General Public License as published by the Free "
"Software Foundation; either version 2 of the License, or (at your option) "
"any later version."
msgstr ""

#: ../../../usb/gadget_serial.rst:17
msgid ""
"This program is distributed in the hope that it will be useful, but WITHOUT "
"ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or "
"FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for "
"more details."
msgstr ""

#: ../../../usb/gadget_serial.rst:22
msgid ""
"You should have received a copy of the GNU General Public License along with "
"this program; if not, write to the Free Software Foundation, Inc., 59 Temple "
"Place, Suite 330, Boston, MA 02111-1307 USA."
msgstr ""

#: ../../../usb/gadget_serial.rst:27
msgid ""
"This document and the gadget serial driver itself are Copyright (C) 2004 by "
"Al Borchers (alborchers@steinerpoint.com)."
msgstr ""

#: ../../../usb/gadget_serial.rst:30
msgid ""
"If you have questions, problems, or suggestions for this driver please "
"contact Al Borchers at alborchers@steinerpoint.com."
msgstr ""

#: ../../../usb/gadget_serial.rst:35
msgid "Prerequisites"
msgstr ""

#: ../../../usb/gadget_serial.rst:36
msgid ""
"Versions of the gadget serial driver are available for the 2.4 Linux "
"kernels, but this document assumes you are using version 2.3 or later of the "
"gadget serial driver in a 2.6 Linux kernel."
msgstr ""

#: ../../../usb/gadget_serial.rst:41
msgid ""
"This document assumes that you are familiar with Linux and Windows and know "
"how to configure and build Linux kernels, run standard utilities, use "
"minicom and HyperTerminal, and work with USB and serial devices.  It also "
"assumes you configure the Linux gadget and usb drivers as modules."
msgstr ""

#: ../../../usb/gadget_serial.rst:47
msgid ""
"With version 2.3 of the driver, major and minor device nodes are no longer "
"statically defined.  Your Linux based system should mount sysfs in /sys, and "
"use \"mdev\" (in Busybox) or \"udev\" to make the /dev nodes matching the "
"sysfs /sys/class/tty files."
msgstr ""

#: ../../../usb/gadget_serial.rst:55
msgid "Overview"
msgstr ""

#: ../../../usb/gadget_serial.rst:56
msgid ""
"The gadget serial driver is a Linux USB gadget driver, a USB device side "
"driver.  It runs on a Linux system that has USB device side hardware; for "
"example, a PDA, an embedded Linux system, or a PC with a USB development "
"card."
msgstr ""

#: ../../../usb/gadget_serial.rst:61
msgid ""
"The gadget serial driver talks over USB to either a CDC ACM driver or a "
"generic USB serial driver running on a host PC::"
msgstr ""

#: ../../../usb/gadget_serial.rst:84
msgid ""
"On the device-side Linux system, the gadget serial driver looks like a "
"serial device."
msgstr ""

#: ../../../usb/gadget_serial.rst:87
msgid ""
"On the host-side system, the gadget serial device looks like a CDC ACM "
"compliant class device or a simple vendor specific device with bulk in and "
"bulk out endpoints, and it is treated similarly to other serial devices."
msgstr ""

#: ../../../usb/gadget_serial.rst:92
msgid ""
"The host side driver can potentially be any ACM compliant driver or any "
"driver that can talk to a device with a simple bulk in/out interface.  "
"Gadget serial has been tested with the Linux ACM driver, the Windows usbser."
"sys ACM driver, and the Linux USB generic serial driver."
msgstr ""

#: ../../../usb/gadget_serial.rst:98
msgid ""
"With the gadget serial driver and the host side ACM or generic serial driver "
"running, you should be able to communicate between the host and the gadget "
"side systems as if they were connected by a serial cable."
msgstr ""

#: ../../../usb/gadget_serial.rst:103
msgid ""
"The gadget serial driver only provides simple unreliable data "
"communication.  It does not yet handle flow control or many other features "
"of normal serial devices."
msgstr ""

#: ../../../usb/gadget_serial.rst:109
msgid "Installing the Gadget Serial Driver"
msgstr ""

#: ../../../usb/gadget_serial.rst:110
msgid ""
"To use the gadget serial driver you must configure the Linux gadget side "
"kernel for \"Support for USB Gadgets\", for a \"USB Peripheral "
"Controller\" (for example, net2280), and for the \"Serial Gadget\" driver.  "
"All this are listed under \"USB Gadget Support\" when configuring the "
"kernel.  Then rebuild and install the kernel or modules."
msgstr ""

#: ../../../usb/gadget_serial.rst:117
msgid ""
"Then you must load the gadget serial driver.  To load it as an ACM device "
"(recommended for interoperability), do this::"
msgstr ""

#: ../../../usb/gadget_serial.rst:122
msgid "To load it as a vendor specific bulk in/out device, do this::"
msgstr ""

#: ../../../usb/gadget_serial.rst:126
msgid ""
"This will also automatically load the underlying gadget peripheral "
"controller driver.  This must be done each time you reboot the gadget side "
"Linux system.  You can add this to the start up scripts, if desired."
msgstr ""

#: ../../../usb/gadget_serial.rst:131
msgid ""
"Your system should use mdev (from busybox) or udev to make the device "
"nodes.  After this gadget driver has been set up you should then see a /dev/"
"ttyGS0 node::"
msgstr ""

#: ../../../usb/gadget_serial.rst:139
msgid ""
"Note that the major number (253, above) is system-specific.  If you need to "
"create /dev nodes by hand, the right numbers to use will be in the /sys/"
"class/tty/ttyGS0/dev file."
msgstr ""

#: ../../../usb/gadget_serial.rst:143
msgid ""
"When you link this gadget driver early, perhaps even statically, you may "
"want to set up an /etc/inittab entry to run \"getty\" on it. The /dev/ttyGS0 "
"line should work like most any other serial port."
msgstr ""

#: ../../../usb/gadget_serial.rst:148
msgid ""
"If gadget serial is loaded as an ACM device you will want to use either the "
"Windows or Linux ACM driver on the host side.  If gadget serial is loaded as "
"a bulk in/out device, you will want to use the Linux generic serial driver "
"on the host side.  Follow the appropriate instructions below to install the "
"host side driver."
msgstr ""

#: ../../../usb/gadget_serial.rst:156
msgid "Installing the Windows Host ACM Driver"
msgstr ""

#: ../../../usb/gadget_serial.rst:157
msgid ""
"To use the Windows ACM driver you must have the \"linux-cdc-acm.inf\" file "
"(provided along this document) which supports all recent versions of Windows."
msgstr ""

#: ../../../usb/gadget_serial.rst:161
msgid ""
"When the gadget serial driver is loaded and the USB device connected to the "
"Windows host with a USB cable, Windows should recognize the gadget serial "
"device and ask for a driver.  Tell Windows to find the driver in the folder "
"that contains the \"linux-cdc-acm.inf\" file."
msgstr ""

#: ../../../usb/gadget_serial.rst:166
msgid ""
"For example, on Windows XP, when the gadget serial device is first plugged "
"in, the \"Found New Hardware Wizard\" starts up.  Select \"Install from a "
"list or specific location (Advanced)\", then on the next screen select "
"\"Include this location in the search\" and enter the path or browse to the "
"folder containing the \"linux-cdc-acm.inf\" file. Windows will complain that "
"the Gadget Serial driver has not passed Windows Logo testing, but select "
"\"Continue anyway\" and finish the driver installation."
msgstr ""

#: ../../../usb/gadget_serial.rst:175
msgid ""
"On Windows XP, in the \"Device Manager\" (under \"Control Panel\", "
"\"System\", \"Hardware\") expand the \"Ports (COM & LPT)\" entry and you "
"should see \"Gadget Serial\" listed as the driver for one of the COM ports."
msgstr ""

#: ../../../usb/gadget_serial.rst:180
msgid ""
"To uninstall the Windows XP driver for \"Gadget Serial\", right click on the "
"\"Gadget Serial\" entry in the \"Device Manager\" and select \"Uninstall\"."
msgstr ""

#: ../../../usb/gadget_serial.rst:186
msgid "Installing the Linux Host ACM Driver"
msgstr ""

#: ../../../usb/gadget_serial.rst:187
msgid ""
"To use the Linux ACM driver you must configure the Linux host side kernel "
"for \"Support for Host-side USB\" and for \"USB Modem (CDC ACM) support\"."
msgstr ""

#: ../../../usb/gadget_serial.rst:191 ../../../usb/gadget_serial.rst:223
msgid ""
"Once the gadget serial driver is loaded and the USB device connected to the "
"Linux host with a USB cable, the host system should recognize the gadget "
"serial device.  For example, the command::"
msgstr ""

#: ../../../usb/gadget_serial.rst:197 ../../../usb/gadget_serial.rst:229
msgid "should show something like this:::"
msgstr ""

#: ../../../usb/gadget_serial.rst:212
msgid ""
"If the host side Linux system is configured properly, the ACM driver should "
"be loaded automatically.  The command \"lsmod\" should show the \"acm\" "
"module is loaded."
msgstr ""

#: ../../../usb/gadget_serial.rst:218
msgid "Installing the Linux Host Generic USB Serial Driver"
msgstr ""

#: ../../../usb/gadget_serial.rst:219
msgid ""
"To use the Linux generic USB serial driver you must configure the Linux host "
"side kernel for \"Support for Host-side USB\", for \"USB Serial Converter "
"support\", and for the \"USB Generic Serial Driver\"."
msgstr ""

#: ../../../usb/gadget_serial.rst:242
msgid ""
"You must load the usbserial driver and explicitly set its parameters to "
"configure it to recognize the gadget serial device, like this::"
msgstr ""

#: ../../../usb/gadget_serial.rst:247
msgid "The legacy way is to use module parameters::"
msgstr ""

#: ../../../usb/gadget_serial.rst:251
msgid ""
"If everything is working, usbserial will print a message in the system log "
"saying something like \"Gadget Serial converter now attached to ttyUSB0\"."
msgstr ""

#: ../../../usb/gadget_serial.rst:257
msgid "Testing with Minicom or HyperTerminal"
msgstr ""

#: ../../../usb/gadget_serial.rst:258
msgid ""
"Once the gadget serial driver and the host driver are both installed, and a "
"USB cable connects the gadget device to the host, you should be able to "
"communicate over USB between the gadget and host systems. You can use "
"minicom or HyperTerminal to try this out."
msgstr ""

#: ../../../usb/gadget_serial.rst:263
msgid ""
"On the gadget side run \"minicom -s\" to configure a new minicom session.  "
"Under \"Serial port setup\" set \"/dev/ttygserial\" as the \"Serial "
"Device\".  Set baud rate, data bits, parity, and stop bits, to 9600, 8, "
"none, and 1--these settings mostly do not matter. Under \"Modem and "
"dialing\" erase all the modem and dialing strings."
msgstr ""

#: ../../../usb/gadget_serial.rst:269
msgid ""
"On a Linux host running the ACM driver, configure minicom similarly but use "
"\"/dev/ttyACM0\" as the \"Serial Device\".  (If you have other ACM devices "
"connected, change the device name appropriately.)"
msgstr ""

#: ../../../usb/gadget_serial.rst:273
msgid ""
"On a Linux host running the USB generic serial driver, configure minicom "
"similarly, but use \"/dev/ttyUSB0\" as the \"Serial Device\". (If you have "
"other USB serial devices connected, change the device name appropriately.)"
msgstr ""

#: ../../../usb/gadget_serial.rst:278
msgid ""
"On a Windows host configure a new HyperTerminal session to use the COM port "
"assigned to Gadget Serial.  The \"Port Settings\" will be set automatically "
"when HyperTerminal connects to the gadget serial device, so you can leave "
"them set to the default values--these settings mostly do not matter."
msgstr ""

#: ../../../usb/gadget_serial.rst:284
msgid ""
"With minicom configured and running on the gadget side and with minicom or "
"HyperTerminal configured and running on the host side, you should be able to "
"send data back and forth between the gadget side and host side systems.  "
"Anything you type on the terminal window on the gadget side should appear in "
"the terminal window on the host side and vice versa."
msgstr ""
