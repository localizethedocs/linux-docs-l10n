# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../fb/vesafb.rst:3
msgid "What is vesafb?"
msgstr ""

#: ../../../fb/vesafb.rst:5
msgid "This is a generic driver for a graphic framebuffer on intel boxes."
msgstr ""

#: ../../../fb/vesafb.rst:7
msgid ""
"The idea is simple:  Turn on graphics mode at boot time with the help of the "
"BIOS, and use this as framebuffer device /dev/fb0, like the m68k (and other) "
"ports do."
msgstr ""

#: ../../../fb/vesafb.rst:11
msgid ""
"This means we decide at boot time whenever we want to run in text or "
"graphics mode.  Switching mode later on (in protected mode) is impossible; "
"BIOS calls work in real mode only.  VESA BIOS Extensions Version 2.0 are "
"required, because we need a linear frame buffer."
msgstr ""

#: ../../../fb/vesafb.rst:16
msgid "Advantages:"
msgstr ""

#: ../../../fb/vesafb.rst:18
msgid ""
"It provides a nice large console (128 cols + 48 lines with 1024x768) without "
"using tiny, unreadable fonts."
msgstr ""

#: ../../../fb/vesafb.rst:20
msgid ""
"You can run XF68_FBDev on top of /dev/fb0 (=> non-accelerated X11 support "
"for every VBE 2.0 compliant graphics board)."
msgstr ""

#: ../../../fb/vesafb.rst:22
msgid "Most important: boot logo :-)"
msgstr ""

#: ../../../fb/vesafb.rst:24
msgid "Disadvantages:"
msgstr ""

#: ../../../fb/vesafb.rst:26
msgid "graphic mode is slower than text mode..."
msgstr ""

#: ../../../fb/vesafb.rst:30
msgid "How to use it?"
msgstr ""

#: ../../../fb/vesafb.rst:32
msgid ""
"Switching modes is done using the vga=... boot parameter.  Read "
"Documentation/admin-guide/svga.rst for details."
msgstr ""

#: ../../../fb/vesafb.rst:35
msgid ""
"You should compile in both vgacon (for text mode) and vesafb (for graphics "
"mode). Which of them takes over the console depends on whenever the "
"specified mode is text or graphics."
msgstr ""

#: ../../../fb/vesafb.rst:39
msgid ""
"The graphic modes are NOT in the list which you get if you boot with vga=ask "
"and hit return. The mode you wish to use is derived from the VESA mode "
"number. Here are those VESA mode numbers:"
msgstr ""

#: ../../../fb/vesafb.rst:44 ../../../fb/vesafb.rst:61
msgid "colors"
msgstr ""

#: ../../../fb/vesafb.rst:44 ../../../fb/vesafb.rst:61
msgid "640x480"
msgstr ""

#: ../../../fb/vesafb.rst:44 ../../../fb/vesafb.rst:61
msgid "800x600"
msgstr ""

#: ../../../fb/vesafb.rst:44 ../../../fb/vesafb.rst:61
msgid "1024x768"
msgstr ""

#: ../../../fb/vesafb.rst:44 ../../../fb/vesafb.rst:61
msgid "1280x1024"
msgstr ""

#: ../../../fb/vesafb.rst:46 ../../../fb/vesafb.rst:63
msgid "256"
msgstr ""

#: ../../../fb/vesafb.rst:46
msgid "0x101"
msgstr ""

#: ../../../fb/vesafb.rst:46
msgid "0x103"
msgstr ""

#: ../../../fb/vesafb.rst:46
msgid "0x105"
msgstr ""

#: ../../../fb/vesafb.rst:46
msgid "0x107"
msgstr ""

#: ../../../fb/vesafb.rst:47 ../../../fb/vesafb.rst:64
msgid "32k"
msgstr ""

#: ../../../fb/vesafb.rst:47
msgid "0x110"
msgstr ""

#: ../../../fb/vesafb.rst:47
msgid "0x113"
msgstr ""

#: ../../../fb/vesafb.rst:47
msgid "0x116"
msgstr ""

#: ../../../fb/vesafb.rst:47
msgid "0x119"
msgstr ""

#: ../../../fb/vesafb.rst:48 ../../../fb/vesafb.rst:65
msgid "64k"
msgstr ""

#: ../../../fb/vesafb.rst:48
msgid "0x111"
msgstr ""

#: ../../../fb/vesafb.rst:48
msgid "0x114"
msgstr ""

#: ../../../fb/vesafb.rst:48
msgid "0x117"
msgstr ""

#: ../../../fb/vesafb.rst:48
msgid "0x11A"
msgstr ""

#: ../../../fb/vesafb.rst:49 ../../../fb/vesafb.rst:66
msgid "16M"
msgstr ""

#: ../../../fb/vesafb.rst:49
msgid "0x112"
msgstr ""

#: ../../../fb/vesafb.rst:49
msgid "0x115"
msgstr ""

#: ../../../fb/vesafb.rst:49
msgid "0x118"
msgstr ""

#: ../../../fb/vesafb.rst:49
msgid "0x11B"
msgstr ""

#: ../../../fb/vesafb.rst:53
msgid ""
"The video mode number of the Linux kernel is the VESA mode number plus 0x200:"
msgstr ""

#: ../../../fb/vesafb.rst:56
msgid "Linux_kernel_mode_number = VESA_mode_number + 0x200"
msgstr ""

#: ../../../fb/vesafb.rst:58
msgid "So the table for the Kernel mode numbers are:"
msgstr ""

#: ../../../fb/vesafb.rst:63
msgid "0x301"
msgstr ""

#: ../../../fb/vesafb.rst:63
msgid "0x303"
msgstr ""

#: ../../../fb/vesafb.rst:63
msgid "0x305"
msgstr ""

#: ../../../fb/vesafb.rst:63
msgid "0x307"
msgstr ""

#: ../../../fb/vesafb.rst:64
msgid "0x310"
msgstr ""

#: ../../../fb/vesafb.rst:64
msgid "0x313"
msgstr ""

#: ../../../fb/vesafb.rst:64
msgid "0x316"
msgstr ""

#: ../../../fb/vesafb.rst:64
msgid "0x319"
msgstr ""

#: ../../../fb/vesafb.rst:65
msgid "0x311"
msgstr ""

#: ../../../fb/vesafb.rst:65
msgid "0x314"
msgstr ""

#: ../../../fb/vesafb.rst:65
msgid "0x317"
msgstr ""

#: ../../../fb/vesafb.rst:65
msgid "0x31A"
msgstr ""

#: ../../../fb/vesafb.rst:66
msgid "0x312"
msgstr ""

#: ../../../fb/vesafb.rst:66
msgid "0x315"
msgstr ""

#: ../../../fb/vesafb.rst:66
msgid "0x318"
msgstr ""

#: ../../../fb/vesafb.rst:66
msgid "0x31B"
msgstr ""

#: ../../../fb/vesafb.rst:69
msgid ""
"To enable one of those modes you have to specify \"vga=ask\" in the lilo."
"conf file and rerun LILO. Then you can type in the desired mode at the "
"\"vga=ask\" prompt. For example if you like to use 1024x768x256 colors you "
"have to say \"305\" at this prompt."
msgstr ""

#: ../../../fb/vesafb.rst:74
msgid ""
"If this does not work, this might be because your BIOS does not support "
"linear framebuffers or because it does not support this mode at all. Even if "
"your board does, it might be the BIOS which does not.  VESA BIOS Extensions "
"v2.0 are required, 1.2 is NOT sufficient.  You will get a \"bad mode "
"number\" message if something goes wrong."
msgstr ""

#: ../../../fb/vesafb.rst:80
msgid ""
"Note: LILO cannot handle hex, for booting directly with \"vga=mode-number\" "
"you have to transform the numbers to decimal."
msgstr ""

#: ../../../fb/vesafb.rst:82
msgid ""
"Note: Some newer versions of LILO appear to work with those hex values, if "
"you set the 0x in front of the numbers."
msgstr ""

#: ../../../fb/vesafb.rst:86
msgid "X11"
msgstr ""

#: ../../../fb/vesafb.rst:88
msgid ""
"XF68_FBDev should work just fine, but it is non-accelerated.  Running "
"another (accelerated) X-Server like XF86_SVGA might or might not work. It "
"depends on X-Server and graphics board."
msgstr ""

#: ../../../fb/vesafb.rst:92
msgid ""
"The X-Server must restore the video mode correctly, else you end up with a "
"broken console (and vesafb cannot do anything about this)."
msgstr ""

#: ../../../fb/vesafb.rst:97
msgid "Refresh rates"
msgstr ""

#: ../../../fb/vesafb.rst:99
msgid ""
"There is no way to change the vesafb video mode and/or timings after booting "
"linux.  If you are not happy with the 60 Hz refresh rate, you have these "
"options:"
msgstr ""

#: ../../../fb/vesafb.rst:103
msgid ""
"configure and load the DOS-Tools for the graphics board (if available) and "
"boot linux with loadlin."
msgstr ""

#: ../../../fb/vesafb.rst:105
msgid ""
"use a native driver (matroxfb/atyfb) instead if vesafb.  If none is "
"available, write a new one!"
msgstr ""

#: ../../../fb/vesafb.rst:107
msgid ""
"VBE 3.0 might work too.  I have neither a gfx board with VBE 3.0 support nor "
"the specs, so I have not checked this yet."
msgstr ""

#: ../../../fb/vesafb.rst:112
msgid "Configuration"
msgstr ""

#: ../../../fb/vesafb.rst:114
msgid ""
"The VESA BIOS provides protected mode interface for changing some "
"parameters.  vesafb can use it for palette changes and to pan the display.  "
"It is turned off by default because it seems not to work with some BIOS "
"versions, but there are options to turn it on."
msgstr ""

#: ../../../fb/vesafb.rst:120
msgid ""
"You can pass options to vesafb using \"video=vesafb:option\" on the kernel "
"command line.  Multiple options should be separated by comma, like this: "
"\"video=vesafb:ypan,inverse\""
msgstr ""

#: ../../../fb/vesafb.rst:124
msgid "Accepted options:"
msgstr ""

#: ../../../fb/vesafb.rst:126
msgid "inverse use inverse color map"
msgstr ""

#: ../../../fb/vesafb.rst:129
msgid "ypan"
msgstr ""

#: ../../../fb/vesafb.rst:129
msgid ""
"enable display panning using the VESA protected mode interface.  The visible "
"screen is just a window of the video memory, console scrolling is done by "
"changing the start of the window."
msgstr ""

#: ../../../fb/vesafb.rst:134
msgid "pro:"
msgstr ""

#: ../../../fb/vesafb.rst:136
msgid ""
"scrolling (fullscreen) is fast, because there is no need to copy around data."
msgstr ""

#: ../../../fb/vesafb.rst:139
msgid "kontra:"
msgstr ""

#: ../../../fb/vesafb.rst:141
msgid ""
"scrolling only parts of the screen causes some ugly flicker effects (boot "
"logo flickers for example)."
msgstr ""

#: ../../../fb/vesafb.rst:145
msgid "ywrap"
msgstr ""

#: ../../../fb/vesafb.rst:145
msgid ""
"Same as ypan, but assumes your gfx board can wrap-around the video memory (i."
"e. starts reading from top if it reaches the end of video memory).  Faster "
"than ypan."
msgstr ""

#: ../../../fb/vesafb.rst:149
msgid "redraw"
msgstr ""

#: ../../../fb/vesafb.rst:149
msgid ""
"Scroll by redrawing the affected part of the screen, this is the safe (and "
"slow) default."
msgstr ""

#: ../../../fb/vesafb.rst:153
msgid "vgapal"
msgstr ""

#: ../../../fb/vesafb.rst:153
msgid ""
"Use the standard vga registers for palette changes. This is the default."
msgstr ""

#: ../../../fb/vesafb.rst:155
msgid "pmipal"
msgstr ""

#: ../../../fb/vesafb.rst:155
msgid "Use the protected mode interface for palette changes."
msgstr ""

#: ../../../fb/vesafb.rst:157
msgid "mtrr:n"
msgstr ""

#: ../../../fb/vesafb.rst:157
msgid "Setup memory type range registers for the vesafb framebuffer where n:"
msgstr ""

#: ../../../fb/vesafb.rst:160
msgid "0 - disabled (equivalent to nomtrr) (default)"
msgstr ""

#: ../../../fb/vesafb.rst:161
msgid "1 - uncachable"
msgstr ""

#: ../../../fb/vesafb.rst:162
msgid "2 - write-back"
msgstr ""

#: ../../../fb/vesafb.rst:163
msgid "3 - write-combining"
msgstr ""

#: ../../../fb/vesafb.rst:164
msgid "4 - write-through"
msgstr ""

#: ../../../fb/vesafb.rst:166
msgid ""
"If you see the following in dmesg, choose the type that matches the old one. "
"In this example, use \"mtrr:2\"."
msgstr ""

#: ../../../fb/vesafb.rst:168 ../../../fb/vesafb.rst:171
msgid "..."
msgstr ""

#: ../../../fb/vesafb.rst:169
msgid "mtrr:"
msgstr ""

#: ../../../fb/vesafb.rst:169
msgid "type mismatch for e0000000,8000000 old: write-back new: write-combining"
msgstr ""

#: ../../../fb/vesafb.rst:173
msgid "nomtrr"
msgstr ""

#: ../../../fb/vesafb.rst:173
msgid "disable mtrr"
msgstr ""

#: ../../../fb/vesafb.rst:175
msgid "vremap:n"
msgstr ""

#: ../../../fb/vesafb.rst:176
msgid ""
"Remap 'n' MiB of video RAM. If 0 or not specified, remap memory according to "
"video mode. (2.5.66 patch/idea by Antonino Daplas reversed to give override "
"possibility (allocate more fb memory than the kernel would) to 2.4 by "
"tmb@iki.fi)"
msgstr ""

#: ../../../fb/vesafb.rst:181
msgid "vtotal:n"
msgstr ""

#: ../../../fb/vesafb.rst:181
msgid ""
"If the video BIOS of your card incorrectly determines the total amount of "
"video RAM, use this option to override the BIOS (in MiB)."
msgstr ""

#: ../../../fb/vesafb.rst:185
msgid "Have fun!"
msgstr ""

#: ../../../fb/vesafb.rst:187
msgid "Gerd Knorr <kraxel@goldbach.in-berlin.de>"
msgstr ""

#: ../../../fb/vesafb.rst:189
msgid ""
"Minor (mostly typo) changes by Nico Schmoigl <schmoigl@rumms.uni-mannheim.de>"
msgstr ""
