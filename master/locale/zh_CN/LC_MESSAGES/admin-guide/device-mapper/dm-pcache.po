# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-06 15:47+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../admin-guide/device-mapper/dm-pcache.rst:5
msgid "dm-pcache — Persistent Cache"
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:7
msgid "*Author: Dongsheng Yang <dongsheng.yang@linux.dev>*"
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:9
msgid ""
"This document describes *dm-pcache*, a Device-Mapper target that lets a byte-"
"addressable *DAX* (persistent-memory, “pmem”) region act as a high-"
"performance, crash-persistent cache in front of a slower block device.  The "
"code lives in `drivers/md/dm-pcache/`."
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:15
msgid "Quick feature summary"
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:17
msgid "*Write-back* caching (only mode currently supported)."
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:18
msgid "*16 MiB segments* allocated on the pmem device."
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:19
msgid "*Data CRC32* verification (optional, per cache)."
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:20
msgid ""
"Crash-safe: every metadata structure is duplicated (`PCACHE_META_INDEX_MAX "
"== 2`) and protected with CRC+sequence numbers."
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:22
msgid ""
"*Multi-tree indexing* (indexing trees sharded by logical address) for high "
"PMem parallelism"
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:23
msgid "Pure *DAX path* I/O – no extra BIO round-trips"
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:24
msgid "*Log-structured write-back* that preserves backend crash-consistency"
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:28
msgid "Constructor"
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:35
msgid "``cache_dev``"
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:35
msgid ""
"Any DAX-capable block device (``/dev/pmem0``…). All metadata *and* cached "
"blocks are stored here."
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:38
msgid "``backing_dev``"
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:38
msgid "The slow block device to be cached."
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:40
msgid "``cache_mode``"
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:40
msgid "Optional, Only ``writeback`` is accepted at the moment."
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:43
msgid "``data_crc``"
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:43
msgid "Optional, default to ``false``"
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:45
msgid "``true``  – store CRC32 for every cached entry and verify on reads"
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:47
msgid "``false`` – skip CRC (faster)"
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:51
msgid "Example"
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:58
msgid ""
"The first time a pmem device is used, dm-pcache formats it automatically "
"(super-block, cache_info, etc.)."
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:63
msgid "Status line"
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:65
msgid "``dmsetup status <device>`` (``STATUSTYPE_INFO``) prints:"
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:76
msgid "Field meanings"
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:79
msgid "``sb_flags``"
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:79
msgid "Super-block flags (e.g. endian marker)."
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:81
msgid "``seg_total``"
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:81
msgid "Number of physical *pmem* segments."
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:83
msgid "``cache_segs``"
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:83
msgid "Number of segments used for cache."
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:85
msgid "``segs_used``"
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:85
msgid "Segments currently allocated (bitmap weight)."
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:87
msgid "``gc_percent``"
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:87
msgid "Current GC high-water mark (0-90)."
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:89
msgid "``cache_flags``"
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:89
msgid ""
"Bit 0 – DATA_CRC enabled Bit 1 – INIT_DONE (cache initialised) Bits 2-5 – "
"cache mode (0 == WB)."
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:93
msgid "``key_head``"
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:93
msgid "Where new key-sets are being written."
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:95
msgid "``dirty_tail``"
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:95
msgid "First dirty key-set that still needs write-back to the backing device."
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:98
msgid "``key_tail``"
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:98
msgid "First key-set that may be reclaimed by GC."
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:103
msgid "Messages"
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:105
msgid "*Change GC trigger*"
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:113
msgid "Theory of operation"
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:116
msgid "Sub-devices"
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:119
msgid "backing_dev"
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:119
msgid "Any block device (SSD/HDD/loop/LVM, etc.)."
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:120
msgid "cache_dev"
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:120
msgid "DAX device; must expose direct-access memory."
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:124
msgid "Segments and key-sets"
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:126
msgid "The pmem space is divided into *16 MiB segments*."
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:127
msgid "Each write allocates space from a per-CPU *data_head* inside a segment."
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:128
msgid ""
"A *cache-key* records a logical range on the origin and where it lives "
"inside pmem (segment + offset + generation)."
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:130
msgid ""
"128 keys form a *key-set* (kset); ksets are written sequentially in pmem and "
"are themselves crash-safe (CRC)."
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:132
msgid ""
"The pair *(key_tail, dirty_tail)* delimit clean/dirty and live/dead ksets."
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:135
msgid "Write-back"
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:137
msgid ""
"Dirty keys are queued into a tree; a background worker copies data back to "
"the backing_dev and advances *dirty_tail*.  A FLUSH/FUA bio from the upper "
"layers forces an immediate metadata commit."
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:142
msgid "Garbage collection"
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:144
msgid ""
"GC starts when ``segs_used >= seg_total * gc_percent / 100``.  It walks from "
"*key_tail*, frees segments whose every key has been invalidated, and "
"advances *key_tail*."
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:149
msgid "CRC verification"
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:151
msgid ""
"If ``data_crc is enabled`` dm-pcache computes a CRC32 over every cached data "
"range when it is inserted and stores it in the on-media key.  Reads validate "
"the CRC before copying to the caller."
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:157
msgid "Failure handling"
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:159
msgid ""
"*pmem media errors* – all metadata copies are read with "
"``copy_mc_to_kernel``; an uncorrectable error logs and aborts initialisation."
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:161
msgid ""
"*Cache full* – if no free segment can be found, writes return ``-EBUSY``; dm-"
"pcache retries internally (request deferral)."
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:163
msgid ""
"*System crash* – on attach, the driver replays ksets from *key_tail* to "
"rebuild the in-core trees; every segment’s generation guards against use-"
"after-free keys."
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:169
msgid "Limitations & TODO"
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:171
msgid "Only *write-back* mode; other modes planned."
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:172
msgid "Only FIFO cache invalidate; other (LRU, ARC...) planned."
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:173
msgid "Table reload is not supported currently."
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:174
msgid "Discard planned."
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:178
msgid "Example workflow"
msgstr ""

#: ../../../admin-guide/device-mapper/dm-pcache.rst:201
msgid ""
"``dm-pcache`` is under active development; feedback, bug reports and patches "
"are very welcome!"
msgstr ""
