# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../admin-guide/sysctl/fs.rst:3
msgid "Documentation for /proc/sys/fs/"
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:5
msgid "Copyright (c) 1998, 1999,  Rik van Riel <riel@nl.linux.org>"
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:7
msgid "Copyright (c) 2009,        Shen Feng<shen@cn.fujitsu.com>"
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:9
msgid "For general info and legal blurb, please look in intro.rst."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:13
msgid ""
"This file contains documentation for the sysctl files and directories in ``/"
"proc/sys/fs/``."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:16
msgid ""
"The files in this directory can be used to tune and monitor miscellaneous "
"and general things in the operation of the Linux kernel. Since some of the "
"files *can* be used to screw up your system, it is advisable to read both "
"documentation and source before actually making adjustments."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:23
msgid "1. /proc/sys/fs"
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:25
msgid ""
"Currently, these files might (depending on your configuration) show up in ``/"
"proc/sys/fs``:"
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:32
msgid "aio-nr & aio-max-nr"
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:34
msgid ""
"``aio-nr`` shows the current system-wide number of asynchronous io "
"requests.  ``aio-max-nr`` allows you to change the maximum value ``aio-nr`` "
"can grow to.  If ``aio-nr`` reaches ``aio-nr-max`` then ``io_setup`` will "
"fail with ``EAGAIN``.  Note that raising ``aio-max-nr`` does not result in "
"the pre-allocation or re-sizing of any kernel data structures."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:42
msgid "dentry-negative"
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:44
msgid ""
"Policy for negative dentries. Set to 1 to always delete the dentry when a "
"file is removed, and 0 to disable it. By default, this behavior is disabled."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:48
msgid "dentry-state"
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:50
msgid ""
"This file shows the values in ``struct dentry_stat_t``, as defined in ``fs/"
"dcache.c``::"
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:62
msgid "Dentries are dynamically allocated and deallocated."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:64
msgid ""
"``nr_dentry`` shows the total number of dentries allocated (active + "
"unused). ``nr_unused shows`` the number of dentries that are not actively "
"used, but are saved in the LRU list for future reuse."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:68
msgid ""
"``age_limit`` is the age in seconds after which dcache entries can be "
"reclaimed when memory is short and ``want_pages`` is nonzero when "
"``shrink_dcache_pages()`` has been called and the dcache isn't pruned yet."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:73
msgid ""
"``nr_negative`` shows the number of unused dentries that are also negative "
"dentries which do not map to any files. Instead, they help speeding up "
"rejection of non-existing files provided by the users."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:80
msgid "file-max & file-nr"
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:82
msgid ""
"The value in ``file-max`` denotes the maximum number of file- handles that "
"the Linux kernel will allocate. When you get lots of error messages about "
"running out of file handles, you might want to increase this limit."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:87
msgid ""
"Historically,the kernel was able to allocate file handles dynamically, but "
"not to free them again. The three values in ``file-nr`` denote the number of "
"allocated file handles, the number of allocated but unused file handles, and "
"the maximum number of file handles. Linux 2.6 and later always reports 0 as "
"the number of free file handles -- this is not an error, it just means that "
"the number of allocated file handles exactly matches the number of used file "
"handles."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:96
msgid ""
"Attempts to allocate more file descriptors than ``file-max`` are reported "
"with ``printk``, look for::"
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:101
msgid "in the kernel logs."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:105
msgid "inode-nr & inode-state"
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:107
msgid ""
"As with file handles, the kernel allocates the inode structures dynamically, "
"but can't free them yet."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:110
msgid ""
"The file ``inode-nr`` contains the first two items from ``inode-state``, so "
"we'll skip to that file..."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:113
msgid ""
"``inode-state`` contains three actual numbers and four dummies. The actual "
"numbers are, in order of appearance, ``nr_inodes``, ``nr_free_inodes`` and "
"``preshrink``."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:117
msgid "``nr_inodes`` stands for the number of inodes the system has allocated."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:120
msgid ""
"``nr_free_inodes`` represents the number of free inodes (?) and preshrink is "
"nonzero when the system needs to prune the inode list instead of allocating "
"more."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:127
msgid "mount-max"
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:129
msgid ""
"This denotes the maximum number of mounts that may exist in a mount "
"namespace."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:134
msgid "nr_open"
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:136
msgid ""
"This denotes the maximum number of file-handles a process can allocate. "
"Default value is 1024*1024 (1048576) which should be enough for most "
"machines. Actual limit depends on ``RLIMIT_NOFILE`` resource limit."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:143
msgid "overflowgid & overflowuid"
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:145
msgid ""
"Some filesystems only support 16-bit UIDs and GIDs, although in Linux UIDs "
"and GIDs are 32 bits. When one of these filesystems is mounted with writes "
"enabled, any UID or GID that would exceed 65535 is translated to a fixed "
"value before being written to disk."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:150
msgid ""
"These sysctls allow you to change the value of the fixed UID and GID. The "
"default is 65534."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:155
msgid "pipe-user-pages-hard"
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:157
msgid ""
"Maximum total number of pages a non-privileged user may allocate for pipes. "
"Once this limit is reached, no new pipes may be allocated until usage goes "
"below the limit again. When set to 0, no limit is applied, which is the "
"default setting."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:164
msgid "pipe-user-pages-soft"
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:166
msgid ""
"Maximum total number of pages a non-privileged user may allocate for pipes "
"before the pipe size gets limited to a single page. Once this limit is "
"reached, new pipes will be limited to a single page in size for this user in "
"order to limit total memory usage, and trying to increase them using "
"``fcntl()`` will be denied until usage goes below the limit again. The "
"default value allows to allocate up to 1024 pipes at their default size. "
"When set to 0, no limit is applied."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:176
msgid "protected_fifos"
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:178
msgid ""
"The intent of this protection is to avoid unintentional writes to an "
"attacker-controlled FIFO, where a program expected to create a regular file."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:182
msgid "When set to \"0\", writing to FIFOs is unrestricted."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:184
msgid ""
"When set to \"1\" don't allow ``O_CREAT`` open on FIFOs that we don't own in "
"world writable sticky directories, unless they are owned by the owner of the "
"directory."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:188
#: ../../../admin-guide/sysctl/fs.rst:226
msgid "When set to \"2\" it also applies to group writable sticky directories."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:190
msgid "This protection is based on the restrictions in Openwall."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:194
msgid "protected_hardlinks"
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:196
msgid ""
"A long-standing class of security issues is the hardlink-based time-of-check-"
"time-of-use race, most commonly seen in world-writable directories like ``/"
"tmp``. The common method of exploitation of this flaw is to cross privilege "
"boundaries when following a given hardlink (i.e. a root process follows a "
"hardlink created by another user). Additionally, on systems without "
"separated partitions, this stops unauthorized users from \"pinning\" "
"vulnerable setuid/setgid files against being upgraded by the administrator, "
"or linking to special files."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:205
msgid "When set to \"0\", hardlink creation behavior is unrestricted."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:207
msgid ""
"When set to \"1\" hardlinks cannot be created by users if they do not "
"already own the source file, or do not have read/write access to it."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:210
#: ../../../admin-guide/sysctl/fs.rst:246
msgid ""
"This protection is based on the restrictions in Openwall and grsecurity."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:214
msgid "protected_regular"
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:216
msgid ""
"This protection is similar to `protected_fifos`_, but it avoids writes to an "
"attacker-controlled regular file, where a program expected to create one."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:220
msgid "When set to \"0\", writing to regular files is unrestricted."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:222
msgid ""
"When set to \"1\" don't allow ``O_CREAT`` open on regular files that we "
"don't own in world writable sticky directories, unless they are owned by the "
"owner of the directory."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:230
msgid "protected_symlinks"
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:232
msgid ""
"A long-standing class of security issues is the symlink-based time-of-check-"
"time-of-use race, most commonly seen in world-writable directories like ``/"
"tmp``. The common method of exploitation of this flaw is to cross privilege "
"boundaries when following a given symlink (i.e. a root process follows a "
"symlink belonging to another user). For a likely incomplete list of hundreds "
"of examples across the years, please see: https://cve.mitre.org/cgi-bin/"
"cvekey.cgi?keyword=/tmp"
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:240
msgid "When set to \"0\", symlink following behavior is unrestricted."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:242
msgid ""
"When set to \"1\" symlinks are permitted to be followed only when outside a "
"sticky world-writable directory, or when the uid of the symlink and follower "
"match, or when the directory owner matches the symlink's owner."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:250
msgid "suid_dumpable"
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:252
msgid ""
"This value can be used to query and set the core dump mode for setuid or "
"otherwise protected/tainted binaries. The modes are"
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:256
msgid "0"
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:256
msgid "(default)"
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:256
msgid ""
"Traditional behaviour. Any process which has changed privilege levels or is "
"execute only will not be dumped."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:258
msgid "1"
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:258
msgid "(debug)"
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:258
msgid ""
"All processes dump core when possible. The core dump is owned by the current "
"user and no security is applied. This is intended for system debugging "
"situations only. Ptrace is unchecked. This is insecure as it allows regular "
"users to examine the memory contents of privileged processes."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:264
msgid "2"
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:264
msgid "(suidsafe)"
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:264
msgid ""
"Any binary which normally would not be dumped is dumped anyway, but only if "
"the ``core_pattern`` kernel sysctl (see :ref:`Documentation/admin-guide/"
"sysctl/kernel.rst <core_pattern>`) is set to either a pipe handler or a "
"fully qualified path. (For more details on this limitation, see "
"CVE-2006-2451.) This mode is appropriate when administrators are attempting "
"to debug problems in a normal environment, and either have a core dump pipe "
"handler that knows to treat privileged core dumps with care, or specific "
"directory defined for catching core dumps. If a core dump happens without a "
"pipe handler or fully qualified path, a message will be emitted to syslog "
"warning about the lack of a correct setting."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:282
msgid "2. /proc/sys/fs/binfmt_misc"
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:284
msgid ""
"Documentation for the files in ``/proc/sys/fs/binfmt_misc`` is in "
"Documentation/admin-guide/binfmt-misc.rst."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:289
msgid "3. /proc/sys/fs/mqueue - POSIX message queues filesystem"
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:292
msgid ""
"The \"mqueue\"  filesystem provides  the necessary kernel features to enable "
"the creation of a  user space  library that  implements  the  POSIX message "
"queues API (as noted by the  MSG tag in the  POSIX 1003.1-2001 version  of "
"the System Interfaces specification.)"
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:297
msgid ""
"The \"mqueue\" filesystem contains values for determining/setting the amount "
"of resources used by the file system."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:300
msgid ""
"``/proc/sys/fs/mqueue/queues_max`` is a read/write file for setting/getting "
"the maximum number of message queues allowed on the system."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:304
msgid ""
"``/proc/sys/fs/mqueue/msg_max`` is a read/write file for setting/getting the "
"maximum number of messages in a queue value.  In fact it is the limiting "
"value for another (user) limit which is set in ``mq_open`` invocation.  This "
"attribute of a queue must be less than or equal to ``msg_max``."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:310
msgid ""
"``/proc/sys/fs/mqueue/msgsize_max`` is a read/write file for setting/getting "
"the maximum message size value (it is an attribute of every message queue, "
"set during its creation)."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:314
msgid ""
"``/proc/sys/fs/mqueue/msg_default`` is a read/write file for setting/getting "
"the default number of messages in a queue value if the ``attr`` parameter of "
"``mq_open(2)`` is ``NULL``. If it exceeds ``msg_max``, the default value is "
"initialized to ``msg_max``."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:319
msgid ""
"``/proc/sys/fs/mqueue/msgsize_default`` is a read/write file for setting/"
"getting the default message size value if the ``attr`` parameter of "
"``mq_open(2)`` is ``NULL``. If it exceeds ``msgsize_max``, the default value "
"is initialized to ``msgsize_max``."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:325
msgid "4. /proc/sys/fs/epoll - Configuration options for the epoll interface"
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:327
msgid ""
"This directory contains configuration options for the epoll(7) interface."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:330
msgid "max_user_watches"
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:332
msgid ""
"Every epoll file descriptor can store a number of files to be monitored for "
"event readiness. Each one of these monitored files constitutes a \"watch\". "
"This configuration option sets the maximum number of \"watches\" that are "
"allowed for each user. Each \"watch\" costs roughly 90 bytes on a 32-bit "
"kernel, and roughly 160 bytes on a 64-bit one. The current default value for "
"``max_user_watches`` is 4% of the available low memory, divided by the "
"\"watch\" cost in bytes."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:342
msgid "5. /proc/sys/fs/fuse - Configuration options for FUSE filesystems"
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:344
msgid ""
"This directory contains the following configuration options for FUSE "
"filesystems:"
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:347
msgid ""
"``/proc/sys/fs/fuse/max_pages_limit`` is a read/write file for setting/"
"getting the maximum number of pages that can be used for servicing requests "
"in FUSE."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:351
msgid ""
"``/proc/sys/fs/fuse/default_request_timeout`` is a read/write file for "
"setting/getting the default timeout (in seconds) for a fuse server to reply "
"to a kernel-issued request in the event where the server did not specify a "
"timeout at mount. If the server set a timeout, then default_request_timeout "
"will be ignored.  The default \"default_request_timeout\" is set to 0. 0 "
"indicates no default timeout. The maximum value that can be set is 65535."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:359
msgid ""
"``/proc/sys/fs/fuse/max_request_timeout`` is a read/write file for setting/"
"getting the maximum timeout (in seconds) for a fuse server to reply to a "
"kernel-issued request. A value greater than 0 automatically opts the server "
"into a timeout that will be set to at most \"max_request_timeout\", even if "
"the server did not specify a timeout and default_request_timeout is set to "
"0. If max_request_timeout is greater than 0 and the server set a timeout "
"greater than max_request_timeout or default_request_timeout is set to a "
"value greater than max_request_timeout, the system will use "
"max_request_timeout as the timeout. 0 indicates no max request timeout. The "
"maximum value that can be set is 65535."
msgstr ""

#: ../../../admin-guide/sysctl/fs.rst:370
msgid ""
"For timeouts, if the server does not respond to the request by the time the "
"set timeout elapses, then the connection to the fuse server will be aborted. "
"Please note that the timeouts are not 100% precise (eg you may set 60 "
"seconds but the timeout may kick in after 70 seconds). The upper margin of "
"error for the timeout is roughly FUSE_TIMEOUT_TIMER_FREQ seconds."
msgstr ""
