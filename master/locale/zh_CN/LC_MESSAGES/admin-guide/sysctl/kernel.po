# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-06 15:47+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../admin-guide/sysctl/kernel.rst:3
msgid "Documentation for /proc/sys/kernel/"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:8
msgid "Copyright (c) 1998, 1999,  Rik van Riel <riel@nl.linux.org>"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:10
msgid "Copyright (c) 2009,        Shen Feng<shen@cn.fujitsu.com>"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:12
msgid ""
"For general info and legal blurb, please look in Documentation/admin-guide/"
"sysctl/index.rst."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:17
msgid ""
"This file contains documentation for the sysctl files in ``/proc/sys/kernel/"
"``."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:20
msgid ""
"The files in this directory can be used to tune and monitor miscellaneous "
"and general things in the operation of the Linux kernel. Since some of the "
"files *can* be used to screw up your system, it is advisable to read both "
"documentation and source before actually making adjustments."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:26
msgid ""
"Currently, these files might (depending on your configuration) show up in ``/"
"proc/sys/kernel``:"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:33
msgid "acct"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:39
msgid ""
"If BSD-style process accounting is enabled these values control its "
"behaviour. If free space on filesystem where the log lives goes below "
"``lowwater``\\ % accounting suspends. If free space gets above "
"``highwater``\\ % accounting resumes. ``frequency`` determines how often do "
"we check the amount of free space (value is in seconds). Default:"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:50
msgid ""
"That is, suspend accounting if free space drops below 2%; resume it if it "
"increases to at least 4%; consider information about amount of free space "
"valid for 30 seconds."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:56
msgid "acpi_video_flags"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:58
msgid ""
"See Documentation/power/video.rst. This allows the video resume mode to be "
"set, in a similar fashion to the ``acpi_sleep`` kernel parameter, by "
"combining the following values:"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:63
#: ../../../admin-guide/sysctl/kernel.rst:121
#: ../../../admin-guide/sysctl/kernel.rst:313
#: ../../../admin-guide/sysctl/kernel.rst:352
#: ../../../admin-guide/sysctl/kernel.rst:364
#: ../../../admin-guide/sysctl/kernel.rst:405
#: ../../../admin-guide/sysctl/kernel.rst:469
#: ../../../admin-guide/sysctl/kernel.rst:483
#: ../../../admin-guide/sysctl/kernel.rst:498
#: ../../../admin-guide/sysctl/kernel.rst:673
#: ../../../admin-guide/sysctl/kernel.rst:711
#: ../../../admin-guide/sysctl/kernel.rst:823
#: ../../../admin-guide/sysctl/kernel.rst:838
#: ../../../admin-guide/sysctl/kernel.rst:852
#: ../../../admin-guide/sysctl/kernel.rst:877
#: ../../../admin-guide/sysctl/kernel.rst:929
#: ../../../admin-guide/sysctl/kernel.rst:1196
#: ../../../admin-guide/sysctl/kernel.rst:1400
#: ../../../admin-guide/sysctl/kernel.rst:1421
#: ../../../admin-guide/sysctl/kernel.rst:1433
#: ../../../admin-guide/sysctl/kernel.rst:1446
#: ../../../admin-guide/sysctl/kernel.rst:1475
#: ../../../admin-guide/sysctl/kernel.rst:1493
#: ../../../admin-guide/sysctl/kernel.rst:1505
#: ../../../admin-guide/sysctl/kernel.rst:1525
#: ../../../admin-guide/sysctl/kernel.rst:1619
#: ../../../admin-guide/sysctl/kernel.rst:1653
#: ../../../admin-guide/sysctl/kernel.rst:1675
msgid "1"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:63
msgid "s3_bios"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:64
#: ../../../admin-guide/sysctl/kernel.rst:502
#: ../../../admin-guide/sysctl/kernel.rst:712
#: ../../../admin-guide/sysctl/kernel.rst:1202
#: ../../../admin-guide/sysctl/kernel.rst:1526
#: ../../../admin-guide/sysctl/kernel.rst:1654
msgid "2"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:64
msgid "s3_mode"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:65
#: ../../../admin-guide/sysctl/kernel.rst:1527
msgid "4"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:65
msgid "s3_beep"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:69
msgid "arch"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:71
msgid ""
"The machine hardware name, the same output as ``uname -m`` (e.g. ``x86_64`` "
"or ``aarch64``)."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:75
msgid "auto_msgmni"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:77
msgid ""
"This variable has no effect and may be removed in future kernel releases. "
"Reading it always returns 0. Up to Linux 3.17, it enabled/disabled automatic "
"recomputing of `msgmni`_ upon memory add/remove or upon IPC namespace "
"creation/removal. Echoing \"1\" into this file enabled msgmni automatic "
"recomputing. Echoing \"0\" turned it off. The default value was 1."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:87
msgid "bootloader_type (x86 only)"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:89
msgid ""
"This gives the bootloader type number as indicated by the bootloader, "
"shifted left by 4, and OR'd with the low four bits of the bootloader "
"version.  The reason for this encoding is that this used to match the "
"``type_of_loader`` field in the kernel header; the encoding is kept for "
"backwards compatibility.  That is, if the full bootloader type number is "
"0x15 and the full version number is 0x234, this file will contain the value "
"340 = 0x154."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:97
msgid ""
"See the ``type_of_loader`` and ``ext_loader_type`` fields in Documentation/"
"arch/x86/boot.rst for additional information."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:102
msgid "bootloader_version (x86 only)"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:104
msgid ""
"The complete bootloader version number.  In the example above, this file "
"will contain the value 564 = 0x234."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:107
msgid ""
"See the ``type_of_loader`` and ``ext_loader_ver`` fields in Documentation/"
"arch/x86/boot.rst for additional information."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:112
msgid "bpf_stats_enabled"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:114
msgid ""
"Controls whether the kernel should collect statistics on BPF programs (total "
"time spent running, number of times run...). Enabling statistics causes a "
"slight reduction in performance on each program run. The statistics can be "
"seen using ``bpftool``."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:120
#: ../../../admin-guide/sysctl/kernel.rst:312
#: ../../../admin-guide/sysctl/kernel.rst:351
#: ../../../admin-guide/sysctl/kernel.rst:363
#: ../../../admin-guide/sysctl/kernel.rst:404
#: ../../../admin-guide/sysctl/kernel.rst:468
#: ../../../admin-guide/sysctl/kernel.rst:482
#: ../../../admin-guide/sysctl/kernel.rst:496
#: ../../../admin-guide/sysctl/kernel.rst:672
#: ../../../admin-guide/sysctl/kernel.rst:710
#: ../../../admin-guide/sysctl/kernel.rst:822
#: ../../../admin-guide/sysctl/kernel.rst:837
#: ../../../admin-guide/sysctl/kernel.rst:851
#: ../../../admin-guide/sysctl/kernel.rst:876
#: ../../../admin-guide/sysctl/kernel.rst:928
#: ../../../admin-guide/sysctl/kernel.rst:955
#: ../../../admin-guide/sysctl/kernel.rst:1192
#: ../../../admin-guide/sysctl/kernel.rst:1398
#: ../../../admin-guide/sysctl/kernel.rst:1420
#: ../../../admin-guide/sysctl/kernel.rst:1432
#: ../../../admin-guide/sysctl/kernel.rst:1445
#: ../../../admin-guide/sysctl/kernel.rst:1473
#: ../../../admin-guide/sysctl/kernel.rst:1492
#: ../../../admin-guide/sysctl/kernel.rst:1504
#: ../../../admin-guide/sysctl/kernel.rst:1618
#: ../../../admin-guide/sysctl/kernel.rst:1652
#: ../../../admin-guide/sysctl/kernel.rst:1674
msgid "0"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:120
msgid "Don't collect statistics (default)."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:121
msgid "Collect statistics."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:126
msgid "cad_pid"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:128
msgid ""
"This is the pid which will be signalled on reboot (notably, by Ctrl-Alt-"
"Delete). Writing a value to this file which doesn't correspond to a running "
"process will result in ``-ESRCH``."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:132
msgid "See also `ctrl-alt-del`_."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:136
msgid "cap_last_cap"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:138
msgid ""
"Highest valid capability of the running kernel.  Exports ``CAP_LAST_CAP`` "
"from the kernel."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:145
msgid "core_pattern"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:147
msgid "``core_pattern`` is used to specify a core dumpfile pattern name."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:149
msgid "max length 127 characters; default value is \"core\""
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:150
msgid ""
"``core_pattern`` is used as a pattern template for the output filename; "
"certain string patterns (beginning with '%') are substituted with their "
"actual values."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:153
msgid "backward compatibility with ``core_uses_pid``:"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:155
msgid ""
"If ``core_pattern`` does not include \"%p\" (default does not) and "
"``core_uses_pid`` is set, then .PID will be appended to the filename."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:159
msgid "corename format specifiers"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:162
msgid "%<NUL>"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:162
msgid "'%' is dropped"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:163
msgid "%%"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:163
msgid "output one '%'"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:164
msgid "%p"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:164
msgid "pid"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:165
msgid "%P"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:165
msgid "global pid (init PID namespace)"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:166
msgid "%i"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:166
msgid "tid"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:167
msgid "%I"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:167
msgid "global tid (init PID namespace)"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:168
msgid "%u"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:168
msgid "uid (in initial user namespace)"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:169
msgid "%g"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:169
msgid "gid (in initial user namespace)"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:170
msgid "%d"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:170
msgid ""
"dump mode, matches ``PR_SET_DUMPABLE`` and ``/proc/sys/fs/suid_dumpable``"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:172
msgid "%s"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:172
msgid "signal number"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:173
msgid "%t"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:173
msgid "UNIX time of dump"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:174
msgid "%h"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:174
msgid "hostname"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:175
msgid "%e"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:175
msgid "executable filename (may be shortened, could be changed by prctl etc)"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:176
msgid "%f"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:176
msgid "executable filename"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:177
msgid "%E"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:177
msgid "executable path"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:178
msgid "%c"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:178
msgid "maximum size of core file by resource limit RLIMIT_CORE"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:179
msgid "%C"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:179
msgid "CPU the task ran on"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:180
msgid "%F"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:180
msgid "pidfd number"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:181
msgid "%<OTHER>"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:181
msgid "both are dropped"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:184
msgid ""
"If the first character of the pattern is a '|', the kernel will treat the "
"rest of the pattern as a command to run.  The core dump will be written to "
"the standard input of that program instead of to a file."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:190
msgid "core_pipe_limit"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:192
msgid ""
"This sysctl is only applicable when `core_pattern`_ is configured to pipe "
"core files to a user space helper (when the first character of "
"``core_pattern`` is a '|', see above). When collecting cores via a pipe to "
"an application, it is occasionally useful for the collecting application to "
"gather data about the crashing process from its ``/proc/pid`` directory. In "
"order to do this safely, the kernel must wait for the collecting process to "
"exit, so as not to remove the crashing processes proc files prematurely. "
"This in turn creates the possibility that a misbehaving userspace collecting "
"process can block the reaping of a crashed process simply by never exiting. "
"This sysctl defends against that. It defines how many concurrent crashing "
"processes may be piped to user space applications in parallel. If this value "
"is exceeded, then those crashing processes above that value are noted via "
"the kernel log and their cores are skipped. 0 is a special value, indicating "
"that unlimited processes may be captured in parallel, but that no waiting "
"will take place (i.e. the collecting process is not guaranteed access to ``/"
"proc/<crashing pid>/``). This value defaults to 0."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:217
msgid "core_sort_vma"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:219
msgid ""
"The default coredump writes VMAs in address order. By setting "
"``core_sort_vma`` to 1, VMAs will be written from smallest size to largest "
"size. This is known to break at least elfutils, but can be handy when "
"dealing with very large (and truncated) coredumps where the more useful "
"debugging details are included in the smaller VMAs."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:228
msgid "core_uses_pid"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:230
msgid ""
"The default coredump filename is \"core\".  By setting ``core_uses_pid`` to "
"1, the coredump filename becomes core.PID. If `core_pattern`_ does not "
"include \"%p\" (default does not) and ``core_uses_pid`` is set, then .PID "
"will be appended to the filename."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:238
msgid "ctrl-alt-del"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:240
msgid ""
"When the value in this file is 0, ctrl-alt-del is trapped and sent to the "
"``init(1)`` program to handle a graceful restart. When, however, the value "
"is > 0, Linux's reaction to a Vulcan Nerve Pinch (tm) will be an immediate "
"reboot, without even syncing its dirty buffers."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:246
#: ../../../admin-guide/sysctl/kernel.rst:1547
msgid "Note:"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:247
msgid ""
"when a program (like dosemu) has the keyboard in 'raw' mode, the ctrl-alt-"
"del is intercepted by the program before it ever reaches the kernel tty "
"layer, and it's up to the program to decide what to do with it."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:254
msgid "dmesg_restrict"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:256
msgid ""
"This toggle indicates whether unprivileged users are prevented from using "
"``dmesg(8)`` to view messages from the kernel's log buffer. When "
"``dmesg_restrict`` is set to 0 there are no restrictions. When "
"``dmesg_restrict`` is set to 1, users must have ``CAP_SYSLOG`` to use "
"``dmesg(8)``."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:263
msgid ""
"The kernel config option ``CONFIG_SECURITY_DMESG_RESTRICT`` sets the default "
"value of ``dmesg_restrict``."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:268
msgid "domainname & hostname"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:270
msgid ""
"These files can be used to set the NIS/YP domainname and the hostname of "
"your box in exactly the same way as the commands domainname and hostname, i."
"e.::"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:277
msgid "has the same effect as::"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:282
msgid ""
"Note, however, that the classic darkstar.frop.org has the hostname "
"\"darkstar\" and DNS (Internet Domain Name Server) domainname \"frop.org\", "
"not to be confused with the NIS (Network Information Service) or YP (Yellow "
"Pages) domainname. These two domain names are in general different. For a "
"detailed discussion see the ``hostname(1)`` man page."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:291
msgid "firmware_config"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:293
msgid "See Documentation/driver-api/firmware/fallback-mechanisms.rst."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:295
msgid ""
"The entries in this directory allow the firmware loader helper fallback to "
"be controlled:"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:298
msgid ""
"``force_sysfs_fallback``, when set to 1, forces the use of the fallback;"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:300
msgid "``ignore_sysfs_fallback``, when set to 1, ignores any fallback."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:304
msgid "ftrace_dump_on_oops"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:306
msgid ""
"Determines whether ``ftrace_dump()`` should be called on an oops (or kernel "
"panic). This will output the contents of the ftrace buffers to the console.  "
"This is very useful for capturing traces that lead to crashes and outputting "
"them to a serial console."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:312
msgid "Disabled (default)."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:313
msgid "Dump buffers of all CPUs."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:314
msgid "2(orig_cpu)"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:314
msgid "Dump the buffer of the CPU that triggered the oops."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:316
msgid "<instance>"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:316
msgid "Dump the specific instance buffer on all CPUs."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:317
msgid "<instance>=2(orig_cpu)"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:317
msgid "Dump the specific instance buffer on the CPU that triggered the oops."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:321
msgid ""
"Multiple instance dump is also supported, and instances are separated by "
"commas. If global buffer also needs to be dumped, please specify the dump "
"mode (1/2/orig_cpu) first for global buffer."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:325
msgid ""
"So for example to dump \"foo\" and \"bar\" instance buffer on all CPUs, user "
"can::"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:330
msgid ""
"To dump global buffer and \"foo\" instance buffer on all CPUs along with the "
"\"bar\" instance buffer on CPU that triggered the oops, user can::"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:337
msgid "ftrace_enabled, stack_tracer_enabled"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:339
msgid "See Documentation/trace/ftrace.rst."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:343
msgid "hardlockup_all_cpu_backtrace"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:345
msgid ""
"This value controls the hard lockup detector behavior when a hard lockup "
"condition is detected as to whether or not to gather further debug "
"information. If enabled, arch-specific all-CPU stack dumping will be "
"initiated."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:351
#: ../../../admin-guide/sysctl/kernel.rst:1420
msgid "Do nothing. This is the default behavior."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:352
#: ../../../admin-guide/sysctl/kernel.rst:1421
msgid "On detection capture more debug information."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:357
msgid "hardlockup_panic"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:359
msgid ""
"This parameter can be used to control whether the kernel panics when a hard "
"lockup is detected."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:363
msgid "Don't panic on hard lockup."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:364
msgid "Panic on hard lockup."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:367
msgid ""
"See Documentation/admin-guide/lockup-watchdogs.rst for more information. "
"This can also be set using the nmi_watchdog kernel parameter."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:372
msgid "hotplug"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:374
msgid ""
"Path for the hotplug policy agent. Default value is "
"``CONFIG_UEVENT_HELPER_PATH``, which in turn defaults to the empty string."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:378
msgid ""
"This file only exists when ``CONFIG_UEVENT_HELPER`` is enabled. Most modern "
"systems rely exclusively on the netlink-based uevent source and don't need "
"this."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:384
msgid "hung_task_all_cpu_backtrace"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:386
msgid ""
"If this option is set, the kernel will send an NMI to all CPUs to dump their "
"backtraces when a hung task is detected. This file shows up if "
"CONFIG_DETECT_HUNG_TASK and CONFIG_SMP are enabled."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:390
msgid ""
"0: Won't show all CPUs backtraces when a hung task is detected. This is the "
"default behavior."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:393
msgid ""
"1: Will non-maskably interrupt all CPUs and dump their backtraces when a "
"hung task is detected."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:398
msgid "hung_task_panic"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:400
msgid ""
"Controls the kernel's behavior when a hung task is detected. This file shows "
"up if ``CONFIG_DETECT_HUNG_TASK`` is enabled."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:404
msgid "Continue operation. This is the default behavior."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:405
#: ../../../admin-guide/sysctl/kernel.rst:852
msgid "Panic immediately."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:410
msgid "hung_task_check_count"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:412
msgid ""
"The upper bound on the number of tasks that are checked. This file shows up "
"if ``CONFIG_DETECT_HUNG_TASK`` is enabled."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:417
msgid "hung_task_detect_count"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:419
msgid ""
"Indicates the total number of tasks that have been detected as hung since "
"the system boot."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:422
msgid "This file shows up if ``CONFIG_DETECT_HUNG_TASK`` is enabled."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:426
msgid "hung_task_timeout_secs"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:428
msgid ""
"When a task in D state did not get scheduled for more than this value report "
"a warning. This file shows up if ``CONFIG_DETECT_HUNG_TASK`` is enabled."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:432
msgid "0 means infinite timeout, no checking is done."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:434
#: ../../../admin-guide/sysctl/kernel.rst:448
msgid "Possible values to set are in range {0:``LONG_MAX``/``HZ``}."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:438
msgid "hung_task_check_interval_secs"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:440
msgid ""
"Hung task check interval. If hung task checking is enabled (see "
"`hung_task_timeout_secs`_), the check is done every "
"``hung_task_check_interval_secs`` seconds. This file shows up if "
"``CONFIG_DETECT_HUNG_TASK`` is enabled."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:445
msgid "0 (default) means use ``hung_task_timeout_secs`` as checking interval."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:452
msgid "hung_task_warnings"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:454
msgid ""
"The maximum number of warnings to report. During a check interval if a hung "
"task is detected, this value is decreased by 1. When this value reaches 0, "
"no more warnings will be reported. This file shows up if "
"``CONFIG_DETECT_HUNG_TASK`` is enabled."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:459
msgid "-1: report an infinite number of warnings."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:463
msgid "hyperv_record_panic_msg"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:465
msgid "Controls whether the panic kmsg data should be reported to Hyper-V."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:468
msgid "Do not report panic kmsg data."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:469
msgid "Report the panic kmsg data. This is the default behavior."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:474
msgid "ignore-unaligned-usertrap"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:476
msgid ""
"On architectures where unaligned accesses cause traps, and where this "
"feature is supported (``CONFIG_SYSCTL_ARCH_UNALIGN_NO_WARN``; currently, "
"``arc``, ``parisc`` and ``loongarch``), controls whether all unaligned traps "
"are logged."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:482
msgid "Log all unaligned accesses."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:483
msgid "Only warn the first time a process traps. This is the default setting."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:487
msgid "See also `unaligned-trap`_."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:490
msgid "io_uring_disabled"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:492
msgid ""
"Prevents all processes from creating new io_uring instances. Enabling this "
"shrinks the kernel's attack surface."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:496
msgid ""
"All processes can create io_uring instances as normal. This is the default "
"setting."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:498
msgid ""
"io_uring creation is disabled (io_uring_setup() will fail with -EPERM) for "
"unprivileged processes not in the io_uring_group group. Existing io_uring "
"instances can still be used.  See the documentation for io_uring_group for "
"more information."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:502
msgid ""
"io_uring creation is disabled for all processes. io_uring_setup() always "
"fails with -EPERM. Existing io_uring instances can still be used."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:509
msgid "io_uring_group"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:511
msgid ""
"When io_uring_disabled is set to 1, a process must either be privileged "
"(CAP_SYS_ADMIN) or be in the io_uring_group group in order to create an "
"io_uring instance.  If io_uring_group is set to -1 (the default), only "
"processes with the CAP_SYS_ADMIN capability may create io_uring instances."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:519
msgid "kexec_load_disabled"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:521
msgid ""
"A toggle indicating if the syscalls ``kexec_load`` and ``kexec_file_load`` "
"have been disabled. This value defaults to 0 (false: ``kexec_*load`` "
"enabled), but can be set to 1 (true: ``kexec_*load`` disabled). Once true, "
"kexec can no longer be used, and the toggle cannot be set back to false. "
"This allows a kexec image to be loaded before disabling the syscall, "
"allowing a system to set up (and later use) an image without it being "
"altered. Generally used together with the `modules_disabled`_ sysctl."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:533
msgid "kexec_load_limit_panic"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:535
msgid ""
"This parameter specifies a limit to the number of times the syscalls "
"``kexec_load`` and ``kexec_file_load`` can be called with a crash image. It "
"can only be set with a more restrictive value than the current one."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:541
#: ../../../admin-guide/sysctl/kernel.rst:981
#: ../../../admin-guide/sysctl/kernel.rst:1394
msgid "-1"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:541
msgid "Unlimited calls to kexec. This is the default setting."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:542
msgid "N"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:542
msgid "Number of calls left."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:546
msgid "kexec_load_limit_reboot"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:548
msgid ""
"Similar functionality as ``kexec_load_limit_panic``, but for a normal image."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:552
msgid "kptr_restrict"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:554
msgid ""
"This toggle indicates whether restrictions are placed on exposing kernel "
"addresses via ``/proc`` and other interfaces."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:557
msgid ""
"When ``kptr_restrict`` is set to 0 (the default) the address is hashed "
"before printing. (This is the equivalent to %p.)"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:561
msgid ""
"When ``kptr_restrict`` is set to 1, kernel pointers printed using the %pK "
"format specifier will be replaced with 0s unless the user has ``CAP_SYSLOG`` "
"and effective user and group ids are equal to the real ids. This is because "
"%pK checks are done at read() time rather than open() time, so if "
"permissions are elevated between the open() and the read() (e.g via a setuid "
"binary) then %pK will not leak kernel pointers to unprivileged users. Note, "
"this is a temporary solution only. The correct long-term solution is to do "
"the permission checks at open() time. Consider removing world read "
"permissions from files that use %pK, and using `dmesg_restrict`_ to protect "
"against uses of %pK in ``dmesg(8)`` if leaking kernel pointer values to "
"unprivileged users is a concern."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:576
msgid ""
"When ``kptr_restrict`` is set to 2, kernel pointers printed using %pK will "
"be replaced with 0s regardless of privileges."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:581
msgid "modprobe"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:583
msgid ""
"The full path to the usermode helper for autoloading kernel modules, by "
"default ``CONFIG_MODPROBE_PATH``, which in turn defaults to \"/sbin/"
"modprobe\".  This binary is executed when the kernel requests a module.  For "
"example, if userspace passes an unknown filesystem type to mount(), then the "
"kernel will automatically request the corresponding filesystem module by "
"executing this usermode helper. This usermode helper should insert the "
"needed module into the kernel."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:591
msgid ""
"This sysctl only affects module autoloading.  It has no effect on the "
"ability to explicitly insert modules."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:594
msgid "This sysctl can be used to debug module loading requests::"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:602
msgid ""
"Alternatively, if this sysctl is set to the empty string, then module "
"autoloading is completely disabled.  The kernel will not try to execute a "
"usermode helper at all, nor will it call the kernel_module_request LSM hook."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:607
msgid ""
"If CONFIG_STATIC_USERMODEHELPER=y is set in the kernel configuration, then "
"the configured static usermode helper overrides this sysctl, except that the "
"empty string is still accepted to completely disable module autoloading as "
"described above."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:613
msgid "modules_disabled"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:615
msgid ""
"A toggle value indicating if modules are allowed to be loaded in an "
"otherwise modular kernel.  This toggle defaults to off (0), but can be set "
"true (1).  Once true, modules can be neither loaded nor unloaded, and the "
"toggle cannot be set back to false.  Generally used with the "
"`kexec_load_disabled`_ toggle."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:625
msgid "msgmax, msgmnb, and msgmni"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:627
msgid ""
"``msgmax`` is the maximum size of an IPC message, in bytes. 8192 by default "
"(``MSGMAX``)."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:630
msgid ""
"``msgmnb`` is the maximum size of an IPC queue, in bytes. 16384 by default "
"(``MSGMNB``)."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:633
msgid ""
"``msgmni`` is the maximum number of IPC queues. 32000 by default "
"(``MSGMNI``)."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:636
msgid ""
"All of these parameters are set per ipc namespace. The maximum number of "
"bytes in POSIX message queues is limited by ``RLIMIT_MSGQUEUE``. This limit "
"is respected hierarchically in the each user namespace."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:641
msgid "msg_next_id, sem_next_id, and shm_next_id (System V IPC)"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:643
msgid ""
"These three toggles allows to specify desired id for next allocated IPC "
"object: message, semaphore or shared memory respectively."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:646
msgid ""
"By default they are equal to -1, which means generic allocation logic. "
"Possible values to set are in range {0:``INT_MAX``}."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:649
msgid "Notes:"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:650
msgid ""
"kernel doesn't guarantee, that new object will have desired id. So, it's up "
"to userspace, how to handle an object with \"wrong\" id."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:652
msgid ""
"Toggle with non-default value will be set back to -1 by kernel after "
"successful IPC object allocation. If an IPC object allocation syscall fails, "
"it is undefined if the value remains unmodified or is reset to -1."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:658
msgid "ngroups_max"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:660
msgid ""
"Maximum number of supplementary groups, _i.e._ the maximum size which "
"``setgroups`` will accept. Exports ``NGROUPS_MAX`` from the kernel."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:666
msgid "nmi_watchdog"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:668
msgid ""
"This parameter can be used to control the NMI watchdog (i.e. the hard lockup "
"detector) on x86 systems."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:672
msgid "Disable the hard lockup detector."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:673
msgid "Enable the hard lockup detector."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:676
msgid ""
"The hard lockup detector monitors each CPU for its ability to respond to "
"timer interrupts. The mechanism utilizes CPU performance counter registers "
"that are programmed to generate Non-Maskable Interrupts (NMIs) periodically "
"while a CPU is busy. Hence, the alternative name 'NMI watchdog'."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:681
msgid ""
"The NMI watchdog is disabled by default if the kernel is running as a guest "
"in a KVM virtual machine. This default can be overridden by adding::"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:686
msgid ""
"to the guest kernel command line (see Documentation/admin-guide/kernel-"
"parameters.rst)."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:691
msgid "nmi_wd_lpm_factor (PPC only)"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:693
msgid ""
"Factor to apply to the NMI watchdog timeout (only when ``nmi_watchdog`` is "
"set to 1). This factor represents the percentage added to "
"``watchdog_thresh`` when calculating the NMI watchdog timeout during an LPM. "
"The soft lockup timeout is not impacted."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:698
msgid ""
"A value of 0 means no change. The default value is 200 meaning the NMI "
"watchdog is set to 30s (based on ``watchdog_thresh`` equal to 10)."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:703
msgid "numa_balancing"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:705
msgid ""
"Enables/disables and configures automatic page fault based NUMA memory "
"balancing.  Memory is moved automatically to nodes that access it often. The "
"value to set can be the result of ORing the following:"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:710
msgid "NUMA_BALANCING_DISABLED"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:711
msgid "NUMA_BALANCING_NORMAL"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:712
msgid "NUMA_BALANCING_MEMORY_TIERING"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:715
msgid ""
"Or NUMA_BALANCING_NORMAL to optimize page placement among different NUMA "
"nodes to reduce remote accessing.  On NUMA machines, there is a performance "
"penalty if remote memory is accessed by a CPU. When this feature is enabled "
"the kernel samples what task thread is accessing memory by periodically "
"unmapping pages and later trapping a page fault. At the time of the page "
"fault, it is determined if the data being accessed should be migrated to a "
"local memory node."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:723
msgid ""
"The unmapping of pages and trapping faults incur additional overhead that "
"ideally is offset by improved memory locality but there is no universal "
"guarantee. If the target workload is already bound to NUMA nodes then this "
"feature should be disabled."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:728
msgid ""
"Or NUMA_BALANCING_MEMORY_TIERING to optimize page placement among different "
"types of memory (represented as different NUMA nodes) to place the hot pages "
"in the fast memory.  This is implemented based on unmapping and page fault "
"too."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:734
msgid "numa_balancing_promote_rate_limit_MBps"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:736
msgid ""
"Too high promotion/demotion throughput between different memory types may "
"hurt application latency.  This can be used to rate limit the promotion "
"throughput.  The per-node max promotion throughput in MB/s will be limited "
"to be no more than the set value."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:741
msgid ""
"A rule of thumb is to set this to less than 1/10 of the PMEM node write "
"bandwidth."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:745
msgid "oops_all_cpu_backtrace"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:747
msgid ""
"If this option is set, the kernel will send an NMI to all CPUs to dump their "
"backtraces when an oops event occurs. It should be used as a last resort in "
"case a panic cannot be triggered (to protect VMs running, for example) or "
"kdump can't be collected. This file shows up if CONFIG_SMP is enabled."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:753
msgid ""
"0: Won't show all CPUs backtraces when an oops is detected. This is the "
"default behavior."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:756
msgid ""
"1: Will non-maskably interrupt all CPUs and dump their backtraces when an "
"oops event is detected."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:761
msgid "oops_limit"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:763
msgid ""
"Number of kernel oopses after which the kernel should panic when "
"``panic_on_oops`` is not set. Setting this to 0 disables checking the count. "
"Setting this to  1 has the same effect as setting ``panic_on_oops=1``. The "
"default value is 10000."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:770
msgid "osrelease, ostype & version"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:781
msgid ""
"The files ``osrelease`` and ``ostype`` should be clear enough. ``version`` "
"needs a little more clarification however. The '#5' means that this is the "
"fifth kernel built from this source base and the date behind it indicates "
"the time the kernel was built. The only way to tune these values is to "
"rebuild the kernel :-)"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:790
msgid "overflowgid & overflowuid"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:792
msgid ""
"if your architecture did not always support 32-bit UIDs (i.e. arm, i386, "
"m68k, sh, and sparc32), a fixed UID and GID will be returned to applications "
"that use the old 16-bit UID/GID system calls, if the actual UID or GID would "
"exceed 65535."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:797
msgid ""
"These sysctls allow you to change the value of the fixed UID and GID. The "
"default is 65534."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:802
msgid "panic"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:804
msgid ""
"The value in this file determines the behaviour of the kernel on a panic:"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:807
msgid "if zero, the kernel will loop forever;"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:808
msgid "if negative, the kernel will reboot immediately;"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:809
msgid ""
"if positive, the kernel will reboot after the corresponding number of "
"seconds."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:812
msgid "When you use the software watchdog, the recommended setting is 60."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:816
msgid "panic_on_io_nmi"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:818
msgid ""
"Controls the kernel's behavior when a CPU receives an NMI caused by an IO "
"error."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:822
msgid "Try to continue operation (default)."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:823
msgid ""
"Panic immediately. The IO error triggered an NMI. This indicates a serious "
"system condition which could result in IO data corruption. Rather than "
"continuing, panicking might be a better choice. Some servers issue this sort "
"of NMI when the dump button is pushed, and you can use this option to take a "
"crash dump."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:832
msgid "panic_on_oops"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:834
msgid "Controls the kernel's behaviour when an oops or BUG is encountered."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:837
#: ../../../admin-guide/sysctl/kernel.rst:851
msgid "Try to continue operation."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:838
msgid ""
"Panic immediately.  If the `panic` sysctl is also non-zero then the machine "
"will be rebooted."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:844
msgid "panic_on_stackoverflow"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:846
msgid ""
"Controls the kernel's behavior when detecting the overflows of kernel, IRQ "
"and exception stacks except a user stack. This file shows up if "
"``CONFIG_DEBUG_STACKOVERFLOW`` is enabled."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:857
msgid "panic_on_unrecovered_nmi"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:859
msgid ""
"The default Linux behaviour on an NMI of either memory or unknown is to "
"continue operation. For many environments such as scientific computing it is "
"preferable that the box is taken out and the error dealt with than an "
"uncorrected parity/ECC error get propagated."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:864
msgid ""
"A small number of systems do generate NMIs for bizarre random reasons such "
"as power management so the default is off. That sysctl works like the "
"existing panic controls already in that directory."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:870
msgid "panic_on_warn"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:872
msgid ""
"Calls panic() in the WARN() path when set to 1.  This is useful to avoid a "
"kernel rebuild when attempting to kdump at the location of a WARN()."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:876
msgid "Only WARN(), default behaviour."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:877
msgid "Call panic() after printing out WARN() location."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:882
msgid "panic_print"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:884
msgid ""
"Bitmask for printing system info when panic happens. User can chose "
"combination of the following bits:"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:888
msgid "bit 0"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:888
#: ../../../admin-guide/sysctl/kernel.rst:911
msgid "print all tasks info"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:889
msgid "bit 1"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:889
#: ../../../admin-guide/sysctl/kernel.rst:912
msgid "print system memory info"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:890
msgid "bit 2"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:890
msgid "print timer info"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:891
msgid "bit 3"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:891
msgid "print locks info if ``CONFIG_LOCKDEP`` is on"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:892
msgid "bit 4"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:892
#: ../../../admin-guide/sysctl/kernel.rst:915
msgid "print ftrace buffer"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:893
msgid "bit 5"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:893
msgid "replay all kernel messages on consoles at the end of panic"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:894
msgid "bit 6"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:894
#: ../../../admin-guide/sysctl/kernel.rst:916
msgid "print all CPUs backtrace (if available in the arch)"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:895
msgid "bit 7"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:895
#: ../../../admin-guide/sysctl/kernel.rst:917
msgid "print only tasks in uninterruptible (blocked) state"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:898
msgid "So for example to print tasks and memory info on panic, user can::"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:904
msgid "panic_sys_info"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:906
msgid ""
"A comma separated list of extra information to be dumped on panic, for "
"example, \"tasks,mem,timers,...\".  It is a human readable alternative to "
"'panic_print'. Possible values are:"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:911
msgid "tasks"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:912
msgid "mem"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:913
msgid "timer"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:913
msgid "print timers info"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:914
msgid "lock"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:914
msgid "print locks info if CONFIG_LOCKDEP is on"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:915
msgid "ftrace"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:916
msgid "all_bt"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:917
msgid "blocked_tasks"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:922
msgid "panic_on_rcu_stall"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:924
msgid ""
"When set to 1, calls panic() after RCU stall detection messages. This is "
"useful to define the root cause of RCU stalls using a vmcore."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:928
msgid "Do not panic() when RCU stall takes place, default behavior."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:929
msgid "panic() after printing RCU stall messages."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:933
msgid "max_rcu_stall_to_panic"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:935
msgid ""
"When ``panic_on_rcu_stall`` is set to 1, this value determines the number of "
"times that RCU can stall before panic() is called."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:938
msgid "When ``panic_on_rcu_stall`` is set to 0, this value is has no effect."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:941
msgid "perf_cpu_time_max_percent"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:943
msgid ""
"Hints to the kernel how much CPU time it should be allowed to use to handle "
"perf sampling events.  If the perf subsystem is informed that its samples "
"are exceeding this limit, it will drop its sampling frequency to attempt to "
"reduce its CPU usage."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:949
msgid ""
"Some perf sampling happens in NMIs.  If these samples unexpectedly take too "
"long to execute, the NMIs can become stacked up next to each other so much "
"that nothing else is allowed to execute."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:955
msgid ""
"Disable the mechanism.  Do not monitor or correct perf's sampling rate no "
"matter how CPU time it takes."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:958
msgid "1-100"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:958
msgid ""
"Attempt to throttle perf's sample rate to this percentage of CPU.  Note: the "
"kernel calculates an \"expected\" length of each sample event.  100 here "
"means 100% of that expected length.  Even if this is set to 100, you may "
"still see sample throttling if this length is exceeded.  Set to 0 if you "
"truly do not care how much CPU is consumed."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:969
msgid "perf_event_paranoid"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:971
msgid ""
"Controls use of the performance events system by unprivileged users (without "
"CAP_PERFMON).  The default value is 2."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:974
msgid ""
"For backward compatibility reasons access to system performance monitoring "
"and observability remains open for CAP_SYS_ADMIN privileged processes but "
"CAP_SYS_ADMIN usage for secure system performance monitoring and "
"observability operations is discouraged with respect to CAP_PERFMON use "
"cases."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:981
msgid "Allow use of (almost) all events by all users."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:983
msgid "Ignore mlock limit after perf_event_mlock_kb without ``CAP_IPC_LOCK``."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:986
msgid ">=0"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:986
msgid "Disallow ftrace function tracepoint by users without ``CAP_PERFMON``."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:989
msgid "Disallow raw tracepoint access by users without ``CAP_PERFMON``."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:991
msgid ">=1"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:991
msgid "Disallow CPU event access by users without ``CAP_PERFMON``."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:993
msgid ">=2"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:993
msgid "Disallow kernel profiling by users without ``CAP_PERFMON``."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:998
msgid "perf_event_max_stack"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1000
msgid ""
"Controls maximum number of stack frames to copy for (``attr.sample_type & "
"PERF_SAMPLE_CALLCHAIN``) configured events, for instance, when using '``perf "
"record -g``' or '``perf trace --call-graph fp``'."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1004
#: ../../../admin-guide/sysctl/kernel.rst:1025
msgid ""
"This can only be done when no events are in use that have callchains "
"enabled, otherwise writing to this file will return ``-EBUSY``."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1007
msgid "The default value is 127."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1011
msgid "perf_event_mlock_kb"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1013
msgid "Control size of per-cpu ring buffer not counted against mlock limit."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1015
msgid "The default value is 512 + 1 page"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1019
msgid "perf_event_max_contexts_per_stack"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1021
msgid ""
"Controls maximum number of stack frame context entries for (``attr."
"sample_type & PERF_SAMPLE_CALLCHAIN``) configured events, for instance, when "
"using '``perf record -g``' or '``perf trace --call-graph fp``'."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1028
msgid "The default value is 8."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1032
msgid "perf_user_access (arm64 and riscv only)"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1034
msgid "Controls user space access for reading perf event counters."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1036
msgid "for arm64 The default value is 0 (access disabled)."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1039
msgid ""
"When set to 1, user space can read performance monitor counter registers "
"directly."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1042
msgid "See Documentation/arch/arm64/perf.rst for more information."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1044
msgid "for riscv When set to 0, user space access is disabled."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1047
msgid ""
"The default value is 1, user space can read performance monitor counter "
"registers through perf, any direct access without perf intervention will "
"trigger an illegal instruction."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1051
msgid ""
"When set to 2, which enables legacy mode (user space has direct access to "
"cycle and insret CSRs only). Note that this legacy value is deprecated and "
"will be removed once all user space applications are fixed."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1055
msgid "Note that the time CSR is always directly accessible to all modes."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1058
msgid "pid_max"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1060
msgid ""
"PID allocation wrap value.  When the kernel's next PID value reaches this "
"value, it wraps back to a minimum PID value. PIDs of value ``pid_max`` or "
"larger are not allocated."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1066
msgid "ns_last_pid"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1068
msgid ""
"The last pid allocated in the current (the one task using this sysctl lives "
"in) pid namespace. When selecting a pid for a next task on fork kernel tries "
"to allocate a number starting from this one."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1074
msgid "powersave-nap (PPC only)"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1076
msgid ""
"If set, Linux-PPC will use the 'nap' mode of powersaving, otherwise the "
"'doze' mode will be used."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1083
msgid "printk"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1085
msgid ""
"The four values in printk denote: ``console_loglevel``, "
"``default_message_loglevel``, ``minimum_console_loglevel`` and "
"``default_console_loglevel`` respectively."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1089
msgid ""
"These values influence printk() behavior when printing or logging error "
"messages. See '``man 2 syslog``' for more info on the different loglevels."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1094
msgid "console_loglevel"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1094
msgid ""
"messages with a higher priority than this will be printed to the console"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1096
msgid "default_message_loglevel"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1096
msgid ""
"messages without an explicit priority will be printed with this priority"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1098
msgid "minimum_console_loglevel"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1098
msgid "minimum (highest) value to which console_loglevel can be set"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1100
msgid "default_console_loglevel"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1100
msgid "default value for console_loglevel"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1105
msgid "printk_delay"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1107
msgid "Delay each printk message in ``printk_delay`` milliseconds"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1109
msgid "Value from 0 - 10000 is allowed."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1113
msgid "printk_ratelimit"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1115
msgid ""
"Some warning messages are rate limited. ``printk_ratelimit`` specifies the "
"minimum length of time between these messages (in seconds). The default "
"value is 5 seconds."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1119
msgid "A value of 0 will disable rate limiting."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1123
msgid "printk_ratelimit_burst"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1125
msgid ""
"While long term we enforce one message per `printk_ratelimit`_ seconds, we "
"do allow a burst of messages to pass through. ``printk_ratelimit_burst`` "
"specifies the number of messages we can send before ratelimiting kicks in.  "
"After `printk_ratelimit`_ seconds have elapsed, another burst of messages "
"may be sent."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1131
msgid "The default value is 10 messages."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1135
msgid "printk_devkmsg"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1137
msgid "Control the logging to ``/dev/kmsg`` from userspace:"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1140
msgid "ratelimit"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1140
msgid "default, ratelimited"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1141
msgid "on"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1141
msgid "unlimited logging to /dev/kmsg from userspace"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1142
msgid "off"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1142
msgid "logging to /dev/kmsg disabled"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1145
msgid ""
"The kernel command line parameter ``printk.devkmsg=`` overrides this and is "
"a one-time setting until next reboot: once set, it cannot be changed by this "
"sysctl interface anymore."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1153
msgid "pty"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1155
msgid "See Documentation/filesystems/devpts.rst."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1159
msgid "random"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1161
msgid "This is a directory, with the following entries:"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1163
msgid ""
"``boot_id``: a UUID generated the first time this is retrieved, and "
"unvarying after that;"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1166
msgid ""
"``uuid``: a UUID generated every time this is retrieved (this can thus be "
"used to generate UUIDs at will);"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1169
msgid "``entropy_avail``: the pool's entropy count, in bits;"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1171
msgid "``poolsize``: the entropy pool size, in bits;"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1173
msgid ""
"``urandom_min_reseed_secs``: obsolete (used to determine the minimum number "
"of seconds between urandom pool reseeding). This file is writable for "
"compatibility purposes, but writing to it has no effect on any RNG behavior;"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1178
msgid ""
"``write_wakeup_threshold``: when the entropy count drops below this (as a "
"number of bits), processes waiting to write to ``/dev/random`` are woken up. "
"This file is writable for compatibility purposes, but writing to it has no "
"effect on any RNG behavior."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1185
msgid "randomize_va_space"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1187
msgid ""
"This option can be used to select the type of process address space "
"randomization that is used in the system, for architectures that support "
"this feature."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1192
msgid ""
"Turn the process address space randomization off.  This is the default for "
"architectures that do not support this feature anyways, and kernels that are "
"booted with the \"norandmaps\" parameter."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1196
msgid ""
"Make the addresses of mmap base, stack and VDSO page randomized. This, among "
"other things, implies that shared libraries will be loaded to random "
"addresses.  Also for PIE-linked binaries, the location of code start is "
"randomized.  This is the default if the ``CONFIG_COMPAT_BRK`` option is "
"enabled."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1202
msgid ""
"Additionally enable heap randomization.  This is the default if "
"``CONFIG_COMPAT_BRK`` is disabled."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1205
msgid ""
"There are a few legacy applications out there (such as some ancient versions "
"of libc.so.5 from 1996) that assume that brk area starts just after the end "
"of the code+bss.  These applications break when start of the brk area is "
"randomized.  There are however no known non-legacy applications that would "
"be broken this way, so for most systems it is safe to choose full "
"randomization."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1212
msgid ""
"Systems with ancient and/or broken binaries should be configured with "
"``CONFIG_COMPAT_BRK`` enabled, which excludes the heap from process address "
"space randomization."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1219
msgid "real-root-dev"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1221
msgid "See Documentation/admin-guide/initrd.rst."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1225
msgid "reboot-cmd (SPARC only)"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1227
msgid ""
"??? This seems to be a way to give an argument to the Sparc ROM/Flash boot "
"loader. Maybe to tell it what to do after rebooting. ???"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1233
msgid "sched_energy_aware"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1235
msgid ""
"Enables/disables Energy Aware Scheduling (EAS). EAS starts automatically on "
"platforms where it can run (that is, platforms with asymmetric CPU "
"topologies and having an Energy Model available). If your platform happens "
"to meet the requirements for EAS but you do not want to use it, change this "
"value to 0. On Non-EAS platforms, write operation fails and read doesn't "
"return anything."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1244
msgid "task_delayacct"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1246
msgid ""
"Enables/disables task delay accounting (see Documentation/accounting/delay-"
"accounting.rst. Enabling this feature incurs a small amount of overhead in "
"the scheduler but is useful for debugging and performance tuning. It is "
"required by some tools such as iotop."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1252
msgid "sched_schedstats"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1254
msgid ""
"Enables/disables scheduler statistics. Enabling this feature incurs a small "
"amount of overhead in the scheduler but is useful for debugging and "
"performance tuning."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1259
msgid "sched_util_clamp_min"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1261
msgid "Max allowed *minimum* utilization."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1263
#: ../../../admin-guide/sysctl/kernel.rst:1274
msgid "Default value is 1024, which is the maximum possible value."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1265
msgid ""
"It means that any requested uclamp.min value cannot be greater than "
"sched_util_clamp_min, i.e., it is restricted to the range [0:"
"sched_util_clamp_min]."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1270
msgid "sched_util_clamp_max"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1272
msgid "Max allowed *maximum* utilization."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1276
msgid ""
"It means that any requested uclamp.max value cannot be greater than "
"sched_util_clamp_max, i.e., it is restricted to the range [0:"
"sched_util_clamp_max]."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1281
msgid "sched_util_clamp_min_rt_default"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1283
msgid ""
"By default Linux is tuned for performance. Which means that RT tasks always "
"run at the highest frequency and most capable (highest capacity) CPU (in "
"heterogeneous systems)."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1287
msgid ""
"Uclamp achieves this by setting the requested uclamp.min of all RT tasks to "
"1024 by default, which effectively boosts the tasks to run at the highest "
"frequency and biases them to run on the biggest CPU."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1291
msgid ""
"This knob allows admins to change the default behavior when uclamp is being "
"used. In battery powered devices particularly, running at the maximum "
"capacity and frequency will increase energy consumption and shorten the "
"battery life."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1296
msgid ""
"This knob is only effective for RT tasks which the user hasn't modified "
"their requested uclamp.min value via sched_setattr() syscall."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1299
msgid ""
"This knob will not escape the range constraint imposed by "
"sched_util_clamp_min defined above."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1302
msgid "For example if"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1304
msgid "sched_util_clamp_min_rt_default = 800 sched_util_clamp_min = 600"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1307
msgid ""
"Then the boost will be clamped to 600 because 800 is outside of the "
"permissible range of [0:600]. This could happen for instance if a powersave "
"mode will restrict all boosts temporarily by modifying sched_util_clamp_min. "
"As soon as this restriction is lifted, the requested "
"sched_util_clamp_min_rt_default will take effect."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1314
msgid "seccomp"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1316
msgid "See Documentation/userspace-api/seccomp_filter.rst."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1320
msgid "sg-big-buff"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1322
msgid ""
"This file shows the size of the generic SCSI (sg) buffer. You can't tune it "
"just yet, but you could change it on compile time by editing ``include/scsi/"
"sg.h`` and changing the value of ``SG_BIG_BUFF``."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1327
msgid ""
"There shouldn't be any reason to change this value. If you can come up with "
"one, you probably know what you are doing anyway :)"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1333
msgid "shmall"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1335
msgid ""
"This parameter sets the total amount of shared memory pages that can be used "
"inside ipc namespace. The shared memory pages counting occurs for each ipc "
"namespace separately and is not inherited. Hence, ``shmall`` should always "
"be at least ``ceil(shmmax/PAGE_SIZE)``."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1340
msgid ""
"If you are not sure what the default ``PAGE_SIZE`` is on your Linux system, "
"you can run the following command::"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1345
msgid ""
"To reduce or disable the ability to allocate shared memory, you must create "
"a new ipc namespace, set this parameter to the required value and prohibit "
"the creation of a new ipc namespace in the current user namespace or cgroups "
"can be used."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1351
msgid "shmmax"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1353
msgid ""
"This value can be used to query and set the run time limit on the maximum "
"shared memory segment size that can be created. Shared memory segments up to "
"1Gb are now supported in the kernel.  This value defaults to ``SHMMAX``."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1360
msgid "shmmni"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1362
msgid ""
"This value determines the maximum number of shared memory segments. 4096 by "
"default (``SHMMNI``)."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1367
msgid "shm_rmid_forced"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1369
msgid ""
"Linux lets you set resource limits, including how much memory one process "
"can consume, via ``setrlimit(2)``.  Unfortunately, shared memory segments "
"are allowed to exist without association with any process, and thus might "
"not be counted against any resource limits.  If enabled, shared memory "
"segments are automatically destroyed when their attach count becomes zero "
"after a detach or a process termination.  It will also destroy segments that "
"were created, but never attached to, on exit from the process.  The only use "
"left for ``IPC_RMID`` is to immediately destroy an unattached segment.  Of "
"course, this breaks the way things are defined, so some applications might "
"stop working.  Note that this feature will do you no good unless you also "
"configure your resource limits (in particular, ``RLIMIT_AS`` and "
"``RLIMIT_NPROC``).  Most systems don't need this."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1383
msgid ""
"Note that if you change this from 0 to 1, already created segments without "
"users and with a dead originative process will be destroyed."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1388
msgid "sysctl_writes_strict"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1390
msgid ""
"Control how file position affects the behavior of updating sysctl values via "
"the ``/proc/sys`` interface:"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1394
msgid ""
"Legacy per-write sysctl value handling, with no printk warnings. Each write "
"syscall must fully contain the sysctl value to be written, and multiple "
"writes on the same sysctl file descriptor will rewrite the sysctl value, "
"regardless of file position."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1398
msgid ""
"Same behavior as above, but warn about processes that perform writes to a "
"sysctl file descriptor when the file position is not 0."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1400
msgid ""
"(default) Respect file position when writing sysctl strings. Multiple writes "
"will append to the sysctl value buffer. Anything past the max length of the "
"sysctl value buffer will be ignored. Writes to numeric sysctl entries must "
"always be at file position 0 and the value must be fully contained in the "
"buffer sent in the write syscall."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1409
msgid "softlockup_all_cpu_backtrace"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1411
msgid ""
"This value controls the soft lockup detector thread's behavior when a soft "
"lockup condition is detected as to whether or not to gather further debug "
"information. If enabled, each cpu will be issued an NMI and instructed to "
"capture stack trace."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1416
msgid "This feature is only applicable for architectures which support NMI."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1426
msgid "softlockup_panic"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1428
msgid ""
"This parameter can be used to control whether the kernel panics when a soft "
"lockup is detected."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1432
msgid "Don't panic on soft lockup."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1433
msgid "Panic on soft lockup."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1436
msgid "This can also be set using the softlockup_panic kernel parameter."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1440
msgid "soft_watchdog"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1442
msgid "This parameter can be used to control the soft lockup detector."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1445
msgid "Disable the soft lockup detector."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1446
msgid "Enable the soft lockup detector."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1449
msgid ""
"The soft lockup detector monitors CPUs for threads that are hogging the CPUs "
"without rescheduling voluntarily, and thus prevent the 'migration/N' threads "
"from running, causing the watchdog work fail to execute. The mechanism "
"depends on the CPUs ability to respond to timer interrupts which are needed "
"for the watchdog work to be queued by the watchdog timer function, otherwise "
"the NMI watchdog — if enabled — can detect a hard lockup condition."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1458
msgid "split_lock_mitigate (x86 only)"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1460
msgid ""
"On x86, each \"split lock\" imposes a system-wide performance penalty. On "
"larger systems, large numbers of split locks from unprivileged users can "
"result in denials of service to well-behaved and potentially more important "
"users."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1464
msgid ""
"The kernel mitigates these bad users by detecting split locks and imposing "
"penalties: forcing them to wait and only allowing one core to execute split "
"locks at a time."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1468
msgid ""
"These mitigations can make those bad applications unbearably slow. Setting "
"split_lock_mitigate=0 may restore some application performance, but will "
"also increase system exposure to denial of service attacks from split lock "
"users."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1473
msgid ""
"Disable the mitigation mode - just warns the split lock on kernel log and "
"exposes the system to denials of service from the split lockers."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1475
msgid ""
"Enable the mitigation mode (this is the default) - penalizes the split "
"lockers with intentional performance degradation."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1481
msgid "stack_erasing"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1483
msgid ""
"This parameter can be used to control kernel stack erasing at the end of "
"syscalls for kernels built with ``CONFIG_KSTACK_ERASE``."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1486
msgid ""
"That erasing reduces the information which kernel stack leak bugs can reveal "
"and blocks some uninitialized stack variable attacks. The tradeoff is the "
"performance impact: on a single CPU system kernel compilation sees a 1% "
"slowdown, other systems and workloads may vary."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1492
msgid "Kernel stack erasing is disabled, KSTACK_ERASE_METRICS are not updated."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1493
msgid ""
"Kernel stack erasing is enabled (default), it is performed before returning "
"to the userspace at the end of syscalls."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1499
msgid "stop-a (SPARC only)"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1501
msgid "Controls Stop-A:"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1504
msgid "Stop-A has no effect."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1505
msgid "Stop-A breaks to the PROM (default)."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1508
msgid ""
"Stop-A is always enabled on a panic, so that the user can return to the boot "
"PROM."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1513
msgid "sysrq"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1515
msgid "See Documentation/admin-guide/sysrq.rst."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1519
msgid "tainted"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1521
msgid ""
"Non-zero if the kernel has been tainted. Numeric values, which can be ORed "
"together. The letters are seen in \"Tainted\" line of Oops reports."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1525
msgid "`(P)`"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1525
msgid "proprietary module was loaded"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1526
msgid "`(F)`"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1526
msgid "module was force loaded"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1527
msgid "`(S)`"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1527
msgid "kernel running on an out of specification system"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1528
msgid "8"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1528
msgid "`(R)`"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1528
msgid "module was force unloaded"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1529
msgid "16"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1529
msgid "`(M)`"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1529
msgid "processor reported a Machine Check Exception (MCE)"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1530
msgid "32"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1530
msgid "`(B)`"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1530
msgid "bad page referenced or some unexpected page flags"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1531
msgid "64"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1531
msgid "`(U)`"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1531
msgid "taint requested by userspace application"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1532
msgid "128"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1532
msgid "`(D)`"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1532
msgid "kernel died recently, i.e. there was an OOPS or BUG"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1533
msgid "256"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1533
msgid "`(A)`"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1533
msgid "an ACPI table was overridden by user"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1534
msgid "512"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1534
msgid "`(W)`"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1534
msgid "kernel issued warning"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1535
msgid "1024"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1535
msgid "`(C)`"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1535
msgid "staging driver was loaded"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1536
msgid "2048"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1536
msgid "`(I)`"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1536
msgid "workaround for bug in platform firmware applied"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1537
msgid "4096"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1537
msgid "`(O)`"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1537
msgid "externally-built (\"out-of-tree\") module was loaded"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1538
msgid "8192"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1538
msgid "`(E)`"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1538
msgid "unsigned module was loaded"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1539
msgid "16384"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1539
msgid "`(L)`"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1539
msgid "soft lockup occurred"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1540
msgid "32768"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1540
msgid "`(K)`"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1540
msgid "kernel has been live patched"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1541
msgid "65536"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1541
msgid "`(X)`"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1541
msgid "Auxiliary taint, defined and used by for distros"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1542
msgid "131072"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1542
msgid "`(T)`"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1542
msgid "The kernel was built with the struct randomization plugin"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1545
msgid "See Documentation/admin-guide/tainted-kernels.rst for more information."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1548
msgid ""
"writes to this sysctl interface will fail with ``EINVAL`` if the kernel is "
"booted with the command line option ``panic_on_taint=<bitmask>,nousertaint`` "
"and any of the ORed together values being written to ``tainted`` match with "
"the bitmask declared on panic_on_taint. See Documentation/admin-guide/kernel-"
"parameters.rst for more details on that particular kernel command line "
"option and its optional ``nousertaint`` switch."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1557
msgid "threads-max"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1559
msgid ""
"This value controls the maximum number of threads that can be created using "
"``fork()``."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1562
msgid ""
"During initialization the kernel sets this value such that even if the "
"maximum number of threads is created, the thread structures occupy only a "
"part (1/8th) of the available RAM pages."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1566
msgid "The minimum value that can be written to ``threads-max`` is 1."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1568
msgid ""
"The maximum value that can be written to ``threads-max`` is given by the "
"constant ``FUTEX_TID_MASK`` (0x3fffffff)."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1571
msgid ""
"If a value outside of this range is written to ``threads-max`` an ``EINVAL`` "
"error occurs."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1575
msgid "timer_migration"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1577
msgid ""
"When set to a non-zero value, attempt to migrate timers away from idle cpus "
"to allow them to remain in low power states longer."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1580
msgid "Default is set (1)."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1583
msgid "traceoff_on_warning"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1585
msgid ""
"When set, disables tracing (see Documentation/trace/ftrace.rst) when a "
"``WARN()`` is hit."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1590
msgid "tracepoint_printk"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1592
msgid ""
"When tracepoints are sent to printk() (enabled by the ``tp_printk`` boot "
"parameter), this entry provides runtime control::"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1597
msgid "will stop tracepoints from being sent to printk(), and::"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1601
msgid "will send them to printk() again."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1603
msgid "This only works if the kernel was booted with ``tp_printk`` enabled."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1605
msgid ""
"See Documentation/admin-guide/kernel-parameters.rst and Documentation/trace/"
"boottime-trace.rst."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1610
msgid "unaligned-trap"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1612
msgid ""
"On architectures where unaligned accesses cause traps, and where this "
"feature is supported (``CONFIG_SYSCTL_ARCH_UNALIGN_ALLOW``; currently, "
"``arc``, ``parisc`` and ``loongarch``), controls whether unaligned traps are "
"caught and emulated (instead of failing)."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1618
msgid "Do not emulate unaligned accesses."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1619
msgid "Emulate unaligned accesses. This is the default setting."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1622
msgid "See also `ignore-unaligned-usertrap`_."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1626
msgid "unknown_nmi_panic"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1628
msgid ""
"The value in this file affects behavior of handling NMI. When the value is "
"non-zero, unknown NMI is trapped and then panic occurs. At that time, kernel "
"debugging information is displayed on console."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1632
msgid ""
"NMI switch that most IA32 servers have fires unknown NMI up, for example.  "
"If a system hangs up, try pressing the NMI switch."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1637
msgid "unprivileged_bpf_disabled"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1639
msgid ""
"Writing 1 to this entry will disable unprivileged calls to ``bpf()``; once "
"disabled, calling ``bpf()`` without ``CAP_SYS_ADMIN`` or ``CAP_BPF`` will "
"return ``-EPERM``. Once set to 1, this can't be cleared from the running "
"kernel anymore."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1644
msgid ""
"Writing 2 to this entry will also disable unprivileged calls to ``bpf()``, "
"however, an admin can still change this setting later on, if needed, by "
"writing 0 or 1 to this entry."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1648
msgid ""
"If ``BPF_UNPRIV_DEFAULT_OFF`` is enabled in the kernel config, then this "
"entry will default to 2 instead of 0."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1652
msgid "Unprivileged calls to ``bpf()`` are enabled"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1653
msgid "Unprivileged calls to ``bpf()`` are disabled without recovery"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1654
msgid "Unprivileged calls to ``bpf()`` are disabled"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1659
msgid "warn_limit"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1661
msgid ""
"Number of kernel warnings after which the kernel should panic when "
"``panic_on_warn`` is not set. Setting this to 0 disables checking the "
"warning count. Setting this to 1 has the same effect as setting "
"``panic_on_warn=1``. The default value is 0."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1668
msgid "watchdog"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1670
msgid ""
"This parameter can be used to disable or enable the soft lockup detector "
"*and* the NMI watchdog (i.e. the hard lockup detector) at the same time."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1674
msgid "Disable both lockup detectors."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1675
msgid "Enable both lockup detectors."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1678
msgid ""
"The soft lockup detector and the NMI watchdog can also be disabled or "
"enabled individually, using the ``soft_watchdog`` and ``nmi_watchdog`` "
"parameters. If the ``watchdog`` parameter is read, for example by executing::"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1685
msgid ""
"the output of this command (0 or 1) shows the logical OR of "
"``soft_watchdog`` and ``nmi_watchdog``."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1690
msgid "watchdog_cpumask"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1692
msgid ""
"This value can be used to control on which cpus the watchdog may run. The "
"default cpumask is all possible cores, but if ``NO_HZ_FULL`` is enabled in "
"the kernel config, and cores are specified with the ``nohz_full=`` boot "
"argument, those cores are excluded by default. Offline cores can be included "
"in this mask, and if the core is later brought online, the watchdog will be "
"started based on the mask value."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1699
msgid ""
"Typically this value would only be touched in the ``nohz_full`` case to re-"
"enable cores that by default were not running the watchdog, if a kernel "
"lockup was suspected on those cores."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1703
msgid ""
"The argument value is the standard cpulist format for cpumasks, so for "
"example to enable the watchdog on cores 0, 2, 3, and 4 you might say::"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1711
msgid "watchdog_thresh"
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1713
msgid ""
"This value can be used to control the frequency of hrtimer and NMI events "
"and the soft and hard lockup thresholds. The default threshold is 10 seconds."
msgstr ""

#: ../../../admin-guide/sysctl/kernel.rst:1717
msgid ""
"The softlockup threshold is (``2 * watchdog_thresh``). Setting this tunable "
"to zero will disable lockup detection altogether."
msgstr ""
