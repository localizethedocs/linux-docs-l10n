# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../admin-guide/bcache.rst:3
msgid "A block layer cache (bcache)"
msgstr ""

#: ../../../admin-guide/bcache.rst:5
msgid ""
"Say you've got a big slow raid 6, and an ssd or three. Wouldn't it be nice "
"if you could use them as cache... Hence bcache."
msgstr ""

#: ../../../admin-guide/bcache.rst:8
msgid "The bcache wiki can be found at:"
msgstr ""

#: ../../../admin-guide/bcache.rst:9
msgid "https://bcache.evilpiepirate.org"
msgstr ""

#: ../../../admin-guide/bcache.rst:11
msgid "This is the git repository of bcache-tools:"
msgstr ""

#: ../../../admin-guide/bcache.rst:12
msgid ""
"https://git.kernel.org/pub/scm/linux/kernel/git/colyli/bcache-tools.git/"
msgstr ""

#: ../../../admin-guide/bcache.rst:14
msgid "The latest bcache kernel code can be found from mainline Linux kernel:"
msgstr ""

#: ../../../admin-guide/bcache.rst:15
msgid "https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/"
msgstr ""

#: ../../../admin-guide/bcache.rst:17
msgid ""
"It's designed around the performance characteristics of SSDs - it only "
"allocates in erase block sized buckets, and it uses a hybrid btree/log to "
"track cached extents (which can be anywhere from a single sector to the "
"bucket size). It's designed to avoid random writes at all costs; it fills up "
"an erase block sequentially, then issues a discard before reusing it."
msgstr ""

#: ../../../admin-guide/bcache.rst:23
msgid ""
"Both writethrough and writeback caching are supported. Writeback defaults to "
"off, but can be switched on and off arbitrarily at runtime. Bcache goes to "
"great lengths to protect your data - it reliably handles unclean shutdown. "
"(It doesn't even have a notion of a clean shutdown; bcache simply doesn't "
"return writes as completed until they're on stable storage)."
msgstr ""

#: ../../../admin-guide/bcache.rst:29
msgid ""
"Writeback caching can use most of the cache for buffering writes - writing "
"dirty data to the backing device is always done sequentially, scanning from "
"the start to the end of the index."
msgstr ""

#: ../../../admin-guide/bcache.rst:33
msgid ""
"Since random IO is what SSDs excel at, there generally won't be much benefit "
"to caching large sequential IO. Bcache detects sequential IO and skips it; "
"it also keeps a rolling average of the IO sizes per task, and as long as the "
"average is above the cutoff it will skip all IO from that task - instead of "
"caching the first 512k after every seek. Backups and large file copies "
"should thus entirely bypass the cache."
msgstr ""

#: ../../../admin-guide/bcache.rst:40
msgid ""
"In the event of a data IO error on the flash it will try to recover by "
"reading from disk or invalidating cache entries.  For unrecoverable errors "
"(meta data or dirty data), caching is automatically disabled; if dirty data "
"was present in the cache it first disables writeback caching and waits for "
"all dirty data to be flushed."
msgstr ""

#: ../../../admin-guide/bcache.rst:46
msgid ""
"Getting started: You'll need bcache util from the bcache-tools repository. "
"Both the cache device and backing device must be formatted before use::"
msgstr ""

#: ../../../admin-guide/bcache.rst:53
msgid ""
"`bcache make` has the ability to format multiple devices at the same time - "
"if you format your backing devices and cache device at the same time, you "
"won't have to manually attach::"
msgstr ""

#: ../../../admin-guide/bcache.rst:59
msgid ""
"If your bcache-tools is not updated to latest version and does not have the "
"unified `bcache` utility, you may use the legacy `make-bcache` utility to "
"format bcache device with same -B and -C parameters."
msgstr ""

#: ../../../admin-guide/bcache.rst:63
msgid ""
"bcache-tools now ships udev rules, and bcache devices are known to the "
"kernel immediately.  Without udev, you can manually register devices like "
"this::"
msgstr ""

#: ../../../admin-guide/bcache.rst:69
msgid ""
"Registering the backing device makes the bcache device show up in /dev; you "
"can now format it and use it as normal. But the first time using a new "
"bcache device, it'll be running in passthrough mode until you attach it to a "
"cache. If you are thinking about using bcache later, it is recommended to "
"setup all your slow devices as bcache backing devices without a cache, and "
"you can choose to add a caching device later. See 'ATTACHING' section below."
msgstr ""

#: ../../../admin-guide/bcache.rst:77
msgid "The devices show up as::"
msgstr ""

#: ../../../admin-guide/bcache.rst:81
msgid "As well as (with udev)::"
msgstr ""

#: ../../../admin-guide/bcache.rst:86
msgid "To get started::"
msgstr ""

#: ../../../admin-guide/bcache.rst:91
msgid ""
"You can control bcache devices through sysfs at /sys/block/bcache<N>/"
"bcache . You can also control them through /sys/fs//bcache/<cset-uuid>/ ."
msgstr ""

#: ../../../admin-guide/bcache.rst:94
msgid ""
"Cache devices are managed as sets; multiple caches per set isn't supported "
"yet but will allow for mirroring of metadata and dirty data in the future. "
"Your new cache set shows up as /sys/fs/bcache/<UUID>"
msgstr ""

#: ../../../admin-guide/bcache.rst:99
msgid "Attaching"
msgstr ""

#: ../../../admin-guide/bcache.rst:101
msgid ""
"After your cache device and backing device are registered, the backing "
"device must be attached to your cache set to enable caching. Attaching a "
"backing device to a cache set is done thusly, with the UUID of the cache set "
"in /sys/fs/bcache::"
msgstr ""

#: ../../../admin-guide/bcache.rst:108
msgid ""
"This only has to be done once. The next time you reboot, just reregister all "
"your bcache devices. If a backing device has data in a cache somewhere, the /"
"dev/bcache<N> device won't be created until the cache shows up - "
"particularly important if you have writeback caching turned on."
msgstr ""

#: ../../../admin-guide/bcache.rst:113
msgid ""
"If you're booting up and your cache device is gone and never coming back, "
"you can force run the backing device::"
msgstr ""

#: ../../../admin-guide/bcache.rst:118
msgid ""
"(You need to use /sys/block/sdb (or whatever your backing device is called), "
"not /sys/block/bcache0, because bcache0 doesn't exist yet. If you're using a "
"partition, the bcache directory would be at /sys/block/sdb/sdb2/bcache)"
msgstr ""

#: ../../../admin-guide/bcache.rst:122
msgid ""
"The backing device will still use that cache set if it shows up in the "
"future, but all the cached data will be invalidated. If there was dirty data "
"in the cache, don't expect the filesystem to be recoverable - you will have "
"massive filesystem corruption, though ext4's fsck does work miracles."
msgstr ""

#: ../../../admin-guide/bcache.rst:128
msgid "Error Handling"
msgstr ""

#: ../../../admin-guide/bcache.rst:130
msgid ""
"Bcache tries to transparently handle IO errors to/from the cache device "
"without affecting normal operation; if it sees too many errors (the "
"threshold is configurable, and defaults to 0) it shuts down the cache device "
"and switches all the backing devices to passthrough mode."
msgstr ""

#: ../../../admin-guide/bcache.rst:135
msgid ""
"For reads from the cache, if they error we just retry the read from the "
"backing device."
msgstr ""

#: ../../../admin-guide/bcache.rst:138
msgid ""
"For writethrough writes, if the write to the cache errors we just switch to "
"invalidating the data at that lba in the cache (i.e. the same thing we do "
"for a write that bypasses the cache)"
msgstr ""

#: ../../../admin-guide/bcache.rst:142
msgid ""
"For writeback writes, we currently pass that error back up to the filesystem/"
"userspace. This could be improved - we could retry it as a write that skips "
"the cache so we don't have to error the write."
msgstr ""

#: ../../../admin-guide/bcache.rst:146
msgid ""
"When we detach, we first try to flush any dirty data (if we were running in "
"writeback mode). It currently doesn't do anything intelligent if it fails to "
"read some of the dirty data, though."
msgstr ""

#: ../../../admin-guide/bcache.rst:152
msgid "Howto/cookbook"
msgstr ""

#: ../../../admin-guide/bcache.rst:154
msgid "Starting a bcache with a missing caching device"
msgstr ""

#: ../../../admin-guide/bcache.rst:156
msgid ""
"If registering the backing device doesn't help, it's already there, you just "
"need to force it to run without the cache::"
msgstr ""

#: ../../../admin-guide/bcache.rst:162
msgid ""
"Next, you try to register your caching device if it's present. However if "
"it's absent, or registration fails for some reason, you can still start your "
"bcache without its cache, like so::"
msgstr ""

#: ../../../admin-guide/bcache.rst:168
msgid ""
"Note that this may cause data loss if you were running in writeback mode."
msgstr ""

#: ../../../admin-guide/bcache.rst:171
msgid "Bcache does not find its cache::"
msgstr ""

#: ../../../admin-guide/bcache.rst:178
msgid ""
"In this case, the caching device was simply not registered at boot or "
"disappeared and came back, and needs to be (re-)registered::"
msgstr ""

#: ../../../admin-guide/bcache.rst:184
msgid "Corrupt bcache crashes the kernel at device registration time:"
msgstr ""

#: ../../../admin-guide/bcache.rst:186
msgid ""
"This should never happen.  If it does happen, then you have found a bug! "
"Please report it to the bcache development list: linux-bcache@vger.kernel.org"
msgstr ""

#: ../../../admin-guide/bcache.rst:189
msgid ""
"Be sure to provide as much information that you can including kernel dmesg "
"output if available so that we may assist."
msgstr ""

#: ../../../admin-guide/bcache.rst:193
msgid "Recovering data without bcache:"
msgstr ""

#: ../../../admin-guide/bcache.rst:195
msgid ""
"If bcache is not available in the kernel, a filesystem on the backing device "
"is still available at an 8KiB offset. So either via a loopdev of the backing "
"device created with --offset 8K, or any value defined by --data-offset when "
"you originally formatted bcache with `bcache make`."
msgstr ""

#: ../../../admin-guide/bcache.rst:200
msgid "For example::"
msgstr ""

#: ../../../admin-guide/bcache.rst:204
msgid "This should present your unmodified backing device data in /dev/loop0"
msgstr ""

#: ../../../admin-guide/bcache.rst:206
msgid ""
"If your cache is in writethrough mode, then you can safely discard the cache "
"device without losing data."
msgstr ""

#: ../../../admin-guide/bcache.rst:210
msgid "Wiping a cache device"
msgstr ""

#: ../../../admin-guide/bcache.rst:218
msgid ""
"After you boot back with bcache enabled, you recreate the cache and attach "
"it::"
msgstr ""

#: ../../../admin-guide/bcache.rst:233
msgid "start backing device with missing cache::"
msgstr ""

#: ../../../admin-guide/bcache.rst:237
msgid "attach new cache::"
msgstr ""

#: ../../../admin-guide/bcache.rst:243
msgid "Remove or replace a caching device::"
msgstr ""

#: ../../../admin-guide/bcache.rst:252
msgid "We need to go and unregister it::"
msgstr ""

#: ../../../admin-guide/bcache.rst:259
msgid "Now we can wipe it::"
msgstr ""

#: ../../../admin-guide/bcache.rst:265
msgid "dm-crypt and bcache"
msgstr ""

#: ../../../admin-guide/bcache.rst:267
msgid ""
"First setup bcache unencrypted and then install dmcrypt on top of /dev/"
"bcache<N> This will work faster than if you dmcrypt both the backing and "
"caching devices and then install bcache on top. [benchmarks?]"
msgstr ""

#: ../../../admin-guide/bcache.rst:272
msgid "Stop/free a registered bcache to wipe and/or recreate it"
msgstr ""

#: ../../../admin-guide/bcache.rst:274
msgid ""
"Suppose that you need to free up all bcache references so that you can fdisk "
"run and re-register a changed partition table, which won't work if there are "
"any active backing or caching devices left on it:"
msgstr ""

#: ../../../admin-guide/bcache.rst:278
msgid "Is it present in /dev/bcache* ? (there are times where it won't be)"
msgstr ""

#: ../../../admin-guide/bcache.rst:280
msgid "If so, it's easy::"
msgstr ""

#: ../../../admin-guide/bcache.rst:284
msgid "But if your backing device is gone, this won't work::"
msgstr ""

#: ../../../admin-guide/bcache.rst:289
msgid ""
"In this case, you may have to unregister the dmcrypt block device that "
"references this bcache to free it up::"
msgstr ""

#: ../../../admin-guide/bcache.rst:296
msgid ""
"This causes the backing bcache to be removed from /sys/fs/bcache and then it "
"can be reused.  This would be true of any block device stacking where bcache "
"is a lower device."
msgstr ""

#: ../../../admin-guide/bcache.rst:300
msgid "In other cases, you can also look in /sys/fs/bcache/::"
msgstr ""

#: ../../../admin-guide/bcache.rst:307
msgid ""
"The device names will show which UUID is relevant, cd in that directory and "
"stop the cache::"
msgstr ""

#: ../../../admin-guide/bcache.rst:312
msgid ""
"This will free up bcache references and let you reuse the partition for "
"other purposes."
msgstr ""

#: ../../../admin-guide/bcache.rst:318
msgid "Troubleshooting performance"
msgstr ""

#: ../../../admin-guide/bcache.rst:320
msgid ""
"Bcache has a bunch of config options and tunables. The defaults are intended "
"to be reasonable for typical desktop and server workloads, but they're not "
"what you want for getting the best possible numbers when benchmarking."
msgstr ""

#: ../../../admin-guide/bcache.rst:324
msgid "Backing device alignment"
msgstr ""

#: ../../../admin-guide/bcache.rst:326
msgid ""
"The default metadata size in bcache is 8k.  If your backing device is RAID "
"based, then be sure to align this by a multiple of your stride width using "
"`bcache make --data-offset`. If you intend to expand your disk array in the "
"future, then multiply a series of primes by your raid stripe size to get the "
"disk multiples that you would like."
msgstr ""

#: ../../../admin-guide/bcache.rst:332
msgid ""
"For example:  If you have a 64k stripe size, then the following offset would "
"provide alignment for many common RAID5 data spindle counts::"
msgstr ""

#: ../../../admin-guide/bcache.rst:337
msgid ""
"That space is wasted, but for only 157.5MB you can grow your RAID 5 volume "
"to the following data-spindle counts without re-aligning::"
msgstr ""

#: ../../../admin-guide/bcache.rst:342
msgid "Bad write performance"
msgstr ""

#: ../../../admin-guide/bcache.rst:344
msgid ""
"If write performance is not what you expected, you probably wanted to be "
"running in writeback mode, which isn't the default (not due to a lack of "
"maturity, but simply because in writeback mode you'll lose data if something "
"happens to your SSD)::"
msgstr ""

#: ../../../admin-guide/bcache.rst:351
msgid "Bad performance, or traffic not going to the SSD that you'd expect"
msgstr ""

#: ../../../admin-guide/bcache.rst:353
msgid ""
"By default, bcache doesn't cache everything. It tries to skip sequential IO "
"- because you really want to be caching the random IO, and if you copy a 10 "
"gigabyte file you probably don't want that pushing 10 gigabytes of randomly "
"accessed data out of your cache."
msgstr ""

#: ../../../admin-guide/bcache.rst:358
msgid ""
"But if you want to benchmark reads from cache, and you start out with fio "
"writing an 8 gigabyte test file - so you want to disable that::"
msgstr ""

#: ../../../admin-guide/bcache.rst:363
msgid "To set it back to the default (4 mb), do::"
msgstr ""

#: ../../../admin-guide/bcache.rst:367
msgid "Traffic's still going to the spindle/still getting cache misses"
msgstr ""

#: ../../../admin-guide/bcache.rst:369
msgid ""
"In the real world, SSDs don't always keep up with disks - particularly with "
"slower SSDs, many disks being cached by one SSD, or mostly sequential IO. So "
"you want to avoid being bottlenecked by the SSD and having it slow "
"everything down."
msgstr ""

#: ../../../admin-guide/bcache.rst:374
msgid ""
"To avoid that bcache tracks latency to the cache device, and gradually "
"throttles traffic if the latency exceeds a threshold (it does this by "
"cranking down the sequential bypass)."
msgstr ""

#: ../../../admin-guide/bcache.rst:378
msgid "You can disable this if you need to by setting the thresholds to 0::"
msgstr ""

#: ../../../admin-guide/bcache.rst:383
msgid ""
"The default is 2000 us (2 milliseconds) for reads, and 20000 for writes."
msgstr ""

#: ../../../admin-guide/bcache.rst:385
msgid "Still getting cache misses, of the same data"
msgstr ""

#: ../../../admin-guide/bcache.rst:387
msgid ""
"One last issue that sometimes trips people up is actually an old bug, due to "
"the way cache coherency is handled for cache misses. If a btree node is "
"full, a cache miss won't be able to insert a key for the new data and the "
"data won't be written to the cache."
msgstr ""

#: ../../../admin-guide/bcache.rst:392
msgid ""
"In practice this isn't an issue because as soon as a write comes along it'll "
"cause the btree node to be split, and you need almost no write traffic for "
"this to not show up enough to be noticeable (especially since bcache's btree "
"nodes are huge and index large regions of the device). But when you're "
"benchmarking, if you're trying to warm the cache by reading a bunch of data "
"and there's no other traffic - that can be a problem."
msgstr ""

#: ../../../admin-guide/bcache.rst:399
msgid ""
"Solution: warm the cache by doing writes, or use the testing branch (there's "
"a fix for the issue there)."
msgstr ""

#: ../../../admin-guide/bcache.rst:404
msgid "Sysfs - backing device"
msgstr ""

#: ../../../admin-guide/bcache.rst:406
msgid ""
"Available at /sys/block/<bdev>/bcache, /sys/block/bcache*/bcache and (if "
"attached) /sys/fs/bcache/<cset-uuid>/bdev*"
msgstr ""

#: ../../../admin-guide/bcache.rst:409
msgid "attach"
msgstr ""

#: ../../../admin-guide/bcache.rst:410
msgid "Echo the UUID of a cache set to this file to enable caching."
msgstr ""

#: ../../../admin-guide/bcache.rst:412
msgid "cache_mode"
msgstr ""

#: ../../../admin-guide/bcache.rst:413
msgid "Can be one of either writethrough, writeback, writearound or none."
msgstr ""

#: ../../../admin-guide/bcache.rst:415 ../../../admin-guide/bcache.rst:540
msgid "clear_stats"
msgstr ""

#: ../../../admin-guide/bcache.rst:416
msgid ""
"Writing to this file resets the running total stats (not the day/hour/5 "
"minute decaying versions)."
msgstr ""

#: ../../../admin-guide/bcache.rst:419
msgid "detach"
msgstr ""

#: ../../../admin-guide/bcache.rst:420
msgid ""
"Write to this file to detach from a cache set. If there is dirty data in the "
"cache, it will be flushed first."
msgstr ""

#: ../../../admin-guide/bcache.rst:423 ../../../admin-guide/bcache.rst:543
msgid "dirty_data"
msgstr ""

#: ../../../admin-guide/bcache.rst:424
msgid ""
"Amount of dirty data for this backing device in the cache. Continuously "
"updated unlike the cache set's version, but may be slightly off."
msgstr ""

#: ../../../admin-guide/bcache.rst:427
msgid "label"
msgstr ""

#: ../../../admin-guide/bcache.rst:428
msgid "Name of underlying device."
msgstr ""

#: ../../../admin-guide/bcache.rst:430
msgid "readahead"
msgstr ""

#: ../../../admin-guide/bcache.rst:431
msgid ""
"Size of readahead that should be performed.  Defaults to 0.  If set to e.g. "
"1M, it will round cache miss reads up to that size, but without overlapping "
"existing cache entries."
msgstr ""

#: ../../../admin-guide/bcache.rst:435
msgid "running"
msgstr ""

#: ../../../admin-guide/bcache.rst:436
msgid ""
"1 if bcache is running (i.e. whether the /dev/bcache device exists, whether "
"it's in passthrough mode or caching)."
msgstr ""

#: ../../../admin-guide/bcache.rst:439
msgid "sequential_cutoff"
msgstr ""

#: ../../../admin-guide/bcache.rst:440
msgid ""
"A sequential IO will bypass the cache once it passes this threshold; the "
"most recent 128 IOs are tracked so sequential IO can be detected even when "
"it isn't all done at once."
msgstr ""

#: ../../../admin-guide/bcache.rst:444
msgid "sequential_merge"
msgstr ""

#: ../../../admin-guide/bcache.rst:445
msgid ""
"If non zero, bcache keeps a list of the last 128 requests submitted to "
"compare against all new requests to determine which new requests are "
"sequential continuations of previous requests for the purpose of determining "
"sequential cutoff. This is necessary if the sequential cutoff value is "
"greater than the maximum acceptable sequential size for any single request."
msgstr ""

#: ../../../admin-guide/bcache.rst:451
msgid "state"
msgstr ""

#: ../../../admin-guide/bcache.rst:452
msgid "The backing device can be in one of four different states:"
msgstr ""

#: ../../../admin-guide/bcache.rst:454
msgid "no cache: Has never been attached to a cache set."
msgstr ""

#: ../../../admin-guide/bcache.rst:456
msgid "clean: Part of a cache set, and there is no cached dirty data."
msgstr ""

#: ../../../admin-guide/bcache.rst:458
msgid "dirty: Part of a cache set, and there is cached dirty data."
msgstr ""

#: ../../../admin-guide/bcache.rst:460
msgid ""
"inconsistent: The backing device was forcibly run by the user when there was "
"dirty data cached but the cache set was unavailable; whatever data was on "
"the backing device has likely been corrupted."
msgstr ""

#: ../../../admin-guide/bcache.rst:464 ../../../admin-guide/bcache.rst:563
msgid "stop"
msgstr ""

#: ../../../admin-guide/bcache.rst:465
msgid ""
"Write to this file to shut down the bcache device and close the backing "
"device."
msgstr ""

#: ../../../admin-guide/bcache.rst:468
msgid "writeback_delay"
msgstr ""

#: ../../../admin-guide/bcache.rst:469
msgid ""
"When dirty data is written to the cache and it previously did not contain "
"any, waits some number of seconds before initiating writeback. Defaults to "
"30."
msgstr ""

#: ../../../admin-guide/bcache.rst:473
msgid "writeback_percent"
msgstr ""

#: ../../../admin-guide/bcache.rst:474
msgid ""
"If nonzero, bcache tries to keep around this percentage of the cache dirty "
"by throttling background writeback and using a PD controller to smoothly "
"adjust the rate."
msgstr ""

#: ../../../admin-guide/bcache.rst:478
msgid "writeback_rate"
msgstr ""

#: ../../../admin-guide/bcache.rst:479
msgid ""
"Rate in sectors per second - if writeback_percent is nonzero, background "
"writeback is throttled to this rate. Continuously adjusted by bcache but may "
"also be set by the user."
msgstr ""

#: ../../../admin-guide/bcache.rst:483
msgid "writeback_running"
msgstr ""

#: ../../../admin-guide/bcache.rst:484
msgid ""
"If off, writeback of dirty data will not take place at all. Dirty data will "
"still be added to the cache until it is mostly full; only meant for "
"benchmarking. Defaults to on."
msgstr ""

#: ../../../admin-guide/bcache.rst:489
msgid "Sysfs - backing device stats"
msgstr ""

#: ../../../admin-guide/bcache.rst:491
msgid ""
"There are directories with these numbers for a running total, as well as "
"versions that decay over the past day, hour and 5 minutes; they're also "
"aggregated in the cache set directory as well."
msgstr ""

#: ../../../admin-guide/bcache.rst:495
msgid "bypassed"
msgstr ""

#: ../../../admin-guide/bcache.rst:496
msgid "Amount of IO (both reads and writes) that has bypassed the cache"
msgstr ""

#: ../../../admin-guide/bcache.rst:498
msgid "cache_hits, cache_misses, cache_hit_ratio"
msgstr ""

#: ../../../admin-guide/bcache.rst:499
msgid ""
"Hits and misses are counted per individual IO as bcache sees them; a partial "
"hit is counted as a miss."
msgstr ""

#: ../../../admin-guide/bcache.rst:502
msgid "cache_bypass_hits, cache_bypass_misses"
msgstr ""

#: ../../../admin-guide/bcache.rst:503
msgid ""
"Hits and misses for IO that is intended to skip the cache are still counted, "
"but broken out here."
msgstr ""

#: ../../../admin-guide/bcache.rst:506
msgid "cache_miss_collisions"
msgstr ""

#: ../../../admin-guide/bcache.rst:507
msgid ""
"Counts instances where data was going to be inserted into the cache from a "
"cache miss, but raced with a write and data was already present (usually 0 "
"since the synchronization for cache misses was rewritten)"
msgstr ""

#: ../../../admin-guide/bcache.rst:512
msgid "Sysfs - cache set"
msgstr ""

#: ../../../admin-guide/bcache.rst:514
msgid "Available at /sys/fs/bcache/<cset-uuid>"
msgstr ""

#: ../../../admin-guide/bcache.rst:516
msgid "average_key_size"
msgstr ""

#: ../../../admin-guide/bcache.rst:517
msgid "Average data per key in the btree."
msgstr ""

#: ../../../admin-guide/bcache.rst:519
msgid "bdev<0..n>"
msgstr ""

#: ../../../admin-guide/bcache.rst:520
msgid "Symlink to each of the attached backing devices."
msgstr ""

#: ../../../admin-guide/bcache.rst:522 ../../../admin-guide/bcache.rst:609
msgid "block_size"
msgstr ""

#: ../../../admin-guide/bcache.rst:523
msgid "Block size of the cache devices."
msgstr ""

#: ../../../admin-guide/bcache.rst:525
msgid "btree_cache_size"
msgstr ""

#: ../../../admin-guide/bcache.rst:526
msgid "Amount of memory currently used by the btree cache"
msgstr ""

#: ../../../admin-guide/bcache.rst:528 ../../../admin-guide/bcache.rst:615
msgid "bucket_size"
msgstr ""

#: ../../../admin-guide/bcache.rst:529 ../../../admin-guide/bcache.rst:616
msgid "Size of buckets"
msgstr ""

#: ../../../admin-guide/bcache.rst:531
msgid "cache<0..n>"
msgstr ""

#: ../../../admin-guide/bcache.rst:532
msgid "Symlink to each of the cache devices comprising this cache set."
msgstr ""

#: ../../../admin-guide/bcache.rst:534
msgid "cache_available_percent"
msgstr ""

#: ../../../admin-guide/bcache.rst:535
msgid ""
"Percentage of cache device which doesn't contain dirty data, and could "
"potentially be used for writeback.  This doesn't mean this space isn't used "
"for clean cached data; the unused statistic (in priority_stats) is typically "
"much lower."
msgstr ""

#: ../../../admin-guide/bcache.rst:541
msgid "Clears the statistics associated with this cache"
msgstr ""

#: ../../../admin-guide/bcache.rst:544
msgid ""
"Amount of dirty data is in the cache (updated when garbage collection runs)."
msgstr ""

#: ../../../admin-guide/bcache.rst:546
msgid "flash_vol_create"
msgstr ""

#: ../../../admin-guide/bcache.rst:547
msgid ""
"Echoing a size to this file (in human readable units, k/M/G) creates a "
"thinly provisioned volume backed by the cache set."
msgstr ""

#: ../../../admin-guide/bcache.rst:550
msgid "io_error_halflife, io_error_limit"
msgstr ""

#: ../../../admin-guide/bcache.rst:551
msgid ""
"These determines how many errors we accept before disabling the cache. Each "
"error is decayed by the half life (in # ios).  If the decaying count reaches "
"io_error_limit dirty data is written out and the cache is disabled."
msgstr ""

#: ../../../admin-guide/bcache.rst:555
msgid "journal_delay_ms"
msgstr ""

#: ../../../admin-guide/bcache.rst:556
msgid ""
"Journal writes will delay for up to this many milliseconds, unless a cache "
"flush happens sooner. Defaults to 100."
msgstr ""

#: ../../../admin-guide/bcache.rst:559
msgid "root_usage_percent"
msgstr ""

#: ../../../admin-guide/bcache.rst:560
msgid ""
"Percentage of the root btree node in use.  If this gets too high the node "
"will split, increasing the tree depth."
msgstr ""

#: ../../../admin-guide/bcache.rst:564
msgid ""
"Write to this file to shut down the cache set - waits until all attached "
"backing devices have been shut down."
msgstr ""

#: ../../../admin-guide/bcache.rst:567
msgid "tree_depth"
msgstr ""

#: ../../../admin-guide/bcache.rst:568
msgid "Depth of the btree (A single node btree has depth 0)."
msgstr ""

#: ../../../admin-guide/bcache.rst:570
msgid "unregister"
msgstr ""

#: ../../../admin-guide/bcache.rst:571
msgid ""
"Detaches all backing devices and closes the cache devices; if dirty data is "
"present it will disable writeback caching and wait for it to be flushed."
msgstr ""

#: ../../../admin-guide/bcache.rst:575
msgid "Sysfs - cache set internal"
msgstr ""

#: ../../../admin-guide/bcache.rst:577
msgid ""
"This directory also exposes timings for a number of internal operations, "
"with separate files for average duration, average frequency, last occurrence "
"and max duration: garbage collection, btree read, btree node sorts and btree "
"splits."
msgstr ""

#: ../../../admin-guide/bcache.rst:581
msgid "active_journal_entries"
msgstr ""

#: ../../../admin-guide/bcache.rst:582
msgid "Number of journal entries that are newer than the index."
msgstr ""

#: ../../../admin-guide/bcache.rst:584
msgid "btree_nodes"
msgstr ""

#: ../../../admin-guide/bcache.rst:585
msgid "Total nodes in the btree."
msgstr ""

#: ../../../admin-guide/bcache.rst:587
msgid "btree_used_percent"
msgstr ""

#: ../../../admin-guide/bcache.rst:588
msgid "Average fraction of btree in use."
msgstr ""

#: ../../../admin-guide/bcache.rst:590
msgid "bset_tree_stats"
msgstr ""

#: ../../../admin-guide/bcache.rst:591
msgid "Statistics about the auxiliary search trees"
msgstr ""

#: ../../../admin-guide/bcache.rst:593
msgid "btree_cache_max_chain"
msgstr ""

#: ../../../admin-guide/bcache.rst:594
msgid "Longest chain in the btree node cache's hash table"
msgstr ""

#: ../../../admin-guide/bcache.rst:596
msgid "cache_read_races"
msgstr ""

#: ../../../admin-guide/bcache.rst:597
msgid ""
"Counts instances where while data was being read from the cache, the bucket "
"was reused and invalidated - i.e. where the pointer was stale after the read "
"completed. When this occurs the data is reread from the backing device."
msgstr ""

#: ../../../admin-guide/bcache.rst:601
msgid "trigger_gc"
msgstr ""

#: ../../../admin-guide/bcache.rst:602
msgid "Writing to this file forces garbage collection to run."
msgstr ""

#: ../../../admin-guide/bcache.rst:605
msgid "Sysfs - Cache device"
msgstr ""

#: ../../../admin-guide/bcache.rst:607
msgid "Available at /sys/block/<cdev>/bcache"
msgstr ""

#: ../../../admin-guide/bcache.rst:610
msgid "Minimum granularity of writes - should match hardware sector size."
msgstr ""

#: ../../../admin-guide/bcache.rst:612
msgid "btree_written"
msgstr ""

#: ../../../admin-guide/bcache.rst:613
msgid "Sum of all btree writes, in (kilo/mega/giga) bytes"
msgstr ""

#: ../../../admin-guide/bcache.rst:618
msgid "cache_replacement_policy"
msgstr ""

#: ../../../admin-guide/bcache.rst:619
msgid "One of either lru, fifo or random."
msgstr ""

#: ../../../admin-guide/bcache.rst:621
msgid "discard"
msgstr ""

#: ../../../admin-guide/bcache.rst:622
msgid ""
"Boolean; if on a discard/TRIM will be issued to each bucket before it is "
"reused. Defaults to off, since SATA TRIM is an unqueued command (and thus "
"slow)."
msgstr ""

#: ../../../admin-guide/bcache.rst:626
msgid "freelist_percent"
msgstr ""

#: ../../../admin-guide/bcache.rst:627
msgid ""
"Size of the freelist as a percentage of nbuckets. Can be written to to "
"increase the number of buckets kept on the freelist, which lets you "
"artificially reduce the size of the cache at runtime. Mostly for testing "
"purposes (i.e. testing how different size caches affect your hit rate), but "
"since buckets are discarded when they move on to the freelist will also make "
"the SSD's garbage collection easier by effectively giving it more reserved "
"space."
msgstr ""

#: ../../../admin-guide/bcache.rst:635
msgid "io_errors"
msgstr ""

#: ../../../admin-guide/bcache.rst:636
msgid "Number of errors that have occurred, decayed by io_error_halflife."
msgstr ""

#: ../../../admin-guide/bcache.rst:638
msgid "metadata_written"
msgstr ""

#: ../../../admin-guide/bcache.rst:639
msgid "Sum of all non data writes (btree writes and all other metadata)."
msgstr ""

#: ../../../admin-guide/bcache.rst:641
msgid "nbuckets"
msgstr ""

#: ../../../admin-guide/bcache.rst:642
msgid "Total buckets in this cache"
msgstr ""

#: ../../../admin-guide/bcache.rst:644
msgid "priority_stats"
msgstr ""

#: ../../../admin-guide/bcache.rst:645
msgid ""
"Statistics about how recently data in the cache has been accessed. This can "
"reveal your working set size.  Unused is the percentage of the cache that "
"doesn't contain any data.  Metadata is bcache's metadata overhead.  Average "
"is the average priority of cache buckets. Next is a list of quantiles with "
"the priority threshold of each."
msgstr ""

#: ../../../admin-guide/bcache.rst:651
msgid "written"
msgstr ""

#: ../../../admin-guide/bcache.rst:652
msgid ""
"Sum of all data that has been written to the cache; comparison with "
"btree_written gives the amount of write inflation in bcache."
msgstr ""
