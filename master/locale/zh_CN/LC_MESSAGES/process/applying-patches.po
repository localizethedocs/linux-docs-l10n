# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../process/applying-patches.rst:4
msgid "Applying Patches To The Linux Kernel"
msgstr ""

#: ../../../process/applying-patches.rst:6
msgid "Original by:"
msgstr ""

#: ../../../process/applying-patches.rst:7
msgid "Jesper Juhl, August 2005"
msgstr ""

#: ../../../process/applying-patches.rst:11
msgid ""
"This document is obsolete.  In most cases, rather than using ``patch`` "
"manually, you'll almost certainly want to look at using Git instead."
msgstr ""

#: ../../../process/applying-patches.rst:14
msgid ""
"A frequently asked question on the Linux Kernel Mailing List is how to apply "
"a patch to the kernel or, more specifically, what base kernel a patch for "
"one of the many trees/branches should be applied to. Hopefully this document "
"will explain this to you."
msgstr ""

#: ../../../process/applying-patches.rst:19
msgid ""
"In addition to explaining how to apply and revert patches, a brief "
"description of the different kernel trees (and examples of how to apply "
"their specific patches) is also provided."
msgstr ""

#: ../../../process/applying-patches.rst:25
msgid "What is a patch?"
msgstr ""

#: ../../../process/applying-patches.rst:27
msgid ""
"A patch is a small text document containing a delta of changes between two "
"different versions of a source tree. Patches are created with the ``diff`` "
"program."
msgstr ""

#: ../../../process/applying-patches.rst:31
msgid ""
"To correctly apply a patch you need to know what base it was generated from "
"and what new version the patch will change the source tree into. These "
"should both be present in the patch file metadata or be possible to deduce "
"from the filename."
msgstr ""

#: ../../../process/applying-patches.rst:38
msgid "How do I apply or revert a patch?"
msgstr ""

#: ../../../process/applying-patches.rst:40
msgid ""
"You apply a patch with the ``patch`` program. The patch program reads a diff "
"(or patch) file and makes the changes to the source tree described in it."
msgstr ""

#: ../../../process/applying-patches.rst:43
msgid ""
"Patches for the Linux kernel are generated relative to the parent directory "
"holding the kernel source dir."
msgstr ""

#: ../../../process/applying-patches.rst:46
msgid ""
"This means that paths to files inside the patch file contain the name of the "
"kernel source directories it was generated against (or some other directory "
"names like \"a/\" and \"b/\")."
msgstr ""

#: ../../../process/applying-patches.rst:50
msgid ""
"Since this is unlikely to match the name of the kernel source dir on your "
"local machine (but is often useful info to see what version an otherwise "
"unlabeled patch was generated against) you should change into your kernel "
"source directory and then strip the first element of the path from filenames "
"in the patch file when applying it (the ``-p1`` argument to ``patch`` does "
"this)."
msgstr ""

#: ../../../process/applying-patches.rst:57
msgid ""
"To revert a previously applied patch, use the -R argument to patch. So, if "
"you applied a patch like this::"
msgstr ""

#: ../../../process/applying-patches.rst:62
msgid "You can revert (undo) it like this::"
msgstr ""

#: ../../../process/applying-patches.rst:68
msgid "How do I feed a patch/diff file to ``patch``?"
msgstr ""

#: ../../../process/applying-patches.rst:70
msgid ""
"This (as usual with Linux and other UNIX like operating systems) can be done "
"in several different ways."
msgstr ""

#: ../../../process/applying-patches.rst:73
msgid ""
"In all the examples below I feed the file (in uncompressed form) to patch "
"via stdin using the following syntax::"
msgstr ""

#: ../../../process/applying-patches.rst:78
msgid ""
"If you just want to be able to follow the examples below and don't want to "
"know of more than one way to use patch, then you can stop reading this "
"section here."
msgstr ""

#: ../../../process/applying-patches.rst:82
msgid ""
"Patch can also get the name of the file to use via the -i argument, like "
"this::"
msgstr ""

#: ../../../process/applying-patches.rst:87
msgid ""
"If your patch file is compressed with gzip or xz and you don't want to "
"uncompress it before applying it, then you can feed it to patch like this "
"instead::"
msgstr ""

#: ../../../process/applying-patches.rst:94
msgid ""
"If you wish to uncompress the patch file by hand first before applying it "
"(what I assume you've done in the examples below), then you simply run "
"gunzip or xz on the file -- like this::"
msgstr ""

#: ../../../process/applying-patches.rst:101
msgid ""
"Which will leave you with a plain text patch-x.y.z file that you can feed to "
"patch via stdin or the ``-i`` argument, as you prefer."
msgstr ""

#: ../../../process/applying-patches.rst:104
msgid ""
"A few other nice arguments for patch are ``-s`` which causes patch to be "
"silent except for errors which is nice to prevent errors from scrolling out "
"of the screen too fast, and ``--dry-run`` which causes patch to just print a "
"listing of what would happen, but doesn't actually make any changes. Finally "
"``--verbose`` tells patch to print more information about the work being "
"done."
msgstr ""

#: ../../../process/applying-patches.rst:112
msgid "Common errors when patching"
msgstr ""

#: ../../../process/applying-patches.rst:114
msgid ""
"When patch applies a patch file it attempts to verify the sanity of the file "
"in different ways."
msgstr ""

#: ../../../process/applying-patches.rst:117
msgid ""
"Checking that the file looks like a valid patch file and checking the code "
"around the bits being modified matches the context provided in the patch are "
"just two of the basic sanity checks patch does."
msgstr ""

#: ../../../process/applying-patches.rst:121
msgid ""
"If patch encounters something that doesn't look quite right it has two "
"options. It can either refuse to apply the changes and abort or it can try "
"to find a way to make the patch apply with a few minor changes."
msgstr ""

#: ../../../process/applying-patches.rst:125
msgid ""
"One example of something that's not 'quite right' that patch will attempt to "
"fix up is if all the context matches, the lines being changed match, but the "
"line numbers are different. This can happen, for example, if the patch makes "
"a change in the middle of the file but for some reasons a few lines have "
"been added or removed near the beginning of the file. In that case "
"everything looks good it has just moved up or down a bit, and patch will "
"usually adjust the line numbers and apply the patch."
msgstr ""

#: ../../../process/applying-patches.rst:133
msgid ""
"Whenever patch applies a patch that it had to modify a bit to make it fit "
"it'll tell you about it by saying the patch applied with **fuzz**. You "
"should be wary of such changes since even though patch probably got it right "
"it doesn't /always/ get it right, and the result will sometimes be wrong."
msgstr ""

#: ../../../process/applying-patches.rst:139
msgid ""
"When patch encounters a change that it can't fix up with fuzz it rejects it "
"outright and leaves a file with a ``.rej`` extension (a reject file). You "
"can read this file to see exactly what change couldn't be applied, so you "
"can go fix it up by hand if you wish."
msgstr ""

#: ../../../process/applying-patches.rst:144
msgid ""
"If you don't have any third-party patches applied to your kernel source, but "
"only patches from kernel.org and you apply the patches in the correct order, "
"and have made no modifications yourself to the source files, then you should "
"never see a fuzz or reject message from patch. If you do see such messages "
"anyway, then there's a high risk that either your local source tree or the "
"patch file is corrupted in some way. In that case you should probably try re-"
"downloading the patch and if things are still not OK then you'd be advised "
"to start with a fresh tree downloaded in full from kernel.org."
msgstr ""

#: ../../../process/applying-patches.rst:153
msgid "Let's look a bit more at some of the messages patch can produce."
msgstr ""

#: ../../../process/applying-patches.rst:155
msgid ""
"If patch stops and presents a ``File to patch:`` prompt, then patch could "
"not find a file to be patched. Most likely you forgot to specify -p1 or you "
"are in the wrong directory. Less often, you'll find patches that need to be "
"applied with ``-p0`` instead of ``-p1`` (reading the patch file should "
"reveal if this is the case -- if so, then this is an error by the person who "
"created the patch but is not fatal)."
msgstr ""

#: ../../../process/applying-patches.rst:162
msgid ""
"If you get ``Hunk #2 succeeded at 1887 with fuzz 2 (offset 7 lines).`` or a "
"message similar to that, then it means that patch had to adjust the location "
"of the change (in this example it needed to move 7 lines from where it "
"expected to make the change to make it fit)."
msgstr ""

#: ../../../process/applying-patches.rst:167
msgid ""
"The resulting file may or may not be OK, depending on the reason the file "
"was different than expected."
msgstr ""

#: ../../../process/applying-patches.rst:170
msgid ""
"This often happens if you try to apply a patch that was generated against a "
"different kernel version than the one you are trying to patch."
msgstr ""

#: ../../../process/applying-patches.rst:173
msgid ""
"If you get a message like ``Hunk #3 FAILED at 2387.``, then it means that "
"the patch could not be applied correctly and the patch program was unable to "
"fuzz its way through. This will generate a ``.rej`` file with the change "
"that caused the patch to fail and also a ``.orig`` file showing you the "
"original content that couldn't be changed."
msgstr ""

#: ../../../process/applying-patches.rst:179
msgid ""
"If you get ``Reversed (or previously applied) patch detected!  Assume -R? "
"[n]`` then patch detected that the change contained in the patch seems to "
"have already been made."
msgstr ""

#: ../../../process/applying-patches.rst:183
msgid ""
"If you actually did apply this patch previously and you just re-applied it "
"in error, then just say [n]o and abort this patch. If you applied this patch "
"previously and actually intended to revert it, but forgot to specify -R, "
"then you can say [**y**]es here to make patch revert it for you."
msgstr ""

#: ../../../process/applying-patches.rst:188
msgid ""
"This can also happen if the creator of the patch reversed the source and "
"destination directories when creating the patch, and in that case reverting "
"the patch will in fact apply it."
msgstr ""

#: ../../../process/applying-patches.rst:192
msgid ""
"A message similar to ``patch: **** unexpected end of file in patch`` or "
"``patch unexpectedly ends in middle of line`` means that patch could make no "
"sense of the file you fed to it. Either your download is broken, you tried "
"to feed patch a compressed patch file without uncompressing it first, or the "
"patch file that you are using has been mangled by a mail client or mail "
"transfer agent along the way somewhere, e.g., by splitting a long line into "
"two lines. Often these warnings can easily be fixed by joining "
"(concatenating) the two lines that had been split."
msgstr ""

#: ../../../process/applying-patches.rst:201
msgid ""
"As I already mentioned above, these errors should never happen if you apply "
"a patch from kernel.org to the correct version of an unmodified source tree. "
"So if you get these errors with kernel.org patches then you should probably "
"assume that either your patch file or your tree is broken and I'd advise you "
"to start over with a fresh download of a full kernel tree and the patch you "
"wish to apply."
msgstr ""

#: ../../../process/applying-patches.rst:210
msgid "Are there any alternatives to ``patch``?"
msgstr ""

#: ../../../process/applying-patches.rst:213
msgid "Yes there are alternatives."
msgstr ""

#: ../../../process/applying-patches.rst:215
msgid ""
"You can use the ``interdiff`` program (http://cyberelk.net/tim/patchutils/) "
"to generate a patch representing the differences between two patches and "
"then apply the result."
msgstr ""

#: ../../../process/applying-patches.rst:219
msgid ""
"This will let you move from something like 5.7.2 to 5.7.3 in a single step. "
"The -z flag to interdiff will even let you feed it patches in gzip or bzip2 "
"compressed form directly without the use of zcat or bzcat or manual "
"decompression."
msgstr ""

#: ../../../process/applying-patches.rst:224
msgid "Here's how you'd go from 5.7.2 to 5.7.3 in a single step::"
msgstr ""

#: ../../../process/applying-patches.rst:228
msgid ""
"Although interdiff may save you a step or two you are generally advised to "
"do the additional steps since interdiff can get things wrong in some cases."
msgstr ""

#: ../../../process/applying-patches.rst:231
msgid ""
"Another alternative is ``ketchup``, which is a python script for automatic "
"downloading and applying of patches (https://www.selenic.com/ketchup/)."
msgstr ""

#: ../../../process/applying-patches.rst:234
msgid ""
"Other nice tools are diffstat, which shows a summary of changes made by a "
"patch; lsdiff, which displays a short listing of affected files in a patch "
"file, along with (optionally) the line numbers of the start of each patch; "
"and grepdiff, which displays a list of the files modified by a patch where "
"the patch contains a given regular expression."
msgstr ""

#: ../../../process/applying-patches.rst:242
msgid "Where can I download the patches?"
msgstr ""

#: ../../../process/applying-patches.rst:244
msgid ""
"The patches are available at https://kernel.org/ Most recent patches are "
"linked from the front page, but they also have specific homes."
msgstr ""

#: ../../../process/applying-patches.rst:248
msgid "The 5.x.y (-stable) and 5.x patches live at"
msgstr ""

#: ../../../process/applying-patches.rst:250
msgid "https://www.kernel.org/pub/linux/kernel/v5.x/"
msgstr ""

#: ../../../process/applying-patches.rst:252
msgid "The 5.x.y incremental patches live at"
msgstr ""

#: ../../../process/applying-patches.rst:254
msgid "https://www.kernel.org/pub/linux/kernel/v5.x/incr/"
msgstr ""

#: ../../../process/applying-patches.rst:256
msgid ""
"The -rc patches are not stored on the webserver but are generated on demand "
"from git tags such as"
msgstr ""

#: ../../../process/applying-patches.rst:259
msgid "https://git.kernel.org/torvalds/p/v5.1-rc1/v5.0"
msgstr ""

#: ../../../process/applying-patches.rst:261
msgid "The stable -rc patches live at"
msgstr ""

#: ../../../process/applying-patches.rst:263
msgid "https://www.kernel.org/pub/linux/kernel/v5.x/stable-review/"
msgstr ""

#: ../../../process/applying-patches.rst:267
msgid "The 5.x kernels"
msgstr ""

#: ../../../process/applying-patches.rst:269
msgid ""
"These are the base stable releases released by Linus. The highest numbered "
"release is the most recent."
msgstr ""

#: ../../../process/applying-patches.rst:272
msgid ""
"If regressions or other serious flaws are found, then a -stable fix patch "
"will be released (see below) on top of this base. Once a new 5.x base kernel "
"is released, a patch is made available that is a delta between the previous "
"5.x kernel and the new one."
msgstr ""

#: ../../../process/applying-patches.rst:277
msgid ""
"To apply a patch moving from 5.6 to 5.7, you'd do the following (note that "
"such patches do **NOT** apply on top of 5.x.y kernels but on top of the base "
"5.x kernel -- if you need to move from 5.x.y to 5.x+1 you need to first "
"revert the 5.x.y patch)."
msgstr ""

#: ../../../process/applying-patches.rst:282
msgid "Here are some examples::"
msgstr ""

#: ../../../process/applying-patches.rst:302
msgid "The 5.x.y kernels"
msgstr ""

#: ../../../process/applying-patches.rst:304
msgid ""
"Kernels with 3-digit versions are -stable kernels. They contain small(ish) "
"critical fixes for security problems or significant regressions discovered "
"in a given 5.x kernel."
msgstr ""

#: ../../../process/applying-patches.rst:308
msgid ""
"This is the recommended branch for users who want the most recent stable "
"kernel and are not interested in helping test development/experimental "
"versions."
msgstr ""

#: ../../../process/applying-patches.rst:312
msgid ""
"If no 5.x.y kernel is available, then the highest numbered 5.x kernel is the "
"current stable kernel."
msgstr ""

#: ../../../process/applying-patches.rst:315
msgid ""
"The -stable team provides normal as well as incremental patches. Below is "
"how to apply these patches."
msgstr ""

#: ../../../process/applying-patches.rst:319
msgid "Normal patches"
msgstr ""

#: ../../../process/applying-patches.rst:321
msgid ""
"These patches are not incremental, meaning that for example the 5.7.3 patch "
"does not apply on top of the 5.7.2 kernel source, but rather on top of the "
"base 5.7 kernel source."
msgstr ""

#: ../../../process/applying-patches.rst:325
msgid ""
"So, in order to apply the 5.7.3 patch to your existing 5.7.2 kernel source "
"you have to first back out the 5.7.2 patch (so you are left with a base 5.7 "
"kernel source) and then apply the new 5.7.3 patch."
msgstr ""

#: ../../../process/applying-patches.rst:329
msgid "Here's a small example::"
msgstr ""

#: ../../../process/applying-patches.rst:338
msgid "Incremental patches"
msgstr ""

#: ../../../process/applying-patches.rst:340
msgid ""
"Incremental patches are different: instead of being applied on top of base 5."
"x kernel, they are applied on top of previous stable kernel (5.x.y-1)."
msgstr ""

#: ../../../process/applying-patches.rst:344
msgid "Here's the example to apply these::"
msgstr ""

#: ../../../process/applying-patches.rst:353
msgid "The -rc kernels"
msgstr ""

#: ../../../process/applying-patches.rst:355
msgid ""
"These are release-candidate kernels. These are development kernels released "
"by Linus whenever he deems the current git (the kernel's source management "
"tool) tree to be in a reasonably sane state adequate for testing."
msgstr ""

#: ../../../process/applying-patches.rst:359
msgid ""
"These kernels are not stable and you should expect occasional breakage if "
"you intend to run them. This is however the most stable of the main "
"development branches and is also what will eventually turn into the next "
"stable kernel, so it is important that it be tested by as many people as "
"possible."
msgstr ""

#: ../../../process/applying-patches.rst:365
msgid ""
"This is a good branch to run for people who want to help out testing "
"development kernels but do not want to run some of the really experimental "
"stuff (such people should see the sections about -next and -mm kernels "
"below)."
msgstr ""

#: ../../../process/applying-patches.rst:369
msgid ""
"The -rc patches are not incremental, they apply to a base 5.x kernel, just "
"like the 5.x.y patches described above. The kernel version before the -rcN "
"suffix denotes the version of the kernel that this -rc kernel will "
"eventually turn into."
msgstr ""

#: ../../../process/applying-patches.rst:374
msgid ""
"So, 5.8-rc5 means that this is the fifth release candidate for the 5.8 "
"kernel and the patch should be applied on top of the 5.7 kernel source."
msgstr ""

#: ../../../process/applying-patches.rst:377
msgid "Here are 3 examples of how to apply these patches::"
msgstr ""

#: ../../../process/applying-patches.rst:404
msgid "The -mm patches and the linux-next tree"
msgstr ""

#: ../../../process/applying-patches.rst:406
msgid "The -mm patches are experimental patches released by Andrew Morton."
msgstr ""

#: ../../../process/applying-patches.rst:408
msgid ""
"In the past, -mm tree were used to also test subsystem patches, but this "
"function is now done via the `linux-next` (https://www.kernel.org/doc/man-"
"pages/linux-next.html) tree. The Subsystem maintainers push their patches "
"first to linux-next, and, during the merge window, sends them directly to "
"Linus."
msgstr ""

#: ../../../process/applying-patches.rst:414
msgid ""
"The -mm patches serve as a sort of proving ground for new features and other "
"experimental patches that aren't merged via a subsystem tree. Once such "
"patches has proved its worth in -mm for a while Andrew pushes it on to Linus "
"for inclusion in mainline."
msgstr ""

#: ../../../process/applying-patches.rst:419
msgid ""
"The linux-next tree is daily updated, and includes the -mm patches. Both are "
"in constant flux and contains many experimental features, a lot of debugging "
"patches not appropriate for mainline etc., and is the most experimental of "
"the branches described in this document."
msgstr ""

#: ../../../process/applying-patches.rst:424
msgid ""
"These patches are not appropriate for use on systems that are supposed to be "
"stable and they are more risky to run than any of the other branches (make "
"sure you have up-to-date backups -- that goes for any experimental kernel "
"but even more so for -mm patches or using a Kernel from the linux-next tree)."
msgstr ""

#: ../../../process/applying-patches.rst:429
msgid ""
"Testing of -mm patches and linux-next is greatly appreciated since the whole "
"point of those are to weed out regressions, crashes, data corruption bugs, "
"build breakage (and any other bug in general) before changes are merged into "
"the more stable mainline Linus tree."
msgstr ""

#: ../../../process/applying-patches.rst:434
msgid ""
"But testers of -mm and linux-next should be aware that breakages are more "
"common than in any other tree."
msgstr ""

#: ../../../process/applying-patches.rst:438
msgid ""
"This concludes this list of explanations of the various kernel trees. I hope "
"you are now clear on how to apply the various patches and help testing the "
"kernel."
msgstr ""

#: ../../../process/applying-patches.rst:442
msgid ""
"Thank you's to Randy Dunlap, Rolf Eike Beer, Linus Torvalds, Bodo Eggert, "
"Johannes Stezenbach, Grant Coady, Pavel Machek and others that I may have "
"forgotten for their reviews and contributions to this document."
msgstr ""
