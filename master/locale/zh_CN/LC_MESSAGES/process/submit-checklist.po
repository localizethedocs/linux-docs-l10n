# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../process/submit-checklist.rst:5
msgid "Linux Kernel patch submission checklist"
msgstr ""

#: ../../../process/submit-checklist.rst:7
msgid ""
"Here are some basic things that developers should do if they want to see "
"their kernel patch submissions accepted more quickly."
msgstr ""

#: ../../../process/submit-checklist.rst:10
msgid ""
"These are all above and beyond the documentation that is provided in :ref:"
"`Documentation/process/submitting-patches.rst <submittingpatches>` and "
"elsewhere regarding submitting Linux kernel patches."
msgstr ""

#: ../../../process/submit-checklist.rst:15
msgid "Review your code"
msgstr ""

#: ../../../process/submit-checklist.rst:17
msgid ""
"If you use a facility then #include the file that defines/declares that "
"facility.  Don't depend on other header files pulling in ones that you use."
msgstr ""

#: ../../../process/submit-checklist.rst:21
msgid ""
"Check your patch for general style as detailed in :ref:`Documentation/"
"process/coding-style.rst <codingstyle>`."
msgstr ""

#: ../../../process/submit-checklist.rst:24
msgid ""
"All memory barriers {e.g., ``barrier()``, ``rmb()``, ``wmb()``} need a "
"comment in the source code that explains the logic of what they are doing "
"and why."
msgstr ""

#: ../../../process/submit-checklist.rst:29
msgid "Review Kconfig changes"
msgstr ""

#: ../../../process/submit-checklist.rst:31
msgid ""
"Any new or modified ``CONFIG`` options do not muck up the config menu and "
"default to off unless they meet the exception criteria documented in "
"``Documentation/kbuild/kconfig-language.rst`` Menu attributes: default value."
msgstr ""

#: ../../../process/submit-checklist.rst:35
msgid "All new ``Kconfig`` options have help text."
msgstr ""

#: ../../../process/submit-checklist.rst:37
msgid ""
"Has been carefully reviewed with respect to relevant ``Kconfig`` "
"combinations.  This is very hard to get right with testing---brainpower pays "
"off here."
msgstr ""

#: ../../../process/submit-checklist.rst:42
msgid "Provide documentation"
msgstr ""

#: ../../../process/submit-checklist.rst:44
msgid ""
"Include :ref:`kernel-doc <kernel_doc>` to document global kernel APIs. (Not "
"required for static functions, but OK there also.)"
msgstr ""

#: ../../../process/submit-checklist.rst:47
msgid "All new ``/proc`` entries are documented under ``Documentation/``"
msgstr ""

#: ../../../process/submit-checklist.rst:49
msgid ""
"All new kernel boot parameters are documented in ``Documentation/admin-guide/"
"kernel-parameters.rst``."
msgstr ""

#: ../../../process/submit-checklist.rst:52
msgid "All new module parameters are documented with ``MODULE_PARM_DESC()``"
msgstr ""

#: ../../../process/submit-checklist.rst:54
msgid ""
"All new userspace interfaces are documented in ``Documentation/ABI/``. See "
"Documentation/admin-guide/abi.rst (or ``Documentation/ABI/README``) for more "
"information. Patches that change userspace interfaces should be CCed to "
"linux-api@vger.kernel.org."
msgstr ""

#: ../../../process/submit-checklist.rst:60
msgid ""
"If any ioctl's are added by the patch, then also update ``Documentation/"
"userspace-api/ioctl/ioctl-number.rst``."
msgstr ""

#: ../../../process/submit-checklist.rst:64
msgid "Check your code with tools"
msgstr ""

#: ../../../process/submit-checklist.rst:66
msgid ""
"Check for trivial violations with the patch style checker prior to "
"submission (``scripts/checkpatch.pl``). You should be able to justify all "
"violations that remain in your patch."
msgstr ""

#: ../../../process/submit-checklist.rst:71
msgid "Check cleanly with sparse."
msgstr ""

#: ../../../process/submit-checklist.rst:73
msgid ""
"Use ``make checkstack`` and fix any problems that it finds. Note that "
"``checkstack`` does not point out problems explicitly, but any one function "
"that uses more than 512 bytes on the stack is a candidate for change."
msgstr ""

#: ../../../process/submit-checklist.rst:79
msgid "Build your code"
msgstr ""

#: ../../../process/submit-checklist.rst:81
msgid "Builds cleanly:"
msgstr ""

#: ../../../process/submit-checklist.rst:83
msgid ""
"with applicable or modified ``CONFIG`` options ``=y``, ``=m``, and ``=n``.  "
"No ``gcc`` warnings/errors, no linker warnings/errors."
msgstr ""

#: ../../../process/submit-checklist.rst:86
msgid "Passes ``allnoconfig``, ``allmodconfig``"
msgstr ""

#: ../../../process/submit-checklist.rst:88
msgid "Builds successfully when using ``O=builddir``"
msgstr ""

#: ../../../process/submit-checklist.rst:90
msgid ""
"Any Documentation/ changes build successfully without new warnings/errors. "
"Use ``make htmldocs`` or ``make pdfdocs`` to check the build and fix any "
"issues."
msgstr ""

#: ../../../process/submit-checklist.rst:94
msgid ""
"Builds on multiple CPU architectures by using local cross-compile tools or "
"some other build farm. Note that testing against architectures of different "
"word sizes (32- and 64-bit) and different endianness (big- and little-) is "
"effective in catching various portability issues due to false assumptions on "
"representable quantity range, data alignment, or endianness, among others."
msgstr ""

#: ../../../process/submit-checklist.rst:102
msgid ""
"Newly-added code has been compiled with ``gcc -W`` (use ``make KCFLAGS=-"
"W``).  This will generate lots of noise, but is good for finding bugs like "
"\"warning: comparison between signed and unsigned\"."
msgstr ""

#: ../../../process/submit-checklist.rst:106
msgid ""
"If your modified source code depends on or uses any of the kernel APIs or "
"features that are related to the following ``Kconfig`` symbols, then test "
"multiple builds with the related ``Kconfig`` symbols disabled and/or ``=m`` "
"(if that option is available) [not all of these at the same time, just "
"various/random combinations of them]:"
msgstr ""

#: ../../../process/submit-checklist.rst:112
msgid ""
"``CONFIG_SMP``, ``CONFIG_SYSFS``, ``CONFIG_PROC_FS``, ``CONFIG_INPUT``, "
"``CONFIG_PCI``, ``CONFIG_BLOCK``, ``CONFIG_PM``, ``CONFIG_MAGIC_SYSRQ``, "
"``CONFIG_NET``, ``CONFIG_INET=n`` (but latter with ``CONFIG_NET=y``)."
msgstr ""

#: ../../../process/submit-checklist.rst:117
msgid "Test your code"
msgstr ""

#: ../../../process/submit-checklist.rst:119
msgid ""
"Has been tested with ``CONFIG_PREEMPT``, ``CONFIG_DEBUG_PREEMPT``, "
"``CONFIG_SLUB_DEBUG``, ``CONFIG_DEBUG_PAGEALLOC``, ``CONFIG_DEBUG_MUTEXES``, "
"``CONFIG_DEBUG_SPINLOCK``, ``CONFIG_DEBUG_ATOMIC_SLEEP``, "
"``CONFIG_PROVE_RCU`` and ``CONFIG_DEBUG_OBJECTS_RCU_HEAD`` all "
"simultaneously enabled."
msgstr ""

#: ../../../process/submit-checklist.rst:125
msgid ""
"Has been build- and runtime tested with and without ``CONFIG_SMP`` and "
"``CONFIG_PREEMPT.``"
msgstr ""

#: ../../../process/submit-checklist.rst:128
msgid "All codepaths have been exercised with all lockdep features enabled."
msgstr ""

#: ../../../process/submit-checklist.rst:130
msgid ""
"Has been checked with injection of at least slab and page-allocation "
"failures.  See ``Documentation/fault-injection/``. If the new code is "
"substantial, addition of subsystem-specific fault injection might be "
"appropriate."
msgstr ""

#: ../../../process/submit-checklist.rst:135
msgid ""
"Tested with the most recent tag of linux-next to make sure that it still "
"works with all of the other queued patches and various changes in the VM, "
"VFS, and other subsystems."
msgstr ""
