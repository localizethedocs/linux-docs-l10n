# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../crypto/api-aead.rst:2
msgid ""
"Authenticated Encryption With Associated Data (AEAD) Algorithm Definitions"
msgstr ""

#: ../../../crypto/api-aead:4: include/crypto/aead.h:18
msgid ""
"The AEAD cipher API is used with the ciphers of type CRYPTO_ALG_TYPE_AEAD "
"(listed as type \"aead\" in /proc/crypto)"
msgstr ""

#: ../../../crypto/api-aead:4: include/crypto/aead.h:21
msgid ""
"The most prominent examples for this type of encryption is GCM and CCM. "
"However, the kernel supports other types of AEAD ciphers which are defined "
"with the following cipher string:"
msgstr ""

#: ../../../crypto/api-aead:4: include/crypto/aead.h:25
msgid "authenc(keyed message digest, block cipher)"
msgstr ""

#: ../../../crypto/api-aead:4: include/crypto/aead.h:27
msgid "For example: authenc(hmac(sha256), cbc(aes))"
msgstr ""

#: ../../../crypto/api-aead:4: include/crypto/aead.h:29
msgid ""
"The example code provided for the symmetric key cipher operation applies "
"here as well. Naturally all *skcipher* symbols must be exchanged the *aead* "
"pendants discussed in the following. In addition, for the AEAD operation, "
"the aead_request_set_ad function must be used to set the pointer to the "
"associated data memory location before performing the encryption or "
"decryption operation. Another deviation from the asynchronous block cipher "
"operation is that the caller should explicitly check for -EBADMSG of the "
"crypto_aead_decrypt. That error indicates an authentication error, i.e. a "
"breach in the integrity of the message. In essence, that -EBADMSG error code "
"is the key bonus an AEAD cipher has over \"standard\" block chaining modes."
msgstr ""

#: ../../../crypto/api-aead:4: include/crypto/aead.h:41
msgid "Memory Structure:"
msgstr ""

#: ../../../crypto/api-aead:4: include/crypto/aead.h:43
msgid ""
"The source scatterlist must contain the concatenation of associated data || "
"plaintext or ciphertext."
msgstr ""

#: ../../../crypto/api-aead:4: include/crypto/aead.h:46
msgid ""
"The destination scatterlist has the same layout, except that the plaintext "
"(resp. ciphertext) will grow (resp. shrink) by the authentication tag size "
"during encryption (resp. decryption). The authentication tag is generated "
"during the encryption operation and appended to the ciphertext. During "
"decryption, the authentication tag is consumed along with the ciphertext and "
"used to verify the integrity of the plaintext and the associated data."
msgstr ""

#: ../../../crypto/api-aead:4: include/crypto/aead.h:53
msgid ""
"In-place encryption/decryption is enabled by using the same scatterlist "
"pointer for both the source and destination."
msgstr ""

#: ../../../crypto/api-aead:4: include/crypto/aead.h:56
msgid ""
"Even in the out-of-place case, space must be reserved in the destination for "
"the associated data, even though it won't be written to.  This makes the in-"
"place and out-of-place cases more consistent.  It is permissible for the "
"\"destination\" associated data to alias the \"source\" associated data."
msgstr ""

#: ../../../crypto/api-aead:4: include/crypto/aead.h:61
msgid ""
"As with the other scatterlist crypto APIs, zero-length scatterlist elements "
"are not allowed in the used part of the scatterlist.  Thus, if there is no "
"associated data, the first element must point to the plaintext/ciphertext."
msgstr ""

#: ../../../crypto/api-aead:4: include/crypto/aead.h:65
msgid ""
"To meet the needs of IPsec, a special quirk applies to rfc4106, rfc4309, "
"rfc4543, and rfc7539esp ciphers.  For these ciphers, the final 'ivsize' "
"bytes of the associated data buffer must contain a second copy of the IV.  "
"This is in addition to the copy passed to aead_request_set_crypt().  These "
"two IV copies must not differ; different implementations of the same "
"algorithm may behave differently in that case.  Note that the algorithm "
"might not actually treat the IV as associated data; nevertheless the length "
"passed to aead_request_set_ad() must include it."
msgstr ""

#: ../../../crypto/api-aead:7: include/crypto/aead.h:81
msgid "AEAD request"
msgstr ""

#: ../../../crypto/api-aead:7: include/crypto/aead.h:85
#: include/crypto/aead.h:109
msgid "**Definition**::"
msgstr ""

#: ../../../crypto/api-aead:7: include/crypto/aead.h:97
#: include/crypto/aead.h:124
msgid "**Members**"
msgstr ""

#: ../../../crypto/api-aead:7: include/crypto/aead.h:82
#: include/crypto/aead.h:135
msgid "``base``"
msgstr ""

#: ../../../crypto/api-aead:7: include/crypto/aead.h:83
msgid "Common attributes for async crypto requests"
msgstr ""

#: ../../../crypto/api-aead:7: include/crypto/aead.h:83
msgid "``assoclen``"
msgstr ""

#: ../../../crypto/api-aead:7: include/crypto/aead.h:84
msgid "Length in bytes of associated data for authentication"
msgstr ""

#: ../../../crypto/api-aead:7: include/crypto/aead.h:84
msgid "``cryptlen``"
msgstr ""

#: ../../../crypto/api-aead:7: include/crypto/aead.h:85
msgid "Length of data to be encrypted or decrypted"
msgstr ""

#: ../../../crypto/api-aead:7: include/crypto/aead.h:85
msgid "``iv``"
msgstr ""

#: ../../../crypto/api-aead:7: include/crypto/aead.h:86
msgid "Initialisation vector"
msgstr ""

#: ../../../crypto/api-aead:7: include/crypto/aead.h:86
msgid "``src``"
msgstr ""

#: ../../../crypto/api-aead:7: include/crypto/aead.h:87
msgid "Source data"
msgstr ""

#: ../../../crypto/api-aead:7: include/crypto/aead.h:87
msgid "``dst``"
msgstr ""

#: ../../../crypto/api-aead:7: include/crypto/aead.h:88
msgid "Destination data"
msgstr ""

#: ../../../crypto/api-aead:7: include/crypto/aead.h:88
msgid "``__ctx``"
msgstr ""

#: ../../../crypto/api-aead:7: include/crypto/aead.h:89
msgid "Start of private context data"
msgstr ""

#: ../../../crypto/api-aead:7: include/crypto/aead.h:105
msgid "AEAD cipher definition"
msgstr ""

#: ../../../crypto/api-aead:7: include/crypto/aead.h:119
msgid "``setkey``"
msgstr ""

#: ../../../crypto/api-aead:7: include/crypto/aead.h:120
#: include/crypto/aead.h:121 include/crypto/aead.h:122
#: include/crypto/aead.h:123 include/crypto/aead.h:124
msgid "see struct skcipher_alg"
msgstr ""

#: ../../../crypto/api-aead:7: include/crypto/aead.h:112
msgid "``setauthsize``"
msgstr ""

#: ../../../crypto/api-aead:7: include/crypto/aead.h:113
msgid ""
"Set authentication size for the AEAD transformation. This function is used "
"to specify the consumer requested size of the authentication tag to be "
"either generated by the transformation during encryption or the size of the "
"authentication tag to be supplied during the decryption operation. This "
"function is also responsible for checking the authentication tag size for "
"validity."
msgstr ""

#: ../../../crypto/api-aead:7: include/crypto/aead.h:120
msgid "``encrypt``"
msgstr ""

#: ../../../crypto/api-aead:7: include/crypto/aead.h:121
msgid "``decrypt``"
msgstr ""

#: ../../../crypto/api-aead:7: include/crypto/aead.h:124
msgid "``init``"
msgstr ""

#: ../../../crypto/api-aead:7: include/crypto/aead.h:125
msgid ""
"Initialize the cryptographic transformation object. This function is used to "
"initialize the cryptographic transformation object. This function is called "
"only once at the instantiation time, right after the transformation context "
"was allocated. In case the cryptographic hardware has some special "
"requirements which need to be handled by software, this function shall check "
"for the precise requirement of the transformation and put any software "
"fallbacks in place."
msgstr ""

#: ../../../crypto/api-aead:7: include/crypto/aead.h:132
msgid "``exit``"
msgstr ""

#: ../../../crypto/api-aead:7: include/crypto/aead.h:133
msgid ""
"Deinitialize the cryptographic transformation object. This is a counterpart "
"to **init**, used to remove various changes set in **init**."
msgstr ""

#: ../../../crypto/api-aead:7: include/crypto/aead.h:122
msgid "``ivsize``"
msgstr ""

#: ../../../crypto/api-aead:7: include/crypto/aead.h:106
msgid "``maxauthsize``"
msgstr ""

#: ../../../crypto/api-aead:7: include/crypto/aead.h:107
msgid ""
"Set the maximum authentication tag size supported by the transformation. A "
"transformation may support smaller tag sizes. As the authentication tag is a "
"message digest to ensure the integrity of the encrypted data, a consumer "
"typically wants the largest authentication tag possible as defined by this "
"variable."
msgstr ""

#: ../../../crypto/api-aead:7: include/crypto/aead.h:123
msgid "``chunksize``"
msgstr ""

#: ../../../crypto/api-aead:7: include/crypto/aead.h:136
msgid "Definition of a generic crypto cipher algorithm."
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:174
#: include/crypto/aead.h:192 include/crypto/aead.h:231
#: include/crypto/aead.h:245 include/crypto/aead.h:272
#: include/crypto/aead.h:309 include/crypto/aead.h:327
#: include/crypto/aead.h:344 include/crypto/aead.h:365
#: ../../../crypto/api-aead:22: include/crypto/aead.h:411
#: include/crypto/aead.h:425 include/crypto/aead.h:470
#: include/crypto/aead.h:497 include/crypto/aead.h:534
#: ../../../crypto/api-aead:7: include/crypto/aead.h:139
msgid "**Description**"
msgstr ""

#: ../../../crypto/api-aead:7: include/crypto/aead.h:136
msgid "All fields except **ivsize** is mandatory and must be filled."
msgstr ""

#: ../../../crypto/api-aead.rst:11
msgid "Authenticated Encryption With Associated Data (AEAD) Cipher API"
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:168
msgid "allocate AEAD cipher handle"
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:172
#: include/crypto/aead.h:193 include/crypto/aead.h:232
#: include/crypto/aead.h:246 include/crypto/aead.h:273
#: include/crypto/aead.h:308 include/crypto/aead.h:327
#: include/crypto/aead.h:344 include/crypto/aead.h:365
#: ../../../crypto/api-aead:22: include/crypto/aead.h:400
#: include/crypto/aead.h:411 include/crypto/aead.h:425
#: include/crypto/aead.h:449 include/crypto/aead.h:458
#: include/crypto/aead.h:493 include/crypto/aead.h:534
msgid "**Parameters**"
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:174
msgid "``const char *alg_name``"
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:169
msgid ""
"is the cra_name / name or cra_driver_name / driver name of the AEAD cipher"
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:172
msgid "``u32 type``"
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:171
msgid "specifies the type of the cipher"
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:173
msgid "``u32 mask``"
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:172
msgid "specifies the mask for the cipher"
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:173
msgid ""
"Allocate a cipher handle for an AEAD. The returned struct crypto_aead is the "
"cipher handle that is required for any subsequent API invocation for that "
"AEAD."
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:177
#: include/crypto/aead.h:233 include/crypto/aead.h:250
#: include/crypto/aead.h:275 include/crypto/aead.h:316
#: include/crypto/aead.h:329 include/crypto/aead.h:355
#: include/crypto/aead.h:373 ../../../crypto/api-aead:22:
#: include/crypto/aead.h:399 include/crypto/aead.h:428
msgid "**Return**"
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:178
msgid ""
"allocated cipher handle in case of success; IS_ERR() is true in case of an "
"error, PTR_ERR() returns the error code."
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:189
msgid "zeroize and free aead handle"
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:195
#: include/crypto/aead.h:234 include/crypto/aead.h:248
#: include/crypto/aead.h:275 include/crypto/aead.h:310
#: include/crypto/aead.h:329 ../../../crypto/api-aead:22:
#: include/crypto/aead.h:402 include/crypto/aead.h:410
#: include/crypto/aead.h:427
msgid "``struct crypto_aead *tfm``"
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:190
msgid "cipher handle to be freed"
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:191
msgid "If **tfm** is a NULL or error pointer, this function does nothing."
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:228
msgid "obtain IV size"
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:229
#: include/crypto/aead.h:243 include/crypto/aead.h:270
#: include/crypto/aead.h:305 include/crypto/aead.h:324
#: ../../../crypto/api-aead:22: include/crypto/aead.h:397
msgid "cipher handle"
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:230
msgid ""
"The size of the IV for the aead referenced by the cipher handle is returned. "
"This IV size may be zero if the cipher does not need an IV."
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:234
msgid "IV size in bytes"
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:242
msgid "obtain maximum authentication data size"
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:244
msgid ""
"The maximum size of the authentication data for the AEAD cipher referenced "
"by the AEAD cipher handle is returned. The authentication data size may be "
"zero if the cipher implements a hard-coded maximum."
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:248
msgid "The authentication data may also be known as \"tag value\"."
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:251
msgid "authentication data size / tag size in bytes"
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:269
msgid "obtain block size of cipher"
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:271
msgid ""
"The block size for the AEAD referenced with the cipher handle is returned. "
"The caller may use that information to allocate appropriate memory for the "
"data returned by the encryption or decryption operation"
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:276
msgid "block size of cipher"
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:304
msgid "set key for cipher"
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:307
msgid "``const u8 *key``"
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:306
msgid "buffer holding the key"
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:308
msgid "``unsigned int keylen``"
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:307
msgid "length of the key in bytes"
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:308
msgid ""
"The caller provided key is set for the AEAD referenced by the cipher handle."
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:311
msgid ""
"Note, the key length determines the cipher type. Many block ciphers "
"implement different cipher modes depending on the key size, such as AES-128 "
"vs AES-192 vs. AES-256. When providing a 16 byte key for an AES cipher "
"handle, AES-128 is performed."
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:317
#: include/crypto/aead.h:330
msgid "0 if the setting of the key was successful; < 0 if an error occurred"
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:323
msgid "set authentication data size"
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:326
msgid "``unsigned int authsize``"
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:325
msgid "size of the authentication data / tag in bytes"
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:326
msgid ""
"Set the authentication data size / tag size. AEAD requires an authentication "
"tag (or MAC) in addition to the associated data."
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:340
msgid "encrypt plaintext"
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:346
#: include/crypto/aead.h:367 ../../../crypto/api-aead:22:
#: include/crypto/aead.h:413 include/crypto/aead.h:451
#: include/crypto/aead.h:460 include/crypto/aead.h:495
#: include/crypto/aead.h:536
msgid "``struct aead_request *req``"
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:341
#: include/crypto/aead.h:362
msgid ""
"reference to the aead_request handle that holds all information needed to "
"perform the cipher operation"
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:343
msgid ""
"Encrypt plaintext data using the aead_request handle. That data structure "
"and how it is filled with data is discussed with the aead_request_* "
"functions."
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:347
msgid ""
"IMPORTANT NOTE The encryption operation creates the authentication data /"
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:348
msgid ""
"tag. That data is concatenated with the created ciphertext. The ciphertext "
"memory size is therefore the given number of block cipher blocks + the size "
"defined by the crypto_aead_setauthsize invocation. The caller must ensure "
"that sufficient memory is available for the ciphertext and the "
"authentication tag."
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:356
msgid "0 if the cipher operation was successful; < 0 if an error occurred"
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:361
msgid "decrypt ciphertext"
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:364
msgid ""
"Decrypt ciphertext data using the aead_request handle. That data structure "
"and how it is filled with data is discussed with the aead_request_* "
"functions."
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:368
msgid ""
"IMPORTANT NOTE The caller must concatenate the ciphertext followed by the"
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:369
msgid ""
"authentication data / tag. That authentication data / tag must have the size "
"defined by the crypto_aead_setauthsize invocation."
msgstr ""

#: ../../../crypto/api-aead:13: include/crypto/aead.h:375
msgid ""
"0 if the cipher operation was successful; -EBADMSG: The AEAD cipher "
"operation performs the authentication of the data during the decryption "
"operation. Therefore, the function returns this error if the authentication "
"of the ciphertext was unsuccessful (i.e. the integrity of the ciphertext or "
"the associated data was violated); < 0 if an error occurred."
msgstr ""

#: ../../../crypto/api-aead.rst:17
msgid "Asynchronous AEAD Request Handle"
msgstr ""

#: ../../../crypto/api-aead:19: include/crypto/aead.h:385
msgid ""
"The aead_request data structure contains all pointers to data required for "
"the AEAD cipher operation. This includes the cipher handle (which can be "
"used by multiple aead_request instances), pointer to plaintext and "
"ciphertext, asynchronous callback function, etc. It acts as a handle to the "
"aead_request_* API calls in a similar way as AEAD handle to the "
"crypto_aead_* API calls."
msgstr ""

#: ../../../crypto/api-aead:22: include/crypto/aead.h:396
msgid "obtain size of the request data structure"
msgstr ""

#: ../../../crypto/api-aead:22: include/crypto/aead.h:399
msgid "number of bytes"
msgstr ""

#: ../../../crypto/api-aead:22: include/crypto/aead.h:407
msgid "update cipher handle reference in request"
msgstr ""

#: ../../../crypto/api-aead:22: include/crypto/aead.h:408
msgid "request handle to be modified"
msgstr ""

#: ../../../crypto/api-aead:22: include/crypto/aead.h:409
msgid "cipher handle that shall be added to the request handle"
msgstr ""

#: ../../../crypto/api-aead:22: include/crypto/aead.h:410
msgid ""
"Allow the caller to replace the existing aead handle in the request data "
"structure with a different one."
msgstr ""

#: ../../../crypto/api-aead:22: include/crypto/aead.h:421
msgid "allocate request data structure"
msgstr ""

#: ../../../crypto/api-aead:22: include/crypto/aead.h:422
msgid "cipher handle to be registered with the request"
msgstr ""

#: ../../../crypto/api-aead:22: include/crypto/aead.h:424
msgid "``gfp_t gfp``"
msgstr ""

#: ../../../crypto/api-aead:22: include/crypto/aead.h:423
msgid "memory allocation flag that is handed to kmalloc by the API call."
msgstr ""

#: ../../../crypto/api-aead:22: include/crypto/aead.h:424
msgid ""
"Allocate the request data structure that must be used with the AEAD encrypt "
"and decrypt API calls. During the allocation, the provided aead handle is "
"registered in the request data structure."
msgstr ""

#: ../../../crypto/api-aead:22: include/crypto/aead.h:429
msgid "allocated request handle in case of success, or NULL if out of memory"
msgstr ""

#: ../../../crypto/api-aead:22: include/crypto/aead.h:445
msgid "zeroize and free request data structure"
msgstr ""

#: ../../../crypto/api-aead:22: include/crypto/aead.h:446
msgid "request data structure cipher handle to be freed"
msgstr ""

#: ../../../crypto/api-aead:22: include/crypto/aead.h:454
msgid "set asynchronous callback function"
msgstr ""

#: ../../../crypto/api-aead:22: include/crypto/aead.h:455
#: include/crypto/aead.h:490 include/crypto/aead.h:531
msgid "request handle"
msgstr ""

#: ../../../crypto/api-aead:22: include/crypto/aead.h:457
msgid "``u32 flags``"
msgstr ""

#: ../../../crypto/api-aead:22: include/crypto/aead.h:456
msgid ""
"specify zero or an ORing of the flags CRYPTO_TFM_REQ_MAY_BACKLOG the request "
"queue may back log and increase the wait queue beyond the initial maximum "
"size; CRYPTO_TFM_REQ_MAY_SLEEP the request processing may sleep"
msgstr ""

#: ../../../crypto/api-aead:22: include/crypto/aead.h:461
msgid "``crypto_completion_t compl``"
msgstr ""

#: ../../../crypto/api-aead:22: include/crypto/aead.h:460
msgid "callback function pointer to be registered with the request handle"
msgstr ""

#: ../../../crypto/api-aead:22: include/crypto/aead.h:462
msgid "``void *data``"
msgstr ""

#: ../../../crypto/api-aead:22: include/crypto/aead.h:461
msgid ""
"The data pointer refers to memory that is not used by the kernel crypto API, "
"but provided to the callback function for it to use. Here, the caller can "
"provide a reference to memory the callback function can operate on. As the "
"callback function is invoked asynchronously to the related functionality, it "
"may need to access data structures of the related functionality which can be "
"referenced using this pointer. The callback function can access the memory "
"via the \"data\" field in the crypto_async_request data structure provided "
"to the callback function."
msgstr ""

#: ../../../crypto/api-aead:22: include/crypto/aead.h:469
msgid ""
"Setting the callback function that is triggered once the cipher operation "
"completes"
msgstr ""

#: ../../../crypto/api-aead:22: include/crypto/aead.h:472
msgid ""
"The callback function is registered with the aead_request handle and must "
"comply with the following template::"
msgstr ""

#: ../../../crypto/api-aead:22: include/crypto/aead.h:489
msgid "set data buffers"
msgstr ""

#: ../../../crypto/api-aead:22: include/crypto/aead.h:492
msgid "``struct scatterlist *src``"
msgstr ""

#: ../../../crypto/api-aead:22: include/crypto/aead.h:491
msgid "source scatter / gather list"
msgstr ""

#: ../../../crypto/api-aead:22: include/crypto/aead.h:493
msgid "``struct scatterlist *dst``"
msgstr ""

#: ../../../crypto/api-aead:22: include/crypto/aead.h:492
msgid "destination scatter / gather list"
msgstr ""

#: ../../../crypto/api-aead:22: include/crypto/aead.h:494
msgid "``unsigned int cryptlen``"
msgstr ""

#: ../../../crypto/api-aead:22: include/crypto/aead.h:493
msgid "number of bytes to process from **src**"
msgstr ""

#: ../../../crypto/api-aead:22: include/crypto/aead.h:495
msgid "``u8 *iv``"
msgstr ""

#: ../../../crypto/api-aead:22: include/crypto/aead.h:494
msgid ""
"IV for the cipher operation which must comply with the IV size defined by "
"crypto_aead_ivsize()"
msgstr ""

#: ../../../crypto/api-aead:22: include/crypto/aead.h:496
msgid ""
"Setting the source data and destination data scatter / gather lists which "
"hold the associated data concatenated with the plaintext or ciphertext. See "
"below for the authentication tag."
msgstr ""

#: ../../../crypto/api-aead:22: include/crypto/aead.h:500
msgid ""
"For encryption, the source is treated as the plaintext and the destination "
"is the ciphertext. For a decryption operation, the use is reversed - the "
"source is the ciphertext and the destination is the plaintext."
msgstr ""

#: ../../../crypto/api-aead:22: include/crypto/aead.h:504
msgid "The memory structure for cipher operation has the following structure:"
msgstr ""

#: ../../../crypto/api-aead:22: include/crypto/aead.h:506
msgid "AEAD encryption input:  assoc data || plaintext"
msgstr ""

#: ../../../crypto/api-aead:22: include/crypto/aead.h:507
msgid "AEAD encryption output: assoc data || ciphertext || auth tag"
msgstr ""

#: ../../../crypto/api-aead:22: include/crypto/aead.h:508
msgid "AEAD decryption input:  assoc data || ciphertext || auth tag"
msgstr ""

#: ../../../crypto/api-aead:22: include/crypto/aead.h:509
msgid "AEAD decryption output: assoc data || plaintext"
msgstr ""

#: ../../../crypto/api-aead:22: include/crypto/aead.h:511
msgid ""
"Albeit the kernel requires the presence of the AAD buffer, however, the "
"kernel does not fill the AAD buffer in the output case. If the caller wants "
"to have that data buffer filled, the caller must either use an in-place "
"cipher operation (i.e. same memory location for input/output memory "
"location)."
msgstr ""

#: ../../../crypto/api-aead:22: include/crypto/aead.h:530
msgid "set associated data information"
msgstr ""

#: ../../../crypto/api-aead:22: include/crypto/aead.h:533
msgid "``unsigned int assoclen``"
msgstr ""

#: ../../../crypto/api-aead:22: include/crypto/aead.h:532
msgid "number of bytes in associated data"
msgstr ""

#: ../../../crypto/api-aead:22: include/crypto/aead.h:533
msgid ""
"Setting the AD information.  This function sets the length of the associated "
"data."
msgstr ""
