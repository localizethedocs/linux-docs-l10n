# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../trace/sys-t.rst:5
msgid "MIPI SyS-T over STP"
msgstr ""

#: ../../../trace/sys-t.rst:7
msgid ""
"The MIPI SyS-T protocol driver can be used with STM class devices to "
"generate standardized trace stream. Aside from being a standard, it provides "
"better trace source identification and timestamp correlation."
msgstr ""

#: ../../../trace/sys-t.rst:11
msgid ""
"In order to use the MIPI SyS-T protocol driver with your STM device, first, "
"you'll need CONFIG_STM_PROTO_SYS_T."
msgstr ""

#: ../../../trace/sys-t.rst:14
msgid ""
"Now, you can select which protocol driver you want to use when you create a "
"policy for your STM device, by specifying it in the policy name:"
msgstr ""

#: ../../../trace/sys-t.rst:17
msgid "# mkdir /config/stp-policy/dummy_stm.0:p_sys-t.my-policy/"
msgstr ""

#: ../../../trace/sys-t.rst:19
msgid "In other words, the policy name format is extended like this:"
msgstr ""

#: ../../../trace/sys-t.rst:21
msgid "<device_name>:<protocol_name>.<policy_name>"
msgstr ""

#: ../../../trace/sys-t.rst:23
msgid "With Intel TH, therefore it can look like \"0-sth:p_sys-t.my-policy\"."
msgstr ""

#: ../../../trace/sys-t.rst:25
msgid ""
"If the protocol name is omitted, the STM class will chose whichever protocol "
"driver was loaded first."
msgstr ""

#: ../../../trace/sys-t.rst:28
msgid "You can also double check that everything is working as expected by"
msgstr ""

#: ../../../trace/sys-t.rst:30
msgid "# cat /config/stp-policy/dummy_stm.0:p_sys-t.my-policy/protocol p_sys-t"
msgstr ""

#: ../../../trace/sys-t.rst:33
msgid ""
"Now, with the MIPI SyS-T protocol driver, each policy node in the configfs "
"gets a few additional attributes, which determine per-source parameters "
"specific to the protocol:"
msgstr ""

#: ../../../trace/sys-t.rst:37
msgid ""
"# mkdir /config/stp-policy/dummy_stm.0:p_sys-t.my-policy/default # ls /"
"config/stp-policy/dummy_stm.0:p_sys-t.my-policy/default channels "
"clocksync_interval do_len masters ts_interval uuid"
msgstr ""

#: ../../../trace/sys-t.rst:46
msgid ""
"The most important one here is the \"uuid\", which determines the UUID that "
"will be used to tag all data coming from this source. It is automatically "
"generated when a new node is created, but it is likely that you would want "
"to change it."
msgstr ""

#: ../../../trace/sys-t.rst:51
msgid ""
"do_len switches on/off the additional \"payload length\" field in the MIPI "
"SyS-T message header. It is off by default as the STP already marks message "
"boundaries."
msgstr ""

#: ../../../trace/sys-t.rst:55
msgid ""
"ts_interval and clocksync_interval determine how much time in milliseconds "
"can pass before we need to include a protocol (not transport, aka STP) "
"timestamp in a message header or send a CLOCKSYNC packet, respectively."
msgstr ""

#: ../../../trace/sys-t.rst:59
msgid ""
"See Documentation/ABI/testing/configfs-stp-policy-p_sys-t for more details."
msgstr ""

#: ../../../trace/sys-t.rst:62
msgid "[1] https://www.mipi.org/specifications/sys-t"
msgstr ""
