# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../hwmon/g762.rst:2
msgid "Kernel driver g762"
msgstr ""

#: ../../../hwmon/g762.rst:4
msgid ""
"The GMT G762 Fan Speed PWM Controller is connected directly to a fan and "
"performs closed-loop or open-loop control of the fan speed. Two modes - PWM "
"or DC - are supported by the device."
msgstr ""

#: ../../../hwmon/g762.rst:8
msgid ""
"For additional information, a detailed datasheet is available at http://"
"natisbad.org/NAS/ref/GMT_EDS-762_763-080710-0.2.pdf. sysfs bindings are "
"described in Documentation/hwmon/sysfs-interface.rst."
msgstr ""

#: ../../../hwmon/g762.rst:12
msgid ""
"The following entries are available to the user in a subdirectory of /sys/"
"bus/i2c/drivers/g762/ to control the operation of the device. This can be "
"done manually using the following entries but is usually done via a userland "
"daemon like fancontrol."
msgstr ""

#: ../../../hwmon/g762.rst:17
msgid ""
"Note that those entries do not provide ways to setup the specific hardware "
"characteristics of the system (reference clock, pulses per fan "
"revolution, ...); Those can be modified via devicetree bindings documented "
"in Documentation/devicetree/bindings/hwmon/g762.txt or using a specific "
"platform_data structure in board initialization file (see include/linux/"
"platform_data/g762.h)."
msgstr ""

#: ../../../hwmon/g762.rst:24
msgid "fan1_target:"
msgstr ""

#: ../../../hwmon/g762.rst:25
msgid ""
"set desired fan speed. This only makes sense in closed-loop fan speed "
"control (i.e. when pwm1_enable is set to 2)."
msgstr ""

#: ../../../hwmon/g762.rst:28
msgid "fan1_input:"
msgstr ""

#: ../../../hwmon/g762.rst:29
msgid ""
"provide current fan rotation value in RPM as reported by the fan to the "
"device."
msgstr ""

#: ../../../hwmon/g762.rst:32
msgid "fan1_div:"
msgstr ""

#: ../../../hwmon/g762.rst:33
msgid "fan clock divisor. Supported value are 1, 2, 4 and 8."
msgstr ""

#: ../../../hwmon/g762.rst:35
msgid "fan1_pulses:"
msgstr ""

#: ../../../hwmon/g762.rst:36
msgid "number of pulses per fan revolution. Supported values are 2 and 4."
msgstr ""

#: ../../../hwmon/g762.rst:39
msgid "fan1_fault:"
msgstr ""

#: ../../../hwmon/g762.rst:40
msgid ""
"reports fan failure, i.e. no transition on fan gear pin for about 0.7s (if "
"the fan is not voluntarily set off)."
msgstr ""

#: ../../../hwmon/g762.rst:43
msgid "fan1_alarm:"
msgstr ""

#: ../../../hwmon/g762.rst:44
msgid ""
"in closed-loop control mode, if fan RPM value is 25% out of the programmed "
"value for over 6 seconds 'fan1_alarm' is set to 1."
msgstr ""

#: ../../../hwmon/g762.rst:48
msgid "pwm1_enable:"
msgstr ""

#: ../../../hwmon/g762.rst:49
msgid ""
"set current fan speed control mode i.e. 1 for manual fan speed control (open-"
"loop) via pwm1 described below, 2 for automatic fan speed control (closed-"
"loop) via fan1_target above."
msgstr ""

#: ../../../hwmon/g762.rst:54
msgid "pwm1_mode:"
msgstr ""

#: ../../../hwmon/g762.rst:55
msgid "set or get fan driving mode: 1 for PWM mode, 0 for DC mode."
msgstr ""

#: ../../../hwmon/g762.rst:57
msgid "pwm1:"
msgstr ""

#: ../../../hwmon/g762.rst:58
msgid ""
"get or set PWM fan control value in open-loop mode. This is an integer value "
"between 0 and 255. 0 stops the fan, 255 makes it run at full speed."
msgstr ""

#: ../../../hwmon/g762.rst:62
msgid ""
"Both in PWM mode ('pwm1_mode' set to 1) and DC mode ('pwm1_mode' set to 0), "
"when current fan speed control mode is open-loop ('pwm1_enable' set to 1), "
"the fan speed is programmed by setting a value between 0 and 255 via 'pwm1' "
"entry (0 stops the fan, 255 makes it run at full speed). In closed-loop mode "
"('pwm1_enable' set to 2), the expected rotation speed in RPM can be passed "
"to the chip via 'fan1_target'. In closed-loop mode, the target speed is "
"compared with current speed (available via 'fan1_input') by the device and a "
"feedback is performed to match that target value. The fan speed value is "
"computed based on the parameters associated with the physical "
"characteristics of the system: a reference clock source frequency, a number "
"of pulses per fan revolution, etc."
msgstr ""

#: ../../../hwmon/g762.rst:74
msgid "Note that the driver will update its values at most once per second."
msgstr ""
