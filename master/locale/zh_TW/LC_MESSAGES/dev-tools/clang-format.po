# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../dev-tools/clang-format.rst:4
msgid "clang-format"
msgstr ""

#: ../../../dev-tools/clang-format.rst:6
msgid ""
"``clang-format`` is a tool to format C/C++/... code according to a set of "
"rules and heuristics. Like most tools, it is not perfect nor covers every "
"single case, but it is good enough to be helpful."
msgstr ""

#: ../../../dev-tools/clang-format.rst:10
msgid "``clang-format`` can be used for several purposes:"
msgstr ""

#: ../../../dev-tools/clang-format.rst:12
msgid ""
"Quickly reformat a block of code to the kernel style. Specially useful when "
"moving code around and aligning/sorting. See clangformatreformat_."
msgstr ""

#: ../../../dev-tools/clang-format.rst:15
msgid ""
"Spot style mistakes, typos and possible improvements in files you maintain, "
"patches you review, diffs, etc. See clangformatreview_."
msgstr ""

#: ../../../dev-tools/clang-format.rst:18
msgid ""
"Help you follow the coding style rules, specially useful for those new to "
"kernel development or working at the same time in several projects with "
"different coding styles."
msgstr ""

#: ../../../dev-tools/clang-format.rst:22
msgid ""
"Its configuration file is ``.clang-format`` in the root of the kernel tree. "
"The rules contained there try to approximate the most common kernel coding "
"style. They also try to follow :ref:`Documentation/process/coding-style.rst "
"<codingstyle>` as much as possible. Since not all the kernel follows the "
"same style, it is possible that you may want to tweak the defaults for a "
"particular subsystem or folder. To do so, you can override the defaults by "
"writing another ``.clang-format`` file in a subfolder."
msgstr ""

#: ../../../dev-tools/clang-format.rst:30
msgid ""
"The tool itself has already been included in the repositories of popular "
"Linux distributions for a long time. Search for ``clang-format`` in your "
"repositories. Otherwise, you can either download pre-built LLVM/clang "
"binaries or build the source code from:"
msgstr ""

#: ../../../dev-tools/clang-format.rst:35
msgid "https://releases.llvm.org/download.html"
msgstr ""

#: ../../../dev-tools/clang-format.rst:37
msgid "See more information about the tool at:"
msgstr ""

#: ../../../dev-tools/clang-format.rst:39
#: ../../../dev-tools/clang-format.rst:102
msgid "https://clang.llvm.org/docs/ClangFormat.html"
msgstr ""

#: ../../../dev-tools/clang-format.rst:41
msgid "https://clang.llvm.org/docs/ClangFormatStyleOptions.html"
msgstr ""

#: ../../../dev-tools/clang-format.rst:47
msgid "Review files and patches for coding style"
msgstr ""

#: ../../../dev-tools/clang-format.rst:49
msgid ""
"By running the tool in its inline mode, you can review full subsystems, "
"folders or individual files for code style mistakes, typos or improvements."
msgstr ""

#: ../../../dev-tools/clang-format.rst:52
msgid "To do so, you can run something like::"
msgstr ""

#: ../../../dev-tools/clang-format.rst:57
msgid "And then take a look at the git diff."
msgstr ""

#: ../../../dev-tools/clang-format.rst:59
msgid ""
"Counting the lines of such a diff is also useful for improving/tweaking the "
"style options in the configuration file; as well as testing new ``clang-"
"format`` features/versions."
msgstr ""

#: ../../../dev-tools/clang-format.rst:63
msgid ""
"``clang-format`` also supports reading unified diffs, so you can review "
"patches and git diffs easily. See the documentation at:"
msgstr ""

#: ../../../dev-tools/clang-format.rst:66
msgid ""
"https://clang.llvm.org/docs/ClangFormat.html#script-for-patch-reformatting"
msgstr ""

#: ../../../dev-tools/clang-format.rst:68
msgid ""
"To avoid ``clang-format`` formatting some portion of a file, you can do::"
msgstr ""

#: ../../../dev-tools/clang-format.rst:76
msgid ""
"While it might be tempting to use this to keep a file always in sync with "
"``clang-format``, specially if you are writing new files or if you are a "
"maintainer, please note that people might be running different ``clang-"
"format`` versions or not have it available at all. Therefore, you should "
"probably refrain yourself from using this in kernel sources; at least until "
"we see if ``clang-format`` becomes commonplace."
msgstr ""

#: ../../../dev-tools/clang-format.rst:87
msgid "Reformatting blocks of code"
msgstr ""

#: ../../../dev-tools/clang-format.rst:89
msgid ""
"By using an integration with your text editor, you can reformat arbitrary "
"blocks (selections) of code with a single keystroke. This is specially "
"useful when moving code around, for complex code that is deeply intended, "
"for multi-line macros (and aligning their backslashes), etc."
msgstr ""

#: ../../../dev-tools/clang-format.rst:94
msgid ""
"Remember that you can always tweak the changes afterwards in those cases "
"where the tool did not do an optimal job. But as a first approximation, it "
"can be very useful."
msgstr ""

#: ../../../dev-tools/clang-format.rst:98
msgid ""
"There are integrations for many popular text editors. For some of them, like "
"vim, emacs, BBEdit and Visual Studio you can find support built-in. For "
"instructions, read the appropriate section at:"
msgstr ""

#: ../../../dev-tools/clang-format.rst:104
msgid ""
"For Atom, Eclipse, Sublime Text, Visual Studio Code, XCode and other editors "
"and IDEs you should be able to find ready-to-use plugins."
msgstr ""

#: ../../../dev-tools/clang-format.rst:107
msgid ""
"For this use case, consider using a secondary ``.clang-format`` so that you "
"can tweak a few options. See clangformatextra_."
msgstr ""

#: ../../../dev-tools/clang-format.rst:114
msgid "Missing support"
msgstr ""

#: ../../../dev-tools/clang-format.rst:116
msgid ""
"``clang-format`` is missing support for some things that are common in "
"kernel code. They are easy to remember, so if you use the tool regularly, "
"you will quickly learn to avoid/ignore those."
msgstr ""

#: ../../../dev-tools/clang-format.rst:120
msgid "In particular, some very common ones you will notice are:"
msgstr ""

#: ../../../dev-tools/clang-format.rst:122
msgid "Aligned blocks of one-line ``#defines``, e.g.::"
msgstr ""

#: ../../../dev-tools/clang-format.rst:128
#: ../../../dev-tools/clang-format.rst:145
msgid "vs.::"
msgstr ""

#: ../../../dev-tools/clang-format.rst:134
msgid "Aligned designated initializers, e.g.::"
msgstr ""

#: ../../../dev-tools/clang-format.rst:160
msgid "Extra features/options"
msgstr ""

#: ../../../dev-tools/clang-format.rst:162
msgid ""
"Some features/style options are not enabled by default in the configuration "
"file in order to minimize the differences between the output and the current "
"code. In other words, to make the difference as small as possible, which "
"makes reviewing full-file style, as well diffs and patches as easy as "
"possible."
msgstr ""

#: ../../../dev-tools/clang-format.rst:168
msgid ""
"In other cases (e.g. particular subsystems/folders/files), the kernel style "
"might be different and enabling some of these options may approximate better "
"the style there."
msgstr ""

#: ../../../dev-tools/clang-format.rst:172
msgid "For instance:"
msgstr ""

#: ../../../dev-tools/clang-format.rst:174
msgid "Aligning assignments (``AlignConsecutiveAssignments``)."
msgstr ""

#: ../../../dev-tools/clang-format.rst:176
msgid "Aligning declarations (``AlignConsecutiveDeclarations``)."
msgstr ""

#: ../../../dev-tools/clang-format.rst:178
msgid "Reflowing text in comments (``ReflowComments``)."
msgstr ""

#: ../../../dev-tools/clang-format.rst:180
msgid "Sorting ``#includes`` (``SortIncludes``)."
msgstr ""

#: ../../../dev-tools/clang-format.rst:182
msgid ""
"They are typically useful for block re-formatting, rather than full-file. "
"You might want to create another ``.clang-format`` file and use that one "
"from your editor/IDE instead."
msgstr ""
