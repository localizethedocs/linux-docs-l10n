# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../dev-tools/kunit/run_manual.rst:5
msgid "Run Tests without kunit_tool"
msgstr ""

#: ../../../dev-tools/kunit/run_manual.rst:7
msgid ""
"If we do not want to use kunit_tool (For example: we want to integrate with "
"other systems, or run tests on real hardware), we can include KUnit in any "
"kernel, read out results, and parse manually."
msgstr ""

#: ../../../dev-tools/kunit/run_manual.rst:11
msgid ""
"KUnit is not designed for use in a production system. It is possible that "
"tests may reduce the stability or security of the system."
msgstr ""

#: ../../../dev-tools/kunit/run_manual.rst:16
msgid "Configure the Kernel"
msgstr ""

#: ../../../dev-tools/kunit/run_manual.rst:18
msgid "KUnit tests can run without kunit_tool. This can be useful, if:"
msgstr ""

#: ../../../dev-tools/kunit/run_manual.rst:20
msgid "We have an existing kernel configuration to test."
msgstr ""

#: ../../../dev-tools/kunit/run_manual.rst:21
msgid ""
"Need to run on real hardware (or using an emulator/VM kunit_tool does not "
"support)."
msgstr ""

#: ../../../dev-tools/kunit/run_manual.rst:23
msgid "Wish to integrate with some existing testing systems."
msgstr ""

#: ../../../dev-tools/kunit/run_manual.rst:25
msgid ""
"KUnit is configured with the ``CONFIG_KUNIT`` option, and individual tests "
"can also be built by enabling their config options in our ``.config``. KUnit "
"tests usually (but don't always) have config options ending in "
"``_KUNIT_TEST``. Most tests can either be built as a module, or be built "
"into the kernel."
msgstr ""

#: ../../../dev-tools/kunit/run_manual.rst:33
msgid ""
"We can enable the ``KUNIT_ALL_TESTS`` config option to automatically enable "
"all tests with satisfied dependencies. This is a good way of quickly testing "
"everything applicable to the current config."
msgstr ""

#: ../../../dev-tools/kunit/run_manual.rst:38
msgid ""
"Once we have built our kernel (and/or modules), it is simple to run the "
"tests. If the tests are built-in, they will run automatically on the kernel "
"boot. The results will be written to the kernel log (``dmesg``) in TAP "
"format."
msgstr ""

#: ../../../dev-tools/kunit/run_manual.rst:43
msgid ""
"If the tests are built as modules, they will run when the module is loaded."
msgstr ""

#: ../../../dev-tools/kunit/run_manual.rst:50
msgid "The results will appear in TAP format in ``dmesg``."
msgstr ""

#: ../../../dev-tools/kunit/run_manual.rst:53
msgid "debugfs"
msgstr ""

#: ../../../dev-tools/kunit/run_manual.rst:55
msgid ""
"KUnit can be accessed from userspace via the debugfs filesystem (See more "
"information about debugfs at Documentation/filesystems/debugfs.rst)."
msgstr ""

#: ../../../dev-tools/kunit/run_manual.rst:58
msgid ""
"If ``CONFIG_KUNIT_DEBUGFS`` is enabled, the KUnit debugfs filesystem is "
"mounted at /sys/kernel/debug/kunit. You can use this filesystem to perform "
"the following actions."
msgstr ""

#: ../../../dev-tools/kunit/run_manual.rst:63
msgid "Retrieve Test Results"
msgstr ""

#: ../../../dev-tools/kunit/run_manual.rst:65
msgid ""
"You can use debugfs to retrieve KUnit test results. The test results are "
"accessible from the debugfs filesystem in the following read-only file:"
msgstr ""

#: ../../../dev-tools/kunit/run_manual.rst:72
msgid ""
"The test results are printed in a KTAP document. Note this document is "
"separate to the kernel log and thus, may have different test suite numbering."
msgstr ""

#: ../../../dev-tools/kunit/run_manual.rst:76
msgid "Run Tests After Kernel Has Booted"
msgstr ""

#: ../../../dev-tools/kunit/run_manual.rst:78
msgid ""
"You can use the debugfs filesystem to trigger built-in tests to run after "
"boot. To run the test suite, you can use the following command to write to "
"the ``/sys/kernel/debug/kunit/<test_suite>/run`` file:"
msgstr ""

#: ../../../dev-tools/kunit/run_manual.rst:86
msgid ""
"As a result, the test suite runs and the results are printed to the kernel "
"log."
msgstr ""

#: ../../../dev-tools/kunit/run_manual.rst:89
msgid ""
"However, this feature is not available with KUnit suites that use init data, "
"because init data may have been discarded after the kernel boots. KUnit "
"suites that use init data should be defined using the "
"kunit_test_init_section_suites() macro."
msgstr ""

#: ../../../dev-tools/kunit/run_manual.rst:94
msgid ""
"Also, you cannot use this feature to run tests concurrently. Instead a test "
"will wait to run until other tests have completed or failed."
msgstr ""

#: ../../../dev-tools/kunit/run_manual.rst:99
msgid ""
"For test authors, to use this feature, tests will need to correctly "
"initialise and/or clean up any data, so the test runs correctly a second "
"time."
msgstr ""
