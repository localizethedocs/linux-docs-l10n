# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../virt/kvm/devices/vm.rst:5
msgid "Generic vm interface"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:7
msgid ""
"The virtual machine \"device\" also accepts the ioctls KVM_SET_DEVICE_ATTR, "
"KVM_GET_DEVICE_ATTR, and KVM_HAS_DEVICE_ATTR. The interface uses the same "
"struct kvm_device_attr as other devices, but targets VM-wide settings and "
"controls."
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:12
msgid ""
"The groups and attributes per virtual machine, if any, are architecture "
"specific."
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:16
msgid "1. GROUP: KVM_S390_VM_MEM_CTRL"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:0
msgid "Architectures"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:18 ../../../virt/kvm/devices/vm.rst:58
#: ../../../virt/kvm/devices/vm.rst:207 ../../../virt/kvm/devices/vm.rst:247
#: ../../../virt/kvm/devices/vm.rst:286
msgid "s390"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:21
msgid "1.1. ATTRIBUTE: KVM_S390_VM_MEM_ENABLE_CMMA"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:0
msgid "Parameters"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:23 ../../../virt/kvm/devices/vm.rst:31
#: ../../../virt/kvm/devices/vm.rst:255 ../../../virt/kvm/devices/vm.rst:264
#: ../../../virt/kvm/devices/vm.rst:272 ../../../virt/kvm/devices/vm.rst:280
#: ../../../virt/kvm/devices/vm.rst:295 ../../../virt/kvm/devices/vm.rst:309
msgid "none"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:0
msgid "Returns"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:24
msgid "-EBUSY if a vcpu is already defined, otherwise 0"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:26
msgid ""
"Enables Collaborative Memory Management Assist (CMMA) for the virtual "
"machine."
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:29
msgid "1.2. ATTRIBUTE: KVM_S390_VM_MEM_CLR_CMMA"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:32
msgid "-EINVAL if CMMA was not enabled; 0 otherwise"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:35
msgid ""
"Clear the CMMA status for all guest pages, so any pages the guest marked as "
"unused are again used any may not be reclaimed by the host."
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:39
msgid "1.3. ATTRIBUTE KVM_S390_VM_MEM_LIMIT_SIZE"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:41
msgid "in attr->addr the address for the new limit of guest memory"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:42
msgid ""
"-EFAULT if the given address is not accessible; -EINVAL if the virtual "
"machine is of type UCONTROL; -E2BIG if the given guest memory is to big for "
"that machine; -EBUSY if a vcpu is already defined; -ENOMEM if not enough "
"memory is available for a new shadow guest mapping; 0 otherwise."
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:49
msgid ""
"Allows userspace to query the actual limit and set a new limit for the "
"maximum guest memory size. The limit will be rounded up to 2048 MB, 4096 GB, "
"8192 TB respectively, as this limit is governed by the number of page table "
"levels. In the case that there is no limit we will set the limit to "
"KVM_S390_NO_MEM_LIMIT (U64_MAX)."
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:56
msgid "2. GROUP: KVM_S390_VM_CPU_MODEL"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:61
msgid "2.1. ATTRIBUTE: KVM_S390_VM_CPU_MACHINE (r/o)"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:63
msgid ""
"Allows user space to retrieve machine and kvm specific cpu related "
"information::"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:73
msgid ""
"address of buffer to store the machine related cpu data of type struct "
"kvm_s390_vm_cpu_machine*"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:75
msgid ""
"-EFAULT if the given address is not accessible from kernel space; -ENOMEM if "
"not enough memory is available to process the ioctl; 0 in case of success."
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:80
msgid "2.2. ATTRIBUTE: KVM_S390_VM_CPU_PROCESSOR (r/w)"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:82
msgid ""
"Allows user space to retrieve or request to change cpu related information "
"for a vcpu::"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:92
msgid ""
"KVM does not enforce or limit the cpu model data in any form. Take the "
"information retrieved by means of KVM_S390_VM_CPU_MACHINE as hint for "
"reasonable configuration setups. Instruction interceptions triggered by "
"additionally set facility bits that are not handled by KVM need to by "
"implemented in the VM driver code."
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:97
msgid ""
"address of buffer to store/set the processor related cpu data of type struct "
"kvm_s390_vm_cpu_processor*."
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:99
msgid ""
"-EBUSY in case 1 or more vcpus are already activated (only in write case); -"
"EFAULT if the given address is not accessible from kernel space; -ENOMEM if "
"not enough memory is available to process the ioctl; 0 in case of success."
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:107
msgid "2.3. ATTRIBUTE: KVM_S390_VM_CPU_MACHINE_FEAT (r/o)"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:109
msgid ""
"Allows user space to retrieve available cpu features. A feature is available "
"if provided by the hardware and supported by kvm. In theory, cpu features "
"could even be completely emulated by kvm."
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:119
msgid "address of a buffer to load the feature list from."
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:120 ../../../virt/kvm/devices/vm.rst:176
#: ../../../virt/kvm/devices/vm.rst:322
msgid ""
"-EFAULT if the given address is not accessible from kernel space; 0 in case "
"of success."
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:124
msgid "2.4. ATTRIBUTE: KVM_S390_VM_CPU_PROCESSOR_FEAT (r/w)"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:126
msgid ""
"Allows user space to retrieve or change enabled cpu features for all VCPUs "
"of a VM. Features that are not available cannot be enabled."
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:129
msgid ""
"See :ref:`KVM_S390_VM_CPU_MACHINE_FEAT` for a description of the parameter "
"struct."
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:132
msgid "address of a buffer to store/load the feature list from."
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:133
msgid ""
"-EFAULT if the given address is not accessible from kernel space; -EINVAL if "
"a cpu feature that is not available is to be enabled; -EBUSY if at least one "
"VCPU has already been defined; 0 in case of success."
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:141
msgid "2.5. ATTRIBUTE: KVM_S390_VM_CPU_MACHINE_SUBFUNC (r/o)"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:143
msgid ""
"Allows user space to retrieve available cpu subfunctions without any "
"filtering done by a set IBC. These subfunctions are indicated to the guest "
"VCPU via query or \"test bit\" subfunctions and used e.g. by cpacf "
"functions, plo and ptff."
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:147
msgid ""
"A subfunction block is only valid if KVM_S390_VM_CPU_MACHINE contains the "
"STFL(E) bit introducing the affected instruction. If the affected "
"instruction indicates subfunctions via a \"query subfunction\", the response "
"block is contained in the returned struct. If the affected instruction "
"indicates subfunctions via a \"test bit\" mechanism, the subfunction codes "
"are contained in the returned struct in MSB 0 bit numbering."
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:175
msgid "address of a buffer to load the subfunction blocks from."
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:180
msgid "2.6. ATTRIBUTE: KVM_S390_VM_CPU_PROCESSOR_SUBFUNC (r/w)"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:182
msgid ""
"Allows user space to retrieve or change cpu subfunctions to be indicated for "
"all VCPUs of a VM. This attribute will only be available if kernel and "
"hardware support are in place."
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:186
msgid ""
"The kernel uses the configured subfunction blocks for indication to the "
"guest. A subfunction block will only be used if the associated STFL(E) bit "
"has not been disabled by user space (so the instruction to be queried is "
"actually available for the guest)."
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:191
msgid ""
"As long as no data has been written, a read will fail. The IBC will be used "
"to determine available subfunctions in this case, this will guarantee "
"backward compatibility."
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:195
msgid ""
"See :ref:`KVM_S390_VM_CPU_MACHINE_SUBFUNC` for a description of the "
"parameter struct."
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:198
msgid "address of a buffer to store/load the subfunction blocks from."
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:199
msgid ""
"-EFAULT if the given address is not accessible from kernel space; -EINVAL "
"when reading, if there was no write yet; -EBUSY if at least one VCPU has "
"already been defined; 0 in case of success."
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:205
msgid "3. GROUP: KVM_S390_VM_TOD"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:210
msgid "3.1. ATTRIBUTE: KVM_S390_VM_TOD_HIGH"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:212
msgid ""
"Allows user space to set/get the TOD clock extension (u8) (superseded by "
"KVM_S390_VM_TOD_EXT)."
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:215
msgid "address of a buffer in user space to store the data (u8) to"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:216 ../../../virt/kvm/devices/vm.rst:240
msgid ""
"-EFAULT if the given address is not accessible from kernel space; -EINVAL if "
"setting the TOD clock extension to != 0 is not supported -EOPNOTSUPP for a "
"PV guest (TOD managed by the ultravisor)"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:221
msgid "3.2. ATTRIBUTE: KVM_S390_VM_TOD_LOW"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:223
msgid ""
"Allows user space to set/get bits 0-63 of the TOD clock register as defined "
"in the POP (u64)."
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:226
msgid "address of a buffer in user space to store the data (u64) to"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:227
msgid ""
"-EFAULT if the given address is not accessible from kernel space -EOPNOTSUPP "
"for a PV guest (TOD managed by the ultravisor)"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:231
msgid "3.3. ATTRIBUTE: KVM_S390_VM_TOD_EXT"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:233
msgid ""
"Allows user space to set/get bits 0-63 of the TOD clock register as defined "
"in the POP (u64). If the guest CPU model supports the TOD clock extension "
"(u8), it also allows user space to get/set it. If the guest CPU model does "
"not support it, it is stored as 0 and not allowed to be set to a value != 0."
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:238
msgid ""
"address of a buffer in user space to store the data (kvm_s390_vm_tod_clock) "
"to"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:245
msgid "4. GROUP: KVM_S390_VM_CRYPTO"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:250
msgid "4.1. ATTRIBUTE: KVM_S390_VM_CRYPTO_ENABLE_AES_KW (w/o)"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:252
msgid ""
"Allows user space to enable aes key wrapping, including generating a new "
"wrapping key."
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:256 ../../../virt/kvm/devices/vm.rst:265
#: ../../../virt/kvm/devices/vm.rst:273 ../../../virt/kvm/devices/vm.rst:281
#: ../../../virt/kvm/devices/vm.rst:296
msgid "0"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:259
msgid "4.2. ATTRIBUTE: KVM_S390_VM_CRYPTO_ENABLE_DEA_KW (w/o)"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:261
msgid ""
"Allows user space to enable dea key wrapping, including generating a new "
"wrapping key."
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:268
msgid "4.3. ATTRIBUTE: KVM_S390_VM_CRYPTO_DISABLE_AES_KW (w/o)"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:270
msgid ""
"Allows user space to disable aes key wrapping, clearing the wrapping key."
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:276
msgid "4.4. ATTRIBUTE: KVM_S390_VM_CRYPTO_DISABLE_DEA_KW (w/o)"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:278
msgid ""
"Allows user space to disable dea key wrapping, clearing the wrapping key."
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:284
msgid "5. GROUP: KVM_S390_VM_MIGRATION"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:289
msgid "5.1. ATTRIBUTE: KVM_S390_VM_MIGRATION_STOP (w/o)"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:291
msgid ""
"Allows userspace to stop migration mode, needed for PGSTE migration. Setting "
"this attribute when migration mode is not active will have no effects."
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:299
msgid "5.2. ATTRIBUTE: KVM_S390_VM_MIGRATION_START (w/o)"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:301
msgid ""
"Allows userspace to start migration mode, needed for PGSTE migration. "
"Setting this attribute when migration mode is already active will have no "
"effects."
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:305
msgid ""
"Dirty tracking must be enabled on all memslots, else -EINVAL is returned. "
"When dirty tracking is disabled on any memslot, migration mode is "
"automatically stopped."
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:310
msgid ""
"-ENOMEM if there is not enough free memory to start migration mode; -EINVAL "
"if the state of the VM is invalid (e.g. no memory defined); 0 in case of "
"success."
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:315
msgid "5.3. ATTRIBUTE: KVM_S390_VM_MIGRATION_STATUS (r/o)"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:317
msgid "Allows userspace to query the status of migration mode."
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:319
msgid ""
"address of a buffer in user space to store the data (u64) to; the data "
"itself is either 0 if migration mode is disabled or 1 if it is enabled"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:326
msgid "6. GROUP: KVM_ARM_VM_SMCCC_CTRL"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:328
msgid "arm64"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:331
msgid "6.1. ATTRIBUTE: KVM_ARM_VM_SMCCC_FILTER (w/o)"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:333
msgid "Pointer to a ``struct kvm_smccc_filter``"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:338
msgid "EEXIST"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:338
msgid "Range intersects with a previously inserted or reserved range"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:340
msgid "EBUSY"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:340
msgid "A vCPU in the VM has already run"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:341
msgid "EINVAL"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:341
msgid "Invalid filter configuration"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:342
msgid "ENOMEM"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:342
msgid ""
"Failed to allocate memory for the in-kernel representation of the SMCCC "
"filter"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:346
msgid ""
"Requests the installation of an SMCCC call filter described as follows::"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:361
msgid ""
"The filter is defined as a set of non-overlapping ranges. Each range defines "
"an action to be applied to SMCCC calls within the range. Userspace can "
"insert multiple ranges into the filter by using successive calls to this "
"attribute."
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:366
msgid ""
"The default configuration of KVM is such that all implemented SMCCC calls "
"are allowed. Thus, the SMCCC filter can be defined sparsely by userspace, "
"only describing ranges that modify the default behavior."
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:370
msgid ""
"The range expressed by ``struct kvm_smccc_filter`` is [``base``, ``base + "
"nr_functions``). The range is not allowed to wrap, i.e. userspace cannot "
"rely on ``base + nr_functions`` overflowing."
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:374
msgid ""
"The SMCCC filter applies to both SMC and HVC calls initiated by the guest. "
"The SMCCC filter gates the in-kernel emulation of SMCCC calls and as such "
"takes effect before other interfaces that interact with SMCCC calls (e.g. "
"hypercall bitmap registers)."
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:379
msgid "Actions:"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:381
msgid ""
"``KVM_SMCCC_FILTER_HANDLE``: Allows the guest SMCCC call to be handled in-"
"kernel. It is strongly recommended that userspace *not* explicitly describe "
"the allowed SMCCC call ranges."
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:385
msgid ""
"``KVM_SMCCC_FILTER_DENY``: Rejects the guest SMCCC call in-kernel and "
"returns to the guest."
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:388
msgid ""
"``KVM_SMCCC_FILTER_FWD_TO_USER``: The guest SMCCC call is forwarded to "
"userspace with an exit reason of ``KVM_EXIT_HYPERCALL``."
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:391
msgid ""
"The ``pad`` field is reserved for future use and must be zero. KVM may "
"return ``-EINVAL`` if the field is nonzero."
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:394
msgid ""
"KVM reserves the 'Arm Architecture Calls' range of function IDs and will "
"reject attempts to define a filter for any portion of these ranges:"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:398
msgid "Start"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:398
msgid "End (inclusive)"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:400
msgid "0x8000_0000"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:400
msgid "0x8000_FFFF"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:401
msgid "0xC000_0000"
msgstr ""

#: ../../../virt/kvm/devices/vm.rst:401
msgid "0xC000_FFFF"
msgstr ""
