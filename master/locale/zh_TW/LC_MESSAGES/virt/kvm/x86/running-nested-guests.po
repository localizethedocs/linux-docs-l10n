# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../virt/kvm/x86/running-nested-guests.rst:5
msgid "Running nested guests with KVM"
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:7
msgid ""
"A nested guest is the ability to run a guest inside another guest (it can be "
"KVM-based or a different hypervisor).  The straightforward example is a KVM "
"guest that in turn runs on a KVM guest (the rest of this document is built "
"on this example)::"
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:29
msgid "Terminology:"
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:31
msgid "L0 – level-0; the bare metal host, running KVM"
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:33
msgid ""
"L1 – level-1 guest; a VM running on L0; also called the \"guest "
"hypervisor\", as it itself is capable of running KVM."
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:36
msgid "L2 – level-2 guest; a VM running on L1, this is the \"nested guest\""
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:38
msgid ""
"The above diagram is modelled after the x86 architecture; s390x, ppc64 and "
"other architectures are likely to have a different design for nesting."
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:42
msgid ""
"For example, s390x always has an LPAR (LogicalPARtition) hypervisor running "
"on bare metal, adding another layer and resulting in at least four levels in "
"a nested setup — L0 (bare metal, running the LPAR hypervisor), L1 (host "
"hypervisor), L2 (guest hypervisor), L3 (nested guest)."
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:48
msgid ""
"This document will stick with the three-level terminology (L0, L1, and L2) "
"for all architectures; and will largely focus on x86."
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:54
msgid "Use Cases"
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:56
msgid ""
"There are several scenarios where nested KVM can be useful, to name a few:"
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:59
msgid ""
"As a developer, you want to test your software on different operating "
"systems (OSes).  Instead of renting multiple VMs from a Cloud Provider, "
"using nested KVM lets you rent a large enough \"guest hypervisor\" (level-1 "
"guest).  This in turn allows you to create multiple nested guests (level-2 "
"guests), running different OSes, on which you can develop and test your "
"software."
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:66
msgid ""
"Live migration of \"guest hypervisors\" and their nested guests, for load "
"balancing, disaster recovery, etc."
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:69
msgid ""
"VM image creation tools (e.g. ``virt-install``,  etc) often run their own "
"VM, and users expect these to work inside a VM."
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:72
msgid ""
"Some OSes use virtualization internally for security (e.g. to let "
"applications run safely in isolation)."
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:77
msgid "Enabling \"nested\" (x86)"
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:79
msgid ""
"From Linux kernel v4.20 onwards, the ``nested`` KVM parameter is enabled by "
"default for Intel and AMD.  (Though your Linux distribution might override "
"this default.)"
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:83
msgid ""
"In case you are running a Linux kernel older than v4.19, to enable nesting, "
"set the ``nested`` KVM module parameter to ``Y`` or ``1``.  To persist this "
"setting across reboots, you can add it in a config file, as shown below:"
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:88
msgid ""
"On the bare metal host (L0), list the kernel modules and ensure that the KVM "
"modules::"
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:95
msgid "Show information for ``kvm_intel`` module::"
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:100
msgid ""
"For the nested KVM configuration to persist across reboots, place the below "
"in ``/etc/modprobed/kvm_intel.conf`` (create the file if it doesn't exist)::"
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:107
msgid "Unload and re-load the KVM Intel module::"
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:112
msgid "Verify if the ``nested`` parameter for KVM is enabled::"
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:117
msgid ""
"For AMD hosts, the process is the same as above, except that the module name "
"is ``kvm-amd``."
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:122
msgid "Additional nested-related kernel parameters (x86)"
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:124
msgid ""
"If your hardware is sufficiently advanced (Intel Haswell processor or "
"higher, which has newer hardware virt extensions), the following additional "
"features will also be enabled by default: \"Shadow VMCS (Virtual Machine "
"Control Structure)\", APIC Virtualization on your bare metal host (L0).  "
"Parameters for Intel hosts::"
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:139
msgid ""
"If you suspect your L2 (i.e. nested guest) is running slower, ensure the "
"above are enabled (particularly ``enable_shadow_vmcs`` and ``ept``)."
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:145
msgid "Starting a nested guest (x86)"
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:147
msgid ""
"Once your bare metal host (L0) is configured for nesting, you should be able "
"to start an L1 guest with::"
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:152
msgid ""
"The above will pass through the host CPU's capabilities as-is to the guest, "
"or for better live migration compatibility, use a named CPU model supported "
"by QEMU. e.g.::"
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:158
msgid ""
"then the guest hypervisor will subsequently be capable of running a nested "
"guest with accelerated KVM."
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:163
msgid "Enabling \"nested\" (s390x)"
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:165
msgid "On the host hypervisor (L0), enable the ``nested`` parameter on s390x::"
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:171
msgid ""
"On s390x, the kernel parameter ``hpage`` is mutually exclusive with the "
"``nested`` parameter — i.e. to be able to enable ``nested``, the ``hpage`` "
"parameter *must* be disabled."
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:175
msgid ""
"The guest hypervisor (L1) must be provided with the ``sie`` CPU feature — "
"with QEMU, this can be done by using \"host passthrough\" (via the command-"
"line ``-cpu host``)."
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:179
msgid "Now the KVM module can be loaded in the L1 (guest hypervisor)::"
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:185
msgid "Live migration with nested KVM"
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:187
msgid ""
"Migrating an L1 guest, with a  *live* nested guest in it, to another bare "
"metal host, works as of Linux kernel 5.3 and QEMU 4.2.0 for Intel x86 "
"systems, and even on older versions for s390x."
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:191
msgid ""
"On AMD systems, once an L1 guest has started an L2 guest, the L1 guest "
"should no longer be migrated or saved (refer to QEMU documentation on "
"\"savevm\"/\"loadvm\") until the L2 guest shuts down.  Attempting to migrate "
"or save-and-load an L1 guest while an L2 guest is running will result in "
"undefined behavior.  You might see a ``kernel BUG!`` entry in ``dmesg``, a "
"kernel 'oops', or an outright kernel panic.  Such a migrated or loaded L1 "
"guest can no longer be considered stable or secure, and must be restarted. "
"Migrating an L1 guest merely configured to support nesting, while not "
"actually running L2 guests, is expected to function normally even on AMD "
"systems but may fail once guests are started."
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:202
msgid ""
"Migrating an L2 guest is always expected to succeed, so all the following "
"scenarios should work even on AMD systems:"
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:205
msgid ""
"Migrating a nested guest (L2) to another L1 guest on the *same* bare metal "
"host."
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:208
msgid ""
"Migrating a nested guest (L2) to another L1 guest on a *different* bare "
"metal host."
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:211
msgid "Migrating a nested guest (L2) to a bare metal host."
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:214
msgid "Reporting bugs from nested setups"
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:216
msgid ""
"Debugging \"nested\" problems can involve sifting through log files across "
"L0, L1 and L2; this can result in tedious back-n-forth between the bug "
"reporter and the bug fixer."
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:220
msgid ""
"Mention that you are in a \"nested\" setup.  If you are running any kind of "
"\"nesting\" at all, say so.  Unfortunately, this needs to be called out "
"because when reporting bugs, people tend to forget to even *mention* that "
"they're using nested virtualization."
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:225
msgid ""
"Ensure you are actually running KVM on KVM.  Sometimes people do not have "
"KVM enabled for their guest hypervisor (L1), which results in them running "
"with pure emulation or what QEMU calls it as \"TCG\", but they think they're "
"running nested KVM.  Thus confusing \"nested Virt\" (which could also mean, "
"QEMU on KVM) with \"nested KVM\" (KVM on KVM)."
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:232
msgid "Information to collect (generic)"
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:234
msgid ""
"The following is not an exhaustive list, but a very good starting point:"
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:236
msgid "Kernel, libvirt, and QEMU version from L0"
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:238
msgid "Kernel, libvirt and QEMU version from L1"
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:240
msgid ""
"QEMU command-line of L1 -- when using libvirt, you'll find it here: ``/var/"
"log/libvirt/qemu/instance.log``"
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:243
msgid ""
"QEMU command-line of L2 -- as above, when using libvirt, get the complete "
"libvirt-generated QEMU command-line"
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:246
msgid "``cat /sys/cpuinfo`` from L0"
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:248
msgid "``cat /sys/cpuinfo`` from L1"
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:250
msgid "``lscpu`` from L0"
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:252
msgid "``lscpu`` from L1"
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:254
msgid "Full ``dmesg`` output from L0"
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:256
msgid "Full ``dmesg`` output from L1"
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:259
msgid "x86-specific info to collect"
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:261
msgid ""
"Both the below commands, ``x86info`` and ``dmidecode``, should be available "
"on most Linux distributions with the same name:"
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:264
msgid "Output of: ``x86info -a`` from L0"
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:266
msgid "Output of: ``x86info -a`` from L1"
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:268
msgid "Output of: ``dmidecode`` from L0"
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:270
msgid "Output of: ``dmidecode`` from L1"
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:273
msgid "s390x-specific info to collect"
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:275
msgid ""
"Along with the earlier mentioned generic details, the below is also "
"recommended:"
msgstr ""

#: ../../../virt/kvm/x86/running-nested-guests.rst:278
msgid "``/proc/sysinfo`` from L1; this will also include the info from L0"
msgstr ""
