# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../sound/soc/overview.rst:3
msgid "ALSA SoC Layer Overview"
msgstr ""

#: ../../../sound/soc/overview.rst:5
msgid ""
"The overall project goal of the ALSA System on Chip (ASoC) layer is to "
"provide better ALSA support for embedded system-on-chip processors (e.g. "
"pxa2xx, au1x00, iMX, etc) and portable audio codecs.  Prior to the ASoC "
"subsystem there was some support in the kernel for SoC audio, however it had "
"some limitations:-"
msgstr ""

#: ../../../sound/soc/overview.rst:11
msgid ""
"Codec drivers were often tightly coupled to the underlying SoC CPU. This is "
"not ideal and leads to code duplication - for example, Linux had different "
"wm8731 drivers for 4 different SoC platforms."
msgstr ""

#: ../../../sound/soc/overview.rst:15
msgid ""
"There was no standard method to signal user initiated audio events (e.g. "
"Headphone/Mic insertion, Headphone/Mic detection after an insertion event). "
"These are quite common events on portable devices and often require machine "
"specific code to re-route audio, enable amps, etc., after such an event."
msgstr ""

#: ../../../sound/soc/overview.rst:21
msgid ""
"Drivers tended to power up the entire codec when playing (or recording) "
"audio. This is fine for a PC, but tends to waste a lot of power on portable "
"devices. There was also no support for saving power via changing codec "
"oversampling rates, bias currents, etc."
msgstr ""

#: ../../../sound/soc/overview.rst:28
msgid "ASoC Design"
msgstr ""

#: ../../../sound/soc/overview.rst:30
msgid ""
"The ASoC layer is designed to address these issues and provide the following "
"features :-"
msgstr ""

#: ../../../sound/soc/overview.rst:33
msgid ""
"Codec independence. Allows reuse of codec drivers on other platforms and "
"machines."
msgstr ""

#: ../../../sound/soc/overview.rst:36
msgid ""
"Easy I2S/PCM audio interface setup between codec and SoC. Each SoC interface "
"and codec registers its audio interface capabilities with the core and are "
"subsequently matched and configured when the application hardware parameters "
"are known."
msgstr ""

#: ../../../sound/soc/overview.rst:41
msgid ""
"Dynamic Audio Power Management (DAPM). DAPM automatically sets the codec to "
"its minimum power state at all times. This includes powering up/down "
"internal power blocks depending on the internal codec audio routing and any "
"active streams."
msgstr ""

#: ../../../sound/soc/overview.rst:46
msgid ""
"Pop and click reduction. Pops and clicks can be reduced by powering the "
"codec up/down in the correct sequence (including using digital mute). ASoC "
"signals the codec when to change power states."
msgstr ""

#: ../../../sound/soc/overview.rst:50
msgid ""
"Machine specific controls: Allow machines to add controls to the sound card "
"(e.g. volume control for speaker amplifier)."
msgstr ""

#: ../../../sound/soc/overview.rst:53
msgid ""
"To achieve all this, ASoC basically splits an embedded audio system into "
"multiple re-usable component drivers :-"
msgstr ""

#: ../../../sound/soc/overview.rst:56
msgid ""
"Codec class drivers: The codec class driver is platform independent and "
"contains audio controls, audio interface capabilities, codec DAPM definition "
"and codec IO functions. This class extends to BT, FM and MODEM ICs if "
"required. Codec class drivers should be generic code that can run on any "
"architecture and machine."
msgstr ""

#: ../../../sound/soc/overview.rst:62
msgid ""
"Platform class drivers: The platform class driver includes the audio DMA "
"engine driver, digital audio interface (DAI) drivers (e.g. I2S, AC97, PCM) "
"and any audio DSP drivers for that platform."
msgstr ""

#: ../../../sound/soc/overview.rst:66
msgid ""
"Machine class driver: The machine driver class acts as the glue that "
"describes and binds the other component drivers together to form an ALSA "
"\"sound card device\". It handles any machine specific controls and machine "
"level audio events (e.g. turning on an amp at start of playback)."
msgstr ""
