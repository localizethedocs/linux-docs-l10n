# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../infiniband/opa_vnic.rst:3
msgid "Intel Omni-Path (OPA) Virtual Network Interface Controller (VNIC)"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:5
msgid ""
"Intel Omni-Path (OPA) Virtual Network Interface Controller (VNIC) feature "
"supports Ethernet functionality over Omni-Path fabric by encapsulating the "
"Ethernet packets between HFI nodes."
msgstr ""

#: ../../../infiniband/opa_vnic.rst:10
msgid "Architecture"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:11
msgid ""
"The patterns of exchanges of Omni-Path encapsulated Ethernet packets "
"involves one or more virtual Ethernet switches overlaid on the Omni-Path "
"fabric topology. A subset of HFI nodes on the Omni-Path fabric are permitted "
"to exchange encapsulated Ethernet packets across a particular virtual "
"Ethernet switch. The virtual Ethernet switches are logical abstractions "
"achieved by configuring the HFI nodes on the fabric for header generation "
"and processing. In the simplest configuration all HFI nodes across the "
"fabric exchange encapsulated Ethernet packets over a single virtual Ethernet "
"switch. A virtual Ethernet switch, is effectively an independent Ethernet "
"network. The configuration is performed by an Ethernet Manager (EM) which is "
"part of the trusted Fabric Manager (FM) application. HFI nodes can have "
"multiple VNICs each connected to a different virtual Ethernet switch. The "
"below diagram presents a case of two virtual Ethernet switches with two HFI "
"nodes::"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:52
msgid ""
"The Omni-Path encapsulated Ethernet packet format is as described below."
msgstr ""

#: ../../../infiniband/opa_vnic.rst:55
msgid "Bits"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:55
msgid "Field"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:57
msgid "Quad Word 0:"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:58
msgid "0-19"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:58
msgid "SLID (lower 20 bits)"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:59
msgid "20-30"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:59
msgid "Length (in Quad Words)"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:60
msgid "31"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:60
msgid "BECN bit"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:61
msgid "32-51"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:61
msgid "DLID (lower 20 bits)"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:62
msgid "52-56"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:62
msgid "SC (Service Class)"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:63
msgid "57-59"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:63
msgid "RC (Routing Control)"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:64
msgid "60"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:64
msgid "FECN bit"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:65
msgid "61-62"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:65
msgid "L2 (=10, 16B format)"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:66
msgid "63"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:66
msgid "LT (=1, Link Transfer Head Flit)"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:68
msgid "Quad Word 1:"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:69
msgid "0-7"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:69
msgid "L4 type (=0x78 ETHERNET)"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:70
msgid "8-11"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:70
msgid "SLID[23:20]"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:71
msgid "12-15"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:71
msgid "DLID[23:20]"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:72 ../../../infiniband/opa_vnic.rst:78
msgid "16-31"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:72
msgid "PKEY"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:73
msgid "32-47"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:73
msgid "Entropy"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:74
msgid "48-63"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:74 ../../../infiniband/opa_vnic.rst:77
msgid "Reserved"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:76
msgid "Quad Word 2:"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:77
msgid "0-15"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:78
msgid "L4 header"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:79
msgid "32-63"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:79
msgid "Ethernet Packet"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:81
msgid "Quad Words 3 to N-1:"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:82
msgid "0-63"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:82 ../../../infiniband/opa_vnic.rst:85
msgid "Ethernet packet (pad extended)"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:84
msgid "Quad Word N (last):"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:85
msgid "0-23"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:86
msgid "24-55"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:86
msgid "ICRC"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:87
msgid "56-61"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:87
msgid "Tail"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:88
msgid "62-63"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:88
msgid "LT (=01, Link Transfer Tail Flit)"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:91
msgid ""
"Ethernet packet is padded on the transmit side to ensure that the VNIC OPA "
"packet is quad word aligned. The 'Tail' field contains the number of bytes "
"padded. On the receive side the 'Tail' field is read and the padding is "
"removed (along with ICRC, Tail and OPA header) before passing packet up the "
"network stack."
msgstr ""

#: ../../../infiniband/opa_vnic.rst:97
msgid ""
"The L4 header field contains the virtual Ethernet switch id the VNIC port "
"belongs to. On the receive side, this field is used to de-multiplex the "
"received VNIC packets to different VNIC ports."
msgstr ""

#: ../../../infiniband/opa_vnic.rst:102
msgid "Driver Design"
msgstr ""

#: ../../../infiniband/opa_vnic.rst:103
msgid ""
"Intel OPA VNIC software design is presented in the below diagram. OPA VNIC "
"functionality has a HW dependent component and a HW independent component."
msgstr ""

#: ../../../infiniband/opa_vnic.rst:107
msgid ""
"The support has been added for IB device to allocate and free the RDMA "
"netdev devices. The RDMA netdev supports interfacing with the network stack "
"thus creating standard network interfaces. OPA_VNIC is an RDMA netdev device "
"type."
msgstr ""

#: ../../../infiniband/opa_vnic.rst:112
msgid ""
"The HW dependent VNIC functionality is part of the HFI1 driver. It "
"implements the verbs to allocate and free the OPA_VNIC RDMA netdev. It "
"involves HW resource allocation/management for VNIC functionality. It "
"interfaces with the network stack and implements the required net_device_ops "
"functions. It expects Omni-Path encapsulated Ethernet packets in the "
"transmit path and provides HW access to them. It strips the Omni-Path header "
"from the received packets before passing them up the network stack. It also "
"implements the RDMA netdev control operations."
msgstr ""

#: ../../../infiniband/opa_vnic.rst:121
msgid ""
"The OPA VNIC module implements the HW independent VNIC functionality. It "
"consists of two parts. The VNIC Ethernet Management Agent (VEMA) registers "
"itself with IB core as an IB client and interfaces with the IB MAD stack. It "
"exchanges the management information with the Ethernet Manager (EM) and the "
"VNIC netdev. The VNIC netdev part allocates and frees the OPA_VNIC RDMA "
"netdev devices. It overrides the net_device_ops functions set by HW "
"dependent VNIC driver where required to accommodate any control operation. "
"It also handles the encapsulation of Ethernet packets with an Omni-Path "
"header in the transmit path. For each VNIC interface, the information "
"required for encapsulation is configured by the EM via VEMA MAD interface. "
"It also passes any control information to the HW dependent driver by "
"invoking the RDMA netdev control operations::"
msgstr ""
