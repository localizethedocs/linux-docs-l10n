# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../driver-api/80211/mac80211.rst:3
msgid "mac80211 subsystem (basics)"
msgstr ""

#: ../../../driver-api/80211/mac80211.rst:5
msgid ""
"You should read and understand the information contained within this part of "
"the book while implementing a mac80211 driver. In some chapters, advanced "
"usage is noted, those may be skipped if this isn't needed."
msgstr ""

#: ../../../driver-api/80211/mac80211.rst:9
msgid ""
"This part of the book only covers station and monitor mode functionality, "
"additional information required to implement the other modes is covered in "
"the second part of the book."
msgstr ""

#: ../../../driver-api/80211/mac80211.rst:14
msgid "Basic hardware handling"
msgstr ""

#: ../../../driver-api/80211/mac80211.rst:16
#: ../../../driver-api/80211/mac80211.rst:47
#: ../../../driver-api/80211/mac80211.rst:60
#: ../../../driver-api/80211/mac80211.rst:83
msgid "TBD"
msgstr ""

#: ../../../driver-api/80211/mac80211.rst:18
msgid ""
"This chapter shall contain information on getting a hw struct allocated and "
"registered with mac80211."
msgstr ""

#: ../../../driver-api/80211/mac80211.rst:21
msgid ""
"Since it is required to allocate rates/modes before registering a hw struct, "
"this chapter shall also contain information on setting up the rate/mode "
"structs."
msgstr ""

#: ../../../driver-api/80211/mac80211.rst:25
msgid ""
"Additionally, some discussion about the callbacks and the general "
"programming model should be in here, including the definition of "
"ieee80211_ops which will be referred to a lot."
msgstr ""

#: ../../../driver-api/80211/mac80211.rst:29
msgid ""
"Finally, a discussion of hardware capabilities should be done with "
"references to other parts of the book."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2622
msgid "hardware flags"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:871
#: include/net/mac80211.h:1008 include/net/mac80211.h:1085
#: include/net/mac80211.h:1434 include/net/mac80211.h:1574
#: ../../../driver-api/80211/mac80211:143: include/net/mac80211.h:3651
#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2626
#: ../../../driver-api/80211/mac80211:52: include/net/mac80211.h:1699
msgid "**Constants**"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2628
msgid "``IEEE80211_HW_HAS_RATE_CONTROL``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2629
msgid ""
"The hardware or firmware includes rate control, and cannot be controlled by "
"the stack. As such, no rate control algorithm should be instantiated, and "
"the TX rate reported to userspace will be taken from the TX status instead "
"of the rate control algorithm. Note that this requires that the driver "
"implement a number of callbacks so it has the correct information, it needs "
"to have the **set_rts_threshold** callback and must look at the BSS config "
"**use_cts_prot** for G/N protection, **use_short_slot** for slot timing in "
"2.4 GHz and **use_short_preamble** for preambles for CCK frames."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2641
msgid "``IEEE80211_HW_RX_INCLUDES_FCS``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2642
msgid ""
"Indicates that received frames passed to the stack include the FCS at the "
"end."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2645
msgid "``IEEE80211_HW_HOST_BROADCAST_PS_BUFFERING``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2646
msgid ""
"Some wireless LAN chipsets buffer broadcast/multicast frames for power "
"saving stations in the hardware/firmware and others rely on the host system "
"for such buffering. This option is used to configure the IEEE 802.11 upper "
"layer to buffer broadcast and multicast frames when there are power saving "
"stations so that the driver can fetch them with ieee80211_get_buffered_bc()."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2653
msgid "``IEEE80211_HW_SIGNAL_UNSPEC``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2654
msgid ""
"Hardware can provide signal values but we don't know its units. We expect "
"values between 0 and **max_signal**. If possible please provide dB or dBm "
"instead."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2658
msgid "``IEEE80211_HW_SIGNAL_DBM``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2659
msgid ""
"Hardware gives signal values in dBm, decibel difference from one milliwatt. "
"This is the preferred method since it is standardized between different "
"devices. **max_signal** does not need to be set."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2663
msgid "``IEEE80211_HW_NEED_DTIM_BEFORE_ASSOC``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2664
msgid ""
"This device needs to get data from beacon before association (i.e. "
"dtim_period)."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2667
msgid "``IEEE80211_HW_SPECTRUM_MGMT``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2668
msgid ""
"Hardware supports spectrum management defined in 802.11h Measurement, "
"Channel Switch, Quieting, TPC"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2671
msgid "``IEEE80211_HW_AMPDU_AGGREGATION``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2672
msgid "Hardware supports 11n A-MPDU aggregation."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2674
msgid "``IEEE80211_HW_SUPPORTS_PS``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2675
msgid "Hardware has power save support (i.e. can go to sleep)."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2677
msgid "``IEEE80211_HW_PS_NULLFUNC_STACK``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2678
msgid ""
"Hardware requires nullfunc frame handling in stack, implies stack support "
"for dynamic PS."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2681
msgid "``IEEE80211_HW_SUPPORTS_DYNAMIC_PS``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2682
msgid "Hardware has support for dynamic PS."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2684
msgid "``IEEE80211_HW_MFP_CAPABLE``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2685
msgid "Hardware supports management frame protection (MFP, IEEE 802.11w)."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2687
msgid "``IEEE80211_HW_WANT_MONITOR_VIF``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2688
msgid ""
"The driver would like to be informed of a virtual monitor interface when "
"monitor interfaces are the only active interfaces."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2692
msgid "``IEEE80211_HW_NO_VIRTUAL_MONITOR``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2693
msgid ""
"The driver would like to be informed of any monitor interface, as well as "
"their configured channel. This is useful for supporting multiple monitor "
"interfaces on different channels."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2698
msgid "``IEEE80211_HW_NO_AUTO_VIF``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2699
msgid ""
"The driver would like for no wlanX to be created.  It is expected user-space "
"will create vifs as desired (and thus have them named as desired)."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2703
msgid "``IEEE80211_HW_SW_CRYPTO_CONTROL``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2704
msgid ""
"The driver wants to control which of the crypto algorithms can be done in "
"software - so don't automatically try to fall back to it if hardware crypto "
"fails, but do so only if the driver returns 1. This also forces the driver "
"to advertise its supported cipher suites."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2710
msgid "``IEEE80211_HW_SUPPORT_FAST_XMIT``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2711
msgid ""
"The driver/hardware supports fast-xmit, this currently requires only the "
"ability to calculate the duration for frames."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2715
msgid "``IEEE80211_HW_REPORTS_TX_ACK_STATUS``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2716
msgid "Hardware can provide ack status reports of Tx frames to the stack."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2719
msgid "``IEEE80211_HW_CONNECTION_MONITOR``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2720
msgid ""
"The hardware performs its own connection monitoring, including periodic keep-"
"alives to the AP and probing the AP on beacon loss."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2723
msgid "``IEEE80211_HW_QUEUE_CONTROL``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2724
msgid ""
"The driver wants to control per-interface queue mapping in order to use "
"different queues (not just one per AC) for different virtual interfaces. See "
"the doc section on HW queue control for more details."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2729
msgid "``IEEE80211_HW_SUPPORTS_PER_STA_GTK``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2730
msgid ""
"The device's crypto engine supports per-station GTKs as used by IBSS RSN or "
"during fast transition. If the device doesn't support per-station GTKs, but "
"can be asked not to decrypt group addressed frames, then IBSS RSN support is "
"still possible but software crypto will be used. Advertise the wiphy flag "
"only in that case."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2737
msgid "``IEEE80211_HW_AP_LINK_PS``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2738
msgid ""
"When operating in AP mode the device autonomously manages the PS status of "
"connected stations. When this flag is set mac80211 will not trigger PS mode "
"for connected stations based on the PM bit of incoming frames. Use "
"ieee80211_start_ps()/ieee8021_end_ps() to manually configure the PS mode of "
"connected stations."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2745
msgid "``IEEE80211_HW_TX_AMPDU_SETUP_IN_HW``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2746
msgid ""
"The device handles TX A-MPDU session setup strictly in HW. mac80211 should "
"not attempt to do this in software."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2750
msgid "``IEEE80211_HW_SUPPORTS_RC_TABLE``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2751
msgid ""
"The driver supports using a rate selection table provided by the rate "
"control algorithm."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2754
msgid "``IEEE80211_HW_P2P_DEV_ADDR_FOR_INTF``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2755
msgid ""
"Use the P2P Device address for any P2P Interface. This will be honoured even "
"if more than one interface is supported."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2759
msgid "``IEEE80211_HW_TIMING_BEACON_ONLY``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2760
msgid ""
"Use sync timing from beacon frames only, to allow getting TBTT of a DTIM "
"beacon."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2763
msgid "``IEEE80211_HW_SUPPORTS_HT_CCK_RATES``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2764
msgid ""
"Hardware supports mixing HT/CCK rates and can cope with CCK rates in an "
"aggregation session (e.g. by not using aggregation for such frames.)"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2768
msgid "``IEEE80211_HW_CHANCTX_STA_CSA``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2769
msgid ""
"Support 802.11h based channel-switch (CSA) for a single active channel while "
"using channel contexts. When support is not enabled the default action is to "
"disconnect when getting the CSA frame."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2774
msgid "``IEEE80211_HW_SUPPORTS_CLONED_SKBS``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2775
msgid ""
"The driver will never modify the payload or tailroom of TX skbs without "
"copying them first."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2778
msgid "``IEEE80211_HW_SINGLE_SCAN_ON_ALL_BANDS``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2779
msgid ""
"The HW supports scanning on all bands in one command, mac80211 doesn't have "
"to run separate scans per band."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2782
msgid "``IEEE80211_HW_TDLS_WIDER_BW``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2783
msgid ""
"The device/driver supports wider bandwidth than then BSS bandwidth for a "
"TDLS link on the base channel."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2786
msgid "``IEEE80211_HW_SUPPORTS_AMSDU_IN_AMPDU``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2787
msgid "The driver supports receiving A-MSDUs within A-MPDU."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2790
msgid "``IEEE80211_HW_BEACON_TX_STATUS``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2791
msgid "The device/driver provides TX status for sent beacons."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2794
msgid "``IEEE80211_HW_NEEDS_UNIQUE_STA_ADDR``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2795
msgid ""
"Hardware (or driver) requires that each station has a unique address, i.e. "
"each station entry can be identified by just its MAC address; this prevents, "
"for example, the same station from connecting to two virtual AP interfaces "
"at the same time."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2800
msgid "``IEEE80211_HW_SUPPORTS_REORDERING_BUFFER``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2801
msgid ""
"Hardware (or driver) manages the reordering buffer internally, guaranteeing "
"mac80211 receives frames in order and does not need to manage its own "
"reorder buffer or BA session timeout."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2806
msgid "``IEEE80211_HW_USES_RSS``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2807
msgid ""
"The device uses RSS and thus requires parallel RX, which implies using per-"
"CPU station statistics."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2810
msgid "``IEEE80211_HW_TX_AMSDU``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2811
msgid ""
"Hardware (or driver) supports software aggregated A-MSDU frames. Requires "
"software tx queueing and fast-xmit support. When not using minstrel/"
"minstrel_ht rate control, the driver must limit the maximum A-MSDU size "
"based on the current tx rate by setting max_rc_amsdu_len in struct "
"ieee80211_sta."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2817
msgid "``IEEE80211_HW_TX_FRAG_LIST``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2818
msgid ""
"Hardware (or driver) supports sending frag_list skbs, needed for zero-copy "
"software A-MSDU."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2821
msgid "``IEEE80211_HW_REPORTS_LOW_ACK``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2822
msgid ""
"The driver (or firmware) reports low ack event by ieee80211_report_low_ack() "
"based on its own algorithm. For such drivers, mac80211 packet loss mechanism "
"will not be triggered and driver is completely depending on firmware event "
"for station kickout."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2827
msgid "``IEEE80211_HW_SUPPORTS_TX_FRAG``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2828
msgid ""
"Hardware does fragmentation by itself. The stack will not do fragmentation. "
"The callback for **set_frag_threshold** should be set as well."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2832
msgid "``IEEE80211_HW_SUPPORTS_TDLS_BUFFER_STA``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2833
msgid "Hardware supports buffer STA on TDLS links."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2836
msgid "``IEEE80211_HW_DOESNT_SUPPORT_QOS_NDP``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2837
msgid ""
"The driver (or firmware) doesn't support QoS NDP for AP probing - that's "
"most likely a driver bug."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2840
msgid "``IEEE80211_HW_BUFF_MMPDU_TXQ``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2841
msgid ""
"use the TXQ for bufferable MMPDUs, this of course requires the driver to use "
"TXQs to start with."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2844
msgid "``IEEE80211_HW_SUPPORTS_VHT_EXT_NSS_BW``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2845
msgid ""
"(Hardware) rate control supports VHT extended NSS BW "
"(dot11VHTExtendedNSSBWCapable). This flag will be set if the selected rate "
"control algorithm sets ``RATE_CTRL_CAPA_VHT_EXT_NSS_BW`` but if the rate "
"control is built-in then it must be set by the driver. See also the "
"documentation for that flag."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2851
msgid "``IEEE80211_HW_STA_MMPDU_TXQ``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2852
msgid ""
"use the extra non-TID per-station TXQ for all MMPDUs on station interfaces. "
"This of course requires the driver to use TXQs to start with."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2856
msgid "``IEEE80211_HW_TX_STATUS_NO_AMPDU_LEN``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2857
msgid "Driver does not report accurate A-MPDU length in tx status information"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2860
msgid "``IEEE80211_HW_SUPPORTS_MULTI_BSSID``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2861
msgid "Hardware supports multi BSSID"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2863
msgid "``IEEE80211_HW_SUPPORTS_ONLY_HE_MULTI_BSSID``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2864
msgid ""
"Hardware supports multi BSSID only for HE APs. Applies if "
"**IEEE80211_HW_SUPPORTS_MULTI_BSSID** is set."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2867
msgid "``IEEE80211_HW_AMPDU_KEYBORDER_SUPPORT``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2868
msgid ""
"The card and driver is only aggregating MPDUs with the same keyid, allowing "
"mac80211 to keep Tx A-MPDU sessions active while rekeying with Extended Key "
"ID."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2872
msgid "``IEEE80211_HW_SUPPORTS_TX_ENCAP_OFFLOAD``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2873
msgid "Hardware supports tx encapsulation offload"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2876
msgid "``IEEE80211_HW_SUPPORTS_RX_DECAP_OFFLOAD``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2877
msgid "Hardware supports rx decapsulation offload"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2880
msgid "``IEEE80211_HW_SUPPORTS_CONC_MON_RX_DECAP``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2881
msgid ""
"Hardware supports concurrent rx decapsulation offload and passing raw 802.11 "
"frames for monitor iface. If this is supported, the driver must pass both "
"802.3 frames for real usage and 802.11 frames with ``RX_FLAG_ONLY_MONITOR`` "
"set for monitor to the stack."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2887
msgid "``IEEE80211_HW_DETECTS_COLOR_COLLISION``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2888
msgid ""
"HW/driver has support for BSS color collision detection and doesn't need it "
"in software."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2891
msgid "``IEEE80211_HW_MLO_MCAST_MULTI_LINK_TX``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2892
msgid ""
"Hardware/driver handles transmitting multicast frames on all links, mac80211 "
"should not do that."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2895
msgid "``IEEE80211_HW_DISALLOW_PUNCTURING``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2896
msgid ""
"HW requires disabling puncturing in EHT and connecting with a lower "
"bandwidth instead"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2899
msgid "``IEEE80211_HW_HANDLES_QUIET_CSA``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2900
msgid ""
"HW/driver handles quieting for CSA, so no need to stop queues. This really "
"should be set by a driver that implements MLO, so operation can continue on "
"other links when one link is switching."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2905
msgid "``IEEE80211_HW_STRICT``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2906
msgid ""
"strictly enforce certain things mandated by the spec but otherwise ignored/"
"worked around for interoperability. This is a HW flag so drivers can opt in "
"according to their own control, e.g. in testing."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2911
msgid "``NUM_IEEE80211_HW_FLAGS``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2912
msgid "number of hardware flags, used for sizing arrays"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1025
#: include/net/mac80211.h:1061 include/net/mac80211.h:1126
#: include/net/mac80211.h:1142 include/net/mac80211.h:1247
#: include/net/mac80211.h:1403 include/net/mac80211.h:1589
#: include/net/mac80211.h:1654 include/net/mac80211.h:5208
#: include/net/mac80211.h:5226 include/net/mac80211.h:5241
#: include/net/mac80211.h:5411 include/net/mac80211.h:5471
#: include/net/mac80211.h:5491 include/net/mac80211.h:5812
#: include/net/mac80211.h:5829 include/net/mac80211.h:5848
#: include/net/mac80211.h:5866 include/net/mac80211.h:5885
#: include/net/mac80211.h:6106 include/net/mac80211.h:6115
#: include/net/mac80211.h:6124 include/net/mac80211.h:6135
#: include/net/mac80211.h:6143 ../../../driver-api/80211/mac80211:143:
#: include/net/mac80211.h:3689 ../../../driver-api/80211/mac80211:152:
#: include/net/mac80211.h:6331 include/net/mac80211.h:6343
#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2914
#: include/net/mac80211.h:3063 include/net/mac80211.h:4511
#: include/net/mac80211.h:4937 include/net/mac80211.h:4955
#: include/net/mac80211.h:5111 include/net/mac80211.h:5122
#: ../../../driver-api/80211/mac80211:52: include/net/mac80211.h:1726
#: include/net/mac80211.h:1805 ../../../driver-api/80211/mac80211:74:
#: include/net/mac80211.h:2037
msgid "**Description**"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2623
msgid ""
"These flags are used to indicate hardware capabilities to the stack. "
"Generally, flags here should have their meaning done in a way that the "
"simplest hardware doesn't need setting any particular flags. There are some "
"exceptions to this rule, however, so you are advised to review these flags "
"carefully."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2936
msgid "hardware information and state"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1139
#: include/net/mac80211.h:1204 include/net/mac80211.h:1606
#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2940
#: include/net/mac80211.h:3856 ../../../driver-api/80211/mac80211:52:
#: include/net/mac80211.h:1774 ../../../driver-api/80211/mac80211:74:
#: include/net/mac80211.h:1985
msgid "**Definition**::"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1146
#: include/net/mac80211.h:1252 include/net/mac80211.h:1643
#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2981
#: include/net/mac80211.h:3996 ../../../driver-api/80211/mac80211:52:
#: include/net/mac80211.h:1787 ../../../driver-api/80211/mac80211:74:
#: include/net/mac80211.h:2011
msgid "**Members**"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2947
msgid "``conf``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2948
msgid ""
":c:type:`struct ieee80211_conf <ieee80211_conf>`, device configuration, "
"don't use."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2941
msgid "``wiphy``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2942
msgid ""
"This points to the :c:type:`struct wiphy <wiphy>` allocated for this 802.11 "
"PHY. You must fill in the **perm_addr** and **dev** members of this "
"structure using SET_IEEE80211_DEV() and SET_IEEE80211_PERM_ADDR(). "
"Additionally, all supported bands (with channels, bitrates) are registered "
"here."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2970
msgid "``rate_control_algorithm``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2971
msgid ""
"rate control algorithm for this hardware. If unset (NULL), the default "
"algorithm will be used. Must be set before calling ieee80211_register_hw()."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2949
msgid "``priv``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2950
msgid ""
"pointer to private area that was allocated for driver use along with this "
"structure."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1138
#: include/net/mac80211.h:1207 ../../../driver-api/80211/mac80211:32:
#: include/net/mac80211.h:2952 ../../../driver-api/80211/mac80211:52:
#: include/net/mac80211.h:1774
msgid "``flags``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2953
msgid ""
"hardware flags, see :c:type:`enum ieee80211_hw_flags <ieee80211_hw_flags>`."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2954
msgid "``extra_tx_headroom``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2955
msgid ""
"headroom to reserve in each transmit skb for use by the driver (e.g. for "
"transmit headers.)"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2957
msgid "``extra_beacon_tailroom``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2958
msgid ""
"tailroom to reserve in each beacon tx skb. Can be used by drivers to add "
"extra IEs."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2974
msgid "``vif_data_size``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2975
msgid ""
"size (in bytes) of the drv_priv data area within :c:type:`struct "
"ieee80211_vif <ieee80211_vif>`."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2976
msgid "``sta_data_size``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2977
msgid ""
"size (in bytes) of the drv_priv data area within :c:type:`struct "
"ieee80211_sta <ieee80211_sta>`."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2978
msgid "``chanctx_data_size``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2979
msgid ""
"size (in bytes) of the drv_priv data area within :c:type:`struct "
"ieee80211_chanctx_conf <ieee80211_chanctx_conf>`."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2980
msgid "``txq_data_size``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2981
msgid ""
"size (in bytes) of the drv_priv data area within **struct** ieee80211_txq."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2966
msgid "``queues``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2967
msgid ""
"number of available hardware transmit queues for data packets. WMM/QoS "
"requires at least four, these queues need to have configurable access "
"parameters."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2963
msgid "``max_listen_interval``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2964
msgid "max listen interval in units of beacon interval that HW supports"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2960
msgid "``max_signal``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2961
msgid ""
"Maximum value for signal (rssi) in RX information, used only when "
"**IEEE80211_HW_SIGNAL_UNSPEC** or **IEEE80211_HW_SIGNAL_DB**"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2983
msgid "``max_rates``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2984
msgid "maximum number of alternate rate retry stages the hw can handle."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2985
msgid "``max_report_rates``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2986
msgid "maximum number of alternate rate retry stages the hw can report back."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2987
msgid "``max_rate_tries``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2988
msgid "maximum number of tries for each stage"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2989
msgid "``max_rx_aggregation_subframes``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2990
msgid ""
"maximum buffer size (number of sub-frames) to be used for A-MPDU block ack "
"receiver aggregation. This is only relevant if the device has restrictions "
"on the number of subframes, if it relies on mac80211 to do reordering it "
"shouldn't be set."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2996
msgid "``max_tx_aggregation_subframes``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2997
msgid ""
"maximum number of subframes in an aggregate an HT/HE device will transmit. "
"In HT AddBA we'll advertise a constant value of 64 as some older APs crash "
"if the window size is smaller (an example is LinkSys WRT120N with FW v1.0.07 "
"build 002 Jun 18 2012). For AddBA to HE capable peers this value will be "
"used."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3003
msgid "``max_tx_fragments``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3004
msgid ""
"maximum number of tx buffers per (A)-MSDU, sum of 1 + skb_shinfo(skb)-"
">nr_frags for each skb in the frag_list."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3006
msgid "``offchannel_tx_hw_queue``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3007
msgid ""
"HW queue ID to use for offchannel TX (if ``IEEE80211_HW_QUEUE_CONTROL`` is "
"set)"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3009
msgid "``radiotap_mcs_details``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3010
msgid ""
"lists which MCS information can the HW reports, by default it is set to "
"_MCS, _GI and _BW but doesn't include _FMT. Use "
"``IEEE80211_RADIOTAP_MCS_HAVE_``\\* values, only adding _BW is supported "
"today."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3014
msgid "``radiotap_vht_details``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3015
msgid ""
"lists which VHT MCS information the HW reports, the default is _GI | "
"_BANDWIDTH. Use the ``IEEE80211_RADIOTAP_VHT_KNOWN_``\\* values."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3018
msgid "``radiotap_timestamp``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3019
msgid ""
"Information for the radiotap timestamp field; if the **units_pos** member is "
"set to a non-negative value then the timestamp field will be added and "
"populated from the :c:type:`struct ieee80211_rx_status "
"<ieee80211_rx_status>` device_timestamp."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3022
msgid "``radiotap_timestamp.units_pos``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3023
msgid ""
"Must be set to a combination of a IEEE80211_RADIOTAP_TIMESTAMP_UNIT_* and a "
"IEEE80211_RADIOTAP_TIMESTAMP_SPOS_* value."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3025
msgid "``radiotap_timestamp.accuracy``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3026
msgid ""
"If non-negative, fills the accuracy in the radiotap field and the accuracy "
"known flag will be set."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3028
#: ../../../driver-api/80211/mac80211:74: include/net/mac80211.h:2010
msgid "``netdev_features``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3029
msgid ""
"netdev features to be set in each netdev created from this HW. Note that not "
"all features are usable with mac80211, other features will be rejected "
"during HW registration."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3032
msgid "``uapsd_queues``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3033
msgid ""
"This bitmap is included in (re)association frame to indicate for each access "
"category if it is uAPSD trigger-enabled and delivery- enabled. Use "
"IEEE80211_WMM_IE_STA_QOSINFO_AC_* to set this bitmap. Each bit corresponds "
"to different AC. Value '1' in specific bit means that corresponding AC is "
"both trigger- and delivery-enabled. '0' means neither enabled."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3039
msgid "``uapsd_max_sp_len``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3040
msgid ""
"maximum number of total buffered frames the WMM AP may deliver to a WMM STA "
"during any Service Period triggered by the WMM STA. Use "
"IEEE80211_WMM_IE_STA_QOSINFO_SP_* for correct values."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3043
msgid "``max_nan_de_entries``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3044
msgid "maximum number of NAN DE functions supported by the device."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3046
msgid "``tx_sk_pacing_shift``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3047
msgid ""
"Pacing shift to set on TCP sockets when frames from them are encountered. "
"The default should typically not be changed, unless the driver has good "
"reasons for needing more buffers."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3050
msgid "``weight_multiplier``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3051
msgid ""
"Driver specific airtime weight multiplier used while refilling deficit of "
"each TXQ."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3053
msgid "``max_mtu``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3054
msgid "the max mtu could be set."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3055
msgid "``tx_power_levels``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3056
msgid ""
"a list of power levels supported by the wifi hardware. The power levels can "
"be specified either as integer or fractions. The power level at idx 0 shall "
"be the maximum positive power level."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3059
msgid "``max_txpwr_levels_idx``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3060
msgid "the maximum valid idx of 'tx_power_levels' list."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:2937
msgid ""
"This structure contains the configuration and hardware information for an "
"802.11 PHY."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3168
msgid "set device for 802.11 hardware"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1403
#: include/net/mac80211.h:5193 include/net/mac80211.h:5218
#: include/net/mac80211.h:5233 include/net/mac80211.h:5400
#: include/net/mac80211.h:5464 include/net/mac80211.h:5484
#: include/net/mac80211.h:5808 include/net/mac80211.h:5827
#: include/net/mac80211.h:5844 include/net/mac80211.h:5864
#: include/net/mac80211.h:5882 include/net/mac80211.h:6106
#: include/net/mac80211.h:6115 include/net/mac80211.h:6124
#: include/net/mac80211.h:6136 include/net/mac80211.h:6144
#: ../../../driver-api/80211/mac80211:152: include/net/mac80211.h:6327
#: include/net/mac80211.h:6338 ../../../driver-api/80211/mac80211:32:
#: include/net/mac80211.h:3172 include/net/mac80211.h:3183
#: include/net/mac80211.h:4930 include/net/mac80211.h:4951
#: include/net/mac80211.h:5108 include/net/mac80211.h:5118
msgid "**Parameters**"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5195
#: include/net/mac80211.h:5220 include/net/mac80211.h:5235
#: include/net/mac80211.h:5402 include/net/mac80211.h:5466
#: include/net/mac80211.h:5486 include/net/mac80211.h:5810
#: include/net/mac80211.h:5829 include/net/mac80211.h:5846
#: include/net/mac80211.h:5866 include/net/mac80211.h:5884
#: include/net/mac80211.h:6108 include/net/mac80211.h:6117
#: include/net/mac80211.h:6126 include/net/mac80211.h:6138
#: include/net/mac80211.h:6146 ../../../driver-api/80211/mac80211:152:
#: include/net/mac80211.h:6329 include/net/mac80211.h:6340
#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3174
#: include/net/mac80211.h:3185 include/net/mac80211.h:4953
#: include/net/mac80211.h:5110 include/net/mac80211.h:5120
msgid "``struct ieee80211_hw *hw``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3170
msgid "the :c:type:`struct ieee80211_hw <ieee80211_hw>` to set the device for"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3172
msgid "``struct device *dev``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3171
msgid "the :c:type:`struct device <device>` of this 802.11 device"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3179
msgid "set the permanent MAC address for 802.11 hardware"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3181
msgid ""
"the :c:type:`struct ieee80211_hw <ieee80211_hw>` to set the MAC address for"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3183
msgid "``const u8 *addr``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3182
msgid "the address to set"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3852
msgid "callbacks from mac80211 to the driver"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3858
msgid "``tx``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3859
msgid ""
"Handler that 802.11 module calls for each transmitted frame. skb contains "
"the buffer starting from the IEEE 802.11 header. The low-level driver should "
"send the frame out based on configuration in the TX control data. This "
"handler should, preferably, never fail and stop queues appropriately. Must "
"be atomic."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3865
msgid "``start``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3866
msgid ""
"Called before the first netdevice attached to the hardware is enabled. This "
"should turn on the hardware and must turn on frame reception (for possibly "
"enabled monitor interfaces.) Returns negative error codes, these may be seen "
"in userspace, or zero. When the device is started it should not have a MAC "
"address to avoid acknowledging frames before a non-monitor device is added. "
"Must be implemented and can sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3875
msgid "``stop``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3876
msgid ""
"Called after last netdevice attached to the hardware is disabled. This "
"should turn off the hardware (at least it must turn off frame reception.) "
"May be called right after add_interface if that rejects an interface. If you "
"added any work onto the mac80211 workqueue you should ensure to cancel it on "
"this callback. Must be implemented and can sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3883
msgid "``suspend``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3884
msgid ""
"Suspend the device; mac80211 itself will quiesce before and stop "
"transmitting and doing any other configuration, and then ask the device to "
"suspend. This is only invoked when WoWLAN is configured, otherwise the "
"device is deconfigured completely and reconfigured at resume time. The "
"driver may also impose special conditions under which it wants to use the "
"\"normal\" suspend (deconfigure), say if it only supports WoWLAN when the "
"device is associated. In this case, it must return 1 from this function."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3893
msgid "``resume``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3894
msgid ""
"If WoWLAN was configured, this indicates that mac80211 is now resuming its "
"operation, after this the device must be fully functional again. If this "
"returns an error, the only way out is to also unregister the device. If it "
"returns 1, then mac80211 will also go through the regular complete restart "
"on resume."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3899
msgid "``set_wakeup``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3900
msgid ""
"Enable or disable wakeup when WoWLAN configuration is modified. The reason "
"is that device_set_wakeup_enable() is supposed to be called when the "
"configuration changes, not only in suspend()."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3904
msgid "``add_interface``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3905
msgid ""
"Called when a netdevice attached to the hardware is enabled. Because it is "
"not called for monitor mode devices, **start** and **stop** must be "
"implemented. The driver should perform any initialization it needs before "
"the device can be enabled. The initial configuration for the interface is "
"given in the conf parameter. The callback may refuse to add an interface by "
"returning a negative error code (which will be seen in userspace.) Must be "
"implemented and can sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3914
msgid "``change_interface``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3915
msgid ""
"Called when a netdevice changes type. This callback is optional, but only if "
"it is supported can interface types be switched while the interface is UP. "
"The callback may sleep. Note that while an interface is being switched, it "
"will not be found by the interface iteration callbacks."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3920
msgid "``remove_interface``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3921
msgid ""
"Notifies a driver that an interface is going down. The **stop** callback is "
"called after this if it is the last interface and no monitor interfaces are "
"present. When all interfaces are removed, the MAC address in the hardware "
"must be cleared so the device no longer acknowledges packets, the mac_addr "
"member of the conf structure is, however, set to the MAC address of the "
"device going away. Hence, this callback must be implemented. It can sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3929
msgid "``config``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3930
msgid ""
"Handler for configuration requests. IEEE 802.11 code calls this function to "
"change hardware configuration, e.g., channel. This function should never "
"fail but returns a negative error code if it does. The callback can sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3934
msgid "``bss_info_changed``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3935
msgid ""
"Handler for configuration requests related to BSS parameters that may vary "
"during BSS's lifespan, and may affect low level driver (e.g. assoc/disassoc "
"status, erp parameters). This function should not be used if no BSS has been "
"set, unless for association indication. The **changed** parameter indicates "
"which of the bss parameters has changed when a call is made. The callback "
"can sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3944
msgid "``vif_cfg_changed``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3945
msgid ""
"Handler for configuration requests related to interface (MLD) parameters "
"from :c:type:`struct ieee80211_vif_cfg <ieee80211_vif_cfg>` that vary during "
"the lifetime of the interface (e.g. assoc status, IP addresses, etc.) The "
"**changed** parameter indicates which value changed. The callback can sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3950
msgid "``link_info_changed``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3951
msgid ""
"Handler for configuration requests related to link parameters from :c:type:"
"`struct ieee80211_bss_conf <ieee80211_bss_conf>` that are related to an "
"individual link. e.g. legacy/HT/VHT/... rate information. The **changed** "
"parameter indicates which value changed, and the **link_id** parameter "
"indicates the link ID. Note that the **link_id** will be 0 for non-MLO "
"connections. The callback can sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4349
msgid "``start_ap``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4350
msgid ""
"Start operation on the AP interface, this is called after all the "
"information in bss_conf is set and beacon can be retrieved. A channel "
"context is bound before this is called. Note that if the driver uses "
"software scan or ROC, this (and **stop_ap**) isn't called when the AP is "
"just \"paused\" for scanning/ROC, which is indicated by the beacon being "
"disabled/enabled via **bss_info_changed**."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4355
msgid "``stop_ap``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4356
msgid "Stop operation on the AP interface."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3958
msgid "``prepare_multicast``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3959
msgid ""
"Prepare for multicast filter configuration. This callback is optional, and "
"its return value is passed to configure_filter(). This callback must be "
"atomic."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3962
msgid "``configure_filter``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3963
msgid ""
"Configure the device's RX filter. See the section \"Frame filtering\" for "
"more information. This callback must be implemented and can sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3966
msgid "``config_iface_filter``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3967
msgid ""
"Configure the interface's RX filter. This callback is optional and is used "
"to configure which frames should be passed to mac80211. The filter_flags is "
"the combination of FIF_* flags. The changed_flags is a bit mask that "
"indicates which flags are changed. This callback can sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3973
msgid "``set_tim``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3974
msgid ""
"Set TIM bit. mac80211 calls this function when a TIM bit must be set or "
"cleared for a given STA. Must be atomic."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3976
msgid "``set_key``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3977
msgid ""
"See the section \"Hardware crypto acceleration\" This callback is only "
"called between add_interface and remove_interface calls, i.e. while the "
"given virtual interface is enabled. Returns a negative error code if the key "
"can't be added. The callback can sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3983
msgid "``update_tkip_key``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3984
msgid ""
"See the section \"Hardware crypto acceleration\" This callback will be "
"called in the context of Rx. Called for drivers which set "
"IEEE80211_KEY_FLAG_TKIP_REQ_RX_P1_KEY. The callback must be atomic."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3988
msgid "``set_rekey_data``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3989
msgid ""
"If the device supports GTK rekeying, for example while the host is "
"suspended, it can assign this callback to retrieve the data necessary to do "
"GTK rekeying, this is the KEK, KCK and replay counter. After rekeying was "
"done it should (for example during resume) notify userspace of the new "
"replay counter using ieee80211_gtk_rekey_notify()."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3994
msgid "``set_default_unicast_key``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3995
msgid ""
"Set the default (unicast) key index, useful for WEP when the device sends "
"data packets autonomously, e.g. for ARP offloading. The index can be 0-3, or "
"-1 for unsetting it."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3998
msgid "``hw_scan``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3999
msgid ""
"Ask the hardware to service the scan request, no need to start the scan "
"state machine in stack. The scan must honour the channel configuration done "
"by the regulatory agent in the wiphy's registered bands. The hardware (or "
"the driver) needs to make sure that power save is disabled. The **req** ie/"
"ie_len members are rewritten by mac80211 to contain the entire IEs after the "
"SSID, so that drivers need not look at these at all but just send them after "
"the SSID -- mac80211 includes the (extended) supported rates and HT "
"information (where applicable). When the scan finishes, "
"ieee80211_scan_completed() must be called; note that it also must be called "
"when the scan cannot finish due to any error unless this callback returned a "
"negative error code. This callback is also allowed to return the special "
"return value 1, this indicates that hardware scan isn't desirable right now "
"and a software scan should be done instead. A driver wishing to use this "
"capability must ensure its (hardware) scan capabilities aren't advertised as "
"more capable than mac80211's software scan is. The callback can sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4017
msgid "``cancel_hw_scan``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4018
msgid ""
"Ask the low-level tp cancel the active hw scan. The driver should ask the "
"hardware to cancel the scan (if possible), but the scan will be completed "
"only after the driver will call ieee80211_scan_completed(). This callback is "
"needed for wowlan, to prevent enqueueing a new scan_work after the low-level "
"driver was already suspended. The callback can sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4025
msgid "``sched_scan_start``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4026
msgid ""
"Ask the hardware to start scanning repeatedly at specific intervals.  The "
"driver must call the ieee80211_sched_scan_results() function whenever it "
"finds results. This process will continue until sched_scan_stop is called."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4030
msgid "``sched_scan_stop``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4031
msgid ""
"Tell the hardware to stop an ongoing scheduled scan. In this case, "
"ieee80211_sched_scan_stopped() must not be called."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4033
msgid "``sw_scan_start``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4034
msgid ""
"Notifier function that is called just before a software scan is started. Can "
"be NULL, if the driver doesn't need this notification. The mac_addr "
"parameter allows supporting NL80211_SCAN_FLAG_RANDOM_ADDR, the driver may "
"set the NL80211_FEATURE_SCAN_RANDOM_MAC_ADDR flag if it can use this "
"parameter. The callback can sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4039
msgid "``sw_scan_complete``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4040
msgid ""
"Notifier function that is called just after a software scan finished. Can be "
"NULL, if the driver doesn't need this notification. The callback can sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4044
msgid "``get_stats``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4045
msgid ""
"Return low-level statistics. Returns zero if statistics are available. The "
"callback can sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4048
msgid "``get_key_seq``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4049
msgid ""
"If your device implements encryption in hardware and does IV/PN assignment "
"then this callback should be provided to read the IV/PN for the given key "
"from hardware. The callback must be atomic."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4053
msgid "``set_frag_threshold``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4054
msgid ""
"Configuration of fragmentation threshold. Assign this if the device does "
"fragmentation by itself. Note that to prevent the stack from doing "
"fragmentation IEEE80211_HW_SUPPORTS_TX_FRAG should be set as well. The "
"callback can sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4059
msgid "``set_rts_threshold``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4060
msgid ""
"Configuration of RTS threshold (if device needs it) The callback can sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4062
msgid "``sta_add``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4063
msgid ""
"Notifies low level driver about addition of an associated station, AP, IBSS/"
"WDS/mesh peer etc. This callback can sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4065
msgid "``sta_remove``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4066
msgid ""
"Notifies low level driver about removal of an associated station, AP, IBSS/"
"WDS/mesh peer etc. Note that after the callback returns it isn't safe to use "
"the pointer, not even RCU protected; no RCU grace period is guaranteed "
"between returning here and freeing the station. See **sta_pre_rcu_remove** "
"if needed. This callback can sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4072
msgid "``vif_add_debugfs``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4073
msgid ""
"Drivers can use this callback to add a debugfs vif directory with its files. "
"This callback should be within a CONFIG_MAC80211_DEBUGFS conditional. This "
"callback can sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4076
msgid "``link_add_debugfs``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4077
msgid ""
"Drivers can use this callback to add debugfs files when a link is added to a "
"mac80211 vif. This callback should be within a CONFIG_MAC80211_DEBUGFS "
"conditional. This callback can sleep. For non-MLO the callback will be "
"called once for the default bss_conf with the vif's directory rather than a "
"separate subdirectory."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4082
msgid "``sta_add_debugfs``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4083
msgid ""
"Drivers can use this callback to add debugfs files when a station is added "
"to mac80211's station list. This callback should be within a "
"CONFIG_MAC80211_DEBUGFS conditional. This callback can sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4087
msgid "``link_sta_add_debugfs``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4088
msgid ""
"Drivers can use this callback to add debugfs files when a link is added to a "
"mac80211 station. This callback should be within a CONFIG_MAC80211_DEBUGFS "
"conditional. This callback can sleep. For non-MLO the callback will be "
"called once for the deflink with the station's directory rather than a "
"separate subdirectory."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4094
msgid "``sta_notify``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4095
msgid ""
"Notifies low level driver about power state transition of an associated "
"station, AP,  IBSS/WDS/mesh peer etc. For a VIF operating in AP mode, this "
"callback will not be called when the flag ``IEEE80211_HW_AP_LINK_PS`` is "
"set. Must be atomic."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4099
msgid "``sta_set_txpwr``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4100
msgid ""
"Configure the station tx power. This callback set the tx power for the "
"station. This callback can sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4103
msgid "``sta_state``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4104
msgid ""
"Notifies low level driver about state transition of a station (which can be "
"the AP, a client, IBSS/WDS/mesh peer etc.) This callback is mutually "
"exclusive with **sta_add**/**sta_remove**. It must not fail for down "
"transitions but may fail for transitions up the list of states. Also note "
"that after the callback returns it isn't safe to use the pointer, not even "
"RCU protected - no RCU grace period is guaranteed between returning here and "
"freeing the station. See **sta_pre_rcu_remove** if needed. The callback can "
"sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4113
msgid "``sta_pre_rcu_remove``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4114
msgid ""
"Notify driver about station removal before RCU synchronisation. This is "
"useful if a driver needs to have station pointers protected using RCU, it "
"can then use this call to clear the pointers instead of waiting for an RCU "
"grace period to elapse in **sta_state**. The callback can sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4120
msgid "``link_sta_rc_update``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4121
msgid ""
"Notifies the driver of changes to the bitrates that can be used to transmit "
"to the station. The changes are advertised with bits from :c:type:`enum "
"ieee80211_rate_control_changed <ieee80211_rate_control_changed>` and the "
"values are reflected in the station data. This callback should only be used "
"when the driver uses hardware rate control "
"(``IEEE80211_HW_HAS_RATE_CONTROL``) since otherwise the rate control "
"algorithm is notified directly. Must be atomic."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4127
msgid "``sta_rate_tbl_update``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4128
msgid ""
"Notifies the driver that the rate table changed. This is only used if the "
"configured rate control algorithm actually uses the new rate table API, and "
"is therefore optional. Must be atomic."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4131
msgid "``sta_statistics``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4132
msgid ""
"Get statistics for this station. For example with beacon filtering, the "
"statistics kept by mac80211 might not be accurate, so let the driver pre-"
"fill the statistics. The driver can fill most of the values (indicating "
"which by setting the filled bitmap), but not all of them make sense - see "
"the source for which ones are possible. Statistics that the driver doesn't "
"fill will be filled by mac80211. The callback can sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4148
msgid "``conf_tx``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4149
msgid ""
"Configure TX queue parameters (EDCF (aifs, cw_min, cw_max), bursting) for a "
"hardware TX queue. Returns a negative error code on failure. The callback "
"can sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4153
msgid "``get_tsf``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4154
msgid ""
"Get the current TSF timer value from firmware/hardware. Currently, this is "
"only used for IBSS mode BSSID merging and debugging. Is not a required "
"function. The callback can sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4158
msgid "``set_tsf``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4159
msgid ""
"Set the TSF timer to the specified value in the firmware/hardware. "
"Currently, this is only used for IBSS mode debugging. Is not a required "
"function. The callback can sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4163
msgid "``offset_tsf``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4164
msgid ""
"Offset the TSF timer by the specified value in the firmware/hardware.  "
"Preferred to set_tsf as it avoids delay between calling set_tsf() and "
"hardware getting programmed, which will show up as TSF delay. Is not a "
"required function. The callback can sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4169
msgid "``reset_tsf``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4170
msgid ""
"Reset the TSF timer and allow firmware/hardware to synchronize with other "
"STAs in the IBSS. This is only used in IBSS mode. This function is optional "
"if the firmware/hardware takes full care of TSF synchronization. The "
"callback can sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4175
msgid "``tx_last_beacon``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4176
msgid ""
"Determine whether the last IBSS beacon was sent by us. This is needed only "
"for IBSS mode and the result of this function is used to determine whether "
"to reply to Probe Requests. Returns non-zero if this device sent the last "
"beacon. The callback can sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4139
msgid "``link_sta_statistics``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4140
msgid ""
"Get link statistics for this station. For example with beacon filtering, the "
"statistics kept by mac80211 might not be accurate, so let the driver pre-"
"fill the statistics. The driver can fill most of the values (indicating "
"which by setting the filled bitmap), but not all of them make sense - see "
"the source for which ones are possible. Statistics that the driver doesn't "
"fill will be filled by mac80211. The callback can sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4654
msgid "``ampdu_action``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4655
msgid ""
"Perform a certain A-MPDU action. The RA/TID combination determines the "
"destination and TID we want the ampdu action to be performed for. The action "
"is defined through ieee80211_ampdu_mlme_action. When the action is set to "
"``IEEE80211_AMPDU_TX_OPERATIONAL`` the driver may neither send aggregates "
"containing more subframes than **buf_size** nor send aggregates in a way "
"that lost frames would exceed the buffer size. If just limiting the "
"aggregate size, this would be possible with a buf_size of 8:"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4665
msgid "``TX: 1.....7``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4666
msgid "``RX:  2....7`` (lost frame #1)"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4667
msgid "``TX:        8..1...``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4669
msgid ""
"which is invalid since #1 was now re-transmitted well past the buffer size "
"of 8. Correct ways to retransmit #1 would be:"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4672
msgid "``TX:        1   or``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4673
msgid "``TX:        18  or``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4674
msgid "``TX:        81``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4676
msgid "Even ``189`` would be wrong since 1 could be lost again."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4678
msgid ""
"Returns a negative error code on failure. The driver may return "
"``IEEE80211_AMPDU_TX_START_IMMEDIATE`` for ``IEEE80211_AMPDU_TX_START`` if "
"the session can start immediately."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4682
msgid "The callback can sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4181
msgid "``get_survey``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4182
msgid "Return per-channel survey information"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4183
msgid "``rfkill_poll``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4184
msgid ""
"Poll rfkill hardware state. If you need this, you also need to set wiphy-"
">rfkill_poll to ``true`` before registration, and need to call "
"wiphy_rfkill_set_hw_state() in the callback. The callback can sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4188
msgid "``set_coverage_class``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4189
msgid ""
"Set slot time for given coverage class as specified in IEEE 802.11-2007 "
"section 17.3.8.6 and modify ACK timeout accordingly; coverage class equals "
"to -1 to enable ACK timeout estimation algorithm (dynack). To disable dynack "
"set valid value for coverage class. This callback is not required and may "
"sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4194
msgid "``testmode_cmd``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4195
msgid ""
"Implement a cfg80211 test mode command. The passed **vif** may be ``NULL``. "
"The callback can sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4196
msgid "``testmode_dump``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4197
msgid "Implement a cfg80211 test mode dump. The callback can sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4198
msgid "``flush``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4199
msgid ""
"Flush all pending frames from the hardware queue, making sure that the "
"hardware queues are empty. The **queues** parameter is a bitmap of queues to "
"flush, which is useful if different virtual interfaces use different "
"hardware queues; it may also indicate all queues. If the parameter **drop** "
"is set to ``true``, pending frames may be dropped. Note that vif can be "
"NULL. The callback can sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4206
msgid "``flush_sta``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4207
msgid ""
"Flush or drop all pending frames from the hardware queue(s) for the given "
"station, as it's about to be removed. The callback can sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4210
msgid "``channel_switch``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4211
msgid ""
"Drivers that need (or want) to offload the channel switch operation for CSAs "
"received from the AP may implement this callback. They must then call "
"ieee80211_chswitch_done() to indicate completion of the channel switch."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4215
msgid "``set_antenna``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4216
msgid ""
"Set antenna configuration (tx_ant, rx_ant) on the device. Parameters are "
"bitmaps of allowed antennas to use for TX/RX. Drivers may reject TX/RX mask "
"combinations they cannot support by returning -EINVAL (also see nl80211.h "
"**NL80211_ATTR_WIPHY_ANTENNA_TX**)."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4220
msgid "``get_antenna``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4221
msgid "Get current antenna configuration from device (tx_ant, rx_ant)."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4222
msgid "``remain_on_channel``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4223
msgid ""
"Starts an off-channel period on the given channel, must call back to "
"ieee80211_ready_on_channel() when on that channel. Note that normal channel "
"traffic is not stopped as this is intended for hw offload. Frames to "
"transmit on the off-channel channel are transmitted normally except for the "
"``IEEE80211_TX_CTL_TX_OFFCHAN`` flag. When the duration (which will always "
"be non-zero) expires, the driver must call "
"ieee80211_remain_on_channel_expired(). Note that this callback may be called "
"while the device is in IDLE and must be accepted in this case. This callback "
"may sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4232
msgid "``cancel_remain_on_channel``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4233
msgid ""
"Requests that an ongoing off-channel period is aborted before it expires. "
"This callback may sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4235
msgid "``set_ringparam``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4236
msgid "Set tx and rx ring sizes."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4237
msgid "``get_ringparam``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4238
msgid "Get tx and rx ring current and maximum sizes."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4239
msgid "``tx_frames_pending``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4240
msgid ""
"Check if there is any pending frame in the hardware queues before entering "
"power save."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4242
msgid "``set_bitrate_mask``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4243
msgid ""
"Set a mask of rates to be used for rate control selection when transmitting "
"a frame. Currently only legacy rates are handled. The callback can sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4245
msgid "``event_callback``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4246
msgid ""
"Notify driver about any event in mac80211. See :c:type:`enum "
"ieee80211_event_type <ieee80211_event_type>` for the different types. The "
"callback must be atomic."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4274
msgid "``allow_buffered_frames``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4275
msgid ""
"Prepare device to allow the given number of frames to go out to the given "
"station. The frames will be sent by mac80211 via the usual TX path after "
"this call. The TX information for frames released will also have the "
"``IEEE80211_TX_CTL_NO_PS_BUFFER`` flag set and the last one will also have "
"``IEEE80211_TX_STATUS_EOSP`` set. In case frames from multiple TIDs are "
"released and the driver might reorder them between the TIDs, it must set the "
"``IEEE80211_TX_STATUS_EOSP`` flag on the last frame and clear it on all "
"others and also handle the EOSP bit in the QoS header correctly. "
"Alternatively, it can also call the ieee80211_sta_eosp() function. The "
"**tids** parameter is a bitmap and tells the driver which TIDs the frames "
"will be on; it will at most have two bits set. This callback must be atomic."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4249
msgid "``release_buffered_frames``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4250
msgid ""
"Release buffered frames according to the given parameters. In the case where "
"the driver buffers some frames for sleeping stations mac80211 will use this "
"callback to tell the driver to release some frames, either for PS-poll or "
"uAPSD. Note that if the **more_data** parameter is ``false`` the driver must "
"check if there are more frames on the given TIDs, and if there are more than "
"the frames being released then it must still set the more-data bit in the "
"frame. If the **more_data** parameter is ``true``, then of course the more-"
"data bit must always be set. The **tids** parameter tells the driver which "
"TIDs to release frames from, for PS-poll it will always have only a single "
"bit set. In the case this is used for a PS-poll initiated release, the "
"**num_frames** parameter will always be 1 so code can be shared. In this "
"case the driver must also set ``IEEE80211_TX_STATUS_EOSP`` flag on the TX "
"status (and must report TX status) so that the PS-poll period is properly "
"ended. This is used to avoid sending multiple responses for a retried PS-"
"poll frame. In the case this is used for uAPSD, the **num_frames** parameter "
"may be bigger than one, but the driver may send fewer frames (it must send "
"at least one, however). In this case it is also responsible for setting the "
"EOSP flag in the QoS header of the frames. Also, when the service period "
"ends, the driver must set ``IEEE80211_TX_STATUS_EOSP`` on the last frame in "
"the SP. Alternatively, it may call the function ieee80211_sta_eosp() to "
"inform mac80211 of the end of the SP. This callback must be atomic."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4288
msgid "``get_et_sset_count``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4289
msgid ""
"Ethtool API to get string-set count. Note that the wiphy mutex is not held "
"for this callback since it's expected to return a static value."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4292
msgid "``get_et_stats``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4293
msgid "Ethtool API to get a set of u64 stats."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4294
msgid "``get_et_strings``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4295
msgid ""
"Ethtool API to get a set of strings to describe stats and perhaps other "
"supported types of ethtool data-sets. Note that the wiphy mutex is not held "
"for this callback since it's expected to return a static value."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4299
msgid "``mgd_prepare_tx``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4300
msgid ""
"Prepare for transmitting a management frame for association before "
"associated. In multi-channel scenarios, a virtual interface is bound to a "
"channel before it is associated, but as it isn't associated yet it need not "
"necessarily be given airtime, in particular since any transmission to a P2P "
"GO needs to be synchronized against the GO's powersave state. mac80211 will "
"call this function before transmitting a management frame prior to "
"transmitting that frame to allow the driver to give it channel time for the "
"transmission, to get a response and be able to synchronize with the GO. The "
"callback will be called before each transmission and upon return mac80211 "
"will transmit the frame right away. Additional information is passed in the :"
"c:type:`struct ieee80211_prep_tx_info <ieee80211_prep_tx_info>` data. If "
"duration there is greater than zero, mac80211 hints to the driver the "
"duration for which the operation is requested. The callback is optional and "
"can (should!) sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4314
msgid "``mgd_complete_tx``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4315
msgid ""
"Notify the driver that the response frame for a previously transmitted frame "
"announced with **mgd_prepare_tx** was received, the data is filled similarly "
"to **mgd_prepare_tx** though the duration is not used. Note that this isn't "
"always called for each mgd_prepare_tx() call, for example for SAE the "
"'confirm' messages can be on the air in any order."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4320
msgid "``mgd_protect_tdls_discover``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4321
msgid ""
"Protect a TDLS discovery session. After sending a TDLS discovery-request, we "
"expect a reply to arrive on the AP's channel. We must stay on the channel "
"(no PSM, scan, etc.), since a TDLS setup-response is a direct packet not "
"buffered by the AP. mac80211 will call this function just before the "
"transmission of a TDLS discovery-request. The recommended period of "
"protection is at least 2 * (DTIM period). The callback is optional and can "
"sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4329
msgid "``add_chanctx``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4330
msgid ""
"Notifies device driver about new channel context creation. This callback may "
"sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4331
msgid "``remove_chanctx``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4332
msgid ""
"Notifies device driver about channel context destruction. This callback may "
"sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4333
msgid "``change_chanctx``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4334
msgid ""
"Notifies device driver about channel context changes that may happen when "
"combining different virtual interfaces on the same channel context with "
"different settings This callback may sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4337
msgid "``assign_vif_chanctx``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4338
msgid ""
"Notifies device driver about channel context being bound to vif. Possible "
"use is for hw queue remapping. This callback may sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4340
msgid "``unassign_vif_chanctx``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4341
msgid ""
"Notifies device driver about channel context being unbound from vif. This "
"callback may sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4343
msgid "``switch_vif_chanctx``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4344
msgid ""
"switch a number of vifs from one chanctx to another, as specified in the "
"list of **ieee80211_vif_chanctx_switch** passed to the driver, according to "
"the mode defined in :c:type:`ieee80211_chanctx_switch_mode`. This callback "
"may sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4357
msgid "``reconfig_complete``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4358
msgid ""
"Called after a call to ieee80211_restart_hw() and during resume, when the "
"reconfiguration has completed. This can help the driver implement the "
"reconfiguration step (and indicate mac80211 is ready to receive frames). "
"This callback may sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4363
msgid "``ipv6_addr_change``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4364
msgid ""
"IPv6 address assignment on the given interface changed. Currently, this is "
"only called for managed or P2P client interfaces. This callback is optional; "
"it must not sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4367
msgid "``channel_switch_beacon``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4368
msgid ""
"Starts a channel switch to a new channel. Beacons are modified to include "
"CSA or ECSA IEs before calling this function. The corresponding count fields "
"in these IEs must be decremented, and when they reach 1 the driver must call "
"ieee80211_csa_finish(). Drivers which use ieee80211_beacon_get() get the csa "
"counter decremented by mac80211, but must check if it is 1 using "
"ieee80211_beacon_counter_is_complete() after the beacon has been transmitted "
"and then call ieee80211_csa_finish(). If the CSA count starts as zero or 1, "
"this function will not be called, since there won't be any time to beacon "
"before the switch anyway."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4377
msgid "``pre_channel_switch``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4378
msgid ""
"This is an optional callback that is called before a channel switch "
"procedure is started (ie. when a STA gets a CSA or a userspace initiated "
"channel-switch), allowing the driver to prepare for the channel switch."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4381
msgid "``post_channel_switch``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4382
msgid ""
"This is an optional callback that is called after a channel switch procedure "
"is completed, allowing the driver to go back to a normal configuration."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4384
msgid "``abort_channel_switch``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4385
msgid ""
"This is an optional callback that is called when channel switch procedure "
"was aborted, allowing the driver to go back to a normal configuration."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4387
msgid "``channel_switch_rx_beacon``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4388
msgid ""
"This is an optional callback that is called when channel switch procedure is "
"in progress and additional beacon with CSA IE was received, allowing driver "
"to track changes in count."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4390
msgid "``join_ibss``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4391
msgid ""
"Join an IBSS (on an IBSS interface); this is called after all information in "
"bss_conf is set up and the beacon can be retrieved. A channel context is "
"bound before this is called."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4393
msgid "``leave_ibss``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4394
msgid "Leave the IBSS again."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4395
msgid "``get_expected_throughput``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4396
msgid ""
"extract the expected throughput towards the specified station. The returned "
"value is expressed in Kbps. It returns 0 if the RC algorithm does not have "
"proper data to provide."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4399
msgid "``get_txpower``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4400
msgid ""
"get current maximum tx power (in dBm) based on configuration and hardware "
"limits."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4402
msgid "``tdls_channel_switch``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4403
msgid ""
"Start channel-switching with a TDLS peer. The driver is responsible for "
"continually initiating channel-switching operations and returning to the "
"base channel for communication with the AP. The driver receives a channel-"
"switch request template and the location of the switch-timing IE within the "
"template as part of the invocation. The template is valid only within the "
"call, and the driver can optionally copy the skb for further re-use."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4409
msgid "``tdls_cancel_channel_switch``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4410
msgid ""
"Stop channel-switching with a TDLS peer. Both peers must be on the base "
"channel when the call completes."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4411
msgid "``tdls_recv_channel_switch``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4412
msgid ""
"a TDLS channel-switch related frame (request or response) has been received "
"from a remote peer. The driver gets parameters parsed from the incoming "
"frame and may use them to continue an ongoing channel-switch operation. In "
"addition, a channel-switch response template is provided, together with the "
"location of the switch-timing IE within the template. The skb can only be "
"used within the function call."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4419
msgid "``wake_tx_queue``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4420
msgid "Called when new packets have been added to the queue."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4420
msgid "``sync_rx_queues``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4421
msgid ""
"Process all pending frames in RSS queues. This is a synchronization which is "
"needed in case driver has in its RSS queues pending frames that were "
"received prior to the control path action currently taken (e.g. "
"disassociation) but are not processed yet."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4425
msgid "``start_nan``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4426
msgid "join an existing NAN cluster, or create a new one."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4426
msgid "``stop_nan``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4427
msgid "leave the NAN cluster."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4427
msgid "``nan_change_conf``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4428
msgid ""
"change NAN configuration. The data in cfg80211_nan_conf contains full new "
"configuration and changes specify which parameters are changed with respect "
"to the last NAN config. The driver gets both full configuration and the "
"changed parameters since some devices may need the full configuration while "
"others need only the changed parameters."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4433
msgid "``add_nan_func``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4434
msgid ""
"Add a NAN function. Returns 0 on success. The data in cfg80211_nan_func must "
"not be referenced outside the scope of this call."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4436
msgid "``del_nan_func``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4437
msgid ""
"Remove a NAN function. The driver must call ieee80211_nan_func_terminated() "
"with NL80211_NAN_FUNC_TERM_REASON_USER_REQUEST reason code upon removal."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4439
msgid "``can_aggregate_in_amsdu``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4440
msgid ""
"Called in order to determine if HW supports aggregating two specific frames "
"in the same A-MSDU. The relation between the skbs should be symmetric and "
"transitive. Note that while skb is always a real frame, head may or may not "
"be an A-MSDU."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4443
msgid "``get_ftm_responder_stats``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4444
msgid ""
"Retrieve FTM responder statistics, if available. Statistics should be "
"cumulative, currently no way to reset is provided."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4446
msgid "``start_pmsr``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4447
msgid "start peer measurement (e.g. FTM) (this call can sleep)"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4447
msgid "``abort_pmsr``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4448
msgid "abort peer measurement (this call can sleep)"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4448
msgid "``set_tid_config``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4449
msgid "Apply TID specific configurations. This callback may sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4449
msgid "``reset_tid_config``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4450
msgid "Reset TID specific configuration for the peer. This callback may sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4451
msgid "``update_vif_offload``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4452
msgid "Update virtual interface offload flags This callback may sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4453
msgid "``sta_set_4addr``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4454
msgid ""
"Called to notify the driver when a station starts/stops using 4-address mode"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4455
msgid "``set_sar_specs``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4456
msgid "Update the SAR (TX power) settings."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4456
msgid "``sta_set_decap_offload``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4457
msgid ""
"Called to notify the driver when a station is allowed to use rx "
"decapsulation offload"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4458
msgid "``add_twt_setup``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4459
msgid ""
"Update hw with TWT agreement parameters received from the peer. This "
"callback allows the hw to check if requested parameters are supported and if "
"there is enough room for a new agreement. The hw is expected to set "
"agreement result in the req_type field of twt structure."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4463
msgid "``twt_teardown_request``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4464
msgid "Update the hw with TWT teardown request received from the peer."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4465
msgid "``set_radar_background``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4466
msgid ""
"Configure dedicated offchannel chain available for radar/CAC detection on "
"some hw. This chain can't be used to transmit or receive frames and it is "
"bounded to a running wdev. Background radar/CAC detection allows to avoid "
"the CAC downtime switching to a different channel during CAC detection on "
"the selected radar channel. The caller is expected to set chandef pointer to "
"NULL in order to disable background CAC/radar detection."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4473
msgid "``net_fill_forward_path``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4474
msgid ""
"Called from .ndo_fill_forward_path in order to resolve a path for hardware "
"flow offloading"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4475
msgid "``can_activate_links``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4476
msgid "Checks if a specific active_links bitmap is supported by the driver."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4477
msgid "``change_vif_links``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4478
msgid ""
"Change the valid links on an interface, note that while removing the old "
"link information is still valid (link_conf pointer), but may immediately "
"disappear after the function returns. The old or new links bitmaps may be 0 "
"if going from/to a non-MLO situation. The **old** array contains pointers to "
"the old bss_conf structures that were already removed, in case they're "
"needed. Note that removal of link should always succeed, so the return value "
"will be ignored in a removal only case. This callback can sleep."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4486
msgid "``change_sta_links``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4487
msgid ""
"Change the valid links of a station, similar to **change_vif_links**. This "
"callback can sleep. Note that a sta can also be inserted or removed with "
"valid links, i.e. passed to **sta_add**/**sta_state** with sta->valid_links "
"not zero. In fact, cannot change from having valid_links and not having them."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4491
msgid "``set_hw_timestamp``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4492
msgid ""
"Enable/disable HW timestamping of TM/FTM frames. This is not restored at HW "
"reset by mac80211 so drivers need to take care of that."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4494
msgid "``net_setup_tc``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4495
msgid ""
"Called from .ndo_setup_tc in order to prepare hardware flow offloading for "
"flows originating from the vif. Note that the driver must not assume that "
"the vif driver_data is valid at this point, since the callback can be called "
"during netdev teardown."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4498
msgid "``can_neg_ttlm``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4499
msgid ""
"for managed interface, requests the driver to determine if the requested TID-"
"To-Link mapping can be accepted or not. If it's not accepted the driver may "
"suggest a preferred mapping and modify **ttlm** parameter with the suggested "
"TID-to-Link mapping."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4502
msgid "``prep_add_interface``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4503
msgid ""
"prepare for interface addition. This can be used by drivers to prepare for "
"the addition of a new interface, e.g., allocate the needed resources etc. "
"This callback doesn't guarantee that an interface with the specified type "
"would be added, and thus drivers that implement this callback need to handle "
"such cases. The type is the full :c:type:`enum nl80211_iftype "
"<nl80211_iftype>`."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3853
msgid ""
"This structure contains various callbacks that the driver may handle or, in "
"some cases, must handle, for example to configure the hardware to a new "
"channel or to transmit a frame."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:870
#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3857
msgid "**Note**"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3941
msgid "this callback is called if **vif_cfg_changed** or **link_info_changed**"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:3942
msgid "are not implemented."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4926
msgid "Allocate a new hardware device"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4932
msgid "``size_t priv_data_len``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4934
msgid "length of private data"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4936
msgid "``const struct ieee80211_ops *ops``"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4935
msgid "callbacks for this device"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4927
msgid ""
"This must be called once for each hardware device. The returned pointer must "
"be used to refer to this device when calling other functions. mac80211 "
"allocates a private data area for the driver pointed to by **priv** in :c:"
"type:`struct ieee80211_hw <ieee80211_hw>`, the size of this area is given as "
"**priv_data_len**."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5832
#: include/net/mac80211.h:5869 include/net/mac80211.h:5887
#: include/net/mac80211.h:6125 ../../../driver-api/80211/mac80211:32:
#: include/net/mac80211.h:4933 include/net/mac80211.h:4952
msgid "**Return**"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4937
msgid "A pointer to the new hardware device, or ``NULL`` on error."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4947
msgid "Register hardware device"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4953
msgid "the device to register as returned by ieee80211_alloc_hw()"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4948
msgid ""
"You must call this function before any other functions in mac80211. Note "
"that before a hardware can be registered, you need to fill the contained "
"wiphy's information."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:4955
msgid "0 on success. An error code otherwise."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:5104
msgid "Unregister a hardware device"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:5109
msgid "the hardware to unregister"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:5105
msgid ""
"This function instructs mac80211 to free allocated resources and unregister "
"netdevices from the networking subsystem."
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:5114
msgid "free hardware descriptor"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:5120
msgid "the hardware to free"
msgstr ""

#: ../../../driver-api/80211/mac80211:32: include/net/mac80211.h:5115
msgid ""
"This function frees everything that was allocated, including the private "
"data for the driver. You must call ieee80211_unregister_hw() before calling "
"this function."
msgstr ""

#: ../../../driver-api/80211/mac80211.rst:45
msgid "PHY configuration"
msgstr ""

#: ../../../driver-api/80211/mac80211.rst:49
msgid ""
"This chapter should describe PHY handling including start/stop callbacks and "
"the various structures used."
msgstr ""

#: ../../../driver-api/80211/mac80211:52: include/net/mac80211.h:1695
msgid "configuration flags"
msgstr ""

#: ../../../driver-api/80211/mac80211:52: include/net/mac80211.h:1701
msgid "``IEEE80211_CONF_MONITOR``"
msgstr ""

#: ../../../driver-api/80211/mac80211:52: include/net/mac80211.h:1702
msgid ""
"there's a monitor interface present -- use this to determine for example "
"whether to calculate timestamps for packets or not, do not use instead of "
"filter flags!"
msgstr ""

#: ../../../driver-api/80211/mac80211:52: include/net/mac80211.h:1706
msgid "``IEEE80211_CONF_PS``"
msgstr ""

#: ../../../driver-api/80211/mac80211:52: include/net/mac80211.h:1707
msgid ""
"Enable 802.11 power save mode (managed mode only). This is the power save "
"mode defined by IEEE 802.11-2007 section 11.2, meaning that the hardware "
"still wakes up for beacons, is able to transmit frames and receive the "
"possible acknowledgment frames. Not to be confused with hardware specific "
"wakeup/sleep states, driver is responsible for that. See the section "
"\"Powersave support\" for more."
msgstr ""

#: ../../../driver-api/80211/mac80211:52: include/net/mac80211.h:1715
msgid "``IEEE80211_CONF_IDLE``"
msgstr ""

#: ../../../driver-api/80211/mac80211:52: include/net/mac80211.h:1716
msgid ""
"The device is running, but idle; if the flag is set the driver should be "
"prepared to handle configuration requests but may turn the device off as "
"much as possible. Typically, this flag will be set when an interface is set "
"UP but not associated or scanning, but it can also be unset in that case "
"when monitor interfaces are active."
msgstr ""

#: ../../../driver-api/80211/mac80211:52: include/net/mac80211.h:1722
msgid "``IEEE80211_CONF_OFFCHANNEL``"
msgstr ""

#: ../../../driver-api/80211/mac80211:52: include/net/mac80211.h:1723
msgid "The device is currently not on its main operating channel."
msgstr ""

#: ../../../driver-api/80211/mac80211:52: include/net/mac80211.h:1696
msgid "Flags to define PHY configuration options"
msgstr ""

#: ../../../driver-api/80211/mac80211:52: include/net/mac80211.h:1770
msgid "configuration of the device"
msgstr ""

#: ../../../driver-api/80211/mac80211:52: include/net/mac80211.h:1775
msgid "configuration flags defined above"
msgstr ""

#: ../../../driver-api/80211/mac80211:52: include/net/mac80211.h:1784
msgid "``power_level``"
msgstr ""

#: ../../../driver-api/80211/mac80211:52: include/net/mac80211.h:1785
msgid ""
"requested transmit power (in dBm), backward compatibility value only that is "
"set to the minimum of all interfaces"
msgstr ""

#: ../../../driver-api/80211/mac80211:52: include/net/mac80211.h:1780
msgid "``dynamic_ps_timeout``"
msgstr ""

#: ../../../driver-api/80211/mac80211:52: include/net/mac80211.h:1781
msgid ""
"The dynamic powersave timeout (in ms), see the powersave documentation "
"below. This variable is valid only when the CONF_PS flag is set."
msgstr ""

#: ../../../driver-api/80211/mac80211:52: include/net/mac80211.h:1776
msgid "``listen_interval``"
msgstr ""

#: ../../../driver-api/80211/mac80211:52: include/net/mac80211.h:1777
msgid "listen interval in units of beacon interval"
msgstr ""

#: ../../../driver-api/80211/mac80211:52: include/net/mac80211.h:1777
msgid "``ps_dtim_period``"
msgstr ""

#: ../../../driver-api/80211/mac80211:52: include/net/mac80211.h:1778
msgid ""
"The DTIM period of the AP we're connected to, for use in power saving. Power "
"saving will not be enabled until a beacon has been received and the DTIM "
"period is known."
msgstr ""

#: ../../../driver-api/80211/mac80211:52: include/net/mac80211.h:1790
msgid "``long_frame_max_tx_count``"
msgstr ""

#: ../../../driver-api/80211/mac80211:52: include/net/mac80211.h:1791
msgid ""
"Maximum number of transmissions for a \"long\" frame (a frame not RTS "
"protected), called \"dot11LongRetryLimit\" in 802.11, but actually means the "
"number of transmissions not the number of retries"
msgstr ""

#: ../../../driver-api/80211/mac80211:52: include/net/mac80211.h:1793
msgid "``short_frame_max_tx_count``"
msgstr ""

#: ../../../driver-api/80211/mac80211:52: include/net/mac80211.h:1794
msgid ""
"Maximum number of transmissions for a \"short\" frame, called "
"\"dot11ShortRetryLimit\" in 802.11, but actually means the number of "
"transmissions not the number of retries"
msgstr ""

#: ../../../driver-api/80211/mac80211:52: include/net/mac80211.h:1787
msgid "``chandef``"
msgstr ""

#: ../../../driver-api/80211/mac80211:52: include/net/mac80211.h:1788
msgid "the channel definition to tune to"
msgstr ""

#: ../../../driver-api/80211/mac80211:52: include/net/mac80211.h:1788
msgid "``radar_enabled``"
msgstr ""

#: ../../../driver-api/80211/mac80211:52: include/net/mac80211.h:1789
msgid "whether radar detection is enabled"
msgstr ""

#: ../../../driver-api/80211/mac80211:52: include/net/mac80211.h:1797
msgid "``smps_mode``"
msgstr ""

#: ../../../driver-api/80211/mac80211:52: include/net/mac80211.h:1798
msgid ""
"spatial multiplexing powersave mode; note that ``IEEE80211_SMPS_STATIC`` is "
"used when the device is not configured for an HT channel. Note that this is "
"only valid if channel contexts are not used, otherwise each channel context "
"has the number of chains listed."
msgstr ""

#: ../../../driver-api/80211/mac80211:52: include/net/mac80211.h:1771
msgid "This struct indicates how the driver shall configure the hardware."
msgstr ""

#: ../../../driver-api/80211/mac80211.rst:58
msgid "Virtual interfaces"
msgstr ""

#: ../../../driver-api/80211/mac80211.rst:62
msgid ""
"This chapter should describe virtual interface basics that are relevant to "
"the driver (VLANs, MGMT etc are not.) It should explain the use of the "
"add_iface/remove_iface callbacks as well as the interface configuration "
"callbacks."
msgstr ""

#: ../../../driver-api/80211/mac80211.rst:67
msgid "Things related to AP mode should be discussed there."
msgstr ""

#: ../../../driver-api/80211/mac80211.rst:69
msgid ""
"Things related to supporting multiple interfaces should be in the "
"appropriate chapter, a BIG FAT note should be here about this though and the "
"recommendation to allow only a single interface in STA mode at first!"
msgstr ""

#: ../../../driver-api/80211/mac80211:74: include/net/mac80211.h:1981
msgid "per-interface data"
msgstr ""

#: ../../../driver-api/80211/mac80211:74: include/net/mac80211.h:1986
msgid "``type``"
msgstr ""

#: ../../../driver-api/80211/mac80211:74: include/net/mac80211.h:1987
msgid "type of this virtual interface"
msgstr ""

#: ../../../driver-api/80211/mac80211:74: include/net/mac80211.h:1987
msgid "``cfg``"
msgstr ""

#: ../../../driver-api/80211/mac80211:74: include/net/mac80211.h:1988
msgid ""
"vif configuration, see :c:type:`struct ieee80211_vif_cfg <ieee80211_vif_cfg>`"
msgstr ""

#: ../../../driver-api/80211/mac80211:74: include/net/mac80211.h:1988
msgid "``bss_conf``"
msgstr ""

#: ../../../driver-api/80211/mac80211:74: include/net/mac80211.h:1989
msgid ""
"BSS configuration for this interface, either our own or the BSS we're "
"associated to"
msgstr ""

#: ../../../driver-api/80211/mac80211:74: include/net/mac80211.h:1990
msgid "``link_conf``"
msgstr ""

#: ../../../driver-api/80211/mac80211:74: include/net/mac80211.h:1991
msgid "in case of MLD, the per-link BSS configuration, indexed by link ID"
msgstr ""

#: ../../../driver-api/80211/mac80211:74: include/net/mac80211.h:1992
msgid "``valid_links``"
msgstr ""

#: ../../../driver-api/80211/mac80211:74: include/net/mac80211.h:1993
msgid "bitmap of valid links, or 0 for non-MLO."
msgstr ""

#: ../../../driver-api/80211/mac80211:74: include/net/mac80211.h:1993
msgid "``active_links``"
msgstr ""

#: ../../../driver-api/80211/mac80211:74: include/net/mac80211.h:1994
msgid ""
"The bitmap of active links, or 0 for non-MLO. The driver shouldn't change "
"this directly, but use the API calls meant for that purpose."
msgstr ""

#: ../../../driver-api/80211/mac80211:74: include/net/mac80211.h:1996
msgid "``dormant_links``"
msgstr ""

#: ../../../driver-api/80211/mac80211:74: include/net/mac80211.h:1997
msgid ""
"subset of the valid links that are disabled/suspended due to advertised or "
"negotiated TTLM respectively. 0 for non-MLO."
msgstr ""

#: ../../../driver-api/80211/mac80211:74: include/net/mac80211.h:1999
msgid "``suspended_links``"
msgstr ""

#: ../../../driver-api/80211/mac80211:74: include/net/mac80211.h:2000
msgid ""
"subset of dormant_links representing links that are suspended due to "
"negotiated TTLM, and could be activated in the future by tearing down the "
"TTLM negotiation. 0 for non-MLO."
msgstr ""

#: ../../../driver-api/80211/mac80211:74: include/net/mac80211.h:2003
msgid "``neg_ttlm``"
msgstr ""

#: ../../../driver-api/80211/mac80211:74: include/net/mac80211.h:2004
msgid ""
"negotiated TID to link mapping info. see :c:type:`struct ieee80211_neg_ttlm "
"<ieee80211_neg_ttlm>`."
msgstr ""

#: ../../../driver-api/80211/mac80211:74: include/net/mac80211.h:2005
msgid "``addr``"
msgstr ""

#: ../../../driver-api/80211/mac80211:74: include/net/mac80211.h:2006
msgid "address of this interface"
msgstr ""

#: ../../../driver-api/80211/mac80211:74: include/net/mac80211.h:2006
msgid "``addr_valid``"
msgstr ""

#: ../../../driver-api/80211/mac80211:74: include/net/mac80211.h:2007
msgid ""
"indicates if the address is actively used. Set to false for passive monitor "
"interfaces, true in all other cases."
msgstr ""

#: ../../../driver-api/80211/mac80211:74: include/net/mac80211.h:2008
msgid "``p2p``"
msgstr ""

#: ../../../driver-api/80211/mac80211:74: include/net/mac80211.h:2009
msgid ""
"indicates whether this AP or STA interface is a p2p interface, i.e. a GO or "
"p2p-sta respectively"
msgstr ""

#: ../../../driver-api/80211/mac80211:74: include/net/mac80211.h:2024
msgid "``cab_queue``"
msgstr ""

#: ../../../driver-api/80211/mac80211:74: include/net/mac80211.h:2025
msgid "content-after-beacon (DTIM beacon really) queue, AP mode only"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1211
#: ../../../driver-api/80211/mac80211:74: include/net/mac80211.h:2023
msgid "``hw_queue``"
msgstr ""

#: ../../../driver-api/80211/mac80211:74: include/net/mac80211.h:2024
msgid "hardware queue for each AC"
msgstr ""

#: ../../../driver-api/80211/mac80211:74: include/net/mac80211.h:2034
msgid "``txq``"
msgstr ""

#: ../../../driver-api/80211/mac80211:74: include/net/mac80211.h:2035
msgid "the multicast data TX queue"
msgstr ""

#: ../../../driver-api/80211/mac80211:74: include/net/mac80211.h:2011
msgid ""
"tx netdev features supported by the hardware for this vif. mac80211 "
"initializes this to hw->netdev_features, and the driver can mask out "
"specific tx features. mac80211 will handle software fixup for masked "
"offloads (GSO, CSUM)"
msgstr ""

#: ../../../driver-api/80211/mac80211:74: include/net/mac80211.h:2014
msgid "``driver_flags``"
msgstr ""

#: ../../../driver-api/80211/mac80211:74: include/net/mac80211.h:2015
msgid ""
"flags/capabilities the driver has for this interface, these need to be set "
"(or cleared) when the interface is added or, if supported by the driver, the "
"interface type is changed at runtime, mac80211 will never touch this field"
msgstr ""

#: ../../../driver-api/80211/mac80211:74: include/net/mac80211.h:2035
msgid "``offload_flags``"
msgstr ""

#: ../../../driver-api/80211/mac80211:74: include/net/mac80211.h:2036
msgid ""
"802.3 -> 802.11 enapsulation offload flags, see :c:type:`enum "
"ieee80211_offload_flags <ieee80211_offload_flags>`."
msgstr ""

#: ../../../driver-api/80211/mac80211:74: include/net/mac80211.h:2025
msgid "``debugfs_dir``"
msgstr ""

#: ../../../driver-api/80211/mac80211:74: include/net/mac80211.h:2026
msgid ""
"debugfs dentry, can be used by drivers to create own per interface debug "
"files. Note that it will be NULL for the virtual monitor interface (if that "
"is requested.)"
msgstr ""

#: ../../../driver-api/80211/mac80211:74: include/net/mac80211.h:2028
msgid "``probe_req_reg``"
msgstr ""

#: ../../../driver-api/80211/mac80211:74: include/net/mac80211.h:2029
msgid "probe requests should be reported to mac80211 for this interface."
msgstr ""

#: ../../../driver-api/80211/mac80211:74: include/net/mac80211.h:2030
msgid "``rx_mcast_action_reg``"
msgstr ""

#: ../../../driver-api/80211/mac80211:74: include/net/mac80211.h:2031
msgid ""
"multicast Action frames should be reported to mac80211 for this interface."
msgstr ""

#: ../../../driver-api/80211/mac80211:74: include/net/mac80211.h:2032
msgid "``drv_priv``"
msgstr ""

#: ../../../driver-api/80211/mac80211:74: include/net/mac80211.h:2033
msgid "data area for driver use, will always be aligned to sizeof(void \\*)."
msgstr ""

#: ../../../driver-api/80211/mac80211:74: include/net/mac80211.h:1982
msgid ""
"Data in this structure is continually present for driver use during the life "
"of a virtual interface."
msgstr ""

#: ../../../driver-api/80211/mac80211.rst:78
msgid "Receive and transmit processing"
msgstr ""

#: ../../../driver-api/80211/mac80211.rst:81
msgid "what should be here"
msgstr ""

#: ../../../driver-api/80211/mac80211.rst:85
msgid ""
"This should describe the receive and transmit paths in mac80211/the drivers "
"as well as transmit status handling."
msgstr ""

#: ../../../driver-api/80211/mac80211.rst:89
msgid "Frame format"
msgstr ""

#: ../../../driver-api/80211/mac80211:91: include/net/mac80211.h:58
msgid ""
"As a general rule, when frames are passed between mac80211 and the driver, "
"they start with the IEEE 802.11 header and include the same octets that are "
"sent over the air except for the FCS which should be calculated by the "
"hardware."
msgstr ""

#: ../../../driver-api/80211/mac80211:91: include/net/mac80211.h:63
msgid ""
"There are, however, various exceptions to this rule for advanced features:"
msgstr ""

#: ../../../driver-api/80211/mac80211:91: include/net/mac80211.h:65
msgid ""
"The first exception is for hardware encryption and decryption offload where "
"the IV/ICV may or may not be generated in hardware."
msgstr ""

#: ../../../driver-api/80211/mac80211:91: include/net/mac80211.h:68
msgid ""
"Secondly, when the hardware handles fragmentation, the frame handed to the "
"driver from mac80211 is the MSDU, not the MPDU."
msgstr ""

#: ../../../driver-api/80211/mac80211.rst:95
msgid "Packet alignment"
msgstr ""

#: ../../../driver-api/80211/mac80211:97: net/mac80211/rx.c:946
msgid ""
"Drivers always need to pass packets that are aligned to two-byte boundaries "
"to the stack."
msgstr ""

#: ../../../driver-api/80211/mac80211:97: net/mac80211/rx.c:949
msgid ""
"Additionally, they should, if possible, align the payload data in a way that "
"guarantees that the contained IP header is aligned to a four-byte boundary. "
"In the case of regular frames, this simply means aligning the payload to a "
"four-byte boundary (because either the IP header is directly contained, or "
"IV/RFC1042 headers that have a length divisible by four are in front of "
"it).  If the payload data is not properly aligned and the architecture "
"doesn't support efficient unaligned operations, mac80211 will align the data."
msgstr ""

#: ../../../driver-api/80211/mac80211:97: net/mac80211/rx.c:958
msgid ""
"With A-MSDU frames, however, the payload data address must yield two modulo "
"four because there are 14-byte 802.3 headers within the A-MSDU frames that "
"push the IP header further back to a multiple of four again. Thankfully, the "
"specs were sane enough this time around to require padding each A-MSDU "
"subframe to a length that is a multiple of four."
msgstr ""

#: ../../../driver-api/80211/mac80211:97: net/mac80211/rx.c:964
msgid ""
"Padding like Atheros hardware adds which is between the 802.11 header and "
"the payload is not supported; the driver is required to move the 802.11 "
"header to be directly in front of the payload in that case."
msgstr ""

#: ../../../driver-api/80211/mac80211.rst:101
msgid "Calling into mac80211 from interrupts"
msgstr ""

#: ../../../driver-api/80211/mac80211:103: include/net/mac80211.h:37
msgid ""
"Only ieee80211_tx_status_irqsafe() and ieee80211_rx_irqsafe() can be called "
"in hardware interrupt context. The low-level driver must not call any other "
"functions in hardware interrupt context. If there is a need for such call, "
"the low-level driver should first ACK the interrupt and perform the IEEE "
"802.11 code call after this, e.g. from a scheduled workqueue or even tasklet "
"function."
msgstr ""

#: ../../../driver-api/80211/mac80211:103: include/net/mac80211.h:44
msgid ""
"NOTE: If the driver opts to use the _irqsafe() functions, it may not also"
msgstr ""

#: ../../../driver-api/80211/mac80211:103: include/net/mac80211.h:45
msgid "use the non-IRQ-safe functions!"
msgstr ""

#: ../../../driver-api/80211/mac80211.rst:107
msgid "functions/definitions"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:867
msgid "flags to describe transmission information/status"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:873
msgid "``IEEE80211_TX_CTL_REQ_TX_STATUS``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:874
msgid "require TX status callback for this frame."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:876
msgid "``IEEE80211_TX_CTL_ASSIGN_SEQ``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:877
msgid ""
"The driver has to assign a sequence number to this frame, taking care of not "
"overwriting the fragment number and increasing the sequence number only when "
"the IEEE80211_TX_CTL_FIRST_FRAGMENT flag is set. mac80211 will properly "
"assign sequence numbers to QoS-data frames but cannot do so correctly for "
"non-QoS-data and management frames because beacons need them from that "
"counter as well and mac80211 cannot guarantee proper sequencing. If this "
"flag is set, the driver should instruct the hardware to assign a sequence "
"number to the frame or assign one itself. Cf. IEEE 802.11-2007 7.1.3.4.1 "
"paragraph 3. This flag will always be set for beacons and always be clear "
"for frames without a sequence number field."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:889
msgid "``IEEE80211_TX_CTL_NO_ACK``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:890
msgid "tell the low level not to wait for an ack"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:892
msgid "``IEEE80211_TX_CTL_CLEAR_PS_FILT``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:893
msgid "clear powersave filter for destination station"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:896
msgid "``IEEE80211_TX_CTL_FIRST_FRAGMENT``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:897
msgid "this is a first fragment of the frame"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:899
msgid "``IEEE80211_TX_CTL_SEND_AFTER_DTIM``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:900
msgid "send this frame after DTIM beacon"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:902
msgid "``IEEE80211_TX_CTL_AMPDU``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:903
msgid "this frame should be sent as part of an A-MPDU"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:905
msgid "``IEEE80211_TX_CTL_INJECTED``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:906
msgid "Frame was injected, internal to mac80211."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:908
msgid "``IEEE80211_TX_STAT_TX_FILTERED``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:909
msgid ""
"The frame was not transmitted because the destination STA was in powersave "
"mode. Note that to avoid race conditions, the filter must be set by the "
"hardware or firmware upon receiving a frame that indicates that the station "
"went to sleep (must be done on device to filter frames already on the queue) "
"and may only be unset after mac80211 gives the OK for that by setting the "
"IEEE80211_TX_CTL_CLEAR_PS_FILT (see above), since only then is it guaranteed "
"that no more frames are in the hardware queue."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:919
msgid "``IEEE80211_TX_STAT_ACK``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:920
msgid "Frame was acknowledged"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:922
msgid "``IEEE80211_TX_STAT_AMPDU``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:923
msgid "The frame was aggregated, so status is for the whole aggregation."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:926
msgid "``IEEE80211_TX_STAT_AMPDU_NO_BACK``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:927
msgid "no block ack was returned, so consider using block ack request (BAR)."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:930
msgid "``IEEE80211_TX_CTL_RATE_CTRL_PROBE``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:931
msgid ""
"internal to mac80211, can be set by rate control algorithms to indicate "
"probe rate, will be cleared for fragmented frames (except on the last "
"fragment)"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:935
msgid "``IEEE80211_TX_INTFL_OFFCHAN_TX_OK``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:936
msgid ""
"Internal to mac80211. Used to indicate that a frame can be transmitted while "
"the queues are stopped for off-channel operation."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:940
msgid "``IEEE80211_TX_CTL_HW_80211_ENCAP``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:941
msgid "This frame uses hardware encapsulation (header conversion)"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:944
msgid "``IEEE80211_TX_INTFL_RETRIED``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:945
msgid ""
"completely internal to mac80211, used to indicate that a frame was already "
"retried due to PS"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:948
msgid "``IEEE80211_TX_INTFL_DONT_ENCRYPT``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:949
msgid ""
"completely internal to mac80211, used to indicate frame should not be "
"encrypted"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:952
msgid "``IEEE80211_TX_CTL_NO_PS_BUFFER``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:953
msgid ""
"This frame is a response to a poll frame (PS-Poll or uAPSD) or a non-"
"bufferable MMPDU and must be sent although the station is in powersave mode."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:957
msgid "``IEEE80211_TX_CTL_MORE_FRAMES``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:958
msgid ""
"More frames will be passed to the transmit function after the current frame, "
"this can be used by drivers to kick the DMA queue only if unset or when the "
"queue gets full."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:963
msgid "``IEEE80211_TX_INTFL_RETRANSMISSION``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:964
msgid ""
"This frame is being retransmitted after TX status because the destination "
"was asleep, it must not be modified again (no seqno assignment, crypto, etc.)"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:968
msgid "``IEEE80211_TX_INTFL_MLME_CONN_TX``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:969
msgid ""
"This frame was transmitted by the MLME code for connection establishment, "
"this indicates that its status should kick the MLME state machine."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:973
msgid "``IEEE80211_TX_INTFL_NL80211_FRAME_TX``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:974
msgid ""
"Frame was requested through nl80211 MLME command (internal to mac80211 to "
"figure out whether to send TX status to user space)"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:978
msgid "``IEEE80211_TX_CTL_LDPC``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:979
msgid "tells the driver to use LDPC for this frame"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:981
msgid "``IEEE80211_TX_CTL_STBC``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:982
msgid ""
"Enables Space-Time Block Coding (STBC) for this frame and selects the "
"maximum number of streams that it can use."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:985
msgid "``IEEE80211_TX_CTL_TX_OFFCHAN``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:986
msgid ""
"Marks this packet to be transmitted on the off-channel channel when a remain-"
"on-channel offload is done in hardware -- normal packets still flow and are "
"expected to be handled properly by the device."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:991
msgid "``IEEE80211_TX_INTFL_TKIP_MIC_FAILURE``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:992
msgid ""
"Marks this packet to be used for TKIP testing. It will be sent out with "
"incorrect Michael MIC key to allow TKIP countermeasures to be tested."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:996
msgid "``IEEE80211_TX_CTL_NO_CCK_RATE``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:997
msgid ""
"This frame will be sent at non CCK rate. This flag is actually used for "
"management frame especially for P2P frames not being sent at CCK rate in "
"2GHz band."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1001
msgid "``IEEE80211_TX_STATUS_EOSP``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1002
msgid ""
"This packet marks the end of service period, when its status is reported the "
"service period ends. For frames in an SP that mac80211 transmits, it is "
"already set; for driver frames the driver may set this flag. It is also used "
"to do the same for PS-Poll responses."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1008
msgid "``IEEE80211_TX_CTL_USE_MINRATE``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1009
msgid ""
"This frame will be sent at lowest rate. This flag is used to send nullfunc "
"frame at minimum rate when the nullfunc is used for connection monitoring "
"purpose."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1013
msgid "``IEEE80211_TX_CTL_DONTFRAG``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1014
msgid ""
"Don't fragment this packet even if it would be fragmented by size (this is "
"optional, only used for monitor injection)."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1018
msgid "``IEEE80211_TX_STAT_NOACK_TRANSMITTED``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1019
msgid ""
"A frame that was marked with IEEE80211_TX_CTL_NO_ACK has been successfully "
"transmitted without any errors (like issues specific to the driver/HW). This "
"flag must not be set for frames that don't request no-ack behaviour with "
"IEEE80211_TX_CTL_NO_ACK."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:868
msgid ""
"These flags are used with the **flags** member of :c:type:"
"`ieee80211_tx_info`."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:962
msgid "If you have to add new flags to the enumeration, then don't"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:963
msgid "forget to update ``IEEE80211_TX_TEMPORARY_FLAGS`` when necessary."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1004
msgid "flags to describe transmit control"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1010
msgid "``IEEE80211_TX_CTRL_PORT_CTRL_PROTO``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1011
msgid "this frame is a port control protocol frame (e.g. EAP)"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1014
msgid "``IEEE80211_TX_CTRL_PS_RESPONSE``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1015
msgid "This frame is a response to a poll frame (PS-Poll or uAPSD)."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1018
msgid "``IEEE80211_TX_CTRL_RATE_INJECT``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1019
msgid "This frame is injected with rate information"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1021
msgid "``IEEE80211_TX_CTRL_AMSDU``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1022
msgid "This frame is an A-MSDU frame"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1024
msgid "``IEEE80211_TX_CTRL_FAST_XMIT``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1025
msgid "This frame is going through the fast_xmit path"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1027
msgid "``IEEE80211_TX_CTRL_SKIP_MPATH_LOOKUP``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1028
msgid "This frame skips mesh path lookup"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1030
msgid "``IEEE80211_TX_INTCFL_NEED_TXPROCESSING``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1031
msgid ""
"completely internal to mac80211, used to indicate that a pending frame "
"requires TX processing before it can be sent out."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1035
msgid "``IEEE80211_TX_CTRL_NO_SEQNO``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1036
msgid ""
"Do not overwrite the sequence number that has already been assigned to this "
"frame."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1039
msgid "``IEEE80211_TX_CTRL_DONT_REORDER``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1040
msgid ""
"This frame should not be reordered relative to other frames that have this "
"flag set, independent of their QoS TID or other priority field values."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1044
msgid "``IEEE80211_TX_CTRL_MCAST_MLO_FIRST_TX``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1045
msgid "first MLO TX, used mostly internally for sequence number assignment"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1048
msgid "``IEEE80211_TX_CTRL_DONT_USE_RATE_MASK``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1049
msgid ""
"Don't use rate mask for this frame which is transmitted due to scanning or "
"offchannel TX, not in normal operation on the interface."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1053
msgid "``IEEE80211_TX_CTRL_MLO_LINK``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1054
msgid ""
"If not **IEEE80211_LINK_UNSPECIFIED**, this frame should be transmitted on "
"the specific link. This really is only relevant for frames that do not have "
"data present, and is also not used for 802.3 format frames. Note that even "
"if the frame is on a specific link, address translation might still apply if "
"it's intended for an MLD."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1033
msgid "These flags are used in tx_info->control.flags."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1081
msgid "per-rate flags set by the Rate Control algorithm."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1087
msgid "``IEEE80211_TX_RC_USE_RTS_CTS``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1088
msgid "Use RTS/CTS exchange for this rate."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1090
msgid "``IEEE80211_TX_RC_USE_CTS_PROTECT``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1091
msgid ""
"CTS-to-self protection is required. This is set if the current BSS requires "
"ERP protection."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1094
msgid "``IEEE80211_TX_RC_USE_SHORT_PREAMBLE``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1095
msgid "Use short preamble."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1097
msgid "``IEEE80211_TX_RC_MCS``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1098
msgid "HT rate."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1100
msgid "``IEEE80211_TX_RC_GREEN_FIELD``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1101
msgid "Indicates whether this rate should be used in Greenfield mode."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1104
msgid "``IEEE80211_TX_RC_40_MHZ_WIDTH``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1105
msgid "Indicates if the Channel Width should be 40 MHz."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1107
msgid "``IEEE80211_TX_RC_DUP_DATA``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1108
msgid ""
"The frame should be transmitted on both of the adjacent 20 MHz channels, if "
"the current channel type is NL80211_CHAN_HT40MINUS or NL80211_CHAN_HT40PLUS."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1112
msgid "``IEEE80211_TX_RC_SHORT_GI``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1113
msgid "Short Guard interval should be used for this rate."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1115
msgid "``IEEE80211_TX_RC_VHT_MCS``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1116
msgid ""
"VHT MCS rate, in this case the idx field is split into a higher 4 bits (Nss) "
"and lower 4 bits (MCS number)"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1119
msgid "``IEEE80211_TX_RC_80_MHZ_WIDTH``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1120
msgid "Indicates 80 MHz transmission"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1122
msgid "``IEEE80211_TX_RC_160_MHZ_WIDTH``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1123
msgid "Indicates 160 MHz transmission (80+80 isn't supported yet)"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1082
msgid ""
"These flags are set by the Rate control algorithm for each rate during tx, "
"in the **flags** member of struct ieee80211_tx_rate."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1135
msgid "rate selection/status"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1137
msgid "``idx``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1138
msgid "rate index to attempt to send with"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1139
msgid "``count``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1140
msgid "number of tries in this rate before going to the next rate"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1139
msgid ""
"rate control flags (:c:type:`enum mac80211_rate_control_flags "
"<mac80211_rate_control_flags>`)"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1140
msgid ""
"A value of -1 for **idx** indicates an invalid rate and, if used in an array "
"of retry rates, that no more rates should be tried."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1143
msgid ""
"When used for transmit status reporting, the driver should always report the "
"rate along with the flags it used."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1146
msgid ""
":c:type:`struct ieee80211_tx_info <ieee80211_tx_info>` contains an array of "
"these structs in the control information, and it will be filled by the rate "
"control algorithm according to what should be sent. For example, if this "
"array contains, in the format { <idx>, <count> } the information::"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1154
msgid ""
"then this means that the frame should be transmitted up to twice at rate 3, "
"up to twice at rate 2, and up to four times at rate 1 if it doesn't get "
"acknowledged. Say it gets acknowledged by the peer after the fifth attempt, "
"the status information should then contain::"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1162
msgid ""
"since it was transmitted twice at rate 3, twice at rate 2 and once at rate 1 "
"after which we received an acknowledgement."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1200
msgid "skb transmit information"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1208
msgid "transmit info flags, defined above"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1208
#: include/net/mac80211.h:1617
msgid "``band``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1209
msgid ""
"the band to transmit on (use e.g. for checking for races), not valid if the "
"interface is an MLD since we won't know which link the frame will be "
"transmitted on"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1214
msgid "``status_data_idr``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1215
msgid "indicates status data is IDR allocated ID for ack frame"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1212
msgid "``status_data``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1213
msgid ""
"internal data for TX status handling, assigned privately, see also :c:type:"
"`enum ieee80211_status_data <ieee80211_status_data>` for the internal "
"documentation"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1212
msgid "HW queue to put the frame on, skb_get_queue_mapping() gives the AC"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1215
msgid "``tx_time_est``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1216
msgid "TX time estimate in units of 4us, used internally"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1
msgid "``{unnamed_union}``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:2
msgid "anonymous"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1216
msgid "``control``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1217
msgid "union part for control data"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1
msgid "``{unnamed_struct}``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1217
msgid "``control.rates``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1218
msgid "TX rates array to try"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1218
msgid "``control.rts_cts_rate_idx``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1219
msgid "rate for RTS or CTS"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1219
msgid "``control.use_rts``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1220
msgid "use RTS"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1220
msgid "``control.use_cts_prot``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1221
msgid "use RTS/CTS"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1221
msgid "``control.short_preamble``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1222
msgid "use short preamble (CCK only)"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1222
msgid "``control.skip_table``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1223
msgid "skip externally configured rate table"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1223
msgid "``control.jiffies``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1224
msgid "timestamp for expiry on powersave clients"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1224
msgid "``control.vif``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1225
msgid "virtual interface (may be NULL)"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1225
msgid "``control.hw_key``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1226
msgid "key to encrypt with (may be NULL)"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1226
msgid "``control.flags``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1227
msgid ""
"control flags, see :c:type:`enum mac80211_tx_control_flags "
"<mac80211_tx_control_flags>`"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1227
msgid "``control.enqueue_time``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1228
msgid "enqueue time (for iTXQs)"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1241
msgid "``ack``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1242
msgid "union part for pure ACK data"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1242
msgid "``ack.cookie``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1243
msgid "cookie for the ACK"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1231
msgid "``status``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1232
msgid "union part for status data"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1232
msgid "``status.rates``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1233
msgid "attempted rates"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1233
msgid "``status.ack_signal``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1234
msgid "ACK signal"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1234
msgid "``status.ampdu_ack_len``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1235
msgid "AMPDU ack length"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1235
msgid "``status.ampdu_len``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1236
msgid "AMPDU length"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1236
msgid "``status.antenna``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1237
msgid "(legacy, kept only for iwlegacy)"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1237
msgid "``status.tx_time``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1238
msgid ""
"airtime consumed for transmission; note this is only used for WMM AC, not "
"for airtime fairness"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1239
msgid "``status.flags``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1240
msgid ""
"status flags, see :c:type:`enum mac80211_tx_status_flags "
"<mac80211_tx_status_flags>`"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1240
msgid "``status.status_driver_data``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1241
msgid "driver use area"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1228
msgid "``driver_rates``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1229
msgid "alias to **control.rates** to reserve space"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1229
msgid "``pad``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1230
msgid "padding"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1230
msgid "``rate_driver_data``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1231
msgid "driver use area if driver needs **control.rates**"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1243
msgid "``driver_data``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1244
msgid "array of driver_data pointers"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1201
msgid "This structure is placed in skb->cb for three uses:"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1202
msgid "mac80211 TX control - mac80211 tells the driver what to do"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1203
msgid "driver internal use (if applicable)"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1204
msgid "TX status information - driver tells mac80211 what happened"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1399
msgid "clear TX status"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1405
msgid "``struct ieee80211_tx_info *info``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1401
msgid ""
"The :c:type:`struct ieee80211_tx_info <ieee80211_tx_info>` to be cleared."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1402
msgid ""
"When the driver passes an skb back to mac80211, it must report a number of "
"things in TX status. This function clears everything in the TX status but "
"the rate control information (it does clear the count since you need to fill "
"that in anyway)."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1407
msgid "**NOTE**"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1408
msgid "While the rates array is kept intact, this will wipe all of the"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1409
msgid ""
"driver_data fields in info, so it's up to the driver to restore any fields "
"it needs after calling this helper."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1430
msgid "receive flags"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1436
msgid "``RX_FLAG_MMIC_ERROR``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1437
msgid ""
"Michael MIC error was reported on this frame. Use together with "
"``RX_FLAG_MMIC_STRIPPED``."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1440
msgid "``RX_FLAG_DECRYPTED``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1441
msgid "This frame was decrypted in hardware."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1443
msgid "``RX_FLAG_ONLY_MONITOR``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1444
msgid ""
"Report frame only to monitor interfaces without processing it in any regular "
"way. This is useful if drivers offload some frames but still want to report "
"them for sniffing purposes."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1449
msgid "``RX_FLAG_MMIC_STRIPPED``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1450
msgid ""
"the Michael MIC is stripped off this frame, verification has been done by "
"the hardware."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1453
msgid "``RX_FLAG_IV_STRIPPED``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1454
msgid ""
"The IV and ICV are stripped from this frame. If this flag is set, the stack "
"cannot do any replay detection hence the driver or hardware will have to do "
"that."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1458
msgid "``RX_FLAG_FAILED_FCS_CRC``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1459
msgid "Set this flag if the FCS check failed on the frame."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1462
msgid "``RX_FLAG_FAILED_PLCP_CRC``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1463
msgid "Set this flag if the PCLP check failed on the frame."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1466
msgid "``RX_FLAG_MACTIME_IS_RTAP_TS64``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1467
msgid ""
"The timestamp passed in the RX status **mactime** is only for use in the "
"radiotap timestamp header, not otherwise a valid **mactime** value. Note "
"this is a separate flag so that we continue to see ``RX_FLAG_MACTIME`` as "
"unset. Also note that in this case the timestamp is reported to be 64 bits "
"wide, not just 32."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1473
msgid "``RX_FLAG_NO_SIGNAL_VAL``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1474
msgid ""
"The signal strength value is not present. Valid only for data frames (mainly "
"A-MPDU)"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1477
msgid "``RX_FLAG_AMPDU_DETAILS``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1478
msgid ""
"A-MPDU details are known, in particular the reference number "
"(**ampdu_reference**) must be populated and be a distinct number for each A-"
"MPDU"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1482
msgid "``RX_FLAG_PN_VALIDATED``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1483
msgid ""
"Currently only valid for CCMP/GCMP frames, this flag indicates that the PN "
"was verified for replay protection. Note that this flag is also currently "
"only supported when a frame is also decrypted (ie. **RX_FLAG_DECRYPTED** "
"must be set)"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1488
msgid "``RX_FLAG_DUP_VALIDATED``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1489
msgid "The driver should set this flag if it did de-duplication by itself."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1492
msgid "``RX_FLAG_AMPDU_LAST_KNOWN``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1493
msgid ""
"last subframe is known, should be set on all subframes of a single A-MPDU"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1496
msgid "``RX_FLAG_AMPDU_IS_LAST``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1497
msgid "this subframe is the last subframe of the A-MPDU"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1499
msgid "``RX_FLAG_AMPDU_DELIM_CRC_ERROR``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1500
msgid "A delimiter CRC error has been detected on this subframe"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1503
msgid "``RX_FLAG_MACTIME``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1504
msgid ""
"The timestamp passed in the RX status (**mactime** field) is valid if this "
"field is non-zero, and the position where the timestamp was sampled depends "
"on the value."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1508
msgid "``RX_FLAG_MACTIME_PLCP_START``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1509
msgid ""
"The timestamp passed in the RX status (**mactime** field) is valid and "
"contains the time the SYNC preamble was received."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1512
msgid "``RX_FLAG_MACTIME_START``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1513
msgid ""
"The timestamp passed in the RX status (**mactime** field) is valid and "
"contains the time the first symbol of the MPDU was received. This is useful "
"in monitor mode and for proper IBSS merging."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1518
msgid "``RX_FLAG_MACTIME_END``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1519
msgid ""
"The timestamp passed in the RX status (**mactime** field) is valid and "
"contains the time the last symbol of the MPDU (including FCS) was received."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1523
msgid "``RX_FLAG_SKIP_MONITOR``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1524
msgid ""
"Process and report frame to all interfaces except monitor interfaces. This "
"is useful if drivers offload some frames but still want to report them for "
"sniffing purposes."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1529
msgid "``RX_FLAG_AMSDU_MORE``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1530
msgid ""
"Some drivers may prefer to report separate A-MSDU subframes instead of a one "
"huge frame for performance reasons. All, but the last MSDU from an A-MSDU "
"should have this flag set. E.g. if an A-MSDU has 3 frames, the first 2 must "
"have the flag set, while the 3rd (last) one must not have this flag set. The "
"flag is used to deal with retransmission/duplication recovery properly since "
"A-MSDU subframes share the same sequence number. Reported subframes can be "
"either regular MSDU or singly A-MSDUs. Subframes must not be interleaved "
"with other frames."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1540
msgid "``RX_FLAG_RADIOTAP_TLV_AT_END``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1541
msgid ""
"This frame contains radiotap TLVs in the skb->data (before the 802.11 "
"header). If used, the SKB's mac_header pointer must be set to point to the "
"802.11 header after the TLVs, and any padding added after TLV data to align "
"to 4 must be cleared by the driver putting the TLVs in the skb."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1548
msgid "``RX_FLAG_MIC_STRIPPED``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1549
msgid ""
"The mic was stripped of this packet. Decryption was done by the hardware"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1552
msgid "``RX_FLAG_ALLOW_SAME_PN``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1553
msgid ""
"Allow the same PN as same packet before. This is used for AMSDU subframes "
"which can have the same PN as the first subframe."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1557
msgid "``RX_FLAG_ICV_STRIPPED``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1558
msgid ""
"The ICV is stripped from this frame. CRC checking must be done in the "
"hardware."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1561
msgid "``RX_FLAG_AMPDU_EOF_BIT``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1562
msgid "Value of the EOF bit in the A-MPDU delimiter for this frame"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1565
msgid "``RX_FLAG_AMPDU_EOF_BIT_KNOWN``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1566
msgid "The EOF value is known"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1568
msgid "``RX_FLAG_RADIOTAP_HE``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1569
msgid ""
"HE radiotap data is present (:c:type:`struct ieee80211_radiotap_he "
"<ieee80211_radiotap_he>`, mac80211 will fill in"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1572
msgid "``RX_FLAG_RADIOTAP_HE_MU``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1573
msgid ""
"HE MU radiotap data is present (:c:type:`struct ieee80211_radiotap_he_mu "
"<ieee80211_radiotap_he_mu>`)"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1576
msgid "``RX_FLAG_RADIOTAP_LSIG``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1577
msgid "L-SIG radiotap data is present"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1579
msgid "``RX_FLAG_NO_PSDU``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1580
msgid ""
"use the frame only for radiotap reporting, with the \"0-length PSDU\" field "
"included there.  The value for it is in :c:type:`struct ieee80211_rx_status "
"<ieee80211_rx_status>`.  Note that if this value isn't known the frame "
"shouldn't be reported."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1585
msgid "``RX_FLAG_8023``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1586
msgid ""
"the frame has an 802.3 header (decap offload performed by hardware or driver)"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1431
msgid ""
"These flags are used with the **flag** member of :c:type:`struct "
"ieee80211_rx_status <ieee80211_rx_status>`."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1433
msgid "DATA3_DATA_MCS"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1434
msgid "DATA3_DATA_DCM"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1435
msgid "DATA3_CODING"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1436
msgid "DATA5_GI"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1437
msgid "DATA5_DATA_BW_RU_ALLOC"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1438
msgid "DATA6_NSTS"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1439
msgid "DATA3_STBC"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1441
msgid "from the RX info data, so leave those zeroed when building this data)"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1570
msgid "MCS & bandwidth flags"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1576
msgid "``RX_ENC_FLAG_SHORTPRE``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1577
msgid "Short preamble was used for this frame"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1579
msgid "``RX_ENC_FLAG_SHORT_GI``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1580
msgid "Short guard interval was used"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1582
msgid "``RX_ENC_FLAG_HT_GF``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1583
msgid ""
"This frame was received in a HT-greenfield transmission, if the driver fills "
"this value it should add ``IEEE80211_RADIOTAP_MCS_HAVE_FMT`` to **hw."
"radiotap_mcs_details** to advertise that fact."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1588
msgid "``RX_ENC_FLAG_STBC_MASK``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1589
msgid "STBC 2 bit bitmask. 1 - Nss=1, 2 - Nss=2, 3 - Nss=3"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1591
msgid "``RX_ENC_FLAG_LDPC``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1592
msgid "LDPC was used"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1594
msgid "``RX_ENC_FLAG_BF``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1595
msgid "packet was beamformed"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1602
msgid "receive status"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1608
msgid "``mactime``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1609
msgid ""
"value in microseconds of the 64-bit Time Synchronization Function (TSF) "
"timer when the first data symbol (MPDU) arrived at the hardware."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1610
msgid "``boottime_ns``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1611
msgid ""
"CLOCK_BOOTTIME timestamp the frame was received at, this is needed only for "
"beacons and probe responses that update the scan cache."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1612
msgid "``ack_tx_hwtstamp``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1613
msgid ""
"Hardware timestamp for the ack TX in nanoseconds. Only needed for Timing "
"measurement and Fine timing measurement action frames. Only reported by "
"devices that have timestamping enabled."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1615
msgid "``device_timestamp``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1616
msgid ""
"arbitrary timestamp for the device, mac80211 doesn't use it but can store it "
"and pass it back to the driver for synchronisation"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1644
msgid "``ampdu_reference``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1645
msgid ""
"A-MPDU reference number, must be a different value for each A-MPDU but the "
"same for each subframe within one A-MPDU"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1633
msgid "``flag``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1634
msgid "``RX_FLAG_``\\*"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1618
msgid "``freq``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1619
msgid ""
"frequency the radio was tuned to when receiving this frame, in MHz This "
"field must be set for management frames, but isn't strictly needed for data "
"(other) frames - for those it only affects radiotap reporting."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1621
msgid "``freq_offset``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1622
msgid "**freq** has a positive offset of 500Khz."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1636
msgid "``enc_flags``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1637
msgid ""
"uses bits from :c:type:`enum mac80211_rx_encoding_flags "
"<mac80211_rx_encoding_flags>`"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1634
msgid "``encoding``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1635
msgid ":c:type:`enum mac80211_rx_encoding <mac80211_rx_encoding>`"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1635
msgid "``bw``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1636
msgid ":c:type:`enum rate_info_bw <rate_info_bw>`"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1637
msgid "``he_ru``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1638
msgid "HE RU, from :c:type:`enum nl80211_he_ru_alloc <nl80211_he_ru_alloc>`"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1638
msgid "``he_gi``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1639
msgid "HE GI, from :c:type:`enum nl80211_he_gi <nl80211_he_gi>`"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1639
msgid "``he_dcm``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1640
msgid "HE DCM value"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1640
msgid "``eht``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1641
msgid "EHT specific rate information"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1641
msgid "``eht.ru``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1642
msgid "EHT RU, from :c:type:`enum nl80211_eht_ru_alloc <nl80211_eht_ru_alloc>`"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1642
msgid "``eht.gi``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1643
msgid "EHT GI, from :c:type:`enum nl80211_eht_gi <nl80211_eht_gi>`"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1630
msgid "``rate_idx``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1631
msgid ""
"index of data rate into band's supported rates or MCS index if HT or VHT is "
"used (``RX_FLAG_HT``/``RX_FLAG_VHT``)"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1632
msgid "``nss``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1633
msgid "number of streams (VHT, HE and EHT only)"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1643
msgid "``rx_flags``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1644
msgid "internal RX flags for mac80211"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1618
msgid "the active band when this frame was received"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1629
msgid "``antenna``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1630
msgid "antenna used"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1622
msgid "``signal``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1623
msgid ""
"signal strength when receiving this frame, either in dBm, in dB or "
"unspecified depending on the hardware capabilities flags "
"**IEEE80211_HW_SIGNAL_***"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1625
msgid "``chains``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1626
msgid ""
"bitmask of receive chains for which separate signal strength values were "
"filled."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1627
msgid "``chain_signal``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1628
msgid ""
"per-chain signal strength, in dBm (unlike **signal**, doesn't support dB or "
"unspecified units)"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1646
msgid "``zero_length_psdu_type``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1647
msgid "radiotap type of the 0-length PSDU"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1647
msgid "``link_valid``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1648
msgid ""
"if the link which is identified by **link_id** is valid. This flag is set "
"only when connection is MLO."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1649
msgid "``link_id``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1650
msgid ""
"id of the link used to receive the packet. This is used along with "
"**link_valid**."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:1603
msgid ""
"The low-level driver should provide this information (the subset supported "
"by hardware) to the 802.11 code with each received frame, in the skb's "
"control buffer (cb)."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5189
#: include/net/mac80211.h:5214
msgid "receive frame"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5205
#: include/net/mac80211.h:5223 include/net/mac80211.h:5238
msgid "the hardware this frame came in on"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5207
#: include/net/mac80211.h:5225 include/net/mac80211.h:5240
#: include/net/mac80211.h:5410 include/net/mac80211.h:5470
#: include/net/mac80211.h:5490
msgid "``struct sk_buff *skb``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5206
#: include/net/mac80211.h:5224 include/net/mac80211.h:5239
msgid "the buffer to receive, owned by mac80211 after this call"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5190
msgid ""
"Use this function to hand received frames to mac80211. The receive buffer in "
"**skb** must start with an IEEE 802.11 header. In case of a paged **skb** is "
"used, the driver is recommended to put the ieee80211 header of the frame on "
"the linear part of the **skb** to avoid memory allocation and/or memcpy by "
"the stack."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5196
msgid ""
"This function may not be called in IRQ context. Calls to this function for a "
"single hardware must be synchronized against each other. Calls to this "
"function, ieee80211_rx_ni() and ieee80211_rx_irqsafe() may not be mixed for "
"a single hardware. Must not run concurrently with ieee80211_tx_status_skb() "
"or ieee80211_tx_status_ni()."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5202
msgid "In process context use instead ieee80211_rx_ni()."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5215
msgid ""
"Like ieee80211_rx() but can be called in IRQ context (internally defers to a "
"tasklet.)"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5218
msgid ""
"Calls to this function, ieee80211_rx() or ieee80211_rx_ni() may not be mixed "
"for a single hardware.Must not run concurrently with "
"ieee80211_tx_status_skb() or ieee80211_tx_status_ni()."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5229
msgid "receive frame (in process context)"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5230
msgid ""
"Like ieee80211_rx() but can be called in process context (internally "
"disables bottom halves)."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5233
msgid ""
"Calls to this function, ieee80211_rx() and ieee80211_rx_irqsafe() may not be "
"mixed for a single hardware. Must not run concurrently with "
"ieee80211_tx_status_skb() or ieee80211_tx_status_ni()."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5396
msgid "transmit status callback"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5408
#: include/net/mac80211.h:5468 include/net/mac80211.h:5488
msgid "the hardware the frame was transmitted by"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5409
#: include/net/mac80211.h:5469 include/net/mac80211.h:5489
msgid "the frame that was transmitted, owned by mac80211 after this call"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5397
msgid ""
"Call this function for all transmitted frames after they have been "
"transmitted. It is permissible to not call this function for multicast "
"frames but this can affect statistics."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5401
msgid ""
"This function may not be called in IRQ context. Calls to this function for a "
"single hardware must be synchronized against each other. Calls to this "
"function, ieee80211_tx_status_ni() and ieee80211_tx_status_irqsafe() may not "
"be mixed for a single hardware. Must not run concurrently with "
"ieee80211_rx() or ieee80211_rx_ni()."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5460
msgid "transmit status callback (in process context)"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5461
msgid "Like ieee80211_tx_status_skb() but can be called in process context."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5463
msgid ""
"Calls to this function, ieee80211_tx_status_skb() and "
"ieee80211_tx_status_irqsafe() may not be mixed for a single hardware."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5480
msgid "IRQ-safe transmit status callback"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5481
msgid ""
"Like ieee80211_tx_status_skb() but can be called in IRQ context (internally "
"defers to a tasklet.)"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5484
msgid ""
"Calls to this function, ieee80211_tx_status_skb() and "
"ieee80211_tx_status_ni() may not be mixed for a single hardware."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5804
msgid "RTS frame generation function"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5805
#: include/net/mac80211.h:5824 include/net/mac80211.h:5841
#: include/net/mac80211.h:5861 include/net/mac80211.h:5879
msgid "pointer obtained from ieee80211_alloc_hw()."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5807
#: include/net/mac80211.h:5826 include/net/mac80211.h:5843
#: include/net/mac80211.h:5863 include/net/mac80211.h:5881
msgid "``struct ieee80211_vif *vif``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5806
#: include/net/mac80211.h:5825 include/net/mac80211.h:5842
#: include/net/mac80211.h:5862 include/net/mac80211.h:5880
msgid ""
":c:type:`struct ieee80211_vif <ieee80211_vif>` pointer from the "
"add_interface callback."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5808
#: include/net/mac80211.h:5844
msgid "``const void *frame``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5807
msgid "pointer to the frame that is going to be protected by the RTS."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5809
#: include/net/mac80211.h:5827 include/net/mac80211.h:5845
#: include/net/mac80211.h:5864 include/net/mac80211.h:5883
msgid "``size_t frame_len``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5808
#: include/net/mac80211.h:5844
msgid "the frame length (in octets)."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5810
#: include/net/mac80211.h:5828 include/net/mac80211.h:5846
#: include/net/mac80211.h:5865
msgid "``const struct ieee80211_tx_info *frame_txctl``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5809
#: include/net/mac80211.h:5827 include/net/mac80211.h:5845
#: include/net/mac80211.h:5864
msgid ":c:type:`struct ieee80211_tx_info <ieee80211_tx_info>` of the frame."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5811
msgid "``struct ieee80211_rts *rts``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5810
msgid "The buffer where to store the RTS frame."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5811
msgid ""
"If the RTS frames are generated by the host system (i.e., not in hardware/"
"firmware), the low-level driver uses this function to receive the next RTS "
"frame from the 802.11 code. The low-level is responsible for calling this "
"function before and RTS frame is needed."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5823
msgid "Get the duration field for an RTS frame"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5826
msgid "the length of the frame that is going to be protected by the RTS."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5828
msgid ""
"If the RTS is generated in firmware, but the host system must provide the "
"duration field, the low-level driver uses this function to receive the "
"duration field value in little-endian byteorder."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5833
#: include/net/mac80211.h:5870 include/net/mac80211.h:5888
msgid "The duration."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5840
msgid "CTS-to-self frame generation function"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5843
msgid "pointer to the frame that is going to be protected by the CTS-to-self."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5847
msgid "``struct ieee80211_cts *cts``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5846
msgid "The buffer where to store the CTS-to-self frame."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5847
msgid ""
"If the CTS-to-self frames are generated by the host system (i.e., not in "
"hardware/firmware), the low-level driver uses this function to receive the "
"next CTS-to-self frame from the 802.11 code. The low-level is responsible "
"for calling this function before and CTS-to-self frame is needed."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5860
msgid "Get the duration field for a CTS-to-self frame"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5863
msgid ""
"the length of the frame that is going to be protected by the CTS-to-self."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5865
msgid ""
"If the CTS-to-self is generated in firmware, but the host system must "
"provide the duration field, the low-level driver uses this function to "
"receive the duration field value in little-endian byteorder."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5878
msgid "Calculate the duration field for a frame"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5882
msgid "``enum nl80211_band band``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5881
msgid "the band to calculate the frame duration on"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5882
msgid "the length of the frame."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5884
msgid "``struct ieee80211_rate *rate``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5883
msgid "the rate at which the frame is going to be transmitted."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:5884
msgid ""
"Calculate the duration field of some generic frame, given its length and "
"transmission rate (in 100kbps)."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:6102
msgid "wake specific queue"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:6103
#: include/net/mac80211.h:6112 include/net/mac80211.h:6121
#: include/net/mac80211.h:6133 include/net/mac80211.h:6141
msgid "pointer as obtained from ieee80211_alloc_hw()."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:6105
#: include/net/mac80211.h:6114 include/net/mac80211.h:6123
msgid "``int queue``"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:6104
#: include/net/mac80211.h:6113 include/net/mac80211.h:6122
msgid "queue number (counted from zero)."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:6105
msgid "Drivers must use this function instead of netif_wake_queue."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:6111
msgid "stop specific queue"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:6114
msgid "Drivers must use this function instead of netif_stop_queue."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:6120
msgid "test status of the queue"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:6123
msgid "Drivers must use this function instead of netif_queue_stopped."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:6126
msgid "``true`` if the queue is stopped. ``false`` otherwise."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:6132
msgid "stop all queues"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:6134
msgid "Drivers must use this function instead of netif_tx_stop_all_queues."
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:6140
msgid "wake all queues"
msgstr ""

#: ../../../driver-api/80211/mac80211:109: include/net/mac80211.h:6142
msgid "Drivers must use this function instead of netif_tx_wake_all_queues."
msgstr ""

#: ../../../driver-api/80211/mac80211.rst:138
msgid "Frame filtering"
msgstr ""

#: ../../../driver-api/80211/mac80211:140: include/net/mac80211.h:3455
msgid ""
"mac80211 requires to see many management frames for proper operation, and "
"users may want to see many more frames when in monitor mode. However, for "
"best CPU usage and power consumption, having as few frames as possible "
"percolate through the stack is desirable. Hence, the hardware should filter "
"as much as possible."
msgstr ""

#: ../../../driver-api/80211/mac80211:140: include/net/mac80211.h:3461
msgid ""
"To achieve this, mac80211 uses filter flags (see below) to tell the driver's "
"configure_filter() function which frames should be passed to mac80211 and "
"which should be filtered out."
msgstr ""

#: ../../../driver-api/80211/mac80211:140: include/net/mac80211.h:3465
msgid ""
"Before configure_filter() is invoked, the prepare_multicast() callback is "
"invoked with the parameters **mc_count** and **mc_list** for the combined "
"multicast address list of all virtual interfaces. It's use is optional, and "
"it returns a u64 that is passed to configure_filter(). Additionally, "
"configure_filter() has the arguments **changed_flags** telling which flags "
"were changed and **total_flags** with the new flag states."
msgstr ""

#: ../../../driver-api/80211/mac80211:140: include/net/mac80211.h:3473
msgid ""
"If your device has no multicast address filters your driver will need to "
"check both the ``FIF_ALLMULTI`` flag and the **mc_count** parameter to see "
"whether multicast frames should be accepted or dropped."
msgstr ""

#: ../../../driver-api/80211/mac80211:140: include/net/mac80211.h:3478
msgid ""
"All unsupported flags in **total_flags** must be cleared. Hardware does not "
"support a flag if it is incapable of _passing_ the frame to the stack. "
"Otherwise the driver must ignore the flag, but not clear it. You must _only_ "
"clear the flag (announce no support for the flag to mac80211) if you are not "
"able to pass the packet type to the stack (so the hardware always filters "
"it). So for example, you should clear **FIF_CONTROL**, if your hardware "
"always filters control frames. If your hardware always passes control frames "
"to the kernel and is incapable of filtering them, you do _not_ clear the "
"**FIF_CONTROL** flag. This rule applies to all other FIF flags as well."
msgstr ""

#: ../../../driver-api/80211/mac80211:143: include/net/mac80211.h:3647
msgid "hardware filter flags"
msgstr ""

#: ../../../driver-api/80211/mac80211:143: include/net/mac80211.h:3653
msgid "``FIF_ALLMULTI``"
msgstr ""

#: ../../../driver-api/80211/mac80211:143: include/net/mac80211.h:3654
msgid ""
"pass all multicast frames, this is used if requested by the user or if the "
"hardware is not capable of filtering by multicast address."
msgstr ""

#: ../../../driver-api/80211/mac80211:143: include/net/mac80211.h:3658
msgid "``FIF_FCSFAIL``"
msgstr ""

#: ../../../driver-api/80211/mac80211:143: include/net/mac80211.h:3659
msgid ""
"pass frames with failed FCS (but you need to set the "
"``RX_FLAG_FAILED_FCS_CRC`` for them)"
msgstr ""

#: ../../../driver-api/80211/mac80211:143: include/net/mac80211.h:3662
msgid "``FIF_PLCPFAIL``"
msgstr ""

#: ../../../driver-api/80211/mac80211:143: include/net/mac80211.h:3663
msgid ""
"pass frames with failed PLCP CRC (but you need to set the "
"``RX_FLAG_FAILED_PLCP_CRC`` for them"
msgstr ""

#: ../../../driver-api/80211/mac80211:143: include/net/mac80211.h:3666
msgid "``FIF_BCN_PRBRESP_PROMISC``"
msgstr ""

#: ../../../driver-api/80211/mac80211:143: include/net/mac80211.h:3667
msgid ""
"This flag is set during scanning to indicate to the hardware that it should "
"not filter beacons or probe responses by BSSID. Filtering them can greatly "
"reduce the amount of processing mac80211 needs to do and the amount of CPU "
"wakeups, so you should honour this flag if possible."
msgstr ""

#: ../../../driver-api/80211/mac80211:143: include/net/mac80211.h:3673
msgid "``FIF_CONTROL``"
msgstr ""

#: ../../../driver-api/80211/mac80211:143: include/net/mac80211.h:3674
msgid "pass control frames (except for PS Poll) addressed to this station"
msgstr ""

#: ../../../driver-api/80211/mac80211:143: include/net/mac80211.h:3677
msgid "``FIF_OTHER_BSS``"
msgstr ""

#: ../../../driver-api/80211/mac80211:143: include/net/mac80211.h:3678
msgid "pass frames destined to other BSSes"
msgstr ""

#: ../../../driver-api/80211/mac80211:143: include/net/mac80211.h:3680
msgid "``FIF_PSPOLL``"
msgstr ""

#: ../../../driver-api/80211/mac80211:143: include/net/mac80211.h:3681
msgid "pass PS Poll frames"
msgstr ""

#: ../../../driver-api/80211/mac80211:143: include/net/mac80211.h:3683
msgid "``FIF_PROBE_REQ``"
msgstr ""

#: ../../../driver-api/80211/mac80211:143: include/net/mac80211.h:3684
msgid "pass probe request frames"
msgstr ""

#: ../../../driver-api/80211/mac80211:143: include/net/mac80211.h:3686
msgid "``FIF_MCAST_ACTION``"
msgstr ""

#: ../../../driver-api/80211/mac80211:143: include/net/mac80211.h:3687
msgid "pass multicast Action frames"
msgstr ""

#: ../../../driver-api/80211/mac80211:143: include/net/mac80211.h:3648
msgid ""
"These flags determine what the filter in hardware should be programmed to "
"let through and what should not be passed to the stack. It is always safe to "
"pass more frames than requested, but this has negative impact on power "
"consumption."
msgstr ""

#: ../../../driver-api/80211/mac80211.rst:147
msgid "The mac80211 workqueue"
msgstr ""

#: ../../../driver-api/80211/mac80211:149: include/net/mac80211.h:75
msgid ""
"mac80211 provides its own workqueue for drivers and internal mac80211 use. "
"The workqueue is a single threaded workqueue and can only be accessed by "
"helpers for sanity checking. Drivers must ensure all work added onto the "
"mac80211 workqueue should be cancelled on the driver stop() callback."
msgstr ""

#: ../../../driver-api/80211/mac80211:149: include/net/mac80211.h:80
msgid ""
"mac80211 will flush the workqueue upon interface removal and during suspend."
msgstr ""

#: ../../../driver-api/80211/mac80211:149: include/net/mac80211.h:83
msgid ""
"All work performed on the mac80211 workqueue must not acquire the RTNL lock."
msgstr ""

#: ../../../driver-api/80211/mac80211:152: include/net/mac80211.h:6323
#: include/net/mac80211.h:6334
msgid "add work onto the mac80211 workqueue"
msgstr ""

#: ../../../driver-api/80211/mac80211:152: include/net/mac80211.h:6328
#: include/net/mac80211.h:6339
msgid "the hardware struct for the interface we are adding work for"
msgstr ""

#: ../../../driver-api/80211/mac80211:152: include/net/mac80211.h:6330
msgid "``struct work_struct *work``"
msgstr ""

#: ../../../driver-api/80211/mac80211:152: include/net/mac80211.h:6329
msgid "the work we want to add onto the mac80211 workqueue"
msgstr ""

#: ../../../driver-api/80211/mac80211:152: include/net/mac80211.h:6324
msgid ""
"Drivers and mac80211 use this to add work onto the mac80211 workqueue. This "
"helper ensures drivers are not queueing work when they should not be."
msgstr ""

#: ../../../driver-api/80211/mac80211:152: include/net/mac80211.h:6341
msgid "``struct delayed_work *dwork``"
msgstr ""

#: ../../../driver-api/80211/mac80211:152: include/net/mac80211.h:6340
msgid "delayable work to queue onto the mac80211 workqueue"
msgstr ""

#: ../../../driver-api/80211/mac80211:152: include/net/mac80211.h:6342
msgid "``unsigned long delay``"
msgstr ""

#: ../../../driver-api/80211/mac80211:152: include/net/mac80211.h:6341
msgid "number of jiffies to wait before queueing"
msgstr ""

#: ../../../driver-api/80211/mac80211:152: include/net/mac80211.h:6335
msgid ""
"Drivers and mac80211 use this to queue delayed work onto the mac80211 "
"workqueue."
msgstr ""
