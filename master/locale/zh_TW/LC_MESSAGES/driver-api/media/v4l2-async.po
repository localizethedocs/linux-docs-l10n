# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-13 08:27+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../driver-api/media/v4l2-async.rst:4
msgid "V4L2 async kAPI"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:22
msgid ""
"type of asynchronous subdevice logic to be used in order to identify a match"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:26
msgid "**Constants**"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:28
msgid "``V4L2_ASYNC_MATCH_TYPE_I2C``"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:29
msgid "Match will check for I2C adapter ID and address"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:31
msgid "``V4L2_ASYNC_MATCH_TYPE_FWNODE``"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:32
msgid "Match will use firmware node"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:34
#: include/media/v4l2-async.h:77 include/media/v4l2-async.h:153
#: include/media/v4l2-async.h:168 include/media/v4l2-async.h:191
#: include/media/v4l2-async.h:214 include/media/v4l2-async.h:240
#: include/media/v4l2-async.h:254 include/media/v4l2-async.h:270
#: include/media/v4l2-async.h:295 include/media/v4l2-async.h:325
msgid "**Description**"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:27
msgid ""
"This enum is used by the asynchronous connection logic to define the "
"algorithm that will be used to match an asynchronous device."
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:37
msgid "async connection match information"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:41
#: include/media/v4l2-async.h:69 include/media/v4l2-async.h:92
#: include/media/v4l2-async.h:111 include/media/v4l2-async.h:133
msgid "**Definition**::"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:54
#: include/media/v4l2-async.h:79 include/media/v4l2-async.h:101
#: include/media/v4l2-async.h:123 include/media/v4l2-async.h:140
msgid "**Members**"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:39
#: include/media/v4l2-async.h:188 include/media/v4l2-async.h:211
#: include/media/v4l2-async.h:237
msgid "``type``"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:40
msgid "type of match that will be used"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:1
msgid "``{unnamed_union}``"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:2
msgid "anonymous"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:40
#: include/media/v4l2-async.h:186
msgid "``fwnode``"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:41
msgid ""
"pointer to :c:type:`struct fwnode_handle <fwnode_handle>` to be matched. "
"Used if **match_type** is ``V4L2_ASYNC_MATCH_TYPE_FWNODE``."
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:42
msgid "``i2c``"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:43
msgid ""
"embedded struct with I2C parameters to be matched. Both **match.i2c."
"adapter_id** and **match.i2c.address** should be matched. Used if "
"**match_type** is ``V4L2_ASYNC_MATCH_TYPE_I2C``."
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:46
msgid "``i2c.adapter_id``"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:47
msgid ""
"I2C adapter ID to be matched. Used if **match_type** is "
"``V4L2_ASYNC_MATCH_TYPE_I2C``."
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:49
msgid "``i2c.address``"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:50
msgid ""
"I2C address to be matched. Used if **match_type** is "
"``V4L2_ASYNC_MATCH_TYPE_I2C``."
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:65
msgid "sub-device connection descriptor, as known to a bridge"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:68
msgid "``match``"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:69
msgid "struct of match type and per-bus type matching data sets"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:69
#: include/media/v4l2-async.h:187 include/media/v4l2-async.h:209
#: include/media/v4l2-async.h:236
msgid "``notifier``"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:70
msgid "the async notifier the connection is related to"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:70
msgid "``asc_entry``"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:71
msgid ""
"used to add struct v4l2_async_connection objects to the notifier "
"**waiting_list** or **done_list**"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:72
msgid "``asc_subdev_entry``"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:73
msgid "entry in struct v4l2_async_subdev.asc_list list"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:73
#: include/media/v4l2-async.h:111 include/media/v4l2-async.h:314
msgid "``sd``"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:74
msgid "the related sub-device"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:74
msgid ""
"When this struct is used as a member in a driver specific struct, the driver "
"specific struct shall contain the :c:type:`struct v4l2_async_connection "
"<v4l2_async_connection>` as its first member."
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:88
msgid "Asynchronous V4L2 notifier operations"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:89
msgid "``bound``"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:90
msgid "a sub-device has been bound by the given connection"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:90
msgid "``complete``"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:91
msgid ""
"All connections have been bound successfully. The complete callback is only "
"executed for the root notifier."
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:92
msgid "``unbind``"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:93
msgid "a subdevice is leaving"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:93
msgid "``destroy``"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:94
msgid "the asc is about to be freed"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:107
msgid "v4l2_device notifier data"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:109
msgid "``ops``"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:110
msgid "notifier operations"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:110
msgid "``v4l2_dev``"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:111
msgid "v4l2_device of the root notifier, NULL otherwise"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:112
msgid "sub-device that registered the notifier, NULL otherwise"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:112
msgid "``parent``"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:113
msgid "parent notifier"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:113
msgid "``waiting_list``"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:114
msgid "list of struct v4l2_async_connection, waiting for their drivers"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:115
msgid "``done_list``"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:116
msgid "list of struct v4l2_subdev, already probed"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:116
msgid "``notifier_entry``"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:117
msgid "member in a global list of notifiers"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:129
msgid "Entry in sub-device's fwnode list"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:131
msgid "``async_subdev_endpoint_entry``"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:132
msgid ""
"An entry in async_subdev_endpoint_list of :c:type:`struct v4l2_subdev "
"<v4l2_subdev>`"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:133
msgid "``endpoint``"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:134
msgid "Endpoint fwnode agains which to match the sub-device"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:141
msgid "Initialize debugging tools."
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:145
#: include/media/v4l2-async.h:152 include/media/v4l2-async.h:167
#: include/media/v4l2-async.h:185 include/media/v4l2-async.h:207
#: include/media/v4l2-async.h:234 include/media/v4l2-async.h:252
#: include/media/v4l2-async.h:270 include/media/v4l2-async.h:281
#: include/media/v4l2-async.h:288 include/media/v4l2-async.h:296
#: include/media/v4l2-async.h:312 include/media/v4l2-async.h:322
#: include/media/v4l2-async.h:344
msgid "**Parameters**"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:147
msgid "``struct dentry *debugfs_dir``"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:143
msgid "pointer to the parent debugfs :c:type:`struct dentry <dentry>`"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:148
msgid "Initialize a notifier."
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:154
#: include/media/v4l2-async.h:169 include/media/v4l2-async.h:283
#: include/media/v4l2-async.h:290 include/media/v4l2-async.h:298
msgid "``struct v4l2_async_notifier *notifier``"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:150
#: include/media/v4l2-async.h:165 include/media/v4l2-async.h:184
#: include/media/v4l2-async.h:207 include/media/v4l2-async.h:233
#: include/media/v4l2-async.h:279 include/media/v4l2-async.h:287
msgid "pointer to :c:type:`struct v4l2_async_notifier <v4l2_async_notifier>`"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:152
msgid "``struct v4l2_device *v4l2_dev``"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:151
msgid "pointer to :c:type:`struct v4l2_device <v4l2_device>`"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:152
msgid ""
"This function initializes the notifier **asc_entry**. It must be called "
"before adding a subdevice to a notifier, using one of: "
"v4l2_async_nf_add_fwnode_remote(), v4l2_async_nf_add_fwnode() or "
"v4l2_async_nf_add_i2c()."
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:163
msgid "Initialize a sub-device notifier."
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:167
#: include/media/v4l2-async.h:254 include/media/v4l2-async.h:272
#: include/media/v4l2-async.h:324 include/media/v4l2-async.h:346
msgid "``struct v4l2_subdev *sd``"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:166
#: include/media/v4l2-async.h:311 include/media/v4l2-async.h:343
msgid "pointer to :c:type:`struct v4l2_subdev <v4l2_subdev>`"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:167
msgid ""
"This function initializes the notifier **asc_list**. It must be called "
"before adding a subdevice to a notifier, using one of: "
"v4l2_async_nf_add_fwnode_remote(), v4l2_async_nf_add_fwnode() or "
"v4l2_async_nf_add_i2c()."
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:183
msgid "``v4l2_async_nf_add_fwnode (notifier, fwnode, type)``"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:181
msgid ""
"Allocate and add a fwnode async subdev to the notifier's master asc_list."
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:185
msgid ""
"fwnode handle of the sub-device to be matched, pointer to :c:type:`struct "
"fwnode_handle <fwnode_handle>`"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:187
msgid ""
"Type of the driver's async sub-device or connection struct. The :c:type:"
"`struct v4l2_async_connection <v4l2_async_connection>` shall be the first "
"member of the driver's async struct, i.e. both begin at the same memory "
"address."
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:190
msgid ""
"Allocate a fwnode-matched asc of size asc_struct_size, and add it to the "
"notifiers **asc_list**. The function also gets a reference of the fwnode "
"which is released later at notifier cleanup time."
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:205
msgid "``v4l2_async_nf_add_fwnode_remote (notifier, ep, type)``"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:203
msgid ""
"Allocate and add a fwnode remote async subdev to the notifier's master "
"asc_list."
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:209
msgid "``ep``"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:208
msgid ""
"local endpoint pointing to the remote connection to be matched, pointer to :"
"c:type:`struct fwnode_handle <fwnode_handle>`"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:210
#: include/media/v4l2-async.h:236
msgid ""
"Type of the driver's async connection struct. The :c:type:`struct "
"v4l2_async_connection <v4l2_async_connection>` shall be the first member of "
"the driver's async connection struct, i.e. both begin at the same memory "
"address."
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:213
msgid ""
"Gets the remote endpoint of a given local endpoint, set it up for fwnode "
"matching and adds the async connection to the notifier's **asc_list**. The "
"function also gets a reference of the fwnode which is released later at "
"notifier cleanup time."
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:218
msgid ""
"This is just like v4l2_async_nf_add_fwnode(), but with the exception that "
"the fwnode refers to a local endpoint, not the remote one."
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:232
msgid "``v4l2_async_nf_add_i2c (notifier, adapter, address, type)``"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:230
msgid "Allocate and add an i2c async subdev to the notifier's master asc_list."
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:235
msgid "``adapter``"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:234
msgid "I2C adapter ID to be matched"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:236
msgid "``address``"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:235
msgid "I2C address of connection to be matched"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:239
msgid "Same as v4l2_async_nf_add_fwnode() but for I2C matched connections."
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:248
msgid "Add an endpoint fwnode to async sub-device matching list"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:251
#: include/media/v4l2-async.h:268
msgid "the sub-device"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:253
msgid "``struct fwnode_handle *fwnode``"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:252
msgid "the endpoint fwnode to match"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:253
msgid ""
"Add a fwnode to the async sub-device's matching list. This allows "
"registering multiple async sub-devices from a single device."
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:256
msgid ""
"Note that calling v4l2_subdev_cleanup() as part of the sub-device's cleanup "
"if endpoints have been added to the sub-device's fwnode matching list."
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:259
msgid "Returns an error on failure, 0 on success."
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:266
msgid ""
"return a unique :c:type:`struct v4l2_async_connection "
"<v4l2_async_connection>` for a sub-device"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:269
msgid ""
"Return an async connection for a sub-device, when there is a single one only."
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:277
msgid "registers a subdevice asynchronous notifier"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:284
msgid "unregisters a subdevice asynchronous notifier"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:292
msgid "clean up notifier resources"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:293
msgid "the notifier the resources of which are to be cleaned up"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:294
msgid ""
"Release memory resources related to a notifier, including the async "
"connections allocated for the purposes of the notifier but not the notifier "
"itself. The user is responsible for calling this function to clean up the "
"notifier after calling v4l2_async_nf_add_fwnode_remote(), "
"v4l2_async_nf_add_fwnode() or v4l2_async_nf_add_i2c()."
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:300
msgid ""
"There is no harm from calling v4l2_async_nf_cleanup() in other cases as long "
"as its memory has been zeroed after it has been allocated."
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:310
msgid "``v4l2_async_register_subdev (sd)``"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:308
msgid "registers a sub-device to the asynchronous subdevice framework"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:318
msgid ""
"registers a sensor sub-device to the asynchronous sub-device framework and "
"parse set up common sensor related devices"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:323
msgid "pointer to struct :c:type:`v4l2_subdev`"
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:324
msgid ""
"This function is just like v4l2_async_register_subdev() with the exception "
"that calling it will also parse firmware interfaces for remote references "
"using v4l2_async_nf_parse_fwnode_sensor() and registers the async sub-"
"devices. The sub-device is similarly unregistered by calling "
"v4l2_async_unregister_subdev()."
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:330
msgid "While registered, the subdev module is marked as in-use."
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:332
msgid ""
"An error is returned if the module is no longer loaded on any attempts to "
"register it."
msgstr ""

#: ../../../driver-api/media/v4l2-async:5: include/media/v4l2-async.h:340
msgid "unregisters a sub-device to the asynchronous subdevice framework"
msgstr ""
