# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../driver-api/media/v4l2-fh.rst:4
msgid "V4L2 File handlers"
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:6
msgid ""
"struct v4l2_fh provides a way to easily keep file handle specific data that "
"is used by the V4L2 framework."
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:10
msgid ""
"New drivers must use struct v4l2_fh since it is also used to implement "
"priority handling (:ref:`VIDIOC_G_PRIORITY`)."
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:14
msgid ""
"The users of :c:type:`v4l2_fh` (in the V4L2 framework, not the driver) know "
"whether a driver uses :c:type:`v4l2_fh` as its ``file->private_data`` "
"pointer by testing the ``V4L2_FL_USES_V4L2_FH`` bit in :c:type:"
"`video_device`->flags. This bit is set whenever :c:func:`v4l2_fh_init` is "
"called."
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:19
msgid ""
"struct v4l2_fh is allocated as a part of the driver's own file handle "
"structure and ``file->private_data`` is set to it in the driver's ``open()`` "
"function by the driver."
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:23
msgid ""
"In many cases the struct v4l2_fh will be embedded in a larger structure. In "
"that case you should call:"
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:26
msgid ":c:func:`v4l2_fh_init` and :c:func:`v4l2_fh_add` in ``open()``"
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:27
msgid ":c:func:`v4l2_fh_del` and :c:func:`v4l2_fh_exit` in ``release()``"
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:29
msgid ""
"Drivers can extract their own file handle structure by using the "
"container_of macro."
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:32
msgid "Example:"
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:76
msgid "Below is a short description of the :c:type:`v4l2_fh` functions used:"
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:78
msgid ""
":c:func:`v4l2_fh_init <v4l2_fh_init>` (:c:type:`fh <v4l2_fh>`, :c:type:`vdev "
"<video_device>`)"
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:82
msgid ""
"Initialise the file handle. This **MUST** be performed in the driver's :c:"
"type:`v4l2_file_operations`->open() handler."
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:86
msgid ":c:func:`v4l2_fh_add <v4l2_fh_add>` (:c:type:`fh <v4l2_fh>`)"
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:89
msgid ""
"Add a :c:type:`v4l2_fh` to :c:type:`video_device` file handle list. Must be "
"called once the file handle is completely initialized."
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:92
msgid ":c:func:`v4l2_fh_del <v4l2_fh_del>` (:c:type:`fh <v4l2_fh>`)"
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:95
msgid ""
"Unassociate the file handle from :c:type:`video_device`. The file handle "
"exit function may now be called."
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:98
msgid ":c:func:`v4l2_fh_exit <v4l2_fh_exit>` (:c:type:`fh <v4l2_fh>`)"
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:101
msgid ""
"Uninitialise the file handle. After uninitialisation the :c:type:`v4l2_fh` "
"memory can be freed."
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:105
msgid ""
"If struct v4l2_fh is not embedded, then you can use these helper functions:"
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:107
msgid ":c:func:`v4l2_fh_open <v4l2_fh_open>` (struct file \\*filp)"
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:110
msgid ""
"This allocates a struct v4l2_fh, initializes it and adds it to the struct "
"video_device associated with the file struct."
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:113
msgid ":c:func:`v4l2_fh_release <v4l2_fh_release>` (struct file \\*filp)"
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:116
msgid ""
"This deletes it from the struct video_device associated with the file "
"struct, uninitialised the :c:type:`v4l2_fh` and frees it."
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:119
msgid ""
"These two functions can be plugged into the v4l2_file_operation's ``open()`` "
"and ``release()`` ops."
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:122
msgid ""
"Several drivers need to do something when the first file handle is opened "
"and when the last file handle closes. Two helper functions were added to "
"check whether the :c:type:`v4l2_fh` struct is the only open filehandle of "
"the associated device node:"
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:127
msgid ""
":c:func:`v4l2_fh_is_singular <v4l2_fh_is_singular>` (:c:type:`fh <v4l2_fh>`)"
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:130
msgid "Returns 1 if the file handle is the only open file handle, else 0."
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:132
msgid ""
":c:func:`v4l2_fh_is_singular_file <v4l2_fh_is_singular_file>` (struct file "
"\\*filp)"
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:135
msgid "Same, but it calls v4l2_fh_is_singular with filp->private_data."
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:139
msgid "V4L2 fh functions and data structures"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:25
msgid "Describes a V4L2 file handler"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:29
msgid "**Definition**::"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:45
msgid "**Members**"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:27
msgid "``list``"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:28
msgid "list of file handlers"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:28
msgid "``vdev``"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:29
#: include/media/v4l2-fh.h:63
msgid "pointer to :c:type:`struct video_device <video_device>`"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:29
msgid "``ctrl_handler``"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:30
msgid "pointer to :c:type:`struct v4l2_ctrl_handler <v4l2_ctrl_handler>`"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:30
msgid "``prio``"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:31
msgid ""
"priority of the file handler, as defined by :c:type:`enum v4l2_priority "
"<v4l2_priority>`"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:32
msgid "``wait``"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:33
msgid "event' s wait queue"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:33
msgid "``subscribe_lock``"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:34
msgid ""
"serialise changes to the subscribed list; guarantee that the add and del "
"event callbacks are orderly called"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:35
msgid "``subscribed``"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:36
msgid "list of subscribed events"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:36
msgid "``available``"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:37
msgid "list of events waiting to be dequeued"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:37
msgid "``navailable``"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:38
msgid "number of available events at **available** list"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:38
msgid "``sequence``"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:39
msgid "event sequence number"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:40
msgid "``m2m_ctx``"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:41
msgid "pointer to :c:type:`struct v4l2_m2m_ctx <v4l2_m2m_ctx>`"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:60
msgid "Initialise the file handle."
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:64
#: include/media/v4l2-fh.h:77 include/media/v4l2-fh.h:87
#: include/media/v4l2-fh.h:98 include/media/v4l2-fh.h:112
#: include/media/v4l2-fh.h:126 include/media/v4l2-fh.h:140
#: include/media/v4l2-fh.h:150
msgid "**Parameters**"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:66
#: include/media/v4l2-fh.h:79 include/media/v4l2-fh.h:100
#: include/media/v4l2-fh.h:114 include/media/v4l2-fh.h:142
msgid "``struct v4l2_fh *fh``"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:62
#: include/media/v4l2-fh.h:75 include/media/v4l2-fh.h:96
#: include/media/v4l2-fh.h:110 include/media/v4l2-fh.h:139
msgid "pointer to :c:type:`struct v4l2_fh <v4l2_fh>`"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:64
msgid "``struct video_device *vdev``"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:65
#: include/media/v4l2-fh.h:77 include/media/v4l2-fh.h:88
#: include/media/v4l2-fh.h:98 include/media/v4l2-fh.h:112
#: include/media/v4l2-fh.h:127 include/media/v4l2-fh.h:141
#: include/media/v4l2-fh.h:151
msgid "**Description**"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:64
msgid ""
"Parts of the V4L2 framework using the file handles should be initialised in "
"this function. Must be called from driver's v4l2_file_operations->open\\(\\) "
"handler if the driver uses :c:type:`struct v4l2_fh <v4l2_fh>`."
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:73
msgid "Add the fh to the list of file handles on a video_device."
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:77
msgid "The **fh** file handle must be initialised first."
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:83
msgid ""
"Ancillary routine that can be used as the open\\(\\) op of "
"v4l2_file_operations."
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:89
#: include/media/v4l2-fh.h:128 include/media/v4l2-fh.h:152
msgid "``struct file *filp``"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:86
#: include/media/v4l2-fh.h:125 include/media/v4l2-fh.h:149
msgid "pointer to struct file"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:87
msgid ""
"It allocates a v4l2_fh and inits and adds it to the :c:type:`struct "
"video_device <video_device>` associated with the file pointer."
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:94
msgid "Remove file handle from the list of file handles."
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:97
msgid ""
"On error filp->private_data will be ``NULL``, otherwise it will point to "
"the :c:type:`struct v4l2_fh <v4l2_fh>`."
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:101
#: include/media/v4l2-fh.h:115
msgid ""
"Must be called in v4l2_file_operations->release\\(\\) handler if the driver "
"uses :c:type:`struct v4l2_fh <v4l2_fh>`."
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:108
msgid "Release resources related to a file handle."
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:111
msgid ""
"Parts of the V4L2 framework using the v4l2_fh must release their resources "
"here, too."
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:122
msgid ""
"Ancillary routine that can be used as the release\\(\\) op of "
"v4l2_file_operations."
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:126
msgid ""
"It deletes and exits the v4l2_fh associated with the file pointer and frees "
"it. It will do nothing if filp->private_data (the pointer to the v4l2_fh "
"struct) is ``NULL``."
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:130
msgid "This function always returns 0."
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:136
#: include/media/v4l2-fh.h:146
msgid ""
"Returns 1 if this filehandle is the only filehandle opened for the "
"associated video_device."
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:140
msgid "If **fh** is NULL, then it returns 0."
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:150
msgid ""
"This is a helper function variant of v4l2_fh_is_singular() with uses struct "
"file as argument."
msgstr ""

#: ../../../driver-api/media/v4l2-fh:141: include/media/v4l2-fh.h:153
msgid "If filp->private_data is ``NULL``, then it will return 0."
msgstr ""
