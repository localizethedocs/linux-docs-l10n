# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../driver-api/w1.rst:3
msgid "W1: Dallas' 1-wire bus"
msgstr ""

#: ../../../driver-api/w1.rst:0
msgid "Author"
msgstr ""

#: ../../../driver-api/w1.rst:5
msgid "David Fries"
msgstr ""

#: ../../../driver-api/w1.rst:8
msgid "W1 API internal to the kernel"
msgstr ""

#: ../../../driver-api/w1.rst:11
msgid "include/linux/w1.h"
msgstr ""

#: ../../../driver-api/w1.rst:13
msgid "W1 kernel API functions."
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:12
msgid "broken out slave device id"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:16 include/linux/w1.h:53
#: include/linux/w1.h:88 include/linux/w1.h:176 include/linux/w1.h:252
#: include/linux/w1.h:266 ../../../driver-api/w1:39:
#: drivers/w1/w1_internal.h:22 ../../../driver-api/w1:55:
#: drivers/w1/w1_netlink.h:52 drivers/w1/w1_netlink.h:114
msgid "**Definition**::"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:28 include/linux/w1.h:70
#: include/linux/w1.h:106 include/linux/w1.h:206 include/linux/w1.h:261
#: include/linux/w1.h:276 ../../../driver-api/w1:39:
#: drivers/w1/w1_internal.h:29 ../../../driver-api/w1:55:
#: drivers/w1/w1_netlink.h:68 drivers/w1/w1_netlink.h:123
msgid "**Members**"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:14 include/linux/w1.h:59
msgid "``family``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:15
msgid "identifies the type of device"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:15 include/linux/w1.h:184
#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:53
msgid "``id``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:16
msgid "along with family is the unique device id"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:16
msgid "``crc``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:17
msgid "checksum of the other bytes"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:49
msgid "holds a single slave device on the bus"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:51 include/linux/w1.h:174
msgid "``owner``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:52
msgid "Points to the one wire \"wire\" kernel module."
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:52 include/linux/w1.h:175
msgid "``name``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:53
msgid "Device id is ascii."
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:53
msgid "``w1_slave_entry``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:54
msgid "data for the linked list"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:54
msgid "``reg_num``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:55
msgid "the slave id in binary"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:55 include/linux/w1.h:187
#: include/linux/w1.h:267
msgid "``refcnt``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:56
msgid "reference count, delete when 0"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:57
msgid "``ttl``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:58
msgid "decrement per search this slave isn't found, deatch at 0"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:56 include/linux/w1.h:191
msgid "``flags``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:57
msgid "bit flags for W1_SLAVE_ACTIVE W1_SLAVE_DETACH"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:58
msgid "``master``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:59
msgid "bus which this slave is on"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:60
msgid "module for device family type"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:60
msgid "``family_data``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:61
msgid "pointer for use by the family module"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:61 include/linux/w1.h:196
msgid "``dev``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:62
msgid "kernel device identifier"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:62
msgid "``hwmon``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:63
msgid "pointer to hwmon device"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:84
msgid "operations available on a bus master"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:86 ../../../driver-api/w1:55:
#: drivers/w1/w1_netlink.h:58 drivers/w1/w1_netlink.h:115
msgid "``data``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:87
msgid "the first parameter in all the functions below"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:88
msgid "``read_bit``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:89
msgid "Sample the line level **return** the level read (0 or 1)"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:91
msgid "``write_bit``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:92
msgid "Sets the line level"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:93
msgid "``touch_bit``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:94
msgid ""
"the lowest-level function for devices that really support the 1-wire "
"protocol. touch_bit(0) = write-0 cycle touch_bit(1) = write-1 / read cycle "
"**return** the bit read (0 or 1)"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:99
msgid "``read_byte``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:100
msgid "Reads a byte. Same as 8 touch_bit(1) calls. **return** the byte read"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:102
msgid "``write_byte``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:103
msgid "Writes a byte. Same as 8 touch_bit(x) calls."
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:104
msgid "``read_block``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:105
msgid ""
"Same as a series of read_byte() calls **return** the number of bytes read"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:107
msgid "``write_block``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:108
msgid "Same as a series of write_byte() calls"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:109
msgid "``triplet``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:110
msgid ""
"Combines two reads and a smart write for ROM searches **return** bit0=Id "
"bit1=comp_id bit2=dir_taken"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:112
msgid "``reset_bus``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:113
msgid ""
"long write-0 with a read for the presence pulse detection **return** "
"-1=Error, 0=Device present, 1=No device present"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:115
msgid "``set_pullup``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:116
msgid ""
"Put out a strong pull-up pulse of the specified duration. **return** "
"-1=Error, 0=completed"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:118
msgid "``search``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:119
msgid ""
"Really nice hardware can handle the different types of ROM search w1_master* "
"is passed to the slave found callback. u8 is search_type, W1_SEARCH or "
"W1_ALARM_SEARCH"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:122
msgid "``dev_id``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:123
msgid ""
"Optional device id string, which w1 slaves could use for creating names, "
"which then give a connection to the w1 master"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:127
msgid "**Note**"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:125
msgid ""
"read_bit and write_bit are very low level functions and should only be used "
"with hardware that doesn't really support 1-wire operations, like a parallel/"
"serial port. Either define read_bit and write_bit OR define, at minimum, "
"touch_bit and reset_bus."
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:162
msgid "bitfields used in w1_master.flags"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:166 ../../../driver-api/w1:55:
#: drivers/w1/w1_netlink.h:19 drivers/w1/w1_netlink.h:30
#: drivers/w1/w1_netlink.h:84
msgid "**Constants**"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:168
msgid "``W1_ABORT_SEARCH``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:169
msgid "abort searching early on shutdown"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:171
msgid "``W1_WARN_MAX_COUNT``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:172
msgid "limit warning when the maximum count is reached"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:172
msgid "one per bus master"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:173
msgid "``w1_master_entry``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:174
msgid "master linked list"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:175
msgid "module owner"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:176
msgid "dynamically allocate bus name"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:176
msgid "``list_mutex``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:177
msgid "protect slist and async_list"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:177
msgid "``slist``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:178
msgid "linked list of slaves"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:178
msgid "``async_list``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:179
msgid "linked list of netlink commands to execute"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:179
msgid "``max_slave_count``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:180
msgid "maximum number of slaves to search for at a time"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:180
msgid "``slave_count``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:181
msgid "current number of slaves known"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:181
msgid "``attempts``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:182
msgid "number of searches ran"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:182
msgid "``slave_ttl``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:183
msgid "number of searches before a slave is timed out"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:183
msgid "``initialized``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:184
msgid "prevent init/removal race conditions"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:185
msgid "w1 bus number"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:185
msgid "``search_count``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:186
msgid "number of automatic searches to run, -1 unlimited"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:186
msgid "``search_id``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:187
msgid "allows continuing a search"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:188
msgid "reference count"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:188
msgid "``priv``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:189
msgid "private data storage"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:189
msgid "``enable_pullup``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:190
msgid "allows a strong pullup"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:190
msgid "``pullup_duration``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:191
msgid "time for the next strong pullup"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:192
msgid "one of w1_master_flags"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:192
msgid "``thread``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:193
msgid "thread for bus search and netlink commands"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:193
msgid "``mutex``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:194
msgid "protect most of w1_master"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:194
msgid "``bus_mutex``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:195
msgid "pretect concurrent bus access"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:195
msgid "``driver``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:196
msgid "sysfs driver"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:197
msgid "sysfs device"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:197
msgid "``bus_master``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:198
msgid "io operations available"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:198
msgid "``seq``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:199
msgid "sequence number used for netlink broadcasts"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:248
msgid "operations for a family type"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:249
msgid "``add_slave``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:250
msgid "add_slave"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:250
msgid "``remove_slave``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:251
msgid "remove_slave"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:251
msgid "``groups``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:252
msgid "sysfs group"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:252
msgid "``chip_info``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:253
msgid "pointer to struct hwmon_chip_info"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:262
msgid "reference counted family structure."
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:263
msgid "``family_entry``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:264
msgid "family linked list"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:264
msgid "``fid``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:265
msgid "8 bit family identifier"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:265
msgid "``fops``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:266
msgid "operations for this family"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:266
msgid "``of_match_table``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:267
msgid "open firmware match table"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:268
msgid "reference counter"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:286
msgid "``module_w1_family (__w1_family)``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:284
msgid "Helper macro for registering a 1-Wire families"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:288 ../../../driver-api/w1:23:
#: drivers/w1/w1.c:966 drivers/w1/w1.c:1124 ../../../driver-api/w1:31:
#: drivers/w1/w1_family.c:22 drivers/w1/w1_family.c:55
#: ../../../driver-api/w1:47: drivers/w1/w1_int.c:89 drivers/w1/w1_int.c:220
#: ../../../driver-api/w1:63: drivers/w1/w1_io.c:52 drivers/w1/w1_io.c:134
#: drivers/w1/w1_io.c:184 drivers/w1/w1_io.c:228 drivers/w1/w1_io.c:249
#: drivers/w1/w1_io.c:270 drivers/w1/w1_io.c:294 drivers/w1/w1_io.c:318
#: drivers/w1/w1_io.c:381 drivers/w1/w1_io.c:410 drivers/w1/w1_io.c:436
#: ../../../driver-api/w1:66: drivers/w1/w1_io.c:70 drivers/w1/w1_io.c:98
#: drivers/w1/w1_io.c:115 drivers/w1/w1_io.c:158
msgid "**Parameters**"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:290
msgid "``__w1_family``"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:285
msgid "w1_family struct"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:287 ../../../driver-api/w1:23:
#: drivers/w1/w1.c:968 drivers/w1/w1.c:1123 ../../../driver-api/w1:39:
#: drivers/w1/w1_internal.h:25 ../../../driver-api/w1:55:
#: drivers/w1/w1_netlink.h:62 drivers/w1/w1_netlink.h:119
#: ../../../driver-api/w1:63: drivers/w1/w1_io.c:184 drivers/w1/w1_io.c:380
#: drivers/w1/w1_io.c:409 drivers/w1/w1_io.c:436 ../../../driver-api/w1:66:
#: drivers/w1/w1_io.c:70 drivers/w1/w1_io.c:97 drivers/w1/w1_io.c:114
#: drivers/w1/w1_io.c:157
msgid "**Description**"
msgstr ""

#: ../../../driver-api/w1:15: include/linux/w1.h:286
msgid ""
"Helper macro for 1-Wire families which do not do anything special in module "
"init/exit. This eliminates a lot of boilerplate. Each module may only use "
"this macro once, and calling it replaces module_init() and module_exit()"
msgstr ""

#: ../../../driver-api/w1.rst:19
msgid "drivers/w1/w1.c"
msgstr ""

#: ../../../driver-api/w1.rst:21
msgid "W1 core functions."
msgstr ""

#: ../../../driver-api/w1:23: drivers/w1/w1.c:962
msgid "Performs a ROM Search & registers any devices found."
msgstr ""

#: ../../../driver-api/w1:23: drivers/w1/w1.c:968 drivers/w1/w1.c:1126
#: ../../../driver-api/w1:63: drivers/w1/w1_io.c:54 drivers/w1/w1_io.c:136
#: drivers/w1/w1_io.c:186 drivers/w1/w1_io.c:230 drivers/w1/w1_io.c:251
#: drivers/w1/w1_io.c:272 drivers/w1/w1_io.c:296 drivers/w1/w1_io.c:320
#: drivers/w1/w1_io.c:412 drivers/w1/w1_io.c:438 ../../../driver-api/w1:66:
#: drivers/w1/w1_io.c:72 drivers/w1/w1_io.c:100 drivers/w1/w1_io.c:117
#: drivers/w1/w1_io.c:160
msgid "``struct w1_master *dev``"
msgstr ""

#: ../../../driver-api/w1:23: drivers/w1/w1.c:963
msgid "The master device to search"
msgstr ""

#: ../../../driver-api/w1:23: drivers/w1/w1.c:965
msgid "``u8 search_type``"
msgstr ""

#: ../../../driver-api/w1:23: drivers/w1/w1.c:964
msgid ""
"W1_SEARCH to search all devices, or W1_ALARM_SEARCH to return only devices "
"in the alarmed state"
msgstr ""

#: ../../../driver-api/w1:23: drivers/w1/w1.c:967
msgid "``w1_slave_found_callback cb``"
msgstr ""

#: ../../../driver-api/w1:23: drivers/w1/w1.c:966
msgid "Function to call when a device is found"
msgstr ""

#: ../../../driver-api/w1:23: drivers/w1/w1.c:967
msgid ""
"The 1-wire search is a simple binary tree search. For each bit of the "
"address, we read two bits and write one bit. The bit written will put to "
"sleep all devies that don't match that bit. When the two reads differ, the "
"direction choice is obvious. When both bits are 0, we must choose a path to "
"take. When we can scan all 64 bits without having to choose a path, we are "
"done."
msgstr ""

#: ../../../driver-api/w1:23: drivers/w1/w1.c:974
msgid ""
"See \"Application note 187 1-wire search algorithm\" at www.maxim-ic.com"
msgstr ""

#: ../../../driver-api/w1:23: drivers/w1/w1.c:1120
msgid "execute each dev->async_list callback entry"
msgstr ""

#: ../../../driver-api/w1:23: drivers/w1/w1.c:1121
msgid "w1_master device"
msgstr ""

#: ../../../driver-api/w1:23: drivers/w1/w1.c:1122
msgid "The w1 master list_mutex must be held."
msgstr ""

#: ../../../driver-api/w1:23: drivers/w1/w1.c:1124 ../../../driver-api/w1:63:
#: drivers/w1/w1_io.c:190 drivers/w1/w1_io.c:227 drivers/w1/w1_io.c:295
#: drivers/w1/w1_io.c:317 drivers/w1/w1_io.c:384 drivers/w1/w1_io.c:442
msgid "**Return**"
msgstr ""

#: ../../../driver-api/w1:23: drivers/w1/w1.c:1125
msgid "1 if there were commands to executed 0 otherwise"
msgstr ""

#: ../../../driver-api/w1.rst:27
msgid "drivers/w1/w1_family.c"
msgstr ""

#: ../../../driver-api/w1.rst:29
msgid "Allows registering device family operations."
msgstr ""

#: ../../../driver-api/w1:31: drivers/w1/w1_family.c:18
msgid "register a device family driver"
msgstr ""

#: ../../../driver-api/w1:31: drivers/w1/w1_family.c:24
msgid "``struct w1_family *newf``"
msgstr ""

#: ../../../driver-api/w1:31: drivers/w1/w1_family.c:19
msgid "family to register"
msgstr ""

#: ../../../driver-api/w1:31: drivers/w1/w1_family.c:51
msgid "unregister a device family driver"
msgstr ""

#: ../../../driver-api/w1:31: drivers/w1/w1_family.c:57
msgid "``struct w1_family *fent``"
msgstr ""

#: ../../../driver-api/w1:31: drivers/w1/w1_family.c:52
msgid "family to unregister"
msgstr ""

#: ../../../driver-api/w1.rst:35
msgid "drivers/w1/w1_internal.h"
msgstr ""

#: ../../../driver-api/w1.rst:37 ../../../driver-api/w1.rst:45
msgid "W1 internal initialization for master devices."
msgstr ""

#: ../../../driver-api/w1:39: drivers/w1/w1_internal.h:18
msgid "execute callback from the w1_process kthread"
msgstr ""

#: ../../../driver-api/w1:39: drivers/w1/w1_internal.h:19
msgid "``async_entry``"
msgstr ""

#: ../../../driver-api/w1:39: drivers/w1/w1_internal.h:20
msgid "link entry"
msgstr ""

#: ../../../driver-api/w1:39: drivers/w1/w1_internal.h:20
msgid "``cb``"
msgstr ""

#: ../../../driver-api/w1:39: drivers/w1/w1_internal.h:21
msgid "callback function, must list_del and destroy this list before returning"
msgstr ""

#: ../../../driver-api/w1:39: drivers/w1/w1_internal.h:22
msgid ""
"When inserted into the w1_master async_list, w1_process will execute the "
"callback.  Embed this into the structure with the command details."
msgstr ""

#: ../../../driver-api/w1.rst:43
msgid "drivers/w1/w1_int.c"
msgstr ""

#: ../../../driver-api/w1:47: drivers/w1/w1_int.c:85
msgid "registers a new master device"
msgstr ""

#: ../../../driver-api/w1:47: drivers/w1/w1_int.c:91
msgid "``struct w1_bus_master *master``"
msgstr ""

#: ../../../driver-api/w1:47: drivers/w1/w1_int.c:86
msgid "master bus device to register"
msgstr ""

#: ../../../driver-api/w1:47: drivers/w1/w1_int.c:216
msgid "unregister a master device"
msgstr ""

#: ../../../driver-api/w1:47: drivers/w1/w1_int.c:222
msgid "``struct w1_bus_master *bm``"
msgstr ""

#: ../../../driver-api/w1:47: drivers/w1/w1_int.c:217
msgid "master bus device to remove"
msgstr ""

#: ../../../driver-api/w1.rst:51
msgid "drivers/w1/w1_netlink.h"
msgstr ""

#: ../../../driver-api/w1.rst:53
msgid "W1 external netlink API structures and commands."
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:15
msgid "bitfield flags for struct cn_msg.flags"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:21
msgid "``W1_CN_BUNDLE``"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:22
msgid ""
"Request bundling replies into fewer messagse.  Be prepared to handle "
"multiple struct cn_msg, struct w1_netlink_msg, and struct w1_netlink_cmd in "
"one packet."
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:26
msgid "message type"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:32
msgid "``W1_SLAVE_ADD``"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:33
msgid "notification that a slave device was added"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:35
msgid "``W1_SLAVE_REMOVE``"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:36
msgid "notification that a slave device was removed"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:38
msgid "``W1_MASTER_ADD``"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:39
msgid "notification that a new bus master was added"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:41
msgid "``W1_MASTER_REMOVE``"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:42
msgid "notification that a bus masterwas removed"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:44
msgid "``W1_MASTER_CMD``"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:45
msgid "initiate operations on a specific master"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:47
msgid "``W1_SLAVE_CMD``"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:48
msgid "sends reset, selects the slave, then does a read/write/touch operation"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:51
msgid "``W1_LIST_MASTERS``"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:52
msgid "used to determine the bus master identifiers"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:48
msgid "holds w1 message type, id, and result"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:50
msgid "``type``"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:51
msgid "one of enum w1_netlink_message_types"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:51
msgid "``status``"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:52
msgid "kernel feedback for success 0 or errno failure value"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:52
#: drivers/w1/w1_netlink.h:114
msgid "``len``"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:53
msgid "length of data following w1_netlink_msg"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:54
msgid "union holding bus master id (msg.id) and slave device id (id[8])."
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:54
msgid "``id.id``"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:55
msgid "Slave ID (8 bytes)"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:55
msgid "``id.mst``"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:56
msgid "bus master identification"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:56
msgid "``id.mst.id``"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:57
msgid "bus master ID"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:57
msgid "``id.mst.res``"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:58
msgid "bus master reserved"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:59
#: drivers/w1/w1_netlink.h:116
msgid "start address of any following data"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:59
msgid ""
"The base message structure for w1 messages over netlink. The netlink "
"connector data sequence is, struct nlmsghdr, struct cn_msg, then one or more "
"struct w1_netlink_msg (each with optional data)."
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:80
msgid "commands available for master or slave operations"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:86
msgid "``W1_CMD_READ``"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:87
msgid "read len bytes"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:89
msgid "``W1_CMD_WRITE``"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:90
msgid "write len bytes"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:92
msgid "``W1_CMD_SEARCH``"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:93
msgid ""
"initiate a standard search, returns only the slave devices found during that "
"search"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:96
msgid "``W1_CMD_ALARM_SEARCH``"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:97
msgid "search for devices that are currently alarming"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:99
msgid "``W1_CMD_TOUCH``"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:100
#: ../../../driver-api/w1:63: drivers/w1/w1_io.c:266
msgid "Touches a series of bytes."
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:102
msgid "``W1_CMD_RESET``"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:103
msgid "sends a bus reset on the given master"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:105
msgid "``W1_CMD_SLAVE_ADD``"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:106
msgid "adds a slave to the given master, 8 byte slave id at data[0]"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:109
msgid "``W1_CMD_SLAVE_REMOVE``"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:110
msgid "removes a slave to the given master, 8 byte slave id at data[0]"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:113
msgid "``W1_CMD_LIST_SLAVES``"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:114
msgid "list of slaves registered on this master"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:116
msgid "``W1_CMD_MAX``"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:117
msgid "number of available commands"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:110
msgid "holds the command and data"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:112
msgid "``cmd``"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:113
msgid "one of enum w1_commands"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:113
msgid "``res``"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:114
msgid "reserved"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:115
msgid "length of data following w1_netlink_cmd"
msgstr ""

#: ../../../driver-api/w1:55: drivers/w1/w1_netlink.h:116
msgid ""
"One or more struct w1_netlink_cmd is placed starting at w1_netlink_msg.data "
"each with optional data."
msgstr ""

#: ../../../driver-api/w1.rst:59
msgid "drivers/w1/w1_io.c"
msgstr ""

#: ../../../driver-api/w1.rst:61
msgid "W1 input/output."
msgstr ""

#: ../../../driver-api/w1:63: drivers/w1/w1_io.c:48
msgid "Generates a write-0 or write-1 cycle and samples the level."
msgstr ""

#: ../../../driver-api/w1:63: drivers/w1/w1_io.c:49 drivers/w1/w1_io.c:131
#: drivers/w1/w1_io.c:181 drivers/w1/w1_io.c:225 drivers/w1/w1_io.c:246
#: drivers/w1/w1_io.c:267 drivers/w1/w1_io.c:291 drivers/w1/w1_io.c:315
#: drivers/w1/w1_io.c:407 drivers/w1/w1_io.c:433 ../../../driver-api/w1:66:
#: drivers/w1/w1_io.c:67 drivers/w1/w1_io.c:95 drivers/w1/w1_io.c:112
#: drivers/w1/w1_io.c:155
msgid "the master device"
msgstr ""

#: ../../../driver-api/w1:63: drivers/w1/w1_io.c:51 ../../../driver-api/w1:66:
#: drivers/w1/w1_io.c:69
msgid "``int bit``"
msgstr ""

#: ../../../driver-api/w1:63: drivers/w1/w1_io.c:50
msgid "0 - write a 0, 1 - write a 0 read the level"
msgstr ""

#: ../../../driver-api/w1:63: drivers/w1/w1_io.c:130
msgid "Writes 8 bits."
msgstr ""

#: ../../../driver-api/w1:63: drivers/w1/w1_io.c:133
msgid "``u8 byte``"
msgstr ""

#: ../../../driver-api/w1:63: drivers/w1/w1_io.c:132
msgid "the byte to write"
msgstr ""

#: ../../../driver-api/w1:63: drivers/w1/w1_io.c:180
msgid "Does a triplet - used for searching ROM addresses."
msgstr ""

#: ../../../driver-api/w1:63: drivers/w1/w1_io.c:183
msgid "``int bdir``"
msgstr ""

#: ../../../driver-api/w1:63: drivers/w1/w1_io.c:182
msgid "the bit to write if both id_bit and comp_bit are 0"
msgstr ""

#: ../../../driver-api/w1:63: drivers/w1/w1_io.c:183
msgid "Return bits:"
msgstr ""

#: ../../../driver-api/w1:63: drivers/w1/w1_io.c:184
msgid "bit 0 = id_bit bit 1 = comp_bit bit 2 = dir_taken"
msgstr ""

#: ../../../driver-api/w1:63: drivers/w1/w1_io.c:188
msgid "If both bits 0 & 1 are set, the search should be restarted."
msgstr ""

#: ../../../driver-api/w1:63: drivers/w1/w1_io.c:191
msgid "bit fields - see above"
msgstr ""

#: ../../../driver-api/w1:63: drivers/w1/w1_io.c:224
msgid "Reads 8 bits."
msgstr ""

#: ../../../driver-api/w1:63: drivers/w1/w1_io.c:227
msgid "the byte read"
msgstr ""

#: ../../../driver-api/w1:63: drivers/w1/w1_io.c:245
msgid "Writes a series of bytes."
msgstr ""

#: ../../../driver-api/w1:63: drivers/w1/w1_io.c:248
msgid "``const u8 *buf``"
msgstr ""

#: ../../../driver-api/w1:63: drivers/w1/w1_io.c:247 drivers/w1/w1_io.c:268
msgid "pointer to the data to write"
msgstr ""

#: ../../../driver-api/w1:63: drivers/w1/w1_io.c:249 drivers/w1/w1_io.c:270
#: drivers/w1/w1_io.c:294
msgid "``int len``"
msgstr ""

#: ../../../driver-api/w1:63: drivers/w1/w1_io.c:248 drivers/w1/w1_io.c:269
msgid "the number of bytes to write"
msgstr ""

#: ../../../driver-api/w1:63: drivers/w1/w1_io.c:269 drivers/w1/w1_io.c:293
msgid "``u8 *buf``"
msgstr ""

#: ../../../driver-api/w1:63: drivers/w1/w1_io.c:290
msgid "Reads a series of bytes."
msgstr ""

#: ../../../driver-api/w1:63: drivers/w1/w1_io.c:292
msgid "pointer to the buffer to fill"
msgstr ""

#: ../../../driver-api/w1:63: drivers/w1/w1_io.c:293
msgid "the number of bytes to read"
msgstr ""

#: ../../../driver-api/w1:63: drivers/w1/w1_io.c:294
msgid "the number of bytes read"
msgstr ""

#: ../../../driver-api/w1:63: drivers/w1/w1_io.c:314
msgid "Issues a reset bus sequence."
msgstr ""

#: ../../../driver-api/w1:63: drivers/w1/w1_io.c:316
msgid "0=Device present, 1=No device present or error"
msgstr ""

#: ../../../driver-api/w1:63: drivers/w1/w1_io.c:377
msgid "reset and select a slave"
msgstr ""

#: ../../../driver-api/w1:63: drivers/w1/w1_io.c:383
msgid "``struct w1_slave *sl``"
msgstr ""

#: ../../../driver-api/w1:63: drivers/w1/w1_io.c:378
msgid "the slave to select"
msgstr ""

#: ../../../driver-api/w1:63: drivers/w1/w1_io.c:379
msgid ""
"Resets the bus and then selects the slave by sending either a skip rom or a "
"rom match.  A skip rom is issued if there is only one device registered on "
"the bus. The w1 master lock must be held."
msgstr ""

#: ../../../driver-api/w1:63: drivers/w1/w1_io.c:385 drivers/w1/w1_io.c:443
msgid "0=success, anything else=error"
msgstr ""

#: ../../../driver-api/w1:63: drivers/w1/w1_io.c:406
msgid "resume instead of another match ROM"
msgstr ""

#: ../../../driver-api/w1:63: drivers/w1/w1_io.c:408
msgid ""
"When the workflow with a slave amongst many requires several successive "
"commands a reset between each, this function is similar to doing a reset "
"then a match ROM for the last matched ROM. The advantage being that the "
"matched ROM step is skipped in favor of the resume command. The slave must "
"support the command of course."
msgstr ""

#: ../../../driver-api/w1:63: drivers/w1/w1_io.c:414
msgid ""
"If the bus has only one slave, traditionnaly the match ROM is skipped and a "
"\"SKIP ROM\" is done for efficiency. On multi-slave busses, this doesn't "
"work of course, but the resume command is the next best thing."
msgstr ""

#: ../../../driver-api/w1:63: drivers/w1/w1_io.c:418
msgid "The w1 master lock must be held."
msgstr ""

#: ../../../driver-api/w1:63: drivers/w1/w1_io.c:432
msgid "register for a strong pullup"
msgstr ""

#: ../../../driver-api/w1:63: drivers/w1/w1_io.c:435
msgid "``int delay``"
msgstr ""

#: ../../../driver-api/w1:63: drivers/w1/w1_io.c:434
msgid "time in milliseconds"
msgstr ""

#: ../../../driver-api/w1:63: drivers/w1/w1_io.c:435
msgid ""
"Put out a strong pull-up of the specified duration after the next write "
"operation.  Not all hardware supports strong pullups.  Hardware that doesn't "
"support strong pullups will sleep for the given time after the write "
"operation without a strong pullup.  This is a one shot request for the next "
"write, specifying zero will clear a previous request. The w1 master lock "
"must be held."
msgstr ""

#: ../../../driver-api/w1:66: drivers/w1/w1_io.c:66
msgid "Generates a write-0 or write-1 cycle."
msgstr ""

#: ../../../driver-api/w1:66: drivers/w1/w1_io.c:68
msgid "bit to write"
msgstr ""

#: ../../../driver-api/w1:66: drivers/w1/w1_io.c:69 drivers/w1/w1_io.c:156
msgid "Only call if dev->bus_master->touch_bit is NULL"
msgstr ""

#: ../../../driver-api/w1:66: drivers/w1/w1_io.c:94
msgid "pre-write operations"
msgstr ""

#: ../../../driver-api/w1:66: drivers/w1/w1_io.c:96
msgid ""
"Pre-write operation, currently only supporting strong pullups. Program the "
"hardware for a strong pullup, if one has been requested and the hardware "
"supports it."
msgstr ""

#: ../../../driver-api/w1:66: drivers/w1/w1_io.c:111
msgid "post-write options"
msgstr ""

#: ../../../driver-api/w1:66: drivers/w1/w1_io.c:113
msgid ""
"Post-write operation, currently only supporting strong pullups. If a strong "
"pullup was requested, clear it if the hardware supports them, or execute the "
"delay otherwise, in either case clear the request."
msgstr ""

#: ../../../driver-api/w1:66: drivers/w1/w1_io.c:154
msgid "Generates a write-1 cycle and samples the level."
msgstr ""
