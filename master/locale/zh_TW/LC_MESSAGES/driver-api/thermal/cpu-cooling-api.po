# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../driver-api/thermal/cpu-cooling-api.rst:3
msgid "CPU cooling APIs How To"
msgstr ""

#: ../../../driver-api/thermal/cpu-cooling-api.rst:5
msgid "Written by Amit Daniel Kachhap <amit.kachhap@linaro.org>"
msgstr ""

#: ../../../driver-api/thermal/cpu-cooling-api.rst:7
msgid "Updated: 6 Jan 2015"
msgstr ""

#: ../../../driver-api/thermal/cpu-cooling-api.rst:9
msgid ""
"Copyright (c)  2012 Samsung Electronics Co., Ltd(http://www.samsung.com)"
msgstr ""

#: ../../../driver-api/thermal/cpu-cooling-api.rst:12
msgid "0. Introduction"
msgstr ""

#: ../../../driver-api/thermal/cpu-cooling-api.rst:14
msgid ""
"The generic cpu cooling(freq clipping) provides registration/unregistration "
"APIs to the caller. The binding of the cooling devices to the trip point is "
"left for the user. The registration APIs returns the cooling device pointer."
msgstr ""

#: ../../../driver-api/thermal/cpu-cooling-api.rst:19
msgid "1. cpu cooling APIs"
msgstr ""

#: ../../../driver-api/thermal/cpu-cooling-api.rst:22
msgid "1.1 cpufreq registration/unregistration APIs"
msgstr ""

#: ../../../driver-api/thermal/cpu-cooling-api.rst:29
msgid ""
"This interface function registers the cpufreq cooling device with the name "
"\"thermal-cpufreq-%x\". This api can support multiple instances of cpufreq "
"cooling devices."
msgstr ""

#: ../../../driver-api/thermal/cpu-cooling-api.rst:33
msgid "clip_cpus:"
msgstr ""

#: ../../../driver-api/thermal/cpu-cooling-api.rst:34
msgid "cpumask of cpus where the frequency constraints will happen."
msgstr ""

#: ../../../driver-api/thermal/cpu-cooling-api.rst:41
msgid ""
"This interface function registers the cpufreq cooling device with the name "
"\"thermal-cpufreq-%x\" linking it with a device tree node, in order to bind "
"it via the thermal DT code. This api can support multiple instances of "
"cpufreq cooling devices."
msgstr ""

#: ../../../driver-api/thermal/cpu-cooling-api.rst:46
msgid "policy:"
msgstr ""

#: ../../../driver-api/thermal/cpu-cooling-api.rst:47
msgid "CPUFreq policy."
msgstr ""

#: ../../../driver-api/thermal/cpu-cooling-api.rst:54
msgid ""
"This interface function unregisters the \"thermal-cpufreq-%x\" cooling "
"device."
msgstr ""

#: ../../../driver-api/thermal/cpu-cooling-api.rst:56
msgid "cdev: Cooling device pointer which has to be unregistered."
msgstr ""

#: ../../../driver-api/thermal/cpu-cooling-api.rst:59
msgid "2. Power models"
msgstr ""

#: ../../../driver-api/thermal/cpu-cooling-api.rst:61
msgid ""
"The power API registration functions provide a simple power model for CPUs.  "
"The current power is calculated as dynamic power (static power isn't "
"supported currently).  This power model requires that the operating-points "
"of the CPUs are registered using the kernel's opp library and the "
"`cpufreq_frequency_table` is assigned to the `struct device` of the cpu.  If "
"you are using CONFIG_CPUFREQ_DT then the `cpufreq_frequency_table` should "
"already be assigned to the cpu device."
msgstr ""

#: ../../../driver-api/thermal/cpu-cooling-api.rst:70
msgid ""
"The dynamic power consumption of a processor depends on many factors. For a "
"given processor implementation the primary factors are:"
msgstr ""

#: ../../../driver-api/thermal/cpu-cooling-api.rst:73
msgid ""
"The time the processor spends running, consuming dynamic power, as compared "
"to the time in idle states where dynamic consumption is negligible.  Herein "
"we refer to this as 'utilisation'."
msgstr ""

#: ../../../driver-api/thermal/cpu-cooling-api.rst:76
msgid ""
"The voltage and frequency levels as a result of DVFS.  The DVFS level is a "
"dominant factor governing power consumption."
msgstr ""

#: ../../../driver-api/thermal/cpu-cooling-api.rst:78
msgid ""
"In running time the 'execution' behaviour (instruction types, memory access "
"patterns and so forth) causes, in most cases, a second order variation.  In "
"pathological cases this variation can be significant, but typically it is of "
"a much lesser impact than the factors above."
msgstr ""

#: ../../../driver-api/thermal/cpu-cooling-api.rst:83
msgid ""
"A high level dynamic power consumption model may then be represented as::"
msgstr ""

#: ../../../driver-api/thermal/cpu-cooling-api.rst:87
msgid ""
"f(run) here represents the described execution behaviour and its result has "
"a units of Watts/Hz/Volt^2 (this often expressed in mW/MHz/uVolt^2)"
msgstr ""

#: ../../../driver-api/thermal/cpu-cooling-api.rst:91
msgid ""
"The detailed behaviour for f(run) could be modelled on-line.  However, in "
"practice, such an on-line model has dependencies on a number of "
"implementation specific processor support and characterisation factors.  "
"Therefore, in initial implementation that contribution is represented as a "
"constant coefficient.  This is a simplification consistent with the relative "
"contribution to overall power variation."
msgstr ""

#: ../../../driver-api/thermal/cpu-cooling-api.rst:98
msgid "In this simplified representation our model becomes::"
msgstr ""

#: ../../../driver-api/thermal/cpu-cooling-api.rst:102
msgid ""
"Where `capacitance` is a constant that represents an indicative running time "
"dynamic power coefficient in fundamental units of mW/MHz/uVolt^2.  Typical "
"values for mobile CPUs might lie in range from 100 to 500.  For reference, "
"the approximate values for the SoC in ARM's Juno Development Platform are "
"530 for the Cortex-A57 cluster and 140 for the Cortex-A53 cluster."
msgstr ""
