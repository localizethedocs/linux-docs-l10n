# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-13 08:27+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../driver-api/tty/tty_port.rst:5
msgid "TTY Port"
msgstr ""

#: ../../../driver-api/tty/tty_port.rst:9
msgid ""
"The TTY drivers are advised to use struct tty_port helpers as much as "
"possible. If the drivers implement :c:member:`tty_port.ops.activate()` and :"
"c:member:`tty_port.ops.shutdown()`, they can use tty_port_open(), "
"tty_port_close(), and tty_port_hangup() in respective :c:member:`tty_struct."
"ops` hooks."
msgstr ""

#: ../../../driver-api/tty/tty_port.rst:15
msgid ""
"The reference and details are contained in the `TTY Port Reference`_ and "
"`TTY Port Operations Reference`_ sections at the bottom."
msgstr ""

#: ../../../driver-api/tty/tty_port.rst:19
msgid "TTY Port Functions"
msgstr ""

#: ../../../driver-api/tty/tty_port.rst:22
msgid "Init & Destroy"
msgstr ""

#: ../../../driver-api/tty/tty_port:24: drivers/tty/tty_port.c:78
msgid "initialize tty_port"
msgstr ""

#: ../../../driver-api/tty/tty_port:24: drivers/tty/tty_port.c:82
#: drivers/tty/tty_port.c:253 drivers/tty/tty_port.c:283
#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:327
#: drivers/tty/tty_port.c:359 drivers/tty/tty_port.c:459
#: drivers/tty/tty_port.c:583 drivers/tty/tty_port.c:639
#: drivers/tty/tty_port.c:671 drivers/tty/tty_port.c:697
#: drivers/tty/tty_port.c:715 ../../../driver-api/tty/tty_port:39:
#: drivers/tty/tty_port.c:297 drivers/tty/tty_port.c:311
#: ../../../driver-api/tty/tty_port:45: include/linux/tty_port.h:259
#: include/linux/tty_port.h:269 ../../../driver-api/tty/tty_port:47:
#: drivers/tty/tty_port.c:403 ../../../driver-api/tty/tty_port:53:
#: drivers/tty/tty_port.c:413 drivers/tty/tty_port.c:429
#: drivers/tty/tty_port.c:444
msgid "**Parameters**"
msgstr ""

#: ../../../driver-api/tty/tty_port:24: drivers/tty/tty_port.c:84
#: drivers/tty/tty_port.c:255 drivers/tty/tty_port.c:285
#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:329
#: drivers/tty/tty_port.c:361 drivers/tty/tty_port.c:461
#: drivers/tty/tty_port.c:585 drivers/tty/tty_port.c:641
#: drivers/tty/tty_port.c:673 drivers/tty/tty_port.c:699
#: drivers/tty/tty_port.c:717 ../../../driver-api/tty/tty_port:39:
#: drivers/tty/tty_port.c:299 drivers/tty/tty_port.c:313
#: ../../../driver-api/tty/tty_port:45: include/linux/tty_port.h:261
#: include/linux/tty_port.h:271 ../../../driver-api/tty/tty_port:47:
#: drivers/tty/tty_port.c:405 ../../../driver-api/tty/tty_port:53:
#: drivers/tty/tty_port.c:415 drivers/tty/tty_port.c:431
#: drivers/tty/tty_port.c:446
msgid "``struct tty_port *port``"
msgstr ""

#: ../../../driver-api/tty/tty_port:24: drivers/tty/tty_port.c:79
msgid "tty_port to initialize"
msgstr ""

#: ../../../driver-api/tty/tty_port:24: drivers/tty/tty_port.c:81
#: drivers/tty/tty_port.c:252 drivers/tty/tty_port.c:282
#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:327
#: drivers/tty/tty_port.c:358 drivers/tty/tty_port.c:460
#: drivers/tty/tty_port.c:584 drivers/tty/tty_port.c:639
#: drivers/tty/tty_port.c:672 drivers/tty/tty_port.c:698
#: drivers/tty/tty_port.c:716 ../../../driver-api/tty/tty_port:39:
#: drivers/tty/tty_port.c:296 drivers/tty/tty_port.c:311
#: ../../../driver-api/tty/tty_port:53: drivers/tty/tty_port.c:412
#: drivers/tty/tty_port.c:428 drivers/tty/tty_port.c:443
#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:85
#: ../../../driver-api/tty/tty_port:70: include/linux/tty_port.h:35
msgid "**Description**"
msgstr ""

#: ../../../driver-api/tty/tty_port:24: drivers/tty/tty_port.c:80
msgid ""
"Initializes the state of struct tty_port. When a port was initialized using "
"this function, one has to destroy the port by tty_port_destroy(). Either "
"indirectly by using :c:type:`tty_port` refcounting (tty_port_put()) or "
"directly if refcounting is not used."
msgstr ""

#: ../../../driver-api/tty/tty_port:24: drivers/tty/tty_port.c:249
msgid "destroy inited port"
msgstr ""

#: ../../../driver-api/tty/tty_port:24: drivers/tty/tty_port.c:250
msgid "tty port to be destroyed"
msgstr ""

#: ../../../driver-api/tty/tty_port:24: drivers/tty/tty_port.c:251
msgid ""
"When a port was initialized using tty_port_init(), one has to destroy the "
"port by this function. Either indirectly by using :c:type:`tty_port` "
"refcounting (tty_port_put()) or directly if refcounting is not used."
msgstr ""

#: ../../../driver-api/tty/tty_port:24: drivers/tty/tty_port.c:279
msgid "drop a reference to tty_port"
msgstr ""

#: ../../../driver-api/tty/tty_port:24: drivers/tty/tty_port.c:280
msgid "port to drop a reference of (can be NULL)"
msgstr ""

#: ../../../driver-api/tty/tty_port:24: drivers/tty/tty_port.c:281
msgid ""
"The final put will destroy and free up the **port** using **port->ops-"
">destruct\\(\\)** hook, or using kfree() if not provided."
msgstr ""

#: ../../../driver-api/tty/tty_port.rst:29
msgid "Open/Close/Hangup Helpers"
msgstr ""

#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:323
msgid "internal helper to shutdown the device"
msgstr ""

#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:324
msgid "tty port to be shut down"
msgstr ""

#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:326
#: drivers/tty/tty_port.c:458 drivers/tty/tty_port.c:582
#: drivers/tty/tty_port.c:638 drivers/tty/tty_port.c:670
#: drivers/tty/tty_port.c:697 drivers/tty/tty_port.c:714
#: ../../../driver-api/tty/tty_port:39: drivers/tty/tty_port.c:310
msgid "``struct tty_struct *tty``"
msgstr ""

#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:325
msgid "the associated tty"
msgstr ""

#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:326
msgid ""
"It is used by tty_port_hangup() and tty_port_close(). Its task is to "
"shutdown the device if it was initialized (note consoles remain "
"functioning). It lowers DTR/RTS (if **tty** has HUPCL set) and invokes "
"**port->ops->shutdown\\(\\)**."
msgstr ""

#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:355
msgid "hangup helper"
msgstr ""

#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:356
#: ../../../driver-api/tty/tty_port:39: drivers/tty/tty_port.c:294
#: drivers/tty/tty_port.c:308 ../../../driver-api/tty/tty_port:45:
#: include/linux/tty_port.h:256 include/linux/tty_port.h:266
#: ../../../driver-api/tty/tty_port:47: drivers/tty/tty_port.c:400
#: ../../../driver-api/tty/tty_port:53: drivers/tty/tty_port.c:410
#: drivers/tty/tty_port.c:426 drivers/tty/tty_port.c:441
msgid "tty port"
msgstr ""

#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:357
msgid ""
"Perform port level tty hangup flag and count changes. Drop the tty reference."
msgstr ""

#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:360
#: drivers/tty/tty_port.c:473
msgid "Caller holds tty lock."
msgstr ""

#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:455
msgid "Waiting logic for tty open"
msgstr ""

#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:456
msgid "the tty port being opened"
msgstr ""

#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:457
msgid "the tty device being bound"
msgstr ""

#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:459
#: drivers/tty/tty_port.c:583 drivers/tty/tty_port.c:671
#: drivers/tty/tty_port.c:715
msgid "``struct file *filp``"
msgstr ""

#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:458
msgid "the file pointer of the opener or ``NULL``"
msgstr ""

#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:459
msgid ""
"Implement the core POSIX/SuS tty behaviour when opening a tty device. "
"Handles:"
msgstr ""

#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:462
msgid "hangup (both before and during)"
msgstr ""

#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:463
msgid "non blocking open"
msgstr ""

#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:464
msgid "rts/dtr/dcd"
msgstr ""

#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:465
msgid "signals"
msgstr ""

#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:466
msgid "port flags and counts"
msgstr ""

#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:468
msgid ""
"The passed **port** must implement the **port->ops->carrier_raised** method "
"if it can do carrier detect and the **port->ops->dtr_rts** method if it "
"supports software management of these lines. Note that the dtr/rts raise is "
"done each iteration as a hangup may have previously dropped them while we "
"wait."
msgstr ""

#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:475
#: drivers/tty/tty_port.c:725
msgid "**Note**"
msgstr ""

#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:476
msgid ""
"May drop and reacquire tty lock when blocking, so **tty** and **port** may "
"have changed state (eg., may have been hung up)."
msgstr ""

#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:579
msgid "helper for tty->ops->close, part 1/2"
msgstr ""

#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:580
#: drivers/tty/tty_port.c:636 drivers/tty/tty_port.c:668
#: drivers/tty/tty_port.c:694 drivers/tty/tty_port.c:712
msgid "tty_port of the device"
msgstr ""

#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:581
#: drivers/tty/tty_port.c:637 drivers/tty/tty_port.c:669
msgid "tty being closed"
msgstr ""

#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:582
#: drivers/tty/tty_port.c:670 drivers/tty/tty_port.c:714
msgid "passed file pointer"
msgstr ""

#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:583
msgid ""
"Decrements and checks open count. Flushes the port if this is the last "
"close. That means, dropping the data from the outpu buffer on the device and "
"waiting for sending logic to finish. The rest of close handling is performed "
"in tty_port_close_end()."
msgstr ""

#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:588
#: drivers/tty/tty_port.c:642 drivers/tty/tty_port.c:723
msgid "Locking: Caller holds tty lock."
msgstr ""

#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:590
msgid "**Return**"
msgstr ""

#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:591
msgid "1 if this is the last close, otherwise 0"
msgstr ""

#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:635
msgid "helper for tty->ops->close, part 2/2"
msgstr ""

#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:638
msgid ""
"This is a continuation of the first part: tty_port_close_start(). This "
"should be called after turning off the device. It flushes the data from the "
"line discipline and delays the close by **port->close_delay**."
msgstr ""

#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:667
msgid "generic tty->ops->close handler"
msgstr ""

#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:671
msgid ""
"It is a generic helper to be used in driver's **tty->ops->close**. It wraps "
"a sequence of tty_port_close_start(), tty_port_shutdown(), and "
"tty_port_close_end(). The latter two are called only if this is the last "
"close. See the respective functions for the details."
msgstr ""

#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:676
msgid "Locking: Caller holds tty lock"
msgstr ""

#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:693
msgid "generic tty->ops->install handler"
msgstr ""

#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:696
msgid "``struct tty_driver *driver``"
msgstr ""

#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:695
msgid "tty_driver for this device"
msgstr ""

#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:696
msgid "tty to be installed"
msgstr ""

#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:697
msgid ""
"It is the same as tty_standard_install() except the provided **port** is "
"linked to a concrete tty specified by **tty**. Use this or "
"tty_port_register_device() (or both). Call tty_port_link_device() as a last "
"resort."
msgstr ""

#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:711
msgid "generic tty->ops->open handler"
msgstr ""

#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:713
msgid "tty to be opened"
msgstr ""

#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:715
msgid ""
"It is a generic helper to be used in driver's **tty->ops->open**. It "
"activates the devices using **port->ops->activate** if not active already. "
"And waits for the device to be ready using tty_port_block_til_ready() (e.g.  "
"raises DTR/CTS and waits for carrier)."
msgstr ""

#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:720
msgid ""
"Note that **port->ops->shutdown** is not called when **port->ops->activate** "
"returns an error (on the contrary, **tty->ops->close** is)."
msgstr ""

#: ../../../driver-api/tty/tty_port:31: drivers/tty/tty_port.c:726
msgid ""
"may drop and reacquire tty lock (in tty_port_block_til_ready()) so **tty** "
"and **port** may have changed state (eg., may be hung up now)."
msgstr ""

#: ../../../driver-api/tty/tty_port.rst:37
msgid "TTY Refcounting"
msgstr ""

#: ../../../driver-api/tty/tty_port:39: drivers/tty/tty_port.c:293
msgid "get a tty reference"
msgstr ""

#: ../../../driver-api/tty/tty_port:39: drivers/tty/tty_port.c:295
msgid ""
"Return a refcount protected tty instance or ``NULL`` if the port is not "
"associated with a tty (eg due to close or hangup)."
msgstr ""

#: ../../../driver-api/tty/tty_port:39: drivers/tty/tty_port.c:307
msgid "set the tty of a port"
msgstr ""

#: ../../../driver-api/tty/tty_port:39: drivers/tty/tty_port.c:309
msgid "the tty"
msgstr ""

#: ../../../driver-api/tty/tty_port:39: drivers/tty/tty_port.c:310
msgid ""
"Associate the port and tty pair. Manages any internal refcounts. Pass "
"``NULL`` to deassociate a port."
msgstr ""

#: ../../../driver-api/tty/tty_port.rst:43
msgid "TTY Helpers"
msgstr ""

#: ../../../driver-api/tty/tty_port:45: include/linux/tty_port.h:255
msgid "helper to hang up a tty asynchronously"
msgstr ""

#: ../../../driver-api/tty/tty_port:45: include/linux/tty_port.h:258
msgid "``bool check_clocal``"
msgstr ""

#: ../../../driver-api/tty/tty_port:45: include/linux/tty_port.h:257
msgid "hang only ttys with ``CLOCAL`` unset?"
msgstr ""

#: ../../../driver-api/tty/tty_port:45: include/linux/tty_port.h:265
msgid "helper to hang up a tty synchronously"
msgstr ""

#: ../../../driver-api/tty/tty_port:47: drivers/tty/tty_port.c:399
msgid "helper to wake up a tty"
msgstr ""

#: ../../../driver-api/tty/tty_port.rst:51
msgid "Modem Signals"
msgstr ""

#: ../../../driver-api/tty/tty_port:53: drivers/tty/tty_port.c:409
msgid "carrier raised check"
msgstr ""

#: ../../../driver-api/tty/tty_port:53: drivers/tty/tty_port.c:411
msgid ""
"Wrapper for the carrier detect logic. For the moment this is used to hide "
"some internal details. This will eventually become entirely internal to the "
"tty port."
msgstr ""

#: ../../../driver-api/tty/tty_port:53: drivers/tty/tty_port.c:425
msgid "Raise DTR/RTS"
msgstr ""

#: ../../../driver-api/tty/tty_port:53: drivers/tty/tty_port.c:427
#: drivers/tty/tty_port.c:442
msgid ""
"Wrapper for the DTR/RTS raise logic. For the moment this is used to hide "
"some internal details. This will eventually become entirely internal to the "
"tty port."
msgstr ""

#: ../../../driver-api/tty/tty_port:53: drivers/tty/tty_port.c:440
msgid "Lower DTR/RTS"
msgstr ""

#: ../../../driver-api/tty/tty_port.rst:60
msgid "TTY Port Reference"
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:52
msgid "port level information"
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:56
#: ../../../driver-api/tty/tty_port:70: include/linux/tty_port.h:21
msgid "**Definition**::"
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:83
#: ../../../driver-api/tty/tty_port:70: include/linux/tty_port.h:31
msgid "**Members**"
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:54
msgid "``buf``"
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:55
msgid "buffer for this port, locked internally"
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:55
msgid "``tty``"
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:56
msgid ""
"back pointer to :c:type:`struct tty_struct <tty_struct>`, valid only if the "
"tty is open. Use tty_port_tty_get() to obtain it (and tty_kref_put() to "
"release)."
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:57
msgid "``itty``"
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:58
msgid ""
"internal back pointer to :c:type:`struct tty_struct <tty_struct>`. Avoid "
"this. It should be eliminated in the long term."
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:59
msgid "``ops``"
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:60
msgid ""
"tty port operations (like activate, shutdown), see :c:type:`struct "
"tty_port_operations <tty_port_operations>`"
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:61
msgid "``client_ops``"
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:62
msgid ""
"tty port client operations (like receive_buf, write_wakeup). By default, "
"tty_port_default_client_ops is used."
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:63
msgid "``lock``"
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:64
msgid "lock protecting **tty**"
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:64
msgid "``blocked_open``"
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:65
msgid "# of procs waiting for open in tty_port_block_til_ready()"
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:65
msgid "``count``"
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:66
msgid "usage count"
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:66
msgid "``open_wait``"
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:67
msgid "open waiters queue (waiting e.g. for a carrier)"
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:67
msgid "``delta_msr_wait``"
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:68
msgid "modem status change queue (waiting for MSR changes)"
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:68
msgid "``flags``"
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:69
msgid "user TTY flags (``ASYNC_``)"
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:69
msgid "``iflags``"
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:70
msgid "internal flags (``TTY_PORT_``)"
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:70
msgid "``console``"
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:71
msgid "when set, the port is a console"
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:71
msgid "``mutex``"
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:72
msgid "locking, for open, shutdown and other port operations"
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:72
msgid "``buf_mutex``"
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:73
msgid "**xmit_buf** alloc lock"
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:73
msgid "``xmit_buf``"
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:74
#: include/linux/tty_port.h:75
msgid "optional xmit buffer used by some drivers"
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:74
msgid "``xmit_fifo``"
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:75
msgid "``close_delay``"
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:76
msgid "delay in jiffies to wait when closing the port"
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:76
msgid "``closing_wait``"
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:77
msgid "delay in jiffies for output to be sent before closing"
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:77
msgid "``drain_delay``"
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:78
msgid ""
"set to zero if no pure time based drain is needed else set to size of fifo"
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:79
msgid "``kref``"
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:80
msgid ""
"references counter. Reaching zero calls **ops->destruct\\(\\)** if non-"
"``NULL`` or frees the port otherwise."
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:81
msgid "``client_data``"
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:82
msgid "pointer to private data, for **client_ops**"
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:82
msgid ""
"Each device keeps its own port level information. :c:type:`struct tty_port "
"<tty_port>` was introduced as a common structure for such information. As "
"every TTY device shall have a backing tty_port structure, every driver can "
"use these members."
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:86
msgid ""
"The tty port has a different lifetime to the tty so must be kept apart. In "
"addition be careful as tty -> port mappings are valid for the life of the "
"tty object but in many cases port -> tty mappings are valid only until a "
"hangup so don't use the wrong path."
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:91
msgid ""
"Tty port shall be initialized by tty_port_init() and shut down either by "
"tty_port_destroy() (refcounting not used), or tty_port_put() (refcounting)."
msgstr ""

#: ../../../driver-api/tty/tty_port:62: include/linux/tty_port.h:94
msgid ""
"There is a lot of helpers around :c:type:`struct tty_port <tty_port>` too. "
"To name the most significant ones: tty_port_open(), tty_port_close() (or "
"tty_port_close_start() and tty_port_close_end() separately if need be), and "
"tty_port_hangup(). These call **ops->activate\\(\\)** and **ops-"
">shutdown\\(\\)** as needed."
msgstr ""

#: ../../../driver-api/tty/tty_port.rst:68
msgid "TTY Port Operations Reference"
msgstr ""

#: ../../../driver-api/tty/tty_port:70: include/linux/tty_port.h:17
msgid "operations on tty_port"
msgstr ""

#: ../../../driver-api/tty/tty_port:70: include/linux/tty_port.h:18
msgid "``carrier_raised``"
msgstr ""

#: ../../../driver-api/tty/tty_port:70: include/linux/tty_port.h:19
msgid "return true if the carrier is raised on **port**"
msgstr ""

#: ../../../driver-api/tty/tty_port:70: include/linux/tty_port.h:19
msgid "``dtr_rts``"
msgstr ""

#: ../../../driver-api/tty/tty_port:70: include/linux/tty_port.h:20
msgid "raise the DTR line if **active** is true, otherwise lower DTR"
msgstr ""

#: ../../../driver-api/tty/tty_port:70: include/linux/tty_port.h:20
msgid "``shutdown``"
msgstr ""

#: ../../../driver-api/tty/tty_port:70: include/linux/tty_port.h:21
msgid ""
"called when the last close completes or a hangup finishes IFF the port was "
"initialized. Do not use to free resources. Turn off the device only. Called "
"under the port mutex to serialize against **activate** and **shutdown**."
msgstr ""

#: ../../../driver-api/tty/tty_port:70: include/linux/tty_port.h:24
msgid "``activate``"
msgstr ""

#: ../../../driver-api/tty/tty_port:70: include/linux/tty_port.h:25
msgid ""
"called under the port mutex from tty_port_open(), serialized using the port "
"mutex. Supposed to turn on the device."
msgstr ""

#: ../../../driver-api/tty/tty_port:70: include/linux/tty_port.h:30
msgid "``destruct``"
msgstr ""

#: ../../../driver-api/tty/tty_port:70: include/linux/tty_port.h:31
msgid ""
"called on the final put of a port. Free resources, possibly incl. the port "
"itself."
msgstr ""

#: ../../../driver-api/tty/tty_port:70: include/linux/tty_port.h:26
msgid ""
"FIXME: long term getting the tty argument *out* of this would be good for "
"consoles."
msgstr ""
