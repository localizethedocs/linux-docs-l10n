# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../driver-api/tty/tty_internals.rst:5
msgid "TTY Internals"
msgstr ""

#: ../../../driver-api/tty/tty_internals.rst:10
msgid "Kopen"
msgstr ""

#: ../../../driver-api/tty/tty_internals.rst:12
msgid "These functions serve for opening a TTY from the kernelspace:"
msgstr ""

#: ../../../driver-api/tty/tty_internals:14: drivers/tty/tty_io.c:1639
msgid "closes tty opened by tty_kopen"
msgstr ""

#: ../../../driver-api/tty/tty_internals:14: drivers/tty/tty_io.c:1643
#: drivers/tty/tty_io.c:1983 drivers/tty/tty_io.c:2003
#: ../../../driver-api/tty/tty_internals:22: drivers/tty/tty_io.c:326
#: drivers/tty/tty_io.c:1673 drivers/tty/tty_io.c:2583
#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:166
#: drivers/tty/tty_io.c:213 drivers/tty/tty_io.c:301 drivers/tty/tty_io.c:528
#: drivers/tty/tty_io.c:548 drivers/tty/tty_io.c:701 drivers/tty/tty_io.c:717
#: drivers/tty/tty_io.c:894 drivers/tty/tty_io.c:1041 drivers/tty/tty_io.c:1091
#: drivers/tty/tty_io.c:1133 drivers/tty/tty_io.c:1167
#: drivers/tty/tty_io.c:1188 drivers/tty/tty_io.c:1208
#: drivers/tty/tty_io.c:1286 drivers/tty/tty_io.c:1304
#: drivers/tty/tty_io.c:1322 drivers/tty/tty_io.c:1366
#: drivers/tty/tty_io.c:1488 drivers/tty/tty_io.c:1504
#: drivers/tty/tty_io.c:1566 drivers/tty/tty_io.c:1601
#: drivers/tty/tty_io.c:1702 drivers/tty/tty_io.c:1861
#: drivers/tty/tty_io.c:1897 drivers/tty/tty_io.c:2018
#: drivers/tty/tty_io.c:2086 drivers/tty/tty_io.c:2180
#: drivers/tty/tty_io.c:2264 drivers/tty/tty_io.c:2301
#: drivers/tty/tty_io.c:2350 drivers/tty/tty_io.c:2377
#: drivers/tty/tty_io.c:2417 drivers/tty/tty_io.c:2439
#: drivers/tty/tty_io.c:2462 drivers/tty/tty_io.c:2521
#: drivers/tty/tty_io.c:2542 drivers/tty/tty_io.c:3094
msgid "**Parameters**"
msgstr ""

#: ../../../driver-api/tty/tty_internals:14: drivers/tty/tty_io.c:1645
#: ../../../driver-api/tty/tty_internals:22: drivers/tty/tty_io.c:1675
#: drivers/tty/tty_io.c:2585 ../../../driver-api/tty/tty_internals:30:
#: drivers/tty/tty_io.c:168 drivers/tty/tty_io.c:530 drivers/tty/tty_io.c:550
#: drivers/tty/tty_io.c:719 drivers/tty/tty_io.c:1043 drivers/tty/tty_io.c:1135
#: drivers/tty/tty_io.c:1285 drivers/tty/tty_io.c:1303
#: drivers/tty/tty_io.c:1324 drivers/tty/tty_io.c:1490
#: drivers/tty/tty_io.c:1568 drivers/tty/tty_io.c:1603
#: drivers/tty/tty_io.c:2266 drivers/tty/tty_io.c:2303
#: drivers/tty/tty_io.c:2352 drivers/tty/tty_io.c:2419
#: drivers/tty/tty_io.c:2441 drivers/tty/tty_io.c:2464
#: drivers/tty/tty_io.c:2523 drivers/tty/tty_io.c:2544
msgid "``struct tty_struct *tty``"
msgstr ""

#: ../../../driver-api/tty/tty_internals:14: drivers/tty/tty_io.c:1640
#: ../../../driver-api/tty/tty_internals:22: drivers/tty/tty_io.c:1670
#: drivers/tty/tty_io.c:2580 ../../../driver-api/tty/tty_internals:30:
#: drivers/tty/tty_io.c:525 drivers/tty/tty_io.c:545 drivers/tty/tty_io.c:2414
#: drivers/tty/tty_io.c:2436 drivers/tty/tty_io.c:2518
#: drivers/tty/tty_io.c:2539
msgid "tty device"
msgstr ""

#: ../../../driver-api/tty/tty_internals:14: drivers/tty/tty_io.c:1642
#: drivers/tty/tty_io.c:1982 drivers/tty/tty_io.c:2002
#: ../../../driver-api/tty/tty_internals:22: drivers/tty/tty_io.c:326
#: drivers/tty/tty_io.c:1673 drivers/tty/tty_io.c:2583
#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:3
#: drivers/tty/tty_io.c:165 drivers/tty/tty_io.c:212 drivers/tty/tty_io.c:301
#: drivers/tty/tty_io.c:527 drivers/tty/tty_io.c:548 drivers/tty/tty_io.c:716
#: drivers/tty/tty_io.c:894 drivers/tty/tty_io.c:1041 drivers/tty/tty_io.c:1091
#: drivers/tty/tty_io.c:1133 drivers/tty/tty_io.c:1168
#: drivers/tty/tty_io.c:1189 drivers/tty/tty_io.c:1212
#: drivers/tty/tty_io.c:1286 drivers/tty/tty_io.c:1304
#: drivers/tty/tty_io.c:1321 drivers/tty/tty_io.c:1366
#: drivers/tty/tty_io.c:1487 drivers/tty/tty_io.c:1503
#: drivers/tty/tty_io.c:1566 drivers/tty/tty_io.c:1601
#: drivers/tty/tty_io.c:1702 drivers/tty/tty_io.c:1862
#: drivers/tty/tty_io.c:1898 drivers/tty/tty_io.c:2018
#: drivers/tty/tty_io.c:2086 drivers/tty/tty_io.c:2180
#: drivers/tty/tty_io.c:2264 drivers/tty/tty_io.c:2301
#: drivers/tty/tty_io.c:2350 drivers/tty/tty_io.c:2376
#: drivers/tty/tty_io.c:2417 drivers/tty/tty_io.c:2439
#: drivers/tty/tty_io.c:2462 drivers/tty/tty_io.c:2521
#: drivers/tty/tty_io.c:2543 drivers/tty/tty_io.c:3094
msgid "**Description**"
msgstr ""

#: ../../../driver-api/tty/tty_internals:14: drivers/tty/tty_io.c:1641
msgid ""
"Performs the final steps to release and free a tty device. It is the same as "
"tty_release_struct() except that it also resets ``TTY_PORT_KOPENED`` flag on "
"**tty->port**."
msgstr ""

#: ../../../driver-api/tty/tty_internals:14: drivers/tty/tty_io.c:1979
msgid "open a tty device for kernel"
msgstr ""

#: ../../../driver-api/tty/tty_internals:14: drivers/tty/tty_io.c:1985
#: drivers/tty/tty_io.c:2005 ../../../driver-api/tty/tty_internals:30:
#: drivers/tty/tty_io.c:303 drivers/tty/tty_io.c:1863 drivers/tty/tty_io.c:1899
#: drivers/tty/tty_io.c:2020
msgid "``dev_t device``"
msgstr ""

#: ../../../driver-api/tty/tty_internals:14: drivers/tty/tty_io.c:1980
#: drivers/tty/tty_io.c:2000 ../../../driver-api/tty/tty_internals:30:
#: drivers/tty/tty_io.c:2015
msgid "dev_t of device to open"
msgstr ""

#: ../../../driver-api/tty/tty_internals:14: drivers/tty/tty_io.c:1981
msgid ""
"Opens tty exclusively for kernel. Performs the driver lookup, makes sure "
"it's not already opened and performs the first-time tty initialization."
msgstr ""

#: ../../../driver-api/tty/tty_internals:14: drivers/tty/tty_io.c:1984
msgid "Claims the global ``tty_mutex`` to serialize:"
msgstr ""

#: ../../../driver-api/tty/tty_internals:14: drivers/tty/tty_io.c:1985
#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2022
msgid "concurrent first-time tty initialization"
msgstr ""

#: ../../../driver-api/tty/tty_internals:14: drivers/tty/tty_io.c:1986
#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2023
msgid "concurrent tty driver removal w/ lookup"
msgstr ""

#: ../../../driver-api/tty/tty_internals:14: drivers/tty/tty_io.c:1987
#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2024
msgid "concurrent tty removal from driver table"
msgstr ""

#: ../../../driver-api/tty/tty_internals:14: drivers/tty/tty_io.c:1989
#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1209
#: drivers/tty/tty_io.c:1324 drivers/tty/tty_io.c:1381
#: drivers/tty/tty_io.c:1861 drivers/tty/tty_io.c:1902
#: drivers/tty/tty_io.c:2026
msgid "**Return**"
msgstr ""

#: ../../../driver-api/tty/tty_internals:14: drivers/tty/tty_io.c:1990
msgid "the locked initialized :c:type:`tty_struct`"
msgstr ""

#: ../../../driver-api/tty/tty_internals:14: drivers/tty/tty_io.c:1999
msgid "open a tty device for shared in-kernel use"
msgstr ""

#: ../../../driver-api/tty/tty_internals:14: drivers/tty/tty_io.c:2001
msgid ""
"Opens an already existing tty for in-kernel use. Compared to "
"tty_kopen_exclusive() above it doesn't ensure to be the only user."
msgstr ""

#: ../../../driver-api/tty/tty_internals:14: drivers/tty/tty_io.c:2004
msgid "Locking: identical to tty_kopen() above."
msgstr ""

#: ../../../driver-api/tty/tty_internals.rst:20
msgid "Exported Internal Functions"
msgstr ""

#: ../../../driver-api/tty/tty_internals:22: drivers/tty/tty_io.c:322
msgid "return dev_t for device name"
msgstr ""

#: ../../../driver-api/tty/tty_internals:22: drivers/tty/tty_io.c:328
msgid "``const char *name``"
msgstr ""

#: ../../../driver-api/tty/tty_internals:22: drivers/tty/tty_io.c:323
msgid "user space name of device under /dev"
msgstr ""

#: ../../../driver-api/tty/tty_internals:22: drivers/tty/tty_io.c:325
msgid "``dev_t *number``"
msgstr ""

#: ../../../driver-api/tty/tty_internals:22: drivers/tty/tty_io.c:324
msgid "pointer to dev_t that this function will populate"
msgstr ""

#: ../../../driver-api/tty/tty_internals:22: drivers/tty/tty_io.c:325
msgid ""
"This function converts device names like ttyS0 or ttyUSB1 into dev_t like "
"(4, 64) or (188, 1). If no corresponding driver is registered then the "
"function returns -``ENODEV``."
msgstr ""

#: ../../../driver-api/tty/tty_internals:22: drivers/tty/tty_io.c:329
msgid "Locking: this acquires tty_mutex to protect the tty_drivers list from"
msgstr ""

#: ../../../driver-api/tty/tty_internals:22: drivers/tty/tty_io.c:330
msgid ""
"being modified while we are traversing it, and makes sure to release it "
"before exiting."
msgstr ""

#: ../../../driver-api/tty/tty_internals:22: drivers/tty/tty_io.c:1669
msgid "release a tty struct"
msgstr ""

#: ../../../driver-api/tty/tty_internals:22: drivers/tty/tty_io.c:1672
#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1208
#: drivers/tty/tty_io.c:1365 drivers/tty/tty_io.c:1565
#: drivers/tty/tty_io.c:1600 drivers/tty/tty_io.c:3093
msgid "``int idx``"
msgstr ""

#: ../../../driver-api/tty/tty_internals:22: drivers/tty/tty_io.c:1671
#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1599
msgid "index of the tty"
msgstr ""

#: ../../../driver-api/tty/tty_internals:22: drivers/tty/tty_io.c:1672
msgid ""
"Performs the final steps to release and free a tty device. It is roughly the "
"reverse of tty_init_dev()."
msgstr ""

#: ../../../driver-api/tty/tty_internals:22: drivers/tty/tty_io.c:2579
msgid "get tty statistics"
msgstr ""

#: ../../../driver-api/tty/tty_internals:22: drivers/tty/tty_io.c:2582
msgid "``struct serial_icounter_struct *icount``"
msgstr ""

#: ../../../driver-api/tty/tty_internals:22: drivers/tty/tty_io.c:2581
msgid "output parameter"
msgstr ""

#: ../../../driver-api/tty/tty_internals:22: drivers/tty/tty_io.c:2582
msgid "Gets a copy of the **tty**'s icount statistics."
msgstr ""

#: ../../../driver-api/tty/tty_internals:22: drivers/tty/tty_io.c:2584
#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2523
#: drivers/tty/tty_io.c:2545
msgid "Locking: none (up to the driver)"
msgstr ""

#: ../../../driver-api/tty/tty_internals.rst:28
msgid "Internal Functions"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:162
msgid "free a disused tty"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:163
msgid "tty struct to free"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:164
msgid "Free the write buffers, tty queue and tty memory itself."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:166
msgid "Locking: none. Must be called after tty is definitely unused"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:209
msgid "free file->private_data"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:215
#: drivers/tty/tty_io.c:1207 drivers/tty/tty_io.c:2379
msgid "``struct file *file``"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:210
msgid "to free private_data of"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:211
msgid ""
"This shall be used only for fail path handling when tty_add_file was not "
"called yet."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:297
msgid "find device of a tty"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:298
msgid "device identifier"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:300
#: drivers/tty/tty_io.c:1897
msgid "``int *index``"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:299
msgid "returns the index of the tty"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:300
msgid ""
"This routine returns a tty driver structure, given a device number and also "
"passes back the index number."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:303
msgid "Locking: caller must hold tty_mutex"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:524
msgid "Release a redirect on a pty if present"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:526
msgid ""
"This is available to the pty code so if the master closes, if the slave is a "
"redirect it can release the redirect."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:544
msgid "actual handler for hangup events"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:547
msgid "``int exit_session``"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:546
msgid "if non-zero, signal all foreground group processes"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:547
msgid ""
"This can be called by a \"kworker\" kernel thread. That is process "
"synchronous but doesn't hold any locks, so we need to make sure we have the "
"appropriate locks for what we're doing."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:551
msgid ""
"The hangup event clears any pending redirections onto the hung up device. It "
"ensures future writes will error and it does the needed line discipline "
"hangup and signal delivery. The tty object itself remains intact."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:555
#: drivers/tty/tty_io.c:896 drivers/tty/tty_io.c:1092 drivers/tty/tty_io.c:1368
#: drivers/tty/tty_io.c:1506 drivers/tty/tty_io.c:1568
#: drivers/tty/tty_io.c:1704 drivers/tty/tty_io.c:2096
#: drivers/tty/tty_io.c:2267 drivers/tty/tty_io.c:2353
#: drivers/tty/tty_io.c:2464
msgid "Locking:"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:556
msgid "BTM"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:558
msgid "redirect lock for undoing redirection"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:559
msgid "file list lock for manipulating list of ttys"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:560
msgid "tty_ldiscs_lock from called functions"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:561
msgid "termios_rwsem resetting termios data"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:562
msgid "tasklist_lock to walk task list for hangup event"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:564
msgid "->siglock to protect ->signal/->sighand"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:697
msgid "process vhangup for own ctty"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:703
msgid "``void``"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1
msgid "no arguments"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:698
msgid "Perform a vhangup on the current controlling tty"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:713
msgid "hangup session leader exit"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:714
msgid "tty to hangup"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:715
msgid ""
"The session leader is exiting and hanging up its controlling terminal. Every "
"process in the foreground process group is signalled ``SIGHUP``."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:718
msgid ""
"We do this synchronously so that when the syscall returns the process is "
"complete. That guarantee is necessary for security reasons."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:890
msgid "read method for tty device files"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:896
#: drivers/tty/tty_io.c:1093
msgid "``struct kiocb *iocb``"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:891
#: drivers/tty/tty_io.c:1088
msgid "kernel I/O control block"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:893
msgid "``struct iov_iter *to``"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:892
msgid "destination for the data read"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:893
msgid ""
"Perform the read system call function on this terminal device. Checks for "
"hung up devices before calling the line discipline method."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:897
msgid ""
"Locks the line discipline internally while needed. Multiple read calls may "
"be outstanding in parallel."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1037
msgid "write a message to a certain tty, not just the console."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1038
msgid "the destination tty_struct"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1040
msgid "``char *msg``"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1039
msgid "the message to write"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1040
msgid ""
"This is used for messages that need to be redirected to a specific tty. We "
"don't put it into the syslog queue right now maybe in the future if really "
"needed."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1044
msgid "We must still hold the BTM and test the CLOSING flag for the moment."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1046
msgid "This function is DEPRECATED, do not use in new code."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1087
msgid "write method for tty device file"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1090
msgid "``struct iov_iter *from``"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1089
msgid "iov_iter with data to write"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1090
msgid "Write data to a tty device via the line discipline."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1093
msgid ""
"Locks the line discipline as required Writes to the tty driver are "
"serialized by the atomic_write_lock and are then processed in chunks to the "
"device. The line discipline write method will not be invoked in parallel for "
"each device."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1129
msgid "send priority character"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1130
msgid "the tty to send to"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1132
msgid "``u8 ch``"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1131
msgid "xchar to send"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1132
msgid "Send a high priority character to the tty even if stopped."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1134
msgid "Locking: none for xchar method, write ordering for write method."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1163
msgid "generate name for a pty"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1169
#: drivers/tty/tty_io.c:1190 drivers/tty/tty_io.c:1210
#: drivers/tty/tty_io.c:1288 drivers/tty/tty_io.c:1306
#: drivers/tty/tty_io.c:1368 drivers/tty/tty_io.c:3096
msgid "``struct tty_driver *driver``"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1164
#: drivers/tty/tty_io.c:1185
msgid "the tty driver in use"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1166
#: drivers/tty/tty_io.c:1187
msgid "``int index``"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1165
#: drivers/tty/tty_io.c:1186 drivers/tty/tty_io.c:1207
msgid "the minor number"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1167
#: drivers/tty/tty_io.c:1188
msgid "``char *p``"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1166
msgid "output buffer of at least 6 bytes"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1167
#: drivers/tty/tty_io.c:1188
msgid ""
"Generate a name from a **driver** reference and write it to the output "
"buffer **p**."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1170
#: drivers/tty/tty_io.c:1191
msgid "Locking: None"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1184
msgid "generate name for a tty"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1187
msgid "output buffer of at least 7 bytes"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1204
msgid "find an existing tty, if any"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1205
#: drivers/tty/tty_io.c:1283 drivers/tty/tty_io.c:1301
msgid "the driver for the tty"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1206
msgid "file object"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1209
msgid ""
"the tty, if found. If not found, return ``NULL`` or ERR_PTR() if the driver "
"lookup() method returns an error."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1211
msgid ""
"Locking: tty_mutex must be held. If the tty is found, bump the tty kref."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1282
msgid "install a tty entry in the driver"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1284
msgid "the tty"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1285
msgid ""
"Install a tty object into the driver tables. The **tty->index** field will "
"be set by the time this is called. This method is responsible for ensuring "
"any need additional structures are allocated and configured."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1289
#: drivers/tty/tty_io.c:1306
msgid "Locking: tty_mutex for now"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1300
msgid "remove a tty from the driver tables"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1302
msgid "tty to remove"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1303
msgid ""
"Remove a tty object from the driver tables. The tty->index field will be set "
"by the time this is called."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1318
msgid "fast re-open of an open tty"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1319
msgid "the tty to open"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1320
msgid "Re-opens on master ptys are not allowed and return -``EIO``."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1322
msgid "Locking: Caller must hold tty_lock"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1324
msgid "0 on success, -errno on error."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1362
msgid "initialise a tty device"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1363
msgid "tty driver we are opening a device on"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1364
msgid "device index"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1365
msgid ""
"Prepare a tty device. This may not be a \"new\" clean device but could also "
"be an active device. The pty drivers require special handling because of "
"this."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1369
msgid ""
"The function is called under the tty_mutex, which protects us from the tty "
"struct or driver itself going away."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1372
msgid ""
"On exit the tty device has the line discipline attached and a reference "
"count of 1. If a pair was created for pty/tty use and the other was a pty "
"master then it too has a reference count of 1."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1376
msgid ""
"WSH 06/09/97: Rewritten to remove races and properly clean up after a failed "
"open. The new code protects the open with a mutex, so it's really quite "
"straightforward. The mutex locking can probably be relaxed for the (most "
"common) case of reopening a tty."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1382
msgid "new tty structure"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1484
msgid "flush all works of a tty/pty pair"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1485
msgid "tty device to flush works for (or either end of a pty pair)"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1486
msgid "Sync flush all works belonging to **tty** (and the 'other' tty)."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1500
#: drivers/tty/tty_io.c:1562
msgid "release tty structure memory"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1506
msgid "``struct work_struct *work``"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1501
msgid "work of tty we are obliterating"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1502
msgid ""
"Releases memory associated with a tty structure, and clears out the driver "
"table slots. This function is called when a device is no longer in use. It "
"also gets called when setup of a device fails."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1507
msgid ""
"takes the file list lock internally when working on the list of ttys that "
"the driver keeps."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1510
msgid ""
"This method gets called from a work queue so that the driver private cleanup "
"ops can sleep (needed for USB at least)"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1563
msgid "tty device release"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1564
msgid "index of the tty device release"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1565
msgid ""
"Release both **tty** and a possible linked partner (think pty pair), and "
"decrement the refcount of the backing module."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1569
msgid ""
"tty_mutex takes the file list lock internally when working on the list of "
"ttys that the driver keeps."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1597
msgid "check a tty before real release"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1598
msgid "tty to check"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1600
msgid ""
"Performs some paranoid checking before true release of the **tty**. This is "
"a no-op unless ``TTY_PARANOIA_CHECK`` is defined."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1698
msgid "vfs callback for close"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1704
#: drivers/tty/tty_io.c:2088
msgid "``struct inode *inode``"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1699
msgid "inode of tty"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1701
#: drivers/tty/tty_io.c:1860 drivers/tty/tty_io.c:1896
#: drivers/tty/tty_io.c:2017 drivers/tty/tty_io.c:2085
#: drivers/tty/tty_io.c:2182
msgid "``struct file *filp``"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1700
msgid "file pointer for handle to tty"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1701
msgid ""
"Called the last time each file handle is closed that references this tty. "
"There may however be several such references."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1705
msgid "Takes BKL. See tty_release_dev()."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1707
msgid ""
"Even releasing the tty structures is a tricky business. We have to be very "
"careful that the structures are all released at the same time, as interrupts "
"might otherwise get the wrong pointers."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1711
msgid ""
"WSH 09/09/97: rewritten to avoid some nasty race conditions that could lead "
"to double frees or releasing memory still in use."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1857
msgid "get locked tty of current task"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1858
#: drivers/tty/tty_io.c:1894
msgid "device number"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1859
#: drivers/tty/tty_io.c:1895 drivers/tty/tty_io.c:2016
#: drivers/tty/tty_io.c:2084
msgid "file pointer to tty"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1860
msgid "locked tty of the current task iff **device** is /dev/tty"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1861
msgid "Performs a re-open of the current task's controlling tty."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1863
msgid ""
"We cannot return driver and index like for the other nodes because devpts "
"will not work then. It expects inodes to be from devpts FS."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1893
msgid "lookup a tty driver for a given device file"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1896
msgid "index for the device in the **return** driver"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1897
msgid ""
"If returned value is not erroneous, the caller is responsible to decrement "
"the refcount by tty_driver_kref_put()."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1900
msgid "Locking: ``tty_mutex`` protects get_tty_driver()"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:1903
msgid "driver for this inode (with increased refcount)"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2014
#: drivers/tty/tty_io.c:2082
msgid "open a tty device"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2017
msgid ""
"Performs the driver lookup, checks for a reopen, or otherwise performs the "
"first-time tty initialization."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2021
msgid "Claims the global tty_mutex to serialize:"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2027
msgid "the locked initialized or re-opened :c:type:`tty_struct`"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2083
msgid "inode of device file"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2085
msgid ""
"tty_open() and tty_release() keep up the tty count that contains the number "
"of opens done on a tty. We cannot use the inode-count, as different inodes "
"might point to the same tty."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2089
msgid ""
"Open-counting is needed for pty masters, as well as for keeping track of "
"serial lines: DTR is dropped when the last close happens. (This is not done "
"solely through tty->count, now.  - Ted 1/27/92)"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2093
msgid ""
"The termios state of a pty is reset on the first open so that settings don't "
"persist across reuse."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2097
msgid "``tty_mutex`` protects tty, tty_lookup_driver() and tty_init_dev()."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2098
msgid "**tty->count** should protect the rest."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2099
msgid "->siglock protects ->signal/->sighand"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2101
msgid "**Note**"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2102
msgid ""
"the tty_unlock/lock cases without a ref are only safe due to ``tty_mutex``"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2176
msgid "check tty status"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2177
msgid "file being polled"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2179
msgid "``poll_table *wait``"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2178
msgid "poll wait structures to update"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2179
msgid ""
"Call the line discipline polling method to obtain the poll status of the "
"device."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2182
msgid ""
"Locking: locks called line discipline but ldisc poll method may be re-"
"entered freely by other callers."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2260
msgid "fake input character"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2261
msgid "tty to fake input into"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2263
msgid "``u8 __user *p``"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2262
msgid "pointer to character"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2263
msgid ""
"Fake input to a tty device. Does the necessary locking and input management."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2265
msgid "FIXME: does not honour flow control ??"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2268
msgid "Called functions take tty_ldiscs_lock"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2269
msgid "current->signal->tty check is safe without locks"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2297
msgid "implement window query ioctl"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2298
msgid "tty"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2300
#: drivers/tty/tty_io.c:2349
msgid "``struct winsize __user *arg``"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2299
#: drivers/tty/tty_io.c:2348
msgid "user buffer for result"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2300
msgid "Copies the kernel idea of the window size into the user buffer."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2302
msgid ""
"Locking: **tty->winsize_mutex** is taken to ensure the winsize data is "
"consistent."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2346
msgid "implement window size set ioctl"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2347
msgid "tty side of tty"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2349
msgid ""
"Copies the user idea of the window size to the kernel. Traditionally this is "
"just advisory information but for the Linux console it actually has driver "
"level meaning and triggers a VC resize."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2354
msgid ""
"Driver dependent. The default do_resize method takes the tty termios mutex "
"and ctrl.lock. The console takes its own lock then calls into the default "
"method."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2373
msgid "allow admin to move logical console"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2374
msgid "the file to become console"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2375
msgid "Allow the administrator to move the redirected console device."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2377
msgid "Locking: uses redirect_lock to guard the redirect information"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2413
msgid "set line discipline"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2416
#: drivers/tty/tty_io.c:2438 drivers/tty/tty_io.c:2520
msgid "``int __user *p``"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2415
#: drivers/tty/tty_io.c:2437
msgid "pointer to user data"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2416
msgid "Set the line discipline according to user request."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2418
msgid "Locking: see tty_set_ldisc(), this function is just a helper"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2435
msgid "get line discipline"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2438
msgid "Retrieves the line discipline id directly from the ldisc."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2440
msgid ""
"Locking: waits for ldisc reference (in case the line discipline is changing "
"or the **tty** is being hungup)"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2458
msgid "performed time break"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2459
msgid "device to break on"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2461
msgid "``unsigned int duration``"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2460
msgid "timeout in mS"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2461
msgid ""
"Perform a timed break on hardware that lacks its own driver level timed "
"break functionality."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2465
msgid "**tty->atomic_write_lock** serializes"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2517
msgid "get modem status"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2519
msgid "pointer to result"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2520
msgid ""
"Obtain the modem status bits from the tty driver if the feature is "
"supported. Return -``ENOTTY`` if it is not available."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2538
msgid "set modem status"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2541
msgid "``unsigned int cmd``"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2540
msgid "command - clear bits, set bits or set all"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2542
msgid "``unsigned __user *p``"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2541
msgid "pointer to desired bits"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:2542
msgid ""
"Set the modem status bits from the tty driver if the feature is supported. "
"Return -``ENOTTY`` if it is not available."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:3090
msgid "allocate a new tty"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:3091
msgid "driver which will handle the returned tty"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:3092
msgid "minor of the tty"
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:3093
msgid "This subroutine allocates and initializes a tty structure."
msgstr ""

#: ../../../driver-api/tty/tty_internals:30: drivers/tty/tty_io.c:3095
msgid "Locking: none - **tty** in question is not exposed at this point"
msgstr ""
