# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../driver-api/parport-lowlevel.rst:3
msgid "PARPORT interface documentation"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:0
msgid "Time-stamp"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:5
msgid "<2000-02-24 13:30:20 twaugh>"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:7
msgid "Described here are the following functions:"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:9
msgid "Global functions::"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:10
msgid ""
"parport_register_driver parport_unregister_driver parport_enumerate "
"parport_register_device parport_unregister_device parport_claim "
"parport_claim_or_block parport_release parport_yield parport_yield_blocking "
"parport_wait_peripheral parport_poll_peripheral parport_wait_event "
"parport_negotiate parport_read parport_write parport_open parport_close "
"parport_device_id parport_device_coords parport_find_class "
"parport_find_device parport_set_timeout"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:34
msgid "Port functions (can be overridden by low-level drivers):"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:36
msgid "SPP::"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:37
msgid ""
"port->ops->read_data port->ops->write_data port->ops->read_status port->ops-"
">read_control port->ops->write_control port->ops->frob_control port->ops-"
">enable_irq port->ops->disable_irq port->ops->data_forward port->ops-"
">data_reverse"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:48
msgid "EPP::"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:49
msgid ""
"port->ops->epp_write_data port->ops->epp_read_data port->ops->epp_write_addr "
"port->ops->epp_read_addr"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:54
msgid "ECP::"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:55
msgid ""
"port->ops->ecp_write_data port->ops->ecp_read_data port->ops->ecp_write_addr"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:59
msgid "Other::"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:60
msgid ""
"port->ops->nibble_read_data port->ops->byte_read_data port->ops-"
">compat_write_data"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:64
msgid ""
"The parport subsystem comprises ``parport`` (the core port-sharing code), "
"and a variety of low-level drivers that actually do the port accesses.  Each "
"low-level driver handles a particular style of port (PC, Amiga, and so on)."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:69
msgid ""
"The parport interface to the device driver author can be broken down into "
"global functions and port functions."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:72
msgid ""
"The global functions are mostly for communicating between the device driver "
"and the parport subsystem: acquiring a list of available ports, claiming a "
"port for exclusive use, and so on.  They also include ``generic`` functions "
"for doing standard things that will work on any IEEE 1284-capable "
"architecture."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:78
msgid ""
"The port functions are provided by the low-level drivers, although the core "
"parport module provides generic ``defaults`` for some routines. The port "
"functions can be split into three groups: SPP, EPP, and ECP."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:82
msgid ""
"SPP (Standard Parallel Port) functions modify so-called ``SPP`` registers: "
"data, status, and control.  The hardware may not actually have registers "
"exactly like that, but the PC does and this interface is modelled after "
"common PC implementations.  Other low-level drivers may be able to emulate "
"most of the functionality."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:88
msgid ""
"EPP (Enhanced Parallel Port) functions are provided for reading and writing "
"in IEEE 1284 EPP mode, and ECP (Extended Capabilities Port) functions are "
"used for IEEE 1284 ECP mode. (What about BECP? Does anyone care?)"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:93
msgid ""
"Hardware assistance for EPP and/or ECP transfers may or may not be "
"available, and if it is available it may or may not be used.  If hardware is "
"not used, the transfer will be software-driven.  In order to cope with "
"peripherals that only tenuously support IEEE 1284, a low-level driver "
"specific function is provided, for altering 'fudge factors'."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:101
msgid "Global functions"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:104
msgid "parport_register_driver - register a device driver with parport"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:107
#: ../../../driver-api/parport-lowlevel.rst:246
#: ../../../driver-api/parport-lowlevel.rst:295
#: ../../../driver-api/parport-lowlevel.rst:361
#: ../../../driver-api/parport-lowlevel.rst:540
#: ../../../driver-api/parport-lowlevel.rst:586
#: ../../../driver-api/parport-lowlevel.rst:628
#: ../../../driver-api/parport-lowlevel.rst:674
#: ../../../driver-api/parport-lowlevel.rst:709
#: ../../../driver-api/parport-lowlevel.rst:745
#: ../../../driver-api/parport-lowlevel.rst:772
#: ../../../driver-api/parport-lowlevel.rst:806
#: ../../../driver-api/parport-lowlevel.rst:836
#: ../../../driver-api/parport-lowlevel.rst:866
#: ../../../driver-api/parport-lowlevel.rst:902
#: ../../../driver-api/parport-lowlevel.rst:926
#: ../../../driver-api/parport-lowlevel.rst:970
#: ../../../driver-api/parport-lowlevel.rst:1002
#: ../../../driver-api/parport-lowlevel.rst:1060
#: ../../../driver-api/parport-lowlevel.rst:1102
#: ../../../driver-api/parport-lowlevel.rst:1155
#: ../../../driver-api/parport-lowlevel.rst:1188
#: ../../../driver-api/parport-lowlevel.rst:1217
#: ../../../driver-api/parport-lowlevel.rst:1253
#: ../../../driver-api/parport-lowlevel.rst:1282
#: ../../../driver-api/parport-lowlevel.rst:1319
#: ../../../driver-api/parport-lowlevel.rst:1355
#: ../../../driver-api/parport-lowlevel.rst:1386
#: ../../../driver-api/parport-lowlevel.rst:1415
#: ../../../driver-api/parport-lowlevel.rst:1444
#: ../../../driver-api/parport-lowlevel.rst:1473
#: ../../../driver-api/parport-lowlevel.rst:1511
#: ../../../driver-api/parport-lowlevel.rst:1549
#: ../../../driver-api/parport-lowlevel.rst:1589
#: ../../../driver-api/parport-lowlevel.rst:1629
#: ../../../driver-api/parport-lowlevel.rst:1663
#: ../../../driver-api/parport-lowlevel.rst:1698
#: ../../../driver-api/parport-lowlevel.rst:1737
#: ../../../driver-api/parport-lowlevel.rst:1771
#: ../../../driver-api/parport-lowlevel.rst:1805
msgid "SYNOPSIS"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:122
#: ../../../driver-api/parport-lowlevel.rst:261
#: ../../../driver-api/parport-lowlevel.rst:304
#: ../../../driver-api/parport-lowlevel.rst:380
#: ../../../driver-api/parport-lowlevel.rst:512
#: ../../../driver-api/parport-lowlevel.rst:550
#: ../../../driver-api/parport-lowlevel.rst:595
#: ../../../driver-api/parport-lowlevel.rst:638
#: ../../../driver-api/parport-lowlevel.rst:685
#: ../../../driver-api/parport-lowlevel.rst:721
#: ../../../driver-api/parport-lowlevel.rst:754
#: ../../../driver-api/parport-lowlevel.rst:781
#: ../../../driver-api/parport-lowlevel.rst:815
#: ../../../driver-api/parport-lowlevel.rst:845
#: ../../../driver-api/parport-lowlevel.rst:880
#: ../../../driver-api/parport-lowlevel.rst:911
#: ../../../driver-api/parport-lowlevel.rst:935
#: ../../../driver-api/parport-lowlevel.rst:980
#: ../../../driver-api/parport-lowlevel.rst:1028
#: ../../../driver-api/parport-lowlevel.rst:1069
#: ../../../driver-api/parport-lowlevel.rst:1111
#: ../../../driver-api/parport-lowlevel.rst:1168
#: ../../../driver-api/parport-lowlevel.rst:1201
#: ../../../driver-api/parport-lowlevel.rst:1230
#: ../../../driver-api/parport-lowlevel.rst:1266
#: ../../../driver-api/parport-lowlevel.rst:1295
#: ../../../driver-api/parport-lowlevel.rst:1334
#: ../../../driver-api/parport-lowlevel.rst:1368
#: ../../../driver-api/parport-lowlevel.rst:1399
#: ../../../driver-api/parport-lowlevel.rst:1428
#: ../../../driver-api/parport-lowlevel.rst:1457
#: ../../../driver-api/parport-lowlevel.rst:1487
#: ../../../driver-api/parport-lowlevel.rst:1525
#: ../../../driver-api/parport-lowlevel.rst:1563
#: ../../../driver-api/parport-lowlevel.rst:1603
#: ../../../driver-api/parport-lowlevel.rst:1643
#: ../../../driver-api/parport-lowlevel.rst:1677
#: ../../../driver-api/parport-lowlevel.rst:1712
#: ../../../driver-api/parport-lowlevel.rst:1751
#: ../../../driver-api/parport-lowlevel.rst:1785
#: ../../../driver-api/parport-lowlevel.rst:1819
msgid "DESCRIPTION"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:124
msgid ""
"In order to be notified about parallel ports when they are detected, "
"parport_register_driver should be called.  Your driver will immediately be "
"notified of all ports that have already been detected, and of each new port "
"as low-level drivers are loaded."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:129
msgid ""
"A ``struct parport_driver`` contains the textual name of your driver, a "
"pointer to a function to handle new ports, and a pointer to a function to "
"handle ports going away due to a low-level driver unloading.  Ports will "
"only be detached if they are not being used (i.e. there are no devices "
"registered on them)."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:135
msgid ""
"The visible parts of the ``struct parport *`` argument given to attach/"
"detach are::"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:150
msgid ""
"There are other members of the structure, but they should not be touched."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:153
msgid ""
"The ``modes`` member summarises the capabilities of the underlying "
"hardware.  It consists of flags which may be bitwise-ored together:"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:157
msgid "PARPORT_MODE_PCSPP"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:157
msgid ""
"IBM PC registers are available, i.e. functions that act on data, control and "
"status registers are probably writing directly to the hardware."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:162
msgid "PARPORT_MODE_TRISTATE"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:162
msgid ""
"The data drivers may be turned off. This allows the data lines to be used "
"for reverse (peripheral to host) transfers."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:166
msgid "PARPORT_MODE_COMPAT"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:166
msgid ""
"The hardware can assist with compatibility-mode (printer) transfers, i.e. "
"compat_write_block."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:169
msgid "PARPORT_MODE_EPP"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:169
msgid "The hardware can assist with EPP transfers."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:171
msgid "PARPORT_MODE_ECP"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:171
msgid "The hardware can assist with ECP transfers."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:173
msgid "PARPORT_MODE_DMA"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:173
msgid ""
"The hardware can use DMA, so you might want to pass ISA DMA-able memory (i."
"e. memory allocated using the GFP_DMA flag with kmalloc) to the low-level "
"driver in order to take advantage of it."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:181
msgid "There may be other flags in ``modes`` as well."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:183
msgid ""
"The contents of ``modes`` is advisory only.  For example, if the hardware is "
"capable of DMA, and PARPORT_MODE_DMA is in ``modes``, it doesn't necessarily "
"mean that DMA will always be used when possible. Similarly, hardware that is "
"capable of assisting ECP transfers won't necessarily be used."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:190
#: ../../../driver-api/parport-lowlevel.rst:313
#: ../../../driver-api/parport-lowlevel.rst:434
#: ../../../driver-api/parport-lowlevel.rst:560
#: ../../../driver-api/parport-lowlevel.rst:645
#: ../../../driver-api/parport-lowlevel.rst:690
#: ../../../driver-api/parport-lowlevel.rst:726
#: ../../../driver-api/parport-lowlevel.rst:760
#: ../../../driver-api/parport-lowlevel.rst:786
#: ../../../driver-api/parport-lowlevel.rst:821
#: ../../../driver-api/parport-lowlevel.rst:851
#: ../../../driver-api/parport-lowlevel.rst:886
#: ../../../driver-api/parport-lowlevel.rst:940
#: ../../../driver-api/parport-lowlevel.rst:986
#: ../../../driver-api/parport-lowlevel.rst:1033
#: ../../../driver-api/parport-lowlevel.rst:1075
#: ../../../driver-api/parport-lowlevel.rst:1117
#: ../../../driver-api/parport-lowlevel.rst:1648
#: ../../../driver-api/parport-lowlevel.rst:1682
#: ../../../driver-api/parport-lowlevel.rst:1717
#: ../../../driver-api/parport-lowlevel.rst:1756
#: ../../../driver-api/parport-lowlevel.rst:1790
#: ../../../driver-api/parport-lowlevel.rst:1825
msgid "RETURN VALUE"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:192
msgid "Zero on success, otherwise an error code."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:195
#: ../../../driver-api/parport-lowlevel.rst:319
#: ../../../driver-api/parport-lowlevel.rst:440
#: ../../../driver-api/parport-lowlevel.rst:569
#: ../../../driver-api/parport-lowlevel.rst:657
msgid "ERRORS"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:197
msgid "None. (Can it fail? Why return int?)"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:200
#: ../../../driver-api/parport-lowlevel.rst:268
#: ../../../driver-api/parport-lowlevel.rst:325
#: ../../../driver-api/parport-lowlevel.rst:446
#: ../../../driver-api/parport-lowlevel.rst:521
#: ../../../driver-api/parport-lowlevel.rst:602
msgid "EXAMPLE"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:236
#: ../../../driver-api/parport-lowlevel.rst:285
#: ../../../driver-api/parport-lowlevel.rst:351
#: ../../../driver-api/parport-lowlevel.rst:494
#: ../../../driver-api/parport-lowlevel.rst:531
#: ../../../driver-api/parport-lowlevel.rst:577
#: ../../../driver-api/parport-lowlevel.rst:618
#: ../../../driver-api/parport-lowlevel.rst:664
#: ../../../driver-api/parport-lowlevel.rst:699
#: ../../../driver-api/parport-lowlevel.rst:735
#: ../../../driver-api/parport-lowlevel.rst:796
#: ../../../driver-api/parport-lowlevel.rst:826
#: ../../../driver-api/parport-lowlevel.rst:856
#: ../../../driver-api/parport-lowlevel.rst:892
#: ../../../driver-api/parport-lowlevel.rst:916
#: ../../../driver-api/parport-lowlevel.rst:960
#: ../../../driver-api/parport-lowlevel.rst:992
#: ../../../driver-api/parport-lowlevel.rst:1050
#: ../../../driver-api/parport-lowlevel.rst:1092
#: ../../../driver-api/parport-lowlevel.rst:1138
#: ../../../driver-api/parport-lowlevel.rst:1178
#: ../../../driver-api/parport-lowlevel.rst:1207
#: ../../../driver-api/parport-lowlevel.rst:1243
#: ../../../driver-api/parport-lowlevel.rst:1272
#: ../../../driver-api/parport-lowlevel.rst:1309
#: ../../../driver-api/parport-lowlevel.rst:1345
#: ../../../driver-api/parport-lowlevel.rst:1376
#: ../../../driver-api/parport-lowlevel.rst:1405
#: ../../../driver-api/parport-lowlevel.rst:1434
#: ../../../driver-api/parport-lowlevel.rst:1463
#: ../../../driver-api/parport-lowlevel.rst:1501
#: ../../../driver-api/parport-lowlevel.rst:1539
#: ../../../driver-api/parport-lowlevel.rst:1579
#: ../../../driver-api/parport-lowlevel.rst:1619
#: ../../../driver-api/parport-lowlevel.rst:1653
#: ../../../driver-api/parport-lowlevel.rst:1688
#: ../../../driver-api/parport-lowlevel.rst:1727
#: ../../../driver-api/parport-lowlevel.rst:1761
#: ../../../driver-api/parport-lowlevel.rst:1795
#: ../../../driver-api/parport-lowlevel.rst:1830
msgid "SEE ALSO"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:238
msgid "parport_unregister_driver, parport_register_device, parport_enumerate"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:243
msgid "parport_unregister_driver - tell parport to forget about this driver"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:263
msgid ""
"This tells parport not to notify the device driver of new ports or of ports "
"going away.  Registered devices belonging to that driver are NOT "
"unregistered: parport_unregister_device must be used for each one."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:287
msgid "parport_register_driver, parport_enumerate"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:292
msgid "parport_enumerate - retrieve a list of parallel ports (DEPRECATED)"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:306
msgid ""
"Retrieve the first of a list of valid parallel ports for this machine. "
"Successive parallel ports can be found using the ``struct parport *next`` "
"element of the ``struct parport *`` that is returned.  If ``next`` is NULL, "
"there are no more parallel ports in the list.  The number of ports in the "
"list will not exceed PARPORT_MAX."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:315
msgid ""
"A ``struct parport *`` describing a valid parallel port for the machine, or "
"NULL if there are none."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:321
msgid ""
"This function can return NULL to indicate that there are no parallel ports "
"to use."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:345
#: ../../../driver-api/parport-lowlevel.rst:955
#: ../../../driver-api/parport-lowlevel.rst:1039
#: ../../../driver-api/parport-lowlevel.rst:1081
#: ../../../driver-api/parport-lowlevel.rst:1122
#: ../../../driver-api/parport-lowlevel.rst:1722
msgid "NOTES"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:347
msgid ""
"parport_enumerate is deprecated; parport_register_driver should be used "
"instead."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:353
msgid "parport_register_driver, parport_unregister_driver"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:358
msgid "parport_register_device - register to use a port"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:382
msgid ""
"Use this function to register your device driver on a parallel port "
"(``port``).  Once you have done that, you will be able to use parport_claim "
"and parport_release in order to use the port."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:386
msgid ""
"The (``name``) argument is the name of the device that appears in /proc "
"filesystem. The string must be valid for the whole lifetime of the device "
"(until parport_unregister_device is called)."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:390
msgid ""
"This function will register three callbacks into your driver: ``preempt``, "
"``wakeup`` and ``irq``.  Each of these may be NULL in order to indicate that "
"you do not want a callback."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:394
msgid ""
"When the ``preempt`` function is called, it is because another driver wishes "
"to use the parallel port.  The ``preempt`` function should return non-zero "
"if the parallel port cannot be released yet -- if zero is returned, the port "
"is lost to another driver and the port must be re-claimed before use."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:400
msgid ""
"The ``wakeup`` function is called once another driver has released the port "
"and no other driver has yet claimed it.  You can claim the parallel port "
"from within the ``wakeup`` function (in which case the claim is guaranteed "
"to succeed), or choose not to if you don't need it now."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:406
msgid ""
"If an interrupt occurs on the parallel port your driver has claimed, the "
"``irq`` function will be called. (Write something about shared interrupts "
"here.)"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:410
msgid ""
"The ``handle`` is a pointer to driver-specific data, and is passed to the "
"callback functions."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:413
msgid "``flags`` may be a bitwise combination of the following flags:"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:416
msgid "Flag"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:416
msgid "Meaning"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:418
msgid "PARPORT_DEV_EXCL"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:418
msgid ""
"The device cannot share the parallel port at all. Use this only when "
"absolutely necessary."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:422
msgid ""
"The typedefs are not actually defined -- they are only shown in order to "
"make the function prototype more readable."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:425
msgid "The visible parts of the returned ``struct pardevice`` are::"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:436
msgid ""
"A ``struct pardevice *``: a handle to the registered parallel port device "
"that can be used for parport_claim, parport_release, etc."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:442
msgid ""
"A return value of NULL indicates that there was a problem registering a "
"device on that port."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:496
msgid "parport_unregister_device, parport_claim"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:501
msgid "parport_unregister_device - finish using a port"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:503
msgid "SYNPOPSIS"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:514
msgid ""
"This function is the opposite of parport_register_device.  After using "
"parport_unregister_device, ``dev`` is no longer a valid device handle."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:517
msgid ""
"You should not unregister a device that is currently claimed, although if "
"you do it will be released automatically."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:534
msgid "parport_unregister_driver"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:537
msgid ""
"parport_claim, parport_claim_or_block - claim the parallel port for a device"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:552
msgid ""
"These functions attempt to gain control of the parallel port on which "
"``dev`` is registered.  ``parport_claim`` does not block, but "
"``parport_claim_or_block`` may do. (Put something here about blocking "
"interruptibly or non-interruptibly.)"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:557
msgid "You should not try to claim a port that you have already claimed."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:562
msgid ""
"A return value of zero indicates that the port was successfully claimed, and "
"the caller now has possession of the parallel port."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:565
msgid ""
"If ``parport_claim_or_block`` blocks before returning successfully, the "
"return value is positive."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:572
#: ../../../driver-api/parport-lowlevel.rst:660
msgid "-EAGAIN"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:572
msgid ""
"The port is unavailable at the moment, but another attempt to claim it may "
"succeed."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:580
#: ../../../driver-api/parport-lowlevel.rst:666
msgid "parport_release"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:583
msgid "parport_release - release the parallel port"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:597
msgid ""
"Once a parallel port device has been claimed, it can be released using "
"``parport_release``.  It cannot fail, but you should not release a device "
"that you do not have possession of."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:620
msgid "change_mode, parport_claim, parport_claim_or_block, parport_yield"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:625
msgid ""
"parport_yield, parport_yield_blocking - temporarily release a parallel port"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:640
msgid ""
"When a driver has control of a parallel port, it may allow another driver to "
"temporarily ``borrow`` it.  ``parport_yield`` does not block; "
"``parport_yield_blocking`` may do."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:647
msgid ""
"A return value of zero indicates that the caller still owns the port and the "
"call did not block."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:650
msgid ""
"A positive return value from ``parport_yield_blocking`` indicates that the "
"caller still owns the port and the call blocked."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:653
msgid ""
"A return value of -EAGAIN indicates that the caller no longer owns the port, "
"and it must be re-claimed before use."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:660
msgid "Ownership of the parallel port was given away."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:671
msgid "parport_wait_peripheral - wait for status lines, up to 35ms"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:687
#: ../../../driver-api/parport-lowlevel.rst:723
msgid "Wait for the status lines in mask to match the values in val."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:693
#: ../../../driver-api/parport-lowlevel.rst:729
msgid "-EINTR"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:693
#: ../../../driver-api/parport-lowlevel.rst:729
msgid "a signal is pending"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:694
#: ../../../driver-api/parport-lowlevel.rst:730
#: ../../../driver-api/parport-lowlevel.rst:763
#: ../../../driver-api/parport-lowlevel.rst:789
msgid "0"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:694
#: ../../../driver-api/parport-lowlevel.rst:730
msgid "the status lines in mask have values in val"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:695
#: ../../../driver-api/parport-lowlevel.rst:731
#: ../../../driver-api/parport-lowlevel.rst:791
msgid "1"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:695
msgid "timed out while waiting (35ms elapsed)"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:701
msgid "parport_poll_peripheral"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:706
msgid "parport_poll_peripheral - wait for status lines, in usec"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:731
msgid "timed out while waiting (usec microseconds have elapsed)"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:737
msgid "parport_wait_peripheral"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:742
msgid "parport_wait_event - wait for an event on a port"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:756
msgid ""
"Wait for an event (e.g. interrupt) on a port.  The timeout is in jiffies."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:763
msgid "success"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:764
msgid "<0"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:764
msgid "error (exit as soon as possible)"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:765
msgid ">0"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:765
msgid "timed out"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:769
msgid "parport_negotiate - perform IEEE 1284 negotiation"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:783
msgid "Perform IEEE 1284 negotiation."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:789
msgid "handshake OK; IEEE 1284 peripheral and mode available"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:790
msgid "-1"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:790
msgid "handshake failed; peripheral not compliant (or none present)"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:791
msgid "handshake OK; IEEE 1284 peripheral present but mode not available"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:798
msgid "parport_read, parport_write"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:803
msgid "parport_read - read data from device"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:817
msgid ""
"Read data from device in current IEEE 1284 transfer mode.  This only works "
"for modes that support reverse data transfer."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:823
#: ../../../driver-api/parport-lowlevel.rst:853
msgid "If negative, an error code; otherwise the number of bytes transferred."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:828
msgid "parport_write, parport_negotiate"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:833
msgid "parport_write - write data to device"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:847
msgid ""
"Write data to device in current IEEE 1284 transfer mode.  This only works "
"for modes that support forward data transfer."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:858
msgid "parport_read, parport_negotiate"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:863
msgid "parport_open - register device for particular device number"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:882
msgid ""
"This is like parport_register_device but takes a device number instead of a "
"pointer to a struct parport."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:888
msgid ""
"See parport_register_device.  If no device is associated with devnum, NULL "
"is returned."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:894
msgid "parport_register_device"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:899
msgid "parport_close - unregister device for particular device number"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:913
msgid "This is the equivalent of parport_unregister_device for parport_open."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:918
msgid "parport_unregister_device, parport_open"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:923
msgid "parport_device_id - obtain IEEE 1284 Device ID"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:937
msgid "Obtains the IEEE 1284 Device ID associated with a given device."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:942
msgid ""
"If negative, an error code; otherwise, the number of bytes of buffer that "
"contain the device ID.  The format of the device ID is as follows::"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:948
msgid ""
"The first two bytes indicate the inclusive length of the entire Device ID, "
"and are in big-endian order.  The ID is a sequence of pairs of the form::"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:957
msgid "Many devices have ill-formed IEEE 1284 Device IDs."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:962
msgid "parport_find_class, parport_find_device"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:967
msgid "parport_device_coords - convert device number to device coordinates"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:982
msgid ""
"Convert between device number (zero-based) and device coordinates (port, "
"multiplexor, daisy chain address)."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:988
msgid ""
"Zero on success, in which case the coordinates are (``*parport``, ``*mux``, "
"``*daisy``)."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:994
msgid "parport_open, parport_device_id"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:999
msgid "parport_find_class - find a device by its class"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1030
msgid "Find a device by class.  The search starts from device number from+1."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1035
msgid ""
"The device number of the next device in that class, or -1 if no such device "
"exists."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1041
#: ../../../driver-api/parport-lowlevel.rst:1083
msgid "Example usage::"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1052
msgid "parport_find_device, parport_open, parport_device_id"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1057
msgid "parport_find_device - find a device by its class"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1071
msgid ""
"Find a device by vendor and model.  The search starts from device number "
"from+1."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1077
msgid ""
"The device number of the next device matching the specifications, or -1 if "
"no such device exists."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1094
msgid "parport_find_class, parport_open, parport_device_id"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1099
msgid "parport_set_timeout - set the inactivity timeout"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1113
msgid ""
"Set the inactivity timeout, in jiffies, for a registered device.  The "
"previous timeout is returned."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1119
msgid "The previous timeout, in jiffies."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1124
msgid ""
"Some of the port->ops functions for a parport may take time, owing to delays "
"at the peripheral.  After the peripheral has not responded for "
"``inactivity`` jiffies, a timeout will occur and the blocking function will "
"return."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1129
msgid ""
"A timeout of 0 jiffies is a special case: the function must do as much as it "
"can without blocking or leaving the hardware in an unknown state.  If port "
"operations are performed from within an interrupt handler, for instance, a "
"timeout of 0 jiffies should be used."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1134
msgid ""
"Once set for a registered device, the timeout will remain at the set value "
"until set again."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1140
msgid "port->ops->xxx_read/write_yyy"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1146
msgid "PORT FUNCTIONS"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1148
msgid ""
"The functions in the port->ops structure (struct parport_operations) are "
"provided by the low-level driver responsible for that port."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1152
msgid "port->ops->read_data - read the data register"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1170
msgid ""
"If port->modes contains the PARPORT_MODE_TRISTATE flag and the "
"PARPORT_CONTROL_DIRECTION bit in the control register is set, this returns "
"the value on the data pins.  If port->modes contains the "
"PARPORT_MODE_TRISTATE flag and the PARPORT_CONTROL_DIRECTION bit is not set, "
"the return value _may_ be the last value written to the data register.  "
"Otherwise the return value is undefined."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1180
msgid "write_data, read_status, write_control"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1185
msgid "port->ops->write_data - write the data register"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1203
msgid ""
"Writes to the data register.  May have side-effects (a STROBE pulse, for "
"instance)."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1209
msgid "read_data, read_status, write_control"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1214
msgid "port->ops->read_status - read the status register"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1232
msgid "Reads from the status register.  This is a bitmask:"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1234
msgid "PARPORT_STATUS_ERROR (printer fault, \"nFault\")"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1235
msgid "PARPORT_STATUS_SELECT (on-line, \"Select\")"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1236
msgid "PARPORT_STATUS_PAPEROUT (no paper, \"PError\")"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1237
msgid "PARPORT_STATUS_ACK (handshake, \"nAck\")"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1238
msgid "PARPORT_STATUS_BUSY (busy, \"Busy\")"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1240
msgid "There may be other bits set."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1245
msgid "read_data, write_data, write_control"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1250
msgid "port->ops->read_control - read the control register"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1268
msgid ""
"Returns the last value written to the control register (either from "
"write_control or frob_control).  No port access is performed."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1274
#: ../../../driver-api/parport-lowlevel.rst:1347
msgid "read_data, write_data, read_status, write_control"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1279
msgid "port->ops->write_control - write the control register"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1297
msgid "Writes to the control register. This is a bitmask::"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1311
msgid "read_data, write_data, read_status, frob_control"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1316
msgid "port->ops->frob_control - write control register bits"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1336
msgid ""
"This is equivalent to reading from the control register, masking out the "
"bits in mask, exclusive-or'ing with the bits in val, and writing the result "
"to the control register."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1340
msgid ""
"As some ports don't allow reads from the control port, a software copy of "
"its contents is maintained, so frob_control is in fact only one port access."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1352
msgid "port->ops->enable_irq - enable interrupt generation"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1370
msgid ""
"The parallel port hardware is instructed to generate interrupts at "
"appropriate moments, although those moments are architecture-specific.  For "
"the PC architecture, interrupts are commonly generated on the rising edge of "
"nAck."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1378
msgid "disable_irq"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1383
msgid "port->ops->disable_irq - disable interrupt generation"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1401
msgid ""
"The parallel port hardware is instructed not to generate interrupts. The "
"interrupt itself is not masked."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1407
msgid "enable_irq"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1412
msgid "port->ops->data_forward - enable data drivers"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1430
msgid ""
"Enables the data line drivers, for 8-bit host-to-peripheral communications."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1436
msgid "data_reverse"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1441
msgid "port->ops->data_reverse - tristate the buffer"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1459
msgid ""
"Places the data bus in a high impedance state, if port->modes has the "
"PARPORT_MODE_TRISTATE bit set."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1465
msgid "data_forward"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1470
msgid "port->ops->epp_write_data - write EPP data"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1489
msgid "Writes data in EPP mode, and returns the number of bytes written."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1491
#: ../../../driver-api/parport-lowlevel.rst:1529
#: ../../../driver-api/parport-lowlevel.rst:1567
#: ../../../driver-api/parport-lowlevel.rst:1607
msgid ""
"The ``flags`` parameter may be one or more of the following, bitwise-or'ed "
"together:"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1495
#: ../../../driver-api/parport-lowlevel.rst:1533
#: ../../../driver-api/parport-lowlevel.rst:1571
#: ../../../driver-api/parport-lowlevel.rst:1611
msgid "PARPORT_EPP_FAST"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1495
#: ../../../driver-api/parport-lowlevel.rst:1533
#: ../../../driver-api/parport-lowlevel.rst:1571
#: ../../../driver-api/parport-lowlevel.rst:1611
msgid ""
"Use fast transfers. Some chips provide 16-bit and 32-bit registers.  "
"However, if a transfer times out, the return value may be unreliable."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1503
msgid "epp_read_data, epp_write_addr, epp_read_addr"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1508
msgid "port->ops->epp_read_data - read EPP data"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1527
msgid "Reads data in EPP mode, and returns the number of bytes read."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1541
msgid "epp_write_data, epp_write_addr, epp_read_addr"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1546
msgid "port->ops->epp_write_addr - write EPP address"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1565
msgid "Writes EPP addresses (8 bits each), and returns the number written."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1576
#: ../../../driver-api/parport-lowlevel.rst:1616
msgid "(Does PARPORT_EPP_FAST make sense for this function?)"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1581
msgid "epp_write_data, epp_read_data, epp_read_addr"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1586
msgid "port->ops->epp_read_addr - read EPP address"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1605
msgid "Reads EPP addresses (8 bits each), and returns the number read."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1621
msgid "epp_write_data, epp_read_data, epp_write_addr"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1626
msgid "port->ops->ecp_write_data - write a block of ECP data"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1645
msgid "Writes a block of ECP data.  The ``flags`` parameter is ignored."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1650
#: ../../../driver-api/parport-lowlevel.rst:1719
#: ../../../driver-api/parport-lowlevel.rst:1827
msgid "The number of bytes written."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1655
msgid "ecp_read_data, ecp_write_addr"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1660
msgid "port->ops->ecp_read_data - read a block of ECP data"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1679
msgid "Reads a block of ECP data.  The ``flags`` parameter is ignored."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1684
msgid ""
"The number of bytes read.  NB. There may be more unread data in a FIFO.  Is "
"there a way of stunning the FIFO to prevent this?"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1690
msgid "ecp_write_block, ecp_write_addr"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1695
msgid "port->ops->ecp_write_addr - write a block of ECP addresses"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1714
msgid "Writes a block of ECP addresses.  The ``flags`` parameter is ignored."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1724
msgid ""
"This may use a FIFO, and if so shall not return until the FIFO is empty."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1729
msgid "ecp_read_data, ecp_write_data"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1734
msgid "port->ops->nibble_read_data - read a block of data in nibble mode"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1753
msgid ""
"Reads a block of data in nibble mode.  The ``flags`` parameter is ignored."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1758
msgid "The number of whole bytes read."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1763
msgid "byte_read_data, compat_write_data"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1768
msgid "port->ops->byte_read_data - read a block of data in byte mode"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1787
msgid ""
"Reads a block of data in byte mode.  The ``flags`` parameter is ignored."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1792
msgid "The number of bytes read."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1797
msgid "nibble_read_data, compat_write_data"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1802
msgid ""
"port->ops->compat_write_data - write a block of data in compatibility mode"
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1821
msgid ""
"Writes a block of data in compatibility mode.  The ``flags`` parameter is "
"ignored."
msgstr ""

#: ../../../driver-api/parport-lowlevel.rst:1832
msgid "nibble_read_data, byte_read_data"
msgstr ""
