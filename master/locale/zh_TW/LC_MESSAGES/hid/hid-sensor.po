# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../hid/hid-sensor.rst:3
msgid "HID Sensors Framework"
msgstr ""

#: ../../../hid/hid-sensor.rst:4
msgid ""
"HID sensor framework provides necessary interfaces to implement sensor "
"drivers, which are connected to a sensor hub. The sensor hub is a HID device "
"and it provides a report descriptor conforming to HID 1.12 sensor usage "
"tables."
msgstr ""

#: ../../../hid/hid-sensor.rst:8
msgid ""
"Description from the HID 1.12 \"HID Sensor Usages\" specification: "
"\"Standardization of HID usages for sensors would allow (but not require) "
"sensor hardware vendors to provide a consistent Plug And Play interface at "
"the USB boundary, thereby enabling some operating systems to incorporate "
"common device drivers that could be reused between vendors, alleviating any "
"need for the vendors to provide the drivers themselves.\""
msgstr ""

#: ../../../hid/hid-sensor.rst:15
msgid ""
"This specification describes many usage IDs, which describe the type of "
"sensor and also the individual data fields. Each sensor can have variable "
"number of data fields. The length and order is specified in the report "
"descriptor. For example a part of report descriptor can look like::"
msgstr ""

#: ../../../hid/hid-sensor.rst:35
msgid ""
"The report is indicating \"sensor page (0x20)\" contains an accelerometer-3D "
"(0x73). This accelerometer-3D has some fields. Here for example field 2 is "
"motion intensity (0x045f) with a logical minimum value of -32767 and logical "
"maximum of 32767. The order of fields and length of each field is important "
"as the input event raw data will use this format."
msgstr ""

#: ../../../hid/hid-sensor.rst:43
msgid "Implementation"
msgstr ""

#: ../../../hid/hid-sensor.rst:45
msgid ""
"This specification defines many different types of sensors with different "
"sets of data fields. It is difficult to have a common input event to user "
"space applications, for different sensors. For example an accelerometer can "
"send X,Y and Z data, whereas an ambient light sensor can send illumination "
"data. So the implementation has two parts:"
msgstr ""

#: ../../../hid/hid-sensor.rst:51
msgid "Core HID driver"
msgstr ""

#: ../../../hid/hid-sensor.rst:52 ../../../hid/hid-sensor.rst:73
msgid "Individual sensor processing part (sensor drivers)"
msgstr ""

#: ../../../hid/hid-sensor.rst:55
msgid "Core driver"
msgstr ""

#: ../../../hid/hid-sensor.rst:56
msgid ""
"The core driver (hid-sensor-hub) registers as a HID driver. It parses report "
"descriptors and identifies all the sensors present. It adds an MFD device "
"with name HID-SENSOR-xxxx (where xxxx is usage id from the specification)."
msgstr ""

#: ../../../hid/hid-sensor.rst:60
msgid "For example:"
msgstr ""

#: ../../../hid/hid-sensor.rst:62
msgid "HID-SENSOR-200073 is registered for an Accelerometer 3D driver."
msgstr ""

#: ../../../hid/hid-sensor.rst:64
msgid ""
"So if any driver with this name is inserted, then the probe routine for that "
"function will be called. So an accelerometer processing driver can register "
"with this name and will be probed if there is an accelerometer-3D detected."
msgstr ""

#: ../../../hid/hid-sensor.rst:68
msgid ""
"The core driver provides a set of APIs which can be used by the processing "
"drivers to register and get events for that usage id. Also it provides "
"parsing functions, which get and set each input/feature/output report."
msgstr ""

#: ../../../hid/hid-sensor.rst:75
msgid ""
"The processing driver will use an interface provided by the core driver to "
"parse the report and get the indexes of the fields and also can get events. "
"This driver can use IIO interface to use the standard ABI defined for a type "
"of sensor."
msgstr ""

#: ../../../hid/hid-sensor.rst:81
msgid "Core driver Interface"
msgstr ""

#: ../../../hid/hid-sensor.rst:83
msgid "Callback structure::"
msgstr ""

#: ../../../hid/hid-sensor.rst:92
msgid "Registration functions::"
msgstr ""

#: ../../../hid/hid-sensor.rst:98
msgid ""
"Registers callbacks for a usage id. The callback functions are not allowed "
"to sleep::"
msgstr ""

#: ../../../hid/hid-sensor.rst:105
msgid "Removes callbacks for a usage id."
msgstr ""

#: ../../../hid/hid-sensor.rst:108
msgid "Parsing function::"
msgstr ""

#: ../../../hid/hid-sensor.rst:115
msgid ""
"A processing driver can look for some field of interest and check if it "
"exists in a report descriptor. If it exists it will store necessary "
"information so that fields can be set or get individually. These indexes "
"avoid searching every time and getting field index to get or set."
msgstr ""

#: ../../../hid/hid-sensor.rst:121
msgid "Set Feature report::"
msgstr ""

#: ../../../hid/hid-sensor.rst:126
msgid ""
"This interface is used to set a value for a field in feature report. For "
"example if there is a field report_interval, which is parsed by a call to "
"sensor_hub_input_get_attribute_info before, then it can directly set that "
"individual field::"
msgstr ""

#: ../../../hid/hid-sensor.rst:135
msgid ""
"This interface is used to get a value for a field in input report. For "
"example if there is a field report_interval, which is parsed by a call to "
"sensor_hub_input_get_attribute_info before, then it can directly get that "
"individual field value::"
msgstr ""

#: ../../../hid/hid-sensor.rst:145
msgid ""
"This is used to get a particular field value through input reports. For "
"example accelerometer wants to poll X axis value, then it can call this "
"function with the usage id of X axis. HID sensors can provide events, so "
"this is not necessary to poll for any field. If there is some new sample, "
"the core driver will call registered callback function to process the sample."
msgstr ""

#: ../../../hid/hid-sensor.rst:155
msgid "HID Custom and generic Sensors"
msgstr ""

#: ../../../hid/hid-sensor.rst:158
msgid ""
"HID Sensor specification defines two special sensor usage types. Since they "
"don't represent a standard sensor, it is not possible to define using Linux "
"IIO type interfaces. The purpose of these sensors is to extend the "
"functionality or provide a way to obfuscate the data being communicated by a "
"sensor. Without knowing the mapping between the data and its encapsulated "
"form, it is difficult for an application/driver to determine what data is "
"being communicated by the sensor. This allows some differentiating use "
"cases, where vendor can provide applications. Some common use cases are "
"debug other sensors or to provide some events like keyboard attached/"
"detached or lid open/close."
msgstr ""

#: ../../../hid/hid-sensor.rst:169
msgid ""
"To allow application to utilize these sensors, here they are exported using "
"sysfs attribute groups, attributes and misc device interface."
msgstr ""

#: ../../../hid/hid-sensor.rst:172
msgid "An example of this representation on sysfs::"
msgstr ""

#: ../../../hid/hid-sensor.rst:210
msgid ""
"Here there is a custom sensor with four fields: two feature and two inputs. "
"Each field is represented by a set of attributes. All fields except the "
"\"value\" are read only. The value field is a read-write field."
msgstr ""

#: ../../../hid/hid-sensor.rst:214
msgid "Example::"
msgstr ""

#: ../../../hid/hid-sensor.rst:226
msgid "How to enable such sensor?"
msgstr ""

#: ../../../hid/hid-sensor.rst:228
msgid ""
"By default sensor can be power gated. To enable sysfs attribute \"enable\" "
"can be used::"
msgstr ""

#: ../../../hid/hid-sensor.rst:233
msgid ""
"Once enabled and powered on, sensor can report value using HID reports. "
"These reports are pushed using misc device interface in a FIFO order::"
msgstr ""

#: ../../../hid/hid-sensor.rst:240
msgid ""
"Each report can be of variable length preceded by a header. This header "
"consists of a 32-bit usage id, 64-bit time stamp and 32-bit length field of "
"raw data."
msgstr ""
