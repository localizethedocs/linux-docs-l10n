# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../arch/x86/topology.rst:5
msgid "x86 Topology"
msgstr ""

#: ../../../arch/x86/topology.rst:7
msgid ""
"This documents and clarifies the main aspects of x86 topology modelling and "
"representation in the kernel. Update/change when doing changes to the "
"respective code."
msgstr ""

#: ../../../arch/x86/topology.rst:11
msgid ""
"The architecture-agnostic topology definitions are in Documentation/admin-"
"guide/cputopology.rst. This file holds x86-specific differences/specialities "
"which must not necessarily apply to the generic definitions. Thus, the way "
"to read up on Linux topology on x86 is to start with the generic one and "
"look at this one in parallel for the x86 specifics."
msgstr ""

#: ../../../arch/x86/topology.rst:17
msgid ""
"Needless to say, code should use the generic functions - this file is *only* "
"here to *document* the inner workings of x86 topology."
msgstr ""

#: ../../../arch/x86/topology.rst:20
msgid ""
"Started by Thomas Gleixner <tglx@linutronix.de> and Borislav Petkov "
"<bp@alien8.de>."
msgstr ""

#: ../../../arch/x86/topology.rst:22
msgid ""
"The main aim of the topology facilities is to present adequate interfaces to "
"code which needs to know/query/use the structure of the running system wrt "
"threads, cores, packages, etc."
msgstr ""

#: ../../../arch/x86/topology.rst:26
msgid ""
"The kernel does not care about the concept of physical sockets because a "
"socket has no relevance to software. It's an electromechanical component. In "
"the past a socket always contained a single package (see below), but with "
"the advent of Multi Chip Modules (MCM) a socket can hold more than one "
"package. So there might be still references to sockets in the code, but they "
"are of historical nature and should be cleaned up."
msgstr ""

#: ../../../arch/x86/topology.rst:33
msgid "The topology of a system is described in the units of:"
msgstr ""

#: ../../../arch/x86/topology.rst:35
msgid "packages"
msgstr ""

#: ../../../arch/x86/topology.rst:36
msgid "cores"
msgstr ""

#: ../../../arch/x86/topology.rst:37
msgid "threads"
msgstr ""

#: ../../../arch/x86/topology.rst:40
msgid "Package"
msgstr ""

#: ../../../arch/x86/topology.rst:41
msgid ""
"Packages contain a number of cores plus shared resources, e.g. DRAM "
"controller, shared caches etc."
msgstr ""

#: ../../../arch/x86/topology.rst:44
msgid "Modern systems may also use the term 'Die' for package."
msgstr ""

#: ../../../arch/x86/topology.rst:46
msgid "AMD nomenclature for package is 'Node'."
msgstr ""

#: ../../../arch/x86/topology.rst:48
msgid "Package-related topology information in the kernel:"
msgstr ""

#: ../../../arch/x86/topology.rst:50
msgid "topology_num_threads_per_package()"
msgstr ""

#: ../../../arch/x86/topology.rst:52
msgid "The number of threads in a package."
msgstr ""

#: ../../../arch/x86/topology.rst:54
msgid "topology_num_cores_per_package()"
msgstr ""

#: ../../../arch/x86/topology.rst:56
msgid "The number of cores in a package."
msgstr ""

#: ../../../arch/x86/topology.rst:58
msgid "topology_max_dies_per_package()"
msgstr ""

#: ../../../arch/x86/topology.rst:60
msgid "The maximum number of dies in a package."
msgstr ""

#: ../../../arch/x86/topology.rst:62
msgid "cpuinfo_x86.topo.die_id:"
msgstr ""

#: ../../../arch/x86/topology.rst:64
msgid "The physical ID of the die."
msgstr ""

#: ../../../arch/x86/topology.rst:66
msgid "cpuinfo_x86.topo.pkg_id:"
msgstr ""

#: ../../../arch/x86/topology.rst:68
msgid ""
"The physical ID of the package. This information is retrieved via CPUID and "
"deduced from the APIC IDs of the cores in the package."
msgstr ""

#: ../../../arch/x86/topology.rst:71
msgid ""
"Modern systems use this value for the socket. There may be multiple packages "
"within a socket. This value may differ from topo.die_id."
msgstr ""

#: ../../../arch/x86/topology.rst:74
msgid "cpuinfo_x86.topo.logical_pkg_id:"
msgstr ""

#: ../../../arch/x86/topology.rst:76
msgid ""
"The logical ID of the package. As we do not trust BIOSes to enumerate the "
"packages in a consistent way, we introduced the concept of logical package "
"ID so we can sanely calculate the number of maximum possible packages in the "
"system and have the packages enumerated linearly."
msgstr ""

#: ../../../arch/x86/topology.rst:81
msgid "topology_max_packages():"
msgstr ""

#: ../../../arch/x86/topology.rst:83
msgid ""
"The maximum possible number of packages in the system. Helpful for per "
"package facilities to preallocate per package information."
msgstr ""

#: ../../../arch/x86/topology.rst:86
msgid "cpuinfo_x86.topo.llc_id:"
msgstr ""

#: ../../../arch/x86/topology.rst:88
msgid ""
"On Intel, the first APIC ID of the list of CPUs sharing the Last Level Cache"
msgstr ""

#: ../../../arch/x86/topology.rst:91
msgid ""
"On AMD, the Node ID or Core Complex ID containing the Last Level Cache. In "
"general, it is a number identifying an LLC uniquely on the system."
msgstr ""

#: ../../../arch/x86/topology.rst:96
msgid "Cores"
msgstr ""

#: ../../../arch/x86/topology.rst:97
msgid ""
"A core consists of 1 or more threads. It does not matter whether the threads "
"are SMT- or CMT-type threads."
msgstr ""

#: ../../../arch/x86/topology.rst:100
msgid ""
"AMDs nomenclature for a CMT core is \"Compute Unit\". The kernel always uses "
"\"core\"."
msgstr ""

#: ../../../arch/x86/topology.rst:104
msgid "Threads"
msgstr ""

#: ../../../arch/x86/topology.rst:105
msgid ""
"A thread is a single scheduling unit. It's the equivalent to a logical Linux "
"CPU."
msgstr ""

#: ../../../arch/x86/topology.rst:108
msgid ""
"AMDs nomenclature for CMT threads is \"Compute Unit Core\". The kernel "
"always uses \"thread\"."
msgstr ""

#: ../../../arch/x86/topology.rst:111
msgid "Thread-related topology information in the kernel:"
msgstr ""

#: ../../../arch/x86/topology.rst:113
msgid "topology_core_cpumask():"
msgstr ""

#: ../../../arch/x86/topology.rst:115
msgid ""
"The cpumask contains all online threads in the package to which a thread "
"belongs."
msgstr ""

#: ../../../arch/x86/topology.rst:118
msgid ""
"The number of online threads is also printed in /proc/cpuinfo \"siblings.\""
msgstr ""

#: ../../../arch/x86/topology.rst:120
msgid "topology_sibling_cpumask():"
msgstr ""

#: ../../../arch/x86/topology.rst:122
msgid ""
"The cpumask contains all online threads in the core to which a thread "
"belongs."
msgstr ""

#: ../../../arch/x86/topology.rst:125
msgid "topology_logical_package_id():"
msgstr ""

#: ../../../arch/x86/topology.rst:127
msgid "The logical package ID to which a thread belongs."
msgstr ""

#: ../../../arch/x86/topology.rst:129
msgid "topology_physical_package_id():"
msgstr ""

#: ../../../arch/x86/topology.rst:131
msgid "The physical package ID to which a thread belongs."
msgstr ""

#: ../../../arch/x86/topology.rst:133
msgid "topology_core_id();"
msgstr ""

#: ../../../arch/x86/topology.rst:135
msgid ""
"The ID of the core to which a thread belongs. It is also printed in /proc/"
"cpuinfo \"core_id.\""
msgstr ""

#: ../../../arch/x86/topology.rst:138
msgid "topology_logical_core_id();"
msgstr ""

#: ../../../arch/x86/topology.rst:140
msgid "The logical core ID to which a thread belongs."
msgstr ""

#: ../../../arch/x86/topology.rst:145
msgid "System topology examples"
msgstr ""

#: ../../../arch/x86/topology.rst:148
msgid ""
"The alternative Linux CPU enumeration depends on how the BIOS enumerates the "
"threads. Many BIOSes enumerate all threads 0 first and then all threads 1. "
"That has the \"advantage\" that the logical Linux CPU numbers of threads 0 "
"stay the same whether threads are enabled or not. That's merely an "
"implementation detail and has no practical impact."
msgstr ""

#: ../../../arch/x86/topology.rst:154
msgid "Single Package, Single Core::"
msgstr ""

#: ../../../arch/x86/topology.rst:158
msgid "Single Package, Dual Core"
msgstr ""

#: ../../../arch/x86/topology.rst:160 ../../../arch/x86/topology.rst:188
msgid "One thread per core::"
msgstr ""

#: ../../../arch/x86/topology.rst:165 ../../../arch/x86/topology.rst:196
msgid "Two threads per core::"
msgstr ""

#: ../../../arch/x86/topology.rst:172 ../../../arch/x86/topology.rst:208
msgid "Alternative enumeration::"
msgstr ""

#: ../../../arch/x86/topology.rst:179 ../../../arch/x86/topology.rst:220
msgid "AMD nomenclature for CMT systems::"
msgstr ""

#: ../../../arch/x86/topology.rst:186
msgid "Dual Package, Dual Core"
msgstr ""
