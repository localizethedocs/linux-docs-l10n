# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../arch/sparc/adi.rst:3
msgid "Application Data Integrity (ADI)"
msgstr ""

#: ../../../arch/sparc/adi.rst:5
msgid ""
"SPARC M7 processor adds the Application Data Integrity (ADI) feature. ADI "
"allows a task to set version tags on any subset of its address space. Once "
"ADI is enabled and version tags are set for ranges of address space of a "
"task, the processor will compare the tag in pointers to memory in these "
"ranges to the version set by the application previously. Access to memory is "
"granted only if the tag in given pointer matches the tag set by the "
"application. In case of mismatch, processor raises an exception."
msgstr ""

#: ../../../arch/sparc/adi.rst:14
msgid "Following steps must be taken by a task to enable ADI fully:"
msgstr ""

#: ../../../arch/sparc/adi.rst:16
msgid ""
"Set the user mode PSTATE.mcde bit. This acts as master switch for the task's "
"entire address space to enable/disable ADI for the task."
msgstr ""

#: ../../../arch/sparc/adi.rst:19
msgid ""
"Set TTE.mcd bit on any TLB entries that correspond to the range of addresses "
"ADI is being enabled on. MMU checks the version tag only on the pages that "
"have TTE.mcd bit set."
msgstr ""

#: ../../../arch/sparc/adi.rst:23
msgid ""
"Set the version tag for virtual addresses using stxa instruction and one of "
"the MCD specific ASIs. Each stxa instruction sets the given tag for one ADI "
"block size number of bytes. This step must be repeated for entire page to "
"set tags for entire page."
msgstr ""

#: ../../../arch/sparc/adi.rst:28
msgid ""
"ADI block size for the platform is provided by the hypervisor to kernel in "
"machine description tables. Hypervisor also provides the number of top bits "
"in the virtual address that specify the version tag.  Once version tag has "
"been set for a memory location, the tag is stored in the physical memory and "
"the same tag must be present in the ADI version tag bits of the virtual "
"address being presented to the MMU. For example on SPARC M7 processor, MMU "
"uses bits 63-60 for version tags and ADI block size is same as cacheline "
"size which is 64 bytes. A task that sets ADI version to, say 10, on a range "
"of memory, must access that memory using virtual addresses that contain 0xa "
"in bits 63-60."
msgstr ""

#: ../../../arch/sparc/adi.rst:39
msgid ""
"ADI is enabled on a set of pages using mprotect() with PROT_ADI flag. When "
"ADI is enabled on a set of pages by a task for the first time, kernel sets "
"the PSTATE.mcde bit for the task. Version tags for memory addresses are set "
"with an stxa instruction on the addresses using ASI_MCD_PRIMARY or "
"ASI_MCD_ST_BLKINIT_PRIMARY. ADI block size is provided by the hypervisor to "
"the kernel.  Kernel returns the value of ADI block size to userspace using "
"auxiliary vector along with other ADI info. Following auxiliary vectors are "
"provided by the kernel:"
msgstr ""

#: ../../../arch/sparc/adi.rst:49
msgid "AT_ADI_BLKSZ"
msgstr ""

#: ../../../arch/sparc/adi.rst:49
msgid ""
"ADI block size. This is the granularity and alignment, in bytes, of ADI "
"versioning."
msgstr ""

#: ../../../arch/sparc/adi.rst:51
msgid "AT_ADI_NBITS"
msgstr ""

#: ../../../arch/sparc/adi.rst:51
msgid "Number of ADI version bits in the VA"
msgstr ""

#: ../../../arch/sparc/adi.rst:56
msgid "IMPORTANT NOTES"
msgstr ""

#: ../../../arch/sparc/adi.rst:58
msgid ""
"Version tag values of 0x0 and 0xf are reserved. These values match any tag "
"in virtual address and never generate a mismatch exception."
msgstr ""

#: ../../../arch/sparc/adi.rst:61
msgid ""
"Version tags are set on virtual addresses from userspace even though tags "
"are stored in physical memory. Tags are set on a physical page after it has "
"been allocated to a task and a pte has been created for it."
msgstr ""

#: ../../../arch/sparc/adi.rst:66
msgid ""
"When a task frees a memory page it had set version tags on, the page goes "
"back to free page pool. When this page is re-allocated to a task, kernel "
"clears the page using block initialization ASI which clears the version tags "
"as well for the page. If a page allocated to a task is freed and allocated "
"back to the same task, old version tags set by the task on that page will no "
"longer be present."
msgstr ""

#: ../../../arch/sparc/adi.rst:73
msgid "ADI tag mismatches are not detected for non-faulting loads."
msgstr ""

#: ../../../arch/sparc/adi.rst:75
msgid ""
"Kernel does not set any tags for user pages and it is entirely a task's "
"responsibility to set any version tags. Kernel does ensure the version tags "
"are preserved if a page is swapped out to the disk and swapped back in. It "
"also preserves that version tags if a page is migrated."
msgstr ""

#: ../../../arch/sparc/adi.rst:81
msgid ""
"ADI works for any size pages. A userspace task need not be aware of page "
"size when using ADI. It can simply select a virtual address range, enable "
"ADI on the range using mprotect() and set version tags for the entire range. "
"mprotect() ensures range is aligned to page size and is a multiple of page "
"size."
msgstr ""

#: ../../../arch/sparc/adi.rst:87
msgid ""
"ADI tags can only be set on writable memory. For example, ADI tags can not "
"be set on read-only mappings."
msgstr ""

#: ../../../arch/sparc/adi.rst:93
msgid "ADI related traps"
msgstr ""

#: ../../../arch/sparc/adi.rst:95
msgid "With ADI enabled, following new traps may occur:"
msgstr ""

#: ../../../arch/sparc/adi.rst:98
msgid "Disrupting memory corruption"
msgstr ""

#: ../../../arch/sparc/adi.rst:100
msgid ""
"When a store accesses a memory location that has TTE.mcd=1, the task is "
"running with ADI enabled (PSTATE.mcde=1), and the ADI tag in the address "
"used (bits 63:60) does not match the tag set on the corresponding cacheline, "
"a memory corruption trap occurs. By default, it is a disrupting trap and is "
"sent to the hypervisor first. Hypervisor creates a sun4v error report and "
"sends a resumable error (TT=0x7e) trap to the kernel. The kernel sends a "
"SIGSEGV to the task that resulted in this trap with the following info::"
msgstr ""

#: ../../../arch/sparc/adi.rst:118
msgid "Precise memory corruption"
msgstr ""

#: ../../../arch/sparc/adi.rst:120
msgid ""
"When a store accesses a memory location that has TTE.mcd=1, the task is "
"running with ADI enabled (PSTATE.mcde=1), and the ADI tag in the address "
"used (bits 63:60) does not match the tag set on the corresponding cacheline, "
"a memory corruption trap occurs. If MCD precise exception is enabled "
"(MCDPERR=1), a precise exception is sent to the kernel with TT=0x1a. The "
"kernel sends a SIGSEGV to the task that resulted in this trap with the "
"following info::"
msgstr ""

#: ../../../arch/sparc/adi.rst:135
msgid "NOTE:"
msgstr ""

#: ../../../arch/sparc/adi.rst:136
msgid "ADI tag mismatch on a load always results in precise trap."
msgstr ""

#: ../../../arch/sparc/adi.rst:140
msgid "MCD disabled"
msgstr ""

#: ../../../arch/sparc/adi.rst:142
msgid ""
"When a task has not enabled ADI and attempts to set ADI version on a memory "
"address, processor sends an MCD disabled trap. This trap is handled by "
"hypervisor first and the hypervisor vectors this trap through to the kernel "
"as Data Access Exception trap with fault type set to 0xa (invalid ASI). When "
"this occurs, the kernel sends the task SIGSEGV signal with following info::"
msgstr ""

#: ../../../arch/sparc/adi.rst:157
msgid "Sample program to use ADI"
msgstr ""

#: ../../../arch/sparc/adi.rst:159
msgid ""
"Following sample program is meant to illustrate how to use the ADI "
"functionality::"
msgstr ""
