# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../gpu/xe/xe_pcode.rst:5
msgid "Pcode"
msgstr ""

#: ../../../gpu/xe/xe_pcode:7: drivers/gpu/drm/xe/xe_pcode.c:20
msgid ""
"Xe PCODE is the component responsible for interfacing with the PCODE "
"firmware. It shall provide a very simple ABI to other Xe components, but be "
"the single and consolidated place that will communicate with PCODE. All read "
"and write operations to PCODE will be internal and private to this component."
msgstr ""

#: ../../../gpu/xe/xe_pcode:7: drivers/gpu/drm/xe/xe_pcode.c:26
msgid "What's next: - PCODE hw metrics - PCODE for display operations"
msgstr ""

#: ../../../gpu/xe/xe_pcode.rst:11
msgid "Internal API"
msgstr ""

#: ../../../gpu/xe/xe_pcode:13: drivers/gpu/drm/xe/xe_pcode.c:163
msgid "send PCODE request until acknowledgment"
msgstr ""

#: ../../../gpu/xe/xe_pcode:13: drivers/gpu/drm/xe/xe_pcode.c:167
#: drivers/gpu/drm/xe/xe_pcode.c:222 drivers/gpu/drm/xe/xe_pcode.c:274
#: drivers/gpu/drm/xe/xe_pcode.c:318 drivers/gpu/drm/xe/xe_pcode.c:330
msgid "**Parameters**"
msgstr ""

#: ../../../gpu/xe/xe_pcode:13: drivers/gpu/drm/xe/xe_pcode.c:169
#: drivers/gpu/drm/xe/xe_pcode.c:224 drivers/gpu/drm/xe/xe_pcode.c:320
msgid "``struct xe_tile *tile``"
msgstr ""

#: ../../../gpu/xe/xe_pcode:13: drivers/gpu/drm/xe/xe_pcode.c:164
msgid "tile"
msgstr ""

#: ../../../gpu/xe/xe_pcode:13: drivers/gpu/drm/xe/xe_pcode.c:166
msgid "``u32 mbox``"
msgstr ""

#: ../../../gpu/xe/xe_pcode:13: drivers/gpu/drm/xe/xe_pcode.c:165
msgid "PCODE mailbox ID the request is targeted for"
msgstr ""

#: ../../../gpu/xe/xe_pcode:13: drivers/gpu/drm/xe/xe_pcode.c:167
msgid "``u32 request``"
msgstr ""

#: ../../../gpu/xe/xe_pcode:13: drivers/gpu/drm/xe/xe_pcode.c:166
msgid "request ID"
msgstr ""

#: ../../../gpu/xe/xe_pcode:13: drivers/gpu/drm/xe/xe_pcode.c:168
msgid "``u32 reply_mask``"
msgstr ""

#: ../../../gpu/xe/xe_pcode:13: drivers/gpu/drm/xe/xe_pcode.c:167
msgid "mask used to check for request acknowledgment"
msgstr ""

#: ../../../gpu/xe/xe_pcode:13: drivers/gpu/drm/xe/xe_pcode.c:169
msgid "``u32 reply``"
msgstr ""

#: ../../../gpu/xe/xe_pcode:13: drivers/gpu/drm/xe/xe_pcode.c:168
msgid "value used to check for request acknowledgment"
msgstr ""

#: ../../../gpu/xe/xe_pcode:13: drivers/gpu/drm/xe/xe_pcode.c:170
msgid "``int timeout_base_ms``"
msgstr ""

#: ../../../gpu/xe/xe_pcode:13: drivers/gpu/drm/xe/xe_pcode.c:169
msgid "timeout for polling with preemption enabled"
msgstr ""

#: ../../../gpu/xe/xe_pcode:13: drivers/gpu/drm/xe/xe_pcode.c:171
#: drivers/gpu/drm/xe/xe_pcode.c:223 drivers/gpu/drm/xe/xe_pcode.c:274
#: drivers/gpu/drm/xe/xe_pcode.c:317 drivers/gpu/drm/xe/xe_pcode.c:329
msgid "**Description**"
msgstr ""

#: ../../../gpu/xe/xe_pcode:13: drivers/gpu/drm/xe/xe_pcode.c:170
msgid ""
"Keep resending the **request** to **mbox** until PCODE acknowledges it, "
"PCODE reports an error or an overall timeout of **timeout_base_ms**+50 ms "
"expires. The request is acknowledged once the PCODE reply dword equals "
"**reply** after applying **reply_mask**. Polling is first attempted with "
"preemption enabled for **timeout_base_ms** and if this times out for another "
"50 ms with preemption disabled."
msgstr ""

#: ../../../gpu/xe/xe_pcode:13: drivers/gpu/drm/xe/xe_pcode.c:177
msgid ""
"Returns 0 on success, ``-ETIMEDOUT`` in case of a timeout, <0 in case of "
"some other error as reported by PCODE."
msgstr ""

#: ../../../gpu/xe/xe_pcode:13: drivers/gpu/drm/xe/xe_pcode.c:218
msgid "Initialize PCODE's QOS frequency table"
msgstr ""

#: ../../../gpu/xe/xe_pcode:13: drivers/gpu/drm/xe/xe_pcode.c:219
#: drivers/gpu/drm/xe/xe_pcode.c:315
msgid "tile instance"
msgstr ""

#: ../../../gpu/xe/xe_pcode:13: drivers/gpu/drm/xe/xe_pcode.c:221
msgid "``u32 min_gt_freq``"
msgstr ""

#: ../../../gpu/xe/xe_pcode:13: drivers/gpu/drm/xe/xe_pcode.c:220
msgid "Minimal (RPn) GT frequency in units of 50MHz."
msgstr ""

#: ../../../gpu/xe/xe_pcode:13: drivers/gpu/drm/xe/xe_pcode.c:222
msgid "``u32 max_gt_freq``"
msgstr ""

#: ../../../gpu/xe/xe_pcode:13: drivers/gpu/drm/xe/xe_pcode.c:221
msgid "Maximal (RP0) GT frequency in units of 50MHz."
msgstr ""

#: ../../../gpu/xe/xe_pcode:13: drivers/gpu/drm/xe/xe_pcode.c:222
msgid ""
"This function initialize PCODE's QOS frequency table for a proper minimal "
"frequency/power steering decision, depending on the current requested GT "
"frequency. For older platforms this was a more complete table including the "
"IA freq. However for the latest platforms this table become a simple 1-1 "
"Ring vs GT frequency. Even though, without setting it, PCODE might not take "
"the right decisions for some memory frequencies and affect latency."
msgstr ""

#: ../../../gpu/xe/xe_pcode:13: drivers/gpu/drm/xe/xe_pcode.c:229
msgid ""
"It returns 0 on success, and -ERROR number on failure, -EINVAL if max "
"frequency is higher then the minimal, and other errors directly translated "
"from the PCODE Error returns: - -ENXIO: \"Illegal Command\" - -ETIMEDOUT: "
"\"Timed out\" - -EINVAL: \"Illegal Data\" - -ENXIO, \"Illegal Subcommand\" - "
"-EBUSY: \"PCODE Locked\" - -EOVERFLOW, \"GT ratio out of range\" - -EACCES, "
"\"PCODE Rejected\" - -EPROTO, \"Unknown\""
msgstr ""

#: ../../../gpu/xe/xe_pcode:13: drivers/gpu/drm/xe/xe_pcode.c:270
msgid "Ensure PCODE is initialized"
msgstr ""

#: ../../../gpu/xe/xe_pcode:13: drivers/gpu/drm/xe/xe_pcode.c:276
#: drivers/gpu/drm/xe/xe_pcode.c:332
msgid "``struct xe_device *xe``"
msgstr ""

#: ../../../gpu/xe/xe_pcode:13: drivers/gpu/drm/xe/xe_pcode.c:271
#: drivers/gpu/drm/xe/xe_pcode.c:327
msgid "xe instance"
msgstr ""

#: ../../../gpu/xe/xe_pcode:13: drivers/gpu/drm/xe/xe_pcode.c:273
msgid "``bool locked``"
msgstr ""

#: ../../../gpu/xe/xe_pcode:13: drivers/gpu/drm/xe/xe_pcode.c:272
msgid "true if lock held, false otherwise"
msgstr ""

#: ../../../gpu/xe/xe_pcode:13: drivers/gpu/drm/xe/xe_pcode.c:273
msgid ""
"PCODE init mailbox is polled only on root gt of root tile as the root tile "
"provides the initialization is complete only after all the tiles have "
"completed the initialization. Called only on early probe without locks and "
"with locks in resume path."
msgstr ""

#: ../../../gpu/xe/xe_pcode:13: drivers/gpu/drm/xe/xe_pcode.c:279
msgid "Returns 0 on success, and -error number on failure."
msgstr ""

#: ../../../gpu/xe/xe_pcode:13: drivers/gpu/drm/xe/xe_pcode.c:314
msgid "initialize components of PCODE"
msgstr ""

#: ../../../gpu/xe/xe_pcode:13: drivers/gpu/drm/xe/xe_pcode.c:316
msgid ""
"This function initializes the xe_pcode component. To be called once only "
"during probe."
msgstr ""

#: ../../../gpu/xe/xe_pcode:13: drivers/gpu/drm/xe/xe_pcode.c:326
msgid "initializes PCODE"
msgstr ""

#: ../../../gpu/xe/xe_pcode:13: drivers/gpu/drm/xe/xe_pcode.c:328
msgid ""
"This function checks the initialization status of PCODE To be called once "
"only during early probe without locks."
msgstr ""

#: ../../../gpu/xe/xe_pcode:13: drivers/gpu/drm/xe/xe_pcode.c:331
msgid "Returns 0 on success, error code otherwise"
msgstr ""

#: ../../../gpu/xe/xe_pcode.rst:18
msgid "Boot Survivability"
msgstr ""

#: ../../../gpu/xe/xe_pcode:20: drivers/gpu/drm/xe/xe_survivability_mode.c:25
msgid ""
"Boot Survivability is a software based workflow for recovering a system in a "
"failed boot state Here system recoverability is concerned with recovering "
"the firmware responsible for boot."
msgstr ""

#: ../../../gpu/xe/xe_pcode:20: drivers/gpu/drm/xe/xe_survivability_mode.c:28
msgid ""
"This is implemented by loading the driver with bare minimum (no drm card) to "
"allow the firmware to be flashed through mei and collect telemetry. The "
"driver's probe flow is modified such that it enters survivability mode when "
"pcode initialization is incomplete and boot status denotes a failure."
msgstr ""

#: ../../../gpu/xe/xe_pcode:20: drivers/gpu/drm/xe/xe_survivability_mode.c:33
msgid ""
"Survivability mode can also be entered manually using the survivability mode "
"attribute available through configfs which is beneficial in several "
"usecases. It can be used to address scenarios where pcode does not detect "
"failure or for validation purposes. It can also be used in In-Field-Repair "
"(IFR) to repair a single card without impacting the other cards in a node."
msgstr ""

#: ../../../gpu/xe/xe_pcode:20: drivers/gpu/drm/xe/xe_survivability_mode.c:38
msgid "Use below command enable survivability mode manually::"
msgstr ""

#: ../../../gpu/xe/xe_pcode:20: drivers/gpu/drm/xe/xe_survivability_mode.c:42
msgid ""
"It is the responsibility of the user to clear the mode once firmware flash "
"is complete."
msgstr ""

#: ../../../gpu/xe/xe_pcode:20: drivers/gpu/drm/xe/xe_survivability_mode.c:44
msgid "Refer :ref:`xe_configfs` for more details on how to use configfs"
msgstr ""

#: ../../../gpu/xe/xe_pcode:20: drivers/gpu/drm/xe/xe_survivability_mode.c:46
msgid ""
"Survivability mode is indicated by the below admin-only readable sysfs which "
"provides additional debug information::"
msgstr ""

#: ../../../gpu/xe/xe_pcode:20: drivers/gpu/drm/xe/xe_survivability_mode.c:51
msgid "Capability Information:"
msgstr ""

#: ../../../gpu/xe/xe_pcode:20: drivers/gpu/drm/xe/xe_survivability_mode.c:52
msgid "Provides boot status"
msgstr ""

#: ../../../gpu/xe/xe_pcode:20: drivers/gpu/drm/xe/xe_survivability_mode.c:53
msgid "Postcode Information:"
msgstr ""

#: ../../../gpu/xe/xe_pcode:20: drivers/gpu/drm/xe/xe_survivability_mode.c:54
msgid "Provides information about the failure"
msgstr ""

#: ../../../gpu/xe/xe_pcode:20: drivers/gpu/drm/xe/xe_survivability_mode.c:55
msgid "Overflow Information"
msgstr ""

#: ../../../gpu/xe/xe_pcode:20: drivers/gpu/drm/xe/xe_survivability_mode.c:56
msgid "Provides history of previous failures"
msgstr ""

#: ../../../gpu/xe/xe_pcode:20: drivers/gpu/drm/xe/xe_survivability_mode.c:57
msgid "Auxiliary Information"
msgstr ""

#: ../../../gpu/xe/xe_pcode:20: drivers/gpu/drm/xe/xe_survivability_mode.c:58
msgid ""
"Certain failures may have information in addition to postcode information"
msgstr ""
