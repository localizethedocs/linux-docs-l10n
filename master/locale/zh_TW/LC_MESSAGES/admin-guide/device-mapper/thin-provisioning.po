# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:3
#: ../../../admin-guide/device-mapper/thin-provisioning.rst:158
msgid "Thin provisioning"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:6
msgid "Introduction"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:8
msgid ""
"This document describes a collection of device-mapper targets that between "
"them implement thin-provisioning and snapshots."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:11
msgid ""
"The main highlight of this implementation, compared to the previous "
"implementation of snapshots, is that it allows many virtual devices to be "
"stored on the same data volume.  This simplifies administration and allows "
"the sharing of data between volumes, thus reducing disk usage."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:16
msgid ""
"Another significant feature is support for an arbitrary depth of recursive "
"snapshots (snapshots of snapshots of snapshots ...).  The previous "
"implementation of snapshots did this by chaining together lookup tables, and "
"so performance was O(depth).  This new implementation uses a single data "
"structure to avoid this degradation with depth.  Fragmentation may still be "
"an issue, however, in some scenarios."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:24
msgid ""
"Metadata is stored on a separate device from data, giving the administrator "
"some freedom, for example to:"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:27
msgid ""
"Improve metadata resilience by storing metadata on a mirrored volume but "
"data on a non-mirrored one."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:30
msgid "Improve performance by storing the metadata on SSD."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:33
#: ../../../admin-guide/device-mapper/thin-provisioning.rst:298
#: ../../../admin-guide/device-mapper/thin-provisioning.rst:419
msgid "Status"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:35
msgid ""
"These targets are considered safe for production use.  But different use "
"cases will have different performance characteristics, for example due to "
"fragmentation of the data volume."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:39
msgid ""
"If you find this software is not performing as expected please mail dm-"
"devel@redhat.com with details and we'll try our best to improve things for "
"you."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:43
msgid ""
"Userspace tools for checking and repairing the metadata have been fully "
"developed and are available as 'thin_check' and 'thin_repair'.  The name of "
"the package that provides these utilities varies by distribution (on a Red "
"Hat distribution it is named 'device-mapper-persistent-data')."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:49
msgid "Cookbook"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:51
msgid ""
"This section describes some quick recipes for using thin provisioning. They "
"use the dmsetup program to control the device-mapper driver directly.  End "
"users will be advised to use a higher-level volume manager such as LVM2 once "
"support has been added."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:57
msgid "Pool device"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:59
msgid ""
"The pool device ties together the metadata volume and the data volume. It "
"maps I/O linearly to the data volume and updates the metadata via two "
"mechanisms:"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:63
msgid "Function calls from the thin targets"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:65
msgid ""
"Device-mapper 'messages' from userspace which control the creation of new "
"virtual devices amongst other things."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:69
msgid "Setting up a fresh pool device"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:71
msgid ""
"Setting up a pool device requires a valid metadata device, and a data "
"device.  If you do not have an existing metadata device you can make one by "
"zeroing the first 4k to indicate empty metadata."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:75
msgid "dd if=/dev/zero of=$metadata_dev bs=4096 count=1"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:77
msgid ""
"The amount of metadata you need will vary according to how many blocks are "
"shared between thin devices (i.e. through snapshots).  If you have less "
"sharing than average you'll need a larger-than-average metadata device."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:81
msgid ""
"As a guide, we suggest you calculate the number of bytes to use in the "
"metadata device as 48 * $data_dev_size / $data_block_size but round it up to "
"2MiB if the answer is smaller.  If you're creating large numbers of "
"snapshots which are recording large amounts of change, you may find you need "
"to increase this."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:87
msgid ""
"The largest size supported is 16GiB: If the device is larger, a warning will "
"be issued and the excess space will not be used."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:91
msgid "Reloading a pool table"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:93
msgid ""
"You may reload a pool's table, indeed this is how the pool is resized if it "
"runs out of space.  (N.B. While specifying a different metadata device when "
"reloading is not forbidden at the moment, things will go wrong if it does "
"not route I/O to exactly the same on-disk location as previously.)"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:100
msgid "Using an existing pool device"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:108
msgid ""
"$data_block_size gives the smallest unit of disk space that can be allocated "
"at a time expressed in units of 512-byte sectors. $data_block_size must be "
"between 128 (64KiB) and 2097152 (1GiB) and a multiple of 128 (64KiB).  "
"$data_block_size cannot be changed after the thin-pool is created.  People "
"primarily interested in thin provisioning may want to use a value such as "
"1024 (512KiB).  People doing lots of snapshotting may want a smaller value "
"such as 128 (64KiB).  If you are not zeroing newly-allocated data, a larger "
"$data_block_size in the region of 262144 (128MiB) is suggested."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:118
msgid ""
"$low_water_mark is expressed in blocks of size $data_block_size.  If free "
"space on the data device drops below this level then a dm event will be "
"triggered which a userspace daemon should catch allowing it to extend the "
"pool device.  Only one such event will be sent."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:123
msgid ""
"No special event is triggered if a just resumed device's free space is below "
"the low water mark. However, resuming a device always triggers an event; a "
"userspace daemon should verify that free space exceeds the low water mark "
"when handling this event."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:128
msgid ""
"A low water mark for the metadata device is maintained in the kernel and "
"will trigger a dm event if free space on the metadata device drops below it."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:133
msgid "Updating on-disk metadata"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:135
msgid ""
"On-disk metadata is committed every time a FLUSH or FUA bio is written. If "
"no such requests are made then commits will occur every second.  This means "
"the thin-provisioning target behaves like a physical disk that has a "
"volatile write cache.  If power is lost you may lose some recent writes.  "
"The metadata should always be consistent in spite of any crash."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:141
msgid ""
"If data space is exhausted the pool will either error or queue IO according "
"to the configuration (see: error_if_no_space).  If metadata space is "
"exhausted or a metadata operation fails: the pool will error IO until the "
"pool is taken offline and repair is performed to 1) fix any potential "
"inconsistencies and 2) clear the flag that imposes repair. Once the pool's "
"metadata device is repaired it may be resized, which will allow the pool to "
"return to normal operation.  Note that if a pool is flagged as needing "
"repair, the pool's data and metadata devices cannot be resized until repair "
"is performed.  It should also be noted that when the pool's metadata space "
"is exhausted the current metadata transaction is aborted.  Given that the "
"pool will cache IO whose completion may have already been acknowledged to "
"upper IO layers (e.g. filesystem) it is strongly suggested that consistency "
"checks (e.g. fsck) be performed on those layers when repair of the pool is "
"required."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:160
msgid "Creating a new thinly-provisioned volume."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:162
msgid ""
"To create a new thinly- provisioned volume you must send a message to an "
"active pool device, /dev/mapper/pool in this example::"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:167
msgid ""
"Here '0' is an identifier for the volume, a 24-bit number.  It's up to the "
"caller to allocate and manage these identifiers.  If the identifier is "
"already in use, the message will fail with -EEXIST."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:171
msgid "Using a thinly-provisioned volume."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:173
msgid "Thinly-provisioned volumes are activated using the 'thin' target::"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:177
msgid "The last parameter is the identifier for the thinp device."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:180
msgid "Internal snapshots"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:182
msgid "Creating an internal snapshot."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:184
msgid "Snapshots are created with another message to the pool."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:186
msgid ""
"N.B.  If the origin device that you wish to snapshot is active, you must "
"suspend it before creating the snapshot to avoid corruption. This is NOT "
"enforced at the moment, so please be careful!"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:196
msgid ""
"Here '1' is the identifier for the volume, a 24-bit number.  '0' is the "
"identifier for the origin device."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:199
msgid "Using an internal snapshot."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:201
msgid ""
"Once created, the user doesn't have to worry about any connection between "
"the origin and the snapshot.  Indeed the snapshot is no different from any "
"other thinly-provisioned device and can be snapshotted itself via the same "
"method.  It's perfectly legal to have only one of them active, and there's "
"no ordering requirement on activating or removing them both.  (This differs "
"from conventional device-mapper snapshots.)"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:209
msgid ""
"Activate it exactly the same way as any other thinly-provisioned volume::"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:214
msgid "External snapshots"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:216
msgid ""
"You can use an external **read only** device as an origin for a thinly-"
"provisioned volume.  Any read to an unprovisioned area of the thin device "
"will be passed through to the origin.  Writes trigger the allocation of new "
"blocks as usual."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:221
msgid ""
"One use case for this is VM hosts that want to run guests on thinly-"
"provisioned volumes but have the base image on another device (possibly "
"shared between many VMs)."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:225
msgid ""
"You must not write to the origin device if you use this technique! Of "
"course, you may write to the thin device and take internal snapshots of the "
"thin volume."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:229
msgid "Creating a snapshot of an external device"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:231
msgid ""
"This is the same as creating a thin device. You don't mention the origin at "
"this stage."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:238
msgid "Using a snapshot of an external device."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:240
msgid "Append an extra parameter to the thin target specifying the origin::"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:244
msgid ""
"N.B. All descendants (internal snapshots) of this snapshot require the same "
"extra origin parameter."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:248
msgid "Deactivation"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:250
msgid ""
"All devices using a pool must be deactivated before the pool itself can be."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:260
msgid "Reference"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:263
msgid "'thin-pool' target"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:265
#: ../../../admin-guide/device-mapper/thin-provisioning.rst:395
msgid "Constructor"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:272
msgid "Optional feature arguments:"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:274
msgid "skip_block_zeroing:"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:275
msgid "Skip the zeroing of newly-provisioned blocks."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:277
msgid "ignore_discard:"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:278
msgid "Disable discard support."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:280
msgid "no_discard_passdown:"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:281
msgid ""
"Don't pass discards down to the underlying data device, but just remove the "
"mapping."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:284
msgid "read_only:"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:285
msgid ""
"Don't allow any changes to be made to the pool metadata.  This mode is only "
"available after the thin-pool has been created and first used in full read/"
"write mode.  It cannot be specified on initial thin-pool creation."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:291
msgid "error_if_no_space:"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:292
msgid "Error IOs, instead of queueing, if no space."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:294
msgid ""
"Data block size must be between 64KiB (128 sectors) and 1GiB (2097152 "
"sectors) inclusive."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:307
msgid "transaction id:"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:308
msgid ""
"A 64-bit number used by userspace to help synchronise with metadata from "
"volume managers."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:311
msgid "used data blocks / total data blocks"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:312
msgid ""
"If the number of free blocks drops below the pool's low water mark a dm "
"event will be sent to userspace.  This event is edge-triggered and it will "
"occur only once after each resume so volume manager writers should register "
"for the event and then check the target's status."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:317
msgid "held metadata root:"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:318
msgid ""
"The location, in blocks, of the metadata root that has been 'held' for "
"userspace read access.  '-' indicates there is no held root."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:322
msgid "discard_passdown|no_discard_passdown"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:323
msgid ""
"Whether or not discards are actually being passed down to the underlying "
"device.  When this is enabled when loading the table, it can get disabled if "
"the underlying device doesn't support it."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:327
msgid "ro|rw|out_of_data_space"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:328
msgid ""
"If the pool encounters certain types of device failures it will drop into a "
"read-only metadata mode in which no changes to the pool metadata (like "
"allocating new blocks) are permitted."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:332
msgid ""
"In serious cases where even a read-only mode is deemed unsafe no further I/O "
"will be permitted and the status will just contain the string 'Fail'.  The "
"userspace recovery tools should then be used."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:337
msgid "error_if_no_space|queue_if_no_space"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:338
msgid ""
"If the pool runs out of data or metadata space, the pool will either queue "
"or error the IO destined to the data device.  The default is to queue the IO "
"until more space is added or the 'no_space_timeout' expires.  The "
"'no_space_timeout' dm-thin-pool module parameter can be used to change this "
"timeout -- it defaults to 60 seconds but may be disabled using a value of 0."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:345
msgid "needs_check"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:346
msgid ""
"A metadata operation has failed, resulting in the needs_check flag being set "
"in the metadata's superblock.  The metadata device must be deactivated and "
"checked/repaired before the thin-pool can be made fully operational again.  "
"'-' indicates needs_check is not set."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:352
msgid "metadata_low_watermark:"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:353
msgid ""
"Value of metadata low watermark in blocks.  The kernel sets this value "
"internally but userspace needs to know this value to determine if an event "
"was caused by crossing this threshold."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:357
msgid "Messages"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:359
msgid "create_thin <dev id>"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:360
msgid ""
"Create a new thinly-provisioned device. <dev id> is an arbitrary unique 24-"
"bit identifier chosen by the caller."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:364
msgid "create_snap <dev id> <origin id>"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:365
msgid ""
"Create a new snapshot of another thinly-provisioned device. <dev id> is an "
"arbitrary unique 24-bit identifier chosen by the caller. <origin id> is the "
"identifier of the thinly-provisioned device of which the new device will be "
"a snapshot."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:371
msgid "delete <dev id>"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:372
msgid "Deletes a thin device.  Irreversible."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:374
msgid "set_transaction_id <current id> <new id>"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:375
msgid ""
"Userland volume managers, such as LVM, need a way to synchronise their "
"external metadata with the internal metadata of the pool target.  The thin-"
"pool target offers to store an arbitrary 64-bit transaction id and return it "
"on the target's status line.  To avoid races you must provide what you think "
"the current transaction id is when you change it with this compare-and-swap "
"message."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:383
msgid "reserve_metadata_snap"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:384
msgid ""
"Reserve a copy of the data mapping btree for use by userland. This allows "
"userland to inspect the mappings as they were when this message was "
"executed.  Use the pool's status command to get the root block associated "
"with the metadata snapshot."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:389
msgid "release_metadata_snap"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:390
msgid "Release a previously reserved copy of the data mapping btree."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:393
msgid "'thin' target"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:401
msgid "pool dev:"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:402
msgid "the thin-pool device, e.g. /dev/mapper/my_pool or 253:0"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:404
msgid "dev id:"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:405
msgid "the internal device identifier of the device to be activated."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:408
msgid "external origin dev:"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:409
msgid ""
"an optional block device outside the pool to be treated as a read-only "
"snapshot origin: reads to unprovisioned areas of the thin target will be "
"mapped to this device."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:413
msgid ""
"The pool doesn't store any size against the thin devices.  If you load a "
"thin target that is smaller than you've been using previously, then you'll "
"have no access to blocks mapped beyond the end.  If you load a target that "
"is bigger than before, then extra blocks will be provisioned as and when "
"needed."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:421
msgid "<nr mapped sectors> <highest mapped sector>"
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:422
msgid ""
"If the pool has encountered device errors and failed, the status will just "
"contain the string 'Fail'.  The userspace recovery tools should then be used."
msgstr ""

#: ../../../admin-guide/device-mapper/thin-provisioning.rst:426
msgid ""
"In the case where <nr mapped sectors> is 0, there is no highest mapped "
"sector and the value of <highest mapped sector> is unspecified."
msgstr ""
