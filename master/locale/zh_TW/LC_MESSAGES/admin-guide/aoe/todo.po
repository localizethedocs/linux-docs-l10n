# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../admin-guide/aoe/todo.rst:2
msgid "TODO"
msgstr ""

#: ../../../admin-guide/aoe/todo.rst:4
msgid ""
"There is a potential for deadlock when allocating a struct sk_buff for data "
"that needs to be written out to aoe storage.  If the data is being written "
"from a dirty page in order to free that page, and if there are no other "
"pages available, then deadlock may occur when a free page is needed for the "
"sk_buff allocation.  This situation has not been observed, but it would be "
"nice to eliminate any potential for deadlock under memory pressure."
msgstr ""

#: ../../../admin-guide/aoe/todo.rst:12
msgid ""
"Because ATA over Ethernet is not fragmented by the kernel's IP code, the "
"destructor member of the struct sk_buff is available to the aoe driver.  By "
"using a mempool for allocating all but the first few sk_buffs, and by "
"registering a destructor, we should be able to efficiently allocate sk_buffs "
"without introducing any potential for deadlock."
msgstr ""
