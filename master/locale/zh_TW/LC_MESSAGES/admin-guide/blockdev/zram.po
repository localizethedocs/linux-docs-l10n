# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../admin-guide/blockdev/zram.rst:3
msgid "zram: Compressed RAM-based block devices"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:6
msgid "Introduction"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:8
msgid ""
"The zram module creates RAM-based block devices named /dev/zram<id> (<id> = "
"0, 1, ...). Pages written to these disks are compressed and stored in memory "
"itself. These disks allow very fast I/O and compression provides good "
"amounts of memory savings. Some of the use cases include /tmp storage, use "
"as swap disks, various caches under /var and maybe many more. :)"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:14
msgid ""
"Statistics for individual zram devices are exported through sysfs nodes at /"
"sys/block/zram<id>/"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:18
msgid "Usage"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:20
msgid "There are several ways to configure and manage zram device(-s):"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:22
msgid "using zram and zram_control sysfs attributes"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:23
msgid ""
"using zramctl utility, provided by util-linux (util-linux@vger.kernel.org)."
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:25
msgid ""
"In this document we will describe only 'manual' zram configuration steps, "
"IOW, zram and zram_control sysfs attributes."
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:28
msgid ""
"In order to get a better idea about zramctl please consult util-linux "
"documentation, zramctl man-page or `zramctl --help`. Please be informed that "
"zram maintainers do not develop/maintain util-linux or zramctl, should you "
"have any questions please contact util-linux@vger.kernel.org"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:33
msgid "Following shows a typical sequence of steps for using zram."
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:36
msgid "WARNING"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:38
msgid ""
"For the sake of simplicity we skip error checking parts in most of the "
"examples below. However, it is your sole responsibility to handle errors."
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:41
msgid ""
"zram sysfs attributes always return negative values in case of errors. The "
"list of possible return codes:"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:45
msgid "-EBUSY"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:45
msgid ""
"an attempt to modify an attribute that cannot be changed once the device has "
"been initialised. Please reset device first."
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:47
msgid "-ENOMEM"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:47
msgid "zram was not able to allocate enough memory to fulfil your needs."
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:49
msgid "-EINVAL"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:49
msgid "invalid input has been provided."
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:50
msgid "-EAGAIN"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:50
msgid ""
"re-try operation later (e.g. when attempting to run recompress and writeback "
"simultaneously)."
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:54
msgid ""
"If you use 'echo', the returned value is set by the 'echo' utility, and, in "
"general case, something like::"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:62
msgid "should suffice."
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:65
msgid "1) Load Module"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:71
msgid "This creates 4 devices: /dev/zram{0,1,2,3}"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:73
msgid ""
"num_devices parameter is optional and tells zram how many devices should be "
"pre-created. Default: 1."
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:77
msgid "2) Select compression algorithm"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:79
msgid ""
"Using comp_algorithm device attribute one can see available and currently "
"selected (shown in square brackets) compression algorithms, or change the "
"selected compression algorithm (once the device is initialised there is no "
"way to change compression algorithm)."
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:84
msgid "Examples::"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:93
msgid ""
"For the time being, the `comp_algorithm` content shows only compression "
"algorithms that are supported by zram."
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:97
msgid "3) Set compression algorithm parameters: Optional"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:99
msgid ""
"Compression algorithms may support specific parameters which can be tweaked "
"for particular dataset. ZRAM has an `algorithm_params` device attribute "
"which provides a per-algorithm params configuration."
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:103
msgid ""
"For example, several compression algorithms support `level` parameter. In "
"addition, certain compression algorithms support pre-trained dictionaries, "
"which significantly change algorithms' characteristics. In order to "
"configure compression algorithm to use external pre-trained dictionary, pass "
"full path to the `dict` along with other parameters::"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:120
msgid ""
"Parameters are algorithm specific: not all algorithms support pre-trained "
"dictionaries, not all algorithms support `level`. Furthermore, for certain "
"algorithms `level` controls the compression level (the higher the value the "
"better the compression ratio, it even can take negatives values for some "
"algorithms), for other algorithms `level` is acceleration level (the higher "
"the value the lower the compression ratio)."
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:128
msgid "4) Set Disksize"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:130
msgid ""
"Set disk size by writing the value to sysfs node 'disksize'. The value can "
"be either in bytes or you can use mem suffixes. Examples::"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:142
msgid ""
"Note: There is little point creating a zram of greater than twice the size "
"of memory since we expect a 2:1 compression ratio. Note that zram uses about "
"0.1% of the size of the disk when not in use so a huge zram is wasteful."
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:148
msgid "5) Set memory limit: Optional"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:150
msgid ""
"Set memory limit by writing the value to sysfs node 'mem_limit'. The value "
"can be either in bytes or you can use mem suffixes. In addition, you could "
"change the value in runtime. Examples::"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:167
msgid "6) Activate"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:178
msgid "7) Add/remove zram devices"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:180
msgid ""
"zram provides a control interface, which enables dynamic (on-demand) device "
"addition and removal."
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:183
msgid ""
"In order to add a new /dev/zramX device, perform a read operation on the "
"hot_add attribute. This will return either the new device's device id "
"(meaning that you can use /dev/zram<id>) or an error code."
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:187
msgid "Example::"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:192
msgid ""
"To remove the existing /dev/zramX device (where X is a device id) execute::"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:198
msgid "8) Stats"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:200
msgid ""
"Per-device statistics are exported as various nodes under /sys/block/"
"zram<id>/"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:202
msgid ""
"A brief description of exported device attributes follows. For more details "
"please read Documentation/ABI/testing/sysfs-block-zram."
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:206
msgid "Name"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:206
msgid "access"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:206
msgid "description"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:208
msgid "disksize"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:208
#: ../../../admin-guide/blockdev/zram.rst:216
#: ../../../admin-guide/blockdev/zram.rst:217
#: ../../../admin-guide/blockdev/zram.rst:221
msgid "RW"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:208
msgid "show and set the device's disk size"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:209
msgid "initstate"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:209
#: ../../../admin-guide/blockdev/zram.rst:220
msgid "RO"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:209
msgid "shows the initialization state of the device"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:210
msgid "reset"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:210
#: ../../../admin-guide/blockdev/zram.rst:211
#: ../../../admin-guide/blockdev/zram.rst:212
#: ../../../admin-guide/blockdev/zram.rst:214
#: ../../../admin-guide/blockdev/zram.rst:218
#: ../../../admin-guide/blockdev/zram.rst:219
#: ../../../admin-guide/blockdev/zram.rst:222
msgid "WO"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:210
msgid "trigger device reset"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:211
#: ../../../admin-guide/blockdev/zram.rst:274
msgid "mem_used_max"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:211
msgid "reset the `mem_used_max` counter (see later)"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:212
#: ../../../admin-guide/blockdev/zram.rst:272
msgid "mem_limit"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:212
msgid ""
"specifies the maximum amount of memory ZRAM can use to store the compressed "
"data"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:214
msgid "writeback_limit"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:214
msgid ""
"specifies the maximum amount of write IO zram can write out to backing "
"device as 4KB unit"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:216
msgid "writeback_limit_enable"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:216
msgid "show and set writeback_limit feature"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:217
msgid "comp_algorithm"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:217
msgid "show and change the compression algorithm"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:218
msgid "algorithm_params"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:218
msgid "setup compression algorithm parameters"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:219
msgid "compact"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:219
msgid "trigger memory compaction"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:220
msgid "debug_stat"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:220
msgid "this file is used for zram debugging purposes"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:221
msgid "backing_dev"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:221
msgid "set up backend storage for zram to write out"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:222
msgid "idle"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:222
msgid "mark allocated slot as idle"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:226
msgid ""
"User space is advised to use the following files to read the device "
"statistics."
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:228
msgid "File /sys/block/zram<id>/stat"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:230
msgid ""
"Represents block layer statistics. Read Documentation/block/stat.rst for "
"details."
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:233
msgid "File /sys/block/zram<id>/io_stat"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:235
msgid ""
"The stat file represents device's I/O statistics not accounted by block "
"layer and, thus, not available in zram<id>/stat file. It consists of a "
"single line of text and contains the following stats separated by whitespace:"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:241
msgid "failed_reads"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:241
msgid "The number of failed reads"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:242
msgid "failed_writes"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:242
msgid "The number of failed writes"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:243
msgid "invalid_io"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:243
msgid "The number of non-page-size-aligned I/O requests"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:244
msgid "notify_free"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:244
msgid "Depending on device usage scenario it may account"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:246
msgid "the number of pages freed because of swap slot free notifications"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:248
msgid ""
"the number of pages freed because of REQ_OP_DISCARD requests sent by bio. "
"The former ones are sent to a swap block device when a swap slot is freed, "
"which implies that this disk is being used as a swap disk."
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:253
msgid ""
"The latter ones are sent by filesystem mounted with discard option, whenever "
"some data blocks are getting discarded."
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:258
msgid "File /sys/block/zram<id>/mm_stat"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:260
msgid ""
"The mm_stat file represents the device's mm statistics. It consists of a "
"single line of text and contains the following stats separated by whitespace:"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:264
msgid "orig_data_size"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:264
msgid "uncompressed size of data stored in this disk. Unit: bytes"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:266
msgid "compr_data_size"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:266
msgid "compressed size of data stored in this disk"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:267
msgid "mem_used_total"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:267
msgid ""
"the amount of memory allocated for this disk. This includes allocator "
"fragmentation and metadata overhead, allocated for this disk. So, allocator "
"space efficiency can be calculated using compr_data_size and this statistic. "
"Unit: bytes"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:272
msgid "the maximum amount of memory ZRAM can use to store the compressed data"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:274
msgid "the maximum amount of memory zram has consumed to store the data"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:276
msgid "same_pages"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:276
msgid ""
"the number of same element filled pages written to this disk. No memory is "
"allocated for such pages."
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:278
msgid "pages_compacted"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:278
msgid "the number of pages freed during compaction"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:279
msgid "huge_pages"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:279
msgid "the number of incompressible pages"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:280
msgid "huge_pages_since"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:280
msgid "the number of incompressible pages since zram set up"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:283
msgid "File /sys/block/zram<id>/bd_stat"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:285
msgid ""
"The bd_stat file represents a device's backing device statistics. It "
"consists of a single line of text and contains the following stats separated "
"by whitespace:"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:289
msgid "bd_count"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:289
msgid "size of data written in backing device. Unit: 4K bytes"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:291
msgid "bd_reads"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:291
msgid "the number of reads from backing device Unit: 4K bytes"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:293
msgid "bd_writes"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:293
msgid "the number of writes to backing device Unit: 4K bytes"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:298
msgid "9) Deactivate"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:306
msgid "10) Reset"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:308
msgid "Write any positive value to 'reset' sysfs node::"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:313
msgid ""
"This frees all the memory allocated for the given device and resets the "
"disksize to zero. You must set the disksize again before reusing the device."
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:318
msgid "Optional Feature"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:321
msgid "IDLE pages tracking"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:323
msgid ""
"zram has built-in support for idle pages tracking (that is, allocated but "
"not used pages). This feature is useful for e.g. zram writeback and "
"recompression. In order to mark pages as idle, execute the following "
"command::"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:329
msgid ""
"This will mark all allocated zram pages as idle. The idle mark will be "
"removed only when the page (block) is accessed (e.g. overwritten or freed). "
"Additionally, when CONFIG_ZRAM_TRACK_ENTRY_ACTIME is enabled, pages can be "
"marked as idle based on how many seconds have passed since the last access "
"to a particular zram page::"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:337
msgid ""
"In this example, all pages which haven't been accessed in more than 86400 "
"seconds (one day) will be marked idle."
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:341
msgid "writeback"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:343
msgid ""
"With CONFIG_ZRAM_WRITEBACK, zram can write idle/incompressible page to "
"backing storage rather than keeping it in memory. To use the feature, admin "
"should set up backing device via::"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:349
msgid ""
"before disksize setting. It supports only partitions at this moment. If "
"admin wants to use incompressible page writeback, they could do it via::"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:354
msgid "Admin can request writeback of idle pages at right timing via::"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:358
msgid ""
"With the command, zram will writeback idle pages from memory to the storage."
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:360
msgid ""
"Additionally, if a user choose to writeback only huge and idle pages this "
"can be accomplished with::"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:365
msgid ""
"If a user chooses to writeback only incompressible pages (pages that none of "
"algorithms can compress) this can be accomplished with::"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:370
msgid ""
"If an admin wants to write a specific page in zram device to the backing "
"device, they could write a page index into the interface::"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:375
msgid ""
"In Linux 6.16 this interface underwent some rework.  First, the interface "
"now supports `key=value` format for all of its parameters (`type=huge_idle`, "
"etc.)  Second, the support for `page_indexes` was introduced, which specify "
"`LOW-HIGH` range (or ranges) of pages to be written-back.  This reduces the "
"number of syscalls, but more importantly this enables optimal post-"
"processing target selection strategy. Usage example::"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:386
msgid ""
"We also now permit multiple page_index params per call and a mix of single "
"pages and page ranges::"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:392
msgid ""
"If there are lots of write IO with flash device, potentially, it has flash "
"wearout problem so that admin needs to design write limitation to guarantee "
"storage health for entire product life."
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:396
msgid ""
"To overcome the concern, zram supports \"writeback_limit\" feature. The "
"\"writeback_limit_enable\"'s default value is 0 so that it doesn't limit any "
"writeback. IOW, if admin wants to apply writeback budget, they should enable "
"writeback_limit_enable via::"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:403
msgid ""
"Once writeback_limit_enable is set, zram doesn't allow any writeback until "
"admin sets the budget via /sys/block/zramX/writeback_limit."
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:406
msgid ""
"(If admin doesn't enable writeback_limit_enable, writeback_limit's value "
"assigned via /sys/block/zramX/writeback_limit is meaningless.)"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:409
msgid ""
"If admin wants to limit writeback as per-day 400M, they could do it like "
"below::"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:418
msgid ""
"If admins want to allow further write again once the budget is exhausted, "
"they could do it like below::"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:424
msgid ""
"If an admin wants to see the remaining writeback budget since last set::"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:428
msgid "If an admin wants to disable writeback limit, they could do::"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:432
msgid ""
"The writeback_limit count will reset whenever you reset zram (e.g., system "
"reboot, echo 1 > /sys/block/zramX/reset) so keeping how many of writeback "
"happened until you reset the zram to allocate extra writeback budget in next "
"setting is user's job."
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:437
msgid ""
"If admin wants to measure writeback count in a certain period, they could "
"know it via /sys/block/zram0/bd_stat's 3rd column."
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:441
msgid "recompression"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:443
msgid ""
"With CONFIG_ZRAM_MULTI_COMP, zram can recompress pages using alternative "
"(secondary) compression algorithms. The basic idea is that alternative "
"compression algorithm can provide better compression ratio at a price of "
"(potentially) slower compression/decompression speeds. Alternative "
"compression algorithm can, for example, be more successful compressing huge "
"pages (those that default algorithm failed to compress). Another application "
"is idle pages recompression - pages that are cold and sit in the memory can "
"be recompressed using more effective algorithm and, hence, reduce zsmalloc "
"memory usage."
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:452
msgid ""
"With CONFIG_ZRAM_MULTI_COMP, zram supports up to 4 compression algorithms: "
"one primary and up to 3 secondary ones. Primary zram compressor is explained "
"in \"3) Select compression algorithm\", secondary algorithms are configured "
"using recomp_algorithm device attribute."
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:457
msgid "Example:::"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:464
msgid ""
"Alternative compression algorithms are sorted by priority. In the example "
"above, zstd is used as the first alternative algorithm, which has priority "
"of 1, while lz4hc is configured as a compression algorithm with priority 2. "
"Alternative compression algorithm's priority is provided during algorithms "
"configuration:::"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:476
msgid ""
"Another device attribute that CONFIG_ZRAM_MULTI_COMP enables is recompress, "
"which controls recompression."
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:479
msgid "Examples:::"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:490
msgid ""
"The number of idle pages can be significant, so user-space can pass a size "
"threshold (in bytes) to the recompress knob: zram will recompress only pages "
"of equal or greater size:::"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:500
msgid ""
"It is also possible to limit the number of pages zram re-compression will "
"attempt to recompress:::"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:505
msgid ""
"During re-compression for every page, that matches re-compression criteria, "
"ZRAM iterates the list of registered alternative compression algorithms in "
"order of their priorities. ZRAM stops either when re-compression was "
"successful (re-compressed object is smaller in size than the original one) "
"and matches re-compression criteria (e.g. size threshold) or when there are "
"no secondary algorithms left to try. If none of the secondary algorithms can "
"successfully re-compressed the page such a page is marked as incompressible, "
"so ZRAM will not attempt to re-compress it in the future."
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:514
msgid ""
"This re-compression behaviour, when it iterates through the list of "
"registered compression algorithms, increases our chances of finding the "
"algorithm that successfully compresses a particular page. Sometimes, "
"however, it is convenient (and sometimes even necessary) to limit "
"recompression to only one particular algorithm so that it will not try any "
"other algorithms. This can be achieved by providing a `algo` or `priority` "
"parameter:::"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:528
msgid "memory tracking"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:530
msgid ""
"With CONFIG_ZRAM_MEMORY_TRACKING, user can know information of the zram "
"block. It could be useful to catch cold or incompressible pages of the "
"process with*pagemap."
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:534
msgid ""
"If you enable the feature, you could see block state via /sys/kernel/debug/"
"zram/zram0/block_state\". The output is as follows::"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:543
msgid "First column"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:544
msgid "zram's block index."
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:545
msgid "Second column"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:546
msgid "access time since the system was booted"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:547
msgid "Third column"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:548
msgid "state of the block:"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:550
msgid "s:"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:551
msgid "same page"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:552
msgid "w:"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:553
msgid "written page to backing store"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:554
msgid "h:"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:555
msgid "huge page"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:556
msgid "i:"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:557
msgid "idle page"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:558
msgid "r:"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:559
msgid "recompressed page (secondary compression algorithm)"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:560
msgid "n:"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:561
msgid "none (including secondary) of algorithms could compress it"
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:563
msgid ""
"First line of above example says 300th block is accessed at 75.033841sec and "
"the block's state is huge so it is written back to the backing storage. It's "
"a debugging feature so anyone shouldn't rely on it to work properly."
msgstr ""

#: ../../../admin-guide/blockdev/zram.rst:568
msgid "Nitin Gupta ngupta@vflare.org"
msgstr ""
