# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:8
msgid "ioctl VIDIOC_G_FMT, VIDIOC_S_FMT, VIDIOC_TRY_FMT"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:11
msgid "Name"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:13
msgid ""
"VIDIOC_G_FMT - VIDIOC_S_FMT - VIDIOC_TRY_FMT - Get or set the data format, "
"try a format"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:16
msgid "Synopsis"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:20
msgid "``int ioctl(int fd, VIDIOC_G_FMT, struct v4l2_format *argp)``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:24
msgid "``int ioctl(int fd, VIDIOC_S_FMT, struct v4l2_format *argp)``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:28
msgid "``int ioctl(int fd, VIDIOC_TRY_FMT, struct v4l2_format *argp)``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:31
msgid "Arguments"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:33
msgid "``fd``"
msgstr "``fd``"

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:34
msgid "File descriptor returned by :c:func:`open()`."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:36
msgid "``argp``"
msgstr "``argp``"

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:37
msgid "Pointer to struct :c:type:`v4l2_format`."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:40
msgid "Description"
msgstr "描述"

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:42
msgid ""
"These ioctls are used to negotiate the format of data (typically image "
"format) exchanged between driver and application."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:45
msgid ""
"To query the current parameters applications set the ``type`` field of a "
"struct :c:type:`v4l2_format` to the respective buffer (stream) type. For "
"example video capture devices use ``V4L2_BUF_TYPE_VIDEO_CAPTURE`` or "
"``V4L2_BUF_TYPE_VIDEO_CAPTURE_MPLANE``. When the application calls the :ref:"
"`VIDIOC_G_FMT <VIDIOC_G_FMT>` ioctl with a pointer to this structure the "
"driver fills the respective member of the ``fmt`` union. In case of video "
"capture devices that is either the struct :c:type:`v4l2_pix_format` ``pix`` "
"or the struct :c:type:`v4l2_pix_format_mplane` ``pix_mp`` member. When the "
"requested buffer type is not supported drivers return an ``EINVAL`` error "
"code."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:58
msgid ""
"To change the current format parameters applications initialize the ``type`` "
"field and all fields of the respective ``fmt`` union member. For details see "
"the documentation of the various devices types in :ref:`devices`. Good "
"practice is to query the current parameters first, and to modify only those "
"parameters not suitable for the application. When the application calls the :"
"ref:`VIDIOC_S_FMT <VIDIOC_G_FMT>` ioctl with a pointer to a struct :c:type:"
"`v4l2_format` structure the driver checks and adjusts the parameters against "
"hardware abilities. Drivers should not return an error code unless the "
"``type`` field is invalid, this is a mechanism to fathom device capabilities "
"and to approach parameters acceptable for both the application and driver. "
"On success the driver may program the hardware, allocate resources and "
"generally prepare for data exchange. Finally the :ref:`VIDIOC_S_FMT "
"<VIDIOC_G_FMT>` ioctl returns the current format parameters as :ref:"
"`VIDIOC_G_FMT <VIDIOC_G_FMT>` does. Very simple, inflexible devices may even "
"ignore all input and always return the default parameters. However all V4L2 "
"devices exchanging data with the application must implement the :ref:"
"`VIDIOC_G_FMT <VIDIOC_G_FMT>` and :ref:`VIDIOC_S_FMT <VIDIOC_G_FMT>` ioctl. "
"When the requested buffer type is not supported drivers return an EINVAL "
"error code on a :ref:`VIDIOC_S_FMT <VIDIOC_G_FMT>` attempt. When I/O is "
"already in progress or the resource is not available for other reasons "
"drivers return the ``EBUSY`` error code."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:80
msgid ""
"The :ref:`VIDIOC_TRY_FMT <VIDIOC_G_FMT>` ioctl is equivalent to :ref:"
"`VIDIOC_S_FMT <VIDIOC_G_FMT>` with one exception: it does not change driver "
"state. It can also be called at any time, never returning ``EBUSY``. This "
"function is provided to negotiate parameters, to learn about hardware "
"limitations, without disabling I/O or possibly time consuming hardware "
"preparations. Although strongly recommended drivers are not required to "
"implement this ioctl."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:87
msgid ""
"The format as returned by :ref:`VIDIOC_TRY_FMT <VIDIOC_G_FMT>` must be "
"identical to what :ref:`VIDIOC_S_FMT <VIDIOC_G_FMT>` returns for the same "
"input or output."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:94
msgid "struct v4l2_format"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:98
msgid "__u32"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:99
msgid "``type``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:100
msgid "Type of the data stream, see :c:type:`v4l2_buf_type`."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:101
msgid "union {"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:102
msgid "``fmt``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:103
msgid "struct :c:type:`v4l2_pix_format`"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:104
msgid "``pix``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:105
msgid ""
"Definition of an image format, see :ref:`pixfmt`, used by video capture and "
"output devices."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:107
msgid "struct :c:type:`v4l2_pix_format_mplane`"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:108
msgid "``pix_mp``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:109
msgid ""
"Definition of an image format, see :ref:`pixfmt`, used by video capture and "
"output devices that support the :ref:`multi-planar version of the API "
"<planar-apis>`."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:112
msgid "struct :c:type:`v4l2_window`"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:113
msgid "``win``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:114
msgid ""
"Definition of an overlaid image, see :ref:`overlay`, used by video overlay "
"devices."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:116
msgid "struct :c:type:`v4l2_vbi_format`"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:117
msgid "``vbi``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:118
msgid ""
"Raw VBI capture or output parameters. This is discussed in more detail in :"
"ref:`raw-vbi`. Used by raw VBI capture and output devices."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:121
msgid "struct :c:type:`v4l2_sliced_vbi_format`"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:122
msgid "``sliced``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:123
msgid ""
"Sliced VBI capture or output parameters. See :ref:`sliced` for details. Used "
"by sliced VBI capture and output devices."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:125
msgid "struct :c:type:`v4l2_sdr_format`"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:126
msgid "``sdr``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:127
msgid ""
"Definition of a data format, see :ref:`pixfmt`, used by SDR capture and "
"output devices."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:129
msgid "struct :c:type:`v4l2_meta_format`"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:130
msgid "``meta``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:131
msgid ""
"Definition of a metadata format, see :ref:`meta-formats`, used by metadata "
"capture devices."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:133
msgid "__u8"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:134
msgid "``raw_data``\\ [200]"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:135
msgid "Place holder for future extensions."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:136
msgid "}"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:140
msgid "Return Value"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:142
msgid ""
"On success 0 is returned, on error -1 and the ``errno`` variable is set "
"appropriately. The generic error codes are described at the :ref:`Generic "
"Error Codes <gen-errors>` chapter."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:146
msgid "EINVAL"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:147
msgid ""
"The struct :c:type:`v4l2_format` ``type`` field is invalid or the requested "
"buffer type not supported."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:150
msgid "EBUSY"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-g-fmt.rst:151
msgid ""
"The device is busy and cannot change the format. This could be because or "
"the device is streaming or buffers are allocated or queued to the driver. "
"Relevant for :ref:`VIDIOC_S_FMT <VIDIOC_G_FMT>` only."
msgstr ""
