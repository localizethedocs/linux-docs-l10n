# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../PCI/boot-interrupts.rst:5
msgid "Boot Interrupts"
msgstr ""

#: ../../../PCI/boot-interrupts.rst:0
msgid "Author"
msgstr ""

#: ../../../PCI/boot-interrupts.rst:7
msgid "Sean V Kelley <sean.v.kelley@linux.intel.com>"
msgstr ""

#: ../../../PCI/boot-interrupts.rst:10
msgid "Overview"
msgstr ""

#: ../../../PCI/boot-interrupts.rst:12
msgid ""
"On PCI Express, interrupts are represented with either MSI or inbound "
"interrupt messages (Assert_INTx/Deassert_INTx). The integrated IO-APIC in a "
"given Core IO converts the legacy interrupt messages from PCI Express to MSI "
"interrupts.  If the IO-APIC is disabled (via the mask bits in the IO-APIC "
"table entries), the messages are routed to the legacy PCH. This in-band "
"interrupt mechanism was traditionally necessary for systems that did not "
"support the IO-APIC and for boot. Intel in the past has used the term \"boot "
"interrupts\" to describe this mechanism. Further, the PCI Express protocol "
"describes this in-band legacy wire-interrupt INTx mechanism for I/O devices "
"to signal PCI-style level interrupts. The subsequent paragraphs describe "
"problems with the Core IO handling of INTx message routing to the PCH and "
"mitigation within BIOS and the OS."
msgstr ""

#: ../../../PCI/boot-interrupts.rst:27
msgid "Issue"
msgstr ""

#: ../../../PCI/boot-interrupts.rst:29
msgid ""
"When in-band legacy INTx messages are forwarded to the PCH, they in turn "
"trigger a new interrupt for which the OS likely lacks a handler. When an "
"interrupt goes unhandled over time, they are tracked by the Linux kernel as "
"Spurious Interrupts. The IRQ will be disabled by the Linux kernel after it "
"reaches a specific count with the error \"nobody cared\". This disabled IRQ "
"now prevents valid usage by an existing interrupt which may happen to share "
"the IRQ line::"
msgstr ""

#: ../../../PCI/boot-interrupts.rst:61
msgid "Conditions"
msgstr ""

#: ../../../PCI/boot-interrupts.rst:63
msgid ""
"The use of threaded interrupts is the most likely condition to trigger this "
"problem today. Threaded interrupts may not be re-enabled after the IRQ "
"handler wakes. These \"one shot\" conditions mean that the threaded "
"interrupt needs to keep the interrupt line masked until the threaded handler "
"has run. Especially when dealing with high data rate interrupts, the thread "
"needs to run to completion; otherwise some handlers will end up in stack "
"overflows since the interrupt of the issuing device is still active."
msgstr ""

#: ../../../PCI/boot-interrupts.rst:72
msgid "Affected Chipsets"
msgstr ""

#: ../../../PCI/boot-interrupts.rst:74
msgid ""
"The legacy interrupt forwarding mechanism exists today in a number of "
"devices including but not limited to chipsets from AMD/ATI, Broadcom, and "
"Intel. Changes made through the mitigations below have been applied to "
"drivers/pci/quirks.c"
msgstr ""

#: ../../../PCI/boot-interrupts.rst:79
msgid ""
"Starting with ICX there are no longer any IO-APICs in the Core IO's "
"devices.  IO-APIC is only in the PCH.  Devices connected to the Core IO's "
"PCIe Root Ports will use native MSI/MSI-X mechanisms."
msgstr ""

#: ../../../PCI/boot-interrupts.rst:84
msgid "Mitigations"
msgstr ""

#: ../../../PCI/boot-interrupts.rst:86
msgid ""
"The mitigations take the form of PCI quirks. The preference has been to "
"first identify and make use of a means to disable the routing to the PCH. In "
"such a case a quirk to disable boot interrupt generation can be added. [1]_"
msgstr ""

#: ../../../PCI/boot-interrupts.rst:91
msgid "Intel® 6300ESB I/O Controller Hub"
msgstr ""

#: ../../../PCI/boot-interrupts.rst:92
msgid "Alternate Base Address Register:"
msgstr ""

#: ../../../PCI/boot-interrupts.rst:93
msgid "BIE: Boot Interrupt Enable"
msgstr ""

#: ../../../PCI/boot-interrupts.rst:96
msgid "0"
msgstr ""

#: ../../../PCI/boot-interrupts.rst:96
msgid "Boot interrupt is enabled."
msgstr ""

#: ../../../PCI/boot-interrupts.rst:97
msgid "1"
msgstr ""

#: ../../../PCI/boot-interrupts.rst:97
msgid "Boot interrupt is disabled."
msgstr ""

#: ../../../PCI/boot-interrupts.rst:100
msgid "Intel® Sandy Bridge through Sky Lake based Xeon servers:"
msgstr ""

#: ../../../PCI/boot-interrupts.rst:101
msgid "Coherent Interface Protocol Interrupt Control"
msgstr ""

#: ../../../PCI/boot-interrupts.rst:102
msgid "dis_intx_route2pch/dis_intx_route2ich/dis_intx_route2dmi2:"
msgstr ""

#: ../../../PCI/boot-interrupts.rst:103
msgid ""
"When this bit is set. Local INTx messages received from the Intel® Quick "
"Data DMA/PCI Express ports are not routed to legacy PCH - they are either "
"converted into MSI via the integrated IO-APIC (if the IO-APIC mask bit is "
"clear in the appropriate entries) or cause no further action (when mask bit "
"is set)"
msgstr ""

#: ../../../PCI/boot-interrupts.rst:109
msgid ""
"In the absence of a way to directly disable the routing, another approach "
"has been to make use of PCI Interrupt pin to INTx routing tables for "
"purposes of redirecting the interrupt handler to the rerouted interrupt line "
"by default.  Therefore, on chipsets where this INTx routing cannot be "
"disabled, the Linux kernel will reroute the valid interrupt to its legacy "
"interrupt. This redirection of the handler will prevent the occurrence of "
"the spurious interrupt detection which would ordinarily disable the IRQ line "
"due to excessive unhandled counts. [2]_"
msgstr ""

#: ../../../PCI/boot-interrupts.rst:118
msgid ""
"The config option X86_REROUTE_FOR_BROKEN_BOOT_IRQS exists to enable (or "
"disable) the redirection of the interrupt handler to the PCH interrupt line. "
"The option can be overridden by either pci=ioapicreroute or "
"pci=noioapicreroute. [3]_"
msgstr ""

#: ../../../PCI/boot-interrupts.rst:125
msgid "More Documentation"
msgstr ""

#: ../../../PCI/boot-interrupts.rst:127
msgid ""
"There is an overview of the legacy interrupt handling in several datasheets "
"(6300ESB and 6700PXH below). While largely the same, it provides insight "
"into the evolution of its handling with chipsets."
msgstr ""

#: ../../../PCI/boot-interrupts.rst:132
msgid "Example of disabling of the boot interrupt"
msgstr ""

#: ../../../PCI/boot-interrupts.rst:134
msgid ""
"Intel® 6300ESB I/O Controller Hub (Document # 300641-004US) 5.7.3 Boot "
"Interrupt https://www.intel.com/content/dam/doc/datasheet/6300esb-io-"
"controller-hub-datasheet.pdf"
msgstr ""

#: ../../../PCI/boot-interrupts.rst:138
msgid ""
"Intel® Xeon® Processor E5-1600/2400/2600/4600 v3 Product Families Datasheet "
"- Volume 2: Registers (Document # 330784-003) 6.6.41 cipintrc Coherent "
"Interface Protocol Interrupt Control https://www.intel.com/content/dam/www/"
"public/us/en/documents/datasheets/xeon-e5-v3-datasheet-vol-2.pdf"
msgstr ""

#: ../../../PCI/boot-interrupts.rst:144
msgid "Example of handler rerouting"
msgstr ""

#: ../../../PCI/boot-interrupts.rst:146
msgid ""
"Intel® 6700PXH 64-bit PCI Hub (Document # 302628) 2.15.2 PCI Express Legacy "
"INTx Support and Boot Interrupt https://www.intel.com/content/dam/doc/"
"datasheet/6700pxh-64-bit-pci-hub-datasheet.pdf"
msgstr ""

#: ../../../PCI/boot-interrupts.rst:151
msgid ""
"If you have any legacy PCI interrupt questions that aren't answered, email "
"me."
msgstr ""

#: ../../../PCI/boot-interrupts.rst:153
msgid "Cheers,"
msgstr ""

#: ../../../PCI/boot-interrupts.rst:154
msgid "Sean V Kelley sean.v.kelley@linux.intel.com"
msgstr ""

#: ../../../PCI/boot-interrupts.rst:157
msgid ""
"https://lore.kernel.org/r/12131949181903-git-send-email-sassmann@suse.de/"
msgstr ""

#: ../../../PCI/boot-interrupts.rst:158
msgid ""
"https://lore.kernel.org/r/12131949182094-git-send-email-sassmann@suse.de/"
msgstr ""

#: ../../../PCI/boot-interrupts.rst:159
msgid "https://lore.kernel.org/r/487C8EA7.6020205@suse.de/"
msgstr ""
