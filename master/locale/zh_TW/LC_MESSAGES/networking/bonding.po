# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-06 15:47+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../networking/bonding.rst:5
msgid "Linux Ethernet Bonding Driver HOWTO"
msgstr ""

#: ../../../networking/bonding.rst:7
msgid "Latest update: 27 April 2011"
msgstr ""

#: ../../../networking/bonding.rst:9
msgid "Initial release: Thomas Davis <tadavis at lbl.gov>"
msgstr ""

#: ../../../networking/bonding.rst:11
msgid "Corrections, HA extensions: 2000/10/03-15:"
msgstr ""

#: ../../../networking/bonding.rst:13
msgid "Willy Tarreau <willy at meta-x.org>"
msgstr ""

#: ../../../networking/bonding.rst:14
msgid "Constantine Gavrilov <const-g at xpert.com>"
msgstr ""

#: ../../../networking/bonding.rst:15
msgid "Chad N. Tindel <ctindel at ieee dot org>"
msgstr ""

#: ../../../networking/bonding.rst:16
msgid "Janice Girouard <girouard at us dot ibm dot com>"
msgstr ""

#: ../../../networking/bonding.rst:17
msgid "Jay Vosburgh <fubar at us dot ibm dot com>"
msgstr ""

#: ../../../networking/bonding.rst:19
msgid ""
"Reorganized and updated Feb 2005 by Jay Vosburgh Added Sysfs information: "
"2006/04/24"
msgstr ""

#: ../../../networking/bonding.rst:22
msgid "Mitch Williams <mitch.a.williams at intel.com>"
msgstr ""

#: ../../../networking/bonding.rst:25
msgid "Introduction"
msgstr ""

#: ../../../networking/bonding.rst:27
msgid ""
"The Linux bonding driver provides a method for aggregating multiple network "
"interfaces into a single logical \"bonded\" interface. The behavior of the "
"bonded interfaces depends upon the mode; generally speaking, modes provide "
"either hot standby or load balancing services. Additionally, link integrity "
"monitoring may be performed."
msgstr ""

#: ../../../networking/bonding.rst:33
msgid ""
"The bonding driver originally came from Donald Becker's beowulf patches for "
"kernel 2.0. It has changed quite a bit since, and the original tools from "
"extreme-linux and beowulf sites will not work with this version of the "
"driver."
msgstr ""

#: ../../../networking/bonding.rst:38
msgid ""
"For new versions of the driver, updated userspace tools, and who to ask for "
"help, please follow the links at the end of this file."
msgstr ""

#: ../../../networking/bonding.rst:110
msgid "1. Bonding Driver Installation"
msgstr ""

#: ../../../networking/bonding.rst:112
msgid ""
"Most popular distro kernels ship with the bonding driver already available "
"as a module. If your distro does not, or you have need to compile bonding "
"from source (e.g., configuring and installing a mainline kernel from kernel."
"org), you'll need to perform the following steps:"
msgstr ""

#: ../../../networking/bonding.rst:119
msgid "1.1 Configure and build the kernel with bonding"
msgstr ""

#: ../../../networking/bonding.rst:121
msgid ""
"The current version of the bonding driver is available in the drivers/net/"
"bonding subdirectory of the most recent kernel source (which is available on "
"http://kernel.org).  Most users \"rolling their own\" will want to use the "
"most recent kernel from kernel.org."
msgstr ""

#: ../../../networking/bonding.rst:126
msgid ""
"Configure kernel with \"make menuconfig\" (or \"make xconfig\" or \"make "
"config\"), then select \"Bonding driver support\" in the \"Network device "
"support\" section.  It is recommended that you configure the driver as "
"module since it is currently the only way to pass parameters to the driver "
"or configure more than one bonding device."
msgstr ""

#: ../../../networking/bonding.rst:132
msgid "Build and install the new kernel and modules."
msgstr ""

#: ../../../networking/bonding.rst:135
msgid "1.2 Bonding Control Utility"
msgstr ""

#: ../../../networking/bonding.rst:137
msgid ""
"It is recommended to configure bonding via iproute2 (netlink) or sysfs, the "
"old ifenslave control utility is obsolete."
msgstr ""

#: ../../../networking/bonding.rst:141
msgid "2. Bonding Driver Options"
msgstr ""

#: ../../../networking/bonding.rst:143
msgid ""
"Options for the bonding driver are supplied as parameters to the bonding "
"module at load time, or are specified via sysfs."
msgstr ""

#: ../../../networking/bonding.rst:146
msgid ""
"Module options may be given as command line arguments to the insmod or "
"modprobe command, but are usually specified in either the ``/etc/modprobe.d/"
"*.conf`` configuration files, or in a distro-specific configuration file "
"(some of which are detailed in the next section)."
msgstr ""

#: ../../../networking/bonding.rst:151
msgid ""
"Details on bonding support for sysfs is provided in the \"Configuring "
"Bonding Manually via Sysfs\" section, below."
msgstr ""

#: ../../../networking/bonding.rst:154
msgid ""
"The available bonding driver parameters are listed below. If a parameter is "
"not specified the default value is used.  When initially configuring a bond, "
"it is recommended \"tail -f /var/log/messages\" be run in a separate window "
"to watch for bonding driver error messages."
msgstr ""

#: ../../../networking/bonding.rst:159
msgid ""
"It is critical that either the miimon or arp_interval and arp_ip_target "
"parameters be specified, otherwise serious network degradation will occur "
"during link failures.  Very few devices do not support at least miimon, so "
"there is really no reason not to use it."
msgstr ""

#: ../../../networking/bonding.rst:164
msgid ""
"Options with textual values will accept either the text name or, for "
"backwards compatibility, the option value.  E.g., \"mode=802.3ad\" and "
"\"mode=4\" set the same mode."
msgstr ""

#: ../../../networking/bonding.rst:168
msgid "The parameters are as follows:"
msgstr ""

#: ../../../networking/bonding.rst:170
msgid "active_slave"
msgstr ""

#: ../../../networking/bonding.rst:172
msgid ""
"Specifies the new active slave for modes that support it (active-backup, "
"balance-alb and balance-tlb).  Possible values are the name of any currently "
"enslaved interface, or an empty string.  If a name is given, the slave and "
"its link must be up in order to be selected as the new active slave.  If an "
"empty string is specified, the current active slave is cleared, and a new "
"active slave is selected automatically."
msgstr ""

#: ../../../networking/bonding.rst:180
msgid ""
"Note that this is only available through the sysfs interface. No module "
"parameter by this name exists."
msgstr ""

#: ../../../networking/bonding.rst:183
msgid ""
"The normal value of this option is the name of the currently active slave, "
"or the empty string if there is no active slave or the current mode does not "
"use an active slave."
msgstr ""

#: ../../../networking/bonding.rst:187
msgid "ad_actor_sys_prio"
msgstr ""

#: ../../../networking/bonding.rst:189
msgid ""
"In an AD system, this specifies the system priority. The allowed range is 1 "
"- 65535. If the value is not specified, it takes 65535 as the default value."
msgstr ""

#: ../../../networking/bonding.rst:193 ../../../networking/bonding.rst:215
#: ../../../networking/bonding.rst:283
msgid ""
"This parameter has effect only in 802.3ad mode and is available through "
"SysFs interface."
msgstr ""

#: ../../../networking/bonding.rst:196
msgid "actor_port_prio"
msgstr ""

#: ../../../networking/bonding.rst:198
msgid ""
"In an AD system, this specifies the port priority. The allowed range is 1 - "
"65535. If the value is not specified, it takes 255 as the default value."
msgstr ""

#: ../../../networking/bonding.rst:202
msgid ""
"This parameter has effect only in 802.3ad mode and is available through "
"netlink interface."
msgstr ""

#: ../../../networking/bonding.rst:205
msgid "ad_actor_system"
msgstr ""

#: ../../../networking/bonding.rst:207
msgid ""
"In an AD system, this specifies the mac-address for the actor in protocol "
"packet exchanges (LACPDUs). The value cannot be a multicast address. If the "
"all-zeroes MAC is specified, bonding will internally use the MAC of the bond "
"itself. It is preferred to have the local-admin bit set for this mac but "
"driver does not enforce it. If the value is not given then system defaults "
"to using the masters' mac address as actors' system address."
msgstr ""

#: ../../../networking/bonding.rst:218
msgid "ad_select"
msgstr ""

#: ../../../networking/bonding.rst:220
msgid ""
"Specifies the 802.3ad aggregation selection logic to use.  The possible "
"values and their effects are:"
msgstr ""

#: ../../../networking/bonding.rst:223
msgid "stable or 0"
msgstr ""

#: ../../../networking/bonding.rst:225
msgid "The active aggregator is chosen by largest aggregate bandwidth."
msgstr ""

#: ../../../networking/bonding.rst:228
msgid ""
"Reselection of the active aggregator occurs only when all slaves of the "
"active aggregator are down or the active aggregator has no slaves."
msgstr ""

#: ../../../networking/bonding.rst:232
msgid "This is the default value."
msgstr ""

#: ../../../networking/bonding.rst:234
msgid "bandwidth or 1"
msgstr ""

#: ../../../networking/bonding.rst:236
msgid ""
"The active aggregator is chosen by largest aggregate bandwidth.  Reselection "
"occurs if:"
msgstr ""

#: ../../../networking/bonding.rst:239
msgid "A slave is added to or removed from the bond"
msgstr ""

#: ../../../networking/bonding.rst:241
msgid "Any slave's link state changes"
msgstr ""

#: ../../../networking/bonding.rst:243
msgid "Any slave's 802.3ad association state changes"
msgstr ""

#: ../../../networking/bonding.rst:245
msgid "The bond's administrative state changes to up"
msgstr ""

#: ../../../networking/bonding.rst:247
msgid "count or 2"
msgstr ""

#: ../../../networking/bonding.rst:249
msgid ""
"The active aggregator is chosen by the largest number of ports (slaves).  "
"Reselection occurs as described under the \"bandwidth\" setting, above."
msgstr ""

#: ../../../networking/bonding.rst:253
msgid "actor_port_prio or 3"
msgstr ""

#: ../../../networking/bonding.rst:255
msgid ""
"The active aggregator is chosen by the highest total sum of actor port "
"priorities across its active ports. Note this priority is actor_port_prio, "
"not per port prio, which is used for primary reselect."
msgstr ""

#: ../../../networking/bonding.rst:260
msgid ""
"The bandwidth, count and actor_port_prio selection policies permit failover "
"of 802.3ad aggregations when partial failure of the active aggregator "
"occurs. This keeps the aggregator with the highest availability (either in "
"bandwidth, number of ports, or total value of port priorities) active at all "
"times."
msgstr ""

#: ../../../networking/bonding.rst:266
msgid "This option was added in bonding version 3.4.0."
msgstr ""

#: ../../../networking/bonding.rst:268
msgid "ad_user_port_key"
msgstr ""

#: ../../../networking/bonding.rst:270
msgid "In an AD system, the port-key has three parts as shown below -"
msgstr ""

#: ../../../networking/bonding.rst:273
msgid "Bits"
msgstr ""

#: ../../../networking/bonding.rst:273
msgid "Use"
msgstr ""

#: ../../../networking/bonding.rst:275
msgid "00"
msgstr ""

#: ../../../networking/bonding.rst:275
msgid "Duplex"
msgstr ""

#: ../../../networking/bonding.rst:276
msgid "01-05"
msgstr ""

#: ../../../networking/bonding.rst:276
msgid "Speed"
msgstr ""

#: ../../../networking/bonding.rst:277
msgid "06-15"
msgstr ""

#: ../../../networking/bonding.rst:277
msgid "User-defined"
msgstr ""

#: ../../../networking/bonding.rst:280
msgid ""
"This defines the upper 10 bits of the port key. The values can be from 0 - "
"1023. If not given, the system defaults to 0."
msgstr ""

#: ../../../networking/bonding.rst:286
msgid "all_slaves_active"
msgstr ""

#: ../../../networking/bonding.rst:288
msgid ""
"Specifies that duplicate frames (received on inactive ports) should be "
"dropped (0) or delivered (1)."
msgstr ""

#: ../../../networking/bonding.rst:291
msgid ""
"Normally, bonding will drop duplicate frames (received on inactive ports), "
"which is desirable for most users. But there are some times it is nice to "
"allow duplicate frames to be delivered."
msgstr ""

#: ../../../networking/bonding.rst:295
msgid ""
"The default value is 0 (drop duplicate frames received on inactive ports)."
msgstr ""

#: ../../../networking/bonding.rst:298
msgid "arp_interval"
msgstr ""

#: ../../../networking/bonding.rst:300
msgid "Specifies the ARP link monitoring frequency in milliseconds."
msgstr ""

#: ../../../networking/bonding.rst:302
msgid ""
"The ARP monitor works by periodically checking the slave devices to "
"determine whether they have sent or received traffic recently (the precise "
"criteria depends upon the bonding mode, and the state of the slave).  "
"Regular traffic is generated via ARP probes issued for the addresses "
"specified by the arp_ip_target option."
msgstr ""

#: ../../../networking/bonding.rst:309
msgid "This behavior can be modified by the arp_validate option, below."
msgstr ""

#: ../../../networking/bonding.rst:312
msgid ""
"If ARP monitoring is used in an etherchannel compatible mode (modes 0 and "
"2), the switch should be configured in a mode that evenly distributes "
"packets across all links. If the switch is configured to distribute the "
"packets in an XOR fashion, all replies from the ARP targets will be received "
"on the same link which could cause the other team members to fail.  ARP "
"monitoring should not be used in conjunction with miimon.  A value of 0 "
"disables ARP monitoring.  The default value is 0."
msgstr ""

#: ../../../networking/bonding.rst:322
msgid "arp_ip_target"
msgstr ""

#: ../../../networking/bonding.rst:324
msgid ""
"Specifies the IP addresses to use as ARP monitoring peers when arp_interval "
"is > 0.  These are the targets of the ARP request sent to determine the "
"health of the link to the targets. Specify these values in ddd.ddd.ddd.ddd "
"format.  Multiple IP addresses must be separated by a comma.  At least one "
"IP address must be given for ARP monitoring to function.  The maximum number "
"of targets that can be specified is 16.  The default value is no IP "
"addresses."
msgstr ""

#: ../../../networking/bonding.rst:333
msgid "ns_ip6_target"
msgstr ""

#: ../../../networking/bonding.rst:335
msgid ""
"Specifies the IPv6 addresses to use as IPv6 monitoring peers when "
"arp_interval is > 0.  These are the targets of the NS request sent to "
"determine the health of the link to the targets. Specify these values in "
"ffff:ffff::ffff:ffff format.  Multiple IPv6 addresses must be separated by a "
"comma.  At least one IPv6 address must be given for NS/NA monitoring to "
"function.  The maximum number of targets that can be specified is 16.  The "
"default value is no IPv6 addresses."
msgstr ""

#: ../../../networking/bonding.rst:344
msgid "arp_validate"
msgstr ""

#: ../../../networking/bonding.rst:346
msgid ""
"Specifies whether or not ARP probes and replies should be validated in any "
"mode that supports arp monitoring, or whether non-ARP traffic should be "
"filtered (disregarded) for link monitoring purposes."
msgstr ""

#: ../../../networking/bonding.rst:351 ../../../networking/bonding.rst:441
#: ../../../networking/bonding.rst:492
msgid "Possible values are:"
msgstr ""

#: ../../../networking/bonding.rst:353 ../../../networking/bonding.rst:494
msgid "none or 0"
msgstr ""

#: ../../../networking/bonding.rst:355
msgid "No validation or filtering is performed."
msgstr ""

#: ../../../networking/bonding.rst:357 ../../../networking/bonding.rst:501
msgid "active or 1"
msgstr ""

#: ../../../networking/bonding.rst:359
msgid "Validation is performed only for the active slave."
msgstr ""

#: ../../../networking/bonding.rst:361
msgid "backup or 2"
msgstr ""

#: ../../../networking/bonding.rst:363
msgid "Validation is performed only for backup slaves."
msgstr ""

#: ../../../networking/bonding.rst:365
msgid "all or 3"
msgstr ""

#: ../../../networking/bonding.rst:367
msgid "Validation is performed for all slaves."
msgstr ""

#: ../../../networking/bonding.rst:369
msgid "filter or 4"
msgstr ""

#: ../../../networking/bonding.rst:371
msgid "Filtering is applied to all slaves. No validation is performed."
msgstr ""

#: ../../../networking/bonding.rst:374
msgid "filter_active or 5"
msgstr ""

#: ../../../networking/bonding.rst:376
msgid ""
"Filtering is applied to all slaves, validation is performed only for the "
"active slave."
msgstr ""

#: ../../../networking/bonding.rst:379
msgid "filter_backup or 6"
msgstr ""

#: ../../../networking/bonding.rst:381
msgid ""
"Filtering is applied to all slaves, validation is performed only for backup "
"slaves."
msgstr ""

#: ../../../networking/bonding.rst:384
msgid "Validation:"
msgstr ""

#: ../../../networking/bonding.rst:386
msgid ""
"Enabling validation causes the ARP monitor to examine the incoming ARP "
"requests and replies, and only consider a slave to be up if it is receiving "
"the appropriate ARP traffic."
msgstr ""

#: ../../../networking/bonding.rst:390
msgid ""
"For an active slave, the validation checks ARP replies to confirm that they "
"were generated by an arp_ip_target.  Since backup slaves do not typically "
"receive these replies, the validation performed for backup slaves is on the "
"broadcast ARP request sent out via the active slave.  It is possible that "
"some switch or network configurations may result in situations wherein the "
"backup slaves do not receive the ARP requests; in such a situation, "
"validation of backup slaves must be disabled."
msgstr ""

#: ../../../networking/bonding.rst:399
msgid ""
"The validation of ARP requests on backup slaves is mainly helping bonding to "
"decide which slaves are more likely to work in case of the active slave "
"failure, it doesn't really guarantee that the backup slave will work if it's "
"selected as the next active slave."
msgstr ""

#: ../../../networking/bonding.rst:404
msgid ""
"Validation is useful in network configurations in which multiple bonding "
"hosts are concurrently issuing ARPs to one or more targets beyond a common "
"switch.  Should the link between the switch and target fail (but not the "
"switch itself), the probe traffic generated by the multiple bonding "
"instances will fool the standard ARP monitor into considering the links as "
"still up.  Use of validation can resolve this, as the ARP monitor will only "
"consider ARP requests and replies associated with its own instance of "
"bonding."
msgstr ""

#: ../../../networking/bonding.rst:414
msgid "Filtering:"
msgstr ""

#: ../../../networking/bonding.rst:416
msgid ""
"Enabling filtering causes the ARP monitor to only use incoming ARP packets "
"for link availability purposes.  Arriving packets that are not ARPs are "
"delivered normally, but do not count when determining if a slave is "
"available."
msgstr ""

#: ../../../networking/bonding.rst:421
msgid ""
"Filtering operates by only considering the reception of ARP packets (any ARP "
"packet, regardless of source or destination) when determining if a slave has "
"received traffic for link availability purposes."
msgstr ""

#: ../../../networking/bonding.rst:426
msgid ""
"Filtering is useful in network configurations in which significant levels of "
"third party broadcast traffic would fool the standard ARP monitor into "
"considering the links as still up.  Use of filtering can resolve this, as "
"only ARP traffic is considered for link availability purposes."
msgstr ""

#: ../../../networking/bonding.rst:432
msgid "This option was added in bonding version 3.1.0."
msgstr ""

#: ../../../networking/bonding.rst:434
msgid "arp_all_targets"
msgstr ""

#: ../../../networking/bonding.rst:436
msgid ""
"Specifies the quantity of arp_ip_targets that must be reachable in order for "
"the ARP monitor to consider a slave as being up. This option affects only "
"active-backup mode for slaves with arp_validation enabled."
msgstr ""

#: ../../../networking/bonding.rst:443
msgid "any or 0"
msgstr ""

#: ../../../networking/bonding.rst:445
msgid "consider the slave up only when any of the arp_ip_targets is reachable"
msgstr ""

#: ../../../networking/bonding.rst:448
msgid "all or 1"
msgstr ""

#: ../../../networking/bonding.rst:450
msgid "consider the slave up only when all of the arp_ip_targets are reachable"
msgstr ""

#: ../../../networking/bonding.rst:453
msgid "arp_missed_max"
msgstr ""

#: ../../../networking/bonding.rst:455
msgid ""
"Specifies the number of arp_interval monitor checks that must fail in order "
"for an interface to be marked down by the ARP monitor."
msgstr ""

#: ../../../networking/bonding.rst:458
msgid ""
"In order to provide orderly failover semantics, backup interfaces are "
"permitted an extra monitor check (i.e., they must fail arp_missed_max + 1 "
"times before being marked down)."
msgstr ""

#: ../../../networking/bonding.rst:462
msgid "The default value is 2, and the allowable range is 1 - 255."
msgstr ""

#: ../../../networking/bonding.rst:464
msgid "coupled_control"
msgstr ""

#: ../../../networking/bonding.rst:466
msgid ""
"Specifies whether the LACP state machine's MUX in the 802.3ad mode should "
"have separate Collecting and Distributing states."
msgstr ""

#: ../../../networking/bonding.rst:469
msgid ""
"This is by implementing the independent control state machine per IEEE "
"802.1AX-2008 5.4.15 in addition to the existing coupled control state "
"machine."
msgstr ""

#: ../../../networking/bonding.rst:473
msgid ""
"The default value is 1. This setting does not separate the Collecting and "
"Distributing states, maintaining the bond in coupled control."
msgstr ""

#: ../../../networking/bonding.rst:476
msgid "downdelay"
msgstr ""

#: ../../../networking/bonding.rst:478
msgid ""
"Specifies the time, in milliseconds, to wait before disabling a slave after "
"a link failure has been detected.  This option is only valid for the miimon "
"link monitor.  The downdelay value should be a multiple of the miimon value; "
"if not, it will be rounded down to the nearest multiple.  The default value "
"is 0."
msgstr ""

#: ../../../networking/bonding.rst:485
msgid "fail_over_mac"
msgstr ""

#: ../../../networking/bonding.rst:487
msgid ""
"Specifies whether active-backup mode should set all slaves to the same MAC "
"address at enslavement (the traditional behavior), or, when enabled, perform "
"special handling of the bond's MAC address in accordance with the selected "
"policy."
msgstr ""

#: ../../../networking/bonding.rst:496
msgid ""
"This setting disables fail_over_mac, and causes bonding to set all slaves of "
"an active-backup bond to the same MAC address at enslavement time.  This is "
"the default."
msgstr ""

#: ../../../networking/bonding.rst:503
msgid ""
"The \"active\" fail_over_mac policy indicates that the MAC address of the "
"bond should always be the MAC address of the currently active slave.  The "
"MAC address of the slaves is not changed; instead, the MAC address of the "
"bond changes during a failover."
msgstr ""

#: ../../../networking/bonding.rst:509
msgid ""
"This policy is useful for devices that cannot ever alter their MAC address, "
"or for devices that refuse incoming broadcasts with their own source MAC "
"(which interferes with the ARP monitor)."
msgstr ""

#: ../../../networking/bonding.rst:514
msgid ""
"The down side of this policy is that every device on the network must be "
"updated via gratuitous ARP, vs. just updating a switch or set of switches "
"(which often takes place for any traffic, not just ARP traffic, if the "
"switch snoops incoming traffic to update its tables) for the traditional "
"method.  If the gratuitous ARP is lost, communication may be disrupted."
msgstr ""

#: ../../../networking/bonding.rst:523
msgid ""
"When this policy is used in conjunction with the mii monitor, devices which "
"assert link up prior to being able to actually transmit and receive are "
"particularly susceptible to loss of the gratuitous ARP, and an appropriate "
"updelay setting may be required."
msgstr ""

#: ../../../networking/bonding.rst:529
msgid "follow or 2"
msgstr ""

#: ../../../networking/bonding.rst:531
msgid ""
"The \"follow\" fail_over_mac policy causes the MAC address of the bond to be "
"selected normally (normally the MAC address of the first slave added to the "
"bond). However, the second and subsequent slaves are not set to this MAC "
"address while they are in a backup role; a slave is programmed with the "
"bond's MAC address at failover time (and the formerly active slave receives "
"the newly active slave's MAC address)."
msgstr ""

#: ../../../networking/bonding.rst:540
msgid ""
"This policy is useful for multiport devices that either become confused or "
"incur a performance penalty when multiple ports are programmed with the same "
"MAC address."
msgstr ""

#: ../../../networking/bonding.rst:546
msgid ""
"The default policy is none, unless the first slave cannot change its MAC "
"address, in which case the active policy is selected by default."
msgstr ""

#: ../../../networking/bonding.rst:550
msgid ""
"This option may be modified via sysfs only when no slaves are present in the "
"bond."
msgstr ""

#: ../../../networking/bonding.rst:553
msgid ""
"This option was added in bonding version 3.2.0.  The \"follow\" policy was "
"added in bonding version 3.3.0."
msgstr ""

#: ../../../networking/bonding.rst:556
msgid "lacp_active"
msgstr ""

#: ../../../networking/bonding.rst:557
msgid "Option specifying whether to send LACPDU frames periodically."
msgstr ""

#: ../../../networking/bonding.rst:559
msgid "off or 0"
msgstr ""

#: ../../../networking/bonding.rst:560
msgid "LACPDU frames acts as \"speak when spoken to\"."
msgstr ""

#: ../../../networking/bonding.rst:562
msgid "on or 1"
msgstr ""

#: ../../../networking/bonding.rst:563
msgid ""
"LACPDU frames are sent along the configured links periodically. See "
"lacp_rate for more details."
msgstr ""

#: ../../../networking/bonding.rst:566
msgid "The default is on."
msgstr ""

#: ../../../networking/bonding.rst:568
msgid "lacp_rate"
msgstr ""

#: ../../../networking/bonding.rst:570
msgid ""
"Option specifying the rate in which we'll ask our link partner to transmit "
"LACPDU packets in 802.3ad mode.  Possible values are:"
msgstr ""

#: ../../../networking/bonding.rst:574
msgid "slow or 0"
msgstr ""

#: ../../../networking/bonding.rst:575
msgid "Request partner to transmit LACPDUs every 30 seconds"
msgstr ""

#: ../../../networking/bonding.rst:577
msgid "fast or 1"
msgstr ""

#: ../../../networking/bonding.rst:578
msgid "Request partner to transmit LACPDUs every 1 second"
msgstr ""

#: ../../../networking/bonding.rst:580
msgid "The default is slow."
msgstr ""

#: ../../../networking/bonding.rst:582
msgid "broadcast_neighbor"
msgstr ""

#: ../../../networking/bonding.rst:584
msgid ""
"Option specifying whether to broadcast ARP/ND packets to all active slaves.  "
"This option has no effect in modes other than 802.3ad mode.  The default is "
"off (0)."
msgstr ""

#: ../../../networking/bonding.rst:588
msgid "max_bonds"
msgstr ""

#: ../../../networking/bonding.rst:590
msgid ""
"Specifies the number of bonding devices to create for this instance of the "
"bonding driver.  E.g., if max_bonds is 3, and the bonding driver is not "
"already loaded, then bond0, bond1 and bond2 will be created.  The default "
"value is 1.  Specifying a value of 0 will load bonding, but will not create "
"any devices."
msgstr ""

#: ../../../networking/bonding.rst:596
msgid "miimon"
msgstr ""

#: ../../../networking/bonding.rst:598
msgid ""
"Specifies the MII link monitoring frequency in milliseconds. This determines "
"how often the link state of each slave is inspected for link failures.  A "
"value of zero disables MII link monitoring.  A value of 100 is a good "
"starting point."
msgstr ""

#: ../../../networking/bonding.rst:603
msgid "The default value is 100 if arp_interval is not set."
msgstr ""

#: ../../../networking/bonding.rst:605
msgid "min_links"
msgstr ""

#: ../../../networking/bonding.rst:607
msgid ""
"Specifies the minimum number of links that must be active before asserting "
"carrier. It is similar to the Cisco EtherChannel min-links feature. This "
"allows setting the minimum number of member ports that must be up (link-up "
"state) before marking the bond device as up (carrier on). This is useful for "
"situations where higher level services such as clustering want to ensure a "
"minimum number of low bandwidth links are active before switchover. This "
"option only affect 802.3ad mode."
msgstr ""

#: ../../../networking/bonding.rst:616
msgid ""
"The default value is 0. This will cause carrier to be asserted (for 802.3ad "
"mode) whenever there is an active aggregator, regardless of the number of "
"available links in that aggregator. Note that, because an aggregator cannot "
"be active without at least one available link, setting this option to 0 or "
"to 1 has the exact same effect."
msgstr ""

#: ../../../networking/bonding.rst:622
msgid "mode"
msgstr ""

#: ../../../networking/bonding.rst:624
msgid ""
"Specifies one of the bonding policies. The default is balance-rr (round "
"robin).  Possible values are:"
msgstr ""

#: ../../../networking/bonding.rst:627
msgid "balance-rr or 0"
msgstr ""

#: ../../../networking/bonding.rst:629
msgid ""
"Round-robin policy: Transmit packets in sequential order from the first "
"available slave through the last.  This mode provides load balancing and "
"fault tolerance."
msgstr ""

#: ../../../networking/bonding.rst:634
msgid "active-backup or 1"
msgstr ""

#: ../../../networking/bonding.rst:636
msgid ""
"Active-backup policy: Only one slave in the bond is active.  A different "
"slave becomes active if, and only if, the active slave fails.  The bond's "
"MAC address is externally visible on only one port (network adapter) to "
"avoid confusing the switch."
msgstr ""

#: ../../../networking/bonding.rst:642
msgid ""
"In bonding version 2.6.2 or later, when a failover occurs in active-backup "
"mode, bonding will issue one or more gratuitous ARPs on the newly active "
"slave. One gratuitous ARP is issued for the bonding master interface and "
"each VLAN interfaces configured above it, provided that the interface has at "
"least one IP address configured.  Gratuitous ARPs issued for VLAN interfaces "
"are tagged with the appropriate VLAN id."
msgstr ""

#: ../../../networking/bonding.rst:651
msgid ""
"This mode provides fault tolerance.  The primary option, documented below, "
"affects the behavior of this mode."
msgstr ""

#: ../../../networking/bonding.rst:655
msgid "balance-xor or 2"
msgstr ""

#: ../../../networking/bonding.rst:657
msgid ""
"XOR policy: Transmit based on the selected transmit hash policy.  The "
"default policy is a simple [(source MAC address XOR'd with destination MAC "
"address XOR packet type ID) modulo slave count].  Alternate transmit "
"policies may be selected via the xmit_hash_policy option, described below."
msgstr ""

#: ../../../networking/bonding.rst:664
msgid "This mode provides load balancing and fault tolerance."
msgstr ""

#: ../../../networking/bonding.rst:666
msgid "broadcast or 3"
msgstr ""

#: ../../../networking/bonding.rst:668
msgid ""
"Broadcast policy: transmits everything on all slave interfaces.  This mode "
"provides fault tolerance."
msgstr ""

#: ../../../networking/bonding.rst:671
msgid "802.3ad or 4"
msgstr ""

#: ../../../networking/bonding.rst:673
msgid ""
"IEEE 802.3ad Dynamic link aggregation.  Creates aggregation groups that "
"share the same speed and duplex settings.  Utilizes all slaves in the active "
"aggregator according to the 802.3ad specification."
msgstr ""

#: ../../../networking/bonding.rst:678
msgid ""
"Slave selection for outgoing traffic is done according to the transmit hash "
"policy, which may be changed from the default simple XOR policy via the "
"xmit_hash_policy option, documented below.  Note that not all transmit "
"policies may be 802.3ad compliant, particularly in regards to the packet mis-"
"ordering requirements of section 43.2.4 of the 802.3ad standard.  Differing "
"peer implementations will have varying tolerances for noncompliance."
msgstr ""

#: ../../../networking/bonding.rst:688 ../../../networking/bonding.rst:764
msgid "Prerequisites:"
msgstr ""

#: ../../../networking/bonding.rst:690
msgid ""
"1. Ethtool support in the base drivers for retrieving the speed and duplex "
"of each slave."
msgstr ""

#: ../../../networking/bonding.rst:693
msgid "2. A switch that supports IEEE 802.3ad Dynamic link aggregation."
msgstr ""

#: ../../../networking/bonding.rst:696
msgid ""
"Most switches will require some type of configuration to enable 802.3ad mode."
msgstr ""

#: ../../../networking/bonding.rst:699
msgid "balance-tlb or 5"
msgstr ""

#: ../../../networking/bonding.rst:701
msgid ""
"Adaptive transmit load balancing: channel bonding that does not require any "
"special switch support."
msgstr ""

#: ../../../networking/bonding.rst:704
msgid ""
"In tlb_dynamic_lb=1 mode; the outgoing traffic is distributed according to "
"the current load (computed relative to the speed) on each slave."
msgstr ""

#: ../../../networking/bonding.rst:708
msgid ""
"In tlb_dynamic_lb=0 mode; the load balancing based on current load is "
"disabled and the load is distributed only using the hash distribution."
msgstr ""

#: ../../../networking/bonding.rst:712
msgid ""
"Incoming traffic is received by the current slave. If the receiving slave "
"fails, another slave takes over the MAC address of the failed receiving "
"slave."
msgstr ""

#: ../../../networking/bonding.rst:716
msgid "Prerequisite:"
msgstr ""

#: ../../../networking/bonding.rst:718
msgid ""
"Ethtool support in the base drivers for retrieving the speed of each slave."
msgstr ""

#: ../../../networking/bonding.rst:721
msgid "balance-alb or 6"
msgstr ""

#: ../../../networking/bonding.rst:723
msgid ""
"Adaptive load balancing: includes balance-tlb plus receive load balancing "
"(rlb) for IPV4 traffic, and does not require any special switch support.  "
"The receive load balancing is achieved by ARP negotiation. The bonding "
"driver intercepts the ARP Replies sent by the local system on their way out "
"and overwrites the source hardware address with the unique hardware address "
"of one of the slaves in the bond such that different peers use different "
"hardware addresses for the server."
msgstr ""

#: ../../../networking/bonding.rst:734
msgid ""
"Receive traffic from connections created by the server is also balanced.  "
"When the local system sends an ARP Request the bonding driver copies and "
"saves the peer's IP information from the ARP packet.  When the ARP Reply "
"arrives from the peer, its hardware address is retrieved and the bonding "
"driver initiates an ARP reply to this peer assigning it to one of the slaves "
"in the bond.  A problematic outcome of using ARP negotiation for balancing "
"is that each time that an ARP request is broadcast it uses the hardware "
"address of the bond.  Hence, peers learn the hardware address of the bond "
"and the balancing of receive traffic collapses to the current slave.  This "
"is handled by sending updates (ARP Replies) to all the peers with their "
"individually assigned hardware address such that the traffic is "
"redistributed.  Receive traffic is also redistributed when a new slave is "
"added to the bond and when an inactive slave is re-activated.  The receive "
"load is distributed sequentially (round robin) among the group of highest "
"speed slaves in the bond."
msgstr ""

#: ../../../networking/bonding.rst:755
msgid ""
"When a link is reconnected or a new slave joins the bond the receive traffic "
"is redistributed among all active slaves in the bond by initiating ARP "
"Replies with the selected MAC address to each of the clients. The updelay "
"parameter (detailed below) must be set to a value equal or greater than the "
"switch's forwarding delay so that the ARP Replies sent to the peers will not "
"be blocked by the switch."
msgstr ""

#: ../../../networking/bonding.rst:766
msgid ""
"1. Ethtool support in the base drivers for retrieving the speed of each "
"slave."
msgstr ""

#: ../../../networking/bonding.rst:769
msgid ""
"2. Base driver support for setting the hardware address of a device while it "
"is open.  This is required so that there will always be one slave in the "
"team using the bond hardware address (the curr_active_slave) while having a "
"unique hardware address for each slave in the bond.  If the "
"curr_active_slave fails its hardware address is swapped with the new "
"curr_active_slave that was chosen."
msgstr ""

#: ../../../networking/bonding.rst:779
msgid "num_grat_arp, num_unsol_na"
msgstr ""

#: ../../../networking/bonding.rst:782
msgid ""
"Specify the number of peer notifications (gratuitous ARPs and unsolicited "
"IPv6 Neighbor Advertisements) to be issued after a failover event.  As soon "
"as the link is up on the new slave (possibly immediately) a peer "
"notification is sent on the bonding device and each VLAN sub-device. This is "
"repeated at the rate specified by peer_notif_delay if the number is greater "
"than 1."
msgstr ""

#: ../../../networking/bonding.rst:790
msgid ""
"The valid range is 0 - 255; the default value is 1.  These options affect "
"the active-backup or 802.3ad (broadcast_neighbor enabled) mode. These "
"options were added for bonding versions 3.3.0 and 3.4.0 respectively."
msgstr ""

#: ../../../networking/bonding.rst:795
msgid ""
"From Linux 3.0 and bonding version 3.7.1, these notifications are generated "
"by the ipv4 and ipv6 code and the numbers of repetitions cannot be set "
"independently."
msgstr ""

#: ../../../networking/bonding.rst:799
msgid "packets_per_slave"
msgstr ""

#: ../../../networking/bonding.rst:801
msgid ""
"Specify the number of packets to transmit through a slave before moving to "
"the next one. When set to 0 then a slave is chosen at random."
msgstr ""

#: ../../../networking/bonding.rst:805
msgid ""
"The valid range is 0 - 65535; the default value is 1. This option has effect "
"only in balance-rr mode."
msgstr ""

#: ../../../networking/bonding.rst:808
msgid "peer_notif_delay"
msgstr ""

#: ../../../networking/bonding.rst:810
msgid ""
"Specify the delay, in milliseconds, between each peer notification "
"(gratuitous ARP and unsolicited IPv6 Neighbor Advertisement) when they are "
"issued after a failover event. This delay should be a multiple of the MII "
"link monitor interval (miimon)."
msgstr ""

#: ../../../networking/bonding.rst:816
msgid ""
"The valid range is 0 - 300000. The default value is 0, which means to match "
"the value of the MII link monitor interval."
msgstr ""

#: ../../../networking/bonding.rst:819
msgid "prio"
msgstr ""

#: ../../../networking/bonding.rst:820
msgid ""
"Slave priority. A higher number means higher priority. The primary slave has "
"the highest priority. This option also follows the primary_reselect rules."
msgstr ""

#: ../../../networking/bonding.rst:824
msgid ""
"This option could only be configured via netlink, and is only valid for "
"active-backup(1), balance-tlb (5) and balance-alb (6) mode. The valid value "
"range is a signed 32 bit integer."
msgstr ""

#: ../../../networking/bonding.rst:828
msgid "The default value is 0."
msgstr ""

#: ../../../networking/bonding.rst:830
msgid "primary"
msgstr ""

#: ../../../networking/bonding.rst:832
msgid ""
"A string (eth0, eth2, etc) specifying which slave is the primary device.  "
"The specified device will always be the active slave while it is available.  "
"Only when the primary is off-line will alternate devices be used.  This is "
"useful when one slave is preferred over another, e.g., when one slave has "
"higher throughput than another."
msgstr ""

#: ../../../networking/bonding.rst:839
msgid ""
"The primary option is only valid for active-backup(1), balance-tlb (5) and "
"balance-alb (6) mode."
msgstr ""

#: ../../../networking/bonding.rst:842
msgid "primary_reselect"
msgstr ""

#: ../../../networking/bonding.rst:844
msgid ""
"Specifies the reselection policy for the primary slave.  This affects how "
"the primary slave is chosen to become the active slave when failure of the "
"active slave or recovery of the primary slave occurs.  This option is "
"designed to prevent flip-flopping between the primary slave and other "
"slaves.  Possible values are:"
msgstr ""

#: ../../../networking/bonding.rst:850
msgid "always or 0 (default)"
msgstr ""

#: ../../../networking/bonding.rst:852
msgid "The primary slave becomes the active slave whenever it comes back up."
msgstr ""

#: ../../../networking/bonding.rst:855
msgid "better or 1"
msgstr ""

#: ../../../networking/bonding.rst:857
msgid ""
"The primary slave becomes the active slave when it comes back up, if the "
"speed and duplex of the primary slave is better than the speed and duplex of "
"the current active slave."
msgstr ""

#: ../../../networking/bonding.rst:862
msgid "failure or 2"
msgstr ""

#: ../../../networking/bonding.rst:864
msgid ""
"The primary slave becomes the active slave only if the current active slave "
"fails and the primary slave is up."
msgstr ""

#: ../../../networking/bonding.rst:867
msgid "The primary_reselect setting is ignored in two cases:"
msgstr ""

#: ../../../networking/bonding.rst:869
msgid ""
"If no slaves are active, the first slave to recover is made the active slave."
msgstr ""

#: ../../../networking/bonding.rst:872
msgid ""
"When initially enslaved, the primary slave is always made the active slave."
msgstr ""

#: ../../../networking/bonding.rst:875
msgid ""
"Changing the primary_reselect policy via sysfs will cause an immediate "
"selection of the best active slave according to the new policy.  This may or "
"may not result in a change of the active slave, depending upon the "
"circumstances."
msgstr ""

#: ../../../networking/bonding.rst:880
msgid "This option was added for bonding version 3.6.0."
msgstr ""

#: ../../../networking/bonding.rst:882
msgid "tlb_dynamic_lb"
msgstr ""

#: ../../../networking/bonding.rst:884
msgid ""
"Specifies if dynamic shuffling of flows is enabled in tlb or alb mode. The "
"value has no effect on any other modes."
msgstr ""

#: ../../../networking/bonding.rst:887
msgid ""
"The default behavior of tlb mode is to shuffle active flows across slaves "
"based on the load in that interval. This gives nice lb characteristics but "
"can cause packet reordering. If re-ordering is a concern use this variable "
"to disable flow shuffling and rely on load balancing provided solely by the "
"hash distribution. xmit-hash-policy can be used to select the appropriate "
"hashing for the setup."
msgstr ""

#: ../../../networking/bonding.rst:895
msgid ""
"The sysfs entry can be used to change the setting per bond device and the "
"initial value is derived from the module parameter. The sysfs entry is "
"allowed to be changed only if the bond device is down."
msgstr ""

#: ../../../networking/bonding.rst:900
msgid ""
"The default value is \"1\" that enables flow shuffling while value \"0\" "
"disables it. This option was added in bonding driver 3.7.1"
msgstr ""

#: ../../../networking/bonding.rst:904
msgid "updelay"
msgstr ""

#: ../../../networking/bonding.rst:906
msgid ""
"Specifies the time, in milliseconds, to wait before enabling a slave after a "
"link recovery has been detected.  This option is only valid for the miimon "
"link monitor.  The updelay value should be a multiple of the miimon value; "
"if not, it will be rounded down to the nearest multiple.  The default value "
"is 0."
msgstr ""

#: ../../../networking/bonding.rst:912
msgid "use_carrier"
msgstr ""

#: ../../../networking/bonding.rst:914
msgid ""
"Obsolete option that previously selected between MII / ETHTOOL ioctls and "
"netif_carrier_ok() to determine link state."
msgstr ""

#: ../../../networking/bonding.rst:918
msgid "All link state checks are now done with netif_carrier_ok()."
msgstr ""

#: ../../../networking/bonding.rst:920
msgid ""
"For backwards compatibility, this option's value may be inspected or set.  "
"The only valid setting is 1."
msgstr ""

#: ../../../networking/bonding.rst:923
msgid "xmit_hash_policy"
msgstr ""

#: ../../../networking/bonding.rst:925
msgid ""
"Selects the transmit hash policy to use for slave selection in balance-xor, "
"802.3ad, and tlb modes.  Possible values are:"
msgstr ""

#: ../../../networking/bonding.rst:928
msgid "layer2"
msgstr ""

#: ../../../networking/bonding.rst:930
msgid ""
"Uses XOR of hardware MAC addresses and packet type ID field to generate the "
"hash. The formula is"
msgstr ""

#: ../../../networking/bonding.rst:933
msgid ""
"hash = source MAC[5] XOR destination MAC[5] XOR packet type ID slave number "
"= hash modulo slave count"
msgstr ""

#: ../../../networking/bonding.rst:936
msgid ""
"This algorithm will place all traffic to a particular network peer on the "
"same slave."
msgstr ""

#: ../../../networking/bonding.rst:939 ../../../networking/bonding.rst:968
msgid "This algorithm is 802.3ad compliant."
msgstr ""

#: ../../../networking/bonding.rst:941
msgid "layer2+3"
msgstr ""

#: ../../../networking/bonding.rst:943
msgid ""
"This policy uses a combination of layer2 and layer3 protocol information to "
"generate the hash."
msgstr ""

#: ../../../networking/bonding.rst:946
msgid ""
"Uses XOR of hardware MAC addresses and IP addresses to generate the hash.  "
"The formula is"
msgstr ""

#: ../../../networking/bonding.rst:949
msgid ""
"hash = source MAC[5] XOR destination MAC[5] XOR packet type ID hash = hash "
"XOR source IP XOR destination IP hash = hash XOR (hash RSHIFT 16) hash = "
"hash XOR (hash RSHIFT 8) And then hash is reduced modulo slave count."
msgstr ""

#: ../../../networking/bonding.rst:955 ../../../networking/bonding.rst:987
msgid ""
"If the protocol is IPv6 then the source and destination addresses are first "
"hashed using ipv6_addr_hash."
msgstr ""

#: ../../../networking/bonding.rst:958
msgid ""
"This algorithm will place all traffic to a particular network peer on the "
"same slave.  For non-IP traffic, the formula is the same as for the layer2 "
"transmit hash policy."
msgstr ""

#: ../../../networking/bonding.rst:963
msgid ""
"This policy is intended to provide a more balanced distribution of traffic "
"than layer2 alone, especially in environments where a layer3 gateway device "
"is required to reach most destinations."
msgstr ""

#: ../../../networking/bonding.rst:970
msgid "layer3+4"
msgstr ""

#: ../../../networking/bonding.rst:972
msgid ""
"This policy uses upper layer protocol information, when available, to "
"generate the hash.  This allows for traffic to a particular network peer to "
"span multiple slaves, although a single connection will not span multiple "
"slaves."
msgstr ""

#: ../../../networking/bonding.rst:978
msgid "The formula for unfragmented TCP and UDP packets is"
msgstr ""

#: ../../../networking/bonding.rst:980
msgid ""
"hash = source port, destination port (as in the header) hash = hash XOR "
"source IP XOR destination IP hash = hash XOR (hash RSHIFT 16) hash = hash "
"XOR (hash RSHIFT 8) hash = hash RSHIFT 1 And then hash is reduced modulo "
"slave count."
msgstr ""

#: ../../../networking/bonding.rst:990
msgid ""
"For fragmented TCP or UDP packets and all other IPv4 and IPv6 protocol "
"traffic, the source and destination port information is omitted.  For non-IP "
"traffic, the formula is the same as for the layer2 transmit hash policy."
msgstr ""

#: ../../../networking/bonding.rst:996
msgid ""
"This algorithm is not fully 802.3ad compliant.  A single TCP or UDP "
"conversation containing both fragmented and unfragmented packets will see "
"packets striped across two interfaces.  This may result in out of order "
"delivery.  Most traffic types will not meet this criteria, as TCP rarely "
"fragments traffic, and most UDP traffic is not involved in extended "
"conversations.  Other implementations of 802.3ad may or may not tolerate "
"this noncompliance."
msgstr ""

#: ../../../networking/bonding.rst:1006
msgid "encap2+3"
msgstr ""

#: ../../../networking/bonding.rst:1008
msgid ""
"This policy uses the same formula as layer2+3 but it relies on "
"skb_flow_dissect to obtain the header fields which might result in the use "
"of inner headers if an encapsulation protocol is used. For example this will "
"improve the performance for tunnel users because the packets will be "
"distributed according to the encapsulated flows."
msgstr ""

#: ../../../networking/bonding.rst:1016
msgid "encap3+4"
msgstr ""

#: ../../../networking/bonding.rst:1018
msgid ""
"This policy uses the same formula as layer3+4 but it relies on "
"skb_flow_dissect to obtain the header fields which might result in the use "
"of inner headers if an encapsulation protocol is used. For example this will "
"improve the performance for tunnel users because the packets will be "
"distributed according to the encapsulated flows."
msgstr ""

#: ../../../networking/bonding.rst:1026
msgid "vlan+srcmac"
msgstr ""

#: ../../../networking/bonding.rst:1028
msgid ""
"This policy uses a very rudimentary vlan ID and source mac hash to load-"
"balance traffic per-vlan, with failover should one leg fail. The intended "
"use case is for a bond shared by multiple virtual machines, all configured "
"to use their own vlan, to give lacp-like functionality without requiring "
"lacp-capable switching hardware."
msgstr ""

#: ../../../networking/bonding.rst:1035
msgid "The formula for the hash is simply"
msgstr ""

#: ../../../networking/bonding.rst:1037
msgid "hash = (vlan ID) XOR (source MAC vendor) XOR (source MAC dev)"
msgstr ""

#: ../../../networking/bonding.rst:1039
msgid ""
"The default value is layer2.  This option was added in bonding version "
"2.6.3.  In earlier versions of bonding, this parameter does not exist, and "
"the layer2 policy is the only policy.  The layer2+3 value was added for "
"bonding version 3.2.2."
msgstr ""

#: ../../../networking/bonding.rst:1044
msgid "resend_igmp"
msgstr ""

#: ../../../networking/bonding.rst:1046
msgid ""
"Specifies the number of IGMP membership reports to be issued after a "
"failover event. One membership report is issued immediately after the "
"failover, subsequent packets are sent in each 200ms interval."
msgstr ""

#: ../../../networking/bonding.rst:1050
msgid ""
"The valid range is 0 - 255; the default value is 1. A value of 0 prevents "
"the IGMP membership report from being issued in response to the failover "
"event."
msgstr ""

#: ../../../networking/bonding.rst:1054
msgid ""
"This option is useful for bonding modes balance-rr (0), active-backup (1), "
"balance-tlb (5) and balance-alb (6), in which a failover can switch the IGMP "
"traffic from one slave to another.  Therefore a fresh IGMP report must be "
"issued to cause the switch to forward the incoming IGMP traffic over the "
"newly selected slave."
msgstr ""

#: ../../../networking/bonding.rst:1060
msgid "This option was added for bonding version 3.7.0."
msgstr ""

#: ../../../networking/bonding.rst:1062
msgid "lp_interval"
msgstr ""

#: ../../../networking/bonding.rst:1064
msgid ""
"Specifies the number of seconds between instances where the bonding driver "
"sends learning packets to each slaves peer switch."
msgstr ""

#: ../../../networking/bonding.rst:1067
msgid ""
"The valid range is 1 - 0x7fffffff; the default value is 1. This Option has "
"effect only in balance-tlb and balance-alb modes."
msgstr ""

#: ../../../networking/bonding.rst:1071
msgid "3. Configuring Bonding Devices"
msgstr ""

#: ../../../networking/bonding.rst:1073
msgid ""
"You can configure bonding using either your distro's network initialization "
"scripts, or manually using either iproute2 or the sysfs interface.  Distros "
"generally use one of three packages for the network initialization scripts: "
"initscripts, sysconfig or interfaces. Recent versions of these packages have "
"support for bonding, while older versions do not."
msgstr ""

#: ../../../networking/bonding.rst:1080
msgid ""
"We will first describe the options for configuring bonding for distros using "
"versions of initscripts, sysconfig and interfaces with full or partial "
"support for bonding, then provide information on enabling bonding without "
"support from the network initialization scripts (i.e., older versions of "
"initscripts or sysconfig)."
msgstr ""

#: ../../../networking/bonding.rst:1086
msgid ""
"If you're unsure whether your distro uses sysconfig, initscripts or "
"interfaces, or don't know if it's new enough, have no fear. Determining this "
"is fairly straightforward."
msgstr ""

#: ../../../networking/bonding.rst:1090
msgid ""
"First, look for a file called interfaces in /etc/network directory. If this "
"file is present in your system, then your system use interfaces. See "
"Configuration with Interfaces Support."
msgstr ""

#: ../../../networking/bonding.rst:1094
msgid "Else, issue the command::"
msgstr ""

#: ../../../networking/bonding.rst:1098
msgid ""
"It will respond with a line of text starting with either \"initscripts\" or "
"\"sysconfig,\" followed by some numbers.  This is the package that provides "
"your network initialization scripts."
msgstr ""

#: ../../../networking/bonding.rst:1102
msgid ""
"Next, to determine if your installation supports bonding, issue the command::"
msgstr ""

#: ../../../networking/bonding.rst:1107
msgid ""
"If this returns any matches, then your initscripts or sysconfig has support "
"for bonding."
msgstr ""

#: ../../../networking/bonding.rst:1111
msgid "3.1 Configuration with Sysconfig Support"
msgstr ""

#: ../../../networking/bonding.rst:1113
msgid ""
"This section applies to distros using a version of sysconfig with bonding "
"support, for example, SuSE Linux Enterprise Server 9."
msgstr ""

#: ../../../networking/bonding.rst:1116
msgid ""
"SuSE SLES 9's networking configuration system does support bonding, however, "
"at this writing, the YaST system configuration front end does not provide "
"any means to work with bonding devices. Bonding devices can be managed by "
"hand, however, as follows."
msgstr ""

#: ../../../networking/bonding.rst:1121
msgid ""
"First, if they have not already been configured, configure the slave "
"devices.  On SLES 9, this is most easily done by running the yast2 sysconfig "
"configuration utility.  The goal is for to create an ifcfg-id file for each "
"slave device.  The simplest way to accomplish this is to configure the "
"devices for DHCP (this is only to get the file ifcfg-id file created; see "
"below for some issues with DHCP).  The name of the configuration file for "
"each device will be of the form::"
msgstr ""

#: ../../../networking/bonding.rst:1131
msgid ""
"Where the \"xx\" portion will be replaced with the digits from the device's "
"permanent MAC address."
msgstr ""

#: ../../../networking/bonding.rst:1134
msgid ""
"Once the set of ifcfg-id-xx:xx:xx:xx:xx:xx files has been created, it is "
"necessary to edit the configuration files for the slave devices (the MAC "
"addresses correspond to those of the slave devices). Before editing, the "
"file will contain multiple lines, and will look something like this::"
msgstr ""

#: ../../../networking/bonding.rst:1146
msgid "Change the BOOTPROTO and STARTMODE lines to the following::"
msgstr ""

#: ../../../networking/bonding.rst:1151
msgid ""
"Do not alter the UNIQUE or _nm_name lines.  Remove any other lines (USERCTL, "
"etc)."
msgstr ""

#: ../../../networking/bonding.rst:1154
msgid ""
"Once the ifcfg-id-xx:xx:xx:xx:xx:xx files have been modified, it's time to "
"create the configuration file for the bonding device itself.  This file is "
"named ifcfg-bondX, where X is the number of the bonding device to create, "
"starting at 0.  The first such file is ifcfg-bond0, the second is ifcfg-"
"bond1, and so on.  The sysconfig network configuration system will correctly "
"start multiple instances of bonding."
msgstr ""

#: ../../../networking/bonding.rst:1162
msgid "The contents of the ifcfg-bondX file is as follows::"
msgstr ""

#: ../../../networking/bonding.rst:1176
msgid ""
"Replace the sample BROADCAST, IPADDR, NETMASK and NETWORK values with the "
"appropriate values for your network."
msgstr ""

#: ../../../networking/bonding.rst:1179
msgid ""
"The STARTMODE specifies when the device is brought online. The possible "
"values are:"
msgstr ""

#: ../../../networking/bonding.rst:1183
msgid "onboot"
msgstr ""

#: ../../../networking/bonding.rst:1183
msgid ""
"The device is started at boot time.  If you're not sure, this is probably "
"what you want."
msgstr ""

#: ../../../networking/bonding.rst:1186
msgid "manual"
msgstr ""

#: ../../../networking/bonding.rst:1186
msgid ""
"The device is started only when ifup is called manually.  Bonding devices "
"may be configured this way if you do not wish them to start automatically at "
"boot for some reason."
msgstr ""

#: ../../../networking/bonding.rst:1191
msgid "hotplug"
msgstr ""

#: ../../../networking/bonding.rst:1191
msgid ""
"The device is started by a hotplug event.  This is not a valid choice for a "
"bonding device."
msgstr ""

#: ../../../networking/bonding.rst:1194
msgid "off or"
msgstr ""

#: ../../../networking/bonding.rst:1194
msgid "The device configuration is ignored."
msgstr ""

#: ../../../networking/bonding.rst:1195
msgid "ignore"
msgstr ""

#: ../../../networking/bonding.rst:1198
msgid ""
"The line BONDING_MASTER='yes' indicates that the device is a bonding master "
"device.  The only useful value is \"yes.\""
msgstr ""

#: ../../../networking/bonding.rst:1201
msgid ""
"The contents of BONDING_MODULE_OPTS are supplied to the instance of the "
"bonding module for this device.  Specify the options for the bonding mode, "
"link monitoring, and so on here.  Do not include the max_bonds bonding "
"parameter; this will confuse the configuration system if you have multiple "
"bonding devices."
msgstr ""

#: ../../../networking/bonding.rst:1207
msgid ""
"Finally, supply one BONDING_SLAVEn=\"slave device\" for each slave.  where "
"\"n\" is an increasing value, one for each slave.  The \"slave device\" is "
"either an interface name, e.g., \"eth0\", or a device specifier for the "
"network device.  The interface name is easier to find, but the ethN names "
"are subject to change at boot time if, e.g., a device early in the sequence "
"has failed.  The device specifiers (bus-pci-0000:06:08.1 in the example "
"above) specify the physical network device, and will not change unless the "
"device's bus location changes (for example, it is moved from one PCI slot to "
"another).  The example above uses one of each type for demonstration "
"purposes; most configurations will choose one or the other for all slave "
"devices."
msgstr ""

#: ../../../networking/bonding.rst:1219
msgid ""
"When all configuration files have been modified or created, networking must "
"be restarted for the configuration changes to take effect.  This can be "
"accomplished via the following::"
msgstr ""

#: ../../../networking/bonding.rst:1225
msgid ""
"Note that the network control script (/sbin/ifdown) will remove the bonding "
"module as part of the network shutdown processing, so it is not necessary to "
"remove the module by hand if, e.g., the module parameters have changed."
msgstr ""

#: ../../../networking/bonding.rst:1230
msgid ""
"Also, at this writing, YaST/YaST2 will not manage bonding devices (they do "
"not show bonding interfaces on its list of network devices).  It is "
"necessary to edit the configuration file by hand to change the bonding "
"configuration."
msgstr ""

#: ../../../networking/bonding.rst:1235
msgid ""
"Additional general options and details of the ifcfg file format can be found "
"in an example ifcfg template file::"
msgstr ""

#: ../../../networking/bonding.rst:1240
msgid ""
"Note that the template does not document the various ``BONDING_*`` settings "
"described above, but does describe many of the other options."
msgstr ""

#: ../../../networking/bonding.rst:1244
msgid "3.1.1 Using DHCP with Sysconfig"
msgstr ""

#: ../../../networking/bonding.rst:1246
msgid ""
"Under sysconfig, configuring a device with BOOTPROTO='dhcp' will cause it to "
"query DHCP for its IP address information.  At this writing, this does not "
"function for bonding devices; the scripts attempt to obtain the device "
"address from DHCP prior to adding any of the slave devices.  Without active "
"slaves, the DHCP requests are not sent to the network."
msgstr ""

#: ../../../networking/bonding.rst:1254
msgid "3.1.2 Configuring Multiple Bonds with Sysconfig"
msgstr ""

#: ../../../networking/bonding.rst:1256
msgid ""
"The sysconfig network initialization system is capable of handling multiple "
"bonding devices.  All that is necessary is for each bonding instance to have "
"an appropriately configured ifcfg-bondX file (as described above).  Do not "
"specify the \"max_bonds\" parameter to any instance of bonding, as this will "
"confuse sysconfig.  If you require multiple bonding devices with identical "
"parameters, create multiple ifcfg-bondX files."
msgstr ""

#: ../../../networking/bonding.rst:1264
msgid ""
"Because the sysconfig scripts supply the bonding module options in the ifcfg-"
"bondX file, it is not necessary to add them to the system ``/etc/modules.d/*."
"conf`` configuration files."
msgstr ""

#: ../../../networking/bonding.rst:1269
msgid "3.2 Configuration with Initscripts Support"
msgstr ""

#: ../../../networking/bonding.rst:1271
msgid ""
"This section applies to distros using a recent version of initscripts with "
"bonding support, for example, Red Hat Enterprise Linux version 3 or later, "
"Fedora, etc.  On these systems, the network initialization scripts have "
"knowledge of bonding, and can be configured to control bonding devices.  "
"Note that older versions of the initscripts package have lower levels of "
"support for bonding; this will be noted where applicable."
msgstr ""

#: ../../../networking/bonding.rst:1279
msgid ""
"These distros will not automatically load the network adapter driver unless "
"the ethX device is configured with an IP address. Because of this "
"constraint, users must manually configure a network-script file for all "
"physical adapters that will be members of a bondX link.  Network script "
"files are located in the directory:"
msgstr ""

#: ../../../networking/bonding.rst:1285
msgid "/etc/sysconfig/network-scripts"
msgstr ""

#: ../../../networking/bonding.rst:1287
msgid ""
"The file name must be prefixed with \"ifcfg-eth\" and suffixed with the "
"adapter's physical adapter number.  For example, the script for eth0 would "
"be named /etc/sysconfig/network-scripts/ifcfg-eth0. Place the following text "
"in the file::"
msgstr ""

#: ../../../networking/bonding.rst:1299
msgid ""
"The DEVICE= line will be different for every ethX device and must correspond "
"with the name of the file, i.e., ifcfg-eth1 must have a device line of "
"DEVICE=eth1.  The setting of the MASTER= line will also depend on the final "
"bonding interface name chosen for your bond. As with other network devices, "
"these typically start at 0, and go up one for each device, i.e., the first "
"bonding instance is bond0, the second is bond1, and so on."
msgstr ""

#: ../../../networking/bonding.rst:1307
msgid ""
"Next, create a bond network script.  The file name for this script will be /"
"etc/sysconfig/network-scripts/ifcfg-bondX where X is the number of the "
"bond.  For bond0 the file is named \"ifcfg-bond0\", for bond1 it is named "
"\"ifcfg-bond1\", and so on.  Within that file, place the following text::"
msgstr ""

#: ../../../networking/bonding.rst:1322
msgid ""
"Be sure to change the networking specific lines (IPADDR, NETMASK, NETWORK "
"and BROADCAST) to match your network configuration."
msgstr ""

#: ../../../networking/bonding.rst:1325
msgid ""
"For later versions of initscripts, such as that found with Fedora 7 (or "
"later) and Red Hat Enterprise Linux version 5 (or later), it is possible, "
"and, indeed, preferable, to specify the bonding options in the ifcfg-bond0 "
"file, e.g. a line of the format::"
msgstr ""

#: ../../../networking/bonding.rst:1332
msgid ""
"will configure the bond with the specified options.  The options specified "
"in BONDING_OPTS are identical to the bonding module parameters except for "
"the arp_ip_target field when using versions of initscripts older than and "
"8.57 (Fedora 8) and 8.45.19 (Red Hat Enterprise Linux 5.2).  When using "
"older versions each target should be included as a separate option and "
"should be preceded by a '+' to indicate it should be added to the list of "
"queried targets, e.g.,::"
msgstr ""

#: ../../../networking/bonding.rst:1342
msgid ""
"is the proper syntax to specify multiple targets.  When specifying options "
"via BONDING_OPTS, it is not necessary to edit ``/etc/modprobe.d/*.conf``."
msgstr ""

#: ../../../networking/bonding.rst:1346
msgid ""
"For even older versions of initscripts that do not support BONDING_OPTS, it "
"is necessary to edit /etc/modprobe.d/*.conf, depending upon your distro) to "
"load the bonding module with your desired options when the bond0 interface "
"is brought up.  The following lines in /etc/modprobe.d/*.conf will load the "
"bonding module, and select its options:"
msgstr ""

#: ../../../networking/bonding.rst:1352
msgid "alias bond0 bonding options bond0 mode=balance-alb miimon=100"
msgstr ""

#: ../../../networking/bonding.rst:1355
msgid ""
"Replace the sample parameters with the appropriate set of options for your "
"configuration."
msgstr ""

#: ../../../networking/bonding.rst:1358
msgid ""
"Finally run \"/etc/rc.d/init.d/network restart\" as root.  This will restart "
"the networking subsystem and your bond link should be now up and running."
msgstr ""

#: ../../../networking/bonding.rst:1363
msgid "3.2.1 Using DHCP with Initscripts"
msgstr ""

#: ../../../networking/bonding.rst:1365
msgid ""
"Recent versions of initscripts (the versions supplied with Fedora Core 3 and "
"Red Hat Enterprise Linux 4, or later versions, are reported to work) have "
"support for assigning IP information to bonding devices via DHCP."
msgstr ""

#: ../../../networking/bonding.rst:1370
msgid ""
"To configure bonding for DHCP, configure it as described above, except "
"replace the line \"BOOTPROTO=none\" with \"BOOTPROTO=dhcp\" and add a line "
"consisting of \"TYPE=Bonding\".  Note that the TYPE value is case sensitive."
msgstr ""

#: ../../../networking/bonding.rst:1376
msgid "3.2.2 Configuring Multiple Bonds with Initscripts"
msgstr ""

#: ../../../networking/bonding.rst:1378
msgid ""
"Initscripts packages that are included with Fedora 7 and Red Hat Enterprise "
"Linux 5 support multiple bonding interfaces by simply specifying the "
"appropriate BONDING_OPTS= in ifcfg-bondX where X is the number of the bond.  "
"This support requires sysfs support in the kernel, and a bonding driver of "
"version 3.0.0 or later.  Other configurations may not support this method "
"for specifying multiple bonding interfaces; for those instances, see the "
"\"Configuring Multiple Bonds Manually\" section, below."
msgstr ""

#: ../../../networking/bonding.rst:1388
msgid "3.3 Configuring Bonding Manually with iproute2"
msgstr ""

#: ../../../networking/bonding.rst:1390
msgid ""
"This section applies to distros whose network initialization scripts (the "
"sysconfig or initscripts package) do not have specific knowledge of "
"bonding.  One such distro is SuSE Linux Enterprise Server version 8."
msgstr ""

#: ../../../networking/bonding.rst:1395
msgid ""
"The general method for these systems is to place the bonding module "
"parameters into a config file in /etc/modprobe.d/ (as appropriate for the "
"installed distro), then add modprobe and/or `ip link` commands to the "
"system's global init script.  The name of the global init script differs; "
"for sysconfig, it is /etc/init.d/boot.local and for initscripts it is /etc/"
"rc.d/rc.local."
msgstr ""

#: ../../../networking/bonding.rst:1402
msgid ""
"For example, if you wanted to make a simple bond of two e100 devices "
"(presumed to be eth0 and eth1), and have it persist across reboots, edit the "
"appropriate file (/etc/init.d/boot.local or /etc/rc.d/rc.local), and add the "
"following::"
msgstr ""

#: ../../../networking/bonding.rst:1413
msgid ""
"Replace the example bonding module parameters and bond0 network "
"configuration (IP address, netmask, etc) with the appropriate values for "
"your configuration."
msgstr ""

#: ../../../networking/bonding.rst:1417
msgid ""
"Unfortunately, this method will not provide support for the ifup and ifdown "
"scripts on the bond devices.  To reload the bonding configuration, it is "
"necessary to run the initialization script, e.g.,::"
msgstr ""

#: ../../../networking/bonding.rst:1423
msgid "or::"
msgstr ""

#: ../../../networking/bonding.rst:1427
msgid ""
"It may be desirable in such a case to create a separate script which only "
"initializes the bonding configuration, then call that separate script from "
"within boot.local.  This allows for bonding to be enabled without re-running "
"the entire global init script."
msgstr ""

#: ../../../networking/bonding.rst:1432
msgid ""
"To shut down the bonding devices, it is necessary to first mark the bonding "
"device itself as being down, then remove the appropriate device driver "
"modules.  For our example above, you can do the following::"
msgstr ""

#: ../../../networking/bonding.rst:1441
msgid ""
"Again, for convenience, it may be desirable to create a script with these "
"commands."
msgstr ""

#: ../../../networking/bonding.rst:1446
msgid "3.3.1 Configuring Multiple Bonds Manually"
msgstr ""

#: ../../../networking/bonding.rst:1448
msgid ""
"This section contains information on configuring multiple bonding devices "
"with differing options for those systems whose network initialization "
"scripts lack support for configuring multiple bonds."
msgstr ""

#: ../../../networking/bonding.rst:1452
msgid ""
"If you require multiple bonding devices, but all with the same options, you "
"may wish to use the \"max_bonds\" module parameter, documented above."
msgstr ""

#: ../../../networking/bonding.rst:1456
msgid ""
"To create multiple bonding devices with differing options, it is preferable "
"to use bonding parameters exported by sysfs, documented in the section below."
msgstr ""

#: ../../../networking/bonding.rst:1460
msgid ""
"For versions of bonding without sysfs support, the only means to provide "
"multiple instances of bonding with differing options is to load the bonding "
"driver multiple times.  Note that current versions of the sysconfig network "
"initialization scripts handle this automatically; if your distro uses these "
"scripts, no special action is needed.  See the section Configuring Bonding "
"Devices, above, if you're not sure about your network initialization scripts."
msgstr ""

#: ../../../networking/bonding.rst:1468
msgid ""
"To load multiple instances of the module, it is necessary to specify a "
"different name for each instance (the module loading system requires that "
"every loaded module, even multiple instances of the same module, have a "
"unique name).  This is accomplished by supplying multiple sets of bonding "
"options in ``/etc/modprobe.d/*.conf``, for example::"
msgstr ""

#: ../../../networking/bonding.rst:1480
msgid ""
"will load the bonding module two times.  The first instance is named "
"\"bond0\" and creates the bond0 device in balance-rr mode with an miimon of "
"100.  The second instance is named \"bond1\" and creates the bond1 device in "
"balance-alb mode with an miimon of 50."
msgstr ""

#: ../../../networking/bonding.rst:1485
msgid ""
"In some circumstances (typically with older distributions), the above does "
"not work, and the second bonding instance never sees its options.  In that "
"case, the second options line can be substituted as follows::"
msgstr ""

#: ../../../networking/bonding.rst:1493
msgid ""
"This may be repeated any number of times, specifying a new and unique name "
"in place of bond1 for each subsequent instance."
msgstr ""

#: ../../../networking/bonding.rst:1496
msgid ""
"It has been observed that some Red Hat supplied kernels are unable to rename "
"modules at load time (the \"-o bond1\" part).  Attempts to pass that option "
"to modprobe will produce an \"Operation not permitted\" error. This has been "
"reported on some Fedora Core kernels, and has been seen on RHEL 4 as well.  "
"On kernels exhibiting this problem, it will be impossible to configure "
"multiple bonds with differing parameters (as they are older kernels, and "
"also lack sysfs support)."
msgstr ""

#: ../../../networking/bonding.rst:1505
msgid "3.4 Configuring Bonding Manually via Sysfs"
msgstr ""

#: ../../../networking/bonding.rst:1507
msgid ""
"Starting with version 3.0.0, Channel Bonding may be configured via the sysfs "
"interface.  This interface allows dynamic configuration of all bonds in the "
"system without unloading the module.  It also allows for adding and removing "
"bonds at runtime.  Ifenslave is no longer required, though it is still "
"supported."
msgstr ""

#: ../../../networking/bonding.rst:1513
msgid ""
"Use of the sysfs interface allows you to use multiple bonds with different "
"configurations without having to reload the module. It also allows you to "
"use multiple, differently configured bonds when bonding is compiled into the "
"kernel."
msgstr ""

#: ../../../networking/bonding.rst:1518
msgid ""
"You must have the sysfs filesystem mounted to configure bonding this way.  "
"The examples in this document assume that you are using the standard mount "
"point for sysfs, e.g. /sys.  If your sysfs filesystem is mounted elsewhere, "
"you will need to adjust the example paths accordingly."
msgstr ""

#: ../../../networking/bonding.rst:1525
msgid "Creating and Destroying Bonds"
msgstr ""

#: ../../../networking/bonding.rst:1526
msgid "To add a new bond foo::"
msgstr ""

#: ../../../networking/bonding.rst:1530
msgid "To remove an existing bond bar::"
msgstr ""

#: ../../../networking/bonding.rst:1534
msgid "To show all existing bonds::"
msgstr ""

#: ../../../networking/bonding.rst:1540
msgid ""
"due to 4K size limitation of sysfs files, this list may be truncated if you "
"have more than a few hundred bonds.  This is unlikely to occur under normal "
"operating conditions."
msgstr ""

#: ../../../networking/bonding.rst:1545
msgid "Adding and Removing Slaves"
msgstr ""

#: ../../../networking/bonding.rst:1546
msgid ""
"Interfaces may be enslaved to a bond using the file /sys/class/net/<bond>/"
"bonding/slaves.  The semantics for this file are the same as for the "
"bonding_masters file."
msgstr ""

#: ../../../networking/bonding.rst:1550
msgid "To enslave interface eth0 to bond bond0::"
msgstr ""

#: ../../../networking/bonding.rst:1555
msgid "To free slave eth0 from bond bond0::"
msgstr ""

#: ../../../networking/bonding.rst:1559
msgid ""
"When an interface is enslaved to a bond, symlinks between the two are "
"created in the sysfs filesystem.  In this case, you would get /sys/class/net/"
"bond0/slave_eth0 pointing to /sys/class/net/eth0, and /sys/class/net/eth0/"
"master pointing to /sys/class/net/bond0."
msgstr ""

#: ../../../networking/bonding.rst:1564
msgid ""
"This means that you can tell quickly whether or not an interface is enslaved "
"by looking for the master symlink.  Thus: # echo -eth0 > /sys/class/net/eth0/"
"master/bonding/slaves will free eth0 from whatever bond it is enslaved to, "
"regardless of the name of the bond interface."
msgstr ""

#: ../../../networking/bonding.rst:1571
msgid "Changing a Bond's Configuration"
msgstr ""

#: ../../../networking/bonding.rst:1572
msgid ""
"Each bond may be configured individually by manipulating the files located "
"in /sys/class/net/<bond name>/bonding"
msgstr ""

#: ../../../networking/bonding.rst:1575
msgid ""
"The names of these files correspond directly with the command- line "
"parameters described elsewhere in this file, and, with the exception of "
"arp_ip_target, they accept the same values.  To see the current setting, "
"simply cat the appropriate file."
msgstr ""

#: ../../../networking/bonding.rst:1580
msgid ""
"A few examples will be given here; for specific usage guidelines for each "
"parameter, see the appropriate section in this document."
msgstr ""

#: ../../../networking/bonding.rst:1584
msgid "To configure bond0 for balance-alb mode::"
msgstr ""

#: ../../../networking/bonding.rst:1593
msgid "The bond interface must be down before the mode can be changed."
msgstr ""

#: ../../../networking/bonding.rst:1595
msgid "To enable MII monitoring on bond0 with a 1 second interval::"
msgstr ""

#: ../../../networking/bonding.rst:1601
msgid ""
"If ARP monitoring is enabled, it will disabled when MII monitoring is "
"enabled, and vice-versa."
msgstr ""

#: ../../../networking/bonding.rst:1604
msgid "To add ARP targets::"
msgstr ""

#: ../../../networking/bonding.rst:1611
msgid "up to 16 target addresses may be specified."
msgstr ""

#: ../../../networking/bonding.rst:1613
msgid "To remove an ARP target::"
msgstr ""

#: ../../../networking/bonding.rst:1617
msgid "To configure the interval between learning packet transmits::"
msgstr ""

#: ../../../networking/bonding.rst:1623
msgid ""
"the lp_interval is the number of seconds between instances where the bonding "
"driver sends learning packets to each slaves peer switch.  The default "
"interval is 1 second."
msgstr ""

#: ../../../networking/bonding.rst:1628
msgid "Example Configuration"
msgstr ""

#: ../../../networking/bonding.rst:1629
msgid ""
"We begin with the same example that is shown in section 3.3, executed with "
"sysfs, and without using ifenslave."
msgstr ""

#: ../../../networking/bonding.rst:1632
msgid ""
"To make a simple bond of two e100 devices (presumed to be eth0 and eth1), "
"and have it persist across reboots, edit the appropriate file (/etc/init.d/"
"boot.local or /etc/rc.d/rc.local), and add the following::"
msgstr ""

#: ../../../networking/bonding.rst:1645
msgid ""
"To add a second bond, with two e1000 interfaces in active-backup mode, using "
"ARP monitoring, add the following lines to your init script::"
msgstr ""

#: ../../../networking/bonding.rst:1659
msgid "3.5 Configuration with Interfaces Support"
msgstr ""

#: ../../../networking/bonding.rst:1661
msgid ""
"This section applies to distros which use /etc/network/interfaces file to "
"describe network interface configuration, most notably Debian and its "
"derivatives."
msgstr ""

#: ../../../networking/bonding.rst:1665
msgid ""
"The ifup and ifdown commands on Debian don't support bonding out of the box. "
"The ifenslave-2.6 package should be installed to provide bonding support.  "
"Once installed, this package will provide ``bond-*`` options to be used "
"into /etc/network/interfaces."
msgstr ""

#: ../../../networking/bonding.rst:1670
msgid ""
"Note that ifenslave-2.6 package will load the bonding module and use the "
"ifenslave command when appropriate."
msgstr ""

#: ../../../networking/bonding.rst:1674
msgid "Example Configurations"
msgstr ""

#: ../../../networking/bonding.rst:1676
msgid ""
"In /etc/network/interfaces, the following stanza will configure bond0, in "
"active-backup mode, with eth0 and eth1 as slaves::"
msgstr ""

#: ../../../networking/bonding.rst:1686
msgid ""
"If the above configuration doesn't work, you might have a system using "
"upstart for system startup. This is most notably true for recent Ubuntu "
"versions. The following stanza in /etc/network/interfaces will produce the "
"same result on those systems::"
msgstr ""

#: ../../../networking/bonding.rst:1707
msgid ""
"For a full list of ``bond-*`` supported options in /etc/network/interfaces "
"and some more advanced examples tailored to you particular distros, see the "
"files in /usr/share/doc/ifenslave-2.6."
msgstr ""

#: ../../../networking/bonding.rst:1712
msgid "3.6 Overriding Configuration for Special Cases"
msgstr ""

#: ../../../networking/bonding.rst:1714
msgid ""
"When using the bonding driver, the physical port which transmits a frame is "
"typically selected by the bonding driver, and is not relevant to the user or "
"system administrator.  The output port is simply selected using the policies "
"of the selected bonding mode.  On occasion however, it is helpful to direct "
"certain classes of traffic to certain physical interfaces on output to "
"implement slightly more complex policies.  For example, to reach a web "
"server over a bonded interface in which eth0 connects to a private network, "
"while eth1 connects via a public network, it may be desirous to bias the "
"bond to send said traffic over eth0 first, using eth1 only as a fall back, "
"while all other traffic can safely be sent over either interface.  Such "
"configurations may be achieved using the traffic control utilities inherent "
"in linux."
msgstr ""

#: ../../../networking/bonding.rst:1726
msgid ""
"By default the bonding driver is multiqueue aware and 16 queues are created "
"when the driver initializes (see Documentation/networking/multiqueue.rst for "
"details).  If more or less queues are desired the module parameter tx_queues "
"can be used to change this value.  There is no sysfs parameter available as "
"the allocation is done at module init time."
msgstr ""

#: ../../../networking/bonding.rst:1732
msgid ""
"The output of the file /proc/net/bonding/bondX has changed so the output "
"Queue ID is now printed for each slave::"
msgstr ""

#: ../../../networking/bonding.rst:1755
msgid "The queue_id for a slave can be set using the command::"
msgstr ""

#: ../../../networking/bonding.rst:1759
msgid ""
"Any interface that needs a queue_id set should set it with multiple calls "
"like the one above until proper priorities are set for all interfaces.  On "
"distributions that allow configuration via initscripts, multiple 'queue_id' "
"arguments can be added to BONDING_OPTS to set all needed slave queues."
msgstr ""

#: ../../../networking/bonding.rst:1764
msgid ""
"These queue id's can be used in conjunction with the tc utility to configure "
"a multiqueue qdisc and filters to bias certain traffic to transmit on "
"certain slave devices.  For instance, say we wanted, in the above "
"configuration to force all traffic bound to 192.168.1.100 to use eth1 in the "
"bond as its output device. The following commands would accomplish this::"
msgstr ""

#: ../../../networking/bonding.rst:1775
msgid ""
"These commands tell the kernel to attach a multiqueue queue discipline to "
"the bond0 interface and filter traffic enqueued to it, such that packets "
"with a dst ip of 192.168.1.100 have their output queue mapping value "
"overwritten to 2. This value is then passed into the driver, causing the "
"normal output path selection policy to be overridden, selecting instead qid "
"2, which maps to eth1."
msgstr ""

#: ../../../networking/bonding.rst:1781
msgid ""
"Note that qid values begin at 1.  Qid 0 is reserved to initiate to the "
"driver that normal output policy selection should take place.  One benefit "
"to simply leaving the qid for a slave to 0 is the multiqueue awareness in "
"the bonding driver that is now present.  This awareness allows tc filters to "
"be placed on slave devices as well as bond devices and the bonding driver "
"will simply act as a pass-through for selecting output queues on the slave "
"device rather than output port selection."
msgstr ""

#: ../../../networking/bonding.rst:1789
msgid ""
"This feature first appeared in bonding driver version 3.7.0 and support for "
"output slave selection was limited to round-robin and active-backup modes."
msgstr ""

#: ../../../networking/bonding.rst:1793
msgid "3.7 Configuring LACP for 802.3ad mode in a more secure way"
msgstr ""

#: ../../../networking/bonding.rst:1795
msgid ""
"When using 802.3ad bonding mode, the Actor (host) and Partner (switch) "
"exchange LACPDUs.  These LACPDUs cannot be sniffed, because they are "
"destined to link local mac addresses (which switches/bridges are not "
"supposed to forward).  However, most of the values are easily predictable or "
"are simply the machine's MAC address (which is trivially known to all other "
"hosts in the same L2).  This implies that other machines in the L2 domain "
"can spoof LACPDU packets from other hosts to the switch and potentially "
"cause mayhem by joining (from the point of view of the switch) another "
"machine's aggregate, thus receiving a portion of that hosts incoming traffic "
"and / or spoofing traffic from that machine themselves (potentially even "
"successfully terminating some portion of flows). Though this is not a likely "
"scenario, one could avoid this possibility by simply configuring few bonding "
"parameters:"
msgstr ""

#: ../../../networking/bonding.rst:1809
msgid ""
"ad_actor_system : You can set a random mac-address that can be used for "
"these LACPDU exchanges. The value can not be either NULL or Multicast. Also "
"it's preferable to set the local-admin bit. Following shell code generates a "
"random mac-address as described above::"
msgstr ""

#: ../../../networking/bonding.rst:1823
msgid ""
"ad_actor_sys_prio : Randomize the system priority. The default value is "
"65535, but system can take the value from 1 - 65535. Following shell code "
"generates random priority and sets it::"
msgstr ""

#: ../../../networking/bonding.rst:1830
msgid ""
"ad_user_port_key : Use the user portion of the port-key. The default keeps "
"this empty. These are the upper 10 bits of the port-key and value ranges "
"from 0 - 1023. Following shell code generates these 10 bits and sets it::"
msgstr ""

#: ../../../networking/bonding.rst:1840
msgid "4 Querying Bonding Configuration"
msgstr ""

#: ../../../networking/bonding.rst:1843
msgid "4.1 Bonding Configuration"
msgstr ""

#: ../../../networking/bonding.rst:1845
msgid ""
"Each bonding device has a read-only file residing in the /proc/net/bonding "
"directory.  The file contents include information about the bonding "
"configuration, options and state of each slave."
msgstr ""

#: ../../../networking/bonding.rst:1849
msgid ""
"For example, the contents of /proc/net/bonding/bond0 after the driver is "
"loaded with parameters of mode=0 and miimon=1000 is generally as follows::"
msgstr ""

#: ../../../networking/bonding.rst:1869
msgid ""
"The precise format and contents will change depending upon the bonding "
"configuration, state, and version of the bonding driver."
msgstr ""

#: ../../../networking/bonding.rst:1873
msgid "4.2 Network configuration"
msgstr ""

#: ../../../networking/bonding.rst:1875
msgid ""
"The network configuration can be inspected using the ifconfig command.  "
"Bonding devices will have the MASTER flag set; Bonding slave devices will "
"have the SLAVE flag set.  The ifconfig output does not contain information "
"on which slaves are associated with which masters."
msgstr ""

#: ../../../networking/bonding.rst:1880
msgid ""
"In the example below, the bond0 interface is the master (MASTER) while eth0 "
"and eth1 are slaves (SLAVE). Notice all slaves of bond0 have the same MAC "
"address (HWaddr) as bond0 for all modes except TLB and ALB that require a "
"unique MAC address for each slave::"
msgstr ""

#: ../../../networking/bonding.rst:1908
msgid "5. Switch Configuration"
msgstr ""

#: ../../../networking/bonding.rst:1910
msgid ""
"For this section, \"switch\" refers to whatever system the bonded devices "
"are directly connected to (i.e., where the other end of the cable plugs "
"into).  This may be an actual dedicated switch device, or it may be another "
"regular system (e.g., another computer running Linux),"
msgstr ""

#: ../../../networking/bonding.rst:1916
msgid ""
"The active-backup, balance-tlb and balance-alb modes do not require any "
"specific configuration of the switch."
msgstr ""

#: ../../../networking/bonding.rst:1919
msgid ""
"The 802.3ad mode requires that the switch have the appropriate ports "
"configured as an 802.3ad aggregation.  The precise method used to configure "
"this varies from switch to switch, but, for example, a Cisco 3550 series "
"switch requires that the appropriate ports first be grouped together in a "
"single etherchannel instance, then that etherchannel is set to mode \"lacp\" "
"to enable 802.3ad (instead of standard EtherChannel)."
msgstr ""

#: ../../../networking/bonding.rst:1927
msgid ""
"The balance-rr, balance-xor and broadcast modes generally require that the "
"switch have the appropriate ports grouped together. The nomenclature for "
"such a group differs between switches, it may be called an "
"\"etherchannel\" (as in the Cisco example, above), a \"trunk group\" or some "
"other similar variation.  For these modes, each switch will also have its "
"own configuration options for the switch's transmit policy to the bond.  "
"Typical choices include XOR of either the MAC or IP addresses.  The transmit "
"policy of the two peers does not need to match.  For these three modes, the "
"bonding mode really selects a transmit policy for an EtherChannel group; all "
"three will interoperate with another EtherChannel group."
msgstr ""

#: ../../../networking/bonding.rst:1941
msgid "6. 802.1q VLAN Support"
msgstr ""

#: ../../../networking/bonding.rst:1943
msgid ""
"It is possible to configure VLAN devices over a bond interface using the "
"8021q driver.  However, only packets coming from the 8021q driver and "
"passing through bonding will be tagged by default.  Self generated packets, "
"for example, bonding's learning packets or ARP packets generated by either "
"ALB mode or the ARP monitor mechanism, are tagged internally by bonding "
"itself.  As a result, bonding must \"learn\" the VLAN IDs configured above "
"it, and use those IDs to tag self generated packets."
msgstr ""

#: ../../../networking/bonding.rst:1952
msgid ""
"For reasons of simplicity, and to support the use of adapters that can do "
"VLAN hardware acceleration offloading, the bonding interface declares itself "
"as fully hardware offloading capable, it gets the add_vid/kill_vid "
"notifications to gather the necessary information, and it propagates those "
"actions to the slaves.  In case of mixed adapter types, hardware accelerated "
"tagged packets that should go through an adapter that is not offloading "
"capable are \"un-accelerated\" by the bonding driver so the VLAN tag sits in "
"the regular location."
msgstr ""

#: ../../../networking/bonding.rst:1962
msgid ""
"VLAN interfaces *must* be added on top of a bonding interface only after "
"enslaving at least one slave.  The bonding interface has a hardware address "
"of 00:00:00:00:00:00 until the first slave is added. If the VLAN interface "
"is created prior to the first enslavement, it would pick up the all-zeroes "
"hardware address.  Once the first slave is attached to the bond, the bond "
"device itself will pick up the slave's hardware address, which is then "
"available for the VLAN device."
msgstr ""

#: ../../../networking/bonding.rst:1970
msgid ""
"Also, be aware that a similar problem can occur if all slaves are released "
"from a bond that still has one or more VLAN interfaces on top of it.  When a "
"new slave is added, the bonding interface will obtain its hardware address "
"from the first slave, which might not match the hardware address of the VLAN "
"interfaces (which was ultimately copied from an earlier slave)."
msgstr ""

#: ../../../networking/bonding.rst:1977
msgid ""
"There are two methods to ensure that the VLAN device operates with the "
"correct hardware address if all slaves are removed from a bond interface:"
msgstr ""

#: ../../../networking/bonding.rst:1981
msgid "Remove all VLAN interfaces then recreate them"
msgstr ""

#: ../../../networking/bonding.rst:1983
msgid ""
"2. Set the bonding interface's hardware address so that it matches the "
"hardware address of the VLAN interfaces."
msgstr ""

#: ../../../networking/bonding.rst:1986
msgid ""
"Note that changing a VLAN interface's HW address would set the underlying "
"device -- i.e. the bonding interface -- to promiscuous mode, which might not "
"be what you want."
msgstr ""

#: ../../../networking/bonding.rst:1992
msgid "7. Link Monitoring"
msgstr ""

#: ../../../networking/bonding.rst:1994
msgid ""
"The bonding driver at present supports two schemes for monitoring a slave "
"device's link state: the ARP monitor and the MII monitor."
msgstr ""

#: ../../../networking/bonding.rst:1998
msgid ""
"At the present time, due to implementation restrictions in the bonding "
"driver itself, it is not possible to enable both ARP and MII monitoring "
"simultaneously."
msgstr ""

#: ../../../networking/bonding.rst:2003
msgid "7.1 ARP Monitor Operation"
msgstr ""

#: ../../../networking/bonding.rst:2005
msgid ""
"The ARP monitor operates as its name suggests: it sends ARP queries to one "
"or more designated peer systems on the network, and uses the response as an "
"indication that the link is operating.  This gives some assurance that "
"traffic is actually flowing to and from one or more peers on the local "
"network."
msgstr ""

#: ../../../networking/bonding.rst:2012
msgid "7.2 Configuring Multiple ARP Targets"
msgstr ""

#: ../../../networking/bonding.rst:2014
msgid ""
"While ARP monitoring can be done with just one target, it can be useful in a "
"High Availability setup to have several targets to monitor.  In the case of "
"just one target, the target itself may go down or have a problem making it "
"unresponsive to ARP requests.  Having an additional target (or several) "
"increases the reliability of the ARP monitoring."
msgstr ""

#: ../../../networking/bonding.rst:2021
msgid "Multiple ARP targets must be separated by commas as follows::"
msgstr ""

#: ../../../networking/bonding.rst:2027
msgid "For just a single target the options would resemble::"
msgstr ""

#: ../../../networking/bonding.rst:2035
msgid "7.3 MII Monitor Operation"
msgstr ""

#: ../../../networking/bonding.rst:2037
msgid ""
"The MII monitor monitors only the carrier state of the local network "
"interface.  It accomplishes this in one of three ways: by depending upon the "
"device driver to maintain its carrier state, by querying the device's MII "
"registers, or by making an ethtool query to the device."
msgstr ""

#: ../../../networking/bonding.rst:2043
msgid ""
"The MII monitor relies on the driver for carrier state information (via the "
"netif_carrier subsystem)."
msgstr ""

#: ../../../networking/bonding.rst:2047
msgid "8. Potential Sources of Trouble"
msgstr ""

#: ../../../networking/bonding.rst:2050
msgid "8.1 Adventures in Routing"
msgstr ""

#: ../../../networking/bonding.rst:2052
msgid ""
"When bonding is configured, it is important that the slave devices not have "
"routes that supersede routes of the master (or, generally, not have routes "
"at all).  For example, suppose the bonding device bond0 has two slaves, eth0 "
"and eth1, and the routing table is as follows::"
msgstr ""

#: ../../../networking/bonding.rst:2065
msgid ""
"This routing configuration will likely still update the receive/transmit "
"times in the driver (needed by the ARP monitor), but may bypass the bonding "
"driver (because outgoing traffic to, in this case, another host on network "
"10 would use eth0 or eth1 before bond0)."
msgstr ""

#: ../../../networking/bonding.rst:2070
msgid ""
"The ARP monitor (and ARP itself) may become confused by this configuration, "
"because ARP requests (generated by the ARP monitor) will be sent on one "
"interface (bond0), but the corresponding reply will arrive on a different "
"interface (eth0).  This reply looks to ARP as an unsolicited ARP reply "
"(because ARP matches replies on an interface basis), and is discarded.  The "
"MII monitor is not affected by the state of the routing table."
msgstr ""

#: ../../../networking/bonding.rst:2078
msgid ""
"The solution here is simply to ensure that slaves do not have routes of "
"their own, and if for some reason they must, those routes do not supersede "
"routes of their master.  This should generally be the case, but unusual "
"configurations or errant manual or automatic static route additions may "
"cause trouble."
msgstr ""

#: ../../../networking/bonding.rst:2085
msgid "8.2 Ethernet Device Renaming"
msgstr ""

#: ../../../networking/bonding.rst:2087
msgid ""
"On systems with network configuration scripts that do not associate physical "
"devices directly with network interface names (so that the same physical "
"device always has the same \"ethX\" name), it may be necessary to add some "
"special logic to config files in /etc/modprobe.d/."
msgstr ""

#: ../../../networking/bonding.rst:2093
msgid "For example, given a modules.conf containing the following::"
msgstr ""

#: ../../../networking/bonding.rst:2102
msgid ""
"If neither eth0 and eth1 are slaves to bond0, then when the bond0 interface "
"comes up, the devices may end up reordered.  This happens because bonding is "
"loaded first, then its slave device's drivers are loaded next.  Since no "
"other drivers have been loaded, when the e1000 driver loads, it will receive "
"eth0 and eth1 for its devices, but the bonding configuration tries to "
"enslave eth2 and eth3 (which may later be assigned to the tg3 devices)."
msgstr ""

#: ../../../networking/bonding.rst:2110
msgid "Adding the following::"
msgstr ""

#: ../../../networking/bonding.rst:2114
msgid ""
"causes modprobe to load e1000 then tg3, in that order, when bonding is "
"loaded.  This command is fully documented in the modules.conf manual page."
msgstr ""

#: ../../../networking/bonding.rst:2118
msgid ""
"On systems utilizing modprobe an equivalent problem can occur. In this case, "
"the following can be added to config files in /etc/modprobe.d/ as::"
msgstr ""

#: ../../../networking/bonding.rst:2124
msgid ""
"This will load tg3 and e1000 modules before loading the bonding one. Full "
"documentation on this can be found in the modprobe.d and modprobe manual "
"pages."
msgstr ""

#: ../../../networking/bonding.rst:2129
msgid "9. SNMP agents"
msgstr ""

#: ../../../networking/bonding.rst:2131
msgid ""
"If running SNMP agents, the bonding driver should be loaded before any "
"network drivers participating in a bond.  This requirement is due to the "
"interface index (ipAdEntIfIndex) being associated to the first interface "
"found with a given IP address.  That is, there is only one ipAdEntIfIndex "
"for each IP address.  For example, if eth0 and eth1 are slaves of bond0 and "
"the driver for eth0 is loaded before the bonding driver, the interface for "
"the IP address will be associated with the eth0 interface.  This "
"configuration is shown below, the IP address 192.168.1.1 has an interface "
"index of 2 which indexes to eth0 in the ifDescr table (ifDescr.2)."
msgstr ""

#: ../../../networking/bonding.rst:2155
msgid ""
"This problem is avoided by loading the bonding driver before any network "
"drivers participating in a bond.  Below is an example of loading the bonding "
"driver first, the IP address 192.168.1.1 is correctly associated with "
"ifDescr.2."
msgstr ""

#: ../../../networking/bonding.rst:2160
msgid ""
"interfaces.ifTable.ifEntry.ifDescr.1 = lo interfaces.ifTable.ifEntry."
"ifDescr.2 = bond0 interfaces.ifTable.ifEntry.ifDescr.3 = eth0 interfaces."
"ifTable.ifEntry.ifDescr.4 = eth1 interfaces.ifTable.ifEntry.ifDescr.5 = eth2 "
"interfaces.ifTable.ifEntry.ifDescr.6 = eth3 ip.ipAddrTable.ipAddrEntry."
"ipAdEntIfIndex.10.10.10.10 = 6 ip.ipAddrTable.ipAddrEntry."
"ipAdEntIfIndex.192.168.1.1 = 2 ip.ipAddrTable.ipAddrEntry."
"ipAdEntIfIndex.10.74.20.94 = 5 ip.ipAddrTable.ipAddrEntry."
"ipAdEntIfIndex.127.0.0.1 = 1"
msgstr ""

#: ../../../networking/bonding.rst:2171
msgid ""
"While some distributions may not report the interface name in ifDescr, the "
"association between the IP address and IfIndex remains and SNMP functions "
"such as Interface_Scan_Next will report that association."
msgstr ""

#: ../../../networking/bonding.rst:2177
msgid "10. Promiscuous mode"
msgstr ""

#: ../../../networking/bonding.rst:2179
msgid ""
"When running network monitoring tools, e.g., tcpdump, it is common to enable "
"promiscuous mode on the device, so that all traffic is seen (instead of "
"seeing only traffic destined for the local host). The bonding driver handles "
"promiscuous mode changes to the bonding master device (e.g., bond0), and "
"propagates the setting to the slave devices."
msgstr ""

#: ../../../networking/bonding.rst:2186
msgid ""
"For the balance-rr, balance-xor, broadcast, and 802.3ad modes, the "
"promiscuous mode setting is propagated to all slaves."
msgstr ""

#: ../../../networking/bonding.rst:2189
msgid ""
"For the active-backup, balance-tlb and balance-alb modes, the promiscuous "
"mode setting is propagated only to the active slave."
msgstr ""

#: ../../../networking/bonding.rst:2192
msgid ""
"For balance-tlb mode, the active slave is the slave currently receiving "
"inbound traffic."
msgstr ""

#: ../../../networking/bonding.rst:2195
msgid ""
"For balance-alb mode, the active slave is the slave used as a \"primary.\"  "
"This slave is used for mode-specific control traffic, for sending to peers "
"that are unassigned or if the load is unbalanced."
msgstr ""

#: ../../../networking/bonding.rst:2199
msgid ""
"For the active-backup, balance-tlb and balance-alb modes, when the active "
"slave changes (e.g., due to a link failure), the promiscuous setting will be "
"propagated to the new active slave."
msgstr ""

#: ../../../networking/bonding.rst:2204
msgid "11. Configuring Bonding for High Availability"
msgstr ""

#: ../../../networking/bonding.rst:2206
msgid ""
"High Availability refers to configurations that provide maximum network "
"availability by having redundant or backup devices, links or switches "
"between the host and the rest of the world.  The goal is to provide the "
"maximum availability of network connectivity (i.e., the network always "
"works), even though other configurations could provide higher throughput."
msgstr ""

#: ../../../networking/bonding.rst:2214
msgid "11.1 High Availability in a Single Switch Topology"
msgstr ""

#: ../../../networking/bonding.rst:2216
msgid ""
"If two hosts (or a host and a single switch) are directly connected via "
"multiple physical links, then there is no availability penalty to optimizing "
"for maximum bandwidth.  In this case, there is only one switch (or peer), so "
"if it fails, there is no alternative access to fail over to.  Additionally, "
"the bonding load balance modes support link monitoring of their members, so "
"if individual links fail, the load will be rebalanced across the remaining "
"devices."
msgstr ""

#: ../../../networking/bonding.rst:2224
msgid ""
"See Section 12, \"Configuring Bonding for Maximum Throughput\" for "
"information on configuring bonding with one peer device."
msgstr ""

#: ../../../networking/bonding.rst:2228
msgid "11.2 High Availability in a Multiple Switch Topology"
msgstr ""

#: ../../../networking/bonding.rst:2230
msgid ""
"With multiple switches, the configuration of bonding and the network changes "
"dramatically.  In multiple switch topologies, there is a trade off between "
"network availability and usable bandwidth."
msgstr ""

#: ../../../networking/bonding.rst:2234
msgid ""
"Below is a sample network, configured to maximize the availability of the "
"network::"
msgstr ""

#: ../../../networking/bonding.rst:2249
msgid ""
"In this configuration, there is a link between the two switches (ISL, or "
"inter switch link), and multiple ports connecting to the outside world "
"(\"port3\" on each switch).  There is no technical reason that this could "
"not be extended to a third switch."
msgstr ""

#: ../../../networking/bonding.rst:2255
msgid "11.2.1 HA Bonding Mode Selection for Multiple Switch Topology"
msgstr ""

#: ../../../networking/bonding.rst:2257
msgid ""
"In a topology such as the example above, the active-backup and broadcast "
"modes are the only useful bonding modes when optimizing for availability; "
"the other modes require all links to terminate on the same peer for them to "
"behave rationally."
msgstr ""

#: ../../../networking/bonding.rst:2262 ../../../networking/bonding.rst:2428
msgid "active-backup:"
msgstr ""

#: ../../../networking/bonding.rst:2263
msgid ""
"This is generally the preferred mode, particularly if the switches have an "
"ISL and play together well.  If the network configuration is such that one "
"switch is specifically a backup switch (e.g., has lower capacity, higher "
"cost, etc), then the primary option can be used to ensure that the preferred "
"link is always used when it is available."
msgstr ""

#: ../../../networking/bonding.rst:2270 ../../../networking/bonding.rst:2452
msgid "broadcast:"
msgstr ""

#: ../../../networking/bonding.rst:2271
msgid ""
"This mode is really a special purpose mode, and is suitable only for very "
"specific needs.  For example, if the two switches are not connected (no "
"ISL), and the networks beyond them are totally independent.  In this case, "
"if it is necessary for some specific one-way traffic to reach both "
"independent networks, then the broadcast mode may be suitable."
msgstr ""

#: ../../../networking/bonding.rst:2279
msgid "11.2.2 HA Link Monitoring Selection for Multiple Switch Topology"
msgstr ""

#: ../../../networking/bonding.rst:2281
msgid ""
"The choice of link monitoring ultimately depends upon your switch.  If the "
"switch can reliably fail ports in response to other failures, then either "
"the MII or ARP monitors should work.  For example, in the above example, if "
"the \"port3\" link fails at the remote end, the MII monitor has no direct "
"means to detect this.  The ARP monitor could be configured with a target at "
"the remote end of port3, thus detecting that failure without switch support."
msgstr ""

#: ../../../networking/bonding.rst:2289
msgid ""
"In general, however, in a multiple switch topology, the ARP monitor can "
"provide a higher level of reliability in detecting end to end connectivity "
"failures (which may be caused by the failure of any individual component to "
"pass traffic for any reason).  Additionally, the ARP monitor should be "
"configured with multiple targets (at least one for each switch in the "
"network).  This will ensure that, regardless of which switch is active, the "
"ARP monitor has a suitable target to query."
msgstr ""

#: ../../../networking/bonding.rst:2298
msgid ""
"Note, also, that of late many switches now support a functionality generally "
"referred to as \"trunk failover.\"  This is a feature of the switch that "
"causes the link state of a particular switch port to be set down (or up) "
"when the state of another switch port goes down (or up). Its purpose is to "
"propagate link failures from logically \"exterior\" ports to the logically "
"\"interior\" ports that bonding is able to monitor via miimon.  Availability "
"and configuration for trunk failover varies by switch, but this can be a "
"viable alternative to the ARP monitor when using suitable switches."
msgstr ""

#: ../../../networking/bonding.rst:2309
msgid "12. Configuring Bonding for Maximum Throughput"
msgstr ""

#: ../../../networking/bonding.rst:2312
msgid "12.1 Maximizing Throughput in a Single Switch Topology"
msgstr ""

#: ../../../networking/bonding.rst:2314
msgid ""
"In a single switch configuration, the best method to maximize throughput "
"depends upon the application and network environment.  The various load "
"balancing modes each have strengths and weaknesses in different "
"environments, as detailed below."
msgstr ""

#: ../../../networking/bonding.rst:2319
msgid ""
"For this discussion, we will break down the topologies into two categories.  "
"Depending upon the destination of most traffic, we categorize them into "
"either \"gatewayed\" or \"local\" configurations."
msgstr ""

#: ../../../networking/bonding.rst:2323
msgid ""
"In a gatewayed configuration, the \"switch\" is acting primarily as a "
"router, and the majority of traffic passes through this router to other "
"networks.  An example would be the following::"
msgstr ""

#: ../../../networking/bonding.rst:2335
msgid ""
"The router may be a dedicated router device, or another host acting as a "
"gateway.  For our discussion, the important point is that the majority of "
"traffic from Host A will pass through the router to some other network "
"before reaching its final destination."
msgstr ""

#: ../../../networking/bonding.rst:2340
msgid ""
"In a gatewayed network configuration, although Host A may communicate with "
"many other systems, all of its traffic will be sent and received via one "
"other peer on the local network, the router."
msgstr ""

#: ../../../networking/bonding.rst:2344
msgid ""
"Note that the case of two systems connected directly via multiple physical "
"links is, for purposes of configuring bonding, the same as a gatewayed "
"configuration.  In that case, it happens that all traffic is destined for "
"the \"gateway\" itself, not some other network beyond the gateway."
msgstr ""

#: ../../../networking/bonding.rst:2350
msgid ""
"In a local configuration, the \"switch\" is acting primarily as a switch, "
"and the majority of traffic passes through this switch to reach other "
"stations on the same network.  An example would be the following::"
msgstr ""

#: ../../../networking/bonding.rst:2363
msgid ""
"Again, the switch may be a dedicated switch device, or another host acting "
"as a gateway.  For our discussion, the important point is that the majority "
"of traffic from Host A is destined for other hosts on the same local network "
"(Hosts B and C in the above example)."
msgstr ""

#: ../../../networking/bonding.rst:2368
msgid ""
"In summary, in a gatewayed configuration, traffic to and from the bonded "
"device will be to the same MAC level peer on the network (the gateway "
"itself, i.e., the router), regardless of its final destination.  In a local "
"configuration, traffic flows directly to and from the final destinations, "
"thus, each destination (Host B, Host C) will be addressed directly by their "
"individual MAC addresses."
msgstr ""

#: ../../../networking/bonding.rst:2375
msgid ""
"This distinction between a gatewayed and a local network configuration is "
"important because many of the load balancing modes available use the MAC "
"addresses of the local network source and destination to make load balancing "
"decisions.  The behavior of each mode is described below."
msgstr ""

#: ../../../networking/bonding.rst:2383
msgid "12.1.1 MT Bonding Mode Selection for Single Switch Topology"
msgstr ""

#: ../../../networking/bonding.rst:2385
msgid ""
"This configuration is the easiest to set up and to understand, although you "
"will have to decide which bonding mode best suits your needs.  The trade "
"offs for each mode are detailed below:"
msgstr ""

#: ../../../networking/bonding.rst:2389
msgid "balance-rr:"
msgstr ""

#: ../../../networking/bonding.rst:2390
msgid ""
"This mode is the only mode that will permit a single TCP/IP connection to "
"stripe traffic across multiple interfaces. It is therefore the only mode "
"that will allow a single TCP/IP stream to utilize more than one interface's "
"worth of throughput.  This comes at a cost, however: the striping generally "
"results in peer systems receiving packets out of order, causing TCP/IP's "
"congestion control system to kick in, often by retransmitting segments."
msgstr ""

#: ../../../networking/bonding.rst:2399
msgid ""
"It is possible to adjust TCP/IP's congestion limits by altering the net.ipv4."
"tcp_reordering sysctl parameter.  The usual default value is 3. But keep in "
"mind TCP stack is able to automatically increase this when it detects "
"reorders."
msgstr ""

#: ../../../networking/bonding.rst:2404
msgid ""
"Note that the fraction of packets that will be delivered out of order is "
"highly variable, and is unlikely to be zero.  The level of reordering "
"depends upon a variety of factors, including the networking interfaces, the "
"switch, and the topology of the configuration.  Speaking in general terms, "
"higher speed network cards produce more reordering (due to factors such as "
"packet coalescing), and a \"many to many\" topology will reorder at a higher "
"rate than a \"many slow to one fast\" configuration."
msgstr ""

#: ../../../networking/bonding.rst:2413
msgid ""
"Many switches do not support any modes that stripe traffic (instead choosing "
"a port based upon IP or MAC level addresses); for those devices, traffic for "
"a particular connection flowing through the switch to a balance-rr bond will "
"not utilize greater than one interface's worth of bandwidth."
msgstr ""

#: ../../../networking/bonding.rst:2419
msgid ""
"If you are utilizing protocols other than TCP/IP, UDP for example, and your "
"application can tolerate out of order delivery, then this mode can allow for "
"single stream datagram performance that scales near linearly as interfaces "
"are added to the bond."
msgstr ""

#: ../../../networking/bonding.rst:2425
msgid ""
"This mode requires the switch to have the appropriate ports configured for "
"\"etherchannel\" or \"trunking.\""
msgstr ""

#: ../../../networking/bonding.rst:2429
msgid ""
"There is not much advantage in this network topology to the active-backup "
"mode, as the inactive backup devices are all connected to the same peer as "
"the primary.  In this case, a load balancing mode (with link monitoring) "
"will provide the same level of network availability, but with increased "
"available bandwidth.  On the plus side, active-backup mode does not require "
"any configuration of the switch, so it may have value if the hardware "
"available does not support any of the load balance modes."
msgstr ""

#: ../../../networking/bonding.rst:2439
msgid "balance-xor:"
msgstr ""

#: ../../../networking/bonding.rst:2440
msgid ""
"This mode will limit traffic such that packets destined for specific peers "
"will always be sent over the same interface.  Since the destination is "
"determined by the MAC addresses involved, this mode works best in a "
"\"local\" network configuration (as described above), with destinations all "
"on the same local network.  This mode is likely to be suboptimal if all your "
"traffic is passed through a single router (i.e., a \"gatewayed\" network "
"configuration, as described above)."
msgstr ""

#: ../../../networking/bonding.rst:2449
msgid ""
"As with balance-rr, the switch ports need to be configured for "
"\"etherchannel\" or \"trunking.\""
msgstr ""

#: ../../../networking/bonding.rst:2453
msgid ""
"Like active-backup, there is not much advantage to this mode in this type of "
"network topology."
msgstr ""

#: ../../../networking/bonding.rst:2456
msgid "802.3ad:"
msgstr ""

#: ../../../networking/bonding.rst:2457
msgid ""
"This mode can be a good choice for this type of network topology.  The "
"802.3ad mode is an IEEE standard, so all peers that implement 802.3ad should "
"interoperate well.  The 802.3ad protocol includes automatic configuration of "
"the aggregates, so minimal manual configuration of the switch is needed "
"(typically only to designate that some set of devices is available for "
"802.3ad).  The 802.3ad standard also mandates that frames be delivered in "
"order (within certain limits), so in general single connections will not see "
"misordering of packets.  The 802.3ad mode does have some drawbacks: the "
"standard mandates that all devices in the aggregate operate at the same "
"speed and duplex.  Also, as with all bonding load balance modes other than "
"balance-rr, no single connection will be able to utilize more than a single "
"interface's worth of bandwidth."
msgstr ""

#: ../../../networking/bonding.rst:2473
msgid ""
"Additionally, the linux bonding 802.3ad implementation distributes traffic "
"by peer (using an XOR of MAC addresses and packet type ID), so in a "
"\"gatewayed\" configuration, all outgoing traffic will generally use the "
"same device.  Incoming traffic may also end up on a single device, but that "
"is dependent upon the balancing policy of the peer's 802.3ad "
"implementation.  In a \"local\" configuration, traffic will be distributed "
"across the devices in the bond."
msgstr ""

#: ../../../networking/bonding.rst:2482
msgid ""
"Finally, the 802.3ad mode mandates the use of the MII monitor, therefore, "
"the ARP monitor is not available in this mode."
msgstr ""

#: ../../../networking/bonding.rst:2485
msgid "balance-tlb:"
msgstr ""

#: ../../../networking/bonding.rst:2486
msgid ""
"The balance-tlb mode balances outgoing traffic by peer. Since the balancing "
"is done according to MAC address, in a \"gatewayed\" configuration (as "
"described above), this mode will send all traffic across a single device.  "
"However, in a \"local\" network configuration, this mode balances multiple "
"local network peers across devices in a vaguely intelligent manner (not a "
"simple XOR as in balance-xor or 802.3ad mode), so that mathematically "
"unlucky MAC addresses (i.e., ones that XOR to the same value) will not all "
"\"bunch up\" on a single interface."
msgstr ""

#: ../../../networking/bonding.rst:2497
msgid ""
"Unlike 802.3ad, interfaces may be of differing speeds, and no special switch "
"configuration is required.  On the down side, in this mode all incoming "
"traffic arrives over a single interface, this mode requires certain ethtool "
"support in the network device driver of the slave interfaces, and the ARP "
"monitor is not available."
msgstr ""

#: ../../../networking/bonding.rst:2504
msgid "balance-alb:"
msgstr ""

#: ../../../networking/bonding.rst:2505
msgid ""
"This mode is everything that balance-tlb is, and more. It has all of the "
"features (and restrictions) of balance-tlb, and will also balance incoming "
"traffic from local network peers (as described in the Bonding Module Options "
"section, above)."
msgstr ""

#: ../../../networking/bonding.rst:2511
msgid ""
"The only additional down side to this mode is that the network device driver "
"must support changing the hardware address while the device is open."
msgstr ""

#: ../../../networking/bonding.rst:2516
msgid "12.1.2 MT Link Monitoring for Single Switch Topology"
msgstr ""

#: ../../../networking/bonding.rst:2518
msgid ""
"The choice of link monitoring may largely depend upon which mode you choose "
"to use.  The more advanced load balancing modes do not support the use of "
"the ARP monitor, and are thus restricted to using the MII monitor (which "
"does not provide as high a level of end to end assurance as the ARP monitor)."
msgstr ""

#: ../../../networking/bonding.rst:2525
msgid "12.2 Maximum Throughput in a Multiple Switch Topology"
msgstr ""

#: ../../../networking/bonding.rst:2527
msgid ""
"Multiple switches may be utilized to optimize for throughput when they are "
"configured in parallel as part of an isolated network between two or more "
"systems, for example::"
msgstr ""

#: ../../../networking/bonding.rst:2547
msgid ""
"In this configuration, the switches are isolated from one another.  One "
"reason to employ a topology such as this is for an isolated network with "
"many hosts (a cluster configured for high performance, for example), using "
"multiple smaller switches can be more cost effective than a single larger "
"switch, e.g., on a network with 24 hosts, three 24 port switches can be "
"significantly less expensive than a single 72 port switch."
msgstr ""

#: ../../../networking/bonding.rst:2555
msgid ""
"If access beyond the network is required, an individual host can be equipped "
"with an additional network device connected to an external network; this "
"host then additionally acts as a gateway."
msgstr ""

#: ../../../networking/bonding.rst:2560
msgid "12.2.1 MT Bonding Mode Selection for Multiple Switch Topology"
msgstr ""

#: ../../../networking/bonding.rst:2562
msgid ""
"In actual practice, the bonding mode typically employed in configurations of "
"this type is balance-rr.  Historically, in this network configuration, the "
"usual caveats about out of order packet delivery are mitigated by the use of "
"network adapters that do not do any kind of packet coalescing (via the use "
"of NAPI, or because the device itself does not generate interrupts until "
"some number of packets has arrived).  When employed in this fashion, the "
"balance-rr mode allows individual connections between two hosts to "
"effectively utilize greater than one interface's bandwidth."
msgstr ""

#: ../../../networking/bonding.rst:2573
msgid "12.2.2 MT Link Monitoring for Multiple Switch Topology"
msgstr ""

#: ../../../networking/bonding.rst:2575
msgid ""
"Again, in actual practice, the MII monitor is most often used in this "
"configuration, as performance is given preference over availability.  The "
"ARP monitor will function in this topology, but its advantages over the MII "
"monitor are mitigated by the volume of probes needed as the number of "
"systems involved grows (remember that each host in the network is configured "
"with bonding)."
msgstr ""

#: ../../../networking/bonding.rst:2583
msgid "13. Switch Behavior Issues"
msgstr ""

#: ../../../networking/bonding.rst:2586
msgid "13.1 Link Establishment and Failover Delays"
msgstr ""

#: ../../../networking/bonding.rst:2588
msgid ""
"Some switches exhibit undesirable behavior with regard to the timing of link "
"up and down reporting by the switch."
msgstr ""

#: ../../../networking/bonding.rst:2591
msgid ""
"First, when a link comes up, some switches may indicate that the link is up "
"(carrier available), but not pass traffic over the interface for some period "
"of time.  This delay is typically due to some type of autonegotiation or "
"routing protocol, but may also occur during switch initialization (e.g., "
"during recovery after a switch failure).  If you find this to be a problem, "
"specify an appropriate value to the updelay bonding module option to delay "
"the use of the relevant interface(s)."
msgstr ""

#: ../../../networking/bonding.rst:2600
msgid ""
"Second, some switches may \"bounce\" the link state one or more times while "
"a link is changing state.  This occurs most commonly while the switch is "
"initializing.  Again, an appropriate updelay value may help."
msgstr ""

#: ../../../networking/bonding.rst:2605
msgid ""
"Note that when a bonding interface has no active links, the driver will "
"immediately reuse the first link that goes up, even if the updelay parameter "
"has been specified (the updelay is ignored in this case).  If there are "
"slave interfaces waiting for the updelay timeout to expire, the interface "
"that first went into that state will be immediately reused.  This reduces "
"down time of the network if the value of updelay has been overestimated, and "
"since this occurs only in cases with no connectivity, there is no additional "
"penalty for ignoring the updelay."
msgstr ""

#: ../../../networking/bonding.rst:2615
msgid ""
"In addition to the concerns about switch timings, if your switches take a "
"long time to go into backup mode, it may be desirable to not activate a "
"backup interface immediately after a link goes down. Failover may be delayed "
"via the downdelay bonding module option."
msgstr ""

#: ../../../networking/bonding.rst:2621
msgid "13.2 Duplicated Incoming Packets"
msgstr ""

#: ../../../networking/bonding.rst:2623
msgid ""
"NOTE: Starting with version 3.0.2, the bonding driver has logic to suppress "
"duplicate packets, which should largely eliminate this problem. The "
"following description is kept for reference."
msgstr ""

#: ../../../networking/bonding.rst:2627
msgid ""
"It is not uncommon to observe a short burst of duplicated traffic when the "
"bonding device is first used, or after it has been idle for some period of "
"time.  This is most easily observed by issuing a \"ping\" to some other host "
"on the network, and noticing that the output from ping flags duplicates "
"(typically one per slave)."
msgstr ""

#: ../../../networking/bonding.rst:2633
msgid ""
"For example, on a bond in active-backup mode with five slaves all connected "
"to one switch, the output may appear as follows::"
msgstr ""

#: ../../../networking/bonding.rst:2647
msgid ""
"This is not due to an error in the bonding driver, rather, it is a side "
"effect of how many switches update their MAC forwarding tables.  Initially, "
"the switch does not associate the MAC address in the packet with a "
"particular switch port, and so it may send the traffic to all ports until "
"its MAC forwarding table is updated.  Since the interfaces attached to the "
"bond may occupy multiple ports on a single switch, when the switch "
"(temporarily) floods the traffic to all ports, the bond device receives "
"multiple copies of the same packet (one per slave device)."
msgstr ""

#: ../../../networking/bonding.rst:2657
msgid ""
"The duplicated packet behavior is switch dependent, some switches exhibit "
"this, and some do not.  On switches that display this behavior, it can be "
"induced by clearing the MAC forwarding table (on most Cisco switches, the "
"privileged command \"clear mac address-table dynamic\" will accomplish this)."
msgstr ""

#: ../../../networking/bonding.rst:2664
msgid "14. Hardware Specific Considerations"
msgstr ""

#: ../../../networking/bonding.rst:2666
msgid ""
"This section contains additional information for configuring bonding on "
"specific hardware platforms, or for interfacing bonding with particular "
"switches or other devices."
msgstr ""

#: ../../../networking/bonding.rst:2671
msgid "14.1 IBM BladeCenter"
msgstr ""

#: ../../../networking/bonding.rst:2673
msgid "This applies to the JS20 and similar systems."
msgstr ""

#: ../../../networking/bonding.rst:2675
msgid ""
"On the JS20 blades, the bonding driver supports only balance-rr, active-"
"backup, balance-tlb and balance-alb modes.  This is largely due to the "
"network topology inside the BladeCenter, detailed below."
msgstr ""

#: ../../../networking/bonding.rst:2681
msgid "JS20 network adapter information"
msgstr ""

#: ../../../networking/bonding.rst:2683
msgid ""
"All JS20s come with two Broadcom Gigabit Ethernet ports integrated on the "
"planar (that's \"motherboard\" in IBM-speak).  In the BladeCenter chassis, "
"the eth0 port of all JS20 blades is hard wired to I/O Module #1; similarly, "
"all eth1 ports are wired to I/O Module #2. An add-on Broadcom daughter card "
"can be installed on a JS20 to provide two more Gigabit Ethernet ports.  "
"These ports, eth2 and eth3, are wired to I/O Modules 3 and 4, respectively."
msgstr ""

#: ../../../networking/bonding.rst:2691
msgid ""
"Each I/O Module may contain either a switch or a passthrough module (which "
"allows ports to be directly connected to an external switch).  Some bonding "
"modes require a specific BladeCenter internal network topology in order to "
"function; these are detailed below."
msgstr ""

#: ../../../networking/bonding.rst:2696
msgid ""
"Additional BladeCenter-specific networking information can be found in two "
"IBM Redbooks (www.ibm.com/redbooks):"
msgstr ""

#: ../../../networking/bonding.rst:2699
msgid "\"IBM eServer BladeCenter Networking Options\""
msgstr ""

#: ../../../networking/bonding.rst:2700
msgid "\"IBM eServer BladeCenter Layer 2-7 Network Switching\""
msgstr ""

#: ../../../networking/bonding.rst:2703
msgid "BladeCenter networking configuration"
msgstr ""

#: ../../../networking/bonding.rst:2705
msgid ""
"Because a BladeCenter can be configured in a very large number of ways, this "
"discussion will be confined to describing basic configurations."
msgstr ""

#: ../../../networking/bonding.rst:2709
msgid ""
"Normally, Ethernet Switch Modules (ESMs) are used in I/O modules 1 and 2.  "
"In this configuration, the eth0 and eth1 ports of a JS20 will be connected "
"to different internal switches (in the respective I/O modules)."
msgstr ""

#: ../../../networking/bonding.rst:2714
msgid ""
"A passthrough module (OPM or CPM, optical or copper, passthrough module) "
"connects the I/O module directly to an external switch.  By using PMs in I/O "
"module #1 and #2, the eth0 and eth1 interfaces of a JS20 can be redirected "
"to the outside world and connected to a common external switch."
msgstr ""

#: ../../../networking/bonding.rst:2720
msgid ""
"Depending upon the mix of ESMs and PMs, the network will appear to bonding "
"as either a single switch topology (all PMs) or as a multiple switch "
"topology (one or more ESMs, zero or more PMs).  It is also possible to "
"connect ESMs together, resulting in a configuration much like the example in "
"\"High Availability in a Multiple Switch Topology,\" above."
msgstr ""

#: ../../../networking/bonding.rst:2728
msgid "Requirements for specific modes"
msgstr ""

#: ../../../networking/bonding.rst:2730
msgid ""
"The balance-rr mode requires the use of passthrough modules for devices in "
"the bond, all connected to an common external switch. That switch must be "
"configured for \"etherchannel\" or \"trunking\" on the appropriate ports, as "
"is usual for balance-rr."
msgstr ""

#: ../../../networking/bonding.rst:2735
msgid ""
"The balance-alb and balance-tlb modes will function with either switch "
"modules or passthrough modules (or a mix).  The only specific requirement "
"for these modes is that all network interfaces must be able to reach all "
"destinations for traffic sent over the bonding device (i.e., the network "
"must converge at some point outside the BladeCenter)."
msgstr ""

#: ../../../networking/bonding.rst:2742
msgid "The active-backup mode has no additional requirements."
msgstr ""

#: ../../../networking/bonding.rst:2745
msgid "Link monitoring issues"
msgstr ""

#: ../../../networking/bonding.rst:2747
msgid ""
"When an Ethernet Switch Module is in place, only the ARP monitor will "
"reliably detect link loss to an external switch.  This is nothing unusual, "
"but examination of the BladeCenter cabinet would suggest that the "
"\"external\" network ports are the ethernet ports for the system, when it "
"fact there is a switch between these \"external\" ports and the devices on "
"the JS20 system itself.  The MII monitor is only able to detect link "
"failures between the ESM and the JS20 system."
msgstr ""

#: ../../../networking/bonding.rst:2755
msgid ""
"When a passthrough module is in place, the MII monitor does detect failures "
"to the \"external\" port, which is then directly connected to the JS20 "
"system."
msgstr ""

#: ../../../networking/bonding.rst:2760
msgid "Other concerns"
msgstr ""

#: ../../../networking/bonding.rst:2762
msgid ""
"The Serial Over LAN (SoL) link is established over the primary ethernet "
"(eth0) only, therefore, any loss of link to eth0 will result in losing your "
"SoL connection.  It will not fail over with other network traffic, as the "
"SoL system is beyond the control of the bonding driver."
msgstr ""

#: ../../../networking/bonding.rst:2768
msgid ""
"It may be desirable to disable spanning tree on the switch (either the "
"internal Ethernet Switch Module, or an external switch) to avoid fail-over "
"delay issues when using bonding."
msgstr ""

#: ../../../networking/bonding.rst:2774
msgid "15. Frequently Asked Questions"
msgstr ""

#: ../../../networking/bonding.rst:2777
msgid "1.  Is it SMP safe?"
msgstr ""

#: ../../../networking/bonding.rst:2779
msgid ""
"Yes. The old 2.0.xx channel bonding patch was not SMP safe. The new driver "
"was designed to be SMP safe from the start."
msgstr ""

#: ../../../networking/bonding.rst:2783
msgid "2.  What type of cards will work with it?"
msgstr ""

#: ../../../networking/bonding.rst:2785
msgid ""
"Any Ethernet type cards (you can even mix cards - a Intel EtherExpress "
"PRO/100 and a 3com 3c905b, for example).  For most modes, devices need not "
"be of the same speed."
msgstr ""

#: ../../../networking/bonding.rst:2789
msgid ""
"Starting with version 3.2.1, bonding also supports Infiniband slaves in "
"active-backup mode."
msgstr ""

#: ../../../networking/bonding.rst:2793
msgid "3.  How many bonding devices can I have?"
msgstr ""

#: ../../../networking/bonding.rst:2795
msgid "There is no limit."
msgstr ""

#: ../../../networking/bonding.rst:2798
msgid "4.  How many slaves can a bonding device have?"
msgstr ""

#: ../../../networking/bonding.rst:2800
msgid ""
"This is limited only by the number of network interfaces Linux supports and/"
"or the number of network cards you can place in your system."
msgstr ""

#: ../../../networking/bonding.rst:2805
msgid "5.  What happens when a slave link dies?"
msgstr ""

#: ../../../networking/bonding.rst:2807
msgid ""
"If link monitoring is enabled, then the failing device will be disabled.  "
"The active-backup mode will fail over to a backup link, and other modes will "
"ignore the failed link.  The link will continue to be monitored, and should "
"it recover, it will rejoin the bond (in whatever manner is appropriate for "
"the mode). See the sections on High Availability and the documentation for "
"each mode for additional information."
msgstr ""

#: ../../../networking/bonding.rst:2815
msgid ""
"Link monitoring can be enabled via either the miimon or arp_interval "
"parameters (described in the module parameters section, above).  In general, "
"miimon monitors the carrier state as sensed by the underlying network "
"device, and the arp monitor (arp_interval) monitors connectivity to another "
"host on the local network."
msgstr ""

#: ../../../networking/bonding.rst:2821
msgid ""
"If no link monitoring is configured, the bonding driver will be unable to "
"detect link failures, and will assume that all links are always available.  "
"This will likely result in lost packets, and a resulting degradation of "
"performance.  The precise performance loss depends upon the bonding mode and "
"network configuration."
msgstr ""

#: ../../../networking/bonding.rst:2828
msgid "6.  Can bonding be used for High Availability?"
msgstr ""

#: ../../../networking/bonding.rst:2830
msgid "Yes.  See the section on High Availability for details."
msgstr ""

#: ../../../networking/bonding.rst:2833
msgid "7.  Which switches/systems does it work with?"
msgstr ""

#: ../../../networking/bonding.rst:2835
msgid "The full answer to this depends upon the desired mode."
msgstr ""

#: ../../../networking/bonding.rst:2837
msgid ""
"In the basic balance modes (balance-rr and balance-xor), it works with any "
"system that supports etherchannel (also called trunking).  Most managed "
"switches currently available have such support, and many unmanaged switches "
"as well."
msgstr ""

#: ../../../networking/bonding.rst:2842
msgid ""
"The advanced balance modes (balance-tlb and balance-alb) do not have special "
"switch requirements, but do need device drivers that support specific "
"features (described in the appropriate section under module parameters, "
"above)."
msgstr ""

#: ../../../networking/bonding.rst:2847
msgid ""
"In 802.3ad mode, it works with systems that support IEEE 802.3ad Dynamic "
"Link Aggregation.  Most managed and many unmanaged switches currently "
"available support 802.3ad."
msgstr ""

#: ../../../networking/bonding.rst:2851
msgid "The active-backup mode should work with any Layer-II switch."
msgstr ""

#: ../../../networking/bonding.rst:2854
msgid "8.  Where does a bonding device get its MAC address from?"
msgstr ""

#: ../../../networking/bonding.rst:2856
msgid ""
"When using slave devices that have fixed MAC addresses, or when the "
"fail_over_mac option is enabled, the bonding device's MAC address is the MAC "
"address of the active slave."
msgstr ""

#: ../../../networking/bonding.rst:2860
msgid ""
"For other configurations, if not explicitly configured (with ifconfig or ip "
"link), the MAC address of the bonding device is taken from its first slave "
"device.  This MAC address is then passed to all following slaves and remains "
"persistent (even if the first slave is removed) until the bonding device is "
"brought down or reconfigured."
msgstr ""

#: ../../../networking/bonding.rst:2866
msgid ""
"If you wish to change the MAC address, you can set it with ifconfig or ip "
"link::"
msgstr ""

#: ../../../networking/bonding.rst:2873
msgid ""
"The MAC address can be also changed by bringing down/up the device and then "
"changing its slaves (or their order)::"
msgstr ""

#: ../../../networking/bonding.rst:2880
msgid ""
"This method will automatically take the address from the next slave that is "
"added."
msgstr ""

#: ../../../networking/bonding.rst:2883
msgid ""
"To restore your slaves' MAC addresses, you need to detach them from the bond "
"(``ifenslave -d bond0 eth0``). The bonding driver will then restore the MAC "
"addresses that the slaves had before they were enslaved."
msgstr ""

#: ../../../networking/bonding.rst:2889
msgid "9.  What bonding modes support native XDP?"
msgstr ""

#: ../../../networking/bonding.rst:2891
msgid "balance-rr (0)"
msgstr ""

#: ../../../networking/bonding.rst:2892
msgid "active-backup (1)"
msgstr ""

#: ../../../networking/bonding.rst:2893
msgid "balance-xor (2)"
msgstr ""

#: ../../../networking/bonding.rst:2894
msgid "802.3ad (4)"
msgstr ""

#: ../../../networking/bonding.rst:2896
msgid ""
"Note that the vlan+srcmac hash policy does not support native XDP. For other "
"bonding modes, the XDP program must be loaded with generic mode."
msgstr ""

#: ../../../networking/bonding.rst:2900
msgid "16. Resources and Links"
msgstr ""

#: ../../../networking/bonding.rst:2902
msgid ""
"The latest version of the bonding driver can be found in the latest version "
"of the linux kernel, found on http://kernel.org"
msgstr ""

#: ../../../networking/bonding.rst:2905
msgid ""
"The latest version of this document can be found in the latest kernel source "
"(named Documentation/networking/bonding.rst)."
msgstr ""

#: ../../../networking/bonding.rst:2908
msgid ""
"Discussions regarding the development of the bonding driver take place on "
"the main Linux network mailing list, hosted at vger.kernel.org. The list "
"address is:"
msgstr ""

#: ../../../networking/bonding.rst:2912
msgid "netdev@vger.kernel.org"
msgstr ""

#: ../../../networking/bonding.rst:2914
msgid ""
"The administrative interface (to subscribe or unsubscribe) can be found at:"
msgstr ""

#: ../../../networking/bonding.rst:2917
msgid "http://vger.kernel.org/vger-lists.html#netdev"
msgstr ""
