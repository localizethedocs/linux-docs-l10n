# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-06 15:47+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:5
msgid "PPE Ethernet Driver for Qualcomm IPQ SoC Family"
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:7
msgid "Copyright (c) Qualcomm Technologies, Inc. and/or its subsidiaries."
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:9
msgid "Author: Lei Wei <quic_leiwei@quicinc.com>"
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:13
msgid "Contents"
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:15
msgid "`PPE Overview`_"
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:16
msgid "`PPE Driver Overview`_"
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:17
msgid "`PPE Driver Supported SoCs`_"
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:18
msgid "`Enabling the Driver`_"
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:19
msgid "`Debugging`_"
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:23
msgid "PPE Overview"
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:25
msgid ""
"IPQ (Qualcomm Internet Processor) SoC (System-on-Chip) series is Qualcomm's "
"series of networking SoC for Wi-Fi access points. The PPE (Packet Process "
"Engine) is the Ethernet packet process engine in the IPQ SoC."
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:29
msgid ""
"Below is a simplified hardware diagram of IPQ9574 SoC which includes the PPE "
"engine and other blocks which are in the SoC but outside the PPE engine. "
"These blocks work together to enable the Ethernet for the IPQ SoC::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:75
msgid ""
"The CMN (Common) PLL, NSSCC (Networking Sub System Clock Controller) and GCC "
"(Global Clock Controller) blocks are in the SoC and act as clock providers."
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:78
msgid ""
"The UNIPHY block is in the SoC and provides the PCS (Physical Coding "
"Sublayer) and XPCS (10-Gigabit Physical Coding Sublayer) functions to "
"support different interface modes between the PPE MAC and the external PHY."
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:82
msgid ""
"This documentation focuses on the descriptions of PPE engine and the PPE "
"driver."
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:84
msgid ""
"The Ethernet functionality in the PPE (Packet Process Engine) is comprised "
"of three components: the switch core, port wrapper and Ethernet DMA."
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:87
msgid ""
"The Switch core in the IPQ9574 PPE has maximum of 6 front panel ports and "
"two FIFO interfaces. One of the two FIFO interfaces is used for Ethernet "
"port to host CPU communication using Ethernet DMA. The other one is used to "
"communicate to the EIP engine which is used for IPsec offload. On the "
"IPQ9574, the PPE includes 6 GMAC/XGMACs that can be connected with external "
"Ethernet PHY. Switch core also includes BM (Buffer Management), QM (Queue "
"Management) and SCH (Scheduler) modules for supporting the packet processing."
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:95
msgid ""
"The port wrapper provides connections from the 6 GMAC/XGMACS to UNIPHY (PCS) "
"supporting various modes such as SGMII/QSGMII/PSGMII/USXGMII/10G-BASER. "
"There are 3 UNIPHY (PCS) instances supported on the IPQ9574."
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:99
msgid ""
"Ethernet DMA is used to transmit and receive packets between the Ethernet "
"subsystem and ARM host CPU."
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:102
msgid ""
"The following lists the main blocks in the PPE engine which will be driven "
"by this PPE driver:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:105
msgid "BM"
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:106
msgid "BM is the hardware buffer manager for the PPE switch ports."
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:107
msgid "QM"
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:108
msgid ""
"Queue Manager for managing the egress hardware queues of the PPE switch "
"ports."
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:109
msgid "SCH"
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:110
msgid ""
"The scheduler which manages the hardware traffic scheduling for the PPE "
"switch ports."
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:111
msgid "L2"
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:112
msgid ""
"The L2 block performs the packet bridging in the switch core. The bridge "
"domain is represented by the VSI (Virtual Switch Instance) domain in PPE. "
"FDB learning can be enabled based on the VSI domain and bridge forwarding "
"occurs within the VSI domain."
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:115
msgid "MAC"
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:116
msgid ""
"The PPE in the IPQ9574 supports up to six MACs (MAC0 to MAC5) which are "
"corresponding to six switch ports (port1 to port6). The MAC block is "
"connected with external PHY through the UNIPHY PCS block. Each MAC block "
"includes the GMAC and XGMAC blocks and the switch port can select to use "
"GMAC or XMAC through a MUX selection according to the external PHY's "
"capability."
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:121
msgid "EDMA (Ethernet DMA)"
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:122
msgid ""
"The Ethernet DMA is used to transmit and receive Ethernet packets between "
"the PPE ports and the ARM cores."
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:125
msgid ""
"The received packet on a PPE MAC port can be forwarded to another PPE MAC "
"port. It can be also forwarded to internal switch port0 so that the packet "
"can be delivered to the ARM cores using the Ethernet DMA (EDMA) engine. The "
"Ethernet DMA driver will deliver the packet to the corresponding 'netdevice' "
"interface."
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:130
msgid ""
"The software instantiations of the PPE MAC (netdevice), PCS and external "
"PHYs interact with the Linux PHYLINK framework to manage the connectivity "
"between the PPE ports and the connected PHYs, and the port link states. This "
"is also illustrated in above diagram."
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:136
msgid "PPE Driver Overview"
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:137
msgid ""
"PPE driver is Ethernet driver for the Qualcomm IPQ SoC. It is a single "
"platform driver which includes the PPE part and Ethernet DMA part. The PPE "
"part initializes and drives the various blocks in PPE switch core such as BM/"
"QM/L2 blocks and the PPE MACs. The EDMA part drives the Ethernet DMA for "
"packet transfer between PPE ports and ARM cores, and enables the netdevice "
"driver for the PPE ports."
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:143
msgid ""
"The PPE driver files in drivers/net/ethernet/qualcomm/ppe/ are listed as "
"below:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:145
msgid "Makefile"
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:146
msgid "ppe.c"
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:147
msgid "ppe.h"
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:148
msgid "ppe_config.c"
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:149
msgid "ppe_config.h"
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:150
msgid "ppe_debugfs.c"
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:151
msgid "ppe_debugfs.h"
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:152
msgid "ppe_regs.h"
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:154
msgid ""
"The ppe.c file contains the main PPE platform driver and undertakes the "
"initialization of PPE switch core blocks such as QM, BM and L2. The "
"configuration APIs for these hardware blocks are provided in the ppe_config."
"c file."
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:158
msgid ""
"The ppe.h defines the PPE device data structure which will be used by PPE "
"driver functions."
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:160
msgid ""
"The ppe_debugfs.c enables the PPE statistics counters such as PPE port Rx "
"and Tx counters, CPU code counters and queue counters."
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:165
msgid "PPE Driver Supported SoCs"
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:167
msgid "The PPE driver supports the following IPQ SoC:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:169
msgid "IPQ9574"
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:173
msgid "Enabling the Driver"
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:175
msgid "The driver is located in the menu structure at::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:183
msgid "If the driver is built as a module, the module will be called qcom-ppe."
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:185
msgid ""
"The PPE driver functionally depends on the CMN PLL and NSSCC clock "
"controller drivers. Please make sure the dependent modules are installed "
"before installing the PPE driver module."
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:191
msgid "Debugging"
msgstr ""

#: ../../../networking/device_drivers/ethernet/qualcomm/ppe/ppe.rst:193
msgid ""
"The PPE hardware counters can be accessed using debugfs interface from the "
"``/sys/kernel/debug/ppe/`` directory."
msgstr ""
