# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../networking/device_drivers/ethernet/google/gve.rst:5
msgid "Linux kernel driver for Compute Engine Virtual Ethernet (gve):"
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:8
msgid "Supported Hardware"
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:9
msgid ""
"The GVE driver binds to a single PCI device id used by the virtual Ethernet "
"device found in some Compute Engine VMs."
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:13
msgid "Field"
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:13
msgid "Value"
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:13
msgid "Comments"
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:15
msgid "Vendor ID"
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:15
#: ../../../networking/device_drivers/ethernet/google/gve.rst:19
msgid "`0x1AE0`"
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:15
#: ../../../networking/device_drivers/ethernet/google/gve.rst:19
msgid "Google"
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:17
msgid "Device ID"
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:17
msgid "`0x0042`"
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:19
msgid "Sub-vendor ID"
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:21
msgid "Sub-device ID"
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:21
msgid "`0x0058`"
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:23
msgid "Revision ID"
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:23
msgid "`0x0`"
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:25
msgid "Device Class"
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:25
msgid "`0x200`"
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:25
msgid "Ethernet"
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:29
msgid "PCI Bars"
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:30
msgid ""
"The gVNIC PCI device exposes three 32-bit memory BARS: - Bar0 - Device "
"configuration and status registers. - Bar1 - MSI-X vector table - Bar2 - "
"IRQ, RX and TX doorbells"
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:36
msgid "Device Interactions"
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:37
msgid "The driver interacts with the device in the following ways:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:38
#: ../../../networking/device_drivers/ethernet/google/gve.rst:65
msgid "Registers"
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:39
msgid "A block of MMIO registers"
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:40
msgid "See gve_register.h for more detail"
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:41
msgid "Admin Queue"
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:42
#: ../../../networking/device_drivers/ethernet/google/gve.rst:48
msgid "See description below"
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:43
msgid "Reset"
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:44
msgid "At any time the device can be reset"
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:45
#: ../../../networking/device_drivers/ethernet/google/gve.rst:101
msgid "Interrupts"
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:46
msgid "See supported interrupts below"
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:47
msgid "Transmit and Receive Queues"
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:51
msgid "Descriptor Formats"
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:52
msgid ""
"GVE supports two descriptor formats: GQI and DQO. These two formats have "
"entirely different descriptors, which will be described below."
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:56
msgid "Addressing Mode"
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:57
msgid ""
"GVE supports two addressing modes: QPL and RDA. QPL (\"queue-page-list\") "
"mode communicates data through a set of pre-registered pages."
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:61
msgid ""
"For RDA (\"raw DMA addressing\") mode, the set of pages is dynamic. "
"Therefore, the packet buffers can be anywhere in guest memory."
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:66
msgid "All registers are MMIO."
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:68
msgid ""
"The registers are used for initializing and configuring the device as well "
"as querying device status in response to management interrupts."
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:72
msgid "Endianness"
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:73
msgid "Admin Queue messages and registers are all Big Endian."
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:74
msgid "GQI descriptors and datapath registers are Big Endian."
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:75
msgid "DQO descriptors and datapath registers are Little Endian."
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:78
msgid "Admin Queue (AQ)"
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:79
msgid ""
"The Admin Queue is a PAGE_SIZE memory block, treated as an array of AQ "
"commands, used by the driver to issue commands to the device and set up "
"resources.The driver and the device maintain a count of how many commands "
"have been submitted and executed. To issue AQ commands, the driver must do "
"the following (with proper locking):"
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:85
msgid "Copy new commands into next available slots in the AQ array"
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:86
msgid "Increment its counter by he number of new commands"
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:87
msgid "Write the counter into the GVE_ADMIN_QUEUE_DOORBELL register"
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:88
msgid ""
"Poll the ADMIN_QUEUE_EVENT_COUNTER register until it equals the value "
"written to the doorbell, or until a timeout."
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:91
msgid ""
"The device will update the status field in each AQ command reported as "
"executed through the ADMIN_QUEUE_EVENT_COUNTER register."
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:95
msgid "Device Resets"
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:96
msgid ""
"A device reset is triggered by writing 0x0 to the AQ PFN register. This "
"causes the device to release all resources allocated by the driver, "
"including the AQ itself."
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:102
msgid "The following interrupts are supported by the driver:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:105
msgid "Management Interrupt"
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:106
msgid ""
"The management interrupt is used by the device to tell the driver to look at "
"the GVE_DEVICE_STATUS register."
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:109
msgid ""
"The handler for the management irq simply queues the service task in the "
"workqueue to check the register and acks the irq."
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:113
msgid "Notification Block Interrupts"
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:114
msgid ""
"The notification block interrupts are used to tell the driver to poll the "
"queues associated with that interrupt."
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:117
msgid ""
"The handler for these irqs schedule the napi for that block to run and poll "
"the queues."
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:121
msgid "GQI Traffic Queues"
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:122
msgid ""
"GQI queues are composed of a descriptor ring and a buffer and are assigned "
"to a notification block."
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:125
msgid ""
"The descriptor rings are power-of-two-sized ring buffers consisting of fixed-"
"size descriptors. They advance their head pointer using a __be32 doorbell "
"located in Bar2. The tail pointers are advanced by consuming descriptors in-"
"order and updating a __be32 counter. Both the doorbell and the counter "
"overflow to zero."
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:131
msgid ""
"Each queue's buffers must be registered in advance with the device as a "
"queue page list, and packet data can only be put in those pages."
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:135
#: ../../../networking/device_drivers/ethernet/google/gve.rst:168
msgid "Transmit"
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:136
msgid ""
"gve maps the buffers for transmit rings into a FIFO and copies the packets "
"into the FIFO before sending them to the NIC."
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:140
#: ../../../networking/device_drivers/ethernet/google/gve.rst:173
msgid "Receive"
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:141
msgid ""
"The buffers for receive rings are put into a data ring that is the same "
"length as the descriptor ring and the head and tail pointers advance over "
"the rings together."
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:146
msgid "DQO Traffic Queues"
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:147
msgid "Every TX and RX queue is assigned a notification block."
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:149
msgid ""
"TX and RX buffers queues, which send descriptors to the device, use MMIO "
"doorbells to notify the device of new descriptors."
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:152
msgid ""
"RX and TX completion queues, which receive descriptors from the device, use "
"a \"generation bit\" to know when a descriptor was populated by the device. "
"The driver initializes all bits with the \"current generation\". The device "
"will populate received descriptors with the \"next generation\" which is "
"inverted from the current generation. When the ring wraps, the current/next "
"generation are swapped."
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:159
msgid ""
"It's the driver's responsibility to ensure that the RX and TX completion "
"queues are not overrun. This can be accomplished by limiting the number of "
"descriptors posted to HW."
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:163
msgid ""
"TX packets have a 16 bit completion_tag and RX buffers have a 16 bit "
"buffer_id. These will be returned on the TX completion and RX queues "
"respectively to let the driver know which packet/buffer was completed."
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:169
msgid ""
"A packet's buffers are DMA mapped for the device to access before "
"transmission. After the packet was successfully transmitted, the buffers are "
"unmapped."
msgstr ""

#: ../../../networking/device_drivers/ethernet/google/gve.rst:174
msgid ""
"The driver posts fixed sized buffers to HW on the RX buffer queue. The "
"packet received on the associated RX queue may span multiple descriptors."
msgstr ""
