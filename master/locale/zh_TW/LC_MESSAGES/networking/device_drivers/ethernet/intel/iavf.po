# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:5
msgid "Linux Base Driver for Intel(R) Ethernet Adaptive Virtual Function"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:7
msgid ""
"Intel Ethernet Adaptive Virtual Function Linux driver. Copyright(c) "
"2013-2018 Intel Corporation."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:11
msgid "Contents"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:13
#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:20
msgid "Overview"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:14
#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:33
msgid "Identifying Your Adapter"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:15
msgid "Additional Configurations"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:16
#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:222
msgid "Known Issues/Troubleshooting"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:17
#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:320
msgid "Support"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:22
msgid ""
"This file describes the iavf Linux Base Driver. This driver was formerly "
"called i40evf."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:25
msgid ""
"The iavf driver supports the below mentioned virtual function devices and "
"can only be activated on kernels running the i40e or newer Physical Function "
"(PF) driver compiled with CONFIG_PCI_IOV.  The iavf driver requires "
"CONFIG_PCI_MSI to be enabled."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:30
msgid "The guest OS loading the iavf driver must support MSI-X interrupts."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:35
msgid ""
"The driver in this kernel is compatible with devices based on the following:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:36
msgid "Intel(R) XL710 X710 Virtual Function"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:37
msgid "Intel(R) X722 Virtual Function"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:38
msgid "Intel(R) XXV710 Virtual Function"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:39
msgid "Intel(R) Ethernet Adaptive Virtual Function"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:41
msgid ""
"For the best performance, make sure the latest NVM/FW is installed on your "
"device."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:44
msgid ""
"For information on how to identify your adapter, and for the latest NVM/FW "
"images and Intel network drivers, refer to the Intel Support website: "
"https://www.intel.com/support"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:50
msgid "Additional Features and Configurations"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:53
msgid "Viewing Link Messages"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:54
msgid ""
"Link messages will not be displayed to the console if the distribution is "
"restricting system messages. In order to see network driver link messages on "
"your console, set dmesg to eight by entering the following::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:60
#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:184
#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:304
msgid "NOTE:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:61
msgid "This setting is not saved across reboots."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:64
msgid "ethtool"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:65
msgid ""
"The driver utilizes the ethtool interface for driver configuration and "
"diagnostics, as well as displaying statistical information. The latest "
"ethtool version is required for this functionality. Download it at: https://"
"www.kernel.org/pub/software/network/ethtool/"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:71
msgid "Setting VLAN Tag Stripping"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:72
msgid ""
"If you have applications that require Virtual Functions (VFs) to receive "
"packets with VLAN tags, you can disable VLAN tag stripping for the VF. The "
"Physical Function (PF) processes requests issued from the VF to enable or "
"disable VLAN tag stripping. Note that if the PF has assigned a VLAN to a VF, "
"then requests from that VF to set VLAN tag stripping will be ignored."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:78
msgid ""
"To enable/disable VLAN tag stripping for a VF, issue the following command "
"from inside the VM in which you are running the VF::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:83
msgid "or alternatively::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:88
msgid "Adaptive Virtual Function"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:89
msgid ""
"Adaptive Virtual Function (AVF) allows the virtual function driver, or VF, "
"to adapt to changing feature sets of the physical function driver (PF) with "
"which it is associated. This allows system administrators to update a PF "
"without having to update all the VFs associated with it. All AVFs have a "
"single common device ID and branding string."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:95
msgid ""
"AVFs have a minimum set of features known as \"base mode,\" but may provide "
"additional features depending on what features are available in the PF with "
"which the AVF is associated. The following are base mode features:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:99
msgid ""
"4 Queue Pairs (QP) and associated Configuration Status Registers (CSRs) for "
"Tx/Rx"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:101
msgid "i40e descriptors and ring format"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:102
msgid "Descriptor write-back completion"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:103
msgid "1 control queue, with i40e descriptors, CSRs and ring format"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:104
msgid "5 MSI-X interrupt vectors and corresponding i40e CSRs"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:105
msgid "1 Interrupt Throttle Rate (ITR) index"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:106
msgid "1 Virtual Station Interface (VSI) per VF"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:107
msgid "1 Traffic Class (TC), TC0"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:108
msgid ""
"Receive Side Scaling (RSS) with 64 entry indirection table and key, "
"configured through the PF"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:110
msgid "1 unicast MAC address reserved per VF"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:111
msgid "16 MAC address filters for each VF"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:112
msgid "Stateless offloads - non-tunneled checksums"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:113
msgid "AVF device ID"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:114
msgid "HW mailbox is used for VF to PF communications (including on Windows)"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:117
msgid "IEEE 802.1ad (QinQ) Support"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:118
msgid ""
"The IEEE 802.1ad standard, informally known as QinQ, allows for multiple "
"VLAN IDs within a single Ethernet frame. VLAN IDs are sometimes referred to "
"as \"tags,\" and multiple VLAN IDs are thus referred to as a \"tag stack.\" "
"Tag stacks allow L2 tunneling and the ability to segregate traffic within a "
"particular VLAN ID, among other uses."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:124
msgid "The following are examples of how to configure 802.1ad (QinQ)::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:129
msgid "Where \"24\" and \"371\" are example VLAN IDs."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:131
#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:196
msgid "NOTES:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:132
msgid ""
"Receive checksum offloads, cloud filters, and VLAN acceleration are not "
"supported for 802.1ad (QinQ) packets."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:136
msgid "Application Device Queues (ADq)"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:137
msgid ""
"Application Device Queues (ADq) allows you to dedicate one or more queues to "
"a specific application. This can reduce latency for the specified "
"application, and allow Tx traffic to be rate limited per application. Follow "
"the steps below to set ADq."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:142
msgid "Requirements:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:144
msgid "The sch_mqprio, act_mirred and cls_flower modules must be loaded"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:145
msgid "The latest version of iproute2"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:146
msgid ""
"If another driver (for example, DPDK) has set cloud filters, you cannot "
"enable ADQ"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:148
msgid ""
"Depending on the underlying PF device, ADQ cannot be enabled when the "
"following features are enabled:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:151
msgid "Data Center Bridging (DCB)"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:152
msgid "Multiple Functions per Port (MFP)"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:153
msgid "Sideband Filters"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:155
msgid ""
"1. Create traffic classes (TCs). Maximum of 8 TCs can be created per "
"interface. The shaper bw_rlimit parameter is optional."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:158
msgid ""
"Example: Sets up two tcs, tc0 and tc1, with 16 queues each and max tx rate "
"set to 1Gbit for tc0 and 3Gbit for tc1."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:167
msgid ""
"map: priority mapping for up to 16 priorities to tcs (e.g. map 0 0 0 0 1 1 1 "
"1 sets priorities 0-3 to use tc0 and 4-7 to use tc1)"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:170
msgid ""
"queues: for each tc, <num queues>@<offset> (e.g. queues 16@0 16@16 assigns "
"16 queues to tc0 at offset 0 and 16 queues to tc1 at offset 16. Max total "
"number of queues for all tcs is 64 or number of cores, whichever is lower.)"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:174
msgid ""
"hw 1 mode channel: ‘channel’ with ‘hw’ set to 1 is a new new hardware "
"offload mode in mqprio that makes full use of the mqprio options, the TCs, "
"the queue configurations, and the QoS parameters."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:178
msgid ""
"shaper bw_rlimit: for each tc, sets minimum and maximum bandwidth rates. "
"Totals must be equal or less than port speed."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:181
msgid ""
"For example: min_rate 1Gbit 3Gbit: Verify bandwidth limit using network "
"monitoring tools such as ``ifstat`` or ``sar -n DEV [interval] [number of "
"samples]``"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:185
msgid ""
"Setting up channels via ethtool (ethtool -L) is not supported when the TCs "
"are configured using mqprio."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:188
msgid "Enable HW TC offload on interface::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:192
msgid "Apply TCs to ingress (RX) flow of interface::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:197
msgid "Run all tc commands from the iproute2 <pathtoiproute2>/tc/ directory"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:198
msgid "ADq is not compatible with cloud filters"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:199
msgid ""
"Setting up channels via ethtool (ethtool -L) is not supported when the TCs "
"are configured using mqprio"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:201
msgid "You must have iproute2 latest version"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:202
msgid "NVM version 6.01 or later is required"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:203
msgid ""
"ADq cannot be enabled when any the following features are enabled: Data "
"Center Bridging (DCB), Multiple Functions per Port (MFP), or Sideband Filters"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:205
msgid ""
"If another driver (for example, DPDK) has set cloud filters, you cannot "
"enable ADq"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:207
msgid ""
"Tunnel filters are not supported in ADq. If encapsulated packets do arrive "
"in non-tunnel mode, filtering will be done on the inner headers.  For "
"example, for VXLAN traffic in non-tunnel mode, PCTYPE is identified as a "
"VXLAN encapsulated packet, outer headers are ignored. Therefore, inner "
"headers are matched."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:212
msgid ""
"If a TC filter on a PF matches traffic over a VF (on the PF), that traffic "
"will be routed to the appropriate queue of the PF, and will not be passed on "
"the VF. Such traffic will end up getting dropped higher up in the TCP/IP "
"stack as it does not match PF address data."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:216
msgid ""
"If traffic matches multiple TC filters that point to different TCs, that "
"traffic will be duplicated and sent to all matching TC queues.  The hardware "
"switch mirrors the packet to a VSI list when multiple filters are matched."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:225
msgid ""
"Bonding fails with VFs bound to an Intel(R) Ethernet Controller 700 series "
"device"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:226
msgid ""
"If you bind Virtual Functions (VFs) to an Intel(R) Ethernet Controller 700 "
"series based device, the VF slaves may fail when they become the active "
"slave. If the MAC address of the VF is set by the PF (Physical Function) of "
"the device, when you add a slave, or change the active-backup slave, Linux "
"bonding tries to sync the backup slave's MAC address to the same MAC address "
"as the active slave. Linux bonding will fail at this point. This issue will "
"not occur if the VF's MAC address is not set by the PF."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:235
msgid "Traffic Is Not Being Passed Between VM and Client"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:236
msgid ""
"You may not be able to pass traffic between a client system and a Virtual "
"Machine (VM) running on a separate host if the Virtual Function (VF, or "
"Virtual NIC) is not in trusted mode and spoof checking is enabled on the VF. "
"Note that this situation can occur in any combination of client, host, and "
"guest operating system. For information on how to set the VF to trusted "
"mode, refer to the section \"VLAN Tag Packet Steering\" in this readme "
"document. For information on setting spoof checking, refer to the section "
"\"MAC and VLAN anti-spoofing feature\" in this readme document."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:246
msgid "Do not unload port driver if VF with active VM is bound to it"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:247
msgid ""
"Do not unload a port's driver if a Virtual Function (VF) with an active "
"Virtual Machine (VM) is bound to it. Doing so will cause the port to appear "
"to hang. Once the VM shuts down, or otherwise releases the VF, the command "
"will complete."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:252
msgid "Using four traffic classes fails"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:253
msgid ""
"Do not try to reserve more than three traffic classes in the iavf driver. "
"Doing so will fail to set any traffic classes and will cause the driver to "
"write errors to stdout. Use a maximum of three queues to avoid this issue."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:258
msgid "Multiple log error messages on iavf driver removal"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:259
msgid ""
"If you have several VFs and you remove the iavf driver, several instances of "
"the following log errors are written to the log::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:267
msgid "Virtual machine does not get link"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:268
msgid ""
"If the virtual machine has more than one virtual port assigned to it, and "
"those virtual ports are bound to different physical ports, you may not get "
"link on all of the virtual ports. The following command may work around the "
"issue::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:274
msgid ""
"Where <PF> is the PF interface in the host, for example: p5p1. You may need "
"to run the command more than once to get link on all virtual ports."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:278
msgid "MAC address of Virtual Function changes unexpectedly"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:279
msgid ""
"If a Virtual Function's MAC address is not assigned in the host, then the VF "
"(virtual function) driver will use a random MAC address. This random MAC "
"address may change each time the VF driver is reloaded. You can assign a "
"static MAC address in the host machine. This static MAC address will survive "
"a VF driver reload."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:286
msgid "Driver Buffer Overflow Fix"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:287
msgid ""
"The fix to resolve CVE-2016-8105, referenced in Intel SA-00069 https://www."
"intel.com/content/www/us/en/security-center/advisory/intel-sa-00069.html is "
"included in this and future versions of the driver."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:292
msgid "Multiple Interfaces on Same Ethernet Broadcast Network"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:293
msgid ""
"Due to the default ARP behavior on Linux, it is not possible to have one "
"system on two IP networks in the same Ethernet broadcast domain (non-"
"partitioned switch) behave as expected. All Ethernet interfaces will respond "
"to IP traffic for any IP address assigned to the system. This results in "
"unbalanced receive traffic."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:299
msgid ""
"If you have multiple interfaces in a server, either turn on ARP filtering by "
"entering::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:305
msgid ""
"This setting is not saved across reboots. The configuration change can be "
"made permanent by adding the following line to the file /etc/sysctl.conf::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:310
msgid ""
"Another alternative is to install the interfaces in separate broadcast "
"domains (either in different switches or in a switch partitioned to VLANs)."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:314
msgid "Rx Page Allocation Errors"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:315
msgid ""
"'Page allocation failure. order:0' errors may occur under stress. This is "
"caused by the way the Linux kernel reports this stressed condition."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:321
msgid ""
"For general information, go to the Intel support website at: https://support."
"intel.com"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/iavf.rst:324
msgid ""
"If an issue is identified with the released source code on the supported "
"kernel with a supported adapter, email the specific information related to "
"the issue to intel-wired-lan@lists.osuosl.org."
msgstr ""
