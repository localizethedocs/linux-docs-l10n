# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../userspace-api/media/v4l/dev-meta.rst:7
msgid "Metadata Interface"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-meta.rst:9
msgid ""
"Metadata refers to any non-image data that supplements video frames with "
"additional information. This may include statistics computed over the image, "
"frame capture parameters supplied by the image source or device specific "
"parameters for specifying how the device processes images. This interface is "
"intended for transfer of metadata between the userspace and the hardware and "
"control of that operation."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-meta.rst:16
msgid ""
"The metadata interface is implemented on video device nodes. The device can "
"be dedicated to metadata or can support both video and metadata as specified "
"in its reported capabilities."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-meta.rst:21
msgid "Querying Capabilities"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-meta.rst:23
msgid ""
"Device nodes supporting the metadata capture interface set the "
"``V4L2_CAP_META_CAPTURE`` flag in the ``device_caps`` field of the :c:type:"
"`v4l2_capability` structure returned by the :c:func:`VIDIOC_QUERYCAP` ioctl. "
"That flag means the device can capture metadata to memory. Similarly, device "
"nodes supporting metadata output interface set the ``V4L2_CAP_META_OUTPUT`` "
"flag in the ``device_caps`` field of :c:type:`v4l2_capability` structure. "
"That flag means the device can read metadata from memory."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-meta.rst:32
msgid ""
"At least one of the read/write or streaming I/O methods must be supported."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-meta.rst:36
msgid "Data Format Negotiation"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-meta.rst:38
msgid ""
"The metadata device uses the :ref:`format` ioctls to select the capture "
"format. The metadata buffer content format is bound to that selected format. "
"In addition to the basic :ref:`format` ioctls, the :c:func:`VIDIOC_ENUM_FMT` "
"ioctl must be supported as well."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-meta.rst:43
msgid ""
"To use the :ref:`format` ioctls applications set the ``type`` field of the :"
"c:type:`v4l2_format` structure to ``V4L2_BUF_TYPE_META_CAPTURE`` or to "
"``V4L2_BUF_TYPE_META_OUTPUT`` and use the :c:type:`v4l2_meta_format` "
"``meta`` member of the ``fmt`` union as needed per the desired operation. "
"Both drivers and applications must set the remainder of the :c:type:"
"`v4l2_format` structure to 0."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-meta.rst:50
msgid ""
"Devices that capture metadata by line have the struct v4l2_fmtdesc "
"``V4L2_FMT_FLAG_META_LINE_BASED`` flag set for :c:func:`VIDIOC_ENUM_FMT`. "
"Such devices can typically also :ref:`capture image data <capture>`. This "
"primarily involves devices that receive the data from a different devices "
"such as a camera sensor."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-meta.rst:60
msgid "struct v4l2_meta_format"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-meta.rst:65
#: ../../../userspace-api/media/v4l/dev-meta.rst:70
#: ../../../userspace-api/media/v4l/dev-meta.rst:74
#: ../../../userspace-api/media/v4l/dev-meta.rst:79
#: ../../../userspace-api/media/v4l/dev-meta.rst:84
msgid "__u32"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-meta.rst:66
msgid "``dataformat``"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-meta.rst:67
msgid ""
"The data format, set by the application. This is a little endian :ref:`four "
"character code <v4l2-fourcc>`. V4L2 defines metadata formats in :ref:`meta-"
"formats`."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-meta.rst:71
msgid "``buffersize``"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-meta.rst:72
msgid ""
"Maximum buffer size in bytes required for data. The value is set by the "
"driver."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-meta.rst:75
msgid "``width``"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-meta.rst:76
msgid ""
"Width of a line of metadata in Data Units. Valid when :c:type`v4l2_fmtdesc` "
"flag ``V4L2_FMT_FLAG_META_LINE_BASED`` is set, otherwise zero. See :c:func:"
"`VIDIOC_ENUM_FMT`."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-meta.rst:80
msgid "``height``"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-meta.rst:81
msgid ""
"Number of rows of metadata. Valid when :c:type`v4l2_fmtdesc` flag "
"``V4L2_FMT_FLAG_META_LINE_BASED`` is set, otherwise zero. See :c:func:"
"`VIDIOC_ENUM_FMT`."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-meta.rst:85
msgid "``bytesperline``"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-meta.rst:86
msgid ""
"Offset in bytes between the beginning of two consecutive lines. Valid when :"
"c:type`v4l2_fmtdesc` flag ``V4L2_FMT_FLAG_META_LINE_BASED`` is set, "
"otherwise zero. See :c:func:`VIDIOC_ENUM_FMT`."
msgstr ""
