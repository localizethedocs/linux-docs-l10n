# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../userspace-api/media/v4l/dev-encoder.rst:7
msgid "Memory-to-Memory Stateful Video Encoder Interface"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:9
msgid ""
"A stateful video encoder takes raw video frames in display order and encodes "
"them into a bytestream. It generates complete chunks of the bytestream, "
"including all metadata, headers, etc. The resulting bytestream does not "
"require any further post-processing by the client."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:14
msgid ""
"Performing software stream processing, header generation etc. in the driver "
"in order to support this interface is strongly discouraged. In case such "
"operations are needed, use of the Stateless Video Encoder Interface (in "
"development) is strongly advised."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:20
msgid "Conventions and Notations Used in This Document"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:22
msgid ""
"The general V4L2 API rules apply if not specified in this document otherwise."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:25
msgid ""
"The meaning of words \"must\", \"may\", \"should\", etc. is as per `RFC 2119 "
"<https://tools.ietf.org/html/rfc2119>`_."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:28
msgid "All steps not marked \"optional\" are required."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:30
msgid ""
":c:func:`VIDIOC_G_EXT_CTRLS` and :c:func:`VIDIOC_S_EXT_CTRLS` may be used "
"interchangeably with :c:func:`VIDIOC_G_CTRL` and :c:func:`VIDIOC_S_CTRL`, "
"unless specified otherwise."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:34
msgid ""
"Single-planar API (see :ref:`planar-apis`) and applicable structures may be "
"used interchangeably with multi-planar API, unless specified otherwise, "
"depending on encoder capabilities and following the general V4L2 guidelines."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:38
msgid ""
"i = [a..b]: sequence of integers from a to b, inclusive, i.e. i = [0..2]: i "
"= 0, 1, 2."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:41
msgid ""
"Given an ``OUTPUT`` buffer A, then A' represents a buffer on the ``CAPTURE`` "
"queue containing data that resulted from processing buffer A."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:45
msgid "Glossary"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:47
msgid "Refer to :ref:`decoder-glossary`."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:50
msgid "State Machine"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:85
msgid "Querying Capabilities"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:87
msgid ""
"To enumerate the set of coded formats supported by the encoder, the client "
"may call :c:func:`VIDIOC_ENUM_FMT` on ``CAPTURE``."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:90
msgid ""
"The full set of supported formats will be returned, regardless of the format "
"set on ``OUTPUT``."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:93
msgid ""
"To enumerate the set of supported raw formats, the client may call :c:func:"
"`VIDIOC_ENUM_FMT` on ``OUTPUT``."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:96
msgid ""
"Only the formats supported for the format currently active on ``CAPTURE`` "
"will be returned."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:99
msgid ""
"In order to enumerate raw formats supported by a given coded format, the "
"client must first set that coded format on ``CAPTURE`` and then enumerate "
"the formats on ``OUTPUT``."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:103
msgid ""
"The client may use :c:func:`VIDIOC_ENUM_FRAMESIZES` to detect supported "
"resolutions for a given format, passing the desired pixel format in :c:type:"
"`v4l2_frmsizeenum` ``pixel_format``."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:107
msgid ""
"Values returned by :c:func:`VIDIOC_ENUM_FRAMESIZES` for a coded pixel format "
"will include all possible coded resolutions supported by the encoder for the "
"given coded pixel format."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:111
msgid ""
"Values returned by :c:func:`VIDIOC_ENUM_FRAMESIZES` for a raw pixel format "
"will include all possible frame buffer resolutions supported by the encoder "
"for the given raw pixel format and coded format currently set on ``CAPTURE``."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:116
msgid ""
"The client may use :c:func:`VIDIOC_ENUM_FRAMEINTERVALS` to detect supported "
"frame intervals for a given format and resolution, passing the desired pixel "
"format in :c:type:`v4l2_frmivalenum` ``pixel_format`` and the resolution in :"
"c:type:`v4l2_frmivalenum` ``width`` and :c:type:`v4l2_frmivalenum` "
"``height``."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:122
msgid ""
"Values returned by :c:func:`VIDIOC_ENUM_FRAMEINTERVALS` for a coded pixel "
"format and coded resolution will include all possible frame intervals "
"supported by the encoder for the given coded pixel format and resolution."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:126
msgid ""
"Values returned by :c:func:`VIDIOC_ENUM_FRAMEINTERVALS` for a raw pixel "
"format and resolution will include all possible frame intervals supported by "
"the encoder for the given raw pixel format and resolution and for the coded "
"format, coded resolution and coded frame interval currently set on "
"``CAPTURE``."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:132
msgid ""
"Support for :c:func:`VIDIOC_ENUM_FRAMEINTERVALS` is optional. If it is not "
"implemented, then there are no special restrictions other than the limits of "
"the codec itself."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:136
msgid ""
"Supported profiles and levels for the coded format currently set on "
"``CAPTURE``, if applicable, may be queried using their respective controls "
"via :c:func:`VIDIOC_QUERYCTRL`."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:140
msgid ""
"Any additional encoder capabilities may be discovered by querying their "
"respective controls."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:144
msgid "Initialization"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:146
msgid ""
"Set the coded format on the ``CAPTURE`` queue via :c:func:`VIDIOC_S_FMT`."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:148
#: ../../../userspace-api/media/v4l/dev-encoder.rst:184
#: ../../../userspace-api/media/v4l/dev-encoder.rst:204
#: ../../../userspace-api/media/v4l/dev-encoder.rst:236
#: ../../../userspace-api/media/v4l/dev-encoder.rst:287
#: ../../../userspace-api/media/v4l/dev-encoder.rst:329
#: ../../../userspace-api/media/v4l/dev-encoder.rst:378
#: ../../../userspace-api/media/v4l/dev-encoder.rst:412
#: ../../../userspace-api/media/v4l/dev-encoder.rst:567
msgid "**Required fields:**"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:150
#: ../../../userspace-api/media/v4l/dev-encoder.rst:186
#: ../../../userspace-api/media/v4l/dev-encoder.rst:206
#: ../../../userspace-api/media/v4l/dev-encoder.rst:238
#: ../../../userspace-api/media/v4l/dev-encoder.rst:289
#: ../../../userspace-api/media/v4l/dev-encoder.rst:331
#: ../../../userspace-api/media/v4l/dev-encoder.rst:383
#: ../../../userspace-api/media/v4l/dev-encoder.rst:417
msgid "``type``"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:151
#: ../../../userspace-api/media/v4l/dev-encoder.rst:290
msgid "a ``V4L2_BUF_TYPE_*`` enum appropriate for ``CAPTURE``."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:153
#: ../../../userspace-api/media/v4l/dev-encoder.rst:194
#: ../../../userspace-api/media/v4l/dev-encoder.rst:209
msgid "``pixelformat``"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:154
msgid "the coded format to be produced."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:156
#: ../../../userspace-api/media/v4l/dev-encoder.rst:168
msgid "``sizeimage``"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:157
msgid ""
"desired size of ``CAPTURE`` buffers; the encoder may adjust it to match "
"hardware requirements."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:160
#: ../../../userspace-api/media/v4l/dev-encoder.rst:171
#: ../../../userspace-api/media/v4l/dev-encoder.rst:212
#: ../../../userspace-api/media/v4l/dev-encoder.rst:220
msgid "``width``, ``height``"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:161
msgid "ignored (read-only)."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:163
#: ../../../userspace-api/media/v4l/dev-encoder.rst:189
#: ../../../userspace-api/media/v4l/dev-encoder.rst:198
#: ../../../userspace-api/media/v4l/dev-encoder.rst:215
#: ../../../userspace-api/media/v4l/dev-encoder.rst:225
#: ../../../userspace-api/media/v4l/dev-encoder.rst:387
#: ../../../userspace-api/media/v4l/dev-encoder.rst:420
msgid "other fields"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:164
#: ../../../userspace-api/media/v4l/dev-encoder.rst:190
#: ../../../userspace-api/media/v4l/dev-encoder.rst:199
#: ../../../userspace-api/media/v4l/dev-encoder.rst:216
#: ../../../userspace-api/media/v4l/dev-encoder.rst:226
#: ../../../userspace-api/media/v4l/dev-encoder.rst:388
#: ../../../userspace-api/media/v4l/dev-encoder.rst:421
msgid "follow standard semantics."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:166
#: ../../../userspace-api/media/v4l/dev-encoder.rst:192
#: ../../../userspace-api/media/v4l/dev-encoder.rst:218
#: ../../../userspace-api/media/v4l/dev-encoder.rst:248
#: ../../../userspace-api/media/v4l/dev-encoder.rst:299
#: ../../../userspace-api/media/v4l/dev-encoder.rst:342
#: ../../../userspace-api/media/v4l/dev-encoder.rst:390
#: ../../../userspace-api/media/v4l/dev-encoder.rst:423
msgid "**Returned fields:**"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:169
msgid "adjusted size of ``CAPTURE`` buffers."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:172
msgid ""
"the coded size selected by the encoder based on current state, e.g. "
"``OUTPUT`` format, selection rectangles, etc. (read-only)."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:177
msgid ""
"Changing the ``CAPTURE`` format may change the currently set ``OUTPUT`` "
"format. How the new ``OUTPUT`` format is determined is up to the encoder and "
"the client must ensure it matches its needs afterwards."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:181
msgid ""
"**Optional.** Enumerate supported ``OUTPUT`` formats (raw formats for "
"source) for the selected coded format via :c:func:`VIDIOC_ENUM_FMT`."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:187
#: ../../../userspace-api/media/v4l/dev-encoder.rst:207
#: ../../../userspace-api/media/v4l/dev-encoder.rst:239
#: ../../../userspace-api/media/v4l/dev-encoder.rst:332
#: ../../../userspace-api/media/v4l/dev-encoder.rst:418
msgid "a ``V4L2_BUF_TYPE_*`` enum appropriate for ``OUTPUT``."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:195
msgid ""
"raw format supported for the coded format currently selected on the "
"``CAPTURE`` queue."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:201
msgid ""
"Set the raw source format on the ``OUTPUT`` queue via :c:func:`VIDIOC_S_FMT`."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:210
msgid "raw format of the source."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:213
msgid "source resolution."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:221
msgid ""
"may be adjusted to match encoder minimums, maximums and alignment "
"requirements, as required by the currently selected formats, as reported by :"
"c:func:`VIDIOC_ENUM_FRAMESIZES`."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:228
msgid ""
"Setting the ``OUTPUT`` format will reset the selection rectangles to their "
"default values, based on the new resolution, as described in the next step."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:232
msgid ""
"Set the raw frame interval on the ``OUTPUT`` queue via :c:func:"
"`VIDIOC_S_PARM`. This also sets the coded frame interval on the ``CAPTURE`` "
"queue to the same value."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:241
msgid "``parm.output``"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:242
msgid "set all fields except ``parm.output.timeperframe`` to 0."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:244
#: ../../../userspace-api/media/v4l/dev-encoder.rst:250
msgid "``parm.output.timeperframe``"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:245
msgid ""
"the desired frame interval; the encoder may adjust it to match hardware "
"requirements."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:251
#: ../../../userspace-api/media/v4l/dev-encoder.rst:302
msgid "the adjusted frame interval."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:255
msgid ""
"Changing the ``OUTPUT`` frame interval *also* sets the framerate that the "
"encoder uses to encode the video. So setting the frame interval to 1/24 (or "
"24 frames per second) will produce a coded video stream that can be played "
"back at that speed. The frame interval for the ``OUTPUT`` queue is just a "
"hint, the application may provide raw frames at a different rate. It can be "
"used by the driver to help schedule multiple encoders running in parallel."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:263
msgid ""
"In the next step the ``CAPTURE`` frame interval can optionally be changed to "
"a different value. This is useful for off-line encoding were the coded frame "
"interval can be different from the rate at which raw frames are supplied."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:270
#: ../../../userspace-api/media/v4l/dev-encoder.rst:313
msgid ""
"``timeperframe`` deals with *frames*, not fields. So for interlaced formats "
"this is the time per two fields, since a frame consists of a top and a "
"bottom field."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:276
msgid ""
"It is due to historical reasons that changing the ``OUTPUT`` frame interval "
"also changes the coded frame interval on the ``CAPTURE`` queue. Ideally "
"these would be independent settings, but that would break the existing API."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:281
msgid ""
"**Optional** Set the coded frame interval on the ``CAPTURE`` queue via :c:"
"func:`VIDIOC_S_PARM`. This is only necessary if the coded frame interval is "
"different from the raw frame interval, which is typically the case for off-"
"line encoding. Support for this feature is signalled by the :ref:"
"`V4L2_FMT_FLAG_ENC_CAP_FRAME_INTERVAL <fmtdesc-flags>` format flag."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:292
msgid "``parm.capture``"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:293
msgid "set all fields except ``parm.capture.timeperframe`` to 0."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:295
#: ../../../userspace-api/media/v4l/dev-encoder.rst:301
msgid "``parm.capture.timeperframe``"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:296
msgid ""
"the desired coded frame interval; the encoder may adjust it to match "
"hardware requirements."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:306
msgid ""
"Changing the ``CAPTURE`` frame interval sets the framerate for the coded "
"video. It does *not* set the rate at which buffers arrive on the ``CAPTURE`` "
"queue, that depends on how fast the encoder is and how fast raw frames are "
"queued on the ``OUTPUT`` queue."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:319
msgid ""
"Not all drivers support this functionality, in that case just set the "
"desired coded frame interval for the ``OUTPUT`` queue."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:322
msgid ""
"However, drivers that can schedule multiple encoders based on the ``OUTPUT`` "
"frame interval must support this optional feature."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:325
msgid ""
"**Optional.** Set the visible resolution for the stream metadata via :c:func:"
"`VIDIOC_S_SELECTION` on the ``OUTPUT`` queue if it is desired to be "
"different than the full OUTPUT resolution."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:334
msgid "``target``"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:335
msgid "set to ``V4L2_SEL_TGT_CROP``."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:337
#: ../../../userspace-api/media/v4l/dev-encoder.rst:344
msgid "``r.left``, ``r.top``, ``r.width``, ``r.height``"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:338
msgid ""
"visible rectangle; this must fit within the `V4L2_SEL_TGT_CROP_BOUNDS` "
"rectangle and may be subject to adjustment to match codec and hardware "
"constraints."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:345
msgid "visible rectangle adjusted by the encoder."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:347
msgid "The following selection targets are supported on ``OUTPUT``:"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:349
msgid "``V4L2_SEL_TGT_CROP_BOUNDS``"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:350
msgid "equal to the full source frame, matching the active ``OUTPUT`` format."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:353
msgid "``V4L2_SEL_TGT_CROP_DEFAULT``"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:354
msgid "equal to ``V4L2_SEL_TGT_CROP_BOUNDS``."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:356
msgid "``V4L2_SEL_TGT_CROP``"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:357
msgid ""
"rectangle within the source buffer to be encoded into the ``CAPTURE`` "
"stream; defaults to ``V4L2_SEL_TGT_CROP_DEFAULT``."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:362
msgid ""
"A common use case for this selection target is encoding a source video with "
"a resolution that is not a multiple of a macroblock, e.g.  the common "
"1920x1080 resolution may require the source buffers to be aligned to "
"1920x1088 for codecs with 16x16 macroblock size. To avoid encoding the "
"padding, the client needs to explicitly configure this selection target to "
"1920x1080."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:371
msgid ""
"The encoder may adjust the crop/compose rectangles to the nearest supported "
"ones to meet codec and hardware requirements. The client needs to check the "
"adjusted rectangle returned by :c:func:`VIDIOC_S_SELECTION`."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:375
msgid ""
"Allocate buffers for both ``OUTPUT`` and ``CAPTURE`` via :c:func:"
"`VIDIOC_REQBUFS`. This may be performed in any order."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:380
#: ../../../userspace-api/media/v4l/dev-encoder.rst:392
#: ../../../userspace-api/media/v4l/dev-encoder.rst:414
#: ../../../userspace-api/media/v4l/dev-encoder.rst:425
msgid "``count``"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:381
#: ../../../userspace-api/media/v4l/dev-encoder.rst:415
msgid "requested number of buffers to allocate; greater than zero."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:384
msgid "a ``V4L2_BUF_TYPE_*`` enum appropriate for ``OUTPUT`` or ``CAPTURE``."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:393
msgid "actual number of buffers allocated."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:397
msgid ""
"The actual number of allocated buffers may differ from the ``count`` given. "
"The client must check the updated value of ``count`` after the call returns."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:403
msgid ""
"To allocate more than the minimum number of OUTPUT buffers (for pipeline "
"depth), the client may query the ``V4L2_CID_MIN_BUFFERS_FOR_OUTPUT`` control "
"to get the minimum number of buffers required, and pass the obtained value "
"plus the number of additional buffers needed in the ``count`` field to :c:"
"func:`VIDIOC_REQBUFS`."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:409
msgid ""
"Alternatively, :c:func:`VIDIOC_CREATE_BUFS` can be used to have more control "
"over buffer allocation."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:426
msgid "adjusted to the number of allocated buffers."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:428
msgid ""
"Begin streaming on both ``OUTPUT`` and ``CAPTURE`` queues via :c:func:"
"`VIDIOC_STREAMON`. This may be performed in any order. The actual encoding "
"process starts when both queues start streaming."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:434
msgid ""
"If the client stops the ``CAPTURE`` queue during the encode process and then "
"restarts it again, the encoder will begin generating a stream independent "
"from the stream generated before the stop. The exact constraints depend on "
"the coded format, but may include the following implications:"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:439
#: ../../../userspace-api/media/v4l/dev-encoder.rst:675
msgid ""
"encoded frames produced after the restart must not reference any frames "
"produced before the stop, e.g. no long term references for H.264/HEVC,"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:443
#: ../../../userspace-api/media/v4l/dev-encoder.rst:678
msgid ""
"any headers that must be included in a standalone stream must be produced "
"again, e.g. SPS and PPS for H.264/HEVC."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:447
msgid "Encoding"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:449
msgid ""
"This state is reached after the `Initialization` sequence finishes "
"successfully.  In this state, the client queues and dequeues buffers to both "
"queues via :c:func:`VIDIOC_QBUF` and :c:func:`VIDIOC_DQBUF`, following the "
"standard semantics."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:454
msgid ""
"The content of encoded ``CAPTURE`` buffers depends on the active coded pixel "
"format and may be affected by codec-specific extended controls, as stated in "
"the documentation of each format."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:458
msgid ""
"Both queues operate independently, following standard behavior of V4L2 "
"buffer queues and memory-to-memory devices. In addition, the order of "
"encoded frames dequeued from the ``CAPTURE`` queue may differ from the order "
"of queuing raw frames to the ``OUTPUT`` queue, due to properties of the "
"selected coded format, e.g. frame reordering."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:464
msgid ""
"The client must not assume any direct relationship between ``CAPTURE`` and "
"``OUTPUT`` buffers and any specific timing of buffers becoming available to "
"dequeue. Specifically:"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:468
msgid ""
"a buffer queued to ``OUTPUT`` may result in more than one buffer produced on "
"``CAPTURE`` (for example, if returning an encoded frame allowed the encoder "
"to return a frame that preceded it in display, but succeeded it in the "
"decode order; however, there may be other reasons for this as well),"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:473
msgid ""
"a buffer queued to ``OUTPUT`` may result in a buffer being produced on "
"``CAPTURE`` later into encode process, and/or after processing further "
"``OUTPUT`` buffers, or be returned out of order, e.g. if display reordering "
"is used,"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:478
msgid ""
"buffers may become available on the ``CAPTURE`` queue without additional "
"buffers queued to ``OUTPUT`` (e.g. during drain or ``EOS``), because of the "
"``OUTPUT`` buffers queued in the past whose encoding results are only "
"available at later time, due to specifics of the encoding process,"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:483
msgid ""
"buffers queued to ``OUTPUT`` may not become available to dequeue instantly "
"after being encoded into a corresponding ``CAPTURE`` buffer, e.g. if the "
"encoder needs to use the frame as a reference for encoding further frames."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:489
msgid ""
"To allow matching encoded ``CAPTURE`` buffers with ``OUTPUT`` buffers they "
"originated from, the client can set the ``timestamp`` field of the :c:type:"
"`v4l2_buffer` struct when queuing an ``OUTPUT`` buffer. The ``CAPTURE`` "
"buffer(s), which resulted from encoding that ``OUTPUT`` buffer will have "
"their ``timestamp`` field set to the same value when dequeued."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:495
msgid ""
"In addition to the straightforward case of one ``OUTPUT`` buffer producing "
"one ``CAPTURE`` buffer, the following cases are defined:"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:498
msgid ""
"one ``OUTPUT`` buffer generates multiple ``CAPTURE`` buffers: the same "
"``OUTPUT`` timestamp will be copied to multiple ``CAPTURE`` buffers,"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:501
msgid ""
"the encoding order differs from the presentation order (i.e. the ``CAPTURE`` "
"buffers are out-of-order compared to the ``OUTPUT`` buffers): ``CAPTURE`` "
"timestamps will not retain the order of ``OUTPUT`` timestamps."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:507
msgid ""
"To let the client distinguish between frame types (keyframes, intermediate "
"frames; the exact list of types depends on the coded format), the "
"``CAPTURE`` buffers will have corresponding flag bits set in their :c:type:"
"`v4l2_buffer` struct when dequeued. See the documentation of :c:type:"
"`v4l2_buffer` and each coded pixel format for exact list of flags and their "
"meanings."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:514
msgid ""
"Should an encoding error occur, it will be reported to the client with the "
"level of details depending on the encoder capabilities. Specifically:"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:517
msgid ""
"the ``CAPTURE`` buffer (if any) that contains the results of the failed "
"encode operation will be returned with the ``V4L2_BUF_FLAG_ERROR`` flag set,"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:520
msgid ""
"if the encoder is able to precisely report the ``OUTPUT`` buffer(s) that "
"triggered the error, such buffer(s) will be returned with the "
"``V4L2_BUF_FLAG_ERROR`` flag set."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:526
msgid ""
"If a ``CAPTURE`` buffer is too small then it is just returned with the "
"``V4L2_BUF_FLAG_ERROR`` flag set. More work is needed to detect that this "
"error occurred because the buffer was too small, and to provide support to "
"free existing buffers that were too small."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:531
msgid ""
"In case of a fatal failure that does not allow the encoding to continue, any "
"further operations on corresponding encoder file handle will return the -EIO "
"error code. The client may close the file handle and open a new one, or "
"alternatively reinitialize the instance by stopping streaming on both "
"queues, releasing all buffers and performing the Initialization sequence "
"again."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:538
msgid "Encoding Parameter Changes"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:540
msgid ""
"The client is allowed to use :c:func:`VIDIOC_S_CTRL` to change encoder "
"parameters at any time. The availability of parameters is encoder-specific "
"and the client must query the encoder to find the set of available controls."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:544
msgid ""
"The ability to change each parameter during encoding is encoder-specific, as "
"per the standard semantics of the V4L2 control interface. The client may "
"attempt to set a control during encoding and if the operation fails with the "
"-EBUSY error code, the ``CAPTURE`` queue needs to be stopped for the "
"configuration change to be allowed. To do this, it may follow the `Drain` "
"sequence to avoid losing the already queued/encoded frames."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:551
msgid ""
"The timing of parameter updates is encoder-specific, as per the standard "
"semantics of the V4L2 control interface. If the client needs to apply the "
"parameters exactly at specific frame, using the Request API (:ref:`media-"
"request-api`) should be considered, if supported by the encoder."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:557
msgid "Drain"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:559
msgid ""
"To ensure that all the queued ``OUTPUT`` buffers have been processed and the "
"related ``CAPTURE`` buffers are given to the client, the client must follow "
"the drain sequence described below. After the drain sequence ends, the "
"client has received all encoded frames for all ``OUTPUT`` buffers queued "
"before the sequence was started."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:565
msgid "Begin the drain sequence by issuing :c:func:`VIDIOC_ENCODER_CMD`."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:569
msgid "``cmd``"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:570
msgid "set to ``V4L2_ENC_CMD_STOP``."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:572
msgid "``flags``"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:573
#: ../../../userspace-api/media/v4l/dev-encoder.rst:576
msgid "set to 0."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:575
msgid "``pts``"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:580
msgid ""
"The sequence can be only initiated if both ``OUTPUT`` and ``CAPTURE`` queues "
"are streaming. For compatibility reasons, the call to :c:func:"
"`VIDIOC_ENCODER_CMD` will not fail even if any of the queues is not "
"streaming, but at the same time it will not initiate the `Drain` sequence "
"and so the steps described below would not be applicable."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:586
msgid ""
"Any ``OUTPUT`` buffers queued by the client before the :c:func:"
"`VIDIOC_ENCODER_CMD` was issued will be processed and encoded as normal. The "
"client must continue to handle both queues independently, similarly to "
"normal encode operation. This includes:"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:591
msgid ""
"queuing and dequeuing ``CAPTURE`` buffers, until a buffer marked with the "
"``V4L2_BUF_FLAG_LAST`` flag is dequeued,"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:596
msgid ""
"The last buffer may be empty (with :c:type:`v4l2_buffer` ``bytesused`` = 0) "
"and in that case it must be ignored by the client, as it does not contain an "
"encoded frame."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:602
msgid ""
"Any attempt to dequeue more ``CAPTURE`` buffers beyond the buffer marked "
"with ``V4L2_BUF_FLAG_LAST`` will result in a -EPIPE error from :c:func:"
"`VIDIOC_DQBUF`."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:606
msgid ""
"dequeuing processed ``OUTPUT`` buffers, until all the buffers queued before "
"the ``V4L2_ENC_CMD_STOP`` command are dequeued,"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:609
msgid "dequeuing the ``V4L2_EVENT_EOS`` event, if the client subscribes to it."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:613
msgid ""
"For backwards compatibility, the encoder will signal a ``V4L2_EVENT_EOS`` "
"event when the last frame has been encoded and all frames are ready to be "
"dequeued. It is deprecated behavior and the client must not rely on it. The "
"``V4L2_BUF_FLAG_LAST`` buffer flag should be used instead."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:618
msgid ""
"Once all ``OUTPUT`` buffers queued before the ``V4L2_ENC_CMD_STOP`` call are "
"dequeued and the last ``CAPTURE`` buffer is dequeued, the encoder is stopped "
"and it will accept, but not process any newly queued ``OUTPUT`` buffers "
"until the client issues any of the following operations:"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:623
msgid ""
"``V4L2_ENC_CMD_START`` - the encoder will not be reset and will resume "
"operation normally, with all the state from before the drain,"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:626
msgid ""
"a pair of :c:func:`VIDIOC_STREAMOFF` and :c:func:`VIDIOC_STREAMON` on the "
"``CAPTURE`` queue - the encoder will be reset (see the `Reset` sequence) and "
"then resume encoding,"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:630
msgid ""
"a pair of :c:func:`VIDIOC_STREAMOFF` and :c:func:`VIDIOC_STREAMON` on the "
"``OUTPUT`` queue - the encoder will resume operation normally, however any "
"source frames queued to the ``OUTPUT`` queue between ``V4L2_ENC_CMD_STOP`` "
"and :c:func:`VIDIOC_STREAMOFF` will be discarded."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:637
msgid ""
"Once the drain sequence is initiated, the client needs to drive it to "
"completion, as described by the steps above, unless it aborts the process by "
"issuing :c:func:`VIDIOC_STREAMOFF` on any of the ``OUTPUT`` or ``CAPTURE`` "
"queues.  The client is not allowed to issue ``V4L2_ENC_CMD_START`` or "
"``V4L2_ENC_CMD_STOP`` again while the drain sequence is in progress and they "
"will fail with -EBUSY error code if attempted."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:644
msgid "For reference, handling of various corner cases is described below:"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:646
msgid ""
"In case of no buffer in the ``OUTPUT`` queue at the time the "
"``V4L2_ENC_CMD_STOP`` command was issued, the drain sequence completes "
"immediately and the encoder returns an empty ``CAPTURE`` buffer with the "
"``V4L2_BUF_FLAG_LAST`` flag set."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:651
msgid ""
"In case of no buffer in the ``CAPTURE`` queue at the time the drain sequence "
"completes, the next time the client queues a ``CAPTURE`` buffer it is "
"returned at once as an empty buffer with the ``V4L2_BUF_FLAG_LAST`` flag set."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:656
msgid ""
"If :c:func:`VIDIOC_STREAMOFF` is called on the ``CAPTURE`` queue in the "
"middle of the drain sequence, the drain sequence is canceled and all "
"``CAPTURE`` buffers are implicitly returned to the client."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:660
msgid ""
"If :c:func:`VIDIOC_STREAMOFF` is called on the ``OUTPUT`` queue in the "
"middle of the drain sequence, the drain sequence completes immediately and "
"next ``CAPTURE`` buffer will be returned empty with the "
"``V4L2_BUF_FLAG_LAST`` flag set."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:665
msgid ""
"Although not mandatory, the availability of encoder commands may be queried "
"using :c:func:`VIDIOC_TRY_ENCODER_CMD`."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:669
msgid "Reset"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:671
msgid ""
"The client may want to request the encoder to reinitialize the encoding, so "
"that the following stream data becomes independent from the stream data "
"generated before. Depending on the coded format, that may imply that:"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:681
msgid "This can be achieved by performing the reset sequence."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:683
msgid ""
"Perform the `Drain` sequence to ensure all the in-flight encoding finishes "
"and respective buffers are dequeued."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:686
msgid ""
"Stop streaming on the ``CAPTURE`` queue via :c:func:`VIDIOC_STREAMOFF`. This "
"will return all currently queued ``CAPTURE`` buffers to the client, without "
"valid frame data."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:690
msgid ""
"Start streaming on the ``CAPTURE`` queue via :c:func:`VIDIOC_STREAMON` and "
"continue with regular encoding sequence. The encoded frames produced into "
"``CAPTURE`` buffers from now on will contain a standalone stream that can be "
"decoded without the need for frames encoded before the reset sequence, "
"starting at the first ``OUTPUT`` buffer queued after issuing the "
"`V4L2_ENC_CMD_STOP` of the `Drain` sequence."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:697
msgid ""
"This sequence may be also used to change encoding parameters for encoders "
"without the ability to change the parameters on the fly."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:701
msgid "Commit Points"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:703
msgid ""
"Setting formats and allocating buffers triggers changes in the behavior of "
"the encoder."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:706
msgid ""
"Setting the format on the ``CAPTURE`` queue may change the set of formats "
"supported/advertised on the ``OUTPUT`` queue. In particular, it also means "
"that the ``OUTPUT`` format may be reset and the client must not rely on the "
"previously set format being preserved."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:711
msgid ""
"Enumerating formats on the ``OUTPUT`` queue always returns only formats "
"supported for the current ``CAPTURE`` format."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:714
msgid ""
"Setting the format on the ``OUTPUT`` queue does not change the list of "
"formats available on the ``CAPTURE`` queue. An attempt to set the ``OUTPUT`` "
"format that is not supported for the currently selected ``CAPTURE`` format "
"will result in the encoder adjusting the requested ``OUTPUT`` format to a "
"supported one."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:720
msgid ""
"Enumerating formats on the ``CAPTURE`` queue always returns the full set of "
"supported coded formats, irrespective of the current ``OUTPUT`` format."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:723
msgid ""
"While buffers are allocated on any of the ``OUTPUT`` or ``CAPTURE`` queues, "
"the client must not change the format on the ``CAPTURE`` queue. Drivers will "
"return the -EBUSY error code for any such format change attempt."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-encoder.rst:727
msgid ""
"To summarize, setting formats and allocation must always start with the "
"``CAPTURE`` queue and the ``CAPTURE`` queue is the master that governs the "
"set of supported formats for the ``OUTPUT`` queue."
msgstr ""
