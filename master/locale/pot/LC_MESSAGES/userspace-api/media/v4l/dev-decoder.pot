# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../userspace-api/media/v4l/dev-decoder.rst:7
msgid "Memory-to-Memory Stateful Video Decoder Interface"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:9
msgid ""
"A stateful video decoder takes complete chunks of the bytestream (e.g. Annex-"
"B H.264/HEVC stream, raw VP8/9 stream) and decodes them into raw video "
"frames in display order. The decoder is expected not to require any "
"additional information from the client to process these buffers."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:14
msgid ""
"Performing software parsing, processing etc. of the stream in the driver in "
"order to support this interface is strongly discouraged. In case such "
"operations are needed, use of the Stateless Video Decoder Interface (in "
"development) is strongly advised."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:20
msgid "Conventions and Notations Used in This Document"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:22
msgid ""
"The general V4L2 API rules apply if not specified in this document otherwise."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:25
msgid ""
"The meaning of words \"must\", \"may\", \"should\", etc. is as per `RFC 2119 "
"<https://tools.ietf.org/html/rfc2119>`_."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:28
msgid "All steps not marked \"optional\" are required."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:30
msgid ""
":c:func:`VIDIOC_G_EXT_CTRLS` and :c:func:`VIDIOC_S_EXT_CTRLS` may be used "
"interchangeably with :c:func:`VIDIOC_G_CTRL` and :c:func:`VIDIOC_S_CTRL`, "
"unless specified otherwise."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:34
msgid ""
"Single-planar API (see :ref:`planar-apis`) and applicable structures may be "
"used interchangeably with multi-planar API, unless specified otherwise, "
"depending on decoder capabilities and following the general V4L2 guidelines."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:38
msgid ""
"i = [a..b]: sequence of integers from a to b, inclusive, i.e. i = [0..2]: i "
"= 0, 1, 2."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:41
msgid ""
"Given an ``OUTPUT`` buffer A, then A' represents a buffer on the ``CAPTURE`` "
"queue containing data that resulted from processing buffer A."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:47
msgid "Glossary"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:49
msgid "CAPTURE"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:50
msgid ""
"the destination buffer queue; for decoders, the queue of buffers containing "
"decoded frames; for encoders, the queue of buffers containing an encoded "
"bytestream; ``V4L2_BUF_TYPE_VIDEO_CAPTURE`` or "
"``V4L2_BUF_TYPE_VIDEO_CAPTURE_MPLANE``; data is captured from the hardware "
"into ``CAPTURE`` buffers."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:56
msgid "client"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:57
msgid ""
"the application communicating with the decoder or encoder implementing this "
"interface."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:60
msgid "coded format"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:61
msgid ""
"encoded/compressed video bytestream format (e.g. H.264, VP8, etc.); see "
"also: raw format."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:64
msgid "coded height"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:65
msgid "height for given coded resolution."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:67
msgid "coded resolution"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:68
msgid ""
"stream resolution in pixels aligned to codec and hardware requirements; "
"typically visible resolution rounded up to full macroblocks; see also: "
"visible resolution."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:72
msgid "coded width"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:73
msgid "width for given coded resolution."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:75
msgid "coding tree unit"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:76
msgid ""
"processing unit of the HEVC codec (corresponds to macroblock units in H.264, "
"VP8, VP9), can use block structures of up to 64Ã—64 pixels. Good at sub-"
"partitioning the picture into variable sized structures."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:81
msgid "decode order"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:82
msgid ""
"the order in which frames are decoded; may differ from display order if the "
"coded format includes a feature of frame reordering; for decoders, "
"``OUTPUT`` buffers must be queued by the client in decode order; for "
"encoders ``CAPTURE`` buffers must be returned by the encoder in decode order."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:87
msgid "destination"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:88
msgid "data resulting from the decode process; see ``CAPTURE``."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:90
msgid "display order"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:91
msgid ""
"the order in which frames must be displayed; for encoders, ``OUTPUT`` "
"buffers must be queued by the client in display order; for decoders, "
"``CAPTURE`` buffers must be returned by the decoder in display order."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:95
msgid "DPB"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:96
msgid ""
"Decoded Picture Buffer; an H.264/HEVC term for a buffer that stores a "
"decoded raw frame available for reference in further decoding steps."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:99
msgid "EOS"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:100
msgid "end of stream."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:102
msgid "IDR"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:103
msgid ""
"Instantaneous Decoder Refresh; a type of a keyframe in an H.264/HEVC-encoded "
"stream, which clears the list of earlier reference frames (DPBs)."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:106
msgid "keyframe"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:107
msgid ""
"an encoded frame that does not reference frames decoded earlier, i.e. can be "
"decoded fully on its own."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:110
msgid "macroblock"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:111
msgid ""
"a processing unit in image and video compression formats based on linear "
"block transforms (e.g. H.264, VP8, VP9); codec-specific, but for most of "
"popular codecs the size is 16x16 samples (pixels). The HEVC codec uses a "
"slightly more flexible processing unit called coding tree unit (CTU)."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:116
msgid "OUTPUT"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:117
msgid ""
"the source buffer queue; for decoders, the queue of buffers containing an "
"encoded bytestream; for encoders, the queue of buffers containing raw "
"frames; ``V4L2_BUF_TYPE_VIDEO_OUTPUT`` or "
"``V4L2_BUF_TYPE_VIDEO_OUTPUT_MPLANE``; the hardware is fed with data from "
"``OUTPUT`` buffers."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:123
msgid "PPS"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:124
msgid ""
"Picture Parameter Set; a type of metadata entity in an H.264/HEVC bytestream."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:126
msgid "raw format"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:127
msgid "uncompressed format containing raw pixel data (e.g. YUV, RGB formats)."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:129
msgid "resume point"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:130
msgid ""
"a point in the bytestream from which decoding may start/continue, without "
"any previous state/data present, e.g.: a keyframe (VP8/VP9) or SPS/PPS/IDR "
"sequence (H.264/HEVC); a resume point is required to start decode of a new "
"stream, or to resume decoding after a seek."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:135
msgid "source"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:136
msgid "data fed to the decoder or encoder; see ``OUTPUT``."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:138
msgid "source height"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:139
msgid ""
"height in pixels for given source resolution; relevant to encoders only."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:141
msgid "source resolution"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:142
msgid ""
"resolution in pixels of source frames being source to the encoder and "
"subject to further cropping to the bounds of visible resolution; relevant to "
"encoders only."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:146
msgid "source width"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:147
msgid "width in pixels for given source resolution; relevant to encoders only."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:149
msgid "SPS"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:150
msgid ""
"Sequence Parameter Set; a type of metadata entity in an H.264/HEVC "
"bytestream."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:152
msgid "stream metadata"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:153
msgid ""
"additional (non-visual) information contained inside encoded bytestream; for "
"example: coded resolution, visible resolution, codec profile."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:156
msgid "visible height"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:157
msgid "height for given visible resolution; display height."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:159
msgid "visible resolution"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:160
msgid ""
"stream resolution of the visible picture, in pixels, to be used for display "
"purposes; must be smaller or equal to coded resolution; display resolution."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:164
msgid "visible width"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:165
msgid "width for given visible resolution; display width."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:168
msgid "State Machine"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:215
msgid "Querying Capabilities"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:217
msgid ""
"To enumerate the set of coded formats supported by the decoder, the client "
"may call :c:func:`VIDIOC_ENUM_FMT` on ``OUTPUT``."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:220
msgid ""
"The full set of supported formats will be returned, regardless of the format "
"set on ``CAPTURE``."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:222
msgid ""
"Check the flags field of :c:type:`v4l2_fmtdesc` for more information about "
"the decoder's capabilities with respect to each coded format. In particular "
"whether or not the decoder has a full-fledged bytestream parser and if the "
"decoder supports dynamic resolution changes."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:227
msgid ""
"To enumerate the set of supported raw formats, the client may call :c:func:"
"`VIDIOC_ENUM_FMT` on ``CAPTURE``."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:230
msgid ""
"Only the formats supported for the format currently active on ``OUTPUT`` "
"will be returned."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:233
msgid ""
"In order to enumerate raw formats supported by a given coded format, the "
"client must first set that coded format on ``OUTPUT`` and then enumerate "
"formats on ``CAPTURE``."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:237
msgid ""
"The client may use :c:func:`VIDIOC_ENUM_FRAMESIZES` to detect supported "
"resolutions for a given format, passing desired pixel format in :c:type:"
"`v4l2_frmsizeenum` ``pixel_format``."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:241
msgid ""
"Values returned by :c:func:`VIDIOC_ENUM_FRAMESIZES` for a coded pixel format "
"will include all possible coded resolutions supported by the decoder for "
"given coded pixel format."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:245
msgid ""
"Values returned by :c:func:`VIDIOC_ENUM_FRAMESIZES` for a raw pixel format "
"will include all possible frame buffer resolutions supported by the decoder "
"for given raw pixel format and the coded format currently set on ``OUTPUT``."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:250
msgid ""
"Supported profiles and levels for the coded format currently set on "
"``OUTPUT``, if applicable, may be queried using their respective controls "
"via :c:func:`VIDIOC_QUERYCTRL`."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:255
msgid "Initialization"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:257
msgid "Set the coded format on ``OUTPUT`` via :c:func:`VIDIOC_S_FMT`."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:259
#: ../../../userspace-api/media/v4l/dev-decoder.rst:303
#: ../../../userspace-api/media/v4l/dev-decoder.rst:328
#: ../../../userspace-api/media/v4l/dev-decoder.rst:408
#: ../../../userspace-api/media/v4l/dev-decoder.rst:438
#: ../../../userspace-api/media/v4l/dev-decoder.rst:521
#: ../../../userspace-api/media/v4l/dev-decoder.rst:542
#: ../../../userspace-api/media/v4l/dev-decoder.rst:607
#: ../../../userspace-api/media/v4l/dev-decoder.rst:621
#: ../../../userspace-api/media/v4l/dev-decoder.rst:656
#: ../../../userspace-api/media/v4l/dev-decoder.rst:822
#: ../../../userspace-api/media/v4l/dev-decoder.rst:832
#: ../../../userspace-api/media/v4l/dev-decoder.rst:1007
msgid "**Required fields:**"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:261
#: ../../../userspace-api/media/v4l/dev-decoder.rst:308
#: ../../../userspace-api/media/v4l/dev-decoder.rst:333
#: ../../../userspace-api/media/v4l/dev-decoder.rst:410
#: ../../../userspace-api/media/v4l/dev-decoder.rst:440
#: ../../../userspace-api/media/v4l/dev-decoder.rst:523
#: ../../../userspace-api/media/v4l/dev-decoder.rst:544
#: ../../../userspace-api/media/v4l/dev-decoder.rst:612
#: ../../../userspace-api/media/v4l/dev-decoder.rst:626
#: ../../../userspace-api/media/v4l/dev-decoder.rst:661
#: ../../../userspace-api/media/v4l/dev-decoder.rst:824
#: ../../../userspace-api/media/v4l/dev-decoder.rst:834
msgid "``type``"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:262
#: ../../../userspace-api/media/v4l/dev-decoder.rst:309
#: ../../../userspace-api/media/v4l/dev-decoder.rst:334
#: ../../../userspace-api/media/v4l/dev-decoder.rst:825
#: ../../../userspace-api/media/v4l/dev-decoder.rst:835
msgid "a ``V4L2_BUF_TYPE_*`` enum appropriate for ``OUTPUT``."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:264
#: ../../../userspace-api/media/v4l/dev-decoder.rst:418
#: ../../../userspace-api/media/v4l/dev-decoder.rst:526
msgid "``pixelformat``"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:265
msgid "a coded pixel format."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:267
#: ../../../userspace-api/media/v4l/dev-decoder.rst:415
#: ../../../userspace-api/media/v4l/dev-decoder.rst:529
msgid "``width``, ``height``"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:268
msgid ""
"coded resolution of the stream; required only if it cannot be parsed from "
"the stream for the given coded format; otherwise the decoder will use this "
"resolution as a placeholder resolution that will likely change as soon as it "
"can parse the actual coded resolution from the stream."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:273
#: ../../../userspace-api/media/v4l/dev-decoder.rst:282
msgid "``sizeimage``"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:274
msgid ""
"desired size of ``OUTPUT`` buffers; the decoder may adjust it to match "
"hardware requirements."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:277
msgid "other fields"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:278
msgid "follow standard semantics."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:280
#: ../../../userspace-api/media/v4l/dev-decoder.rst:314
#: ../../../userspace-api/media/v4l/dev-decoder.rst:342
#: ../../../userspace-api/media/v4l/dev-decoder.rst:413
#: ../../../userspace-api/media/v4l/dev-decoder.rst:446
#: ../../../userspace-api/media/v4l/dev-decoder.rst:555
#: ../../../userspace-api/media/v4l/dev-decoder.rst:632
#: ../../../userspace-api/media/v4l/dev-decoder.rst:671
msgid "**Returned fields:**"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:283
msgid "adjusted size of ``OUTPUT`` buffers."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:285
msgid ""
"The ``CAPTURE`` format will be updated with an appropriate frame buffer "
"resolution instantly based on the width and height returned by :c:func:"
"`VIDIOC_S_FMT`. However, for coded formats that include stream resolution "
"information, after the decoder is done parsing the information from the "
"stream, it will update the ``CAPTURE`` format with new values and signal a "
"source change event, regardless of whether they match the values set by the "
"client or not."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:296
msgid ""
"Changing the ``OUTPUT`` format may change the currently set ``CAPTURE`` "
"format. How the new ``CAPTURE`` format is determined is up to the decoder "
"and the client must ensure it matches its needs afterwards."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:300
msgid ""
"Allocate source (bytestream) buffers via :c:func:`VIDIOC_REQBUFS` on "
"``OUTPUT``."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:305
#: ../../../userspace-api/media/v4l/dev-decoder.rst:316
#: ../../../userspace-api/media/v4l/dev-decoder.rst:330
#: ../../../userspace-api/media/v4l/dev-decoder.rst:344
#: ../../../userspace-api/media/v4l/dev-decoder.rst:609
#: ../../../userspace-api/media/v4l/dev-decoder.rst:623
#: ../../../userspace-api/media/v4l/dev-decoder.rst:634
#: ../../../userspace-api/media/v4l/dev-decoder.rst:658
#: ../../../userspace-api/media/v4l/dev-decoder.rst:673
msgid "``count``"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:306
#: ../../../userspace-api/media/v4l/dev-decoder.rst:331
#: ../../../userspace-api/media/v4l/dev-decoder.rst:624
#: ../../../userspace-api/media/v4l/dev-decoder.rst:659
msgid "requested number of buffers to allocate; greater than zero."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:311
#: ../../../userspace-api/media/v4l/dev-decoder.rst:336
#: ../../../userspace-api/media/v4l/dev-decoder.rst:615
#: ../../../userspace-api/media/v4l/dev-decoder.rst:629
#: ../../../userspace-api/media/v4l/dev-decoder.rst:664
msgid "``memory``"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:312
#: ../../../userspace-api/media/v4l/dev-decoder.rst:337
#: ../../../userspace-api/media/v4l/dev-decoder.rst:340
#: ../../../userspace-api/media/v4l/dev-decoder.rst:616
#: ../../../userspace-api/media/v4l/dev-decoder.rst:630
#: ../../../userspace-api/media/v4l/dev-decoder.rst:665
msgid "follows standard semantics."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:317
msgid "the actual number of buffers allocated."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:321
#: ../../../userspace-api/media/v4l/dev-decoder.rst:349
#: ../../../userspace-api/media/v4l/dev-decoder.rst:639
#: ../../../userspace-api/media/v4l/dev-decoder.rst:678
msgid ""
"The actual number of allocated buffers may differ from the ``count`` given. "
"The client must check the updated value of ``count`` after the call returns."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:325
msgid ""
"Alternatively, :c:func:`VIDIOC_CREATE_BUFS` on the ``OUTPUT`` queue can be "
"used to have more control over buffer allocation."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:339
#: ../../../userspace-api/media/v4l/dev-decoder.rst:667
msgid "``format``"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:345
#: ../../../userspace-api/media/v4l/dev-decoder.rst:674
msgid "adjusted to the number of allocated buffers."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:353
msgid "Start streaming on the ``OUTPUT`` queue via :c:func:`VIDIOC_STREAMON`."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:355
msgid ""
"**This step only applies to coded formats that contain resolution "
"information in the stream.** Continue queuing/dequeuing bytestream buffers "
"to/from the ``OUTPUT`` queue via :c:func:`VIDIOC_QBUF` and :c:func:"
"`VIDIOC_DQBUF`. The buffers will be processed and returned to the client in "
"order, until required metadata to configure the ``CAPTURE`` queue are found. "
"This is indicated by the decoder sending a ``V4L2_EVENT_SOURCE_CHANGE`` "
"event with ``changes`` set to ``V4L2_EVENT_SRC_CH_RESOLUTION``."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:363
msgid ""
"It is not an error if the first buffer does not contain enough data for this "
"to occur. Processing of the buffers will continue as long as more data is "
"needed."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:367
msgid ""
"If data in a buffer that triggers the event is required to decode the first "
"frame, it will not be returned to the client, until the initialization "
"sequence completes and the frame is decoded."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:371
msgid ""
"If the client has not set the coded resolution of the stream on its own, "
"calling :c:func:`VIDIOC_G_FMT`, :c:func:`VIDIOC_S_FMT`, :c:func:"
"`VIDIOC_TRY_FMT` or :c:func:`VIDIOC_REQBUFS` on the ``CAPTURE`` queue will "
"not return the real values for the stream until a "
"``V4L2_EVENT_SOURCE_CHANGE`` event with ``changes`` set to "
"``V4L2_EVENT_SRC_CH_RESOLUTION`` is signaled."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:380
msgid ""
"Any client query issued after the decoder queues the event will return "
"values applying to the just parsed stream, including queue formats, "
"selection rectangles and controls."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:386
msgid ""
"A client capable of acquiring stream parameters from the bytestream on its "
"own may attempt to set the width and height of the ``OUTPUT`` format to non-"
"zero values matching the coded size of the stream, skip this step and "
"continue with the `Capture Setup` sequence. However, it must not rely on any "
"driver queries regarding stream parameters, such as selection rectangles and "
"controls, since the decoder has not parsed them from the stream yet. If the "
"values configured by the client do not match those parsed by the decoder, a "
"`Dynamic Resolution Change` will be triggered to reconfigure them."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:398
msgid "No decoded frames are produced during this phase."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:400
#: ../../../userspace-api/media/v4l/dev-decoder.rst:981
msgid "Continue with the `Capture Setup` sequence."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:403
msgid "Capture Setup"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:405
msgid ""
"Call :c:func:`VIDIOC_G_FMT` on the ``CAPTURE`` queue to get format for the "
"destination buffers parsed/decoded from the bytestream."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:411
#: ../../../userspace-api/media/v4l/dev-decoder.rst:441
#: ../../../userspace-api/media/v4l/dev-decoder.rst:524
#: ../../../userspace-api/media/v4l/dev-decoder.rst:545
#: ../../../userspace-api/media/v4l/dev-decoder.rst:613
#: ../../../userspace-api/media/v4l/dev-decoder.rst:627
#: ../../../userspace-api/media/v4l/dev-decoder.rst:662
msgid "a ``V4L2_BUF_TYPE_*`` enum appropriate for ``CAPTURE``."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:416
msgid "frame buffer resolution for the decoded frames."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:419
msgid "pixel format for decoded frames."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:421
msgid "``num_planes`` (for _MPLANE ``type`` only)"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:422
msgid "number of planes for pixelformat."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:424
msgid "``sizeimage``, ``bytesperline``"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:425
msgid "as per standard semantics; matching frame buffer format."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:429
msgid ""
"The value of ``pixelformat`` may be any pixel format supported by the "
"decoder for the current stream. The decoder should choose a preferred/"
"optimal format for the default configuration. For example, a YUV format may "
"be preferred over an RGB format if an additional conversion step would be "
"required for the latter."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:435
msgid ""
"**Optional.** Acquire the visible resolution via :c:func:"
"`VIDIOC_G_SELECTION`."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:443
#: ../../../userspace-api/media/v4l/dev-decoder.rst:547
msgid "``target``"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:444
#: ../../../userspace-api/media/v4l/dev-decoder.rst:548
msgid "set to ``V4L2_SEL_TGT_COMPOSE``."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:448
#: ../../../userspace-api/media/v4l/dev-decoder.rst:550
#: ../../../userspace-api/media/v4l/dev-decoder.rst:557
msgid "``r.left``, ``r.top``, ``r.width``, ``r.height``"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:449
#: ../../../userspace-api/media/v4l/dev-decoder.rst:558
msgid ""
"the visible rectangle; it must fit within the frame buffer resolution "
"returned by :c:func:`VIDIOC_G_FMT` on ``CAPTURE``."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:452
msgid "The following selection targets are supported on ``CAPTURE``:"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:454
msgid "``V4L2_SEL_TGT_CROP_BOUNDS``"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:455
msgid "corresponds to the coded resolution of the stream."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:457
msgid "``V4L2_SEL_TGT_CROP_DEFAULT``"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:458
msgid ""
"the rectangle covering the part of the ``CAPTURE`` buffer that contains "
"meaningful picture data (visible area); width and height will be equal to "
"the visible resolution of the stream."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:462
msgid "``V4L2_SEL_TGT_CROP``"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:463
msgid ""
"the rectangle within the coded resolution to be output to ``CAPTURE``; "
"defaults to ``V4L2_SEL_TGT_CROP_DEFAULT``; read-only on hardware without "
"additional compose/scaling capabilities."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:467
msgid "``V4L2_SEL_TGT_COMPOSE_BOUNDS``"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:468
msgid ""
"the maximum rectangle within a ``CAPTURE`` buffer, which the cropped frame "
"can be composed into; equal to ``V4L2_SEL_TGT_CROP`` if the hardware does "
"not support compose/scaling."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:472
msgid "``V4L2_SEL_TGT_COMPOSE_DEFAULT``"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:473
msgid "equal to ``V4L2_SEL_TGT_CROP``."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:475
msgid "``V4L2_SEL_TGT_COMPOSE``"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:476
#: ../../../userspace-api/media/v4l/dev-decoder.rst:551
msgid ""
"the rectangle inside a ``CAPTURE`` buffer into which the cropped frame is "
"written; defaults to ``V4L2_SEL_TGT_COMPOSE_DEFAULT``; read-only on hardware "
"without additional compose/scaling capabilities."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:480
msgid "``V4L2_SEL_TGT_COMPOSE_PADDED``"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:481
msgid ""
"the rectangle inside a ``CAPTURE`` buffer which is overwritten by the "
"hardware; equal to ``V4L2_SEL_TGT_COMPOSE`` if the hardware does not write "
"padding pixels."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:487
msgid ""
"The values are guaranteed to be meaningful only after the decoder "
"successfully parses the stream metadata. The client must not rely on the "
"query before that happens."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:491
msgid ""
"**Optional.** Enumerate ``CAPTURE`` formats via :c:func:`VIDIOC_ENUM_FMT` on "
"the ``CAPTURE`` queue. Once the stream information is parsed and known, the "
"client may use this ioctl to discover which raw formats are supported for "
"given stream and select one of them via :c:func:`VIDIOC_S_FMT`."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:498
msgid ""
"The decoder will return only formats supported for the currently established "
"coded format, as per the ``OUTPUT`` format and/or stream metadata parsed in "
"this initialization sequence, even if more formats may be supported by the "
"decoder in general. In other words, the set returned will be a subset of the "
"initial query mentioned in the `Querying Capabilities` section."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:505
msgid ""
"For example, a decoder may support YUV and RGB formats for resolutions "
"1920x1088 and lower, but only YUV for higher resolutions (due to hardware "
"limitations). After parsing a resolution of 1920x1088 or lower, :c:func:"
"`VIDIOC_ENUM_FMT` may return a set of YUV and RGB pixel formats, but after "
"parsing resolution higher than 1920x1088, the decoder will not return RGB, "
"unsupported for this resolution."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:512
msgid ""
"However, subsequent resolution change event triggered after discovering a "
"resolution change within the same stream may switch the stream into a lower "
"resolution and :c:func:`VIDIOC_ENUM_FMT` would return RGB formats again in "
"that case."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:517
msgid ""
"**Optional.** Set the ``CAPTURE`` format via :c:func:`VIDIOC_S_FMT` on the "
"``CAPTURE`` queue. The client may choose a different format than selected/"
"suggested by the decoder in :c:func:`VIDIOC_G_FMT`."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:527
msgid "a raw pixel format."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:530
msgid ""
"frame buffer resolution of the decoded stream; typically unchanged from what "
"was returned with :c:func:`VIDIOC_G_FMT`, but it may be different if the "
"hardware supports composition and/or scaling."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:534
msgid ""
"Setting the ``CAPTURE`` format will reset the compose selection rectangles "
"to their default values, based on the new resolution, as described in the "
"previous step."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:538
msgid ""
"**Optional.** Set the compose rectangle via :c:func:`VIDIOC_S_SELECTION` on "
"the ``CAPTURE`` queue if it is desired and if the decoder has compose and/or "
"scaling capabilities."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:563
msgid ""
"The decoder may adjust the compose rectangle to the nearest supported one to "
"meet codec and hardware requirements. The client needs to check the adjusted "
"rectangle returned by :c:func:`VIDIOC_S_SELECTION`."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:567
msgid ""
"If all the following conditions are met, the client may resume the decoding "
"instantly:"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:570
msgid ""
"``sizeimage`` of the new format (determined in previous steps) is less than "
"or equal to the size of currently allocated buffers,"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:573
msgid ""
"the number of buffers currently allocated is greater than or equal to the "
"minimum number of buffers acquired in previous steps. To fulfill this "
"requirement, the client may use :c:func:`VIDIOC_CREATE_BUFS` to add new "
"buffers."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:578
msgid ""
"In that case, the remaining steps do not apply and the client may resume the "
"decoding by one of the following actions:"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:581
msgid ""
"if the ``CAPTURE`` queue is streaming, call :c:func:`VIDIOC_DECODER_CMD` "
"with the ``V4L2_DEC_CMD_START`` command,"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:584
msgid ""
"if the ``CAPTURE`` queue is not streaming, call :c:func:`VIDIOC_STREAMON` on "
"the ``CAPTURE`` queue."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:587
msgid ""
"However, if the client intends to change the buffer set, to lower memory "
"usage or for any other reasons, it may be achieved by following the steps "
"below."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:591
msgid ""
"**If the** ``CAPTURE`` **queue is streaming,** keep queuing and dequeuing "
"buffers on the ``CAPTURE`` queue until a buffer marked with the "
"``V4L2_BUF_FLAG_LAST`` flag is dequeued."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:595
msgid ""
"**If the** ``CAPTURE`` **queue is streaming,** call :c:func:"
"`VIDIOC_STREAMOFF` on the ``CAPTURE`` queue to stop streaming."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:600
msgid ""
"The ``OUTPUT`` queue must remain streaming. Calling :c:func:"
"`VIDIOC_STREAMOFF` on it would abort the sequence and trigger a seek."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:604
msgid ""
"**If the** ``CAPTURE`` **queue has buffers allocated,** free the ``CAPTURE`` "
"buffers using :c:func:`VIDIOC_REQBUFS`."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:610
#: ../../../userspace-api/media/v4l/dev-decoder.rst:1013
#: ../../../userspace-api/media/v4l/dev-decoder.rst:1016
msgid "set to 0."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:618
msgid ""
"Allocate ``CAPTURE`` buffers via :c:func:`VIDIOC_REQBUFS` on the ``CAPTURE`` "
"queue."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:635
msgid "actual number of buffers allocated."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:645
msgid ""
"To allocate more than the minimum number of buffers (for pipeline depth), "
"the client may query the ``V4L2_CID_MIN_BUFFERS_FOR_CAPTURE`` control to get "
"the minimum number of buffers required, and pass the obtained value plus the "
"number of additional buffers needed in the ``count`` field to :c:func:"
"`VIDIOC_REQBUFS`."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:651
msgid ""
"Alternatively, :c:func:`VIDIOC_CREATE_BUFS` on the ``CAPTURE`` queue can be "
"used to have more control over buffer allocation. For example, by allocating "
"buffers larger than the current ``CAPTURE`` format, future resolution "
"changes can be accommodated."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:668
msgid ""
"a format representing the maximum framebuffer resolution to be accommodated "
"by newly allocated buffers."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:684
msgid ""
"To allocate buffers for a format different than parsed from the stream "
"metadata, the client must proceed as follows, before the metadata parsing is "
"initiated:"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:688
msgid ""
"set width and height of the ``OUTPUT`` format to desired coded resolution to "
"let the decoder configure the ``CAPTURE`` format appropriately,"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:691
msgid ""
"query the ``CAPTURE`` format using :c:func:`VIDIOC_G_FMT` and save it until "
"this step."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:694
msgid ""
"The format obtained in the query may be then used with :c:func:"
"`VIDIOC_CREATE_BUFS` in this step to allocate the buffers."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:697
msgid ""
"Call :c:func:`VIDIOC_STREAMON` on the ``CAPTURE`` queue to start decoding "
"frames."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:701
msgid "Decoding"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:703
msgid ""
"This state is reached after the `Capture Setup` sequence finishes "
"successfully. In this state, the client queues and dequeues buffers to both "
"queues via :c:func:`VIDIOC_QBUF` and :c:func:`VIDIOC_DQBUF`, following the "
"standard semantics."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:708
msgid ""
"The content of the source ``OUTPUT`` buffers depends on the active coded "
"pixel format and may be affected by codec-specific extended controls, as "
"stated in the documentation of each format."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:712
msgid ""
"Both queues operate independently, following the standard behavior of V4L2 "
"buffer queues and memory-to-memory devices. In addition, the order of "
"decoded frames dequeued from the ``CAPTURE`` queue may differ from the order "
"of queuing coded frames to the ``OUTPUT`` queue, due to properties of the "
"selected coded format, e.g. frame reordering."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:718
msgid ""
"The client must not assume any direct relationship between ``CAPTURE`` and "
"``OUTPUT`` buffers and any specific timing of buffers becoming available to "
"dequeue. Specifically:"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:722
msgid ""
"a buffer queued to ``OUTPUT`` may result in no buffers being produced on "
"``CAPTURE`` (e.g. if it does not contain encoded data, or if only metadata "
"syntax structures are present in it),"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:726
msgid ""
"a buffer queued to ``OUTPUT`` may result in more than one buffer produced on "
"``CAPTURE`` (if the encoded data contained more than one frame, or if "
"returning a decoded frame allowed the decoder to return a frame that "
"preceded it in decode, but succeeded it in the display order),"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:731
msgid ""
"a buffer queued to ``OUTPUT`` may result in a buffer being produced on "
"``CAPTURE`` later into decode process, and/or after processing further "
"``OUTPUT`` buffers, or be returned out of order, e.g. if display reordering "
"is used,"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:736
msgid ""
"buffers may become available on the ``CAPTURE`` queue without additional "
"buffers queued to ``OUTPUT`` (e.g. during drain or ``EOS``), because of the "
"``OUTPUT`` buffers queued in the past whose decoding results are only "
"available at later time, due to specifics of the decoding process."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:743
msgid ""
"To allow matching decoded ``CAPTURE`` buffers with ``OUTPUT`` buffers they "
"originated from, the client can set the ``timestamp`` field of the :c:type:"
"`v4l2_buffer` struct when queuing an ``OUTPUT`` buffer. The ``CAPTURE`` "
"buffer(s), which resulted from decoding that ``OUTPUT`` buffer will have "
"their ``timestamp`` field set to the same value when dequeued."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:749
msgid ""
"In addition to the straightforward case of one ``OUTPUT`` buffer producing "
"one ``CAPTURE`` buffer, the following cases are defined:"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:752
msgid ""
"one ``OUTPUT`` buffer generates multiple ``CAPTURE`` buffers: the same "
"``OUTPUT`` timestamp will be copied to multiple ``CAPTURE`` buffers."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:755
msgid ""
"multiple ``OUTPUT`` buffers generate one ``CAPTURE`` buffer: timestamp of "
"the ``OUTPUT`` buffer queued first will be copied."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:758
msgid ""
"the decoding order differs from the display order (i.e. the ``CAPTURE`` "
"buffers are out-of-order compared to the ``OUTPUT`` buffers): ``CAPTURE`` "
"timestamps will not retain the order of ``OUTPUT`` timestamps."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:764
msgid ""
"The backing memory of ``CAPTURE`` buffers that are used as reference frames "
"by the stream may be read by the hardware even after they are dequeued. "
"Consequently, the client should avoid writing into this memory while the "
"``CAPTURE`` queue is streaming. Failure to observe this may result in "
"corruption of decoded frames."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:770
msgid ""
"Similarly, when using a memory type other than ``V4L2_MEMORY_MMAP``, the "
"client should make sure that each ``CAPTURE`` buffer is always queued with "
"the same backing memory for as long as the ``CAPTURE`` queue is streaming. "
"The reason for this is that V4L2 buffer indices can be used by drivers to "
"identify frames. Thus, if the backing memory of a reference frame is "
"submitted under a different buffer ID, the driver may misidentify it and "
"decode a new frame into it while it is still in use, resulting in corruption "
"of the following frames."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:779
msgid ""
"During the decoding, the decoder may initiate one of the special sequences, "
"as listed below. The sequences will result in the decoder returning all the "
"``CAPTURE`` buffers that originated from all the ``OUTPUT`` buffers "
"processed before the sequence started. Last of the buffers will have the "
"``V4L2_BUF_FLAG_LAST`` flag set. To determine the sequence to follow, the "
"client must check if there is any pending event and:"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:786
msgid ""
"if a ``V4L2_EVENT_SOURCE_CHANGE`` event with ``changes`` set to "
"``V4L2_EVENT_SRC_CH_RESOLUTION`` is pending, the `Dynamic Resolution Change` "
"sequence needs to be followed,"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:790
msgid ""
"if a ``V4L2_EVENT_EOS`` event is pending, the `End of Stream` sequence needs "
"to be followed."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:793
msgid ""
"Some of the sequences can be intermixed with each other and need to be "
"handled as they happen. The exact operation is documented for each sequence."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:796
msgid ""
"Should a decoding error occur, it will be reported to the client with the "
"level of details depending on the decoder capabilities. Specifically:"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:799
msgid ""
"the CAPTURE buffer that contains the results of the failed decode operation "
"will be returned with the V4L2_BUF_FLAG_ERROR flag set,"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:802
msgid ""
"if the decoder is able to precisely report the OUTPUT buffer that triggered "
"the error, such buffer will be returned with the V4L2_BUF_FLAG_ERROR flag "
"set."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:806
msgid ""
"In case of a fatal failure that does not allow the decoding to continue, any "
"further operations on corresponding decoder file handle will return the -EIO "
"error code. The client may close the file handle and open a new one, or "
"alternatively reinitialize the instance by stopping streaming on both "
"queues, releasing all buffers and performing the Initialization sequence "
"again."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:813
msgid "Seek"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:815
msgid ""
"Seek is controlled by the ``OUTPUT`` queue, as it is the source of coded "
"data. The seek does not require any specific operation on the ``CAPTURE`` "
"queue, but it may be affected as per normal decoder operation."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:819
msgid ""
"Stop the ``OUTPUT`` queue to begin the seek sequence via :c:func:"
"`VIDIOC_STREAMOFF`."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:827
msgid ""
"The decoder will drop all the pending ``OUTPUT`` buffers and they must be "
"treated as returned to the client (following standard semantics)."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:830
msgid "Restart the ``OUTPUT`` queue via :c:func:`VIDIOC_STREAMON`."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:837
msgid ""
"The decoder will start accepting new source bytestream buffers after the "
"call returns."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:840
msgid ""
"Start queuing buffers containing coded data after the seek to the ``OUTPUT`` "
"queue until a suitable resume point is found."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:845
msgid ""
"There is no requirement to begin queuing coded data starting exactly from a "
"resume point (e.g. SPS or a keyframe). Any queued ``OUTPUT`` buffers will be "
"processed and returned to the client until a suitable resume point is "
"found.  While looking for a resume point, the decoder should not produce any "
"decoded frames into ``CAPTURE`` buffers."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:851
msgid ""
"Some hardware is known to mishandle seeks to a non-resume point. Such an "
"operation may result in an unspecified number of corrupted decoded frames "
"being made available on the ``CAPTURE`` queue. Drivers must ensure that no "
"fatal decoding errors or crashes occur, and implement any necessary handling "
"and workarounds for hardware issues related to seek operations."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:859
msgid ""
"In case of the H.264/HEVC codec, the client must take care not to seek over "
"a change of SPS/PPS. Even though the target frame could be a keyframe, the "
"stale SPS/PPS inside decoder state would lead to undefined results when "
"decoding. Although the decoder must handle that case without a crash or a "
"fatal decode error, the client must not expect a sensible decode output."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:866
msgid ""
"If the hardware can detect such corrupted decoded frames, then corresponding "
"buffers will be returned to the client with the V4L2_BUF_FLAG_ERROR set. See "
"the `Decoding` section for further description of decode error reporting."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:871
msgid ""
"After a resume point is found, the decoder will start returning ``CAPTURE`` "
"buffers containing decoded frames."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:876
msgid ""
"A seek may result in the `Dynamic Resolution Change` sequence being "
"initiated, due to the seek target having decoding parameters different from "
"the part of the stream decoded before the seek. The sequence must be handled "
"as per normal decoder operation."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:883
msgid ""
"It is not specified when the ``CAPTURE`` queue starts producing buffers "
"containing decoded data from the ``OUTPUT`` buffers queued after the seek, "
"as it operates independently from the ``OUTPUT`` queue."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:887
msgid ""
"The decoder may return a number of remaining ``CAPTURE`` buffers containing "
"decoded frames originating from the ``OUTPUT`` buffers queued before the "
"seek sequence is performed."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:891
msgid ""
"The ``VIDIOC_STREAMOFF`` operation discards any remaining queued ``OUTPUT`` "
"buffers, which means that not all of the ``OUTPUT`` buffers queued before "
"the seek sequence may have matching ``CAPTURE`` buffers produced.  For "
"example, given the sequence of operations on the ``OUTPUT`` queue:"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:897
msgid "QBUF(A), QBUF(B), STREAMOFF(), STREAMON(), QBUF(G), QBUF(H),"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:899
msgid "any of the following results on the ``CAPTURE`` queue is allowed:"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:901
msgid "{A', B', G', H'}, {A', G', H'}, {G', H'}."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:903
msgid ""
"To determine the CAPTURE buffer containing the first decoded frame after the "
"seek, the client may observe the timestamps to match the CAPTURE and OUTPUT "
"buffers or use V4L2_DEC_CMD_STOP and V4L2_DEC_CMD_START to drain the decoder."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:910
msgid ""
"To achieve instantaneous seek, the client may restart streaming on the "
"``CAPTURE`` queue too to discard decoded, but not yet dequeued buffers."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:914
msgid "Dynamic Resolution Change"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:916
msgid ""
"Streams that include resolution metadata in the bytestream may require "
"switching to a different resolution during the decoding."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:921
msgid ""
"Not all decoders can detect resolution changes. Those that do set the "
"``V4L2_FMT_FLAG_DYN_RESOLUTION`` flag for the coded format when :c:func:"
"`VIDIOC_ENUM_FMT` is called."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:925
msgid ""
"The sequence starts when the decoder detects a coded frame with one or more "
"of the following parameters different from those previously established (and "
"reflected by corresponding queries):"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:929
msgid "coded resolution (``OUTPUT`` width and height),"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:931
msgid "visible resolution (selection rectangles),"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:933
msgid "the minimum number of buffers needed for decoding,"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:935
msgid "bit-depth of the bitstream has been changed."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:937
msgid "Whenever that happens, the decoder must proceed as follows:"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:939
msgid ""
"After encountering a resolution change in the stream, the decoder sends a "
"``V4L2_EVENT_SOURCE_CHANGE`` event with ``changes`` set to "
"``V4L2_EVENT_SRC_CH_RESOLUTION``."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:945
msgid ""
"Any client query issued after the decoder queues the event will return "
"values applying to the stream after the resolution change, including queue "
"formats, selection rectangles and controls."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:949
msgid ""
"The decoder will then process and decode all remaining buffers from before "
"the resolution change point."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:952
msgid ""
"The last buffer from before the change must be marked with the "
"``V4L2_BUF_FLAG_LAST`` flag, similarly to the `Drain` sequence above."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:957
#: ../../../userspace-api/media/v4l/dev-decoder.rst:1040
msgid ""
"The last buffer may be empty (with :c:type:`v4l2_buffer` ``bytesused`` = 0) "
"and in that case it must be ignored by the client, as it does not contain a "
"decoded frame."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:963
#: ../../../userspace-api/media/v4l/dev-decoder.rst:1046
msgid ""
"Any attempt to dequeue more ``CAPTURE`` buffers beyond the buffer marked "
"with ``V4L2_BUF_FLAG_LAST`` will result in a -EPIPE error from :c:func:"
"`VIDIOC_DQBUF`."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:967
msgid ""
"The client must continue the sequence as described below to continue the "
"decoding process."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:970
msgid "Dequeue the source change event."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:974
msgid ""
"A source change triggers an implicit decoder drain, similar to the explicit "
"`Drain` sequence. The decoder is stopped after it completes. The decoding "
"process must be resumed with either a pair of calls to :c:func:"
"`VIDIOC_STREAMOFF` and :c:func:`VIDIOC_STREAMON` on the ``CAPTURE`` queue, "
"or a call to :c:func:`VIDIOC_DECODER_CMD` with the ``V4L2_DEC_CMD_START`` "
"command."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:985
msgid ""
"During the resolution change sequence, the ``OUTPUT`` queue must remain "
"streaming. Calling :c:func:`VIDIOC_STREAMOFF` on the ``OUTPUT`` queue would "
"abort the sequence and initiate a seek."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:989
msgid ""
"In principle, the ``OUTPUT`` queue operates separately from the ``CAPTURE`` "
"queue and this remains true for the duration of the entire resolution change "
"sequence as well."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:993
msgid ""
"The client should, for best performance and simplicity, keep queuing/"
"dequeuing buffers to/from the ``OUTPUT`` queue even while processing this "
"sequence."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:997
msgid "Drain"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:999
msgid ""
"To ensure that all queued ``OUTPUT`` buffers have been processed and related "
"``CAPTURE`` buffers are given to the client, the client must follow the "
"drain sequence described below. After the drain sequence ends, the client "
"has received all decoded frames for all ``OUTPUT`` buffers queued before the "
"sequence was started."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:1005
msgid "Begin drain by issuing :c:func:`VIDIOC_DECODER_CMD`."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:1009
msgid "``cmd``"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:1010
msgid "set to ``V4L2_DEC_CMD_STOP``."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:1012
msgid "``flags``"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:1015
msgid "``pts``"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:1020
msgid ""
"The sequence can be only initiated if both ``OUTPUT`` and ``CAPTURE`` queues "
"are streaming. For compatibility reasons, the call to :c:func:"
"`VIDIOC_DECODER_CMD` will not fail even if any of the queues is not "
"streaming, but at the same time it will not initiate the `Drain` sequence "
"and so the steps described below would not be applicable."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:1026
msgid ""
"Any ``OUTPUT`` buffers queued by the client before the :c:func:"
"`VIDIOC_DECODER_CMD` was issued will be processed and decoded as normal. The "
"client must continue to handle both queues independently, similarly to "
"normal decode operation. This includes:"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:1031
msgid ""
"handling any operations triggered as a result of processing those buffers, "
"such as the `Dynamic Resolution Change` sequence, before continuing with the "
"drain sequence,"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:1035
msgid ""
"queuing and dequeuing ``CAPTURE`` buffers, until a buffer marked with the "
"``V4L2_BUF_FLAG_LAST`` flag is dequeued,"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:1050
msgid ""
"dequeuing processed ``OUTPUT`` buffers, until all the buffers queued before "
"the ``V4L2_DEC_CMD_STOP`` command are dequeued,"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:1053
msgid "dequeuing the ``V4L2_EVENT_EOS`` event, if the client subscribed to it."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:1057
msgid ""
"For backwards compatibility, the decoder will signal a ``V4L2_EVENT_EOS`` "
"event when the last frame has been decoded and all frames are ready to be "
"dequeued. It is a deprecated behavior and the client must not rely on it. "
"The ``V4L2_BUF_FLAG_LAST`` buffer flag should be used instead."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:1062
msgid ""
"Once all the ``OUTPUT`` buffers queued before the ``V4L2_DEC_CMD_STOP`` call "
"are dequeued and the last ``CAPTURE`` buffer is dequeued, the decoder is "
"stopped and it will accept, but not process, any newly queued ``OUTPUT`` "
"buffers until the client issues any of the following operations:"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:1067
msgid ""
"``V4L2_DEC_CMD_START`` - the decoder will not be reset and will resume "
"operation normally, with all the state from before the drain,"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:1070
msgid ""
"a pair of :c:func:`VIDIOC_STREAMOFF` and :c:func:`VIDIOC_STREAMON` on the "
"``CAPTURE`` queue - the decoder will resume the operation normally, however "
"any ``CAPTURE`` buffers still in the queue will be returned to the client,"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:1075
msgid ""
"a pair of :c:func:`VIDIOC_STREAMOFF` and :c:func:`VIDIOC_STREAMON` on the "
"``OUTPUT`` queue - any pending source buffers will be returned to the client "
"and the `Seek` sequence will be triggered."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:1081
msgid ""
"Once the drain sequence is initiated, the client needs to drive it to "
"completion, as described by the steps above, unless it aborts the process by "
"issuing :c:func:`VIDIOC_STREAMOFF` on any of the ``OUTPUT`` or ``CAPTURE`` "
"queues.  The client is not allowed to issue ``V4L2_DEC_CMD_START`` or "
"``V4L2_DEC_CMD_STOP`` again while the drain sequence is in progress and they "
"will fail with -EBUSY error code if attempted."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:1088
msgid ""
"Although not mandatory, the availability of decoder commands may be queried "
"using :c:func:`VIDIOC_TRY_DECODER_CMD`."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:1092
msgid "End of Stream"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:1094
msgid ""
"If the decoder encounters an end of stream marking in the stream, the "
"decoder will initiate the `Drain` sequence, which the client must handle as "
"described above, skipping the initial :c:func:`VIDIOC_DECODER_CMD`."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:1099
msgid "Commit Points"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:1101
msgid ""
"Setting formats and allocating buffers trigger changes in the behavior of "
"the decoder."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:1104
msgid ""
"Setting the format on the ``OUTPUT`` queue may change the set of formats "
"supported/advertised on the ``CAPTURE`` queue. In particular, it also means "
"that the ``CAPTURE`` format may be reset and the client must not rely on the "
"previously set format being preserved."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:1109
msgid ""
"Enumerating formats on the ``CAPTURE`` queue always returns only formats "
"supported for the current ``OUTPUT`` format."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:1112
msgid ""
"Setting the format on the ``CAPTURE`` queue does not change the list of "
"formats available on the ``OUTPUT`` queue. An attempt to set a ``CAPTURE`` "
"format that is not supported for the currently selected ``OUTPUT`` format "
"will result in the decoder adjusting the requested ``CAPTURE`` format to a "
"supported one."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:1118
msgid ""
"Enumerating formats on the ``OUTPUT`` queue always returns the full set of "
"supported coded formats, irrespectively of the current ``CAPTURE`` format."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:1121
msgid ""
"While buffers are allocated on any of the ``OUTPUT`` or ``CAPTURE`` queues, "
"the client must not change the format on the ``OUTPUT`` queue. Drivers will "
"return the -EBUSY error code for any such format change attempt."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-decoder.rst:1125
msgid ""
"To summarize, setting formats and allocation must always start with the "
"``OUTPUT`` queue and the ``OUTPUT`` queue is the master that governs the set "
"of supported formats for the ``CAPTURE`` queue."
msgstr ""
