# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:8
msgid "ioctl MEDIA_IOC_ENUM_LINKS"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:11
msgid "Name"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:13
msgid "MEDIA_IOC_ENUM_LINKS - Enumerate all pads and links for a given entity"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:16
msgid "Synopsis"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:20
msgid ""
"``int ioctl(int fd, MEDIA_IOC_ENUM_LINKS, struct media_links_enum *argp)``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:23
msgid "Arguments"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:25
msgid "``fd``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:26
msgid "File descriptor returned by :c:func:`open()`."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:28
msgid "``argp``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:29
msgid "Pointer to struct :c:type:`media_links_enum`."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:32
msgid "Description"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:34
msgid ""
"To enumerate pads and/or links for a given entity, applications set the "
"entity field of a struct :c:type:`media_links_enum` structure and initialize "
"the struct :c:type:`media_pad_desc` and struct :c:type:`media_link_desc` "
"structure arrays pointed by the ``pads`` and ``links`` fields. They then "
"call the MEDIA_IOC_ENUM_LINKS ioctl with a pointer to this structure."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:42
msgid ""
"If the ``pads`` field is not NULL, the driver fills the ``pads`` array with "
"information about the entity's pads. The array must have enough room to "
"store all the entity's pads. The number of pads can be retrieved with :ref:"
"`MEDIA_IOC_ENUM_ENTITIES`."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:47
msgid ""
"If the ``links`` field is not NULL, the driver fills the ``links`` array "
"with information about the entity's outbound links. The array must have "
"enough room to store all the entity's outbound links. The number of outbound "
"links can be retrieved with :ref:`MEDIA_IOC_ENUM_ENTITIES`."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:52
msgid ""
"Only forward links that originate at one of the entity's source pads are "
"returned during the enumeration process."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:59
msgid "struct media_links_enum"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:64
#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:78
#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:92
#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:100
#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:104
#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:127
#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:131
msgid "__u32"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:65
#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:93
msgid "``entity``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:66
msgid "Entity id, set by the application."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:68
#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:119
#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:123
msgid "struct :c:type:`media_pad_desc`"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:69
msgid "\\*\\ ``pads``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:70
msgid "Pointer to a pads array allocated by the application. Ignored if NULL."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:73
msgid "struct :c:type:`media_link_desc`"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:74
msgid "\\*\\ ``links``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:75
msgid "Pointer to a links array allocated by the application. Ignored if NULL."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:79
msgid "``reserved[4]``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:80
#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:106
#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:133
msgid ""
"Reserved for future extensions. Drivers and applications must set the array "
"to zero."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:87
msgid "struct media_pad_desc"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:94
msgid "ID of the entity this pad belongs to."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:96
msgid "__u16"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:97
msgid "``index``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:98
msgid "Pad index, starts at 0."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:101
#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:128
msgid "``flags``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:102
msgid "Pad flags, see :ref:`media-pad-flag` for more details."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:105
#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:132
msgid "``reserved[2]``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:114
msgid "struct media_link_desc"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:120
msgid "``source``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:121
msgid "Pad at the origin of this link."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:124
msgid "``sink``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:125
msgid "Pad at the target of this link."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:129
msgid "Link flags, see :ref:`media-link-flag` for more details."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:137
msgid "Return Value"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:139
msgid ""
"On success 0 is returned, on error -1 and the ``errno`` variable is set "
"appropriately. The generic error codes are described at the :ref:`Generic "
"Error Codes <gen-errors>` chapter."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:143
msgid "EINVAL"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-enum-links.rst:144
msgid ""
"The struct :c:type:`media_links_enum` ``id`` references a non-existing "
"entity."
msgstr ""
