# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../crypto/krb5.rst:5
msgid "Kerberos V Cryptography API"
msgstr ""

#: ../../../crypto/krb5.rst:22
msgid "Overview"
msgstr ""

#: ../../../crypto/krb5.rst:24
msgid ""
"This API provides Kerberos 5-style cryptography for key derivation, "
"encryption and checksumming for use in network filesystems and can be used "
"to implement the low-level crypto that's needed for GSSAPI."
msgstr ""

#: ../../../crypto/krb5.rst:28
msgid "The following crypto types are supported::"
msgstr ""

#: ../../../crypto/krb5.rst:44
msgid "The API can be included by::"
msgstr ""

#: ../../../crypto/krb5.rst:49
msgid "Small Buffer"
msgstr ""

#: ../../../crypto/krb5.rst:51
msgid ""
"To pass small pieces of data about, such as keys, a buffer structure is "
"defined, giving a pointer to the data and the size of that data::"
msgstr ""

#: ../../../crypto/krb5.rst:60
msgid "Encoding Type"
msgstr ""

#: ../../../crypto/krb5.rst:62
msgid "The encoding type is defined by the following structure::"
msgstr ""

#: ../../../crypto/krb5.rst:80
msgid "The fields of interest to the user of the API are as follows:"
msgstr ""

#: ../../../crypto/krb5.rst:82
msgid ""
"``etype`` and ``ctype`` indicate the protocol number for this encoding type "
"for encryption and checksumming respectively.  They hold ``KRB5_ENCTYPE_*`` "
"and ``KRB5_CKSUMTYPE_*`` constants."
msgstr ""

#: ../../../crypto/krb5.rst:86
msgid "``name`` is the formal name of the encoding."
msgstr ""

#: ../../../crypto/krb5.rst:88
msgid ""
"``key_len`` and ``key_bytes`` are the input key length and the derived key "
"length.  (I think they only differ for DES, which isn't supported here)."
msgstr ""

#: ../../../crypto/krb5.rst:91
msgid ""
"``Kc_len``, ``Ke_len`` and ``Ki_len`` are the sizes of the derived Kc, Ke "
"and Ki keys.  Kc is used for in checksum mode; Ke and Ki are used in "
"encryption mode."
msgstr ""

#: ../../../crypto/krb5.rst:95
msgid ""
"``prf_len`` is the size of the result from the PRF+ function calculation."
msgstr ""

#: ../../../crypto/krb5.rst:97
msgid ""
"``block_len``, ``conf_len`` and ``cksum_len`` are the encryption block "
"length, confounder length and checksum length respectively.  All three are "
"used in encryption mode, but only the checksum length is used in checksum "
"mode."
msgstr ""

#: ../../../crypto/krb5.rst:102
msgid "The encoding type is looked up by number using the following function::"
msgstr ""

#: ../../../crypto/krb5.rst:107
msgid "Key Derivation"
msgstr ""

#: ../../../crypto/krb5.rst:109
msgid ""
"Once the application has selected an encryption type, the keys that will be "
"used to do the actual crypto can be derived from the transport key."
msgstr ""

#: ../../../crypto/krb5.rst:113
msgid "PRF+ Calculation"
msgstr ""

#: ../../../crypto/krb5.rst:115
msgid ""
"To aid in key derivation, a function to calculate the Kerberos GSSAPI "
"mechanism's PRF+ is provided::"
msgstr ""

#: ../../../crypto/krb5.rst:125
msgid ""
"This can be used to derive the transport key from a source key plus "
"additional data to limit its use."
msgstr ""

#: ../../../crypto/krb5.rst:129
msgid "Crypto Functions"
msgstr ""

#: ../../../crypto/krb5.rst:131
msgid ""
"Once the keys have been derived, crypto can be performed on the data.  The "
"caller must leave gaps in the buffer for the storage of the confounder (if "
"needed) and the checksum when preparing a message for transmission.  An enum "
"and a pair of functions are provided to aid in this::"
msgstr ""

#: ../../../crypto/krb5.rst:149
msgid ""
"All these functions take the encoding type and an indication the mode of "
"crypto (checksum-only or full encryption)."
msgstr ""

#: ../../../crypto/krb5.rst:152
msgid ""
"The first function returns how big the buffer will need to be to house a "
"given amount of data; the second function returns how much data will fit in "
"a buffer of a particular size, and adjusts down the size of the required "
"buffer accordingly.  In both cases, the offset of the data within the buffer "
"is also returned."
msgstr ""

#: ../../../crypto/krb5.rst:158
msgid ""
"When a message has been received, the location and size of the data with the "
"message can be determined by calling::"
msgstr ""

#: ../../../crypto/krb5.rst:165
msgid ""
"The caller provides the offset and length of the message to the function, "
"which then alters those values to indicate the region containing the data "
"(plus any padding).  It is up to the caller to determine how much padding "
"there is."
msgstr ""

#: ../../../crypto/krb5.rst:170
msgid "Preparation Functions"
msgstr ""

#: ../../../crypto/krb5.rst:172
msgid ""
"Two functions are provided to allocated and prepare a crypto object for use "
"by the action functions::"
msgstr ""

#: ../../../crypto/krb5.rst:184
msgid ""
"Both of these functions take the encoding type, the transport key and the "
"usage value used to derive the appropriate subkey(s).  They create an "
"appropriate crypto object, an AEAD template for encryption and a synchronous "
"hash for checksumming, set the key(s) on it and configure it.  The caller is "
"expected to pass these handles to the action functions below."
msgstr ""

#: ../../../crypto/krb5.rst:191
msgid "Encryption Mode"
msgstr ""

#: ../../../crypto/krb5.rst:193
msgid "A pair of functions are provided to encrypt and decrypt a message::"
msgstr ""

#: ../../../crypto/krb5.rst:206
msgid ""
"In both cases, the input and output buffers are indicated by the same "
"scatterlist."
msgstr ""

#: ../../../crypto/krb5.rst:209
msgid ""
"For the encryption function, the output buffer may be larger than is needed "
"(the amount of output generated is returned) and the location and size of "
"the data are indicated (which must match the encoding).  If no confounder is "
"set, the function will insert one."
msgstr ""

#: ../../../crypto/krb5.rst:214
msgid ""
"For the decryption function, the offset and length of the message in buffer "
"are supplied and these are shrunk to fit the data.  The decryption function "
"will verify any checksums within the message and give an error if they don't "
"match."
msgstr ""

#: ../../../crypto/krb5.rst:219
msgid "Checksum Mode"
msgstr ""

#: ../../../crypto/krb5.rst:221
msgid ""
"A pair of function are provided to generate the checksum on a message and to "
"verify that checksum::"
msgstr ""

#: ../../../crypto/krb5.rst:236
msgid ""
"In both cases, the input and output buffers are indicated by the same "
"scatterlist.  Additional metadata can be passed in which will get added to "
"the hash before the data."
msgstr ""

#: ../../../crypto/krb5.rst:240
msgid ""
"For the get_mic function, the output buffer may be larger than is needed "
"(the amount of output generated is returned) and the location and size of "
"the data are indicated (which must match the encoding)."
msgstr ""

#: ../../../crypto/krb5.rst:244
msgid ""
"For the verification function, the offset and length of the message in "
"buffer are supplied and these are shrunk to fit the data.  An error will be "
"returned if the checksums don't match."
msgstr ""

#: ../../../crypto/krb5.rst:249
msgid "The krb5enc AEAD algorithm"
msgstr ""

#: ../../../crypto/krb5.rst:251
msgid ""
"A template AEAD crypto algorithm, called \"krb5enc\", is provided that "
"hashes the plaintext before encrypting it (the reverse of authenc).  The "
"handle returned by ``crypto_krb5_prepare_encryption()`` may be one of these, "
"but there's no requirement for the user of this API to interact with it "
"directly."
msgstr ""

#: ../../../crypto/krb5.rst:256
msgid ""
"For reference, its key format begins with a BE32 of the format number.  Only "
"format 1 is provided and that continues with a BE32 of the Ke key length "
"followed by a BE32 of the Ki key length, followed by the bytes from the Ke "
"key and then the Ki key."
msgstr ""

#: ../../../crypto/krb5.rst:261
msgid ""
"Using specifically ordered words means that the static test data doesn't "
"require byteswapping."
msgstr ""
