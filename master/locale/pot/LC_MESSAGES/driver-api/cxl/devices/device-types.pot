# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../driver-api/cxl/devices/device-types.rst:5
msgid "Devices and Protocols"
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:7
msgid ""
"The type of CXL device (Memory, Accelerator, etc) dictates many "
"configuration steps. This section covers some basic background on device "
"types and on-device resources used by the platform and OS which impact "
"configuration."
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:12
msgid "Protocols"
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:14
msgid ""
"There are three core protocols to CXL.  For the purpose of this "
"documentation, we will only discuss very high level definitions as the "
"specific hardware details are largely abstracted away from Linux.  See the "
"CXL specification for more details."
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:20
msgid "CXL.io"
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:21
msgid ""
"The basic interaction protocol, similar to PCIe configuration mechanisms. "
"Typically used for initialization, configuration, and I/O access for "
"anything other than memory (CXL.mem) or cache (CXL.cache) operations."
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:25
msgid ""
"The Linux CXL driver exposes access to .io functionalty via the various "
"sysfs interfaces and /dev/cxl/ devices (which exposes direct access to "
"device mailboxes)."
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:30
msgid "CXL.cache"
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:31
msgid ""
"The mechanism by which a device may coherently access and cache host memory."
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:33
#: ../../../driver-api/cxl/devices/device-types.rst:39
msgid "Largely transparent to Linux once configured."
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:36
msgid "CXL.mem"
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:37
msgid ""
"The mechanism by which the CPU may coherently access and cache device memory."
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:43
msgid "Device Types"
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:46
msgid "Type-1"
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:48
msgid "A Type-1 CXL device:"
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:50
msgid "Supports cxl.io and cxl.cache protocols"
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:51
msgid "Implements a fully coherent cache"
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:52
msgid "Allows Device-to-Host coherence and Host-to-Device snoops."
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:53
msgid "Does NOT have host-managed device memory (HDM)"
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:55
msgid ""
"Typical examples of type-1 devices is a Smart NIC - which may want to "
"directly operate on host-memory (DMA) to store incoming packets. These "
"devices largely rely on CPU-attached memory."
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:60
msgid "Type-2"
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:62
msgid "A Type-2 CXL Device:"
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:64
msgid "Supports cxl.io, cxl.cache, and cxl.mem protocols"
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:65
msgid "Optionally implements coherent cache and Host-Managed Device Memory"
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:66
msgid "Is typically an accelerator device with high bandwidth memory."
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:68
msgid ""
"The primary difference between a type-1 and type-2 device is the presence of "
"host-managed device memory, which allows the device to operate on a local "
"memory bank - while the CPU still has coherent DMA to the same memory."
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:72
msgid ""
"This allows things like GPUs to expose their memory via DAX devices or file "
"descriptors, allows drivers and programs direct access to device memory "
"rather than use block-transfer semantics."
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:77
msgid "Type-3"
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:79
msgid "A Type-3 CXL Device"
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:81
msgid "Supports cxl.io and cxl.mem"
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:82
msgid "Implements Host-Managed Device Memory"
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:83
msgid "May provide either Volatile or Persistent memory capacity (or both)."
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:85
msgid ""
"A basic example of a type-3 device is a simple memory expander, whose local "
"memory capacity is exposed to the CPU for access directly via basic coherent "
"DMA."
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:90
msgid "Switch"
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:92
msgid ""
"A CXL switch is a device capable of routing any CXL (and by extension, PCIe) "
"protocol between an upstream, downstream, or peer devices.  Many devices, "
"such as Multi-Logical Devices, imply the presence of switching in some "
"manner."
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:97
msgid "Logical Devices and Heads"
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:99
msgid ""
"A CXL device may present one or more \"Logical Devices\" to one or more "
"hosts (via physical \"Heads\")."
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:102
msgid ""
"A Single-Logical Device (SLD) is a device which presents a single device to "
"one or more heads."
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:105
msgid ""
"A Multi-Logical Device (MLD) is a device which may present multiple devices "
"to one or more upstream devices."
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:108
msgid "A Single-Headed Device exposes only a single physical connection."
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:110
msgid "A Multi-Headed Device exposes multiple physical connections."
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:113
msgid "MHSLD"
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:114
msgid ""
"A Multi-Headed Single-Logical Device (MHSLD) exposes a single logical device "
"to multiple heads which may be connected to one or more discrete hosts.  An "
"example of this would be a simple memory-pool which may be statically "
"configured (prior to boot) to expose portions of its memory to Linux via :"
"doc:`CEDT <../platform/acpi/cedt>`."
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:121
msgid "MHMLD"
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:122
msgid ""
"A Multi-Headed Multi-Logical Device (MHMLD) exposes multiple logical devices "
"to multiple heads which may be connected to one or more discrete hosts.  An "
"example of this would be a Dynamic Capacity Device or which may be "
"configured at runtime to expose portions of its memory to Linux."
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:128
msgid "Example Devices"
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:131
msgid "Memory Expander"
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:132
msgid ""
"The simplest form of Type-3 device is a memory expander.  A memory expander "
"exposes Host-Managed Device Memory (HDM) to Linux.  This memory may be "
"Volatile or Non-Volatile (Persistent)."
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:136
msgid ""
"Memory Expanders will typically be considered a form of Single-Headed, "
"Single-Logical Device - as its form factor will typically be an add-in-card "
"(AIC) or some other similar form-factor."
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:140
msgid ""
"The Linux CXL driver provides support for static or dynamic configuration of "
"basic memory expanders.  The platform may program decoders prior to OS init "
"(e.g. auto-decoders), or the user may program the fabric if the platform "
"defers these operations to the OS."
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:145
msgid ""
"Multiple Memory Expanders may be added to an external chassis and exposed to "
"a host via a head attached to a CXL switch.  This is a \"memory pool\", and "
"would be considered an MHSLD or MHMLD depending on the management "
"capabilities provided by the switch platform."
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:150
msgid ""
"As of v6.14, Linux does not provide a formalized interface to manage non-DCD "
"MHSLD or MHMLD devices."
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:154
msgid "Dynamic Capacity Device (DCD)"
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:156
msgid ""
"A Dynamic Capacity Device is a Type-3 device which provides dynamic "
"management of memory capacity. The basic premise of a DCD to provide an "
"allocator-like interface for physical memory capacity to a \"Fabric "
"Manager\" (an external, privileged host with privileges to change "
"configurations for other hosts)."
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:161
msgid ""
"A DCD manages \"Memory Extents\", which may be volatile or persistent. "
"Extents may also be exclusive to a single host or shared across multiple "
"hosts."
msgstr ""

#: ../../../driver-api/cxl/devices/device-types.rst:164
msgid ""
"As of v6.14, Linux does not provide a formalized interface to manage DCD "
"devices, however there is active work on LKML targeting future release."
msgstr ""
