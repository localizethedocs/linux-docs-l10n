# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-13 08:27+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../driver-api/80211/mac80211-advanced.rst:3
msgid "mac80211 subsystem (advanced)"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced.rst:5
msgid ""
"Information contained within this part of the book is of interest only for "
"advanced interaction of mac80211 with drivers to exploit more hardware "
"capabilities and improve performance."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced.rst:10
msgid "LED support"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced.rst:12
msgid ""
"Mac80211 supports various ways of blinking LEDs. Wherever possible, device "
"LEDs should be exposed as LED class devices and hooked up to the appropriate "
"trigger, which will then be triggered appropriately by mac80211."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:17: include/net/mac80211.h:4964
msgid "throughput blink description"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2472
#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:7003
#: ../../../driver-api/80211/mac80211-advanced:17: include/net/mac80211.h:4968
#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:628
#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:159
#: net/mac80211/sta_info.h:210 net/mac80211/sta_info.h:264
#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2224
#: ../../../driver-api/80211/mac80211-advanced:62: include/net/mac80211.h:180
msgid "**Definition**::"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2498
#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:7017
#: ../../../driver-api/80211/mac80211-advanced:17: include/net/mac80211.h:4975
#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:681
#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:181
#: net/mac80211/sta_info.h:231 net/mac80211/sta_info.h:282
#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2239
#: ../../../driver-api/80211/mac80211-advanced:62: include/net/mac80211.h:193
msgid "**Members**"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:17: include/net/mac80211.h:4965
msgid "``throughput``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:17: include/net/mac80211.h:4966
msgid "throughput in Kbit/sec"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:17: include/net/mac80211.h:4966
msgid "``blink_time``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:17: include/net/mac80211.h:4967
msgid "blink time in milliseconds (full cycle, ie. one off + one on period)"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:17: include/net/mac80211.h:4975
msgid "throughput trigger flags"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2580
#: ../../../driver-api/80211/mac80211-advanced:147: include/net/mac80211.h:3702
#: ../../../driver-api/80211/mac80211-advanced:156: include/net/mac80211.h:1755
#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:3785
#: ../../../driver-api/80211/mac80211-advanced:17: include/net/mac80211.h:4979
#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:28
#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2162
#: include/net/mac80211.h:2305 ../../../driver-api/80211/mac80211-advanced:81:
#: include/net/mac80211.h:3774
msgid "**Constants**"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:17: include/net/mac80211.h:4981
msgid "``IEEE80211_TPT_LEDTRIG_FL_RADIO``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:17: include/net/mac80211.h:4982
msgid "enable blinking with radio"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:17: include/net/mac80211.h:4984
msgid "``IEEE80211_TPT_LEDTRIG_FL_WORK``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:17: include/net/mac80211.h:4985
msgid "enable blinking when working"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:17: include/net/mac80211.h:4987
msgid "``IEEE80211_TPT_LEDTRIG_FL_CONNECTED``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:17: include/net/mac80211.h:4988
msgid ""
"enable blinking when at least one interface is connected in some way, "
"including being an AP"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:17: include/net/mac80211.h:4999
msgid "get name of TX LED"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:103: include/net/mac80211.h:6231
#: include/net/mac80211.h:6257 ../../../driver-api/80211/mac80211-advanced:113:
#: include/net/mac80211.h:6424 include/net/mac80211.h:6438
#: ../../../driver-api/80211/mac80211-advanced:125: include/net/mac80211.h:6156
#: ../../../driver-api/80211/mac80211-advanced:156: include/net/mac80211.h:6859
#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:6370
#: include/net/mac80211.h:6385 include/net/mac80211.h:6398
#: include/net/mac80211.h:6411 ../../../driver-api/80211/mac80211-advanced:17:
#: include/net/mac80211.h:5003 include/net/mac80211.h:5024
#: include/net/mac80211.h:5045 include/net/mac80211.h:5066
#: include/net/mac80211.h:5087 ../../../driver-api/80211/mac80211-advanced:33:
#: include/net/mac80211.h:5929 include/net/mac80211.h:5941
#: include/net/mac80211.h:5976 ../../../driver-api/80211/mac80211-advanced:54:
#: include/net/mac80211.h:6729 ../../../driver-api/80211/mac80211-advanced:81:
#: include/net/mac80211.h:5258 include/net/mac80211.h:5277
#: include/net/mac80211.h:5339 include/net/mac80211.h:5657
#: include/net/mac80211.h:5905 include/net/mac80211.h:6482
#: include/net/mac80211.h:6514
msgid "**Parameters**"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:103: include/net/mac80211.h:6233
#: include/net/mac80211.h:6259 ../../../driver-api/80211/mac80211-advanced:113:
#: include/net/mac80211.h:6440 ../../../driver-api/80211/mac80211-advanced:125:
#: include/net/mac80211.h:6158 ../../../driver-api/80211/mac80211-advanced:17:
#: include/net/mac80211.h:5005 include/net/mac80211.h:5026
#: include/net/mac80211.h:5047 include/net/mac80211.h:5068
#: include/net/mac80211.h:5089 ../../../driver-api/80211/mac80211-advanced:81:
#: include/net/mac80211.h:5659 include/net/mac80211.h:5907
#: include/net/mac80211.h:6484
msgid "``struct ieee80211_hw *hw``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:17: include/net/mac80211.h:5006
#: include/net/mac80211.h:5027 include/net/mac80211.h:5048
#: include/net/mac80211.h:5069
msgid "the hardware to get the LED trigger name for"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:103: include/net/mac80211.h:6241
#: include/net/mac80211.h:6266 ../../../driver-api/80211/mac80211-advanced:113:
#: include/net/mac80211.h:2491 include/net/mac80211.h:2588
#: ../../../driver-api/80211/mac80211-advanced:125: include/net/mac80211.h:6162
#: ../../../driver-api/80211/mac80211-advanced:147: include/net/mac80211.h:3738
#: ../../../driver-api/80211/mac80211-advanced:156: include/net/mac80211.h:6860
#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:6373
#: include/net/mac80211.h:6386 include/net/mac80211.h:6400
#: include/net/mac80211.h:6412 ../../../driver-api/80211/mac80211-advanced:17:
#: include/net/mac80211.h:5008 include/net/mac80211.h:5029
#: include/net/mac80211.h:5050 include/net/mac80211.h:5071
#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:135
#: net/mac80211/sta_info.h:674 ../../../driver-api/80211/mac80211-advanced:228:
#: net/mac80211/sta_info.h:168 net/mac80211/sta_info.h:232
#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2228
#: include/net/mac80211.h:2242 include/net/mac80211.h:2313
#: include/net/mac80211.h:5933 include/net/mac80211.h:5947
#: include/net/mac80211.h:5982 ../../../driver-api/80211/mac80211-advanced:54:
#: include/net/mac80211.h:6729 ../../../driver-api/80211/mac80211-advanced:62:
#: include/net/mac80211.h:193 ../../../driver-api/80211/mac80211-advanced:81:
#: include/net/mac80211.h:5268 include/net/mac80211.h:5283
#: include/net/mac80211.h:5340 include/net/mac80211.h:5659
#: include/net/mac80211.h:5905 include/net/mac80211.h:6483
#: include/net/mac80211.h:6513
msgid "**Description**"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:17: include/net/mac80211.h:5000
msgid ""
"mac80211 creates a transmit LED trigger for each wireless hardware that can "
"be used to drive LEDs if your driver registers a LED device. This function "
"returns the name (or ``NULL`` if not configured for LEDs) of the trigger so "
"you can automatically link the LED device."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:6425
#: include/net/mac80211.h:6440 ../../../driver-api/80211/mac80211-advanced:171:
#: include/net/mac80211.h:6371 include/net/mac80211.h:6398
#: ../../../driver-api/80211/mac80211-advanced:17: include/net/mac80211.h:5005
#: include/net/mac80211.h:5026 include/net/mac80211.h:5047
#: include/net/mac80211.h:5068 include/net/mac80211.h:5089
#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:5264
#: include/net/mac80211.h:5278 include/net/mac80211.h:5660
#: include/net/mac80211.h:5910
msgid "**Return**"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:17: include/net/mac80211.h:5008
#: include/net/mac80211.h:5029 include/net/mac80211.h:5050
#: include/net/mac80211.h:5071
msgid "The name of the LED trigger. ``NULL`` if not configured for LEDs."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:17: include/net/mac80211.h:5020
msgid "get name of RX LED"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:17: include/net/mac80211.h:5021
msgid ""
"mac80211 creates a receive LED trigger for each wireless hardware that can "
"be used to drive LEDs if your driver registers a LED device. This function "
"returns the name (or ``NULL`` if not configured for LEDs) of the trigger so "
"you can automatically link the LED device."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:17: include/net/mac80211.h:5041
msgid "get name of association LED"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:17: include/net/mac80211.h:5042
msgid ""
"mac80211 creates a association LED trigger for each wireless hardware that "
"can be used to drive LEDs if your driver registers a LED device. This "
"function returns the name (or ``NULL`` if not configured for LEDs) of the "
"trigger so you can automatically link the LED device."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:17: include/net/mac80211.h:5062
msgid "get name of radio LED"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:17: include/net/mac80211.h:5063
msgid ""
"mac80211 creates a radio change LED trigger for each wireless hardware that "
"can be used to drive LEDs if your driver registers a LED device. This "
"function returns the name (or ``NULL`` if not configured for LEDs) of the "
"trigger so you can automatically link the LED device."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:17: include/net/mac80211.h:5083
msgid "create throughput LED trigger"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:17: include/net/mac80211.h:5084
msgid "the hardware to create the trigger for"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:17: include/net/mac80211.h:5086
msgid "``unsigned int flags``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:17: include/net/mac80211.h:5085
msgid ""
"trigger flags, see :c:type:`enum ieee80211_tpt_led_trigger_flags "
"<ieee80211_tpt_led_trigger_flags>`"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:17: include/net/mac80211.h:5087
msgid "``const struct ieee80211_tpt_blink *blink_table``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:17: include/net/mac80211.h:5086
msgid "the blink table -- needs to be ordered by throughput"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:17: include/net/mac80211.h:5088
msgid "``unsigned int blink_table_len``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:17: include/net/mac80211.h:5087
msgid "size of the blink table"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:17: include/net/mac80211.h:5089
msgid ""
"``NULL`` (in case of error, or if no LED triggers are configured) or the "
"name of the new trigger."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:6427
#: include/net/mac80211.h:6442 ../../../driver-api/80211/mac80211-advanced:17:
#: include/net/mac80211.h:5092 ../../../driver-api/80211/mac80211-advanced:81:
#: include/net/mac80211.h:5914
msgid "**Note**"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:17: include/net/mac80211.h:5092
msgid "This function must be called before ieee80211_register_hw()."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced.rst:28
msgid "Hardware crypto acceleration"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:30: include/net/mac80211.h:3244
msgid ""
"mac80211 is capable of taking advantage of many hardware acceleration "
"designs for encryption and decryption operations."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:30: include/net/mac80211.h:3247
msgid ""
"The set_key() callback in the :c:type:`struct ieee80211_ops <ieee80211_ops>` "
"for a given device is called to enable hardware acceleration of encryption "
"and decryption. The callback takes a **sta** parameter that will be NULL for "
"default keys or keys used for transmission only, or point to the station "
"information for the peer for individual keys. Multiple transmission keys "
"with the same key index may be used when VLANs are configured for an access "
"point."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:30: include/net/mac80211.h:3255
msgid ""
"When transmitting, the TX control data will use the **hw_key_idx** selected "
"by the driver by modifying the :c:type:`struct ieee80211_key_conf "
"<ieee80211_key_conf>` pointed to by the **key** parameter to the set_key() "
"function."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:30: include/net/mac80211.h:3259
msgid ""
"The set_key() call for the ``SET_KEY`` command should return 0 if the key is "
"now in use, -``EOPNOTSUPP`` or -``ENOSPC`` if it couldn't be added; if you "
"return 0 then hw_key_idx must be assigned to the hardware key index. You are "
"free to use the full u8 range."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:30: include/net/mac80211.h:3264
msgid ""
"Note that in the case that the **IEEE80211_HW_SW_CRYPTO_CONTROL** flag is "
"set, mac80211 will not automatically fall back to software crypto if "
"enabling hardware crypto failed. The set_key() call may also return the "
"value 1 to permit this specific key/algorithm to be done in software."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:30: include/net/mac80211.h:3269
msgid "When the cmd is ``DISABLE_KEY`` then it must succeed."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:30: include/net/mac80211.h:3271
msgid ""
"Note that it is permissible to not decrypt a frame even if a key for it has "
"been uploaded to hardware. The stack will not make any decision based on "
"whether a key has been uploaded or not but rather based on the receive flags."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:30: include/net/mac80211.h:3276
msgid ""
"The :c:type:`struct ieee80211_key_conf <ieee80211_key_conf>` structure "
"pointed to by the **key** parameter is guaranteed to be valid until another "
"call to set_key() removes it, but it can only be used as a cookie to "
"differentiate keys."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:30: include/net/mac80211.h:3281
msgid ""
"In TKIP some HW need to be provided a phase 1 key, for RX decryption "
"acceleration (i.e. iwlwifi). Those drivers should provide update_tkip_key "
"handler. The update_tkip_key() call updates the driver with the new phase 1 "
"key. This happens every time the iv16 wraps around (every 65536 packets). "
"The set_key() call will happen only once for each key (unless the AP did "
"rekeying); it will not include a valid phase 1 key. The valid phase 1 key is "
"provided by update_tkip_key only. The trigger that makes mac80211 call this "
"handler is software decryption with wrap around of iv16."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:30: include/net/mac80211.h:3291
msgid ""
"The set_default_unicast_key() call updates the default WEP key index "
"configured to the hardware for WEP encryption type. This is required for "
"devices that support offload of data packets (e.g. ARP responses)."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:30: include/net/mac80211.h:3295
msgid ""
"Mac80211 drivers should set the **NL80211_EXT_FEATURE_CAN_REPLACE_PTK0** "
"flag when they are able to replace in-use PTK keys according to the "
"following requirements: 1) They do not hand over frames decrypted with the "
"old key to mac80211"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2158
msgid "key flags"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2164
msgid "``IEEE80211_KEY_FLAG_GENERATE_IV_MGMT``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2165
msgid ""
"This flag should be set by the driver for a CCMP/GCMP key to indicate that "
"is requires IV generation only for management frames (MFP)."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2169
msgid "``IEEE80211_KEY_FLAG_GENERATE_IV``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2170
msgid ""
"This flag should be set by the driver to indicate that it requires IV "
"generation for this particular key. Setting this flag does not necessarily "
"mean that SKBs will have sufficient tailroom for ICV or MIC."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2175
msgid "``IEEE80211_KEY_FLAG_GENERATE_MMIC``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2176
msgid ""
"This flag should be set by the driver for a TKIP key if it requires Michael "
"MIC generation in software."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2180
msgid "``IEEE80211_KEY_FLAG_PAIRWISE``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2181
msgid ""
"Set by mac80211, this flag indicates that the key is pairwise rather then a "
"shared key."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2184
msgid "``IEEE80211_KEY_FLAG_SW_MGMT_TX``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2185
msgid ""
"This flag should be set by the driver for a CCMP/GCMP key if it requires "
"CCMP/GCMP encryption of management frames (MFP) to be done in software."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2189
msgid "``IEEE80211_KEY_FLAG_PUT_IV_SPACE``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2190
msgid ""
"This flag should be set by the driver if space should be prepared for the "
"IV, but the IV itself should not be generated. Do not set together with "
"**IEEE80211_KEY_FLAG_GENERATE_IV** on the same key. Setting this flag does "
"not necessarily mean that SKBs will have sufficient tailroom for ICV or MIC."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2197
msgid "``IEEE80211_KEY_FLAG_RX_MGMT``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2198
msgid ""
"This key will be used to decrypt received management frames. The flag can "
"help drivers that have a hardware crypto implementation that doesn't deal "
"with management frames properly by allowing them to not upload the keys to "
"hardware and fall back to software crypto. Note that this flag deals only "
"with RX, if your crypto engine can't deal with TX you can also set the "
"``IEEE80211_KEY_FLAG_SW_MGMT_TX`` flag to encrypt such frames in SW."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2206
msgid "``IEEE80211_KEY_FLAG_RESERVE_TAILROOM``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2207
msgid ""
"This flag should be set by the driver for a key to indicate that sufficient "
"tailroom must always be reserved for ICV or MIC, even when HW encryption is "
"enabled."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2211
msgid "``IEEE80211_KEY_FLAG_PUT_MIC_SPACE``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2212
msgid ""
"This flag should be set by the driver for a TKIP key if it only requires MIC "
"space. Do not set together with **IEEE80211_KEY_FLAG_GENERATE_MMIC** on the "
"same key."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2216
msgid "``IEEE80211_KEY_FLAG_NO_AUTO_TX``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2217
msgid "Key needs explicit Tx activation."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2219
msgid "``IEEE80211_KEY_FLAG_GENERATE_MMIE``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2220
msgid ""
"This flag should be set by the driver for a AES_CMAC or a AES_GMAC key to "
"indicate that it requires sequence number generation only"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2224
msgid "``IEEE80211_KEY_FLAG_SPP_AMSDU``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2225
msgid ""
"SPP A-MSDUs can be used with this key (set by mac80211 from the sta-"
">spp_amsdu flag)"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2159
msgid ""
"These flags are used for communication about keys between the driver and "
"mac80211, with the **flags** parameter of :c:type:`struct ieee80211_key_conf "
"<ieee80211_key_conf>`."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2220
msgid "key information"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2229
msgid "``tx_pn``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2230
msgid ""
"PN used for TX keys, may be used by the driver as well if it needs to do "
"software PN assignment by itself (e.g. due to TSO)"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2228
msgid "``cipher``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2229
msgid "The key's cipher suite selector."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2239
msgid "``icv_len``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2240
msgid "The ICV length for this key type"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2240
msgid "``iv_len``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2241
msgid "The IV length for this key type"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2225
msgid "``hw_key_idx``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2226
msgid ""
"To be set by the driver, this is the key index the driver wants to be given "
"when a frame is transmitted and needs to be encrypted in hardware."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2232
msgid "``keyidx``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2233
msgid "the key index (0-7)"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2231
msgid "``flags``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2232
msgid ""
"key flags, see :c:type:`enum ieee80211_key_flags <ieee80211_key_flags>`."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2241
msgid "``link_id``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2242
msgid "the link ID, 0 for non-MLO, or -1 for pairwise keys"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2233
msgid "``keylen``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2234
msgid "key material length"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2234
msgid "``key``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2235
msgid ""
"key material. For ALG_TKIP the key is encoded as a 256-bit (32 byte) data "
"block: - Temporal Encryption Key (128 bits) - Temporal Authenticator Tx MIC "
"Key (64 bits) - Temporal Authenticator Rx MIC Key (64 bits)"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2221
msgid ""
"This key information is given by mac80211 to the driver by the set_key() "
"callback in :c:type:`struct ieee80211_ops <ieee80211_ops>`."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2301
msgid "key command"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2307
msgid "``SET_KEY``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2308
msgid "a key is set"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2310
msgid "``DISABLE_KEY``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2311
msgid "a key must be disabled"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:2302
msgid ""
"Used with the set_key() callback in :c:type:`struct ieee80211_ops "
"<ieee80211_ops>`, this indicates whether a key is being removed or added."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:5925
msgid "get a TKIP phase 1 key for IV32"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:5931
#: include/net/mac80211.h:5943 include/net/mac80211.h:5978
msgid "``struct ieee80211_key_conf *keyconf``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:5929
#: include/net/mac80211.h:5942 include/net/mac80211.h:5977
msgid "the parameter passed with the set key"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:5931
msgid "``u32 iv32``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:5930
msgid "IV32 to get the P1K for"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:5932
#: include/net/mac80211.h:5946
msgid "``u16 *p1k``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:5931
#: include/net/mac80211.h:5945
msgid "a buffer to which the key will be written, as 5 u16 values"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:5926
msgid "This function returns the TKIP phase 1 key for the given IV32."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:5937
msgid "get a TKIP phase 1 key"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:5944
#: include/net/mac80211.h:5979
msgid "``struct sk_buff *skb``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:5943
msgid ""
"the packet to take the IV32 value from that will be encrypted with this P1K"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:5938
msgid ""
"This function returns the TKIP phase 1 key for the IV32 taken from the given "
"packet."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:5972
msgid "get a TKIP phase 2 key"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:5978
msgid ""
"the packet to take the IV32/IV16 values from that will be encrypted with "
"this key"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:5981
msgid "``u8 *p2k``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:5980
msgid "a buffer to which the key will be written, 16 bytes"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:33: include/net/mac80211.h:5973
msgid ""
"This function computes the TKIP RC4 key for the IV values in the packet."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced.rst:43
msgid "Powersave support"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:45: include/net/mac80211.h:3312
msgid "mac80211 has support for various powersave implementations."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:45: include/net/mac80211.h:3314
msgid ""
"First, it can support hardware that handles all powersaving by itself; such "
"hardware should simply set the ``IEEE80211_HW_SUPPORTS_PS`` hardware flag. "
"In that case, it will be told about the desired powersave mode with the "
"``IEEE80211_CONF_PS`` flag depending on the association status. The hardware "
"must take care of sending nullfunc frames when necessary, i.e. when entering "
"and leaving powersave mode. The hardware is required to look at the AID in "
"beacons and signal to the AP that it woke up when it finds traffic directed "
"to it."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:45: include/net/mac80211.h:3323
msgid ""
"``IEEE80211_CONF_PS`` flag enabled means that the powersave mode defined in "
"IEEE 802.11-2007 section 11.2 is enabled. This is not to be confused with "
"hardware wakeup and sleep states. Driver is responsible for waking up the "
"hardware before issuing commands to the hardware and putting it back to "
"sleep at appropriate times."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:45: include/net/mac80211.h:3329
msgid ""
"When PS is enabled, hardware needs to wakeup for beacons and receive the "
"buffered multicast/broadcast frames after the beacon. Also it must be "
"possible to send frames and receive the acknowledment frame."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:45: include/net/mac80211.h:3333
msgid ""
"Other hardware designs cannot send nullfunc frames by themselves and also "
"need software support for parsing the TIM bitmap. This is also supported by "
"mac80211 by combining the ``IEEE80211_HW_SUPPORTS_PS`` and "
"``IEEE80211_HW_PS_NULLFUNC_STACK`` flags. The hardware is of course still "
"required to pass up beacons. The hardware is still required to handle waking "
"up for multicast traffic; if it cannot the driver must handle that as best "
"as it can; mac80211 is too slow to do that."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:45: include/net/mac80211.h:3341
msgid ""
"Dynamic powersave is an extension to normal powersave in which the hardware "
"stays awake for a user-specified period of time after sending a frame so "
"that reply frames need not be buffered and therefore delayed to the next "
"wakeup. It's a compromise of getting good enough latency when there's data "
"traffic and still saving significantly power in idle periods."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:45: include/net/mac80211.h:3348
msgid ""
"Dynamic powersave is simply supported by mac80211 enabling and disabling PS "
"based on traffic. Driver needs to only set ``IEEE80211_HW_SUPPORTS_PS`` flag "
"and mac80211 will handle everything automatically. Additionally, hardware "
"having support for the dynamic PS feature may set the "
"``IEEE80211_HW_SUPPORTS_DYNAMIC_PS`` flag to indicate that it can support "
"dynamic PS mode itself. The driver needs to look at the "
"**dynamic_ps_timeout** hardware configuration value and use it that value "
"whenever ``IEEE80211_CONF_PS`` is set. In this case mac80211 will disable "
"dynamic PS feature in stack and will just keep ``IEEE80211_CONF_PS`` enabled "
"whenever user has enabled powersave."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:45: include/net/mac80211.h:3359
msgid ""
"Driver informs U-APSD client support by enabling "
"``IEEE80211_VIF_SUPPORTS_UAPSD`` flag. The mode is configured through the "
"uapsd parameter in conf_tx() operation. Hardware needs to send the QoS "
"Nullfunc frames and stay awake until the service period has ended. To "
"utilize U-APSD, dynamic powersave is disabled for voip AC and all frames "
"from that AC are transmitted with powersave enabled."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:45: include/net/mac80211.h:3366
msgid ""
"Note: U-APSD client mode is not yet supported with "
"``IEEE80211_HW_PS_NULLFUNC_STACK``."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced.rst:49
msgid "Beacon filter support"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:51: include/net/mac80211.h:3373
msgid ""
"Some hardware have beacon filter support to reduce host cpu wakeups which "
"will reduce system power consumption. It usually works so that the firmware "
"creates a checksum of the beacon but omits all constantly changing elements "
"(TSF, TIM etc). Whenever the checksum changes the beacon is forwarded to the "
"host, otherwise it will be just dropped. That way the host will only receive "
"beacons where some relevant information (for example ERP protection or WMM "
"settings) have changed."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:51: include/net/mac80211.h:3381
msgid ""
"Beacon filter support is advertised with the ``IEEE80211_VIF_BEACON_FILTER`` "
"interface capability. The driver needs to enable beacon filter support "
"whenever power save is enabled, that is ``IEEE80211_CONF_PS`` is set. When "
"power save is enabled, the stack will not check for beacon loss and the "
"driver needs to notify about loss of beacons with ieee80211_beacon_loss()."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:51: include/net/mac80211.h:3387
msgid ""
"The time (or number of beacons missed) until the firmware notifies the "
"driver of a beacon loss event (which in turn causes the driver to call "
"ieee80211_beacon_loss()) should be configurable and will be controlled by "
"mac80211 and the roaming algorithm in the future."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:51: include/net/mac80211.h:3392
msgid ""
"Since there may be constantly changing information elements that nothing in "
"the software stack cares about, we will, in the future, have mac80211 tell "
"the driver which information elements are interesting in the sense that we "
"want to see changes in them. This will include"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:51: include/net/mac80211.h:3397
msgid "a list of information element IDs"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:51: include/net/mac80211.h:3398
msgid "a list of OUIs for the vendor information element"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:51: include/net/mac80211.h:3400
msgid ""
"Ideally, the hardware would filter out any beacons without changes in the "
"requested elements, but if it cannot support that it may, at the expense of "
"some efficiency, filter out only a subset. For example, if the device "
"doesn't support checking for OUIs it should pass up all changes in all "
"vendor information elements."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:51: include/net/mac80211.h:3406
msgid ""
"Note that change, for the sake of simplification, also includes information "
"elements appearing or disappearing from the beacon."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:51: include/net/mac80211.h:3409
msgid ""
"Some hardware supports an \"ignore list\" instead. Just make sure nothing "
"that was requested is on the ignore list, and include commonly changing "
"information element IDs in the ignore list, for example 11 (BSS load) and "
"the various vendor-assigned IEs with unknown contents (128, 129, 133-136, "
"149, 150, 155, 156, 173, 176, 178, 179, 219); for forward compatibility it "
"could also include some currently unused IDs."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:51: include/net/mac80211.h:3417
msgid ""
"In addition to these capabilities, hardware should support notifying the "
"host of changes in the beacon RSSI. This is relevant to implement roaming "
"when no traffic is flowing (when traffic is flowing we see the RSSI of the "
"received data packets). This can consist of notifying the host when the RSSI "
"changes significantly or when it drops below or rises above configurable "
"thresholds. In the future these thresholds will also be configured by "
"mac80211 (which gets them from userspace) to implement them as the roaming "
"algorithm requires."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:51: include/net/mac80211.h:3426
msgid ""
"If the hardware cannot implement this, the driver should ask it to "
"periodically pass beacon frames to the host so that software can do the "
"signal strength threshold checking."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:54: include/net/mac80211.h:6725
msgid "inform hardware does not receive beacons"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:6426
#: ../../../driver-api/80211/mac80211-advanced:156: include/net/mac80211.h:6861
#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:6387
#: include/net/mac80211.h:6413 ../../../driver-api/80211/mac80211-advanced:54:
#: include/net/mac80211.h:6731 ../../../driver-api/80211/mac80211-advanced:81:
#: include/net/mac80211.h:5656 include/net/mac80211.h:5904
msgid "``struct ieee80211_vif *vif``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:156: include/net/mac80211.h:6856
#: ../../../driver-api/80211/mac80211-advanced:54: include/net/mac80211.h:6727
#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:5655
#: include/net/mac80211.h:5903
msgid ""
":c:type:`struct ieee80211_vif <ieee80211_vif>` pointer from the "
"add_interface callback."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:54: include/net/mac80211.h:6728
msgid ""
"When beacon filtering is enabled with ``IEEE80211_VIF_BEACON_FILTER`` and "
"``IEEE80211_CONF_PS`` is set, the driver needs to inform whenever the "
"hardware is not receiving beacons with this function."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced.rst:58
msgid "Multiple queues and QoS support"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced.rst:60
#: ../../../driver-api/80211/mac80211-advanced.rst:68
#: ../../../driver-api/80211/mac80211-advanced.rst:95
#: ../../../driver-api/80211/mac80211-advanced.rst:123
#: ../../../driver-api/80211/mac80211-advanced.rst:161
#: ../../../driver-api/80211/mac80211-advanced.rst:169
#: ../../../driver-api/80211/mac80211-advanced.rst:180
#: ../../../driver-api/80211/mac80211-advanced.rst:196
#: ../../../driver-api/80211/mac80211-advanced.rst:201
#: ../../../driver-api/80211/mac80211-advanced.rst:206
#: ../../../driver-api/80211/mac80211-advanced.rst:237
msgid "TBD"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:62: include/net/mac80211.h:176
msgid "transmit queue configuration"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:62: include/net/mac80211.h:185
msgid "``txop``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:62: include/net/mac80211.h:186
msgid "maximum burst time in units of 32 usecs, 0 meaning disabled"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:62: include/net/mac80211.h:182
msgid "``cw_min``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:62: include/net/mac80211.h:183
msgid ""
"minimum contention window [a value of the form 2^n-1 in the range 1..32767]"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:62: include/net/mac80211.h:184
msgid "``cw_max``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:62: include/net/mac80211.h:185
msgid "maximum contention window [like **cw_min**]"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:62: include/net/mac80211.h:181
msgid "``aifs``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:62: include/net/mac80211.h:182
msgid "arbitration interframe space [0..255]"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:62: include/net/mac80211.h:186
msgid "``acm``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:62: include/net/mac80211.h:187
msgid "is mandatory admission control required for the access category"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:62: include/net/mac80211.h:187
msgid "``uapsd``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:62: include/net/mac80211.h:188
msgid "is U-APSD mode enabled for the queue"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:62: include/net/mac80211.h:188
msgid "``mu_edca``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:62: include/net/mac80211.h:189
msgid "is the MU EDCA configured"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:62: include/net/mac80211.h:189
msgid "``mu_edca_param_rec``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:62: include/net/mac80211.h:190
msgid "MU EDCA Parameter Record for HE"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:62: include/net/mac80211.h:177
msgid ""
"The information provided in this structure is required for QoS transmit "
"queue configuration. Cf. IEEE 802.11 7.3.2.29."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced.rst:66
msgid "Access point mode support"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced.rst:70
msgid "Some parts of the if_conf should be discussed here instead"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced.rst:72
msgid ""
"Insert notes about VLAN interfaces with hw crypto here or in the hw crypto "
"chapter."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced.rst:76
msgid "support for powersaving clients"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:78: include/net/mac80211.h:3499
msgid ""
"In order to implement AP and P2P GO modes, mac80211 has support for client "
"powersaving, both \"legacy\" PS (PS-Poll/null data) and uAPSD. There "
"currently is no support for sAPSD."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:78: include/net/mac80211.h:3503
msgid ""
"There is one assumption that mac80211 makes, namely that a client will not "
"poll with PS-Poll and trigger with uAPSD at the same time. Both are "
"supported, and both can be used by the same client, but they can't be used "
"concurrently by the same client. This simplifies the driver code."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:78: include/net/mac80211.h:3509
msgid ""
"The first thing to keep in mind is that there is a flag for complete driver "
"implementation: ``IEEE80211_HW_AP_LINK_PS``. If this flag is set, mac80211 "
"expects the driver to handle most of the state machine for powersaving "
"clients and will ignore the PM bit in incoming frames. Drivers then use "
"ieee80211_sta_ps_transition() to inform mac80211 of stations' powersave "
"transitions. In this mode, mac80211 also doesn't handle PS-Poll/uAPSD."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:78: include/net/mac80211.h:3517
msgid ""
"In the mode without ``IEEE80211_HW_AP_LINK_PS``, mac80211 will check the PM "
"bit in incoming frames for client powersave transitions. When a station goes "
"to sleep, we will stop transmitting to it. There is, however, a race "
"condition: a station might go to sleep while there is data buffered on "
"hardware queues. If the device has support for this it will reject frames, "
"and the driver should give the frames back to mac80211 with the "
"``IEEE80211_TX_STAT_TX_FILTERED`` flag set which will cause mac80211 to "
"retry the frame when the station wakes up. The driver is also notified of "
"powersave transitions by calling its **sta_notify** callback."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:78: include/net/mac80211.h:3528
msgid ""
"When the station is asleep, it has three choices: it can wake up, it can PS-"
"Poll, or it can possibly start a uAPSD service period. Waking up is "
"implemented by simply transmitting all buffered (and filtered) frames to the "
"station. This is the easiest case. When the station sends a PS-Poll or a "
"uAPSD trigger frame, mac80211 will inform the driver of this with the "
"**allow_buffered_frames** callback; this callback is optional. mac80211 will "
"then transmit the frames as usual and set the "
"``IEEE80211_TX_CTL_NO_PS_BUFFER`` on each frame. The last frame in the "
"service period (or the only response to a PS-Poll) also has "
"``IEEE80211_TX_STATUS_EOSP`` set to indicate that it ends the service "
"period; as this frame must have TX status report it also sets "
"``IEEE80211_TX_CTL_REQ_TX_STATUS``. When TX status is reported for this "
"frame, the service period is marked has having ended and a new one can be "
"started by the peer."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:78: include/net/mac80211.h:3543
msgid ""
"Additionally, non-bufferable MMPDUs can also be transmitted by mac80211 with "
"the ``IEEE80211_TX_CTL_NO_PS_BUFFER`` set in them."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:78: include/net/mac80211.h:3546
msgid ""
"Another race condition can happen on some devices like iwlwifi when there "
"are frames queued for the station and it wakes up or polls; the frames that "
"are already queued could end up being transmitted first instead, causing "
"reordering and/or wrong processing of the EOSP. The cause is that allowing "
"frames to be transmitted to a certain station is out-of-band communication "
"to the device. To allow this problem to be solved, the driver can call "
"ieee80211_sta_block_awake() if frames are buffered when it is notified that "
"the station went to sleep. When all these frames have been filtered (see "
"above), it must call the function again to indicate that the station is no "
"longer blocked."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:78: include/net/mac80211.h:3558
msgid ""
"If the driver buffers frames in the driver for aggregation in any way, it "
"must use the ieee80211_sta_set_buffered() call when it is notified of the "
"station going to sleep to inform mac80211 of any TIDs that have frames "
"buffered. Note that when a station wakes up this information is reset (hence "
"the requirement to call it when informed of the station going to sleep). "
"Then, when a service period starts for any reason, "
"**release_buffered_frames** is called with the number of frames to be "
"released and which TIDs they are to come from. In this case, the driver is "
"responsible for setting the EOSP (for uAPSD) and MORE_DATA bits in the "
"released frames. To help the **more_data** parameter is passed to tell the "
"driver if there is more data on other TIDs -- the TIDs to release frames "
"from are ignored since mac80211 doesn't know how many frames the buffers for "
"those TIDs contain."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:78: include/net/mac80211.h:3573
msgid ""
"If the driver also implement GO mode, where absence periods may shorten "
"service periods (or abort PS-Poll responses), it must filter those response "
"frames except in the case of frames that are buffered in the driver -- those "
"must remain buffered to avoid reordering. Because it is possible that no "
"frames are released in this case, the driver must call ieee80211_sta_eosp() "
"to indicate to mac80211 that the service period ended anyway."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:78: include/net/mac80211.h:3581
msgid ""
"Finally, if frames from multiple TIDs are released from mac80211 but the "
"driver might reorder them, it must clear & set the flags appropriately (only "
"the last frame may have ``IEEE80211_TX_STATUS_EOSP``) and also take care of "
"the EOSP and MORE_DATA bits in the frame. The driver may also use "
"ieee80211_sta_eosp() in this case."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:78: include/net/mac80211.h:3587
msgid ""
"Note that if the driver ever buffers frames other than QoS-data frames, it "
"must take care to never send a non-QoS-data frame as the last frame in a "
"service period, adding a QoS-nulldata frame after a non-QoS-data frame if "
"needed."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:3770
msgid "frame release reason"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:3776
msgid "``IEEE80211_FRAME_RELEASE_PSPOLL``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:3777
msgid "frame released for PS-Poll"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:3779
msgid "``IEEE80211_FRAME_RELEASE_UAPSD``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:3780
msgid "frame(s) released due to frame received on trigger-enabled AC"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:5254
msgid "PS transition for connected sta"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:6372
#: include/net/mac80211.h:6400 ../../../driver-api/80211/mac80211-advanced:81:
#: include/net/mac80211.h:5260 include/net/mac80211.h:5279
#: include/net/mac80211.h:5341
msgid "``struct ieee80211_sta *sta``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:5265
#: include/net/mac80211.h:5280
msgid "currently connected sta"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:5267
#: include/net/mac80211.h:5282
msgid "``bool start``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:5266
#: include/net/mac80211.h:5281
msgid "start or stop PS"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:5255
msgid ""
"When operating in AP mode with the ``IEEE80211_HW_AP_LINK_PS`` flag set, use "
"this function to inform mac80211 about a connected station entering/leaving "
"PS mode."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:5259
msgid ""
"This function may not be called in IRQ context or with softirqs enabled."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:5261
msgid ""
"Calls to this function for a single hardware must be synchronized against "
"each other."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:5268
msgid "0 on success. -EINVAL when the requested PS mode is already set."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:5273
msgid "PS transition for connected sta (in process context)"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:5274
msgid ""
"Like ieee80211_sta_ps_transition() but can be called in process context "
"(internally disables bottom halves). Concurrent call restriction still "
"applies."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:5283
msgid "Like ieee80211_sta_ps_transition()."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:5335
msgid "inform mac80211 about driver-buffered frames"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:5336
msgid ""
":c:type:`struct ieee80211_sta <ieee80211_sta>` pointer for the sleeping "
"station"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:5338
msgid "``u8 tid``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:5337
msgid "the TID that has buffered frames"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:5339
msgid "``bool buffered``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:5338
msgid "indicates whether or not frames are buffered for this TID"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:5339
msgid ""
"If a driver buffers frames for a powersave station instead of passing them "
"back to mac80211 for retransmission, the station may still need to be told "
"that there are buffered frames via the TIM bit."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:5343
msgid ""
"This function informs mac80211 whether or not there are frames that are "
"buffered in the driver for a given TID; mac80211 can then use this data to "
"set the TIM bit (NOTE: This may call back into the driver's set_tim call! "
"Beware of the locking!)"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:5348
msgid ""
"If all frames are released to the station (due to PS-poll or uAPSD) then the "
"driver needs to inform mac80211 that there no longer are frames buffered. "
"However, when the station wakes up mac80211 assumes that all buffered frames "
"will be transmitted and clears this data, drivers need to make sure they "
"inform mac80211 about all buffered frames on the sleep transition "
"(sta_notify() with ``STA_NOTIFY_SLEEP``)."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:5355
msgid ""
"Note that technically mac80211 only needs to know this per AC, not per TID, "
"but since driver buffering will inevitably happen per TID (since it is "
"related to aggregation) it is easier to make mac80211 map the TID to the AC "
"as required instead of keeping track in all drivers that use this API."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:5653
msgid "beacon generation function"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:5654
msgid "pointer obtained from ieee80211_alloc_hw()."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:156: include/net/mac80211.h:6858
#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:5657
msgid "``unsigned int link_id``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:5656
msgid ""
"the link id to which the beacon belongs (or 0 for an AP STA that is not "
"associated with AP MLD)."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:5658
#: include/net/mac80211.h:5661
msgid "See ieee80211_beacon_get_tim()."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:5901
msgid "accessing buffered broadcast and multicast frames"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:5902
msgid "pointer as obtained from ieee80211_alloc_hw()."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:5904
msgid ""
"Function for accessing buffered broadcast and multicast frames. If hardware/"
"firmware does not implement buffering of broadcast/multicast frames when "
"power saving is used, 802.11 code buffers them in the host memory. The low-"
"level driver uses this function to fetch next buffered frame. In most cases, "
"this is used when generating beacon frame."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:5911
msgid ""
"A pointer to the next buffered skb or NULL if no more buffered frames are "
"available."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:5914
msgid ""
"buffered frames are returned only after DTIM beacon frame was generated with "
"ieee80211_beacon_get() and the low-level driver must thus call "
"ieee80211_beacon_get() first. ieee80211_get_buffered_bc() returns NULL if "
"the previous generated beacon was not DTIM, so the low-level driver does not "
"need to check for DTIM beacons separately and should be able to use common "
"code for all beacons."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:6478
msgid "block station from waking up"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:6479
msgid "the hardware"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:6481
#: include/net/mac80211.h:6516
msgid "``struct ieee80211_sta *pubsta``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:6480
#: include/net/mac80211.h:6511
msgid "the station"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:6482
msgid "``bool block``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:6481
msgid "whether to block or unblock"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:6482
msgid ""
"Some devices require that all frames that are on the queues for a specific "
"station that went to sleep are flushed before a poll response or frames "
"after the station woke up can be delivered to that it. Note that such frames "
"must be rejected by the driver as filtered, with the appropriate status flag."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:6488
msgid "This function allows implementing this mode in a race-free manner."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:6491
msgid ""
"To do this, a driver must keep track of the number of frames still enqueued "
"for a specific station. If this number is not zero when the station goes to "
"sleep, the driver must call this function to force mac80211 to consider the "
"station to be asleep regardless of the station's actual state. Once the "
"number of outstanding frames reaches zero, the driver must call this "
"function again to unblock the station. That will cause mac80211 to be able "
"to send ps-poll responses, and if the station queried in the meantime then "
"frames will also be sent out as a result of this. Additionally, the driver "
"will be notified that the station woke up some time after it is unblocked, "
"regardless of whether the station actually woke up while blocked or not."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:6510
msgid "notify mac80211 about end of SP"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:6512
msgid ""
"When a device transmits frames in a way that it can't tell mac80211 in the "
"TX status about the EOSP, it must clear the ``IEEE80211_TX_STATUS_EOSP`` bit "
"and call this function instead. This applies for PS-Poll as well as uAPSD."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:6517
msgid ""
"Note that just like with _tx_status() and _rx() drivers must not mix calls "
"to irqsafe/non-irqsafe versions, this function must not be mixed with those "
"either. Use the all irqsafe, or all non-irqsafe, don't mix!"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:6522
msgid "NB: the _irqsafe version of this function doesn't exist, no"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:81: include/net/mac80211.h:6523
msgid ""
"driver needs it right now. Don't call this function if you'd need the "
"_irqsafe version, look at the git history and restore the _irqsafe version!"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced.rst:93
msgid "Supporting multiple virtual interfaces"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced.rst:97
msgid "Note: WDS with identical MAC address should almost always be OK"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced.rst:99
msgid ""
"Insert notes about having multiple virtual interfaces with different MAC "
"addresses here, note which configurations are supported by mac80211, add "
"notes about supporting hw crypto with it."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:103: include/net/mac80211.h:6227
#: include/net/mac80211.h:6253
msgid "iterate active interfaces"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:103: include/net/mac80211.h:6236
#: include/net/mac80211.h:6261
msgid "the hardware struct of which the interfaces should be iterated over"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:103: include/net/mac80211.h:6238
#: include/net/mac80211.h:6263
msgid "``u32 iter_flags``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:103: include/net/mac80211.h:6237
#: include/net/mac80211.h:6262
msgid ""
"iteration flags, see :c:type:`enum ieee80211_interface_iteration_flags "
"<ieee80211_interface_iteration_flags>`"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:103: include/net/mac80211.h:6239
#: include/net/mac80211.h:6264
msgid "``void (*iterator)(void *data, u8 *mac, struct ieee80211_vif *vif)``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:103: include/net/mac80211.h:6238
msgid "the iterator function to call"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:103: include/net/mac80211.h:6240
#: include/net/mac80211.h:6265
msgid "``void *data``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:103: include/net/mac80211.h:6239
#: include/net/mac80211.h:6264
msgid "first argument of the iterator function"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:103: include/net/mac80211.h:6228
msgid ""
"This function iterates over the interfaces associated with a given hardware "
"that are currently active and calls the callback for them. This function "
"allows the iterator function to sleep, when the iterator function is atomic "
"**ieee80211_iterate_active_interfaces_atomic** can be used. Does not iterate "
"over a new interface during add_interface()."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:103: include/net/mac80211.h:6263
msgid "the iterator function to call, cannot sleep"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:103: include/net/mac80211.h:6254
msgid ""
"This function iterates over the interfaces associated with a given hardware "
"that are currently active and calls the callback for them. This function "
"requires the iterator callback function to be atomic, if that is not "
"desired, use **ieee80211_iterate_active_interfaces** instead. Does not "
"iterate over a new interface during add_interface()."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced.rst:109
msgid "Station handling"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced.rst:111
msgid "TODO"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2468
msgid "station table entry"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2479
#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:632
msgid "``addr``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2480
msgid "MAC address"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2480
msgid "``aid``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2481
msgid "AID we assigned to the station if we're an AP"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2481
msgid "``max_rx_aggregation_subframes``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2482
msgid ""
"maximal amount of frames in a single AMPDU that this station is allowed to "
"transmit to us. Can be modified by driver."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2484
msgid "``wme``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2485
msgid ""
"indicates whether the STA supports QoS/WME (if local devices does, otherwise "
"always false)"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2488
msgid "``uapsd_queues``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2489
msgid ""
"bitmap of queues configured for uapsd. Only valid if wme is supported. The "
"bits order is like in IEEE80211_WMM_IE_STA_QOSINFO_AC_*."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2491
msgid "``max_sp``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2492
msgid "max Service Period. Only valid if wme is supported."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2492
msgid "``rates``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2493
msgid "rate control selection table"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2493
msgid "``tdls``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2494
msgid "indicates whether the STA is a TDLS peer"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2494
msgid "``tdls_initiator``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2495
msgid ""
"indicates the STA is an initiator of the TDLS link. Only valid if the STA is "
"a TDLS peer in the first place."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2496
msgid "``mfp``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2497
msgid "indicates whether the STA uses management frame protection or not."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2497
msgid "``mlo``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2498
msgid "indicates whether the STA is MLO station."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2520
msgid "``spp_amsdu``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2521
msgid "indicates whether the STA uses SPP A-MSDU or not."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2498
msgid "``max_amsdu_subframes``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2499
msgid ""
"indicates the maximal number of MSDUs in a single A-MSDU. Taken from the "
"Extended Capabilities element. 0 means unlimited."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2501
msgid "``eml_cap``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2502
msgid "EML capabilities of this MLO station"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2502
#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:686
msgid "``cur``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2503
msgid ""
"currently valid data as aggregated from the active links For non MLO STA it "
"will point to the deflink data. For MLO STA "
"ieee80211_sta_recalc_aggregates() must be called to update it."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2505
msgid "``support_p2p_ps``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2506
msgid "indicates whether the STA supports P2P PS mechanism or not."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2506
msgid "``txq``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2507
msgid ""
"per-TID data TX queues; note that the last entry (``IEEE80211_NUM_TIDS``) is "
"used for non-data frames"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2519
msgid "``valid_links``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2520
msgid "bitmap of valid links, or 0 for non-MLO"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2508
#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:688
msgid "``deflink``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2509
msgid ""
"This holds the default link STA information, for non MLO STA all link "
"specific STA information is accessed through **deflink** or through link[0] "
"which points to address of **deflink**. For MLO Link STA the first added "
"link STA will point to deflink."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2512
#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:692
msgid "``link``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2513
#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:693
msgid ""
"reference to Link Sta entries. For Non MLO STA, except 1st link, i.e link[0] "
"all links would be assigned to NULL by default and would access link "
"information via **deflink** or link[0]. For MLO STA, first link STA being "
"added will point its link pointer to **deflink** address and remaining would "
"be allocated and the address would be assigned to link[link_id] where "
"link_id is the id assigned by the AP."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2486
msgid "``drv_priv``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2487
msgid ""
"data area for driver use, will always be aligned to sizeof(void \\*), size "
"is determined in hw information."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2469
msgid ""
"A station table entry represents a station we are possibly communicating "
"with. Since stations are RCU-managed in mac80211, any ieee80211_sta pointer "
"you get access to must either be protected by rcu_read_lock() explicitly or "
"implicitly, or you must take good care to not use such a pointer after a "
"call to your sta_remove callback that removed it. This also represents the "
"MLD STA in case of MLO association and holds pointers to various link STA's"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2576
msgid "sta notify command"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2582
msgid "``STA_NOTIFY_SLEEP``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2583
msgid "a station is now sleeping"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2585
msgid "``STA_NOTIFY_AWAKE``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2586
msgid "a sleeping station woke up"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:2577
msgid ""
"Used with the sta_notify() callback in :c:type:`struct ieee80211_ops "
"<ieee80211_ops>`, this indicates if an associated station made a power state "
"transition."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:6420
msgid "find a station"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:6422
msgid "virtual interface to look for station on"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:6424
#: include/net/mac80211.h:6438
msgid "``const u8 *addr``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:6423
msgid "station's address"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:6425
#: include/net/mac80211.h:6440
msgid "The station, if found. ``NULL`` otherwise."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:6427
#: include/net/mac80211.h:6442
msgid ""
"This function must be called under RCU lock and the resulting pointer is "
"only valid under RCU lock as well."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:6434
msgid "find a station on hardware"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:6436
msgid "pointer as obtained from ieee80211_alloc_hw()"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:6437
msgid "remote station's address"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:6439
msgid "``const u8 *localaddr``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:6438
msgid "local address (vif->sdata->vif.addr). Use NULL for 'any'."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:6445
msgid "**NOTE**"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:6445
msgid "You may pass NULL for localaddr, but then you will just get"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:6446
msgid ""
"the first STA that matches the remote address 'addr'. We can have multiple "
"STA associated with multiple logical stations (e.g. consider a station "
"connecting to another BSSID on the same AP hardware without disconnecting "
"first). In this case, the result of this method with localaddr NULL is not "
"reliable."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:113: include/net/mac80211.h:6453
msgid "DO NOT USE THIS FUNCTION with localaddr NULL if at all possible."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced.rst:121
msgid "Hardware scan offload"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:125: include/net/mac80211.h:6152
msgid "completed hardware scan"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:125: include/net/mac80211.h:6159
msgid "the hardware that finished the scan"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:125: include/net/mac80211.h:6161
msgid "``struct cfg80211_scan_info *info``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:125: include/net/mac80211.h:6160
msgid "information about the completed scan"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:125: include/net/mac80211.h:6153
msgid ""
"When hardware scan offload is used (i.e. the hw_scan() callback is assigned) "
"this function needs to be called by the driver to notify mac80211 that the "
"scan finished. This function can be called from any context, including "
"hardirq context."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced.rst:129
msgid "Aggregation"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced.rst:132
msgid "TX A-MPDU aggregation"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:134: net/mac80211/agg-tx.c:24
msgid ""
"Aggregation on the TX side requires setting the hardware flag "
"``IEEE80211_HW_AMPDU_AGGREGATION``. The driver will then be handed packets "
"with a flag indicating A-MPDU aggregation. The driver or device is "
"responsible for actually aggregating the frames, as well as deciding how "
"many and which to aggregate."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:134: net/mac80211/agg-tx.c:30
msgid ""
"When TX aggregation is started by some subsystem (usually the rate control "
"algorithm would be appropriate) by calling the "
"ieee80211_start_tx_ba_session() function, the driver will be notified via "
"its **ampdu_action** function, with the ``IEEE80211_AMPDU_TX_START`` action."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:134: net/mac80211/agg-tx.c:36
msgid ""
"In response to that, the driver is later required to call the "
"ieee80211_start_tx_ba_cb_irqsafe() function, which will really start the "
"aggregation session after the peer has also responded. If the peer responds "
"negatively, the session will be stopped again right away. Note that it is "
"possible for the aggregation session to be stopped before the driver has "
"indicated that it is done setting it up, in which case it must not indicate "
"the setup completion."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:134: net/mac80211/agg-tx.c:45
msgid ""
"Also note that, since we also need to wait for a response from the peer, the "
"driver is notified of the completion of the handshake by the "
"``IEEE80211_AMPDU_TX_OPERATIONAL`` action to the **ampdu_action** callback."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:134: net/mac80211/agg-tx.c:50
msgid ""
"Similarly, when the aggregation session is stopped by the peer or something "
"calling ieee80211_stop_tx_ba_session(), the driver's **ampdu_action** "
"function will be called with the action ``IEEE80211_AMPDU_TX_STOP``. In this "
"case, the call must not fail, and the driver must later call "
"ieee80211_stop_tx_ba_cb_irqsafe(). Note that the sta can get destroyed "
"before the BA tear down is complete."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced.rst:140
msgid "RX A-MPDU aggregation"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:142: net/mac80211/agg-rx.c:16
msgid ""
"Aggregation on the RX side requires only implementing the **ampdu_action** "
"callback that is invoked to start/stop any block-ack sessions for RX "
"aggregation."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:142: net/mac80211/agg-rx.c:20
msgid ""
"When RX aggregation is started by the peer, the driver is notified via "
"**ampdu_action** function, with the ``IEEE80211_AMPDU_RX_START`` action, and "
"may reject the request in which case a negative response is sent to the "
"peer, if it accepts it a positive response is sent."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:142: net/mac80211/agg-rx.c:26
msgid ""
"While the session is active, the device/driver are required to de-aggregate "
"frames and pass them up one by one to mac80211, which will handle the "
"reorder buffer."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:142: net/mac80211/agg-rx.c:30
msgid ""
"When the aggregation session is stopped again by the peer or ourselves, the "
"driver's **ampdu_action** function will be called with the action "
"``IEEE80211_AMPDU_RX_STOP``. In this case, the call must not fail."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:147: include/net/mac80211.h:3698
msgid "A-MPDU actions"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:147: include/net/mac80211.h:3704
msgid "``IEEE80211_AMPDU_RX_START``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:147: include/net/mac80211.h:3705
msgid "start RX aggregation"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:147: include/net/mac80211.h:3707
msgid "``IEEE80211_AMPDU_RX_STOP``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:147: include/net/mac80211.h:3708
msgid "stop RX aggregation"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:147: include/net/mac80211.h:3710
msgid "``IEEE80211_AMPDU_TX_START``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:147: include/net/mac80211.h:3711
msgid ""
"start TX aggregation, the driver must either call "
"ieee80211_start_tx_ba_cb_irqsafe() or call "
"ieee80211_start_tx_ba_cb_irqsafe() with status "
"``IEEE80211_AMPDU_TX_START_DELAY_ADDBA`` to delay addba after "
"ieee80211_start_tx_ba_cb_irqsafe is called, or just return the special "
"status ``IEEE80211_AMPDU_TX_START_IMMEDIATE``."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:147: include/net/mac80211.h:3718
msgid "``IEEE80211_AMPDU_TX_STOP_CONT``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:147: include/net/mac80211.h:3719
msgid ""
"stop TX aggregation but continue transmitting queued packets, now "
"unaggregated. After all packets are transmitted the driver has to call "
"ieee80211_stop_tx_ba_cb_irqsafe()."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:147: include/net/mac80211.h:3723
msgid "``IEEE80211_AMPDU_TX_STOP_FLUSH``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:147: include/net/mac80211.h:3724
msgid ""
"stop TX aggregation and flush all packets, called when the station is "
"removed. There's no need or reason to call ieee80211_stop_tx_ba_cb_irqsafe() "
"in this case as mac80211 assumes the session is gone and removes the station."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:147: include/net/mac80211.h:3729
msgid "``IEEE80211_AMPDU_TX_STOP_FLUSH_CONT``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:147: include/net/mac80211.h:3730
msgid ""
"called when TX aggregation is stopped but the driver hasn't called "
"ieee80211_stop_tx_ba_cb_irqsafe() yet and now the connection is dropped and "
"the station will be removed. Drivers should clean up and drop remaining "
"packets when this is called."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:147: include/net/mac80211.h:3735
msgid "``IEEE80211_AMPDU_TX_OPERATIONAL``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:147: include/net/mac80211.h:3736
msgid "TX aggregation has become operational"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:147: include/net/mac80211.h:3699
msgid ""
"These flags are used with the ampdu_action() callback in :c:type:`struct "
"ieee80211_ops <ieee80211_ops>` to indicate which action is needed."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:147: include/net/mac80211.h:3702
msgid ""
"Note that drivers MUST be able to deal with a TX aggregation session being "
"stopped even before they OK'ed starting it by calling "
"ieee80211_start_tx_ba_cb_irqsafe, because the peer might receive the addBA "
"frame and send a delBA right away!"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced.rst:151
msgid "Spatial Multiplexing Powersave (SMPS)"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:153: include/net/mac80211.h:3434
msgid ""
"SMPS (Spatial multiplexing power save) is a mechanism to conserve power in "
"an 802.11n implementation. For details on the mechanism and rationale, "
"please refer to 802.11 (as amended by 802.11n-2009) \"11.2.3 SM power save\"."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:153: include/net/mac80211.h:3439
msgid ""
"The mac80211 implementation is capable of sending action frames to update "
"the AP about the station's SMPS mode, and will instruct the driver to enter "
"the specific mode. It will also announce the requested SMPS mode during the "
"association handshake. Hardware support for this feature is required, and "
"can be indicated by hardware flags."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:153: include/net/mac80211.h:3446
msgid ""
"The default mode will be \"automatic\", which nl80211/cfg80211 defines to be "
"dynamic SMPS in (regular) powersave, and SMPS turned off otherwise."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:153: include/net/mac80211.h:3450
msgid ""
"To support this feature, the driver must set the appropriate hardware "
"support flags, and handle the SMPS flag to the config() operation. It will "
"then with this mechanism be instructed to enter the requested SMPS mode "
"while associated to an HT AP."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:156: include/net/mac80211.h:1751
msgid "spatial multiplexing power save mode"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:156: include/net/mac80211.h:1757
msgid "``IEEE80211_SMPS_AUTOMATIC``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:156: include/net/mac80211.h:1758
msgid "automatic"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:156: include/net/mac80211.h:1760
msgid "``IEEE80211_SMPS_OFF``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:156: include/net/mac80211.h:1761
msgid "off"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:156: include/net/mac80211.h:1763
msgid "``IEEE80211_SMPS_STATIC``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:156: include/net/mac80211.h:1764
msgid "static"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:156: include/net/mac80211.h:1766
msgid "``IEEE80211_SMPS_DYNAMIC``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:156: include/net/mac80211.h:1767
msgid "dynamic"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:156: include/net/mac80211.h:1769
msgid "``IEEE80211_SMPS_NUM_MODES``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:156: include/net/mac80211.h:1770
msgid "internal, don't use"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:156: include/net/mac80211.h:6855
msgid "request SM PS transition"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:156: include/net/mac80211.h:6857
msgid "link ID for MLO, or 0"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:156: include/net/mac80211.h:6859
msgid "``enum ieee80211_smps_mode smps_mode``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:156: include/net/mac80211.h:6858
msgid "new SM PS mode"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:156: include/net/mac80211.h:6859
msgid ""
"This allows the driver to request an SM PS transition in managed mode. This "
"is useful when the driver has more information than the stack about possible "
"interference, for example by bluetooth."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced.rst:163
msgid ""
"This part of the book describes the rate control algorithm interface and how "
"it relates to mac80211 and drivers."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced.rst:167
msgid "Rate Control API"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:3781
msgid "flags to indicate what changed"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:3787
msgid "``IEEE80211_RC_BW_CHANGED``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:3788
msgid ""
"The bandwidth that can be used to transmit to this station changed. The "
"actual bandwidth is in the station information -- for HT20/40 the "
"IEEE80211_HT_CAP_SUP_WIDTH_20_40 flag changes, for HT and VHT the bandwidth "
"field changes."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:3793
msgid "``IEEE80211_RC_SMPS_CHANGED``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:3794
msgid "The SMPS state of the station changed."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:3796
msgid "``IEEE80211_RC_SUPP_RATES_CHANGED``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:3797
msgid ""
"The supported rate set of this peer changed (in IBSS mode) due to "
"discovering more information about the peer."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:3801
msgid "``IEEE80211_RC_NSS_CHANGED``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:3802
msgid "N_SS (number of spatial streams) was changed by the peer"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:6366
msgid "Start a tx Block Ack session."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:6367
msgid "the station for which to start a BA session"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:6369
#: include/net/mac80211.h:6385 include/net/mac80211.h:6397
#: include/net/mac80211.h:6411
msgid "``u16 tid``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:6368
#: include/net/mac80211.h:6384
msgid "the TID to BA on."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:6370
msgid "``u16 timeout``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:6369
msgid "session timeout value (in TUs)"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:6371
msgid "success if addBA request was sent, failure otherwise"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:6372
msgid ""
"Although mac80211/low level driver/user space application can estimate the "
"need to start aggregation on a certain RA/TID, the session level will be "
"managed by the mac80211."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:6381
msgid "low level driver ready to aggregate."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:6382
#: include/net/mac80211.h:6408
msgid ""
":c:type:`struct ieee80211_vif <ieee80211_vif>` pointer from the "
"add_interface callback"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:6384
#: include/net/mac80211.h:6410
msgid "``const u8 *ra``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:6383
#: include/net/mac80211.h:6409
msgid "receiver address of the BA session recipient."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:6385
msgid ""
"This function must be called by low level driver once it has finished with "
"preparations for the BA session. It can be called from any context."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:6394
msgid "Stop a Block Ack session."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:6395
msgid "the station whose BA session to stop"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:6396
msgid "the TID to stop BA."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:6398
msgid "negative error if the TID is invalid, or no aggregation active"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:6399
msgid ""
"Although mac80211/low level driver/user space application can estimate the "
"need to stop aggregation on a certain RA/TID, the session level will be "
"managed by the mac80211."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:6407
msgid "low level driver ready to stop aggregate."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:6410
msgid "the desired TID to BA on."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:6411
msgid ""
"This function must be called by low level driver once it has finished with "
"preparations for the BA session tear down. It can be called from any context."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:6999
msgid "rate control information for/from RC algo"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:7001
msgid "``hw``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:7002
msgid "The hardware the algorithm is invoked for."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:7002
msgid "``sband``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:7003
msgid "The band this frame is being transmitted on."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:7003
msgid "``bss_conf``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:7004
msgid "the current BSS configuration"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:7004
msgid "``skb``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:7005
msgid ""
"the skb that will be transmitted, the control information in it needs to be "
"filled in"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:7006
msgid "``reported_rate``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:7007
msgid ""
"The rate control algorithm can fill this in to indicate which rate should be "
"reported to userspace as the current rate and used for rate calculations in "
"the mesh network."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:7009
msgid "``rts``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:7010
msgid ""
"whether RTS will be used for this frame because it is longer than the RTS "
"threshold"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:7011
msgid "``short_preamble``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:7012
msgid ""
"whether mac80211 will request short-preamble transmission if the selected "
"rate supports it"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:7013
msgid "``rate_idx_mask``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:7014
msgid "user-requested (legacy) rate mask"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:7014
msgid "``rate_idx_mcs_mask``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:7015
msgid "user-requested MCS rate mask (NULL if not in use)"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:7015
msgid "``bss``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:171: include/net/mac80211.h:7016
msgid "whether this frame is sent out in AP or IBSS mode"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced.rst:182
msgid "This part of the book describes mac80211 internals."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced.rst:185
msgid "Key handling"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced.rst:188
msgid "Key handling basics"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:190: net/mac80211/key.c:32
msgid ""
"Key handling in mac80211 is done based on per-interface (sub_if_data) keys "
"and per-station keys. Since each station belongs to an interface, each "
"station key also belongs to that interface."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:190: net/mac80211/key.c:36
msgid ""
"Hardware acceleration is done on a best-effort basis for algorithms that are "
"implemented in software,  for each key the hardware is asked to enable that "
"key for offloading but if it cannot do that the key is simply kept for "
"software encryption (unless it is for an algorithm that isn't implemented in "
"software). There is currently no way of knowing whether a key is handled in "
"SW or HW except by looking into debugfs."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:190: net/mac80211/key.c:44
msgid ""
"All key management is internally protected by a mutex. Within all other "
"parts of mac80211, key references are, just as STA structure references, "
"protected by RCU. Note, however, that some things are unprotected, namely "
"the key->sta dereferences within the hardware acceleration functions. This "
"means that sta_info_destroy() must remove the key which waits for an RCU "
"grace period."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced.rst:194
msgid "MORE TBD"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced.rst:199
msgid "Receive processing"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced.rst:204
msgid "Transmit processing"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced.rst:209
msgid "Station info handling"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced.rst:212
msgid "Programming information"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:24
msgid "Stations flags"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:30
msgid "``WLAN_STA_AUTH``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:31
msgid "Station is authenticated."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:33
msgid "``WLAN_STA_ASSOC``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:34
msgid "Station is associated."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:36
msgid "``WLAN_STA_PS_STA``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:37
msgid "Station is in power-save mode"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:39
msgid "``WLAN_STA_AUTHORIZED``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:40
msgid ""
"Station is authorized to send/receive traffic. This bit is always checked so "
"needs to be enabled for all stations when virtual port control is not in use."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:44
msgid "``WLAN_STA_SHORT_PREAMBLE``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:45
msgid "Station is capable of receiving short-preamble frames."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:48
msgid "``WLAN_STA_WDS``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:49
msgid "Station is one of our WDS peers."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:51
msgid "``WLAN_STA_CLEAR_PS_FILT``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:52
msgid ""
"Clear PS filter in hardware (using the IEEE80211_TX_CTL_CLEAR_PS_FILT "
"control flag) when the next frame to this station is transmitted."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:56
msgid "``WLAN_STA_MFP``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:57
msgid "Management frame protection is used with this STA."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:59
msgid "``WLAN_STA_BLOCK_BA``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:60
msgid ""
"Used to deny ADDBA requests (both TX and RX) during suspend/resume and "
"station removal."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:63
msgid "``WLAN_STA_PS_DRIVER``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:64
msgid ""
"driver requires keeping this station in power-save mode logically to flush "
"frames that might still be in the queues"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:68
msgid "``WLAN_STA_PSPOLL``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:69
msgid ""
"Station sent PS-poll while driver was keeping station in power-save mode, "
"reply when the driver unblocks."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:72
msgid "``WLAN_STA_TDLS_PEER``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:73
msgid "Station is a TDLS peer."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:75
msgid "``WLAN_STA_TDLS_PEER_AUTH``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:76
msgid ""
"This TDLS peer is authorized to send direct packets. This means the link is "
"enabled."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:79
msgid "``WLAN_STA_TDLS_INITIATOR``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:80
msgid "We are the initiator of the TDLS link with this station."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:83
msgid "``WLAN_STA_TDLS_CHAN_SWITCH``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:84
msgid "This TDLS peer supports TDLS channel-switching"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:86
msgid "``WLAN_STA_TDLS_OFF_CHANNEL``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:87
msgid "The local STA is currently off-channel with this TDLS peer"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:90
msgid "``WLAN_STA_TDLS_WIDER_BW``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:91
msgid "This TDLS peer supports working on a wider bw on the BSS base channel."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:94
msgid "``WLAN_STA_UAPSD``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:95
msgid ""
"Station requested unscheduled SP while driver was keeping station in power-"
"save mode, reply when the driver unblocks the station."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:99
msgid "``WLAN_STA_SP``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:100
msgid ""
"Station is in a service period, so don't try to reply to other uAPSD trigger "
"frames or PS-Poll."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:103
msgid "``WLAN_STA_4ADDR_EVENT``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:104
msgid "4-addr event was already sent for this frame."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:106
msgid "``WLAN_STA_INSERTED``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:107
msgid "This station is inserted into the hash table."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:109
msgid "``WLAN_STA_RATE_CONTROL``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:110
msgid "rate control was initialized for this station."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:112
msgid "``WLAN_STA_TOFFSET_KNOWN``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:113
msgid "toffset calculated for this station is valid."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:115
msgid "``WLAN_STA_MPSP_OWNER``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:116
msgid "local STA is owner of a mesh Peer Service Period."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:118
msgid "``WLAN_STA_MPSP_RECIPIENT``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:119
msgid "local STA is recipient of a MPSP."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:121
msgid "``WLAN_STA_PS_DELIVER``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:122
msgid ""
"station woke up, but we're still blocking TX until pending frames are "
"delivered"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:125
msgid "``WLAN_STA_USES_ENCRYPTION``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:126
msgid ""
"This station was configured for encryption, so drop all packets without a "
"key later."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:129
msgid "``WLAN_STA_DECAP_OFFLOAD``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:130
msgid "This station uses rx decap offload"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:132
msgid "``NUM_WLAN_STA_FLAGS``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:133
msgid "number of defined flags"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:25
msgid ""
"These flags are used with :c:type:`struct sta_info <sta_info>`'s **flags** "
"member, but only indirectly with set_sta_flag() and friends."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:624
msgid "STA information"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:629
msgid "``list``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:630
msgid "global linked list entry"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:630
msgid "``free_list``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:631
msgid "list entry for keeping track of stations to free"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:672
#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:157
#: net/mac80211/sta_info.h:223
msgid "``rcu_head``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:673
msgid "RCU head used for freeing this station struct"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:631
msgid "``hash_node``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:632
msgid "hash node for rhashtable"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:633
msgid ""
"station's MAC address - duplicated from public part to let the hash table "
"work with just a single cacheline"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:634
msgid "``local``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:635
msgid "pointer to the global information"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:635
msgid "``sdata``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:636
msgid "virtual interface this station belongs to"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:636
msgid "``ptk``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:637
msgid "peer keys negotiated with this station, if any"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:637
msgid "``ptk_idx``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:638
msgid "last installed peer key index"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:638
msgid "``rate_ctrl``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:639
msgid "rate control algorithm reference"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:641
msgid "``rate_ctrl_priv``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:642
msgid "rate control private per-STA pointer"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:639
msgid "``rate_ctrl_lock``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:640
msgid ""
"spinlock used to protect rate control data (data inside the algorithm, so "
"serializes calls there)"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:642
msgid "``lock``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:643
msgid ""
"used for locking all fields that require locking, see comments in the header "
"file."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:681
msgid "``fast_tx``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:682
msgid "TX fastpath information"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:682
msgid "``fast_rx``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:683
msgid "RX fastpath information"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:665
msgid "``mesh``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:666
msgid "mesh STA information"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:644
msgid "``drv_deliver_wk``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:645
msgid "used for delivering frames after driver PS unblocking"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:645
msgid "``listen_interval``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:646
msgid "listen interval of this station, when we're acting as AP"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:667
msgid "``dead``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:668
msgid "set to true when sta is unlinked"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:668
#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:227
msgid "``removed``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:669
msgid "set to true when sta is being removed from sta_list"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:669
msgid "``uploaded``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:670
msgid "set to true when sta is uploaded to the driver"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:671
msgid "``sta_state``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:672
msgid "duplicates information about station state (for debug)"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:646
msgid "``_flags``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:647
msgid ""
"STA flags, see :c:type:`enum ieee80211_sta_info_flags "
"<ieee80211_sta_info_flags>`, do not use directly"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:647
msgid "``ps_lock``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:648
msgid "used for powersave (when mac80211 is the AP) related locking"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:648
msgid "``ps_tx_buf``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:649
msgid ""
"buffers (per AC) of frames to transmit to this station when it leaves power "
"saving state or polls"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:650
msgid "``tx_filtered``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:651
msgid ""
"buffers (per AC) of frames we already tried to transmit but were filtered by "
"hardware due to STA having entered power saving state, these are also "
"delivered to the station when it leaves powersave or polls for frames"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:654
msgid "``driver_buffered_tids``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:655
msgid "bitmap of TIDs the driver has data buffered on"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:655
msgid "``txq_buffered_tids``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:656
msgid "bitmap of TIDs that mac80211 has txq data buffered on"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:656
msgid "``assoc_at``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:657
msgid "clock boottime (in ns) of last association"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:657
msgid "``last_connected``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:658
msgid "time (in seconds) when a station got connected"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:658
msgid "``last_seq_ctrl``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:659
msgid ""
"last received seq/frag number from this STA (per TID plus one for non-QoS "
"frames)"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:660
msgid "``tid_seq``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:661
msgid "per-TID sequence numbers for sending to this STA"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:661
msgid "``airtime``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:662
msgid ""
"per-AC struct airtime_info describing airtime statistics for this station"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:663
msgid "``airtime_weight``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:664
msgid "station weight for airtime fairness calculation purposes"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:664
msgid "``ampdu_mlme``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:665
msgid "A-MPDU state machine state"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:666
msgid "``debugfs_dir``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:667
msgid "debug filesystem directory dentry"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:673
msgid "``reserved_tid``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:674
msgid "reserved TID (if any, otherwise IEEE80211_TID_UNRESERVED)"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:674
msgid "``amsdu_mesh_control``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:675
msgid "track the mesh A-MSDU format used by the peer:"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:683
msgid "``tdls_chandef``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:684
msgid "a TDLS peer can have a wider chandef that is compatible to the BSS one."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:685
msgid "``frags``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:686
msgid "fragment cache"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:687
msgid ""
"storage for aggregation data :c:type:`struct ieee80211_sta <ieee80211_sta>` "
"points either here or to deflink.agg."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:689
msgid ""
"This is the default link STA information, for non MLO STA all link specific "
"STA information is accessed through **deflink** or through link[0] which "
"points to address of **deflink**. For MLO Link STA the first added link STA "
"will point to deflink."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:699
msgid "``rem_link_stats``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:700
msgid "accumulated removed link stats"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:670
#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:161
#: net/mac80211/sta_info.h:215
msgid "``sta``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:671
msgid "station information we share with the driver"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:625
msgid ""
"This structure collects information about a station that mac80211 is "
"communicating with."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:629
msgid "-1: not yet known"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:630
msgid "0: non-mesh A-MSDU length field"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:631
msgid "1: big-endian mesh A-MSDU length field"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:214: net/mac80211/sta_info.h:632
msgid "2: little-endian mesh A-MSDU length field"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced.rst:220
msgid "STA information lifetime rules"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:222: net/mac80211/sta_info.c:31
msgid ""
"STA info structures (:c:type:`struct sta_info <sta_info>`) are managed in a "
"hash table for faster lookup and a list for iteration. They are managed "
"using RCU, i.e. access to the list and hash table is protected by RCU."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:222: net/mac80211/sta_info.c:35
msgid ""
"Upon allocating a STA info structure with sta_info_alloc(), the caller owns "
"that structure. It must then insert it into the hash table using either "
"sta_info_insert() or sta_info_insert_rcu(); only in the latter case (which "
"acquires an rcu read section but must not be called from within one) will "
"the pointer still be valid after the call. Note that the caller may not do "
"much with the STA info before inserting it; in particular, it may not start "
"any mesh peer link management or add encryption keys."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:222: net/mac80211/sta_info.c:44
msgid ""
"When the insertion fails (sta_info_insert()) returns non-zero), the "
"structure will have been freed by sta_info_insert()!"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:222: net/mac80211/sta_info.c:47
msgid ""
"Station entries are added by mac80211 when you establish a link with a peer. "
"This means different things for the different type of interfaces we support. "
"For a regular station this mean we add the AP sta when we receive an "
"association response from the AP. For IBSS this occurs when get to know "
"about a peer on the same IBSS. For WDS we add the sta for the peer "
"immediately upon device open. When using AP mode we add stations for each "
"respective station upon request from userspace through nl80211."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:222: net/mac80211/sta_info.c:55
msgid ""
"In order to remove a STA info structure, various sta_info_destroy_*() calls "
"are available."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:222: net/mac80211/sta_info.c:58
msgid ""
"There is no concept of ownership on a STA entry; each structure is owned by "
"the global hash table/list until it is removed. All users of the structure "
"need to be RCU protected so that the structure won't be freed before they "
"are done using it."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced.rst:226
msgid "Aggregation Functions"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:155
msgid "TID aggregation information (Tx)."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:158
msgid "rcu head for freeing structure"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:158
#: net/mac80211/sta_info.h:213
msgid "``session_timer``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:159
msgid "check if we keep Tx-ing on the TID (by timeout value)"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:159
msgid "``addba_resp_timer``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:160
msgid "timer for peer's response to addba request"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:160
msgid "``pending``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:161
msgid "pending frames queue -- use sta's spinlock to protect"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:162
#: net/mac80211/sta_info.h:216
msgid "station we are attached to"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:165
msgid "``state``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:166
msgid "session state (see above)"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:166
msgid "``last_tx``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:167
msgid "jiffies of last tx activity"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:163
#: net/mac80211/sta_info.h:221
msgid "``timeout``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:164
msgid "session timeout value to be filled in ADDBA requests"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:162
msgid "``dialog_token``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:163
msgid "dialog token for aggregation session"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:167
msgid "``stop_initiator``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:168
msgid "initiator of a session stop"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:168
msgid "``tx_stop``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:169
msgid "TX DelBA frame when stopping"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:169
#: net/mac80211/sta_info.h:220
msgid "``buf_size``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:170
msgid "reorder buffer size at receiver"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:173
#: net/mac80211/sta_info.h:219
msgid "``ssn``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:174
msgid "starting sequence number of the session"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:170
msgid "``failed_bar_ssn``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:171
msgid "ssn of the last failed BAR tx attempt"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:171
msgid "``bar_pending``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:172
msgid "BAR needs to be re-sent"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:172
msgid "``amsdu``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:173
msgid "support A-MSDU within A-MDPU"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:164
#: net/mac80211/sta_info.h:222
msgid "``tid``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:165
#: net/mac80211/sta_info.h:223
msgid "TID number"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:174
#: net/mac80211/sta_info.h:229
msgid ""
"This structure's lifetime is managed by RCU, assignments to the array "
"holding it must hold the aggregation mutex."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:177
msgid ""
"The TX path can access it under RCU lock-free if, and only if, the state has "
"the flag ``HT_AGG_STATE_OPERATIONAL`` set. Otherwise, the TX path must also "
"acquire the spinlock and re-check the state, see comments in the tx code "
"touching it."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:206
msgid "TID aggregation information (Rx)."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:224
msgid "RCU head used for freeing this struct"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:224
msgid "``reorder_lock``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:225
msgid "serializes access to reorder buffer, see below."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:210
msgid "``reorder_buf_filtered``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:211
msgid ""
"bitmap indicating where there are filtered frames in the reorder buffer that "
"should be ignored when releasing frames"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:208
msgid "``reorder_buf``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:209
msgid ""
"buffer to reorder incoming aggregated MPDUs. An MPDU may be an A-MSDU with "
"individually reported subframes."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:212
msgid "``reorder_time``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:213
msgid "jiffies when skb was added"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:214
msgid "check if peer keeps Tx-ing on the TID (by timeout value)"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:214
msgid "``reorder_timer``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:215
msgid "releases expired frames from the reorder buffer."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:216
msgid "``last_rx``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:217
msgid "jiffies of last rx activity"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:217
msgid "``head_seq_num``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:218
msgid "head sequence number in reordering buffer."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:218
msgid "``stored_mpdu_num``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:219
msgid "number of MPDUs in reordering buffer"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:220
msgid "Starting Sequence Number expected to be aggregated."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:221
msgid "buffer size for incoming A-MPDUs"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:222
msgid "reset timer value (in TUs)."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:225
msgid "``auto_seq``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:226
msgid ""
"used for offloaded BA sessions to automatically pick head_seq_and and ssn."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:228
msgid "this session is removed (but might have been found due to RCU)"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:228
msgid "``started``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:229
msgid "this session has started (head ssn or higher was received)"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:232
msgid ""
"The **reorder_lock** is used to protect the members of this struct, except "
"for **timeout**, **buf_size** and **dialog_token**, which are constant "
"across the lifetime of the struct (the dialog token being used only for "
"debugging)."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:260
msgid "STA aggregation information."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:262
msgid "``tid_rx``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:263
msgid "aggregation info for Rx per TID -- RCU protected"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:263
msgid "``tid_rx_token``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:264
msgid "dialog tokens for valid aggregation sessions"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:264
msgid "``tid_rx_timer_expired``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:265
msgid ""
"bitmap indicating on which TIDs the RX timer expired until the work for it "
"runs"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:266
msgid "``tid_rx_stop_requested``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:267
msgid ""
"bitmap indicating which BA sessions per TID the driver requested to close "
"until the work for it runs"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:268
msgid "``tid_rx_manage_offl``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:269
msgid ""
"bitmap indicating which BA sessions were requested to be treated as started/"
"stopped due to offloading"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:270
msgid "``agg_session_valid``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:271
msgid "bitmap indicating which TID has a rx BA session open on"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:271
msgid "``unexpected_agg``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:272
msgid ""
"bitmap indicating which TID already sent a delBA due to unexpected "
"aggregation related frames outside a session"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:273
msgid "``work``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:274
msgid "work struct for starting/stopping aggregation"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:274
msgid "``tid_tx``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:275
msgid "aggregation info for Tx per TID"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:275
msgid "``tid_start_tx``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:276
msgid ""
"sessions where start was requested, not just protected by wiphy mutex but "
"also sta->lock"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:277
msgid "``last_addba_req_time``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:278
msgid "timestamp of the last addBA request."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:278
msgid "``addba_req_num``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:279
msgid "number of times addBA request has been sent."
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:279
msgid "``dialog_token_allocator``"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced:228: net/mac80211/sta_info.h:280
msgid "dialog token enumerator for each new session;"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced.rst:235
msgid "Synchronisation Functions"
msgstr ""

#: ../../../driver-api/80211/mac80211-advanced.rst:239
msgid "Locking, lots of RCU"
msgstr ""
