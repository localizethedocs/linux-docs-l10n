# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../driver-api/vfio-mediated-device.rst:6
msgid "VFIO Mediated devices"
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:0
msgid "Copyright"
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:8
msgid "|copy| 2016, NVIDIA CORPORATION. All rights reserved."
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:0
msgid "Author"
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:9
msgid "Neo Jia <cjia@nvidia.com>"
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:10
msgid "Kirti Wankhede <kwankhede@nvidia.com>"
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:15
msgid "Virtual Function I/O (VFIO) Mediated devices[1]"
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:17
msgid ""
"The number of use cases for virtualizing DMA devices that do not have built-"
"in SR_IOV capability is increasing. Previously, to virtualize such devices, "
"developers had to create their own management interfaces and APIs, and then "
"integrate them with user space software. To simplify integration with user "
"space software, we have identified common requirements and a unified "
"management interface for such devices."
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:24
msgid ""
"The VFIO driver framework provides unified APIs for direct device access. It "
"is an IOMMU/device-agnostic framework for exposing direct device access to "
"user space in a secure, IOMMU-protected environment. This framework is used "
"for multiple devices, such as GPUs, network adapters, and compute "
"accelerators. With direct device access, virtual machines or user space "
"applications have direct access to the physical device. This framework is "
"reused for mediated devices."
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:31
msgid ""
"The mediated core driver provides a common interface for mediated device "
"management that can be used by drivers of different devices. This module "
"provides a generic interface to perform these operations:"
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:35
msgid "Create and destroy a mediated device"
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:36
msgid "Add a mediated device to and remove it from a mediated bus driver"
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:37
msgid "Add a mediated device to and remove it from an IOMMU group"
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:39
msgid ""
"The mediated core driver also provides an interface to register a bus "
"driver. For example, the mediated VFIO mdev driver is designed for mediated "
"devices and supports VFIO APIs. The mediated bus driver adds a mediated "
"device to and removes it from a VFIO group."
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:44
msgid ""
"The following high-level block diagram shows the main components and "
"interfaces in the VFIO mediated driver framework. The diagram shows NVIDIA, "
"Intel, and IBM devices as examples, as these devices are the first devices "
"to use this module::"
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:77
msgid "Registration Interfaces"
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:79
msgid ""
"The mediated core driver provides the following types of registration "
"interfaces:"
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:82
msgid "Registration interface for a mediated bus driver"
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:83
msgid "Physical device driver interface"
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:86
msgid "Registration Interface for a Mediated Bus Driver"
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:88
msgid ""
"The registration interface for a mediated device driver provides the "
"following structure to represent a mediated device's driver::"
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:105
msgid ""
"A mediated bus driver for mdev should use this structure in the function "
"calls to register and unregister itself with the core driver:"
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:108
msgid "Register::"
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:112
msgid "Unregister::"
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:116
msgid ""
"The mediated bus driver's probe function should create a vfio_device on top "
"of the mdev_device and connect it to an appropriate implementation of "
"vfio_device_ops."
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:120
msgid ""
"When a driver wants to add the GUID creation sysfs to an existing device it "
"has probe'd to then it should call::"
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:126
msgid ""
"This will provide the 'mdev_supported_types/XX/create' files which can then "
"be used to trigger the creation of a mdev_device. The created mdev_device "
"will be attached to the specified driver."
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:130
msgid "When the driver needs to remove itself it calls::"
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:134
msgid ""
"Which will unbind and destroy all the created mdevs and remove the sysfs "
"files."
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:137
msgid "Mediated Device Management Interface Through sysfs"
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:139
msgid ""
"The management interface through sysfs enables user space software, such as "
"libvirt, to query and configure mediated devices in a hardware-agnostic "
"fashion. This management interface provides flexibility to the underlying "
"physical device's driver to support features such as:"
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:144
msgid "Mediated device hot plug"
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:145
msgid "Multiple mediated devices in a single virtual machine"
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:146
msgid "Multiple mediated devices from different physical devices"
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:149
msgid "Links in the mdev_bus Class Directory"
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:150
msgid ""
"The /sys/class/mdev_bus/ directory contains links to devices that are "
"registered with the mdev core driver."
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:154
msgid "Directories and files under the sysfs for Each Physical Device"
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:183
msgid "[mdev_supported_types]"
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:185
msgid ""
"The list of currently supported mediated device types and their details."
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:187
msgid ""
"[<type-id>], device_api, and available_instances are mandatory attributes "
"that should be provided by vendor driver."
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:190
msgid "[<type-id>]"
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:192
msgid ""
"The [<type-id>] name is created by adding the device driver string as a "
"prefix to the string provided by the vendor driver. This format of this name "
"is as follows::"
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:198
msgid "device_api"
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:200
msgid ""
"This attribute shows which device API is being created, for example, \"vfio-"
"pci\" for a PCI device."
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:203
msgid "available_instances"
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:205
msgid ""
"This attribute shows the number of devices of type <type-id> that can be "
"created."
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:208
msgid "[device]"
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:210
msgid ""
"This directory contains links to the devices of type <type-id> that have "
"been created."
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:213
msgid "name"
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:215
msgid "This attribute shows a human readable name."
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:217
msgid "description"
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:219
msgid ""
"This attribute can show brief features/description of the type. This is an "
"optional attribute."
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:223
msgid "Directories and Files Under the sysfs for Each mdev Device"
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:233
msgid "remove (write only)"
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:235
msgid ""
"Writing '1' to the 'remove' file destroys the mdev device. The vendor driver "
"can fail the remove() callback if that device is active and the vendor "
"driver doesn't support hot unplug."
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:239
msgid "Example::"
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:244
msgid "Mediated device Hot plug"
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:246
msgid ""
"Mediated devices can be created and assigned at runtime. The procedure to "
"hot plug a mediated device is the same as the procedure to hot plug a PCI "
"device."
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:250
msgid "Translation APIs for Mediated Devices"
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:252
msgid ""
"The following APIs are provided for translating user pfn to host pfn in a "
"VFIO driver::"
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:261
msgid ""
"These functions call back into the back-end IOMMU module by using the "
"pin_pages and unpin_pages callbacks of the struct vfio_iommu_driver_ops[4]. "
"Currently these callbacks are supported in the TYPE1 IOMMU module. To enable "
"them for other IOMMU backend modules, such as PPC64 sPAPR module, they need "
"to provide these two callback functions."
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:268
msgid "References"
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:270
msgid "See Documentation/driver-api/vfio.rst for more information on VFIO."
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:271
msgid "struct mdev_driver in include/linux/mdev.h"
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:272
msgid "struct mdev_parent_ops in include/linux/mdev.h"
msgstr ""

#: ../../../driver-api/vfio-mediated-device.rst:273
msgid "struct vfio_iommu_driver_ops in include/linux/vfio.h"
msgstr ""
