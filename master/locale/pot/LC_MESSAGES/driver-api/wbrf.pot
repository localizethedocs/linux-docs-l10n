# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../driver-api/wbrf.rst:5
msgid "WBRF - Wifi Band RFI Mitigations"
msgstr ""

#: ../../../driver-api/wbrf.rst:7
msgid ""
"Due to electrical and mechanical constraints in certain platform designs "
"there may be likely interference of relatively high-powered harmonics of the "
"GPU memory clocks with local radio module frequency bands used by certain "
"Wifi bands."
msgstr ""

#: ../../../driver-api/wbrf.rst:12
msgid ""
"To mitigate possible RFI interference producers can advertise the "
"frequencies in use and consumers can use this information to avoid using "
"these frequencies for sensitive features."
msgstr ""

#: ../../../driver-api/wbrf.rst:16
msgid ""
"When a platform is known to have this issue with any contained devices, the "
"platform designer will advertise the availability of this feature via ACPI "
"devices with a device specific method (_DSM). * Producers with this _DSM "
"will be able to advertise the frequencies in use. * Consumers with this _DSM "
"will be able to register for notifications of frequencies in use."
msgstr ""

#: ../../../driver-api/wbrf.rst:24
msgid "Some general terms"
msgstr ""

#: ../../../driver-api/wbrf.rst:26
msgid ""
"Producer: such component who can produce high-powered radio frequency "
"Consumer: such component who can adjust its in-use frequency in response to "
"the radio frequencies of other components to mitigate the possible RFI."
msgstr ""

#: ../../../driver-api/wbrf.rst:31
msgid ""
"To make the mechanism function, those producers should notify active use of "
"their particular frequencies so that other consumers can make relative "
"internal adjustments as necessary to avoid this resonance."
msgstr ""

#: ../../../driver-api/wbrf.rst:36
msgid "ACPI interface"
msgstr ""

#: ../../../driver-api/wbrf.rst:38
msgid ""
"Although initially used by for wifi + dGPU use cases, the ACPI interface can "
"be scaled to any type of device that a platform designer discovers can cause "
"interference."
msgstr ""

#: ../../../driver-api/wbrf.rst:42
msgid "The GUID used for the _DSM is 7B7656CF-DC3D-4C1C-83E9-66E721DE3070."
msgstr ""

#: ../../../driver-api/wbrf.rst:44
msgid "3 functions are available in this _DSM:"
msgstr ""

#: ../../../driver-api/wbrf.rst:46
msgid "0: discover # of functions available"
msgstr ""

#: ../../../driver-api/wbrf.rst:47
msgid "1: record RF bands in use"
msgstr ""

#: ../../../driver-api/wbrf.rst:48
msgid "2: retrieve RF bands in use"
msgstr ""

#: ../../../driver-api/wbrf.rst:51
msgid "Driver programming interface"
msgstr ""

#: ../../../driver-api/wbrf:53: drivers/platform/x86/amd/wbrf.c:127
msgid "add or remove the frequency band the device is using"
msgstr ""

#: ../../../driver-api/wbrf:53: drivers/platform/x86/amd/wbrf.c:131
#: drivers/platform/x86/amd/wbrf.c:169 drivers/platform/x86/amd/wbrf.c:194
#: drivers/platform/x86/amd/wbrf.c:219 drivers/platform/x86/amd/wbrf.c:285
#: drivers/platform/x86/amd/wbrf.c:304
msgid "**Parameters**"
msgstr ""

#: ../../../driver-api/wbrf:53: drivers/platform/x86/amd/wbrf.c:133
#: drivers/platform/x86/amd/wbrf.c:171 drivers/platform/x86/amd/wbrf.c:196
#: drivers/platform/x86/amd/wbrf.c:221
msgid "``struct device *dev``"
msgstr ""

#: ../../../driver-api/wbrf:53: drivers/platform/x86/amd/wbrf.c:129
#: drivers/platform/x86/amd/wbrf.c:168 drivers/platform/x86/amd/wbrf.c:193
#: drivers/platform/x86/amd/wbrf.c:217
msgid "device pointer"
msgstr ""

#: ../../../driver-api/wbrf:53: drivers/platform/x86/amd/wbrf.c:131
msgid "``uint8_t action``"
msgstr ""

#: ../../../driver-api/wbrf:53: drivers/platform/x86/amd/wbrf.c:130
msgid "remove or add the frequency band into bios"
msgstr ""

#: ../../../driver-api/wbrf:53: drivers/platform/x86/amd/wbrf.c:132
msgid "``struct wbrf_ranges_in_out *in``"
msgstr ""

#: ../../../driver-api/wbrf:53: drivers/platform/x86/amd/wbrf.c:131
msgid "input structure containing the frequency band the device is using"
msgstr ""

#: ../../../driver-api/wbrf:53: drivers/platform/x86/amd/wbrf.c:133
#: drivers/platform/x86/amd/wbrf.c:170 drivers/platform/x86/amd/wbrf.c:195
#: drivers/platform/x86/amd/wbrf.c:220 drivers/platform/x86/amd/wbrf.c:286
#: drivers/platform/x86/amd/wbrf.c:305
msgid "**Description**"
msgstr ""

#: ../../../driver-api/wbrf:53: drivers/platform/x86/amd/wbrf.c:132
msgid ""
"Broadcast to other consumers the frequency band the device starts to use. "
"Underneath the surface the information is cached into an internal buffer "
"first. Then a notification is sent to all those registered consumers. So "
"then they can retrieve that buffer to know the latest active frequency "
"bands. Consumers that haven't yet been registered can retrieve the "
"information from the cache when they register."
msgstr ""

#: ../../../driver-api/wbrf:53: drivers/platform/x86/amd/wbrf.c:140
#: drivers/platform/x86/amd/wbrf.c:172 drivers/platform/x86/amd/wbrf.c:197
#: drivers/platform/x86/amd/wbrf.c:224 drivers/platform/x86/amd/wbrf.c:288
#: drivers/platform/x86/amd/wbrf.c:308
msgid "**Return**"
msgstr ""

#: ../../../driver-api/wbrf:53: drivers/platform/x86/amd/wbrf.c:141
msgid ""
"0 for success add/remove wifi frequency band. Returns a negative error code "
"for failure."
msgstr ""

#: ../../../driver-api/wbrf:53: drivers/platform/x86/amd/wbrf.c:165
msgid "determine if the WBRF can be enabled for the device as a producer"
msgstr ""

#: ../../../driver-api/wbrf:53: drivers/platform/x86/amd/wbrf.c:169
msgid ""
"Check if the platform equipped with necessary implementations to support "
"WBRF for the device as a producer."
msgstr ""

#: ../../../driver-api/wbrf:53: drivers/platform/x86/amd/wbrf.c:173
msgid "true if WBRF is supported, otherwise returns false"
msgstr ""

#: ../../../driver-api/wbrf:53: drivers/platform/x86/amd/wbrf.c:190
msgid "determine if the WBRF can be enabled for the device as a consumer"
msgstr ""

#: ../../../driver-api/wbrf:53: drivers/platform/x86/amd/wbrf.c:194
msgid ""
"Determine if the platform equipped with necessary implementations to support "
"WBRF for the device as a consumer."
msgstr ""

#: ../../../driver-api/wbrf:53: drivers/platform/x86/amd/wbrf.c:198
msgid "true if WBRF is supported, otherwise returns false."
msgstr ""

#: ../../../driver-api/wbrf:53: drivers/platform/x86/amd/wbrf.c:215
msgid "retrieve current active frequency bands"
msgstr ""

#: ../../../driver-api/wbrf:53: drivers/platform/x86/amd/wbrf.c:219
msgid "``struct wbrf_ranges_in_out *out``"
msgstr ""

#: ../../../driver-api/wbrf:53: drivers/platform/x86/amd/wbrf.c:218
msgid "output structure containing all the active frequency bands"
msgstr ""

#: ../../../driver-api/wbrf:53: drivers/platform/x86/amd/wbrf.c:219
msgid ""
"Retrieve the current active frequency bands which were broadcasted by other "
"producers. The consumer who calls this API should take proper actions if any "
"of the frequency band may cause RFI with its own frequency band used."
msgstr ""

#: ../../../driver-api/wbrf:53: drivers/platform/x86/amd/wbrf.c:225
msgid ""
"0 for getting wifi freq band successfully. Returns a negative error code for "
"failure."
msgstr ""

#: ../../../driver-api/wbrf:53: drivers/platform/x86/amd/wbrf.c:281
msgid "register for notifications of frequency band update"
msgstr ""

#: ../../../driver-api/wbrf:53: drivers/platform/x86/amd/wbrf.c:287
#: drivers/platform/x86/amd/wbrf.c:306
msgid "``struct notifier_block *nb``"
msgstr ""

#: ../../../driver-api/wbrf:53: drivers/platform/x86/amd/wbrf.c:284
#: drivers/platform/x86/amd/wbrf.c:303
msgid "driver notifier block"
msgstr ""

#: ../../../driver-api/wbrf:53: drivers/platform/x86/amd/wbrf.c:285
msgid ""
"The consumer should register itself via this API so that it can get notified "
"on the frequency band updates from other producers."
msgstr ""

#: ../../../driver-api/wbrf:53: drivers/platform/x86/amd/wbrf.c:289
msgid ""
"0 for registering a consumer driver successfully. Returns a negative error "
"code for failure."
msgstr ""

#: ../../../driver-api/wbrf:53: drivers/platform/x86/amd/wbrf.c:300
msgid "unregister for notifications of frequency band update"
msgstr ""

#: ../../../driver-api/wbrf:53: drivers/platform/x86/amd/wbrf.c:304
msgid ""
"The consumer should call this API when it is longer interested with the "
"frequency band updates from other producers. Usually, this should be "
"performed during driver cleanup."
msgstr ""

#: ../../../driver-api/wbrf:53: drivers/platform/x86/amd/wbrf.c:309
msgid ""
"0 for unregistering a consumer driver. Returns a negative error code for "
"failure."
msgstr ""

#: ../../../driver-api/wbrf.rst:56
msgid "Sample Usage"
msgstr ""

#: ../../../driver-api/wbrf.rst:58
msgid ""
"The expected flow for the producers: 1. During probe, call "
"`acpi_amd_wbrf_supported_producer` to check if WBRF can be enabled for the "
"device. 2. On using some frequency band, call `acpi_amd_wbrf_add_remove` "
"with 'add' param to get other consumers properly notified. 3. Or on stopping "
"using some frequency band, call `acpi_amd_wbrf_add_remove` with 'remove' "
"param to get other consumers notified."
msgstr ""

#: ../../../driver-api/wbrf.rst:66
msgid ""
"The expected flow for the consumers: 1. During probe, call "
"`acpi_amd_wbrf_supported_consumer` to check if WBRF can be enabled for the "
"device. 2. Call `amd_wbrf_register_notifier` to register for notification of "
"frequency band change(add or remove) from other producers. 3. Call the "
"`amd_wbrf_retrieve_freq_band` initially to retrieve current active frequency "
"bands considering some producers may broadcast such information before the "
"consumer is up. 4. On receiving a notification for frequency band change, "
"run `amd_wbrf_retrieve_freq_band` again to retrieve the latest active "
"frequency bands. 5. During driver cleanup, call "
"`amd_wbrf_unregister_notifier` to unregister the notifier."
msgstr ""
