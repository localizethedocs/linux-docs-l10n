# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../driver-api/vme.rst:2
msgid "VME Device Drivers"
msgstr ""

#: ../../../driver-api/vme.rst:5
msgid "Driver registration"
msgstr ""

#: ../../../driver-api/vme.rst:7
msgid ""
"As with other subsystems within the Linux kernel, VME device drivers "
"register with the VME subsystem, typically called from the devices init "
"routine.  This is achieved via a call to :c:func:`vme_register_driver`."
msgstr ""

#: ../../../driver-api/vme.rst:11
msgid ""
"A pointer to a structure of type :c:type:`struct vme_driver <vme_driver>` "
"must be provided to the registration function. Along with the maximum number "
"of devices your driver is able to support."
msgstr ""

#: ../../../driver-api/vme.rst:15
msgid ""
"At the minimum, the '.name', '.match' and '.probe' elements of :c:type:"
"`struct vme_driver <vme_driver>` should be correctly set. The '.name' "
"element is a pointer to a string holding the device driver's name."
msgstr ""

#: ../../../driver-api/vme.rst:19
msgid ""
"The '.match' function allows control over which VME devices should be "
"registered with the driver. The match function should return 1 if a device "
"should be probed and 0 otherwise. This example match function (from vme_user."
"c) limits the number of devices probed to one:"
msgstr ""

#: ../../../driver-api/vme.rst:35
msgid ""
"The '.probe' element should contain a pointer to the probe routine. The "
"probe routine is passed a :c:type:`struct vme_dev <vme_dev>` pointer as an "
"argument."
msgstr ""

#: ../../../driver-api/vme.rst:39
msgid ""
"Here, the 'num' field refers to the sequential device ID for this specific "
"driver. The bridge number (or bus number) can be accessed using dev->bridge-"
">num."
msgstr ""

#: ../../../driver-api/vme.rst:43
msgid ""
"A function is also provided to unregister the driver from the VME core "
"called :c:func:`vme_unregister_driver` and should usually be called from the "
"device driver's exit routine."
msgstr ""

#: ../../../driver-api/vme.rst:49
msgid "Resource management"
msgstr ""

#: ../../../driver-api/vme.rst:51
msgid ""
"Once a driver has registered with the VME core the provided match routine "
"will be called the number of times specified during the registration. If a "
"match succeeds, a non-zero value should be returned. A zero return value "
"indicates failure. For all successful matches, the probe routine of the "
"corresponding driver is called. The probe routine is passed a pointer to the "
"devices device structure. This pointer should be saved, it will be required "
"for requesting VME resources."
msgstr ""

#: ../../../driver-api/vme.rst:59
msgid ""
"The driver can request ownership of one or more master windows (:c:func:"
"`vme_master_request`), slave windows (:c:func:`vme_slave_request`) and/or "
"dma channels (:c:func:`vme_dma_request`). Rather than allowing the device "
"driver to request a specific window or DMA channel (which may be used by a "
"different driver) the API allows a resource to be assigned based on the "
"required attributes of the driver in question. For slave windows these "
"attributes are split into the VME address spaces that need to be accessed in "
"'aspace' and VME bus cycle types required in 'cycle'. Master windows add a "
"further set of attributes in 'width' specifying the required data transfer "
"widths. These attributes are defined as bitmasks and as such any combination "
"of the attributes can be requested for a single window, the core will assign "
"a window that meets the requirements, returning a pointer of type "
"vme_resource that should be used to identify the allocated resource when it "
"is used. For DMA controllers, the request function requires the potential "
"direction of any transfers to be provided in the route attributes. This is "
"typically VME-to-MEM and/or MEM-to-VME, though some hardware can support VME-"
"to-VME and MEM-to-MEM transfers as well as test pattern generation. If an "
"unallocated window fitting the requirements can not be found a NULL pointer "
"will be returned."
msgstr ""

#: ../../../driver-api/vme.rst:78
msgid ""
"Functions are also provided to free window allocations once they are no "
"longer required. These functions (:c:func:`vme_master_free`, :c:func:"
"`vme_slave_free` and :c:func:`vme_dma_free`) should be passed the pointer to "
"the resource provided during resource allocation."
msgstr ""

#: ../../../driver-api/vme.rst:85
msgid "Master windows"
msgstr ""

#: ../../../driver-api/vme.rst:87
msgid ""
"Master windows provide access from the local processor[s] out onto the VME "
"bus. The number of windows available and the available access modes is "
"dependent on the underlying chipset. A window must be configured before it "
"can be used."
msgstr ""

#: ../../../driver-api/vme.rst:93
msgid "Master window configuration"
msgstr ""

#: ../../../driver-api/vme.rst:95
msgid ""
"Once a master window has been assigned :c:func:`vme_master_set` can be used "
"to configure it and :c:func:`vme_master_get` to retrieve the current "
"settings. The address spaces, transfer widths and cycle types are the same "
"as described under resource management, however some of the options are "
"mutually exclusive. For example, only one address space may be specified."
msgstr ""

#: ../../../driver-api/vme.rst:103
msgid "Master window access"
msgstr ""

#: ../../../driver-api/vme.rst:105
msgid ""
"The function :c:func:`vme_master_read` can be used to read from and :c:func:"
"`vme_master_write` used to write to configured master windows."
msgstr ""

#: ../../../driver-api/vme.rst:108
msgid ""
"In addition to simple reads and writes, :c:func:`vme_master_rmw` is provided "
"to do a read-modify-write transaction. Parts of a VME window can also be "
"mapped into user space memory using :c:func:`vme_master_mmap`."
msgstr ""

#: ../../../driver-api/vme.rst:114
msgid "Slave windows"
msgstr ""

#: ../../../driver-api/vme.rst:116
msgid ""
"Slave windows provide devices on the VME bus access into mapped portions of "
"the local memory. The number of windows available and the access modes that "
"can be used is dependent on the underlying chipset. A window must be "
"configured before it can be used."
msgstr ""

#: ../../../driver-api/vme.rst:123
msgid "Slave window configuration"
msgstr ""

#: ../../../driver-api/vme.rst:125
msgid ""
"Once a slave window has been assigned :c:func:`vme_slave_set` can be used to "
"configure it and :c:func:`vme_slave_get` to retrieve the current settings."
msgstr ""

#: ../../../driver-api/vme.rst:128
msgid ""
"The address spaces, transfer widths and cycle types are the same as "
"described under resource management, however some of the options are "
"mutually exclusive. For example, only one address space may be specified."
msgstr ""

#: ../../../driver-api/vme.rst:134
msgid "Slave window buffer allocation"
msgstr ""

#: ../../../driver-api/vme.rst:136
msgid ""
"Functions are provided to allow the user to allocate (:c:func:"
"`vme_alloc_consistent`) and free (:c:func:`vme_free_consistent`) contiguous "
"buffers which will be accessible by the VME bridge. These functions do not "
"have to be used, other methods can be used to allocate a buffer, though care "
"must be taken to ensure that they are contiguous and accessible by the VME "
"bridge."
msgstr ""

#: ../../../driver-api/vme.rst:145
msgid "Slave window access"
msgstr ""

#: ../../../driver-api/vme.rst:147
msgid ""
"Slave windows map local memory onto the VME bus, the standard methods for "
"accessing memory should be used."
msgstr ""

#: ../../../driver-api/vme.rst:152
msgid "DMA channels"
msgstr ""

#: ../../../driver-api/vme.rst:154
msgid ""
"The VME DMA transfer provides the ability to run link-list DMA transfers. "
"The API introduces the concept of DMA lists. Each DMA list is a link-list "
"which can be passed to a DMA controller. Multiple lists can be created, "
"extended, executed, reused and destroyed."
msgstr ""

#: ../../../driver-api/vme.rst:161
msgid "List Management"
msgstr ""

#: ../../../driver-api/vme.rst:163
msgid ""
"The function :c:func:`vme_new_dma_list` is provided to create and :c:func:"
"`vme_dma_list_free` to destroy DMA lists. Execution of a list will not "
"automatically destroy the list, thus enabling a list to be reused for "
"repetitive tasks."
msgstr ""

#: ../../../driver-api/vme.rst:170
msgid "List Population"
msgstr ""

#: ../../../driver-api/vme.rst:172
msgid ""
"An item can be added to a list using :c:func:`vme_dma_list_add` (the source "
"and destination attributes need to be created before calling this function, "
"this is covered under \"Transfer Attributes\")."
msgstr ""

#: ../../../driver-api/vme.rst:178
msgid ""
"The detailed attributes of the transfers source and destination are not "
"checked until an entry is added to a DMA list, the request for a DMA channel "
"purely checks the directions in which the controller is expected to transfer "
"data. As a result it is possible for this call to return an error, for "
"example if the source or destination is in an unsupported VME address space."
msgstr ""

#: ../../../driver-api/vme.rst:186
msgid "Transfer Attributes"
msgstr ""

#: ../../../driver-api/vme.rst:188
msgid ""
"The attributes for the source and destination are handled separately from "
"adding an item to a list. This is due to the diverse attributes required for "
"each type of source and destination. There are functions to create "
"attributes for PCI, VME and pattern sources and destinations (where "
"appropriate):"
msgstr ""

#: ../../../driver-api/vme.rst:193
msgid "PCI source or destination: :c:func:`vme_dma_pci_attribute`"
msgstr ""

#: ../../../driver-api/vme.rst:194
msgid "VME source or destination: :c:func:`vme_dma_vme_attribute`"
msgstr ""

#: ../../../driver-api/vme.rst:195
msgid "Pattern source: :c:func:`vme_dma_pattern_attribute`"
msgstr ""

#: ../../../driver-api/vme.rst:197
msgid ""
"The function :c:func:`vme_dma_free_attribute` should be used to free an "
"attribute."
msgstr ""

#: ../../../driver-api/vme.rst:202
msgid "List Execution"
msgstr ""

#: ../../../driver-api/vme.rst:204
msgid ""
"The function :c:func:`vme_dma_list_exec` queues a list for execution and "
"will return once the list has been executed."
msgstr ""

#: ../../../driver-api/vme.rst:209
msgid "Interrupts"
msgstr ""

#: ../../../driver-api/vme.rst:211
msgid ""
"The VME API provides functions to attach and detach callbacks to specific "
"VME level and status ID combinations and for the generation of VME "
"interrupts with specific VME level and status IDs."
msgstr ""

#: ../../../driver-api/vme.rst:217
msgid "Attaching Interrupt Handlers"
msgstr ""

#: ../../../driver-api/vme.rst:219
msgid ""
"The function :c:func:`vme_irq_request` can be used to attach and :c:func:"
"`vme_irq_free` to free a specific VME level and status ID combination. Any "
"given combination can only be assigned a single callback function. A void "
"pointer parameter is provided, the value of which is passed to the callback "
"function, the use of this pointer is user undefined. The callback parameters "
"are as follows. Care must be taken in writing a callback function, callback "
"functions run in interrupt context:"
msgstr ""

#: ../../../driver-api/vme.rst:233
msgid "Interrupt Generation"
msgstr ""

#: ../../../driver-api/vme.rst:235
msgid ""
"The function :c:func:`vme_irq_generate` can be used to generate a VME "
"interrupt at a given VME level and VME status ID."
msgstr ""

#: ../../../driver-api/vme.rst:240
msgid "Location monitors"
msgstr ""

#: ../../../driver-api/vme.rst:242
msgid ""
"The VME API provides the following functionality to configure the location "
"monitor."
msgstr ""

#: ../../../driver-api/vme.rst:247
msgid "Location Monitor Management"
msgstr ""

#: ../../../driver-api/vme.rst:249
msgid ""
"The function :c:func:`vme_lm_request` is provided to request the use of a "
"block of location monitors and :c:func:`vme_lm_free` to free them after they "
"are no longer required. Each block may provide a number of location "
"monitors, monitoring adjacent locations. The function :c:func:`vme_lm_count` "
"can be used to determine how many locations are provided."
msgstr ""

#: ../../../driver-api/vme.rst:257
msgid "Location Monitor Configuration"
msgstr ""

#: ../../../driver-api/vme.rst:259
msgid ""
"Once a bank of location monitors has been allocated, the function :c:func:"
"`vme_lm_set` is provided to configure the location and mode of the location "
"monitor. The function :c:func:`vme_lm_get` can be used to retrieve existing "
"settings."
msgstr ""

#: ../../../driver-api/vme.rst:266
msgid "Location Monitor Use"
msgstr ""

#: ../../../driver-api/vme.rst:268
msgid ""
"The function :c:func:`vme_lm_attach` enables a callback to be attached and :"
"c:func:`vme_lm_detach` allows on to be detached from each location monitor "
"location. Each location monitor can monitor a number of adjacent locations. "
"The callback function is declared as follows."
msgstr ""

#: ../../../driver-api/vme.rst:279
msgid "Slot Detection"
msgstr ""

#: ../../../driver-api/vme.rst:281
msgid ""
"The function :c:func:`vme_slot_num` returns the slot ID of the provided "
"bridge."
msgstr ""

#: ../../../driver-api/vme.rst:285
msgid "Bus Detection"
msgstr ""

#: ../../../driver-api/vme.rst:287
msgid ""
"The function :c:func:`vme_bus_num` returns the bus ID of the provided bridge."
msgstr ""

#: ../../../driver-api/vme.rst:291
msgid "VME API"
msgstr ""

#: ../../../driver-api/vme:293: drivers/staging/vme_user/vme.h:97
msgid "Structure representing a VME device"
msgstr ""

#: ../../../driver-api/vme:293: drivers/staging/vme_user/vme.h:101
#: drivers/staging/vme_user/vme.h:117
msgid "**Definition**::"
msgstr ""

#: ../../../driver-api/vme:293: drivers/staging/vme_user/vme.h:111
#: drivers/staging/vme_user/vme.h:128
msgid "**Members**"
msgstr ""

#: ../../../driver-api/vme:293: drivers/staging/vme_user/vme.h:98
msgid "``num``"
msgstr ""

#: ../../../driver-api/vme:293: drivers/staging/vme_user/vme.h:99
msgid "The device number"
msgstr ""

#: ../../../driver-api/vme:293: drivers/staging/vme_user/vme.h:99
msgid "``bridge``"
msgstr ""

#: ../../../driver-api/vme:293: drivers/staging/vme_user/vme.h:100
msgid "Pointer to the bridge device this device is on"
msgstr ""

#: ../../../driver-api/vme:293: drivers/staging/vme_user/vme.h:100
msgid "``dev``"
msgstr ""

#: ../../../driver-api/vme:293: drivers/staging/vme_user/vme.h:101
msgid "Internal device structure"
msgstr ""

#: ../../../driver-api/vme:293: drivers/staging/vme_user/vme.h:101
msgid "``drv_list``"
msgstr ""

#: ../../../driver-api/vme:293: drivers/staging/vme_user/vme.h:102
msgid "List of devices (per driver)"
msgstr ""

#: ../../../driver-api/vme:293: drivers/staging/vme_user/vme.h:102
msgid "``bridge_list``"
msgstr ""

#: ../../../driver-api/vme:293: drivers/staging/vme_user/vme.h:103
msgid "List of devices (per bridge)"
msgstr ""

#: ../../../driver-api/vme:293: drivers/staging/vme_user/vme.h:113
msgid "Structure representing a VME driver"
msgstr ""

#: ../../../driver-api/vme:293: drivers/staging/vme_user/vme.h:114
msgid "``name``"
msgstr ""

#: ../../../driver-api/vme:293: drivers/staging/vme_user/vme.h:115
msgid ""
"Driver name, should be unique among VME drivers and usually the same as the "
"module name."
msgstr ""

#: ../../../driver-api/vme:293: drivers/staging/vme_user/vme.h:116
msgid "``match``"
msgstr ""

#: ../../../driver-api/vme:293: drivers/staging/vme_user/vme.h:117
msgid "Callback used to determine whether probe should be run."
msgstr ""

#: ../../../driver-api/vme:293: drivers/staging/vme_user/vme.h:117
msgid "``probe``"
msgstr ""

#: ../../../driver-api/vme:293: drivers/staging/vme_user/vme.h:118
msgid "Callback for device binding, called when new device is detected."
msgstr ""

#: ../../../driver-api/vme:293: drivers/staging/vme_user/vme.h:118
msgid "``remove``"
msgstr ""

#: ../../../driver-api/vme:293: drivers/staging/vme_user/vme.h:119
msgid "Callback, called on device removal."
msgstr ""

#: ../../../driver-api/vme:293: drivers/staging/vme_user/vme.h:119
msgid "``driver``"
msgstr ""

#: ../../../driver-api/vme:293: drivers/staging/vme_user/vme.h:120
msgid "Underlying generic device driver structure."
msgstr ""

#: ../../../driver-api/vme:293: drivers/staging/vme_user/vme.h:120
msgid "``devices``"
msgstr ""

#: ../../../driver-api/vme:293: drivers/staging/vme_user/vme.h:121
msgid "List of VME devices (struct vme_dev) associated with this driver."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:70
msgid "Allocate contiguous memory."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:74
#: drivers/staging/vme_user/vme.c:101 drivers/staging/vme_user/vme.c:126
#: drivers/staging/vme_user/vme.c:245 drivers/staging/vme_user/vme.c:315
#: drivers/staging/vme_user/vme.c:367 drivers/staging/vme_user/vme.c:406
#: drivers/staging/vme_user/vme.c:438 drivers/staging/vme_user/vme.c:512
#: drivers/staging/vme_user/vme.c:565 drivers/staging/vme_user/vme.c:604
#: drivers/staging/vme_user/vme.c:653 drivers/staging/vme_user/vme.c:701
#: drivers/staging/vme_user/vme.c:742 drivers/staging/vme_user/vme.c:780
#: drivers/staging/vme_user/vme.c:812 drivers/staging/vme_user/vme.c:882
#: drivers/staging/vme_user/vme.c:916 drivers/staging/vme_user/vme.c:955
#: drivers/staging/vme_user/vme.c:994 drivers/staging/vme_user/vme.c:1038
#: drivers/staging/vme_user/vme.c:1052 drivers/staging/vme_user/vme.c:1094
#: drivers/staging/vme_user/vme.c:1125 drivers/staging/vme_user/vme.c:1167
#: drivers/staging/vme_user/vme.c:1279 drivers/staging/vme_user/vme.c:1339
#: drivers/staging/vme_user/vme.c:1383 drivers/staging/vme_user/vme.c:1420
#: drivers/staging/vme_user/vme.c:1486 drivers/staging/vme_user/vme.c:1513
#: drivers/staging/vme_user/vme.c:1549 drivers/staging/vme_user/vme.c:1585
#: drivers/staging/vme_user/vme.c:1622 drivers/staging/vme_user/vme.c:1655
#: drivers/staging/vme_user/vme.c:1694 drivers/staging/vme_user/vme.c:1723
#: drivers/staging/vme_user/vme.c:1878 drivers/staging/vme_user/vme.c:1907
msgid "**Parameters**"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:76
#: drivers/staging/vme_user/vme.c:103 drivers/staging/vme_user/vme.c:128
#: drivers/staging/vme_user/vme.c:317 drivers/staging/vme_user/vme.c:369
#: drivers/staging/vme_user/vme.c:408 drivers/staging/vme_user/vme.c:514
#: drivers/staging/vme_user/vme.c:567 drivers/staging/vme_user/vme.c:606
#: drivers/staging/vme_user/vme.c:655 drivers/staging/vme_user/vme.c:703
#: drivers/staging/vme_user/vme.c:744 drivers/staging/vme_user/vme.c:782
#: drivers/staging/vme_user/vme.c:884 drivers/staging/vme_user/vme.c:1169
#: drivers/staging/vme_user/vme.c:1488 drivers/staging/vme_user/vme.c:1515
#: drivers/staging/vme_user/vme.c:1551 drivers/staging/vme_user/vme.c:1587
#: drivers/staging/vme_user/vme.c:1624 drivers/staging/vme_user/vme.c:1657
msgid "``struct vme_resource *resource``"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:71
#: drivers/staging/vme_user/vme.c:98
msgid "Pointer to VME resource."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:73
#: drivers/staging/vme_user/vme.c:100
msgid "``size_t size``"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:72
msgid "Size of allocation required."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:74
msgid "``dma_addr_t *dma``"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:73
msgid "Pointer to variable to store physical address of allocation."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:75
#: drivers/staging/vme_user/vme.c:103 drivers/staging/vme_user/vme.c:125
#: drivers/staging/vme_user/vme.c:246 drivers/staging/vme_user/vme.c:320
#: drivers/staging/vme_user/vme.c:372 drivers/staging/vme_user/vme.c:405
#: drivers/staging/vme_user/vme.c:440 drivers/staging/vme_user/vme.c:517
#: drivers/staging/vme_user/vme.c:570 drivers/staging/vme_user/vme.c:606
#: drivers/staging/vme_user/vme.c:655 drivers/staging/vme_user/vme.c:704
#: drivers/staging/vme_user/vme.c:742 drivers/staging/vme_user/vme.c:779
#: drivers/staging/vme_user/vme.c:812 drivers/staging/vme_user/vme.c:881
#: drivers/staging/vme_user/vme.c:916 drivers/staging/vme_user/vme.c:954
#: drivers/staging/vme_user/vme.c:996 drivers/staging/vme_user/vme.c:1037
#: drivers/staging/vme_user/vme.c:1054 drivers/staging/vme_user/vme.c:1093
#: drivers/staging/vme_user/vme.c:1124 drivers/staging/vme_user/vme.c:1166
#: drivers/staging/vme_user/vme.c:1283 drivers/staging/vme_user/vme.c:1340
#: drivers/staging/vme_user/vme.c:1384 drivers/staging/vme_user/vme.c:1419
#: drivers/staging/vme_user/vme.c:1485 drivers/staging/vme_user/vme.c:1515
#: drivers/staging/vme_user/vme.c:1551 drivers/staging/vme_user/vme.c:1587
#: drivers/staging/vme_user/vme.c:1622 drivers/staging/vme_user/vme.c:1654
#: drivers/staging/vme_user/vme.c:1693 drivers/staging/vme_user/vme.c:1722
#: drivers/staging/vme_user/vme.c:1878 drivers/staging/vme_user/vme.c:1906
msgid "**Description**"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:74
msgid ""
"Allocate a contiguous block of memory for use by the driver. This is used to "
"create the buffers for the slave windows."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:77
#: drivers/staging/vme_user/vme.c:128 drivers/staging/vme_user/vme.c:248
#: drivers/staging/vme_user/vme.c:321 drivers/staging/vme_user/vme.c:373
#: drivers/staging/vme_user/vme.c:442 drivers/staging/vme_user/vme.c:518
#: drivers/staging/vme_user/vme.c:571 drivers/staging/vme_user/vme.c:608
#: drivers/staging/vme_user/vme.c:657 drivers/staging/vme_user/vme.c:710
#: drivers/staging/vme_user/vme.c:743 drivers/staging/vme_user/vme.c:814
#: drivers/staging/vme_user/vme.c:883 drivers/staging/vme_user/vme.c:919
#: drivers/staging/vme_user/vme.c:957 drivers/staging/vme_user/vme.c:999
#: drivers/staging/vme_user/vme.c:1059 drivers/staging/vme_user/vme.c:1095
#: drivers/staging/vme_user/vme.c:1125 drivers/staging/vme_user/vme.c:1167
#: drivers/staging/vme_user/vme.c:1285 drivers/staging/vme_user/vme.c:1386
#: drivers/staging/vme_user/vme.c:1422 drivers/staging/vme_user/vme.c:1488
#: drivers/staging/vme_user/vme.c:1517 drivers/staging/vme_user/vme.c:1553
#: drivers/staging/vme_user/vme.c:1590 drivers/staging/vme_user/vme.c:1624
#: drivers/staging/vme_user/vme.c:1658 drivers/staging/vme_user/vme.c:1694
#: drivers/staging/vme_user/vme.c:1723 drivers/staging/vme_user/vme.c:1879
msgid "**Return**"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:78
msgid "Virtual address of allocation on success, NULL on failure."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:97
msgid "Free previously allocated memory."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:99
msgid "Size of allocation to free."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:101
msgid "``void *vaddr``"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:100
msgid "Virtual address of allocation."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:102
msgid "``dma_addr_t dma``"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:101
msgid "Physical address of allocation."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:102
msgid "Free previously allocated block of contiguous memory."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:122
msgid "Helper function returning size of a VME window"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:123
msgid "Pointer to VME slave or master resource."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:124
msgid ""
"Determine the size of the VME window provided. This is a helper function, "
"wrappering the call to vme_master_get or vme_slave_get depending on the type "
"of window resource handed to it."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:129
msgid "Size of the window on success, zero on failure."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:241
msgid "Request a VME slave window resource."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:247
#: drivers/staging/vme_user/vme.c:440 drivers/staging/vme_user/vme.c:814
#: drivers/staging/vme_user/vme.c:1281 drivers/staging/vme_user/vme.c:1341
#: drivers/staging/vme_user/vme.c:1385 drivers/staging/vme_user/vme.c:1422
#: drivers/staging/vme_user/vme.c:1696 drivers/staging/vme_user/vme.c:1725
msgid "``struct vme_dev *vdev``"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:242
#: drivers/staging/vme_user/vme.c:435 drivers/staging/vme_user/vme.c:809
#: drivers/staging/vme_user/vme.c:1276 drivers/staging/vme_user/vme.c:1336
#: drivers/staging/vme_user/vme.c:1380 drivers/staging/vme_user/vme.c:1417
#: drivers/staging/vme_user/vme.c:1691 drivers/staging/vme_user/vme.c:1720
msgid "Pointer to VME device struct vme_dev assigned to driver instance."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:244
#: drivers/staging/vme_user/vme.c:437
msgid "``u32 address``"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:243
#: drivers/staging/vme_user/vme.c:436
msgid "Required VME address space."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:245
#: drivers/staging/vme_user/vme.c:319 drivers/staging/vme_user/vme.c:438
#: drivers/staging/vme_user/vme.c:515 drivers/staging/vme_user/vme.c:994
#: drivers/staging/vme_user/vme.c:1514
msgid "``u32 cycle``"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:244
#: drivers/staging/vme_user/vme.c:437
msgid "Required VME data transfer cycle type."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:245
msgid ""
"Request use of a VME window resource capable of being set for the requested "
"address space and data transfer cycle."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:249
#: drivers/staging/vme_user/vme.c:443
msgid "Pointer to VME resource on success, NULL on failure."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:311
msgid "Set VME slave window configuration."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:312
#: drivers/staging/vme_user/vme.c:364 drivers/staging/vme_user/vme.c:403
msgid "Pointer to VME slave resource."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:314
#: drivers/staging/vme_user/vme.c:511
msgid "``int enabled``"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:313
#: drivers/staging/vme_user/vme.c:510
msgid "State to which the window should be configured."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:315
#: drivers/staging/vme_user/vme.c:512
msgid "``unsigned long long vme_base``"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:314
#: drivers/staging/vme_user/vme.c:511
msgid "Base address for the window."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:316
#: drivers/staging/vme_user/vme.c:513
msgid "``unsigned long long size``"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:315
#: drivers/staging/vme_user/vme.c:512
msgid "Size of the VME window."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:317
msgid "``dma_addr_t buf_base``"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:316
msgid "Based address of buffer used to provide VME slave window storage."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:318
#: drivers/staging/vme_user/vme.c:514 drivers/staging/vme_user/vme.c:993
#: drivers/staging/vme_user/vme.c:1513
msgid "``u32 aspace``"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:317
#: drivers/staging/vme_user/vme.c:513
msgid "VME address space for the VME window."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:318
#: drivers/staging/vme_user/vme.c:514
msgid "VME data transfer cycle type for the VME window."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:319
msgid "Set configuration for provided VME slave window."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:322
#: drivers/staging/vme_user/vme.c:519
msgid ""
"Zero on success, -EINVAL if operation is not supported on this device, if an "
"invalid resource has been provided or invalid attributes are provided. "
"Hardware specific errors may also be returned."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:363
msgid "Retrieve VME slave window configuration."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:366
#: drivers/staging/vme_user/vme.c:564
msgid "``int *enabled``"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:365
#: drivers/staging/vme_user/vme.c:563
msgid "Pointer to variable for storing state."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:367
#: drivers/staging/vme_user/vme.c:565
msgid "``unsigned long long *vme_base``"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:366
#: drivers/staging/vme_user/vme.c:564
msgid "Pointer to variable for storing window base address."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:368
#: drivers/staging/vme_user/vme.c:566
msgid "``unsigned long long *size``"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:367
#: drivers/staging/vme_user/vme.c:565
msgid "Pointer to variable for storing window size."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:369
msgid "``dma_addr_t *buf_base``"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:368
msgid "Pointer to variable for storing slave buffer base address."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:370
#: drivers/staging/vme_user/vme.c:567 drivers/staging/vme_user/vme.c:1549
msgid "``u32 *aspace``"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:369
#: drivers/staging/vme_user/vme.c:566
msgid "Pointer to variable for storing VME address space."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:371
#: drivers/staging/vme_user/vme.c:568 drivers/staging/vme_user/vme.c:1550
msgid "``u32 *cycle``"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:370
#: drivers/staging/vme_user/vme.c:567
msgid "Pointer to variable for storing VME data transfer cycle type."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:371
msgid "Return configuration for provided VME slave window."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:374
#: drivers/staging/vme_user/vme.c:572
msgid ""
"Zero on success, -EINVAL if operation is not supported on this device or if "
"an invalid resource has been provided."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:402
msgid "Free VME slave window"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:404
msgid "Free the provided slave resource so that it may be reallocated."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:434
msgid "Request a VME master window resource."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:439
#: drivers/staging/vme_user/vme.c:516 drivers/staging/vme_user/vme.c:995
msgid "``u32 dwidth``"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:438
msgid "Required VME data transfer width."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:439
msgid ""
"Request use of a VME window resource capable of being set for the requested "
"address space, data transfer cycle and width."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:508
msgid "Set VME master window configuration."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:509
#: drivers/staging/vme_user/vme.c:562 drivers/staging/vme_user/vme.c:601
#: drivers/staging/vme_user/vme.c:650 drivers/staging/vme_user/vme.c:698
#: drivers/staging/vme_user/vme.c:739 drivers/staging/vme_user/vme.c:777
msgid "Pointer to VME master resource."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:515
msgid "VME data transfer width for the VME window."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:516
msgid "Set configuration for provided VME master window."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:561
msgid "Retrieve VME master window configuration."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:569
msgid "``u32 *dwidth``"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:568
msgid "Pointer to variable for storing VME data transfer width."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:569
msgid "Return configuration for provided VME master window."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:600
msgid "Read data from VME space into a buffer."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:603
#: drivers/staging/vme_user/vme.c:652
msgid "``void *buf``"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:602
msgid "Pointer to buffer where data should be transferred."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:604
#: drivers/staging/vme_user/vme.c:653 drivers/staging/vme_user/vme.c:1053
msgid "``size_t count``"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:603
#: drivers/staging/vme_user/vme.c:652 drivers/staging/vme_user/vme.c:1052
msgid "Number of bytes to transfer."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:605
#: drivers/staging/vme_user/vme.c:654 drivers/staging/vme_user/vme.c:703
msgid "``loff_t offset``"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:604
#: drivers/staging/vme_user/vme.c:653
msgid "Offset into VME master window at which to start transfer."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:605
msgid ""
"Perform read of count bytes of data from location on VME bus which maps into "
"the VME master window at offset to buf."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:609
msgid ""
"Number of bytes read, -EINVAL if resource is not a VME master resource or "
"read operation is not supported. -EFAULT returned if invalid offset is "
"provided. Hardware specific errors may also be returned."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:649
msgid "Write data out to VME space from a buffer."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:651
msgid "Pointer to buffer holding data to transfer."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:654
msgid ""
"Perform write of count bytes of data from buf to location on VME bus which "
"maps into the VME master window at offset."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:658
msgid ""
"Number of bytes written, -EINVAL if resource is not a VME master resource or "
"write operation is not supported. -EFAULT returned if invalid offset is "
"provided. Hardware specific errors may also be returned."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:697
msgid "Perform read-modify-write cycle."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:700
msgid "``unsigned int mask``"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:699
msgid "Bits to be compared and swapped in operation."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:701
msgid "``unsigned int compare``"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:700
msgid "Bits to be compared with data read from offset."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:702
msgid "``unsigned int swap``"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:701
msgid "Bits to be swapped in data read from offset."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:702
msgid "Offset into VME master window at which to perform operation."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:703
msgid ""
"Perform read-modify-write cycle on provided location: - Location on VME bus "
"is read. - Bits selected by mask are compared with compare. - Where a "
"selected bit matches that in compare and are selected in swap, the bit is "
"swapped. - Result written back to location on VME bus."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:711
msgid ""
"Bytes written on success, -EINVAL if resource is not a VME master resource "
"or RMW operation is not supported. Hardware specific errors may also be "
"returned."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:738
msgid "Mmap region of VME master window."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:741
msgid "``struct vm_area_struct *vma``"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:740
msgid "Pointer to definition of user mapping."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:741
msgid "Memory map a region of the VME master window into user space."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:744
msgid ""
"Zero on success, -EINVAL if resource is not a VME master resource or -EFAULT "
"if map exceeds window size. Other generic mmap errors may also be returned."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:776
msgid "Free VME master window"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:778
msgid "Free the provided master resource so that it may be reallocated."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:808
msgid "Request a DMA controller."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:811
msgid "``u32 route``"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:810
msgid "Required src/destination combination."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:811
msgid ""
"Request a VME DMA controller with capability to perform transfers between "
"requested source/destination combination."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:815
msgid "Pointer to VME DMA resource on success, NULL on failure."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:878
msgid "Create new VME DMA list."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:879
#: drivers/staging/vme_user/vme.c:1164
msgid "Pointer to VME DMA resource."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:880
msgid ""
"Create a new VME DMA list. It is the responsibility of the user to free the "
"list once it is no longer required with vme_dma_list_free()."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:884
msgid ""
"Pointer to new VME DMA list, NULL on allocation failure or invalid VME DMA "
"resource."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:912
msgid "Create \"Pattern\" type VME DMA list attribute."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:918
msgid "``u32 pattern``"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:913
msgid "Value to use used as pattern"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:915
msgid "``u32 type``"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:914
msgid "Type of pattern to be written."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:915
msgid ""
"Create VME DMA list attribute for pattern generation. It is the "
"responsibility of the user to free used attributes using "
"vme_dma_free_attribute()."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:920
#: drivers/staging/vme_user/vme.c:958 drivers/staging/vme_user/vme.c:1000
msgid "Pointer to VME DMA attribute, NULL on failure."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:951
msgid "Create \"PCI\" type VME DMA list attribute."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:957
msgid "``dma_addr_t address``"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:952
msgid "PCI base address for DMA transfer."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:953
msgid ""
"Create VME DMA list attribute pointing to a location on PCI for DMA "
"transfers. It is the responsibility of the user to free used attributes "
"using vme_dma_free_attribute()."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:990
msgid "Create \"VME\" type VME DMA list attribute."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:996
msgid "``unsigned long long address``"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:991
msgid "VME base address for DMA transfer."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:992
msgid "VME address space to use for DMA transfer."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:993
msgid "VME bus cycle to use for DMA transfer."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:994
msgid "VME data width to use for DMA transfer."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:995
msgid ""
"Create VME DMA list attribute pointing to a location on the VME bus for DMA "
"transfers. It is the responsibility of the user to free used attributes "
"using vme_dma_free_attribute()."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1034
msgid "Free DMA list attribute."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1040
msgid "``struct vme_dma_attr *attributes``"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1035
msgid "Pointer to DMA list attribute."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1036
msgid ""
"Free VME DMA list attribute. VME DMA list attributes can be safely freed "
"once vme_dma_list_add() has returned."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1048
msgid "Add entry to a VME DMA list."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1054
#: drivers/staging/vme_user/vme.c:1096 drivers/staging/vme_user/vme.c:1127
msgid "``struct vme_dma_list *list``"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1049
#: drivers/staging/vme_user/vme.c:1091 drivers/staging/vme_user/vme.c:1122
msgid "Pointer to VME list."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1051
msgid "``struct vme_dma_attr *src``"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1050
msgid "Pointer to DMA list attribute to use as source."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1052
msgid "``struct vme_dma_attr *dest``"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1051
msgid "Pointer to DMA list attribute to use as destination."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1053
msgid ""
"Add an entry to the provided VME DMA list. Entry requires pointers to source "
"and destination DMA attributes and a count."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1056
msgid ""
"Please note, the attributes supported as source and destinations for "
"transfers are hardware dependent."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1060
msgid ""
"Zero on success, -EINVAL if operation is not supported on this device or if "
"the link list has already been submitted for execution. Hardware specific "
"errors also possible."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1090
msgid "Queue a VME DMA list for execution."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1092
msgid ""
"Queue the provided VME DMA list for execution. The call will return once the "
"list has been executed."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1096
msgid ""
"Zero on success, -EINVAL if operation is not supported on this device. "
"Hardware specific errors also possible."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1121
msgid "Free a VME DMA list."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1123
msgid "Free the provided DMA list and all its entries."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1126
msgid ""
"Zero on success, -EINVAL on invalid VME resource, -EBUSY if resource is "
"still in use. Hardware specific errors also possible."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1163
msgid "Free a VME DMA resource."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1165
msgid "Free the provided DMA resource so that it may be reallocated."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1168
msgid ""
"Zero on success, -EINVAL on invalid VME resource, -EBUSY if resource is "
"still active."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1275
msgid "Request a specific VME interrupt."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1278
#: drivers/staging/vme_user/vme.c:1338 drivers/staging/vme_user/vme.c:1382
msgid "``int level``"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1277
msgid "Interrupt priority being requested."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1279
#: drivers/staging/vme_user/vme.c:1339 drivers/staging/vme_user/vme.c:1383
msgid "``int statid``"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1278
msgid "Interrupt vector being requested."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1280
msgid "``void (*callback)(int, int, void *)``"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1279
msgid "Pointer to callback function called when VME interrupt/vector received."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1282
msgid "``void *priv_data``"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1281
#: drivers/staging/vme_user/vme.c:1585
msgid "Generic pointer that will be passed to the callback function."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1282
msgid ""
"Request callback to be attached as a handler for VME interrupts with "
"provided level and statid."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1286
msgid ""
"Zero on success, -EINVAL on invalid vme device, level or if the function is "
"not supported, -EBUSY if the level/statid combination is already in use. "
"Hardware specific errors also possible."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1335
msgid "Free a VME interrupt."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1337
msgid "Interrupt priority of interrupt being freed."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1338
msgid "Interrupt vector of interrupt being freed."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1339
msgid "Remove previously attached callback from VME interrupt priority/vector."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1379
msgid "Generate VME interrupt."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1381
msgid "Interrupt priority at which to assert the interrupt."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1382
msgid "Interrupt vector to associate with the interrupt."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1383
msgid ""
"Generate a VME interrupt of the provided level and with the provided statid."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1387
msgid ""
"Zero on success, -EINVAL on invalid vme device, level or if the function is "
"not supported. Hardware specific errors also possible."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1416
msgid "Request a VME location monitor"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1418
msgid ""
"Allocate a location monitor resource to the driver. A location monitor "
"allows the driver to monitor accesses to a contiguous number of addresses on "
"the VME bus."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1423
msgid "Pointer to a VME resource on success or NULL on failure."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1482
msgid "Determine number of VME Addresses monitored"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1483
#: drivers/staging/vme_user/vme.c:1510 drivers/staging/vme_user/vme.c:1546
#: drivers/staging/vme_user/vme.c:1582 drivers/staging/vme_user/vme.c:1619
#: drivers/staging/vme_user/vme.c:1652
msgid "Pointer to VME location monitor resource."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1484
msgid ""
"The number of contiguous addresses monitored is hardware dependent. Return "
"the number of contiguous addresses monitored by the location monitor."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1489
msgid ""
"Count of addresses monitored or -EINVAL when provided with an invalid "
"location monitor resource."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1509
msgid "Configure location monitor"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1512
msgid "``unsigned long long lm_base``"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1511
msgid "Base address to monitor."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1512
msgid "VME address space to monitor."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1513
msgid "VME bus cycle type to monitor."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1514
msgid ""
"Set the base address, address space and cycle type of accesses to be "
"monitored by the location monitor."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1518
#: drivers/staging/vme_user/vme.c:1554 drivers/staging/vme_user/vme.c:1591
#: drivers/staging/vme_user/vme.c:1625
msgid ""
"Zero on success, -EINVAL when provided with an invalid location monitor "
"resource or function is not supported. Hardware specific errors may also be "
"returned."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1545
msgid "Retrieve location monitor settings"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1548
msgid "``unsigned long long *lm_base``"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1547
msgid "Pointer used to output the base address monitored."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1548
msgid "Pointer used to output the address space monitored."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1549
msgid "Pointer used to output the VME bus cycle type monitored."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1550
msgid ""
"Retrieve the base address, address space and cycle type of accesses to be "
"monitored by the location monitor."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1581
msgid "Provide callback for location monitor address"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1584
#: drivers/staging/vme_user/vme.c:1621
msgid "``int monitor``"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1583
msgid "Offset to which callback should be attached."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1585
msgid "``void (*callback)(void *)``"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1584
msgid "Pointer to callback function called when triggered."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1586
msgid "``void *data``"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1586
msgid ""
"Attach a callback to the specified offset into the location monitors "
"monitored addresses. A generic pointer is provided to allow data to be "
"passed to the callback when called."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1618
msgid "Remove callback for location monitor address"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1620
msgid "Offset to which callback should be removed."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1621
msgid ""
"Remove the callback associated with the specified offset into the location "
"monitors monitored addresses."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1651
msgid "Free allocated VME location monitor"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1653
msgid "Free allocation of a VME location monitor."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1655
msgid "WARNING: This function currently expects that any callbacks that have"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1656
msgid "been attached to the location monitor have been removed."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1659
msgid ""
"Zero on success, -EINVAL when provided with an invalid location monitor "
"resource."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1690
msgid "Retrieve slot ID"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1692
msgid "Retrieve the slot ID associated with the provided VME device."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1695
msgid ""
"The slot ID on success, -EINVAL if VME bridge cannot be determined or the "
"function is not supported. Hardware specific errors may also be returned."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1719
msgid "Retrieve bus number"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1721
msgid "Retrieve the bus enumeration associated with the provided VME device."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1724
msgid "The bus number on success, -EINVAL if VME bridge cannot be determined."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1874
msgid "Register a VME driver"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1880
#: drivers/staging/vme_user/vme.c:1909
msgid "``struct vme_driver *drv``"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1875
msgid "Pointer to VME driver structure to register."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1877
msgid "``unsigned int ndevs``"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1876
msgid "Maximum number of devices to allow to be enumerated."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1877
msgid "Register a VME device driver with the VME subsystem."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1880
msgid "Zero on success, error value on registration failure."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1903
msgid "Unregister a VME driver"
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1904
msgid "Pointer to VME driver structure to unregister."
msgstr ""

#: ../../../driver-api/vme:296: drivers/staging/vme_user/vme.c:1905
msgid "Unregister a VME device driver from the VME subsystem."
msgstr ""
