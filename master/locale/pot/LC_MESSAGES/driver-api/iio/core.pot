# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-20 11:24+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../driver-api/iio/core.rst:3
msgid "Core elements"
msgstr ""

#: ../../../driver-api/iio/core.rst:5
msgid ""
"The Industrial I/O core offers both a unified framework for writing drivers "
"for many different types of embedded sensors and a standard interface to "
"user space applications manipulating sensors. The implementation can be "
"found under :file:`drivers/iio/industrialio-*`"
msgstr ""

#: ../../../driver-api/iio/core.rst:11
msgid "Industrial I/O Devices"
msgstr ""

#: ../../../driver-api/iio/core.rst:13
msgid "struct iio_dev - industrial I/O device"
msgstr ""

#: ../../../driver-api/iio/core.rst:14
msgid "iio_device_alloc() - allocate an :c:type:`iio_dev` from a driver"
msgstr ""

#: ../../../driver-api/iio/core.rst:15
msgid "iio_device_free() - free an :c:type:`iio_dev` from a driver"
msgstr ""

#: ../../../driver-api/iio/core.rst:16
msgid "iio_device_register() - register a device with the IIO subsystem"
msgstr ""

#: ../../../driver-api/iio/core.rst:17
msgid "iio_device_unregister() - unregister a device from the IIO subsystem"
msgstr ""

#: ../../../driver-api/iio/core.rst:20
msgid ""
"An IIO device usually corresponds to a single hardware sensor and it "
"provides all the information needed by a driver handling a device. Let's "
"first have a look at the functionality embedded in an IIO device then we "
"will show how a device driver makes use of an IIO device."
msgstr ""

#: ../../../driver-api/iio/core.rst:25
msgid ""
"There are two ways for a user space application to interact with an IIO "
"driver."
msgstr ""

#: ../../../driver-api/iio/core.rst:27
msgid ""
":file:`/sys/bus/iio/devices/iio:device{X}/`, this represents a hardware "
"sensor and groups together the data channels of the same chip."
msgstr ""

#: ../../../driver-api/iio/core.rst:29
msgid ""
":file:`/dev/iio:device{X}`, character device node interface used for "
"buffered data transfer and for events information retrieval."
msgstr ""

#: ../../../driver-api/iio/core.rst:32
msgid ""
"A typical IIO driver will register itself as an :doc:`I2C <../i2c>` or :doc:"
"`SPI <../spi>` driver and will create two routines, probe and remove."
msgstr ""

#: ../../../driver-api/iio/core.rst:35
msgid "At probe:"
msgstr ""

#: ../../../driver-api/iio/core.rst:37
msgid "Call iio_device_alloc(), which allocates memory for an IIO device."
msgstr ""

#: ../../../driver-api/iio/core.rst:38
msgid ""
"Initialize IIO device fields with driver specific information (e.g. device "
"name, device channels)."
msgstr ""

#: ../../../driver-api/iio/core.rst:40
msgid ""
"Call iio_device_register(), this registers the device with the IIO core. "
"After this call the device is ready to accept requests from user space "
"applications."
msgstr ""

#: ../../../driver-api/iio/core.rst:44
msgid "At remove, we free the resources allocated in probe in reverse order:"
msgstr ""

#: ../../../driver-api/iio/core.rst:46
msgid "iio_device_unregister(), unregister the device from the IIO core."
msgstr ""

#: ../../../driver-api/iio/core.rst:47
msgid "iio_device_free(), free the memory allocated for the IIO device."
msgstr ""

#: ../../../driver-api/iio/core.rst:50
msgid "IIO device sysfs interface"
msgstr ""

#: ../../../driver-api/iio/core.rst:52
msgid ""
"Attributes are sysfs files used to expose chip info and also allowing "
"applications to set various configuration parameters. For device with index "
"X, attributes can be found under /sys/bus/iio/devices/iio:deviceX/ "
"directory.  Common attributes are:"
msgstr ""

#: ../../../driver-api/iio/core.rst:57
msgid ":file:`name`, description of the physical chip."
msgstr ""

#: ../../../driver-api/iio/core.rst:58
msgid ""
":file:`dev`, shows the major:minor pair associated with :file:`/dev/iio:"
"deviceX` node."
msgstr ""

#: ../../../driver-api/iio/core.rst:60
msgid ""
":file:`sampling_frequency_available`, available discrete set of sampling "
"frequency values for device."
msgstr ""

#: ../../../driver-api/iio/core.rst:62
msgid ""
"Available standard attributes for IIO devices are described in the :file:"
"Documentation/ABI/testing/sysfs-bus-iio file in the Linux kernel sources."
msgstr ""

#: ../../../driver-api/iio/core.rst:67
msgid "IIO device channels"
msgstr ""

#: ../../../driver-api/iio/core.rst:69
msgid "struct iio_chan_spec - specification of a single channel"
msgstr ""

#: ../../../driver-api/iio/core.rst:71
msgid ""
"An IIO device channel is a representation of a data channel. An IIO device "
"can have one or multiple channels. For example:"
msgstr ""

#: ../../../driver-api/iio/core.rst:74
msgid ""
"a thermometer sensor has one channel representing the temperature "
"measurement."
msgstr ""

#: ../../../driver-api/iio/core.rst:75
msgid ""
"a light sensor with two channels indicating the measurements in the visible "
"and infrared spectrum."
msgstr ""

#: ../../../driver-api/iio/core.rst:77
msgid ""
"an accelerometer can have up to 3 channels representing acceleration on X, Y "
"and Z axes."
msgstr ""

#: ../../../driver-api/iio/core.rst:80
msgid ""
"An IIO channel is described by the struct iio_chan_spec. A thermometer "
"driver for the temperature sensor in the example above would have to "
"describe its channel as follows::"
msgstr ""

#: ../../../driver-api/iio/core.rst:91
msgid ""
"Channel sysfs attributes exposed to userspace are specified in the form of "
"bitmasks. Depending on their shared info, attributes can be set in one of "
"the following masks:"
msgstr ""

#: ../../../driver-api/iio/core.rst:95
msgid "**info_mask_separate**, attributes will be specific to this channel"
msgstr ""

#: ../../../driver-api/iio/core.rst:97
msgid ""
"**info_mask_shared_by_type**, attributes are shared by all channels of the "
"same type"
msgstr ""

#: ../../../driver-api/iio/core.rst:99
msgid ""
"**info_mask_shared_by_dir**, attributes are shared by all channels of the "
"same direction"
msgstr ""

#: ../../../driver-api/iio/core.rst:101
msgid "**info_mask_shared_by_all**, attributes are shared by all channels"
msgstr ""

#: ../../../driver-api/iio/core.rst:103
msgid ""
"When there are multiple data channels per channel type we have two ways to "
"distinguish between them:"
msgstr ""

#: ../../../driver-api/iio/core.rst:106
msgid ""
"set **.modified** field of :c:type:`iio_chan_spec` to 1. Modifiers are "
"specified using **.channel2** field of the same :c:type:`iio_chan_spec` "
"structure and are used to indicate a physically unique characteristic of the "
"channel such as its direction or spectral response. For example, a light "
"sensor can have two channels, one for infrared light and one for both "
"infrared and visible light."
msgstr ""

#: ../../../driver-api/iio/core.rst:112
msgid ""
"set **.indexed** field of :c:type:`iio_chan_spec` to 1. In this case the "
"channel is simply another instance with an index specified by the **."
"channel** field."
msgstr ""

#: ../../../driver-api/iio/core.rst:116
msgid "Here is how we can make use of the channel's modifiers::"
msgstr ""

#: ../../../driver-api/iio/core.rst:140
msgid ""
"This channel's definition will generate two separate sysfs files for raw "
"data retrieval:"
msgstr ""

#: ../../../driver-api/iio/core.rst:143
msgid ":file:`/sys/bus/iio/devices/iio:device{X}/in_intensity_ir_raw`"
msgstr ""

#: ../../../driver-api/iio/core.rst:144
msgid ":file:`/sys/bus/iio/devices/iio:device{X}/in_intensity_both_raw`"
msgstr ""

#: ../../../driver-api/iio/core.rst:146
msgid "one file for processed data:"
msgstr ""

#: ../../../driver-api/iio/core.rst:148
msgid ":file:`/sys/bus/iio/devices/iio:device{X}/in_illuminance_input`"
msgstr ""

#: ../../../driver-api/iio/core.rst:150
msgid "and one shared sysfs file for sampling frequency:"
msgstr ""

#: ../../../driver-api/iio/core.rst:152
msgid ":file:`/sys/bus/iio/devices/iio:device{X}/sampling_frequency`."
msgstr ""

#: ../../../driver-api/iio/core.rst:154
msgid "Here is how we can make use of the channel's indexing::"
msgstr ""

#: ../../../driver-api/iio/core.rst:171
msgid ""
"This will generate two separate attributes files for raw data retrieval:"
msgstr ""

#: ../../../driver-api/iio/core.rst:173
msgid ""
":file:`/sys/bus/iio/devices/iio:device{X}/in_voltage0_raw`, representing "
"voltage measurement for channel 0."
msgstr ""

#: ../../../driver-api/iio/core.rst:175
msgid ""
":file:`/sys/bus/iio/devices/iio:device{X}/in_voltage1_raw`, representing "
"voltage measurement for channel 1."
msgstr ""

#: ../../../driver-api/iio/core.rst:179
msgid "More details"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:42
msgid "Extended channel info attribute"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:46
#: include/linux/iio/iio.h:65 include/linux/iio/iio.h:130
#: include/linux/iio/iio.h:160 include/linux/iio/iio.h:183
#: include/linux/iio/iio.h:204 include/linux/iio/iio.h:419
#: include/linux/iio/iio.h:560 include/linux/iio/iio.h:579
msgid "**Definition**::"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:56
#: include/linux/iio/iio.h:74 include/linux/iio/iio.h:136
#: include/linux/iio/iio.h:171 include/linux/iio/iio.h:194
#: include/linux/iio/iio.h:239 include/linux/iio/iio.h:444
#: include/linux/iio/iio.h:570 include/linux/iio/iio.h:602
msgid "**Members**"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:43
#: include/linux/iio/iio.h:598 include/linux/iio/iio.h:795
#: include/linux/iio/iio.h:809
msgid "``name``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:44
msgid "Info attribute name"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:44
msgid "``shared``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:45
msgid "Whether this attribute is shared between all channels."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:45
msgid "``read``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:46
msgid "Read callback for this info attribute, may be NULL."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:46
msgid "``write``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:47
msgid "Write callback for this info attribute, may be NULL."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:47
msgid "``private``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:48
msgid "Data private to the driver."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:61
msgid "Enum channel info attribute"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:62
msgid "``items``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:63
msgid "An array of strings."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:63
msgid "``num_items``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:64
msgid "Length of the item array."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:64
msgid "``set``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:65
msgid "Set callback function, may be NULL."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:65
msgid "``get``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:66
msgid "Get callback function, may be NULL."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:69
#: include/linux/iio/iio.h:97 include/linux/iio/iio.h:114
#: include/linux/iio/iio.h:300 include/linux/iio/iio.h:317
#: include/linux/iio/iio.h:651 include/linux/iio/iio.h:735
#: include/linux/iio/iio.h:756 include/linux/iio/iio.h:768
#: include/linux/iio/iio.h:797 include/linux/iio/iio.h:811
#: include/linux/iio/iio.h:853 include/linux/iio/iio.h:862
#: include/linux/iio/iio.h:894 include/linux/iio/iio.h:950
#: include/linux/iio/iio.h:958 include/linux/iio/iio.h:967
#: include/linux/iio/iio.h:975 ../../../driver-api/iio/core:181:
#: drivers/iio/industrialio-core.c:203 drivers/iio/industrialio-core.c:626
#: drivers/iio/industrialio-core.c:1750 drivers/iio/industrialio-core.c:2174
#: drivers/iio/industrialio-core.c:2201 drivers/iio/industrialio-core.c:2218
#: drivers/iio/industrialio-core.c:2243
msgid "**Description**"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:66
msgid ""
"The iio_enum struct can be used to implement enum style channel attributes. "
"Enum style attributes are those which have a set of strings which map to "
"unsigned integer values. The IIO enum helper code takes care of mapping "
"between value and string as well as generating a \"_available\" file which "
"contains a list of all available items. The set callback will be called when "
"the attribute is updated. The last parameter is the index to the newly "
"activated item. The get callback will be used to query the currently active "
"item and is supposed to return the index for it."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:94
msgid "``IIO_ENUM (_name, _shared, _e)``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:92
msgid "Initialize enum extended channel attribute"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:96
#: include/linux/iio/iio.h:113 include/linux/iio/iio.h:147
#: include/linux/iio/iio.h:300 include/linux/iio/iio.h:317
#: include/linux/iio/iio.h:643 include/linux/iio/iio.h:651
#: include/linux/iio/iio.h:700 include/linux/iio/iio.h:713
#: include/linux/iio/iio.h:724 include/linux/iio/iio.h:735
#: include/linux/iio/iio.h:756 include/linux/iio/iio.h:769
#: include/linux/iio/iio.h:796 include/linux/iio/iio.h:810
#: include/linux/iio/iio.h:841 include/linux/iio/iio.h:854
#: include/linux/iio/iio.h:862 include/linux/iio/iio.h:894
#: include/linux/iio/iio.h:926 include/linux/iio/iio.h:937
#: include/linux/iio/iio.h:951 include/linux/iio/iio.h:959
#: include/linux/iio/iio.h:968 include/linux/iio/iio.h:976
#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:204
#: drivers/iio/industrialio-core.c:221 drivers/iio/industrialio-core.c:277
#: drivers/iio/industrialio-core.c:305 drivers/iio/industrialio-core.c:319
#: drivers/iio/industrialio-core.c:625 drivers/iio/industrialio-core.c:721
#: drivers/iio/industrialio-core.c:960 drivers/iio/industrialio-core.c:1673
#: drivers/iio/industrialio-core.c:1734 drivers/iio/industrialio-core.c:1750
#: drivers/iio/industrialio-core.c:1998 drivers/iio/industrialio-core.c:2132
#: drivers/iio/industrialio-core.c:2175 drivers/iio/industrialio-core.c:2202
#: drivers/iio/industrialio-core.c:2219 drivers/iio/industrialio-core.c:2244
#: drivers/iio/industrialio-core.c:2259
msgid "**Parameters**"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:98
#: include/linux/iio/iio.h:115
msgid "``_name``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:93
msgid "Attribute name"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:95
#: include/linux/iio/iio.h:112 include/linux/iio/iio.h:149
msgid "``_shared``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:94
#: include/linux/iio/iio.h:111 include/linux/iio/iio.h:144
msgid "Whether the attribute is shared between all channels"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:96
#: include/linux/iio/iio.h:113
msgid "``_e``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:95
#: include/linux/iio/iio.h:112
msgid "Pointer to an iio_enum struct"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:96
msgid "This should usually be used together with IIO_ENUM_AVAILABLE()"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:111
msgid "``IIO_ENUM_AVAILABLE (_name, _shared, _e)``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:109
msgid "Initialize enum available extended channel attribute"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:110
msgid "Attribute name (\"_available\" will be appended to the name)"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:113
msgid ""
"Creates a read only attribute which lists all the available enum items in a "
"space separated list. This should usually be used together with IIO_ENUM()"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:126
msgid "iio mounting matrix"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:127
msgid "``rotation``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:128
msgid ""
"3 dimensional space rotation matrix defining sensor alignment with main "
"hardware"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:145
msgid "``IIO_MOUNT_MATRIX (_shared, _get)``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:143
msgid "Initialize mount matrix extended channel attribute"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:146
msgid "``_get``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:145
msgid "Pointer to an iio_get_mount_matrix_t accessor"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:156
msgid "specification for a channel event"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:157
#: include/linux/iio/iio.h:201 include/linux/iio/iio.h:798
#: include/linux/iio/iio.h:812
msgid "``type``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:158
msgid "Type of the event"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:158
msgid "``dir``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:159
msgid "Direction of the event"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:159
msgid "``mask_separate``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:160
msgid ""
"Bit mask of enum iio_event_info values. Attributes set in this mask will be "
"registered per channel."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:161
msgid "``mask_shared_by_type``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:162
msgid ""
"Bit mask of enum iio_event_info values. Attributes set in this mask will be "
"shared by channel type."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:163
msgid "``mask_shared_by_dir``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:164
msgid ""
"Bit mask of enum iio_event_info values. Attributes set in this mask will be "
"shared by channel type and direction."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:166
msgid "``mask_shared_by_all``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:167
msgid ""
"Bit mask of enum iio_event_info values. Attributes set in this mask will be "
"shared by all channels."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:179
msgid "specification for channel data format in buffer"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:180
msgid "``sign``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:181
msgid "'s' or 'u' to specify signed or unsigned"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:181
msgid "``realbits``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:182
msgid "Number of valid bits of data"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:182
msgid "``storagebits``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:183
msgid "Realbits + padding"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:183
msgid "``shift``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:184
msgid "Shift right by this before masking out realbits."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:184
msgid "``repeat``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:185
msgid ""
"Number of times real/storage bits repeats. When the repeat element is more "
"than 1, then the type element in sysfs will show a repeat value. Otherwise, "
"the number of repetitions is omitted."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:188
msgid "``endianness``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:189
msgid "little or big endian"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:200
msgid "specification of a single channel"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:202
msgid "What type of measurement is the channel making."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:202
msgid "``channel``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:203
msgid "What number do we wish to assign the channel."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:203
msgid "``channel2``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:204
msgid ""
"If there is a second number for a differential channel then this is it. If "
"modified is set then the value here specifies the modifier."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:206
msgid "``address``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:207
msgid "Driver specific identifier."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:207
msgid "``scan_index``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:208
msgid "Monotonic index to give ordering in scans when read from a buffer."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:1
msgid "``{unnamed_union}``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:2
msgid "anonymous"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:209
msgid "``scan_type``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:210
msgid ""
"struct describing the scan type - mutually exclusive with ext_scan_type."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:1
msgid "``{unnamed_struct}``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:211
msgid "``ext_scan_type``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:212
msgid ""
"Used in rare cases where there is more than one scan format for a channel. "
"When this is used, the flag has_ext_scan_type must be set and the driver "
"must implement get_current_scan_type in struct iio_info."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:215
msgid "``num_ext_scan_type``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:216
msgid "Number of elements in ext_scan_type."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:216
msgid "``info_mask_separate``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:217
msgid "What information is to be exported that is specific to this channel."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:218
msgid "``info_mask_separate_available``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:219
msgid ""
"What availability information is to be exported that is specific to this "
"channel."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:220
msgid "``info_mask_shared_by_type``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:221
msgid ""
"What information is to be exported that is shared by all channels of the "
"same type."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:222
msgid "``info_mask_shared_by_type_available``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:223
msgid ""
"What availability information is to be exported that is shared by all "
"channels of the same type."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:225
msgid "``info_mask_shared_by_dir``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:226
msgid ""
"What information is to be exported that is shared by all channels of the "
"same direction."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:227
msgid "``info_mask_shared_by_dir_available``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:228
msgid ""
"What availability information is to be exported that is shared by all "
"channels of the same direction."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:230
msgid "``info_mask_shared_by_all``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:231
msgid "What information is to be exported that is shared by all channels."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:232
msgid "``info_mask_shared_by_all_available``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:233
msgid ""
"What availability information is to be exported that is shared by all "
"channels."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:234
msgid "``event_spec``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:235
msgid "Array of events which should be registered for this channel."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:236
msgid "``num_event_specs``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:237
msgid "Size of the event_spec array."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:237
msgid "``ext_info``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:238
msgid ""
"Array of extended info attributes for this channel. The array is NULL "
"terminated, the last element should have its name field set to NULL."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:240
msgid "``extend_name``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:241
msgid ""
"Allows labeling of channel attributes with an informative name. Note this "
"has no effect codes etc, unlike modifiers. This field is deprecated in "
"favour of providing iio_info->read_label() to override the label, which "
"unlike **extend_name** does not affect sysfs filenames."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:246
msgid "``datasheet_name``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:247
msgid ""
"A name used in in-kernel mapping of channels. It should correspond to the "
"first name that the channel is referred to by in the datasheet (e.g. IND), "
"or the nearest possible compound name (e.g. IND-INC)."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:250
msgid "``modified``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:251
msgid ""
"Does a modifier apply to this channel. What these are depends on the channel "
"type.  Modifier is set in channel2. Examples are IIO_MOD_X for axial sensors "
"about the 'x' axis."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:254
msgid "``indexed``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:255
msgid ""
"Specify the channel has a numerical index. If not, the channel index number "
"will be suppressed for sysfs attributes but not for event codes."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:257
msgid "``output``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:258
msgid "Channel is output."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:258
msgid "``differential``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:259
msgid "Channel is differential."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:259
msgid "``has_ext_scan_type``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:260
msgid "True if ext_scan_type is used instead of scan_type."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:296
msgid "Checks whether a channel supports a info attribute"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:302
#: include/linux/iio/iio.h:319 include/linux/iio/iio.h:893
msgid "``const struct iio_chan_spec *chan``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:297
#: include/linux/iio/iio.h:314
msgid "The channel to be queried"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:299
#: include/linux/iio/iio.h:316
msgid "``enum iio_chan_info_enum type``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:298
msgid "Type of the info attribute to be checked"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:299
msgid ""
"Returns true if the channels supports reporting values for the given info "
"attribute type, false otherwise."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:313
msgid "Checks if a channel has an available attribute"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:315
msgid "Type of the available attribute to be checked"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:316
msgid ""
"Returns true if the channel supports reporting available values for the "
"given attribute type, false otherwise."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:415
msgid "constant information about device"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:416
msgid "``event_attrs``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:417
msgid "event control attributes"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:417
msgid "``attrs``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:418
msgid "general purpose device attributes"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:418
msgid "``read_raw``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:419
msgid ""
"function to request a value from the device. mask specifies which value. "
"Note 0 means a reading of the channel in question.  Return value will "
"specify the type of value returned by the device. val and val2 will contain "
"the elements making up the returned value."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:423
msgid "``read_raw_multi``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:424
msgid ""
"function to return values from the device. mask specifies which value. Note "
"0 means a reading of the channel in question.  Return value will specify the "
"type of value returned by the device. vals pointer contain the elements "
"making up the returned value. max_len specifies maximum number of elements "
"vals pointer can contain. val_len is used to return length of valid elements "
"in vals."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:431
msgid "``read_avail``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:432
msgid ""
"function to return the available values from the device. mask specifies "
"which value. Note 0 means the available values for the channel in question.  "
"Return value specifies if a IIO_AVAIL_LIST or a IIO_AVAIL_RANGE is returned "
"in vals. The type of the vals are returned in type and the number of vals is "
"returned in length. For ranges, there are always three vals returned; min, "
"step and max. For lists, all possible values are enumerated."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:439
msgid "``write_raw``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:440
msgid ""
"function to write a value to the device. Parameters are the same as for "
"read_raw."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:441
msgid "``read_label``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:442
msgid ""
"function to request label name for a specified label, for better channel "
"identification."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:443
msgid "``write_raw_get_fmt``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:444
msgid ""
"callback function to query the expected format/precision. If not set by the "
"driver, write_raw returns IIO_VAL_INT_PLUS_MICRO."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:446
msgid "``read_event_config``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:447
msgid "find out if the event is enabled."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:447
msgid "``write_event_config``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:448
msgid "set if the event is enabled."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:448
msgid "``read_event_value``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:449
msgid "read a configuration value associated with the event."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:449
msgid "``write_event_value``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:450
msgid "write a configuration value for the event."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:450
msgid "``read_event_label``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:451
msgid ""
"function to request label name for a specified label, for better event "
"identification."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:452
msgid "``validate_trigger``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:453
msgid "function to validate the trigger when the current trigger gets changed."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:454
msgid "``get_current_scan_type``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:455
msgid ""
"must be implemented by drivers that use ext_scan_type in the channel spec to "
"return the index of the currently active ext_scan type for a channel."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:457
msgid "``update_scan_mode``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:458
msgid "function to configure device and scan buffer when channels have changed"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:459
msgid "``debugfs_reg_access``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:460
msgid "function to read or write register value of device"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:460
msgid "``fwnode_xlate``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:461
msgid "fwnode based function pointer to obtain channel specifier index."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:461
msgid "``hwfifo_set_watermark``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:462
msgid ""
"function pointer to set the current hardware fifo watermark level; see "
"hwfifo_* entries in Documentation/ABI/testing/sysfs-bus-iio for details on "
"how the hardware fifo operates"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:465
msgid "``hwfifo_flush_to_buffer``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:466
msgid ""
"function pointer to flush the samples stored in the hardware fifo to the "
"device buffer. The driver should not flush more than count samples. The "
"function must return the number of samples flushed, 0 if no samples were "
"flushed or a negative integer if no samples were flushed and there was an "
"error."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:556
msgid "buffer setup related callbacks"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:557
msgid "``preenable``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:558
msgid "[DRIVER] function to run prior to marking buffer enabled"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:558
msgid "``postenable``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:559
msgid "[DRIVER] function to run after marking buffer enabled"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:559
msgid "``predisable``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:560
msgid "[DRIVER] function to run prior to marking buffer disabled"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:561
msgid "``postdisable``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:562
msgid "[DRIVER] function to run after marking buffer disabled"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:562
msgid "``validate_scan_mask``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:563
msgid ""
"[DRIVER] function callback to check whether a given scan mask is valid for "
"the device."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:575
msgid "industrial I/O device"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:576
msgid "``modes``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:577
msgid ""
"[DRIVER] bitmask listing all the operating modes supported by the IIO "
"device. This list should be initialized before registering the IIO device. "
"It can also be filed up by the IIO core, as a result of enabling particular "
"features in the driver (see iio_triggered_event_setup())."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:582
#: include/linux/iio/iio.h:653
msgid "``dev``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:583
msgid "[DRIVER] device structure, should be assigned a parent and owner"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:584
msgid "``buffer``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:585
msgid "[DRIVER] any buffer present"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:585
msgid "``scan_bytes``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:586
msgid "[INTERN] num bytes captured to be fed to buffer demux"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:586
msgid "``available_scan_masks``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:587
msgid ""
"[DRIVER] optional array of allowed bitmasks. Sort the array in order of "
"preference, the most preferred masks first."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:589
msgid "``masklength``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:590
msgid "[INTERN] the length of the mask established from channels"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:591
msgid "``active_scan_mask``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:592
msgid "[INTERN] union of all scan masks requested by buffers"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:592
msgid "``scan_timestamp``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:593
msgid "[INTERN] set if any buffers have requested timestamp"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:593
msgid "``trig``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:594
msgid "[INTERN] current device trigger (buffer modes)"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:594
msgid "``pollfunc``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:595
msgid "[DRIVER] function run on trigger being received"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:595
msgid "``pollfunc_event``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:596
msgid "[DRIVER] function run on events trigger being received"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:596
msgid "``channels``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:597
msgid "[DRIVER] channel specification structure table"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:597
msgid "``num_channels``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:598
msgid "[DRIVER] number of channels specified in **channels**."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:599
msgid "[DRIVER] name of the device."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:599
msgid "``label``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:600
msgid "[DRIVER] unique name to identify which device this is"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:600
msgid "``info``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:601
msgid "[DRIVER] callbacks and constant info from driver"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:601
msgid "``setup_ops``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:602
msgid "[DRIVER] callbacks to call before and after buffer enable/disable"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:603
msgid "``priv``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:604
msgid ""
"[DRIVER] reference to driver's private information **MUST** be accessed "
"**ONLY** via iio_priv() helper"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:641
msgid "``iio_device_register (indio_dev)``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:639
msgid "register a device with the IIO subsystem"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:645
#: include/linux/iio/iio.h:650 include/linux/iio/iio.h:939
msgid "``indio_dev``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:640
#: include/linux/iio/iio.h:649
msgid "Device structure filled by the device driver"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:649
msgid "``devm_iio_device_register (dev, indio_dev)``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:647
msgid "Resource-managed iio_device_register()"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:648
msgid "Device to allocate iio_dev for"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:650
msgid ""
"Managed iio_device_register.  The IIO device registered with this function "
"is automatically unregistered on driver detach. This function calls "
"iio_device_register() internally. Refer to that function for more "
"information."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:655
#: include/linux/iio/iio.h:723 include/linux/iio/iio.h:898
#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:205
#: drivers/iio/industrialio-core.c:220 drivers/iio/industrialio-core.c:277
#: drivers/iio/industrialio-core.c:304 drivers/iio/industrialio-core.c:318
#: drivers/iio/industrialio-core.c:628 drivers/iio/industrialio-core.c:726
#: drivers/iio/industrialio-core.c:962 drivers/iio/industrialio-core.c:1673
#: drivers/iio/industrialio-core.c:1752 drivers/iio/industrialio-core.c:1998
#: drivers/iio/industrialio-core.c:2180 drivers/iio/industrialio-core.c:2222
msgid "**Return**"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:656
msgid "0 on success, negative error number on failure."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:696
msgid "reference counted deallocation of struct device"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:702
#: include/linux/iio/iio.h:726 include/linux/iio/iio.h:737
#: include/linux/iio/iio.h:758 include/linux/iio/iio.h:843
#: include/linux/iio/iio.h:856 include/linux/iio/iio.h:864
#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:206
#: drivers/iio/industrialio-core.c:223 drivers/iio/industrialio-core.c:279
#: drivers/iio/industrialio-core.c:2000 drivers/iio/industrialio-core.c:2134
#: drivers/iio/industrialio-core.c:2177 drivers/iio/industrialio-core.c:2204
#: drivers/iio/industrialio-core.c:2221 drivers/iio/industrialio-core.c:2246
#: drivers/iio/industrialio-core.c:2261
msgid "``struct iio_dev *indio_dev``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:697
#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:274
#: drivers/iio/industrialio-core.c:302
msgid "IIO device structure containing the device"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:709
msgid "Get IIO device struct from a device struct"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:715
#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:627
msgid "``struct device *dev``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:710
msgid "The device embedded in the IIO device"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:712
msgid "**Note**"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:712
msgid "The device must be a IIO device, otherwise the result is undefined."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:720
msgid "increment reference count for the device"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:721
#: include/linux/iio/iio.h:732 include/linux/iio/iio.h:753
#: include/linux/iio/iio.h:766
msgid "IIO device structure"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:723
msgid "The passed IIO device"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:731
msgid "assign parent device to the IIO device object"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:734
#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:1675
#: drivers/iio/industrialio-core.c:1752
msgid "``struct device *parent``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:733
msgid "reference to parent device object"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:734
msgid ""
"This utility must be called between IIO device allocation (via "
"devm_iio_device_alloc()) & IIO device registration (via "
"iio_device_register() and devm_iio_device_register())). By default, the "
"device allocation will also assign a parent device to the IIO device object. "
"In cases where devm_iio_device_alloc() is used, sometimes the parent device "
"must be different than the device used to manage the allocation. In that "
"case, this helper should be used to change the parent, hence the requirement "
"to call this between allocation & registration."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:752
msgid "Set device driver data"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:755
msgid "``void *data``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:754
msgid "Driver specific data"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:755
msgid ""
"Allows to attach an arbitrary pointer to an IIO device, which can later be "
"retrieved by iio_device_get_drvdata()."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:765
msgid "Get device driver data"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:771
#: include/linux/iio/iio.h:896 include/linux/iio/iio.h:928
#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:307
#: drivers/iio/industrialio-core.c:321
msgid "``const struct iio_dev *indio_dev``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:767
msgid "Returns the data previously set with iio_device_set_drvdata()"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:794
msgid "``IIO_DECLARE_BUFFER_WITH_TS (type, name, count)``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:792
msgid "Declare a buffer with timestamp"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:793
#: include/linux/iio/iio.h:807
msgid "element type of the buffer"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:794
#: include/linux/iio/iio.h:808
msgid "identifier name of the buffer"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:796
#: include/linux/iio/iio.h:810
msgid "``count``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:795
#: include/linux/iio/iio.h:809
msgid "number of elements in the buffer"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:796
msgid ""
"Declares a buffer that is safe to use with iio_push_to_buffers_with_ts(). In "
"addition to allocating enough space for **count** elements of **type**, it "
"also allocates space for a s64 timestamp at the end of the buffer and "
"ensures proper alignment of the timestamp."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:808
msgid "``IIO_DECLARE_DMA_BUFFER_WITH_TS (type, name, count)``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:806
msgid "Declare a DMA-aligned buffer with timestamp"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:810
msgid ""
"Same as IIO_DECLARE_BUFFER_WITH_TS(), but is uses "
"__aligned(IIO_DMA_MINALIGN) to ensure that the buffer doesn't share "
"cachelines with anything that comes before it in a struct. This should not "
"be used for stack-allocated buffers as stack memory cannot generally be used "
"for DMA."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:837
msgid "helper function to get the debugfs_dentry"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:838
#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:218
#: drivers/iio/industrialio-core.c:2257
msgid "IIO device structure for device"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:850
msgid "suspend trigger attached to an iio_dev"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:851
msgid "iio_dev associated with the device that will have triggers suspended"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:852
#: include/linux/iio/iio.h:861
msgid "Return 0 if successful, negative otherwise"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:858
msgid ""
"resume trigger attached to an iio_dev that was previously suspended with "
"iio_device_suspend_triggering()"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:860
msgid "iio_dev associated with the device that will have triggers resumed"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:890
msgid "Get the current scan type for a channel"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:891
msgid "the IIO device to get the scan type for"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:892
msgid "the channel to get the scan type for"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:893
msgid ""
"Most devices only have one scan type per channel and can just access it "
"directly without calling this function. Core IIO code and drivers that "
"implement ext_scan_type in the channel spec should use this function to get "
"the current scan type for a channel."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:899
msgid "the current scan type for the channel or error."
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:922
msgid "Get length of the channels mask"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:923
msgid "the IIO device to get the masklength for"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:935
msgid "``iio_for_each_active_channel (indio_dev, chan)``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:933
msgid "Iterated over active channels"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:934
msgid "the IIO device"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:936
msgid "``chan``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:935
msgid "Holds the index of the enabled channel"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:949
msgid "``IIO_DEGREE_TO_RAD (deg)``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:947
msgid "Convert degree to rad"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:953
msgid "``deg``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:948
msgid "A value in degree"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:949
msgid "Returns the given value converted from degree to rad"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:957
msgid "``IIO_RAD_TO_DEGREE (rad)``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:955
msgid "Convert rad to degree"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:961
msgid "``rad``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:956
msgid "A value in rad"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:957
msgid "Returns the given value converted from rad to degree"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:966
msgid "``IIO_G_TO_M_S_2 (g)``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:964
msgid "Convert g to meter / second**2"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:970
msgid "``g``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:965
msgid "A value in g"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:966
msgid "Returns the given value converted from g to meter / second**2"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:974
msgid "``IIO_M_S_2_TO_G (ms2)``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:972
msgid "Convert meter / second**2 to g"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:978
msgid "``ms2``"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:973
msgid "A value in meter / second**2"
msgstr ""

#: ../../../driver-api/iio/core:180: include/linux/iio/iio.h:974
msgid "Returns the given value converted from meter / second**2 to g"
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:200
msgid "query the unique ID for the device"
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:201
msgid "Device structure whose ID is being queried"
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:202
msgid ""
"The IIO device ID is a unique index used for example for the naming of the "
"character device /dev/iio\\:device[ID]."
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:206
msgid "Unique ID for the device."
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:217
msgid "helper function to test if the buffer is enabled"
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:220
msgid "True, if the buffer is enabled."
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:273
msgid "Set current timestamping clock for the device"
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:276
msgid "``clockid_t clock_id``"
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:275
msgid "timestamping clock POSIX identifier to set."
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:277
msgid "0 on success, or a negative error code."
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:301
msgid "Retrieve current timestamping clock for the device"
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:304
msgid "Clock ID of the current timestamping clock for the device."
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:315
msgid "utility function to get a time stamp for events etc"
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:316
msgid "device"
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:318
msgid "Timestamp of the event in nanoseconds."
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:621
msgid ""
"retrieve iio device mounting matrix from device \"mount-matrix\" property"
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:623
msgid "device the mounting matrix property is assigned to"
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:625
msgid "``struct iio_mount_matrix *matrix``"
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:624
msgid "where to store retrieved matrix"
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:625
msgid ""
"If device is assigned no mounting matrix property, a default 3x3 identity "
"matrix will be filled in."
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:629
msgid "0 if success, or a negative error code on failure."
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:717
msgid "Formats a IIO value into its string representation"
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:723
msgid "``char *buf``"
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:718
msgid ""
"The buffer to which the formatted value gets written which is assumed to be "
"big enough (i.e. PAGE_SIZE)."
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:721
msgid "``unsigned int type``"
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:720
msgid ""
"One of the IIO_VAL_* constants. This decides how the val and val2 parameters "
"are formatted."
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:723
msgid "``int size``"
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:722
msgid "Number of IIO value entries contained in vals"
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:724
msgid "``int *vals``"
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:723
msgid "Pointer to the values, exact meaning depends on the type parameter."
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:726
msgid ""
"0 by default, a negative number on failure or the total number of characters "
"written for a type that belongs to the IIO_VAL_* constant."
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:956
msgid "Parse a fixed-point number from a string"
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:962
msgid "``const char *str``"
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:957
msgid "The string to parse"
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:959
msgid "``int fract_mult``"
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:958
msgid "Multiplier for the first decimal place, should be a power of 10"
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:960
msgid "``int *integer``"
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:959
msgid "The integer part of the number"
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:961
msgid "``int *fract``"
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:960
msgid "The fractional part of the number"
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:962
msgid ""
"0 on success, or a negative error code if the string could not be parsed."
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:1669
msgid "allocate an iio_dev from a driver"
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:1670
msgid "Parent device."
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:1672
#: drivers/iio/industrialio-core.c:1749
msgid "``int sizeof_priv``"
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:1671
#: drivers/iio/industrialio-core.c:1748
msgid "Space to allocate for private structure."
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:1673
#: drivers/iio/industrialio-core.c:1753
msgid "Pointer to allocated iio_dev on success, NULL on failure."
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:1730
msgid "free an iio_dev from a driver"
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:1736
msgid "``struct iio_dev *dev``"
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:1731
#: drivers/iio/industrialio-core.c:2172 drivers/iio/industrialio-core.c:2199
#: drivers/iio/industrialio-core.c:2216 drivers/iio/industrialio-core.c:2241
msgid "the iio_dev associated with the device"
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:1746
msgid "Resource-managed iio_device_alloc()"
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:1747
msgid "Device to allocate iio_dev for, and parent for this IIO device"
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:1749
msgid ""
"Managed iio_device_alloc. iio_dev allocated with this function is "
"automatically freed on driver detach."
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:1994
msgid "Get index of the active scan mask inside the available scan masks array"
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:1996
msgid "the IIO device containing the active and available scan masks"
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:1998
msgid "the index or -EINVAL if  active_scan_mask is not set"
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:2128
msgid "unregister a device from the IIO subsystem"
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:2129
msgid "Device structure representing the device."
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:2171
msgid "Keep device in direct mode"
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:2173
msgid ""
"If the device is in direct mode it is guaranteed to stay that way until "
"__iio_device_release_direct() is called."
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:2176
msgid "Use with __iio_device_release_direct()."
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:2178
msgid "Drivers should only call iio_device_claim_direct()."
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:2181
msgid "true on success, false on failure."
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:2198
msgid "releases claim on direct mode"
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:2200
msgid ""
"Release the claim. Device is no longer guaranteed to stay in direct mode."
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:2203
msgid "Drivers should only call iio_device_release_direct()."
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:2205
msgid "Use with __iio_device_claim_direct()"
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:2215
msgid "Keep device in buffer mode"
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:2217
msgid ""
"If the device is in buffer mode it is guaranteed to stay that way until "
"iio_device_release_buffer_mode() is called."
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:2220
msgid "Use with iio_device_release_buffer_mode()."
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:2223
msgid "0 on success, -EBUSY on failure."
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:2240
msgid "releases claim on buffer mode"
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:2242
msgid ""
"Release the claim. Device is no longer guaranteed to stay in buffer mode."
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:2245
msgid "Use with iio_device_claim_buffer_mode()."
msgstr ""

#: ../../../driver-api/iio/core:181: drivers/iio/industrialio-core.c:2255
msgid ""
"helper function providing read-only access to the opaque **currentmode** "
"variable"
msgstr ""
