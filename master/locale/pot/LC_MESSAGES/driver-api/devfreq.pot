# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../driver-api/devfreq.rst:5
msgid "Device Frequency Scaling"
msgstr ""

#: ../../../driver-api/devfreq.rst:8
msgid "Introduction"
msgstr ""

#: ../../../driver-api/devfreq.rst:10
msgid ""
"This framework provides a standard kernel interface for Dynamic Voltage and "
"Frequency Switching on arbitrary devices."
msgstr ""

#: ../../../driver-api/devfreq.rst:13
msgid ""
"It exposes controls for adjusting frequency through sysfs files which are "
"similar to the cpufreq subsystem."
msgstr ""

#: ../../../driver-api/devfreq.rst:16
msgid ""
"Devices for which current usage can be measured can have their frequency "
"automatically adjusted by governors."
msgstr ""

#: ../../../driver-api/devfreq.rst:20
msgid "API"
msgstr ""

#: ../../../driver-api/devfreq.rst:22
msgid ""
"Device drivers need to initialize a :c:type:`devfreq_profile` and call the :"
"c:func:`devfreq_add_device` function to create a :c:type:`devfreq` instance."
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:45
msgid ""
"Data given from devfreq user device to governors. Represents the performance "
"statistics."
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:49
#: include/linux/devfreq.h:80 include/linux/devfreq.h:133
#: include/linux/devfreq.h:147 include/linux/devfreq.h:288
#: include/linux/devfreq.h:311 ../../../driver-api/devfreq:26:
#: include/linux/devfreq-event.h:19 include/linux/devfreq-event.h:41
#: include/linux/devfreq-event.h:57 include/linux/devfreq-event.h:82
msgid "**Definition**::"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:58
#: include/linux/devfreq.h:96 include/linux/devfreq.h:142
#: include/linux/devfreq.h:179 include/linux/devfreq.h:295
#: include/linux/devfreq.h:322 ../../../driver-api/devfreq:26:
#: include/linux/devfreq-event.h:29 include/linux/devfreq-event.h:48
#: include/linux/devfreq-event.h:67 include/linux/devfreq-event.h:91
msgid "**Members**"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:48
msgid "``total_time``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:49
msgid "The total time represented by this instance of devfreq_dev_status"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:50
msgid "``busy_time``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:51
msgid "The time that the device was working among the total_time."
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:52
msgid "``current_frequency``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:53
msgid "The operating frequency."
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:53
msgid "``private_data``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:54
msgid ""
"An entry not specified by the devfreq framework. A device and a specific "
"governor may have their own protocol with private_data. However, because "
"this is governor-specific, a governor using this will be only compatible "
"with devices aware of it."
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:76
msgid "Devfreq's user device profile"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:77
msgid "``initial_freq``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:78
msgid "The operating frequency when devfreq_add_device() is called."
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:79
msgid "``polling_ms``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:80
msgid "The polling interval in ms. 0 disables polling."
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:80
msgid "``timer``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:81
msgid "Timer type is either deferrable or delayed timer."
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:81
msgid "``target``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:82
msgid ""
"The device should set its operating frequency at freq or lowest-upper-than-"
"freq value. If freq is higher than any operable frequency, set maximum. "
"Before returning, target function should set freq at the current frequency. "
"The \"flags\" parameter's possible values are explained above with "
"\"DEVFREQ_FLAG_*\" macros."
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:88
msgid "``get_dev_status``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:89
msgid ""
"The device should provide the current performance status to devfreq. "
"Governors are recommended not to use this directly. Instead, governors are "
"recommended to use devfreq_update_stats() along with devfreq.last_status."
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:93
msgid "``get_cur_freq``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:94
msgid ""
"The device should provide the current frequency at which it is operating."
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:95
msgid "``exit``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:96
msgid ""
"An optional callback that is called when devfreq is removing the devfreq "
"object due to error or from devfreq_remove_device() call. If the user has "
"registered devfreq->nb at a notifier-head, this is the time to unregister it."
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:100
#: include/linux/devfreq.h:156
msgid "``freq_table``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:101
msgid ""
"Optional list of frequencies to support statistics and freq_table must be "
"generated in ascending order."
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:102
#: include/linux/devfreq.h:157
msgid "``max_state``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:103
msgid "The size of freq_table."
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:104
msgid "``is_cooling_device``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:105
msgid "A self-explanatory boolean giving the device a cooling effect property."
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:106
msgid "``dev_groups``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:107
msgid ""
"Optional device-specific sysfs attribute groups that to be attached to the "
"devfreq device."
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:129
#: include/linux/devfreq.h:171
msgid "Statistics of devfreq device behavior"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:130
msgid "``total_trans``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:131
msgid "Number of devfreq transitions."
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:131
msgid "``trans_table``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:132
msgid "Statistics of devfreq transitions."
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:132
msgid "``time_in_state``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:133
msgid "Statistics of devfreq states."
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:133
msgid "``last_update``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:134
msgid "The last time stats were updated."
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:143
msgid "Device devfreq structure"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:144
#: ../../../driver-api/devfreq:26: include/linux/devfreq-event.h:17
msgid "``node``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:145
msgid ""
"list node - contains the devices with devfreq that have been registered."
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:146
#: ../../../driver-api/devfreq:26: include/linux/devfreq-event.h:20
msgid "``lock``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:147
msgid "a mutex to protect accessing devfreq."
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:147
#: ../../../driver-api/devfreq:26: include/linux/devfreq-event.h:18
msgid "``dev``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:148
msgid ""
"device registered by devfreq class. dev.parent is the device using devfreq."
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:149
msgid "``profile``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:150
msgid "device-specific devfreq profile"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:150
msgid "``governor``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:151
msgid "method how to choose frequency based on the usage."
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:151
msgid "``opp_table``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:152
msgid "Reference to OPP table of dev.parent, if one exists."
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:152
#: include/linux/devfreq.h:319
msgid "``nb``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:153
msgid ""
"notifier block used to notify devfreq object that it should reevaluate "
"operable frequencies. Devfreq users may use devfreq.nb to the corresponding "
"register notifier call chain."
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:155
msgid "``work``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:156
msgid "delayed work for load monitoring."
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:157
msgid "current frequency table used by the devfreq driver."
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:158
msgid "count of entry present in the frequency table."
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:158
msgid "``previous_freq``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:159
msgid "previously configured frequency value."
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:159
msgid "``last_status``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:160
msgid "devfreq user device info, performance statistics"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:160
msgid "``data``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:161
#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:798
#: drivers/devfreq/devfreq.c:1030
msgid "devfreq driver pass to governors, governor should not change it."
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:161
msgid "``governor_data``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:162
msgid "private data for governors, devfreq core doesn't touch it."
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:162
msgid "``user_min_freq_req``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:163
msgid "PM QoS minimum frequency request from user (via sysfs)"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:163
msgid "``user_max_freq_req``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:164
msgid "PM QoS maximum frequency request from user (via sysfs)"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:164
msgid "``scaling_min_freq``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:165
msgid "Limit minimum frequency requested by OPP interface"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:165
msgid "``scaling_max_freq``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:166
msgid "Limit maximum frequency requested by OPP interface"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:166
msgid "``stop_polling``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:167
msgid "devfreq polling status of a device."
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:167
msgid "``suspend_freq``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:168
msgid "frequency of a device set during suspend phase."
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:168
msgid "``resume_freq``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:169
msgid "frequency of a device set in resume phase."
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:169
msgid "``suspend_count``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:170
msgid "suspend requests counter for a device."
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:170
msgid "``stats``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:171
msgid "``transition_notifier_list``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:172
msgid "list head of DEVFREQ_TRANSITION_NOTIFIER notifier"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:172
msgid "``cdev``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:173
msgid "Cooling device pointer if the devfreq has cooling property"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:173
msgid "``nb_min``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:174
msgid "Notifier block for DEV_PM_QOS_MIN_FREQUENCY"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:174
msgid "``nb_max``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:175
msgid "Notifier block for DEV_PM_QOS_MAX_FREQUENCY"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:178
#: include/linux/devfreq.h:295 include/linux/devfreq.h:325
#: ../../../driver-api/devfreq:26: include/linux/devfreq-event.h:26
#: include/linux/devfreq-event.h:47 include/linux/devfreq-event.h:64
#: include/linux/devfreq-event.h:87 ../../../driver-api/devfreq:27:
#: drivers/devfreq/devfreq.c:120 drivers/devfreq/devfreq.c:476
#: drivers/devfreq/devfreq.c:516 drivers/devfreq/devfreq.c:541
#: drivers/devfreq/devfreq.c:572 drivers/devfreq/devfreq.c:611
#: drivers/devfreq/devfreq.c:989 drivers/devfreq/devfreq.c:1032
#: drivers/devfreq/devfreq.c:1148 drivers/devfreq/devfreq.c:1185
#: drivers/devfreq/devfreq.c:1337 drivers/devfreq/devfreq.c:2057
#: drivers/devfreq/devfreq.c:2106 drivers/devfreq/devfreq.c:2240
#: drivers/devfreq/devfreq.c:2276 ../../../driver-api/devfreq:29:
#: drivers/devfreq/devfreq-event.c:33 drivers/devfreq/devfreq-event.c:64
#: drivers/devfreq/devfreq-event.c:102 drivers/devfreq/devfreq-event.c:128
#: drivers/devfreq/devfreq-event.c:157 drivers/devfreq/devfreq-event.c:190
#: drivers/devfreq/devfreq-event.c:219 drivers/devfreq/devfreq-event.c:260
#: drivers/devfreq/devfreq-event.c:297 drivers/devfreq/devfreq-event.c:349
#: drivers/devfreq/devfreq-event.c:389 drivers/devfreq/devfreq-event.c:421
msgid "**Description**"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:175
msgid "This structure stores the devfreq information for a given device."
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:177
msgid ""
"Note that when a governor accesses entries in struct devfreq in its "
"functions except for the context of callbacks defined in struct "
"devfreq_governor, the governor should protect its access with the struct "
"mutex lock in struct devfreq. A governor may use this mutex to protect its "
"own private data in ``void *data`` as well."
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:284
#: include/linux/devfreq.h:307
msgid "``void *data`` fed to struct devfreq and devfreq_add_device"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:286
msgid "``upthreshold``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:287
msgid ""
"If the load is over this value, the frequency jumps. Specify 0 to use the "
"default. Valid value = 0 to 100."
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:288
msgid "``downdifferential``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:289
msgid ""
"If the load is under upthreshold - downdifferential, the governor may "
"consider slowing the frequency down. Specify 0 to use the default. Valid "
"value = 0 to 100. downdifferential < upthreshold must hold."
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:292
msgid ""
"If the fed devfreq_simple_ondemand_data pointer is NULL to the governor, the "
"governor uses the default values."
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:309
msgid "``parent``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:310
msgid "the devfreq instance of parent device."
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:310
msgid "``get_target_freq``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:311
msgid ""
"Optional callback, Returns desired operating frequency for the device using "
"passive governor. That is called when passive governor should decide the "
"next frequency by using the new frequency of parent devfreq device using "
"governors except for passive governor. If the devfreq device has the "
"specific method to decide the next frequency, should use this callback."
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:317
msgid "``parent_type``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:318
msgid "the parent type of the device."
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:318
msgid "``this``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:319
msgid "the devfreq instance of own device."
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:320
msgid ""
"the notifier block for DEVFREQ_TRANSITION_NOTIFIER or "
"CPUFREQ_TRANSITION_NOTIFIER list."
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:321
msgid "``cpu_data_list``"
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:322
msgid "the list of cpu frequency data for all cpufreq_policy."
msgstr ""

#: ../../../driver-api/devfreq:25: include/linux/devfreq.h:322
msgid ""
"The devfreq_passive_data have to set the devfreq instance of parent device "
"with governors except for the passive governor. But, don't need to "
"initialize the 'this' and 'nb' field because the devfreq core will handle "
"them."
msgstr ""

#: ../../../driver-api/devfreq:26: include/linux/devfreq-event.h:15
#: ../../../driver-api/devfreq:29: drivers/devfreq/devfreq-event.c:31
#: drivers/devfreq/devfreq-event.c:62 drivers/devfreq/devfreq-event.c:100
#: drivers/devfreq/devfreq-event.c:126 drivers/devfreq/devfreq-event.c:154
#: drivers/devfreq/devfreq-event.c:188 drivers/devfreq/devfreq-event.c:347
#: drivers/devfreq/devfreq-event.c:419
msgid "the devfreq-event device"
msgstr ""

#: ../../../driver-api/devfreq:26: include/linux/devfreq-event.h:18
msgid "Contain the devfreq-event device that have been registered."
msgstr ""

#: ../../../driver-api/devfreq:26: include/linux/devfreq-event.h:19
msgid ""
"the device registered by devfreq-event class. dev.parent is the device using "
"devfreq-event."
msgstr ""

#: ../../../driver-api/devfreq:26: include/linux/devfreq-event.h:21
msgid "a mutex to protect accessing devfreq-event."
msgstr ""

#: ../../../driver-api/devfreq:26: include/linux/devfreq-event.h:21
msgid "``enable_count``"
msgstr ""

#: ../../../driver-api/devfreq:26: include/linux/devfreq-event.h:22
msgid "the number of enable function have been called."
msgstr ""

#: ../../../driver-api/devfreq:26: include/linux/devfreq-event.h:22
msgid "``desc``"
msgstr ""

#: ../../../driver-api/devfreq:26: include/linux/devfreq-event.h:23
msgid "the description for devfreq-event device."
msgstr ""

#: ../../../driver-api/devfreq:26: include/linux/devfreq-event.h:23
msgid "This structure contains devfreq-event device information."
msgstr ""

#: ../../../driver-api/devfreq:26: include/linux/devfreq-event.h:37
msgid "the devfreq-event data"
msgstr ""

#: ../../../driver-api/devfreq:26: include/linux/devfreq-event.h:39
msgid "``load_count``"
msgstr ""

#: ../../../driver-api/devfreq:26: include/linux/devfreq-event.h:40
msgid "load count of devfreq-event device for the given period."
msgstr ""

#: ../../../driver-api/devfreq:26: include/linux/devfreq-event.h:40
msgid "``total_count``"
msgstr ""

#: ../../../driver-api/devfreq:26: include/linux/devfreq-event.h:41
msgid ""
"total count of devfreq-event device for the given period. each count may "
"represent a clock cycle, a time unit (ns/us/...), or anything the device "
"driver wants. Generally, utilization is load_count / total_count."
msgstr ""

#: ../../../driver-api/devfreq:26: include/linux/devfreq-event.h:44
msgid ""
"This structure contains the data of devfreq-event device for polling period."
msgstr ""

#: ../../../driver-api/devfreq:26: include/linux/devfreq-event.h:53
msgid "the operations of devfreq-event device"
msgstr ""

#: ../../../driver-api/devfreq:26: include/linux/devfreq-event.h:55
msgid "``enable``"
msgstr ""

#: ../../../driver-api/devfreq:26: include/linux/devfreq-event.h:56
msgid "Enable the devfreq-event device."
msgstr ""

#: ../../../driver-api/devfreq:26: include/linux/devfreq-event.h:56
msgid "``disable``"
msgstr ""

#: ../../../driver-api/devfreq:26: include/linux/devfreq-event.h:57
msgid "Disable the devfreq-event device."
msgstr ""

#: ../../../driver-api/devfreq:26: include/linux/devfreq-event.h:57
msgid "``reset``"
msgstr ""

#: ../../../driver-api/devfreq:26: include/linux/devfreq-event.h:58
msgid "Reset all setting of the devfreq-event device."
msgstr ""

#: ../../../driver-api/devfreq:26: include/linux/devfreq-event.h:58
msgid "``set_event``"
msgstr ""

#: ../../../driver-api/devfreq:26: include/linux/devfreq-event.h:59
msgid "Set the specific event type for the devfreq-event device."
msgstr ""

#: ../../../driver-api/devfreq:26: include/linux/devfreq-event.h:59
msgid "``get_event``"
msgstr ""

#: ../../../driver-api/devfreq:26: include/linux/devfreq-event.h:60
msgid "Get the result of the devfreq-event devie with specific event type."
msgstr ""

#: ../../../driver-api/devfreq:26: include/linux/devfreq-event.h:61
msgid ""
"This structure contains devfreq-event device operations which can be "
"implemented by devfreq-event device drivers."
msgstr ""

#: ../../../driver-api/devfreq:26: include/linux/devfreq-event.h:78
msgid "the descriptor of devfreq-event device"
msgstr ""

#: ../../../driver-api/devfreq:26: include/linux/devfreq-event.h:80
msgid "``name``"
msgstr ""

#: ../../../driver-api/devfreq:26: include/linux/devfreq-event.h:81
msgid "the name of devfreq-event device."
msgstr ""

#: ../../../driver-api/devfreq:26: include/linux/devfreq-event.h:81
msgid "``event_type``"
msgstr ""

#: ../../../driver-api/devfreq:26: include/linux/devfreq-event.h:82
msgid "the type of the event determined and used by driver"
msgstr ""

#: ../../../driver-api/devfreq:26: include/linux/devfreq-event.h:82
msgid "``driver_data``"
msgstr ""

#: ../../../driver-api/devfreq:26: include/linux/devfreq-event.h:83
msgid "the private data for devfreq-event driver."
msgstr ""

#: ../../../driver-api/devfreq:26: include/linux/devfreq-event.h:83
msgid "``ops``"
msgstr ""

#: ../../../driver-api/devfreq:26: include/linux/devfreq-event.h:84
msgid "the operation to control devfreq-event device."
msgstr ""

#: ../../../driver-api/devfreq:26: include/linux/devfreq-event.h:84
msgid ""
"Each devfreq-event device is described with a this structure. This structure "
"contains the various data for devfreq-event device. The event_type describes "
"what is going to be counted in the register. It might choose to count e.g. "
"read requests, write data in bytes, etc. The full supported list of types is "
"present in specyfic header in: include/dt-bindings/pmu/."
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:115
msgid "Get the current freq range"
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:119
#: drivers/devfreq/devfreq.c:213 drivers/devfreq/devfreq.c:395
#: drivers/devfreq/devfreq.c:437 drivers/devfreq/devfreq.c:477
#: drivers/devfreq/devfreq.c:517 drivers/devfreq/devfreq.c:542
#: drivers/devfreq/devfreq.c:573 drivers/devfreq/devfreq.c:611
#: drivers/devfreq/devfreq.c:798 drivers/devfreq/devfreq.c:990
#: drivers/devfreq/devfreq.c:1030 drivers/devfreq/devfreq.c:1137
#: drivers/devfreq/devfreq.c:1149 drivers/devfreq/devfreq.c:1186
#: drivers/devfreq/devfreq.c:1267 drivers/devfreq/devfreq.c:1337
#: drivers/devfreq/devfreq.c:1358 drivers/devfreq/devfreq.c:2055
#: drivers/devfreq/devfreq.c:2091 drivers/devfreq/devfreq.c:2104
#: drivers/devfreq/devfreq.c:2125 drivers/devfreq/devfreq.c:2154
#: drivers/devfreq/devfreq.c:2168 drivers/devfreq/devfreq.c:2237
#: drivers/devfreq/devfreq.c:2273 ../../../driver-api/devfreq:29:
#: drivers/devfreq/devfreq-event.c:33 drivers/devfreq/devfreq-event.c:64
#: drivers/devfreq/devfreq-event.c:102 drivers/devfreq/devfreq-event.c:129
#: drivers/devfreq/devfreq-event.c:157 drivers/devfreq/devfreq-event.c:191
#: drivers/devfreq/devfreq-event.c:217 drivers/devfreq/devfreq-event.c:260
#: drivers/devfreq/devfreq-event.c:296 drivers/devfreq/devfreq-event.c:350
#: drivers/devfreq/devfreq-event.c:388 drivers/devfreq/devfreq-event.c:421
msgid "**Parameters**"
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:121
#: drivers/devfreq/devfreq.c:215 drivers/devfreq/devfreq.c:397
#: drivers/devfreq/devfreq.c:439 drivers/devfreq/devfreq.c:479
#: drivers/devfreq/devfreq.c:519 drivers/devfreq/devfreq.c:544
#: drivers/devfreq/devfreq.c:575 drivers/devfreq/devfreq.c:613
#: drivers/devfreq/devfreq.c:992 drivers/devfreq/devfreq.c:1136
#: drivers/devfreq/devfreq.c:1151 drivers/devfreq/devfreq.c:1188
#: drivers/devfreq/devfreq.c:2092 drivers/devfreq/devfreq.c:2105
#: drivers/devfreq/devfreq.c:2125 drivers/devfreq/devfreq.c:2154
#: drivers/devfreq/devfreq.c:2170 drivers/devfreq/devfreq.c:2237
#: drivers/devfreq/devfreq.c:2273
msgid "``struct devfreq *devfreq``"
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:116
#: drivers/devfreq/devfreq.c:210
msgid "the devfreq instance"
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:118
msgid "``unsigned long *min_freq``"
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:117
msgid "the min frequency"
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:119
msgid "``unsigned long *max_freq``"
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:118
msgid "the max frequency"
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:119
msgid "This takes into consideration all constraints."
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:209
msgid "Update statistics of devfreq behavior"
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:212
#: drivers/devfreq/devfreq.c:395
msgid "``unsigned long freq``"
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:211
msgid "the update target frequency"
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:391
msgid "Reevaluate the device and configure frequency on the final stage."
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:393
#: drivers/devfreq/devfreq.c:434 drivers/devfreq/devfreq.c:474
#: drivers/devfreq/devfreq.c:514 drivers/devfreq/devfreq.c:539
#: drivers/devfreq/devfreq.c:570 drivers/devfreq/devfreq.c:608
msgid "the devfreq instance."
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:394
msgid ""
"the new frequency of parent device. This argument is only used for devfreq "
"device using passive governor."
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:397
#: drivers/devfreq/devfreq.c:436 drivers/devfreq/devfreq.c:544
msgid "**Note**"
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:397
msgid "Lock devfreq->lock before calling devfreq_update_target. This function"
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:398
msgid "should be only used by both update_devfreq() and devfreq governors."
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:433
msgid "Reevaluate the device and configure frequency."
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:436
msgid "Lock devfreq->lock before calling update_devfreq"
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:437
msgid "This function is exported for governors."
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:473
msgid "Start load monitoring of devfreq instance"
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:475
msgid ""
"Helper function for starting devfreq device load monitoring. By default, "
"deferrable timer is used for load monitoring. But the users can change this "
"behavior using the \"timer\" type in devfreq_dev_profile. This function will "
"be called by devfreq governor in response to the DEVFREQ_GOV_START event "
"generated while adding a device to the devfreq framework."
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:513
msgid "Stop load monitoring of a devfreq instance"
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:515
msgid ""
"Helper function to stop devfreq device load monitoring. Function to be "
"called from governor in response to DEVFREQ_GOV_STOP event when device is "
"removed from devfreq framework."
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:538
msgid "Suspend load monitoring of a devfreq instance"
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:540
msgid ""
"Helper function to suspend devfreq device load monitoring. Function to be "
"called from governor in response to DEVFREQ_GOV_SUSPEND event or when "
"polling interval is set to zero."
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:545
msgid ""
"Though this function is same as devfreq_monitor_stop(), intentionally kept "
"separate to provide hooks for collecting transition statistics."
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:569
msgid "Resume load monitoring of a devfreq instance"
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:571
msgid ""
"Helper function to resume devfreq device load monitoring. Function to be "
"called from governor in response to DEVFREQ_GOV_RESUME event or when polling "
"interval is set to non-zero."
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:607
msgid "Update device devfreq monitoring interval"
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:610
msgid "``unsigned int *delay``"
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:609
msgid "new polling interval to be set."
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:610
msgid ""
"Helper function to set new load monitoring polling interval. Function to be "
"called from governor in response to DEVFREQ_GOV_UPDATE_INTERVAL event."
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:794
msgid "Add devfreq feature to the device"
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:800
#: drivers/devfreq/devfreq.c:1032 drivers/devfreq/devfreq.c:1139
#: drivers/devfreq/devfreq.c:1339 drivers/devfreq/devfreq.c:2057
#: drivers/devfreq/devfreq.c:2093 drivers/devfreq/devfreq.c:2106
#: drivers/devfreq/devfreq.c:2127 drivers/devfreq/devfreq.c:2156
#: drivers/devfreq/devfreq.c:2239 drivers/devfreq/devfreq.c:2275
#: ../../../driver-api/devfreq:29: drivers/devfreq/devfreq-event.c:219
#: drivers/devfreq/devfreq-event.c:262 drivers/devfreq/devfreq-event.c:298
#: drivers/devfreq/devfreq-event.c:390 drivers/devfreq/devfreq-event.c:423
msgid "``struct device *dev``"
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:795
#: drivers/devfreq/devfreq.c:1027
msgid "the device to add devfreq feature."
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:797
#: drivers/devfreq/devfreq.c:1029
msgid "``struct devfreq_dev_profile *profile``"
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:796
#: drivers/devfreq/devfreq.c:1028
msgid "device-specific profile to run devfreq."
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:798
#: drivers/devfreq/devfreq.c:1030
msgid "``const char *governor_name``"
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:797
#: drivers/devfreq/devfreq.c:1029
msgid "name of the policy to choose frequency."
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:799
#: drivers/devfreq/devfreq.c:1031
msgid "``void *data``"
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:986
#: drivers/devfreq/devfreq.c:1354
msgid "Remove devfreq feature from a device."
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:987
#: drivers/devfreq/devfreq.c:1135
msgid "the devfreq instance to be removed"
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:988
msgid "The opposite of devfreq_add_device()."
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:1026
msgid "Resource-managed devfreq_add_device()"
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:1031
msgid ""
"This function manages automatically the memory of devfreq device using "
"device resource management and simplify the free operation for memory of "
"devfreq device."
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:1133
msgid "Resource-managed devfreq_remove_device()"
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:1134
msgid "the device from which to remove devfreq feature."
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:1145
msgid "Suspend devfreq of a device."
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:1146
msgid "the devfreq instance to be suspended"
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:1147
msgid ""
"This function is intended to be called by the pm callbacks (e.g., "
"runtime_suspend, suspend) of the device driver that holds the devfreq."
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:1182
msgid "Resume devfreq of a device."
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:1183
msgid "the devfreq instance to be resumed"
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:1184
msgid ""
"This function is intended to be called by the pm callbacks (e.g., "
"runtime_resume, resume) of the device driver that holds the devfreq."
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:1263
#: drivers/devfreq/devfreq.c:1333
msgid "Add devfreq governor"
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:1269
#: drivers/devfreq/devfreq.c:1336 drivers/devfreq/devfreq.c:1360
msgid "``struct devfreq_governor *governor``"
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:1264
#: drivers/devfreq/devfreq.c:1335
msgid "the devfreq governor to be added"
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:1334
msgid "device which adds devfreq governor"
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:1336
msgid "This is a resource-managed variant of devfreq_add_governor()."
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:1355
msgid "the devfreq governor to be removed"
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:2051
msgid ""
"Helper function to get proper OPP for the freq value given to target "
"callback."
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:2053
#: drivers/devfreq/devfreq.c:2090 drivers/devfreq/devfreq.c:2103
#: drivers/devfreq/devfreq.c:2123 drivers/devfreq/devfreq.c:2152
#: drivers/devfreq/devfreq.c:2235 drivers/devfreq/devfreq.c:2271
msgid "The devfreq user device. (parent of devfreq)"
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:2055
msgid "``unsigned long *freq``"
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:2054
msgid "The frequency given to target function"
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:2056
msgid "``u32 flags``"
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:2055
msgid "Flags handed from devfreq framework."
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:2056
msgid ""
"The callers are required to call dev_pm_opp_put() for the returned OPP after "
"use."
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:2087
msgid ""
"Helper function to get devfreq notified for any changes in the OPP "
"availability changes"
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:2091
#: drivers/devfreq/devfreq.c:2104 drivers/devfreq/devfreq.c:2124
#: drivers/devfreq/devfreq.c:2153 drivers/devfreq/devfreq.c:2165
#: drivers/devfreq/devfreq.c:2236 drivers/devfreq/devfreq.c:2272
msgid "The devfreq object."
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:2100
msgid ""
"Helper function to stop getting devfreq notified for any changes in the OPP "
"availability changes anymore."
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:2105
msgid ""
"At exit() callback of devfreq_dev_profile, this must be included if "
"devfreq_recommended_opp is used."
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:2121
msgid "Resource-managed devfreq_register_opp_notifier()"
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:2150
msgid "Resource-managed devfreq_unregister_opp_notifier()"
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:2164
msgid "Register a driver with devfreq"
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:2167
#: drivers/devfreq/devfreq.c:2238 drivers/devfreq/devfreq.c:2274
msgid "``struct notifier_block *nb``"
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:2166
msgid "The notifier block to register."
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:2168
#: drivers/devfreq/devfreq.c:2239 drivers/devfreq/devfreq.c:2275
msgid "``unsigned int list``"
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:2167
#: drivers/devfreq/devfreq.c:2238 drivers/devfreq/devfreq.c:2274
msgid "DEVFREQ_TRANSITION_NOTIFIER."
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:2237
#: drivers/devfreq/devfreq.c:2273
msgid "The notifier block to be unregistered."
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:2234
msgid "Resource-managed devfreq_register_notifier()"
msgstr ""

#: ../../../driver-api/devfreq:27: drivers/devfreq/devfreq.c:2270
msgid "Resource-managed devfreq_unregister_notifier()"
msgstr ""

#: ../../../driver-api/devfreq:29: drivers/devfreq/devfreq-event.c:29
msgid ""
"Enable the devfreq-event dev and increase the enable_count of devfreq-event "
"dev."
msgstr ""

#: ../../../driver-api/devfreq:29: drivers/devfreq/devfreq-event.c:35
#: drivers/devfreq/devfreq-event.c:66 drivers/devfreq/devfreq-event.c:104
#: drivers/devfreq/devfreq-event.c:131 drivers/devfreq/devfreq-event.c:159
#: drivers/devfreq/devfreq-event.c:193 drivers/devfreq/devfreq-event.c:352
#: drivers/devfreq/devfreq-event.c:420
msgid "``struct devfreq_event_dev *edev``"
msgstr ""

#: ../../../driver-api/devfreq:29: drivers/devfreq/devfreq-event.c:32
msgid ""
"Note that this function increase the enable_count and enable the devfreq-"
"event device. The devfreq-event device should be enabled before using it by "
"devfreq device."
msgstr ""

#: ../../../driver-api/devfreq:29: drivers/devfreq/devfreq-event.c:60
msgid ""
"Disable the devfreq-event dev and decrease the enable_count of the devfreq-"
"event dev."
msgstr ""

#: ../../../driver-api/devfreq:29: drivers/devfreq/devfreq-event.c:63
msgid ""
"Note that this function decrease the enable_count and disable the devfreq-"
"event device. After the devfreq-event device is disabled, devfreq device "
"can't use the devfreq-event device for get/set/reset operations."
msgstr ""

#: ../../../driver-api/devfreq:29: drivers/devfreq/devfreq-event.c:98
msgid "Check whether devfreq-event dev is enabled or not."
msgstr ""

#: ../../../driver-api/devfreq:29: drivers/devfreq/devfreq-event.c:101
msgid ""
"Note that this function check whether devfreq-event dev is enabled or not. "
"If return true, the devfreq-event dev is enabeld. If return false, the "
"devfreq-event dev is disabled."
msgstr ""

#: ../../../driver-api/devfreq:29: drivers/devfreq/devfreq-event.c:125
msgid "Set event to devfreq-event dev to start."
msgstr ""

#: ../../../driver-api/devfreq:29: drivers/devfreq/devfreq-event.c:127
msgid ""
"Note that this function set the event to the devfreq-event device to start "
"for getting the event data which could be various event type."
msgstr ""

#: ../../../driver-api/devfreq:29: drivers/devfreq/devfreq-event.c:153
msgid "Get {load|total}_count from devfreq-event dev."
msgstr ""

#: ../../../driver-api/devfreq:29: drivers/devfreq/devfreq-event.c:156
msgid "``struct devfreq_event_data *edata``"
msgstr ""

#: ../../../driver-api/devfreq:29: drivers/devfreq/devfreq-event.c:155
msgid "the calculated data of devfreq-event device"
msgstr ""

#: ../../../driver-api/devfreq:29: drivers/devfreq/devfreq-event.c:156
msgid ""
"Note that this function get the calculated event data from devfreq-event dev "
"after stoping the progress of whole sequence of devfreq-event dev."
msgstr ""

#: ../../../driver-api/devfreq:29: drivers/devfreq/devfreq-event.c:187
msgid "Reset all opeations of devfreq-event dev."
msgstr ""

#: ../../../driver-api/devfreq:29: drivers/devfreq/devfreq-event.c:189
msgid ""
"Note that this function stop all operations of devfreq-event dev and reset "
"the current event data to make the devfreq-event device into initial state."
msgstr ""

#: ../../../driver-api/devfreq:29: drivers/devfreq/devfreq-event.c:213
msgid "Get the devfreq-event dev from devicetree."
msgstr ""

#: ../../../driver-api/devfreq:29: drivers/devfreq/devfreq-event.c:215
#: drivers/devfreq/devfreq-event.c:257
msgid "the pointer to the given device"
msgstr ""

#: ../../../driver-api/devfreq:29: drivers/devfreq/devfreq-event.c:217
#: drivers/devfreq/devfreq-event.c:259
msgid "``const char *phandle_name``"
msgstr ""

#: ../../../driver-api/devfreq:29: drivers/devfreq/devfreq-event.c:216
#: drivers/devfreq/devfreq-event.c:258
msgid "name of property holding a phandle value"
msgstr ""

#: ../../../driver-api/devfreq:29: drivers/devfreq/devfreq-event.c:218
msgid "``int index``"
msgstr ""

#: ../../../driver-api/devfreq:29: drivers/devfreq/devfreq-event.c:217
msgid "the index into list of devfreq-event device"
msgstr ""

#: ../../../driver-api/devfreq:29: drivers/devfreq/devfreq-event.c:218
msgid "Note that this function return the pointer of devfreq-event device."
msgstr ""

#: ../../../driver-api/devfreq:29: drivers/devfreq/devfreq-event.c:256
msgid "Get the count of devfreq-event dev"
msgstr ""

#: ../../../driver-api/devfreq:29: drivers/devfreq/devfreq-event.c:259
msgid "Note that this function return the count of devfreq-event devices."
msgstr ""

#: ../../../driver-api/devfreq:29: drivers/devfreq/devfreq-event.c:292
msgid "Add new devfreq-event device."
msgstr ""

#: ../../../driver-api/devfreq:29: drivers/devfreq/devfreq-event.c:293
#: drivers/devfreq/devfreq-event.c:385 drivers/devfreq/devfreq-event.c:418
msgid "the device owning the devfreq-event device being created"
msgstr ""

#: ../../../driver-api/devfreq:29: drivers/devfreq/devfreq-event.c:295
#: drivers/devfreq/devfreq-event.c:387
msgid "``struct devfreq_event_desc *desc``"
msgstr ""

#: ../../../driver-api/devfreq:29: drivers/devfreq/devfreq-event.c:294
#: drivers/devfreq/devfreq-event.c:386
msgid ""
"the devfreq-event device's descriptor which include essential data for "
"devfreq-event device."
msgstr ""

#: ../../../driver-api/devfreq:29: drivers/devfreq/devfreq-event.c:296
msgid ""
"Note that this function add new devfreq-event device to devfreq-event class "
"list and register the device of the devfreq-event device."
msgstr ""

#: ../../../driver-api/devfreq:29: drivers/devfreq/devfreq-event.c:346
msgid "Remove the devfreq-event device registered."
msgstr ""

#: ../../../driver-api/devfreq:29: drivers/devfreq/devfreq-event.c:348
msgid "Note that this function removes the registered devfreq-event device."
msgstr ""

#: ../../../driver-api/devfreq:29: drivers/devfreq/devfreq-event.c:384
msgid "Resource-managed devfreq_event_add_edev()"
msgstr ""

#: ../../../driver-api/devfreq:29: drivers/devfreq/devfreq-event.c:388
msgid ""
"Note that this function manages automatically the memory of devfreq-event "
"device using device resource management and simplify the free operation for "
"memory of devfreq-event device."
msgstr ""

#: ../../../driver-api/devfreq:29: drivers/devfreq/devfreq-event.c:417
msgid "Resource-managed devfreq_event_remove_edev()"
msgstr ""

#: ../../../driver-api/devfreq:29: drivers/devfreq/devfreq-event.c:420
msgid ""
"Note that this function manages automatically the memory of devfreq-event "
"device using device resource management."
msgstr ""
