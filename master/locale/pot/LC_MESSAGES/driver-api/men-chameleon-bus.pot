# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../driver-api/men-chameleon-bus.rst:3
#: ../../../driver-api/men-chameleon-bus.rst:60
msgid "MEN Chameleon Bus"
msgstr ""

#: ../../../driver-api/men-chameleon-bus.rst:25
msgid "Introduction"
msgstr ""

#: ../../../driver-api/men-chameleon-bus.rst:27
msgid ""
"This document describes the architecture and implementation of the MEN "
"Chameleon Bus (called MCB throughout this document)."
msgstr ""

#: ../../../driver-api/men-chameleon-bus.rst:31
msgid "Scope of this Document"
msgstr ""

#: ../../../driver-api/men-chameleon-bus.rst:33
msgid ""
"This document is intended to be a short overview of the current "
"implementation and does by no means describe the complete possibilities of "
"MCB based devices."
msgstr ""

#: ../../../driver-api/men-chameleon-bus.rst:38
msgid "Limitations of the current implementation"
msgstr ""

#: ../../../driver-api/men-chameleon-bus.rst:40
msgid ""
"The current implementation is limited to PCI and PCIe based carrier devices "
"that only use a single memory resource and share the PCI legacy IRQ.  Not "
"implemented are:"
msgstr ""

#: ../../../driver-api/men-chameleon-bus.rst:44
msgid "Multi-resource MCB devices like the VME Controller or M-Module carrier."
msgstr ""

#: ../../../driver-api/men-chameleon-bus.rst:45
msgid ""
"MCB devices that need another MCB device, like SRAM for a DMA Controller's "
"buffer descriptors or a video controller's video memory."
msgstr ""

#: ../../../driver-api/men-chameleon-bus.rst:47
msgid ""
"A per-carrier IRQ domain for carrier devices that have one (or more) IRQs "
"per MCB device like PCIe based carriers with MSI or MSI-X support."
msgstr ""

#: ../../../driver-api/men-chameleon-bus.rst:51
msgid "Architecture"
msgstr ""

#: ../../../driver-api/men-chameleon-bus.rst:53
msgid "MCB is divided into 3 functional blocks:"
msgstr ""

#: ../../../driver-api/men-chameleon-bus.rst:55
msgid "The MEN Chameleon Bus itself,"
msgstr ""

#: ../../../driver-api/men-chameleon-bus.rst:56
msgid "drivers for MCB Carrier Devices and"
msgstr ""

#: ../../../driver-api/men-chameleon-bus.rst:57
msgid "the parser for the Chameleon table."
msgstr ""

#: ../../../driver-api/men-chameleon-bus.rst:62
msgid ""
"The MEN Chameleon Bus is an artificial bus system that attaches to a so "
"called Chameleon FPGA device found on some hardware produced my MEN Mikro "
"Elektronik GmbH. These devices are multi-function devices implemented in a "
"single FPGA and usually attached via some sort of PCI or PCIe link. Each "
"FPGA contains a header section describing the content of the FPGA. The "
"header lists the device id, PCI BAR, offset from the beginning of the PCI "
"BAR, size in the FPGA, interrupt number and some other properties currently "
"not handled by the MCB implementation."
msgstr ""

#: ../../../driver-api/men-chameleon-bus.rst:72
msgid "Carrier Devices"
msgstr ""

#: ../../../driver-api/men-chameleon-bus.rst:74
msgid ""
"A carrier device is just an abstraction for the real world physical bus the "
"Chameleon FPGA is attached to. Some IP Core drivers may need to interact "
"with properties of the carrier device (like querying the IRQ number of a PCI "
"device). To provide abstraction from the real hardware bus, an MCB carrier "
"device provides callback methods to translate the driver's MCB function "
"calls to hardware related function calls. For example a carrier device may "
"implement the get_irq() method which can be translated into a hardware bus "
"query for the IRQ number the device should use."
msgstr ""

#: ../../../driver-api/men-chameleon-bus.rst:84
msgid "Parser"
msgstr ""

#: ../../../driver-api/men-chameleon-bus.rst:86
msgid ""
"The parser reads the first 512 bytes of a Chameleon device and parses the "
"Chameleon table. Currently the parser only supports the Chameleon v2 variant "
"of the Chameleon table but can easily be adopted to support an older or "
"possible future variant. While parsing the table's entries new MCB devices "
"are allocated and their resources are assigned according to the resource "
"assignment in the Chameleon table. After resource assignment is finished, "
"the MCB devices are registered at the MCB and thus at the driver core of the "
"Linux kernel."
msgstr ""

#: ../../../driver-api/men-chameleon-bus.rst:96
msgid "Resource handling"
msgstr ""

#: ../../../driver-api/men-chameleon-bus.rst:98
msgid ""
"The current implementation assigns exactly one memory and one IRQ resource "
"per MCB device. But this is likely going to change in the future."
msgstr ""

#: ../../../driver-api/men-chameleon-bus.rst:102
msgid "Memory Resources"
msgstr ""

#: ../../../driver-api/men-chameleon-bus.rst:104
msgid ""
"Each MCB device has exactly one memory resource, which can be requested from "
"the MCB bus. This memory resource is the physical address of the MCB device "
"inside the carrier and is intended to be passed to ioremap() and friends. It "
"is already requested from the kernel by calling request_mem_region()."
msgstr ""

#: ../../../driver-api/men-chameleon-bus.rst:110
msgid "IRQs"
msgstr ""

#: ../../../driver-api/men-chameleon-bus.rst:112
msgid ""
"Each MCB device has exactly one IRQ resource, which can be requested from "
"the MCB bus. If a carrier device driver implements the ->get_irq() callback "
"method, the IRQ number assigned by the carrier device will be returned, "
"otherwise the IRQ number inside the Chameleon table will be returned. This "
"number is suitable to be passed to request_irq()."
msgstr ""

#: ../../../driver-api/men-chameleon-bus.rst:119
msgid "Writing an MCB driver"
msgstr ""

#: ../../../driver-api/men-chameleon-bus.rst:122
msgid "The driver structure"
msgstr ""

#: ../../../driver-api/men-chameleon-bus.rst:124
msgid ""
"Each MCB driver has a structure to identify the device driver as well as "
"device ids which identify the IP Core inside the FPGA. The driver structure "
"also contains callback methods which get executed on driver probe and "
"removal from the system::"
msgstr ""

#: ../../../driver-api/men-chameleon-bus.rst:146
msgid "Probing and attaching"
msgstr ""

#: ../../../driver-api/men-chameleon-bus.rst:148
msgid ""
"When a driver is loaded and the MCB devices it services are found, the MCB "
"core will call the driver's probe callback method. When the driver is "
"removed from the system, the MCB core will call the driver's remove callback "
"method::"
msgstr ""

#: ../../../driver-api/men-chameleon-bus.rst:156
msgid "Initializing the driver"
msgstr ""

#: ../../../driver-api/men-chameleon-bus.rst:158
msgid ""
"When the kernel is booted or your foo driver module is inserted, you have to "
"perform driver initialization. Usually it is enough to register your driver "
"module at the MCB core::"
msgstr ""

#: ../../../driver-api/men-chameleon-bus.rst:174
msgid "The module_mcb_driver() macro can be used to reduce the above code::"
msgstr ""

#: ../../../driver-api/men-chameleon-bus.rst:179
msgid "Using DMA"
msgstr ""

#: ../../../driver-api/men-chameleon-bus.rst:181
msgid ""
"To make use of the kernel's DMA-API's function, you will need to use the "
"carrier device's 'struct device'. Fortunately 'struct mcb_device' embeds a "
"pointer (->dma_dev) to the carrier's device for DMA purposes::"
msgstr ""
