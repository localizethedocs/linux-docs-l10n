# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../driver-api/mei/mei.rst:4
msgid "Introduction"
msgstr ""

#: ../../../driver-api/mei/mei.rst:6
msgid ""
"The Intel Management Engine (Intel ME) is an isolated and protected "
"computing resource (Co-processor) residing inside certain Intel chipsets. "
"The Intel ME provides support for computer/IT management and security "
"features. The actual feature set depends on the Intel chipset SKU."
msgstr ""

#: ../../../driver-api/mei/mei.rst:11
msgid ""
"The Intel Management Engine Interface (Intel MEI, previously known as HECI) "
"is the interface between the Host and Intel ME. This interface is exposed to "
"the host as a PCI device, actually multiple PCI devices might be exposed. "
"The Intel MEI Driver is in charge of the communication channel between a "
"host application and the Intel ME features."
msgstr ""

#: ../../../driver-api/mei/mei.rst:17
msgid ""
"Each Intel ME feature, or Intel ME Client is addressed by a unique GUID and "
"each client has its own protocol. The protocol is message-based with a "
"header and payload up to maximal number of bytes advertised by the client, "
"upon connection."
msgstr ""

#: ../../../driver-api/mei/mei.rst:23
msgid "Intel MEI Driver"
msgstr ""

#: ../../../driver-api/mei/mei.rst:25
msgid "The driver exposes a character device with device nodes /dev/meiX."
msgstr ""

#: ../../../driver-api/mei/mei.rst:27
msgid ""
"An application maintains communication with an Intel ME feature while /dev/"
"meiX is open. The binding to a specific feature is performed by calling :c:"
"macro:`MEI_CONNECT_CLIENT_IOCTL`, which passes the desired GUID. The number "
"of instances of an Intel ME feature that can be opened at the same time "
"depends on the Intel ME feature, but most of the features allow only a "
"single instance."
msgstr ""

#: ../../../driver-api/mei/mei.rst:34
msgid ""
"The driver is transparent to data that are passed between firmware feature "
"and host application."
msgstr ""

#: ../../../driver-api/mei/mei.rst:37
msgid ""
"Because some of the Intel ME features can change the system configuration, "
"the driver by default allows only a privileged user to access it."
msgstr ""

#: ../../../driver-api/mei/mei.rst:41
msgid "The session is terminated calling :c:expr:`close(fd)`."
msgstr ""

#: ../../../driver-api/mei/mei.rst:43
msgid ""
"A code snippet for an application communicating with Intel AMTHI client:"
msgstr ""

#: ../../../driver-api/mei/mei.rst:45
msgid ""
"In order to support virtualization or sandboxing a trusted supervisor can "
"use :c:macro:`MEI_CONNECT_CLIENT_IOCTL_VTAG` to create virtual channels with "
"an Intel ME feature. Not all features support virtual channels such client "
"with answer EOPNOTSUPP."
msgstr ""

#: ../../../driver-api/mei/mei.rst:75
msgid "User space API"
msgstr ""

#: ../../../driver-api/mei/mei.rst:78
msgid "IOCTLs:"
msgstr ""

#: ../../../driver-api/mei/mei.rst:80
msgid "The Intel MEI Driver supports the following IOCTL commands:"
msgstr ""

#: ../../../driver-api/mei/mei.rst:83
msgid "IOCTL_MEI_CONNECT_CLIENT"
msgstr ""

#: ../../../driver-api/mei/mei.rst:84
msgid "Connect to firmware Feature/Client."
msgstr ""

#: ../../../driver-api/mei/mei.rst:0
msgid "Note"
msgstr ""

#: ../../../driver-api/mei/mei.rst:114
msgid ""
"max_msg_length (MTU) in client properties describes the maximum data that "
"can be sent or received. (e.g. if MTU=2K, can send requests up to bytes 2k "
"and received responses up to 2k bytes)."
msgstr ""

#: ../../../driver-api/mei/mei.rst:119
msgid "IOCTL_MEI_CONNECT_CLIENT_VTAG:"
msgstr ""

#: ../../../driver-api/mei/mei.rst:152
msgid "IOCTL_MEI_NOTIFY_SET"
msgstr ""

#: ../../../driver-api/mei/mei.rst:153
msgid "Enable or disable event notifications."
msgstr ""

#: ../../../driver-api/mei/mei.rst:179
msgid "The client must be connected in order to enable notification events"
msgstr ""

#: ../../../driver-api/mei/mei.rst:183
msgid "IOCTL_MEI_NOTIFY_GET"
msgstr ""

#: ../../../driver-api/mei/mei.rst:184
msgid "Retrieve event"
msgstr ""

#: ../../../driver-api/mei/mei.rst:204
msgid ""
"The client must be connected and event notification has to be enabled in "
"order to receive an event"
msgstr ""

#: ../../../driver-api/mei/mei.rst:210
msgid "Supported Chipsets"
msgstr ""

#: ../../../driver-api/mei/mei.rst:211
msgid "82X38/X48 Express and newer"
msgstr ""

#: ../../../driver-api/mei/mei.rst:213
msgid "linux-mei@linux.intel.com"
msgstr ""
