# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-06 15:47+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../driver-api/media/dtv-demux.rst:4
msgid "Digital TV Demux kABI"
msgstr ""

#: ../../../driver-api/media/dtv-demux.rst:7
msgid "Digital TV Demux"
msgstr ""

#: ../../../driver-api/media/dtv-demux.rst:9
msgid ""
"The Kernel Digital TV Demux kABI defines a driver-internal interface for "
"registering low-level, hardware specific driver to a hardware independent "
"demux layer. It is only of interest for Digital TV device driver writers. "
"The header file for this kABI is named ``demux.h`` and located in ``include/"
"media``."
msgstr ""

#: ../../../driver-api/media/dtv-demux.rst:15
msgid ""
"The demux kABI should be implemented for each demux in the system. It is "
"used to select the TS source of a demux and to manage the demux resources. "
"When the demux client allocates a resource via the demux kABI, it receives a "
"pointer to the kABI of that resource."
msgstr ""

#: ../../../driver-api/media/dtv-demux.rst:20
msgid ""
"Each demux receives its TS input from a DVB front-end or from memory, as set "
"via this demux kABI. In a system with more than one front-end, the kABI can "
"be used to select one of the DVB front-ends as a TS source for a demux, "
"unless this is fixed in the HW platform."
msgstr ""

#: ../../../driver-api/media/dtv-demux.rst:25
msgid ""
"The demux kABI only controls front-ends regarding to their connections with "
"demuxes; the kABI used to set the other front-end parameters, such as "
"tuning, are defined via the Digital TV Frontend kABI."
msgstr ""

#: ../../../driver-api/media/dtv-demux.rst:29
msgid ""
"The functions that implement the abstract interface demux should be defined "
"static or module private and registered to the Demux core for external "
"access. It is not necessary to implement every function in the struct :c:"
"type:`dmx_demux`. For example, a demux interface might support Section "
"filtering, but not PES filtering. The kABI client is expected to check the "
"value of any function pointer before calling the function: the value of "
"``NULL`` means that the function is not available."
msgstr ""

#: ../../../driver-api/media/dtv-demux.rst:37
msgid ""
"Whenever the functions of the demux API modify shared data, the "
"possibilities of lost update and race condition problems should be "
"addressed, e.g. by protecting parts of code with mutexes."
msgstr ""

#: ../../../driver-api/media/dtv-demux.rst:41
msgid ""
"Note that functions called from a bottom half context must not sleep. Even a "
"simple memory allocation without using ``GFP_ATOMIC`` can result in a kernel "
"thread being put to sleep if swapping is needed. For example, the Linux "
"Kernel calls the functions of a network device interface from a bottom half "
"context. Thus, if a demux kABI function is called from network device code, "
"the function must not sleep."
msgstr ""

#: ../../../driver-api/media/dtv-demux.rst:49
msgid "Demux Callback API"
msgstr ""

#: ../../../driver-api/media/dtv-demux.rst:51
msgid ""
"This kernel-space API comprises the callback functions that deliver filtered "
"data to the demux client. Unlike the other DVB kABIs, these functions are "
"provided by the client and called from the demux code."
msgstr ""

#: ../../../driver-api/media/dtv-demux.rst:55
msgid ""
"The function pointers of this abstract interface are not packed into a "
"structure as in the other demux APIs, because the callback functions are "
"registered and used independent of each other. As an example, it is possible "
"for the API client to provide several callback functions for receiving TS "
"packets and no callbacks for PES packets or sections."
msgstr ""

#: ../../../driver-api/media/dtv-demux.rst:61
msgid ""
"The functions that implement the callback API need not be re-entrant: when a "
"demux driver calls one of these functions, the driver is not allowed to call "
"the function again before the original call returns. If a callback is "
"triggered by a hardware interrupt, it is recommended to use the Linux bottom "
"half mechanism or start a tasklet instead of making the callback function "
"call directly from a hardware interrupt."
msgstr ""

#: ../../../driver-api/media/dtv-demux.rst:68
msgid ""
"This mechanism is implemented by :c:func:`dmx_ts_cb()` and :c:func:"
"`dmx_section_cb()` callbacks."
msgstr ""

#: ../../../driver-api/media/dtv-demux.rst:72
msgid "Digital TV Demux device registration functions and data structures"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:40
msgid "type of demux filter type."
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:44
#: include/media/dmxdev.h:57 ../../../driver-api/media/dtv-demux:79:
#: include/media/dvb_demux.h:34 include/media/dvb_demux.h:45
#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:68
#: include/media/demux.h:311 include/media/demux.h:346
msgid "**Constants**"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:46
msgid "``DMXDEV_TYPE_NONE``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:47
msgid "no filter set."
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:49
msgid "``DMXDEV_TYPE_SEC``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:50
msgid "section filter."
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:52
msgid "``DMXDEV_TYPE_PES``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:53
msgid "Program Elementary Stream (PES) filter."
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:53
msgid "state machine for the dmxdev."
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:59
msgid "``DMXDEV_STATE_FREE``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:60
#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:48
msgid "indicates that the filter is freed."
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:62
msgid "``DMXDEV_STATE_ALLOCATED``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:63
#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:51
msgid "indicates that the filter was allocated to be used."
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:66
msgid "``DMXDEV_STATE_SET``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:67
msgid "indicates that the filter parameters are set."
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:69
msgid "``DMXDEV_STATE_GO``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:70
#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:59
msgid "indicates that the filter is running."
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:72
msgid "``DMXDEV_STATE_DONE``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:73
msgid ""
"indicates that a packet was already filtered and the filter is now disabled. "
"Set only if ``DMX_ONESHOT``. See :c:type:`dmx_sct_filter_params`."
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:78
msgid "``DMXDEV_STATE_TIMEDOUT``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:79
msgid "Indicates a timeout condition."
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:76
msgid "digital TV dmxdev feed"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:80
#: include/media/dmxdev.h:94 include/media/dmxdev.h:159
#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:68
#: include/media/dvb_demux.h:99 include/media/dvb_demux.h:169
#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:85
#: include/media/demux.h:116 include/media/demux.h:143
#: include/media/demux.h:326 include/media/demux.h:375
msgid "**Definition**::"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:88
#: include/media/dmxdev.h:119 include/media/dmxdev.h:179
#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:82
#: include/media/dvb_demux.h:127 include/media/dvb_demux.h:199
#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:96
#: include/media/demux.h:126 include/media/demux.h:157
#: include/media/demux.h:333 include/media/demux.h:396
msgid "**Members**"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:78
#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:115
msgid "``pid``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:79
msgid "Program ID to be filtered"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:79
msgid "``ts``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:80
msgid "pointer to :c:type:`struct dmx_ts_feed <dmx_ts_feed>`"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:80
#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:70
msgid "``next``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:81
msgid ":c:type:`struct list_head <list_head>` pointing to the next feed."
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:90
msgid "digital TV dmxdev filter"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:92
#: include/media/dmxdev.h:161 ../../../driver-api/media/dtv-demux:79:
#: include/media/dvb_demux.h:66 include/media/dvb_demux.h:117
#: include/media/dvb_demux.h:186
msgid "``filter``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:93
msgid ""
"a union describing a dmxdev filter. Currently used only for section filters."
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:94
msgid "``filter.sec``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:95
msgid ""
"a :c:type:`struct dmx_section_filter <dmx_section_filter>` pointer. For "
"section filter only."
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:96
#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:71
#: include/media/dvb_demux.h:97 include/media/dvb_demux.h:187
msgid "``feed``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:97
msgid ""
"a union describing a dmxdev feed. Depending on the filter type, it can be "
"either **feed.ts** or **feed.sec**."
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:99
#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:100
msgid "``feed.ts``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:100
msgid "a :c:type:`struct list_head <list_head>` list. For TS and PES feeds."
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:101
#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:102
msgid "``feed.sec``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:102
#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:103
msgid ""
"a :c:type:`struct dmx_section_feed <dmx_section_feed>` pointer. For section "
"feed only."
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:103
msgid "``params``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:104
msgid ""
"a union describing dmxdev filter parameters. Depending on the filter type, "
"it can be either **params.sec** or **params.pes**."
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:106
msgid "``params.sec``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:107
msgid ""
"a :c:type:`struct dmx_sct_filter_params <dmx_sct_filter_params>` embedded "
"struct. For section filter only."
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:108
msgid "``params.pes``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:109
msgid ""
"a :c:type:`struct dmx_pes_filter_params <dmx_pes_filter_params>` embedded "
"struct. For PES filter only."
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:110
#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:74
#: include/media/dvb_demux.h:113
msgid "``type``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:111
msgid ""
"type of the dmxdev filter, as defined by :c:type:`enum dmxdev_type "
"<dmxdev_type>`."
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:111
#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:73
#: include/media/dvb_demux.h:114
msgid "``state``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:112
msgid ""
"state of the dmxdev filter, as defined by :c:type:`enum dmxdev_state "
"<dmxdev_state>`."
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:112
msgid "``dev``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:113
#: include/media/dmxdev.h:201 include/media/dmxdev.h:209
msgid "pointer to :c:type:`struct dmxdev <dmxdev>`."
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:113
msgid "``buffer``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:114
msgid "an embedded :c:type:`struct dvb_ringbuffer <dvb_ringbuffer>` buffer."
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:114
msgid "``vb2_ctx``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:115
#: include/media/dmxdev.h:170
msgid "control struct for VB2 handler"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:115
#: include/media/dmxdev.h:170 ../../../driver-api/media/dtv-demux:79:
#: include/media/dvb_demux.h:195
msgid "``mutex``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:116
msgid "protects the access to :c:type:`struct dmxdev_filter <dmxdev_filter>`."
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:116
msgid "``timer``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:117
msgid ""
":c:type:`struct timer_list <timer_list>` embedded timer, used to check for "
"feed timeouts. Only for section filter."
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:119
msgid "``todo``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:120
msgid "index for the **secheader**. Only for section filter."
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:121
msgid "``secheader``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:122
msgid "buffer cache to parse the section header. Only for section filter."
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:155
msgid "Describes a digital TV demux device."
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:157
msgid "``dvbdev``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:158
msgid ""
"pointer to :c:type:`struct dvb_device <dvb_device>` associated with the "
"demux device node."
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:159
msgid "``dvr_dvbdev``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:160
msgid ""
"pointer to :c:type:`struct dvb_device <dvb_device>` associated with the dvr "
"device node."
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:162
msgid "pointer to :c:type:`struct dmxdev_filter <dmxdev_filter>`."
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:162
#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:111
msgid "``demux``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:163
msgid "pointer to :c:type:`struct dmx_demux <dmx_demux>`."
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:163
#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:170
msgid "``filternum``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:164
msgid "number of filters."
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:164
#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:374
msgid "``capabilities``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:165
msgid ""
"demux capabilities as defined by :c:type:`enum dmx_demux_caps "
"<dmx_demux_caps>`."
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:165
msgid "``may_do_mmap``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:166
msgid "flag used to indicate if the device may do mmap."
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:166
msgid "``exit``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:167
msgid "flag to indicate that the demux is being released."
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:167
msgid "``dvr_orig_fe``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:168
msgid "pointer to :c:type:`struct dmx_frontend <dmx_frontend>`."
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:168
msgid "``dvr_buffer``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:169
msgid ""
"embedded :c:type:`struct dvb_ringbuffer <dvb_ringbuffer>` for DVB output."
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:169
msgid "``dvr_vb2_ctx``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:171
msgid "protects the usage of this structure."
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:171
#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:197
msgid "``lock``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:172
msgid "protects access to :c:type:`dmxdev->filter <dmxdev>`->data."
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:198
msgid ""
"initializes a digital TV demux and registers both demux and DVR devices."
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:202
#: include/media/dmxdev.h:211 ../../../driver-api/media/dtv-demux:79:
#: include/media/dvb_demux.h:249 include/media/dvb_demux.h:274
#: include/media/dvb_demux.h:285 include/media/dvb_demux.h:303
#: include/media/dvb_demux.h:321 include/media/dvb_demux.h:340
#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:201
#: include/media/demux.h:268 include/media/demux.h:365
msgid "**Parameters**"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:204
#: include/media/dmxdev.h:213
msgid "``struct dmxdev *dmxdev``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:203
msgid "``struct dvb_adapter *adap``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:202
msgid "pointer to :c:type:`struct dvb_adapter <dvb_adapter>`."
msgstr ""

#: ../../../driver-api/media/dtv-demux:74: include/media/dmxdev.h:207
msgid "releases a digital TV demux and unregisters it."
msgstr ""

#: ../../../driver-api/media/dtv-demux.rst:77
msgid "High-level Digital TV demux interface"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:30
msgid "type of demux feed."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:36
msgid "``DMX_TYPE_TS``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:37
msgid "feed is in TS mode."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:39
msgid "``DMX_TYPE_SEC``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:40
msgid "feed is in Section mode."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:41
msgid "state machine for a demux filter."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:47
msgid "``DMX_STATE_FREE``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:50
msgid "``DMX_STATE_ALLOCATED``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:54
msgid "``DMX_STATE_READY``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:55
msgid "indicates that the filter is ready to be used."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:58
msgid "``DMX_STATE_GO``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:64
msgid "Describes a DVB demux section filter."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:67
msgid ""
"Section filter as defined by :c:type:`struct dmx_section_filter "
"<dmx_section_filter>`."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:67
msgid "``maskandmode``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:68
msgid "logical ``and`` bit mask."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:68
msgid "``maskandnotmode``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:69
msgid "logical ``and not`` bit mask."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:69
msgid "``doneq``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:70
msgid "flag that indicates when a filter is ready."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:71
msgid "pointer to the next section filter."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:72
msgid ":c:type:`struct dvb_demux_feed <dvb_demux_feed>` pointer."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:72
#: include/media/dvb_demux.h:127
msgid "``index``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:73
msgid "index of the used demux filter."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:74
msgid ""
"state of the filter as described by :c:type:`enum dvb_dmx_state "
"<dvb_dmx_state>`."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:75
msgid ""
"type of the filter as described by :c:type:`enum dvb_dmx_filter_type "
"<dvb_dmx_filter_type>`."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:95
msgid "describes a DVB field"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:98
msgid ""
"a union describing a digital TV feed. Depending on the feed type, it can be "
"either **feed.ts** or **feed.sec**."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:101
msgid "a :c:type:`struct dmx_ts_feed <dmx_ts_feed>` pointer. For TS feed only."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:104
msgid "``cb``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:105
msgid ""
"a union describing digital TV callbacks. Depending on the feed type, it can "
"be either **cb.ts** or **cb.sec**."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:107
msgid "``cb.ts``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:108
msgid "a dmx_ts_cb() calback function pointer. For TS feed only."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:109
msgid "``cb.sec``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:110
msgid "a dmx_section_cb() callback function pointer. For section feed only."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:112
msgid "pointer to :c:type:`struct dvb_demux <dvb_demux>`."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:112
#: include/media/dvb_demux.h:168 ../../../driver-api/media/dtv-demux:84:
#: include/media/demux.h:85 include/media/demux.h:121 include/media/demux.h:143
#: include/media/demux.h:378
msgid "``priv``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:113
#: include/media/dvb_demux.h:169
msgid "private data that can optionally be used by a DVB driver."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:114
msgid ""
"type of the filter, as defined by :c:type:`enum dvb_dmx_filter_type "
"<dvb_dmx_filter_type>`."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:115
msgid ""
"state of the filter as defined by :c:type:`enum dvb_dmx_state "
"<dvb_dmx_state>`."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:116
msgid "PID to be filtered."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:116
msgid "``timeout``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:117
msgid "feed timeout."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:118
#: include/media/dvb_demux.h:187
msgid "pointer to :c:type:`struct dvb_demux_filter <dvb_demux_filter>`."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:118
msgid "``buffer_flags``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:119
msgid ""
"Buffer flags used to report discontinuity users via DVB memory mapped API, "
"as defined by :c:type:`enum dmx_buffer_flags <dmx_buffer_flags>`."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:120
msgid "``ts_type``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:121
msgid ""
"type of TS, as defined by :c:type:`enum ts_filter_type <ts_filter_type>`."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:121
msgid "``pes_type``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:122
msgid "type of PES, as defined by :c:type:`enum dmx_ts_pes <dmx_ts_pes>`."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:122
msgid "``cc``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:123
msgid "MPEG-TS packet continuity counter"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:123
msgid "``pusi_seen``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:124
msgid ""
"if true, indicates that a discontinuity was detected. it is used to prevent "
"feeding of garbage from previous section."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:125
msgid "``peslen``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:126
msgid "length of the PES (Packet Elementary Stream)."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:126
msgid "``list_head``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:127
msgid "head for the list of digital TV demux feeds."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:128
msgid "a unique index for each feed. Can be used as hardware pid filter index."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:165
msgid "represents a digital TV demux"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:166
msgid "``dmx``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:167
msgid ""
"embedded :c:type:`struct dmx_demux <dmx_demux>` with demux capabilities and "
"callbacks."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:171
msgid "maximum amount of DVB filters."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:171
msgid "``feednum``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:172
msgid "maximum amount of DVB feeds."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:172
msgid "``start_feed``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:173
msgid "callback routine to be called in order to start a DVB feed."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:174
msgid "``stop_feed``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:175
msgid "callback routine to be called in order to stop a DVB feed."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:176
msgid "``write_to_decoder``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:177
msgid ""
"callback routine to be called if the feed is TS and it is routed to an A/V "
"decoder, when a new TS packet is received. Used only on av7110-av.c."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:180
msgid "``check_crc32``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:181
msgid ""
"callback routine to check CRC. If not initialized, dvb_demux will use an "
"internal one."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:182
msgid "``memcopy``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:183
msgid ""
"callback routine to memcopy received data. If not initialized, dvb_demux "
"will default to memcpy()."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:184
msgid "``users``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:185
msgid ""
"counter for the number of demux opened file descriptors. Currently, it is "
"limited to 10 users."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:188
msgid "pointer to :c:type:`struct dvb_demux_feed <dvb_demux_feed>`."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:188
msgid "``frontend_list``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:189
msgid ""
":c:type:`struct list_head <list_head>` with frontends used by the demux."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:189
msgid "``pesfilter``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:190
msgid ""
"array of :c:type:`struct dvb_demux_feed <dvb_demux_feed>` with the PES types "
"that will be filtered."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:191
msgid "``pids``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:192
msgid "list of filtered program IDs."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:192
msgid "``feed_list``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:193
msgid ":c:type:`struct list_head <list_head>` with feeds."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:193
msgid "``tsbuf``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:194
msgid "temporary buffer used internally to store TS packets."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:194
msgid "``tsbufp``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:195
msgid "temporary buffer index used internally."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:196
msgid ""
"pointer to :c:type:`struct mutex <mutex>` used to protect feed set logic."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:198
msgid "pointer to :c:type:`spinlock_t`, used to protect buffer handling."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:198
msgid "``cnt_storage``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:199
msgid "buffer used for TS/TEI continuity check."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:199
msgid "``speed_last_time``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:200
msgid ":c:type:`ktime_t` used for TS speed check."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:200
msgid "``speed_pkts_cnt``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:201
msgid "packets count used for TS speed check."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:245
msgid "initialize a digital TV demux struct."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:251
#: include/media/dvb_demux.h:276 include/media/dvb_demux.h:287
#: include/media/dvb_demux.h:305 include/media/dvb_demux.h:323
#: include/media/dvb_demux.h:342
msgid "``struct dvb_demux *demux``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:247
msgid ":c:type:`struct dvb_demux <dvb_demux>` to be initialized."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:249
#: include/media/dvb_demux.h:274 include/media/dvb_demux.h:288
#: include/media/dvb_demux.h:306 include/media/dvb_demux.h:324
#: include/media/dvb_demux.h:344 ../../../driver-api/media/dtv-demux:84:
#: include/media/demux.h:92 include/media/demux.h:125 include/media/demux.h:161
#: include/media/demux.h:202 include/media/demux.h:275
#: include/media/demux.h:331 include/media/demux.h:357
msgid "**Description**"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:248
msgid ""
"Before being able to register a digital TV demux struct, drivers should call "
"this routine. On its typical usage, some fields should be initialized at the "
"driver before calling it."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:252
msgid "A typical usecase is::"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:270
msgid "releases a digital TV demux internal buffers."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:272
msgid ":c:type:`struct dvb_demux <dvb_demux>` to be released."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:273
msgid ""
"The DVB core internally allocates data at **demux**. This routine releases "
"those data. Please notice that the struct itelf is not released, as it can "
"be embedded on other structs."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:281
#: include/media/dvb_demux.h:299
msgid ""
"use dvb software filter for a buffer with multiple MPEG-TS packets with 188 "
"bytes each."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:284
#: include/media/dvb_demux.h:302 include/media/dvb_demux.h:320
#: include/media/dvb_demux.h:339
msgid "pointer to :c:type:`struct dvb_demux <dvb_demux>`"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:286
#: include/media/dvb_demux.h:304 include/media/dvb_demux.h:322
#: include/media/dvb_demux.h:341
msgid "``const u8 *buf``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:285
#: include/media/dvb_demux.h:303 include/media/dvb_demux.h:321
msgid "buffer with data to be filtered"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:287
#: include/media/dvb_demux.h:305 include/media/dvb_demux.h:323
#: include/media/dvb_demux.h:342
msgid "``size_t count``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:286
#: include/media/dvb_demux.h:304
msgid "number of MPEG-TS packets with size of 188."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:287
msgid "The routine will discard a DVB packet that don't start with 0x47."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:289
msgid ""
"Use this routine if the DVB demux fills MPEG-TS buffers that are already "
"aligned."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:292
#: include/media/dvb_demux.h:311 include/media/dvb_demux.h:329
msgid "**NOTE**"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:293
#: include/media/dvb_demux.h:312
msgid "The **buf** size should have size equal to ``count * 188``."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:305
#: include/media/dvb_demux.h:323
msgid ""
"If a DVB packet doesn't start with 0x47, it will seek for the first byte "
"that starts with 0x47."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:308
#: include/media/dvb_demux.h:326
msgid ""
"Use this routine if the DVB demux fill buffers that may not start with a "
"packet start mark (0x47)."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:317
msgid ""
"use dvb software filter for a buffer with multiple MPEG-TS packets with 204 "
"bytes each."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:322
msgid "number of MPEG-TS packets with size of 204."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:330
msgid "The **buf** size should have size equal to ``count * 204``."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:336
msgid "make the raw data available to userspace without filtering"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:340
msgid "buffer with data"
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:341
msgid ""
"number of packets to be passed. The actual size of each packet depends on "
"the :c:type:`dvb_demux->feed <dvb_demux>`->cb.ts logic."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:343
msgid ""
"Use it if the driver needs to deliver the raw payload to userspace without "
"passing through the kernel demux. That is meant to support some delivery "
"systems that aren't based on MPEG-TS."
msgstr ""

#: ../../../driver-api/media/dtv-demux:79: include/media/dvb_demux.h:347
msgid ""
"This function relies on :c:type:`dvb_demux->feed <dvb_demux>`->cb.ts to "
"actually handle the buffer."
msgstr ""

#: ../../../driver-api/media/dtv-demux.rst:82
msgid "Driver-internal low-level hardware specific driver demux interface"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:64
msgid "filter type bitmap for dmx_ts_feed.set\\(\\)"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:70
msgid "``TS_PACKET``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:71
msgid "Send TS packets (188 bytes) to callback (default)."
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:73
msgid "``TS_PAYLOAD_ONLY``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:74
msgid ""
"In case TS_PACKET is set, only send the TS payload (<=184 bytes per packet) "
"to callback"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:77
msgid "``TS_DECODER``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:78
msgid "Send stream to built-in decoder (if present)."
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:80
msgid "``TS_DEMUX``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:81
msgid ""
"In case TS_PACKET is set, send the TS to the demux device, not to the dvr "
"device"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:81
msgid "Structure that contains a TS feed filter"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:83
#: include/media/demux.h:141
msgid "``is_filtering``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:84
#: include/media/demux.h:142
msgid "Set to non-zero when filtering in progress"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:84
#: include/media/demux.h:120 include/media/demux.h:142
msgid "``parent``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:85
#: include/media/demux.h:143
msgid "pointer to struct dmx_demux"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:86
#: include/media/demux.h:144
msgid "pointer to private data of the API client"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:86
#: include/media/demux.h:145
msgid "``set``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:87
msgid "sets the TS filter"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:87
#: include/media/demux.h:156
msgid "``start_filtering``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:88
msgid "starts TS filtering"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:88
#: include/media/demux.h:157
msgid "``stop_filtering``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:89
msgid "stops TS filtering"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:89
#: include/media/demux.h:158
msgid ""
"A TS feed is typically mapped to a hardware PID filter on the demux chip. "
"Using this API, the client can set the filtering properties to start/stop "
"filtering TS packets on a particular TS feed."
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:112
msgid "Structure that describes a section filter"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:114
msgid "``filter_value``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:115
msgid ""
"Contains up to 16 bytes (128 bits) of the TS section header that will be "
"matched by the section filter"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:116
msgid "``filter_mask``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:117
msgid ""
"Contains a 16 bytes (128 bits) filter mask with the bits specified by "
"**filter_value** that will be used on the filter match logic."
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:119
msgid "``filter_mode``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:120
msgid "Contains a 16 bytes (128 bits) filter mode."
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:121
msgid "Back-pointer to struct dmx_section_feed."
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:122
msgid "Pointer to private data of the API client."
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:122
msgid ""
"The **filter_mask** controls which bits of **filter_value** are compared "
"with the section headers/payload. On a binary value of 1 in filter_mask, the "
"corresponding bits are compared. The filter only accepts sections that are "
"equal to filter_value in all the tested bit positions."
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:139
msgid "Structure that contains a section feed filter"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:144
msgid "``check_crc``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:145
msgid "If non-zero, check the CRC values of filtered sections."
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:146
msgid "sets the section filter"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:146
msgid "``allocate_filter``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:147
msgid ""
"This function is used to allocate a section filter on the demux. It should "
"only be called when no filtering is in progress on this section feed. If a "
"filter cannot be allocated, the function fails with -ENOSPC."
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:150
msgid "``release_filter``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:151
msgid ""
"This function releases all the resources of a previously allocated section "
"filter. The function should not be called while filtering is in progress on "
"this section feed. After calling this function, the caller should not try to "
"dereference the filter pointer."
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:157
msgid "starts section filtering"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:158
msgid "stops section filtering"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:192
#: include/media/demux.h:259
msgid "**Typedef**: DVB demux TS filter callback function prototype"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:195
#: include/media/demux.h:262
msgid "**Syntax**"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:197
msgid ""
"``int dmx_ts_cb (const u8 *buffer1, size_t buffer1_length, const u8 "
"*buffer2, size_t buffer2_length, struct dmx_ts_feed *source, u32 "
"*buffer_flags)``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:203
#: include/media/demux.h:270
msgid "``const u8 *buffer1``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:192
msgid "Pointer to the start of the filtered TS packets."
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:194
msgid "``size_t buffer1_length``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:193
msgid "Length of the TS data in buffer1."
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:195
#: include/media/demux.h:264
msgid "``const u8 *buffer2``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:194
msgid "Pointer to the tail of the filtered TS packets, or NULL."
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:196
msgid "``size_t buffer2_length``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:195
msgid "Length of the TS data in buffer2."
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:197
msgid "``struct dmx_ts_feed *source``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:196
msgid "Indicates which TS feed is the source of the callback."
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:198
#: include/media/demux.h:271
msgid "``u32 *buffer_flags``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:197
#: include/media/demux.h:270
msgid ""
"Address where buffer flags are stored. Those are used to report "
"discontinuity users via DVB memory mapped API, as defined by :c:type:`enum "
"dmx_buffer_flags <dmx_buffer_flags>`."
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:201
msgid ""
"This function callback prototype, provided by the client of the demux API, "
"is called from the demux code. The function is only called when filtering on "
"a TS feed has been enabled using the start_filtering\\(\\) function at the :"
"c:type:`dmx_demux`. Any TS packets that match the filter settings are copied "
"to a circular buffer. The filtered TS packets are delivered to the client "
"using this callback function. It is expected that the **buffer1** and "
"**buffer2** callback parameters point to addresses within the circular "
"buffer, but other implementations are also possible. Note that the called "
"party should not try to free the memory the **buffer1** and **buffer2** "
"parameters point to."
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:213
msgid ""
"When this function is called, the **buffer1** parameter typically points to "
"the start of the first undelivered TS packet within a circular buffer. The "
"**buffer2** buffer parameter is normally NULL, except when the received TS "
"packets have crossed the last address of the circular buffer and \"wrapped\" "
"to the beginning of the buffer. In the latter case the **buffer1** parameter "
"would contain an address within the circular buffer, while the **buffer2** "
"parameter would contain the first address of the circular buffer. The number "
"of bytes delivered with this function (i.e. **buffer1_length** + "
"**buffer2_length**) is usually equal to the value of callback_length "
"parameter given in the set() function, with one exception: if a timeout "
"occurs before receiving callback_length bytes of TS data, any undelivered "
"packets are immediately delivered to the client by calling this function. "
"The timeout duration is controlled by the set() function in the TS Feed API."
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:227
msgid ""
"If a TS packet is received with errors that could not be fixed by the TS-"
"level forward error correction (FEC), the Transport_error_indicator flag of "
"the TS packet header should be set. The TS packet should not be discarded, "
"as the error can possibly be corrected by a higher layer protocol. If the "
"called party is slow in processing the callback, it is possible that the "
"circular buffer eventually fills up. If this happens, the demux driver "
"should discard any TS packets received while the buffer is full and return -"
"EOVERFLOW."
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:236
msgid ""
"The type of data returned to the callback can be selected by the :c:type:"
"`dmx_ts_feed`.**set** function. The type parameter decides if the raw TS "
"packet (TS_PACKET) or just the payload (TS_PACKET|TS_PAYLOAD_ONLY) should be "
"returned. If additionally the TS_DECODER bit is set the stream will also be "
"sent to the hardware MPEG decoder."
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:243
msgid "0, on success;"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:245
msgid "-EOVERFLOW, on buffer overflow."
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:264
msgid ""
"``int dmx_section_cb (const u8 *buffer1, size_t buffer1_len, const u8 "
"*buffer2, size_t buffer2_len, struct dmx_section_filter *source, u32 "
"*buffer_flags)``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:259
msgid ""
"Pointer to the start of the filtered section, e.g. within the circular "
"buffer of the demux driver."
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:262
msgid "``size_t buffer1_len``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:261
msgid ""
"Length of the filtered section data in **buffer1**, including headers and "
"CRC."
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:263
msgid ""
"Pointer to the tail of the filtered section data, or NULL. Useful to handle "
"the wrapping of a circular buffer."
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:267
msgid "``size_t buffer2_len``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:266
msgid ""
"Length of the filtered section data in **buffer2**, including headers and "
"CRC."
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:269
msgid "``struct dmx_section_filter *source``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:268
msgid "Indicates which section feed is the source of the callback."
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:274
msgid ""
"This function callback prototype, provided by the client of the demux API, "
"is called from the demux code. The function is only called when filtering of "
"sections has been enabled using the function :c:type:`dmx_ts_feed`."
"**start_filtering**. When the demux driver has received a complete section "
"that matches at least one section filter, the client is notified via this "
"callback function. Normally this function is called for each received "
"section; however, it is also possible to deliver multiple sections with one "
"callback, for example when the system load is high. If an error occurs while "
"receiving a section, this function should be called with the corresponding "
"error type set in the success field, whether or not there is data to "
"deliver. The Section Feed implementation should maintain a circular buffer "
"for received sections. However, this is not necessary if the Section Feed "
"API is implemented as a client of the TS Feed API, because the TS Feed "
"implementation then buffers the received data. The size of the circular "
"buffer can be configured using the :c:type:`dmx_ts_feed`.**set** function in "
"the Section Feed API. If there is no room in the circular buffer when a new "
"section is received, the section must be discarded. If this happens, the "
"value of the success parameter should be DMX_OVERRUN_ERROR on the next "
"callback."
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:307
msgid "Used to identify the type of frontend"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:313
msgid "``DMX_MEMORY_FE``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:314
msgid ""
"The source of the demux is memory. It means that the MPEG-TS to be filtered "
"comes from userspace, via write() syscall."
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:318
msgid "``DMX_FRONTEND_0``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:319
msgid "The source of the demux is a frontend connected to the demux."
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:322
msgid "Structure that lists the frontends associated with a demux"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:325
msgid "``connectivity_list``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:326
msgid "List of front-ends that can be connected to a particular demux;"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:327
msgid "``source``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:328
msgid "Type of the frontend."
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:328
msgid "FIXME: this structure should likely be replaced soon by some"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:329
msgid "media-controller based logic."
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:342
msgid "MPEG-2 TS Demux capabilities bitmap"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:348
msgid "``DMX_TS_FILTERING``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:349
msgid "set if TS filtering is supported;"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:351
msgid "``DMX_SECTION_FILTERING``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:352
msgid "set if section filtering is supported;"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:354
msgid "``DMX_MEMORY_BASED_FILTERING``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:355
msgid "set if write() available."
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:347
msgid ""
"Those flags are OR'ed in the :c:type:`dmx_demux.capabilities <dmx_demux>` "
"field"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:363
msgid "``DMX_FE_ENTRY (list)``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:361
msgid ""
"Casts elements in the list of registered front-ends from the generic type "
"struct list_head to the type * struct dmx_frontend"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:367
msgid "``list``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:365
msgid "list of struct dmx_frontend"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:371
msgid "Structure that contains the demux capabilities and callbacks."
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:375
msgid "Bitfield of capability flags."
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:376
msgid "``frontend``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:377
msgid "Front-end connected to the demux"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:379
msgid "Pointer to private data of the API client"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:380
msgid "``open``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:381
msgid ""
"This function reserves the demux for use by the caller and, if necessary, "
"initializes the demux. When the demux is no longer needed, the function "
"**close** should be called. It should be possible for multiple clients to "
"access the demux at the same time. Thus, the function implementation should "
"increment the demux usage count when **open** is called and decrement it "
"when **close** is called. The **demux** function parameter contains a "
"pointer to the demux API and instance data. It returns: 0 on success; -"
"EUSERS, if maximum usage count was reached; -EINVAL, on bad parameter."
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:393
msgid "``close``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:394
msgid ""
"This function reserves the demux for use by the caller and, if necessary, "
"initializes the demux. When the demux is no longer needed, the function "
"**close** should be called. It should be possible for multiple clients to "
"access the demux at the same time. Thus, the function implementation should "
"increment the demux usage count when **open** is called and decrement it "
"when **close** is called. The **demux** function parameter contains a "
"pointer to the demux API and instance data. It returns: 0 on success; -"
"ENODEV, if demux was not in use (e. g. no users); -EINVAL, on bad parameter."
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:406
msgid "``write``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:407
msgid ""
"This function provides the demux driver with a memory buffer containing TS "
"packets. Instead of receiving TS packets from the DVB front-end, the demux "
"driver software will read packets from memory. Any clients of this demux "
"with active TS, PES or Section filters will receive filtered data via the "
"Demux callback API (see 0). The function returns when all the data in the "
"buffer has been consumed by the demux. Demux hardware typically cannot read "
"TS from memory. If this is the case, memory-based filtering has to be "
"implemented entirely in software. The **demux** function parameter contains "
"a pointer to the demux API and instance data. The **buf** function parameter "
"contains a pointer to the TS data in kernel-space memory. The **count** "
"function parameter contains the length of the TS data. It returns: 0 on "
"success; -ERESTARTSYS, if mutex lock was interrupted; -EINTR, if a signal "
"handling is pending; -ENODEV, if demux was removed; -EINVAL, on bad "
"parameter."
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:426
msgid "``allocate_ts_feed``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:427
msgid ""
"Allocates a new TS feed, which is used to filter the TS packets carrying a "
"certain PID. The TS feed normally corresponds to a hardware PID filter on "
"the demux chip. The **demux** function parameter contains a pointer to the "
"demux API and instance data. The **feed** function parameter contains a "
"pointer to the TS feed API and instance data. The **callback** function "
"parameter contains a pointer to the callback function for passing received "
"TS packet. It returns: 0 on success; -ERESTARTSYS, if mutex lock was "
"interrupted; -EBUSY, if no more TS feeds is available; -EINVAL, on bad "
"parameter."
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:441
msgid "``release_ts_feed``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:442
msgid ""
"Releases the resources allocated with **allocate_ts_feed**. Any filtering in "
"progress on the TS feed should be stopped before calling this function. The "
"**demux** function parameter contains a pointer to the demux API and "
"instance data. The **feed** function parameter contains a pointer to the TS "
"feed API and instance data. It returns: 0 on success; -EINVAL on bad "
"parameter."
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:452
msgid "``allocate_section_feed``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:453
msgid ""
"Allocates a new section feed, i.e. a demux resource for filtering and "
"receiving sections. On platforms with hardware support for section "
"filtering, a section feed is directly mapped to the demux HW. On other "
"platforms, TS packets are first PID filtered in hardware and a hardware "
"section filter then emulated in software. The caller obtains an API pointer "
"of type dmx_section_feed_t as an out parameter. Using this API the caller "
"can set filtering parameters and start receiving sections. The **demux** "
"function parameter contains a pointer to the demux API and instance data. "
"The **feed** function parameter contains a pointer to the TS feed API and "
"instance data. The **callback** function parameter contains a pointer to the "
"callback function for passing received TS packet. It returns: 0 on success; -"
"EBUSY, if no more TS feeds is available; -EINVAL, on bad parameter."
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:471
msgid "``release_section_feed``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:472
msgid ""
"Releases the resources allocated with **allocate_section_feed**, including "
"allocated filters. Any filtering in progress on the section feed should be "
"stopped before calling this function. The **demux** function parameter "
"contains a pointer to the demux API and instance data. The **feed** function "
"parameter contains a pointer to the TS feed API and instance data. It "
"returns: 0 on success; -EINVAL, on bad parameter."
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:483
msgid "``add_frontend``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:484
msgid ""
"Registers a connectivity between a demux and a front-end, i.e., indicates "
"that the demux can be connected via a call to **connect_frontend** to use "
"the given front-end as a TS source. The client of this function has to "
"allocate dynamic or static memory for the frontend structure and initialize "
"its fields before calling this function. This function is normally called "
"during the driver initialization. The caller must not free the memory of the "
"frontend struct before successfully calling **remove_frontend**. The "
"**demux** function parameter contains a pointer to the demux API and "
"instance data. The **frontend** function parameter contains a pointer to the "
"front-end instance data. It returns: 0 on success; -EINVAL, on bad parameter."
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:499
msgid "``remove_frontend``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:500
msgid ""
"Indicates that the given front-end, registered by a call to "
"**add_frontend**, can no longer be connected as a TS source by this demux. "
"The function should be called when a front-end driver or a demux driver is "
"removed from the system. If the front-end is in use, the function fails with "
"the return value of -EBUSY. After successfully calling this function, the "
"caller can free the memory of the frontend struct if it was dynamically "
"allocated before the **add_frontend** operation. The **demux** function "
"parameter contains a pointer to the demux API and instance data. The "
"**frontend** function parameter contains a pointer to the front-end instance "
"data. It returns: 0 on success; -ENODEV, if the front-end was not found, -"
"EINVAL, on bad parameter."
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:516
msgid "``get_frontends``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:517
msgid ""
"Provides the APIs of the front-ends that have been registered for this "
"demux. Any of the front-ends obtained with this call can be used as a "
"parameter for **connect_frontend**. The include file demux.h contains the "
"macro DMX_FE_ENTRY() for converting an element of the generic type struct :c:"
"type:`list_head` * to the type struct :c:type:`dmx_frontend` *. The caller "
"must not free the memory of any of the elements obtained via this function "
"call. The **demux** function parameter contains a pointer to the demux API "
"and instance data. It returns a struct list_head pointer to the list of "
"front-end interfaces, or NULL in the case of an empty list."
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:528
msgid "``connect_frontend``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:529
msgid ""
"Connects the TS output of the front-end to the input of the demux. A demux "
"can only be connected to a front-end registered to the demux with the "
"function **add_frontend**. It may or may not be possible to connect multiple "
"demuxes to the same front-end, depending on the capabilities of the HW "
"platform. When not used, the front-end should be released by calling "
"**disconnect_frontend**. The **demux** function parameter contains a pointer "
"to the demux API and instance data. The **frontend** function parameter "
"contains a pointer to the front-end instance data. It returns: 0 on success; "
"-EINVAL, on bad parameter."
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:542
msgid "``disconnect_frontend``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:543
msgid ""
"Disconnects the demux and a front-end previously connected by a "
"**connect_frontend** call. The **demux** function parameter contains a "
"pointer to the demux API and instance data. It returns: 0 on success; -"
"EINVAL on bad parameter."
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:550
msgid "``get_pes_pids``"
msgstr ""

#: ../../../driver-api/media/dtv-demux:84: include/media/demux.h:551
msgid ""
"Get the PIDs for DMX_PES_AUDIO0, DMX_PES_VIDEO0, DMX_PES_TELETEXT0, "
"DMX_PES_SUBTITLE0 and DMX_PES_PCR0. The **demux** function parameter "
"contains a pointer to the demux API and instance data. The **pids** function "
"parameter contains an array with five u16 elements where the PIDs will be "
"stored. It returns: 0 on success; -EINVAL on bad parameter."
msgstr ""
