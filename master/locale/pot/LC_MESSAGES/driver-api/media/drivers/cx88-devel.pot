# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../driver-api/media/drivers/cx88-devel.rst:4
msgid "The cx88 driver"
msgstr ""

#: ../../../driver-api/media/drivers/cx88-devel.rst:6
msgid "Author:  Gerd Hoffmann"
msgstr ""

#: ../../../driver-api/media/drivers/cx88-devel.rst:9
msgid "Documentation missing at the cx88 datasheet"
msgstr ""

#: ../../../driver-api/media/drivers/cx88-devel.rst:11
msgid "MO_OUTPUT_FORMAT (0x310164)"
msgstr ""

#: ../../../driver-api/media/drivers/cx88-devel.rst:48
msgid ""
"0x47 is the sync byte for MPEG-2 transport stream packets. Datasheet "
"incorrectly states to use 47 decimal. 188 is the length. All DVB compliant "
"frontends output packets with this start code."
msgstr ""

#: ../../../driver-api/media/drivers/cx88-devel.rst:53
msgid "Hauppauge WinTV cx88 IR information"
msgstr ""

#: ../../../driver-api/media/drivers/cx88-devel.rst:55
msgid ""
"The controls for the mux are GPIO [0,1] for source, and GPIO 2 for muting."
msgstr ""

#: ../../../driver-api/media/drivers/cx88-devel.rst:58
msgid "GPIO0"
msgstr ""

#: ../../../driver-api/media/drivers/cx88-devel.rst:58
msgid "GPIO1"
msgstr ""

#: ../../../driver-api/media/drivers/cx88-devel.rst:60
#: ../../../driver-api/media/drivers/cx88-devel.rst:61
#: ../../../driver-api/media/drivers/cx88-devel.rst:62
msgid "0"
msgstr ""

#: ../../../driver-api/media/drivers/cx88-devel.rst:60
msgid "TV Audio"
msgstr ""

#: ../../../driver-api/media/drivers/cx88-devel.rst:61
#: ../../../driver-api/media/drivers/cx88-devel.rst:62
#: ../../../driver-api/media/drivers/cx88-devel.rst:63
msgid "1"
msgstr ""

#: ../../../driver-api/media/drivers/cx88-devel.rst:61
msgid "FM radio"
msgstr ""

#: ../../../driver-api/media/drivers/cx88-devel.rst:62
msgid "Line-In"
msgstr ""

#: ../../../driver-api/media/drivers/cx88-devel.rst:63
msgid "Mono tuner bypass or CD passthru (tuner specific)"
msgstr ""

#: ../../../driver-api/media/drivers/cx88-devel.rst:66
msgid "GPIO 16(I believe) is tied to the IR port (if present)."
msgstr ""

#: ../../../driver-api/media/drivers/cx88-devel.rst:69
msgid "From the data sheet:"
msgstr ""

#: ../../../driver-api/media/drivers/cx88-devel.rst:71
msgid "Register 24'h20004  PCI Interrupt Status"
msgstr ""

#: ../../../driver-api/media/drivers/cx88-devel.rst:73
msgid "bit [18]  IR_SMP_INT Set when 32 input samples have been collected over"
msgstr ""

#: ../../../driver-api/media/drivers/cx88-devel.rst:74
msgid "gpio[16] pin into GP_SAMPLE register."
msgstr ""

#: ../../../driver-api/media/drivers/cx88-devel.rst:76
msgid "What's missing from the data sheet:"
msgstr ""

#: ../../../driver-api/media/drivers/cx88-devel.rst:78
msgid ""
"Setup 4KHz sampling rate (roughly 2x oversampled; good enough for our RC5 "
"compat remote)"
msgstr ""

#: ../../../driver-api/media/drivers/cx88-devel.rst:80
msgid "set register 0x35C050 to  0xa80a80"
msgstr ""

#: ../../../driver-api/media/drivers/cx88-devel.rst:81
msgid "enable sampling"
msgstr ""

#: ../../../driver-api/media/drivers/cx88-devel.rst:82
msgid "set register 0x35C054 to 0x5"
msgstr ""

#: ../../../driver-api/media/drivers/cx88-devel.rst:83
msgid ""
"enable the IRQ bit 18 in the interrupt mask register (and provide for a "
"handler)"
msgstr ""

#: ../../../driver-api/media/drivers/cx88-devel.rst:86
msgid "GP_SAMPLE register is at 0x35C058"
msgstr ""

#: ../../../driver-api/media/drivers/cx88-devel.rst:88
msgid ""
"Bits are then right shifted into the GP_SAMPLE register at the specified "
"rate; you get an interrupt when a full DWORD is received. You need to "
"recover the actual RC5 bits out of the (oversampled) IR sensor bits. (Hint: "
"look for the 0/1and 1/0 crossings of the RC5 bi-phase data)  An actual raw "
"RC5 code will span 2-3 DWORDS, depending on the actual alignment."
msgstr ""

#: ../../../driver-api/media/drivers/cx88-devel.rst:94
msgid ""
"I'm pretty sure when no IR signal is present the receiver is always in a "
"marking state(1); but stray light, etc can cause intermittent noise values "
"as well.  Remember, this is a free running sample of the IR receiver state "
"over time, so don't assume any sample starts at any particular place."
msgstr ""

#: ../../../driver-api/media/drivers/cx88-devel.rst:100
msgid "Additional info"
msgstr ""

#: ../../../driver-api/media/drivers/cx88-devel.rst:102
msgid ""
"This data sheet (google search) seems to have a lovely description of the "
"RC5 basics: http://www.atmel.com/dyn/resources/prod_documents/doc2817.pdf"
msgstr ""

#: ../../../driver-api/media/drivers/cx88-devel.rst:106
msgid ""
"This document has more data: http://www.nenya.be/beor/electronics/rc5.htm"
msgstr ""

#: ../../../driver-api/media/drivers/cx88-devel.rst:109
msgid ""
"This document has a  how to decode a bi-phase data stream: http://www.ee."
"washington.edu/circuit_archive/text/ir_decode.txt"
msgstr ""

#: ../../../driver-api/media/drivers/cx88-devel.rst:112
msgid ""
"This document has still more info: http://www.xs4all.nl/~sbp/knowledge/ir/"
"rc5.htm"
msgstr ""
