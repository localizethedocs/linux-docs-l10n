# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../driver-api/firmware/efi/index.rst:5
msgid "UEFI Support"
msgstr ""

#: ../../../driver-api/firmware/efi/index.rst:8
msgid "UEFI stub library functions"
msgstr ""

#: ../../../driver-api/firmware/efi/index:10:
#: drivers/firmware/efi/libstub/mem.c:9
msgid "get memory map"
msgstr ""

#: ../../../driver-api/firmware/efi/index:10:
#: drivers/firmware/efi/libstub/mem.c:13 drivers/firmware/efi/libstub/mem.c:72
#: drivers/firmware/efi/libstub/mem.c:111
msgid "**Parameters**"
msgstr ""

#: ../../../driver-api/firmware/efi/index:10:
#: drivers/firmware/efi/libstub/mem.c:15
msgid "``struct efi_boot_memmap **map``"
msgstr ""

#: ../../../driver-api/firmware/efi/index:10:
#: drivers/firmware/efi/libstub/mem.c:10
msgid ""
"pointer to memory map pointer to which to assign the newly allocated memory "
"map"
msgstr ""

#: ../../../driver-api/firmware/efi/index:10:
#: drivers/firmware/efi/libstub/mem.c:13
msgid "``bool install_cfg_tbl``"
msgstr ""

#: ../../../driver-api/firmware/efi/index:10:
#: drivers/firmware/efi/libstub/mem.c:12
msgid "whether or not to install the boot memory map as a configuration table"
msgstr ""

#: ../../../driver-api/firmware/efi/index:10:
#: drivers/firmware/efi/libstub/mem.c:15 drivers/firmware/efi/libstub/mem.c:76
#: drivers/firmware/efi/libstub/mem.c:112
msgid "**Description**"
msgstr ""

#: ../../../driver-api/firmware/efi/index:10:
#: drivers/firmware/efi/libstub/mem.c:14
msgid ""
"Retrieve the UEFI memory map. The allocated memory leaves room for up to "
"EFI_MMAP_NR_SLACK_SLOTS additional memory map entries."
msgstr ""

#: ../../../driver-api/firmware/efi/index:10:
#: drivers/firmware/efi/libstub/mem.c:17 drivers/firmware/efi/libstub/mem.c:79
msgid "**Return**"
msgstr ""

#: ../../../driver-api/firmware/efi/index:10:
#: drivers/firmware/efi/libstub/mem.c:18 drivers/firmware/efi/libstub/mem.c:80
msgid "status code"
msgstr ""

#: ../../../driver-api/firmware/efi/index:10:
#: drivers/firmware/efi/libstub/mem.c:68
msgid "Allocate memory pages"
msgstr ""

#: ../../../driver-api/firmware/efi/index:10:
#: drivers/firmware/efi/libstub/mem.c:74 drivers/firmware/efi/libstub/mem.c:113
msgid "``unsigned long size``"
msgstr ""

#: ../../../driver-api/firmware/efi/index:10:
#: drivers/firmware/efi/libstub/mem.c:69
msgid "minimum number of bytes to allocate"
msgstr ""

#: ../../../driver-api/firmware/efi/index:10:
#: drivers/firmware/efi/libstub/mem.c:71
msgid "``unsigned long *addr``"
msgstr ""

#: ../../../driver-api/firmware/efi/index:10:
#: drivers/firmware/efi/libstub/mem.c:70
msgid ""
"On return the address of the first allocated page. The first allocated page "
"has alignment EFI_ALLOC_ALIGN which is an architecture dependent multiple of "
"the page size."
msgstr ""

#: ../../../driver-api/firmware/efi/index:10:
#: drivers/firmware/efi/libstub/mem.c:74
msgid "``unsigned long max``"
msgstr ""

#: ../../../driver-api/firmware/efi/index:10:
#: drivers/firmware/efi/libstub/mem.c:73
msgid "the address that the last allocated memory page shall not exceed"
msgstr ""

#: ../../../driver-api/firmware/efi/index:10:
#: drivers/firmware/efi/libstub/mem.c:75
msgid ""
"Allocate pages as EFI_LOADER_DATA. The allocated pages are aligned according "
"to EFI_ALLOC_ALIGN. The last allocated page will not exceed the address "
"given by **max**."
msgstr ""

#: ../../../driver-api/firmware/efi/index:10:
#: drivers/firmware/efi/libstub/mem.c:107
msgid "free memory pages"
msgstr ""

#: ../../../driver-api/firmware/efi/index:10:
#: drivers/firmware/efi/libstub/mem.c:108
msgid "size of the memory area to free in bytes"
msgstr ""

#: ../../../driver-api/firmware/efi/index:10:
#: drivers/firmware/efi/libstub/mem.c:110
msgid "``unsigned long addr``"
msgstr ""

#: ../../../driver-api/firmware/efi/index:10:
#: drivers/firmware/efi/libstub/mem.c:109
msgid "start of the memory area to free (must be EFI_PAGE_SIZE aligned)"
msgstr ""

#: ../../../driver-api/firmware/efi/index:10:
#: drivers/firmware/efi/libstub/mem.c:111
msgid ""
"**size** is rounded up to a multiple of EFI_ALLOC_ALIGN which is an "
"architecture specific multiple of EFI_PAGE_SIZE. So this function should "
"only be used to return pages allocated with efi_allocate_pages() or "
"efi_low_alloc_above()."
msgstr ""
