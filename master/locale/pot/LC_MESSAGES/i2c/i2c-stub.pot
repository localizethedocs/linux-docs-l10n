# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../i2c/i2c-stub.rst:3
msgid "i2c-stub"
msgstr ""

#: ../../../i2c/i2c-stub.rst:6
msgid "Description"
msgstr ""

#: ../../../i2c/i2c-stub.rst:8
msgid ""
"This module is a very simple fake I2C/SMBus driver.  It implements six types "
"of SMBus commands: write quick, (r/w) byte, (r/w) byte data, (r/w) word "
"data, (r/w) I2C block data, and (r/w) SMBus block data."
msgstr ""

#: ../../../i2c/i2c-stub.rst:12
msgid ""
"You need to provide chip addresses as a module parameter when loading this "
"driver, which will then only react to SMBus commands to these addresses."
msgstr ""

#: ../../../i2c/i2c-stub.rst:15
msgid ""
"No hardware is needed nor associated with this module.  It will accept write "
"quick commands to the specified addresses; it will respond to the other "
"commands (also to the specified addresses) by reading from or writing to "
"arrays in memory.  It will also spam the kernel logs for every command it "
"handles."
msgstr ""

#: ../../../i2c/i2c-stub.rst:21
msgid ""
"A pointer register with auto-increment is implemented for all byte "
"operations.  This allows for continuous byte reads like those supported by "
"EEPROMs, among others."
msgstr ""

#: ../../../i2c/i2c-stub.rst:25
msgid ""
"SMBus block command support is disabled by default, and must be enabled "
"explicitly by setting the respective bits (0x03000000) in the functionality "
"module parameter."
msgstr ""

#: ../../../i2c/i2c-stub.rst:29
msgid ""
"SMBus block commands must be written to configure an SMBus command for SMBus "
"block operations. Writes can be partial. Block read commands always return "
"the number of bytes selected with the largest write so far."
msgstr ""

#: ../../../i2c/i2c-stub.rst:33
msgid "The typical use-case is like this:"
msgstr ""

#: ../../../i2c/i2c-stub.rst:35
msgid "load this module"
msgstr ""

#: ../../../i2c/i2c-stub.rst:36
msgid "use i2cset (from the i2c-tools project) to pre-load some data"
msgstr ""

#: ../../../i2c/i2c-stub.rst:37
msgid "load the target chip driver module"
msgstr ""

#: ../../../i2c/i2c-stub.rst:38
msgid "observe its behavior in the kernel log"
msgstr ""

#: ../../../i2c/i2c-stub.rst:40
msgid ""
"There's a script named i2c-stub-from-dump in the i2c-tools package which can "
"load register values automatically from a chip dump."
msgstr ""

#: ../../../i2c/i2c-stub.rst:44
msgid "Parameters"
msgstr ""

#: ../../../i2c/i2c-stub.rst:46
msgid "int chip_addr[10]:"
msgstr ""

#: ../../../i2c/i2c-stub.rst:47
msgid "The SMBus addresses to emulate chips at."
msgstr ""

#: ../../../i2c/i2c-stub.rst:49
msgid "unsigned long functionality:"
msgstr ""

#: ../../../i2c/i2c-stub.rst:50
msgid ""
"Functionality override, to disable some commands. See I2C_FUNC_* constants "
"in <linux/i2c.h> for the suitable values. For example, value 0x1f0000 would "
"only enable the quick, byte and byte data commands."
msgstr ""

#: ../../../i2c/i2c-stub.rst:55
msgid "u8 bank_reg[10], u8 bank_mask[10], u8 bank_start[10], u8 bank_end[10]:"
msgstr ""

#: ../../../i2c/i2c-stub.rst:56
msgid ""
"Optional bank settings. They tell which bits in which register select the "
"active bank, as well as the range of banked registers."
msgstr ""

#: ../../../i2c/i2c-stub.rst:60
msgid "Caveats"
msgstr ""

#: ../../../i2c/i2c-stub.rst:62
msgid ""
"If your target driver polls some byte or word waiting for it to change, the "
"stub could lock it up.  Use i2cset to unlock it."
msgstr ""

#: ../../../i2c/i2c-stub.rst:65
msgid ""
"If you spam it hard enough, printk can be lossy.  This module really wants "
"something like relayfs."
msgstr ""
