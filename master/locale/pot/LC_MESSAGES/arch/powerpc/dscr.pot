# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../arch/powerpc/dscr.rst:3
msgid "DSCR (Data Stream Control Register)"
msgstr ""

#: ../../../arch/powerpc/dscr.rst:5
msgid ""
"DSCR register in powerpc allows user to have some control of prefetch of "
"data stream in the processor. Please refer to the ISA documents or related "
"manual for more detailed information regarding how to use this DSCR to "
"attain this control of the prefetches . This document here provides an "
"overview of kernel support for DSCR, related kernel objects, its "
"functionalities and exported user interface."
msgstr ""

#: ../../../arch/powerpc/dscr.rst:12
msgid "Data Structures:"
msgstr ""

#: ../../../arch/powerpc/dscr.rst:14
msgid "thread_struct::"
msgstr ""

#: ../../../arch/powerpc/dscr.rst:19
msgid "PACA::"
msgstr ""

#: ../../../arch/powerpc/dscr.rst:23
msgid "sysfs.c::"
msgstr ""

#: ../../../arch/powerpc/dscr.rst:27
msgid "Scheduler Changes:"
msgstr ""

#: ../../../arch/powerpc/dscr.rst:29
msgid ""
"Scheduler will write the per-CPU DSCR default which is stored in the CPU's "
"PACA value into the register if the thread has dscr_inherit value cleared "
"which means that it has not changed the default DSCR till now. If the "
"dscr_inherit value is set which means that it has changed the default DSCR "
"value, scheduler will write the changed value which will now be contained in "
"thread struct's dscr into the register instead of the per-CPU default PACA "
"based DSCR value."
msgstr ""

#: ../../../arch/powerpc/dscr.rst:37
msgid ""
"NOTE: Please note here that the system wide global DSCR value never gets "
"used directly in the scheduler process context switch at all."
msgstr ""

#: ../../../arch/powerpc/dscr.rst:40
msgid "SYSFS Interface:"
msgstr ""

#: ../../../arch/powerpc/dscr.rst:42
msgid "Global DSCR default:          /sys/devices/system/cpu/dscr_default"
msgstr ""

#: ../../../arch/powerpc/dscr.rst:43
msgid "CPU specific DSCR default:    /sys/devices/system/cpu/cpuN/dscr"
msgstr ""

#: ../../../arch/powerpc/dscr.rst:45
msgid ""
"Changing the global DSCR default in the sysfs will change all the CPU "
"specific DSCR defaults immediately in their PACA structures. Again if the "
"current process has the dscr_inherit clear, it also writes the new value "
"into every CPU's DSCR register right away and updates the current thread's "
"DSCR value as well."
msgstr ""

#: ../../../arch/powerpc/dscr.rst:51
msgid ""
"Changing the CPU specific DSCR default value in the sysfs does exactly the "
"same thing as above but unlike the global one above, it just changes stuff "
"for that particular CPU instead for all the CPUs on the system."
msgstr ""

#: ../../../arch/powerpc/dscr.rst:55
msgid "User Space Instructions:"
msgstr ""

#: ../../../arch/powerpc/dscr.rst:57
msgid ""
"The DSCR register can be accessed in the user space using any of these two "
"SPR numbers available for that purpose."
msgstr ""

#: ../../../arch/powerpc/dscr.rst:60
msgid "Problem state SPR:          0x03    (Un-privileged, POWER8 only)"
msgstr ""

#: ../../../arch/powerpc/dscr.rst:61
msgid "Privileged state SPR:       0x11    (Privileged)"
msgstr ""

#: ../../../arch/powerpc/dscr.rst:63
msgid ""
"Accessing DSCR through privileged SPR number (0x11) from user space works, "
"as it is emulated following an illegal instruction exception inside the "
"kernel. Both mfspr and mtspr instructions are emulated."
msgstr ""

#: ../../../arch/powerpc/dscr.rst:67
msgid ""
"Accessing DSCR through user level SPR (0x03) from user space will first "
"create a facility unavailable exception. Inside this exception handler all "
"mfspr instruction based read attempts will get emulated and returned where "
"as the first mtspr instruction based write attempts will enable the DSCR "
"facility for the next time around (both for read and write) by setting DSCR "
"facility in the FSCR register."
msgstr ""

#: ../../../arch/powerpc/dscr.rst:74
msgid "Specifics about 'dscr_inherit':"
msgstr ""

#: ../../../arch/powerpc/dscr.rst:76
msgid ""
"The thread struct element 'dscr_inherit' represents whether the thread in "
"question has attempted and changed the DSCR itself using any of the "
"following methods. This element signifies whether the thread wants to use "
"the CPU default DSCR value or its own changed DSCR value in the kernel."
msgstr ""

#: ../../../arch/powerpc/dscr.rst:82
msgid "mtspr instruction   (SPR number 0x03)"
msgstr ""

#: ../../../arch/powerpc/dscr.rst:83
msgid "mtspr instruction   (SPR number 0x11)"
msgstr ""

#: ../../../arch/powerpc/dscr.rst:84
msgid "ptrace interface    (Explicitly set user DSCR value)"
msgstr ""

#: ../../../arch/powerpc/dscr.rst:86
msgid ""
"Any child of the process created after this event in the process inherits "
"this same behaviour as well."
msgstr ""
