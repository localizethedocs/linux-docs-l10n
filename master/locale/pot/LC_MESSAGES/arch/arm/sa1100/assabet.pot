# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../arch/arm/sa1100/assabet.rst:3
msgid "The Intel Assabet (SA-1110 evaluation) board"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:5
msgid "Please see: http://developer.intel.com"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:8
msgid ""
"Also some notes from John G Dorsey <jd5q@andrew.cmu.edu>: http://www.cs.cmu."
"edu/~wearable/software/assabet.html"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:13
msgid "Building the kernel"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:15
msgid "To build the kernel with current defaults::"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:21
msgid ""
"The resulting kernel image should be available in linux/arch/arm/boot/zImage."
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:25
msgid "Installing a bootloader"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:27
msgid "A couple of bootloaders able to boot Linux on Assabet are available:"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:29
msgid "BLOB (http://www.lartmaker.nl/lartware/blob/)"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:31
msgid ""
"BLOB is a bootloader used within the LART project.  Some contributed patches "
"were merged into BLOB to add support for Assabet."
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:34
msgid ""
"Compaq's Bootldr + John Dorsey's patch for Assabet support (http://www."
"handhelds.org/Compaq/bootldr.html) (http://www.wearablegroup.org/software/"
"bootldr/)"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:38
msgid ""
"Bootldr is the bootloader developed by Compaq for the iPAQ Pocket PC. John "
"Dorsey has produced add-on patches to add support for Assabet and the JFFS "
"filesystem."
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:42
msgid "RedBoot (http://sources.redhat.com/redboot/)"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:44
msgid ""
"RedBoot is a bootloader developed by Red Hat based on the eCos RTOS hardware "
"abstraction layer.  It supports Assabet amongst many other hardware "
"platforms."
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:48
msgid ""
"RedBoot is currently the recommended choice since it's the only one to have "
"networking support, and is the most actively maintained."
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:51
msgid ""
"Brief examples on how to boot Linux with RedBoot are shown below.  But first "
"you need to have RedBoot installed in your flash memory.  A known to work "
"precompiled RedBoot binary is available from the following location:"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:55
msgid "ftp://ftp.netwinder.org/users/n/nico/"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:56
msgid "ftp://ftp.arm.linux.org.uk/pub/linux/arm/people/nico/"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:57
msgid "ftp://ftp.handhelds.org/pub/linux/arm/sa-1100-patches/"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:59
msgid ""
"Look for redboot-assabet*.tgz.  Some installation infos are provided in "
"redboot-assabet*.txt."
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:64
msgid "Initial RedBoot configuration"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:66
msgid ""
"The commands used here are explained in The RedBoot User's Guide available "
"on-line at http://sources.redhat.com/ecos/docs.html. Please refer to it for "
"explanations."
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:70
msgid ""
"If you have a CF network card (my Assabet kit contained a CF+ LP-E from "
"Socket Communications Inc.), you should strongly consider using it for TFTP "
"file transfers.  You must insert it before RedBoot runs since it can't "
"detect it dynamically."
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:75
msgid "To initialize the flash directory::"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:79
msgid ""
"To initialize the non-volatile settings, like whether you want to use BOOTP "
"or a static IP address, etc, use this command::"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:86
msgid "Writing a kernel image into flash"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:88
msgid ""
"First, the kernel image must be loaded into RAM.  If you have the zImage "
"file available on a TFTP server::"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:93
msgid "If you rather want to use Y-Modem upload over the serial port::"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:97
msgid "To write it to flash::"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:103
msgid "Booting the kernel"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:105
msgid ""
"The kernel still requires a filesystem to boot.  A ramdisk image can be "
"loaded as follows::"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:110
msgid ""
"Again, Y-Modem upload can be used instead of TFTP by replacing the file name "
"by '-y ymodem'."
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:113
msgid "Now the kernel can be retrieved from flash like this::"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:117
msgid "or loaded as described previously.  To boot the kernel::"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:121
msgid ""
"The ramdisk image could be stored into flash as well, but there are better "
"solutions for on-flash filesystems as mentioned below."
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:126
msgid "Using JFFS2"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:128
msgid ""
"Using JFFS2 (the Second Journalling Flash File System) is probably the most "
"convenient way to store a writable filesystem into flash.  JFFS2 is used in "
"conjunction with the MTD layer which is responsible for low-level flash "
"management.  More information on the Linux MTD can be found on-line at: "
"http://www.linux-mtd.infradead.org/.  A JFFS howto with some infos about "
"creating JFFS/JFFS2 images is available from the same site."
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:135
msgid ""
"For instance, a sample JFFS2 image can be retrieved from the same FTP sites "
"mentioned below for the precompiled RedBoot image."
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:138
msgid "To load this file::"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:142
msgid "The result should look like::"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:147
msgid "Now we must know the size of the unallocated flash::"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:151
msgid "Result::"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:156
msgid ""
"The values above may be different depending on the size of the filesystem "
"and the type of flash.  See their usage below as an example and take care of "
"substituting yours appropriately."
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:160
msgid "We must determine some values::"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:165
msgid ""
"We want to fit the filesystem image of course, but we also want to give it "
"all the remaining flash space as well.  To write it::"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:173
msgid ""
"Now the filesystem is associated to a MTD \"partition\" once Linux has "
"discovered what they are in the boot process.  From Redboot, the 'fis list' "
"command displays them::"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:185
msgid "However Linux should display something like::"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:197
msgid ""
"What's important here is the position of the partition we are interested in, "
"which is the third one.  Within Linux, this correspond to /dev/mtdblock2. "
"Therefore to boot Linux with the kernel and its root filesystem in flash, we "
"need this RedBoot command::"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:205
msgid ""
"Of course other filesystems than JFFS might be used, like cramfs for "
"example. You might want to boot with a root filesystem over NFS, etc.  It is "
"also possible, and sometimes more convenient, to flash a filesystem directly "
"from within Linux while booted from a ramdisk or NFS.  The Linux MTD "
"repository has many tools to deal with flash memory as well, to erase it for "
"example.  JFFS2 can then be mounted directly on a freshly erased partition "
"and files can be copied over directly.  Etc..."
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:215
msgid "RedBoot scripting"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:217
msgid ""
"All the commands above aren't so useful if they have to be typed in every "
"time the Assabet is rebooted.  Therefore it's possible to automate the boot "
"process using RedBoot's scripting capability."
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:221
msgid ""
"For example, I use this to boot Linux with both the kernel and the ramdisk "
"images retrieved from a TFTP server on the network::"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:238
msgid ""
"Then, rebooting the Assabet is just a matter of waiting for the login prompt."
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:242
msgid "Nicolas Pitre nico@fluxnic.net"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:245
msgid "June 12, 2001"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:249
msgid "Status of peripherals in -rmk tree (updated 14/10/2001)"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:251
msgid "Assabet:"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:252
#: ../../../arch/arm/sa1100/assabet.rst:293
msgid "Serial ports:"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:253
msgid "Radio:                TX, RX, CTS, DSR, DCD, RI"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:254
#: ../../../arch/arm/sa1100/assabet.rst:256
#: ../../../arch/arm/sa1100/assabet.rst:259
msgid "PM:                Not tested."
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:255
msgid "COM:               TX, RX, CTS, DSR, DCD, RTS, DTR, PM"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:257
msgid "I2C:               Implemented, not fully tested."
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:258
msgid "L3:                Fully tested, pass."
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:261
msgid "Video:"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:262
msgid "LCD:                Fully tested.  PM"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:264
msgid "(LCD doesn't like being blanked with neponset connected)"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:266
msgid "Video out:          Not fully"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:268
msgid "Audio:"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:269
msgid ""
"UDA1341: -  Playback:          Fully tested, pass. -  Record:            "
"Implemented, not tested. -  PM:                        Not tested."
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:274
msgid ""
"UCB1200: -  Audio play:        Implemented, not heavily tested. -  Audio "
"rec:         Implemented, not heavily tested. -  Telco audio play:  "
"Implemented, not heavily tested. -  Telco audio rec:   Implemented, not "
"heavily tested. -  POTS control:      No -  Touchscreen:       Yes -  "
"PM:                Not tested."
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:283
msgid "Other:"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:284
msgid "PCMCIA:"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:285
msgid "LPE:                Fully tested, pass."
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:286
msgid "USB:                No"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:287
msgid "IRDA:"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:288
msgid "SIR:                Fully tested, pass."
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:289
msgid "FIR:                Fully tested, pass."
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:290
#: ../../../arch/arm/sa1100/assabet.rst:295
#: ../../../arch/arm/sa1100/assabet.rst:299
msgid "PM:                 Not tested."
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:292
msgid "Neponset:"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:294
msgid "COM1,2:             TX, RX, CTS, DSR, DCD, RTS, DTR"
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:296
msgid "USB:                Implemented, not heavily tested."
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:297
msgid "PCMCIA:             Implemented, not heavily tested."
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:298
msgid "CF:                 Implemented, not heavily tested."
msgstr ""

#: ../../../arch/arm/sa1100/assabet.rst:301
msgid "More stuff can be found in the -np (Nicolas Pitre's) tree."
msgstr ""
