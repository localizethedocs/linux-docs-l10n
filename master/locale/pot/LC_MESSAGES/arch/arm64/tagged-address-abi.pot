# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../arch/arm64/tagged-address-abi.rst:3
msgid "AArch64 TAGGED ADDRESS ABI"
msgstr ""

#: ../../../arch/arm64/tagged-address-abi.rst:5
msgid "Authors: Vincenzo Frascino <vincenzo.frascino@arm.com>"
msgstr ""

#: ../../../arch/arm64/tagged-address-abi.rst:6
msgid "Catalin Marinas <catalin.marinas@arm.com>"
msgstr ""

#: ../../../arch/arm64/tagged-address-abi.rst:8
msgid "Date: 21 August 2019"
msgstr ""

#: ../../../arch/arm64/tagged-address-abi.rst:10
msgid ""
"This document describes the usage and semantics of the Tagged Address ABI on "
"AArch64 Linux."
msgstr ""

#: ../../../arch/arm64/tagged-address-abi.rst:14
msgid "1. Introduction"
msgstr ""

#: ../../../arch/arm64/tagged-address-abi.rst:16
msgid ""
"On AArch64 the ``TCR_EL1.TBI0`` bit is set by default, allowing userspace "
"(EL0) to perform memory accesses through 64-bit pointers with a non-zero top "
"byte. This document describes the relaxation of the syscall ABI that allows "
"userspace to pass certain tagged pointers to kernel syscalls."
msgstr ""

#: ../../../arch/arm64/tagged-address-abi.rst:23
msgid "2. AArch64 Tagged Address ABI"
msgstr ""

#: ../../../arch/arm64/tagged-address-abi.rst:25
msgid ""
"From the kernel syscall interface perspective and for the purposes of this "
"document, a \"valid tagged pointer\" is a pointer with a potentially non-"
"zero top-byte that references an address in the user process address space "
"obtained in one of the following ways:"
msgstr ""

#: ../../../arch/arm64/tagged-address-abi.rst:30
msgid "``mmap()`` syscall where either:"
msgstr ""

#: ../../../arch/arm64/tagged-address-abi.rst:32
msgid "flags have the ``MAP_ANONYMOUS`` bit set or"
msgstr ""

#: ../../../arch/arm64/tagged-address-abi.rst:33
msgid ""
"the file descriptor refers to a regular file (including those returned by "
"``memfd_create()``) or ``/dev/zero``"
msgstr ""

#: ../../../arch/arm64/tagged-address-abi.rst:36
msgid ""
"``brk()`` syscall (i.e. the heap area between the initial location of the "
"program break at process creation and its current location)."
msgstr ""

#: ../../../arch/arm64/tagged-address-abi.rst:39
msgid ""
"any memory mapped by the kernel in the address space of the process during "
"creation and with the same restrictions as for ``mmap()`` above (e.g. data, "
"bss, stack)."
msgstr ""

#: ../../../arch/arm64/tagged-address-abi.rst:43
msgid ""
"The AArch64 Tagged Address ABI has two stages of relaxation depending on how "
"the user addresses are used by the kernel:"
msgstr ""

#: ../../../arch/arm64/tagged-address-abi.rst:46
msgid ""
"User addresses not accessed by the kernel but used for address space "
"management (e.g. ``mprotect()``, ``madvise()``). The use of valid tagged "
"pointers in this context is allowed with these exceptions:"
msgstr ""

#: ../../../arch/arm64/tagged-address-abi.rst:50
msgid ""
"``brk()``, ``mmap()`` and the ``new_address`` argument to ``mremap()`` as "
"these have the potential to alias with existing user addresses."
msgstr ""

#: ../../../arch/arm64/tagged-address-abi.rst:54
msgid ""
"NOTE: This behaviour changed in v5.6 and so some earlier kernels may "
"incorrectly accept valid tagged pointers for the ``brk()``, ``mmap()`` and "
"``mremap()`` system calls."
msgstr ""

#: ../../../arch/arm64/tagged-address-abi.rst:58
msgid ""
"The ``range.start``, ``start`` and ``dst`` arguments to the ``UFFDIO_*`` "
"``ioctl()``s used on a file descriptor obtained from ``userfaultfd()``, as "
"fault addresses subsequently obtained by reading the file descriptor will be "
"untagged, which may otherwise confuse tag-unaware programs."
msgstr ""

#: ../../../arch/arm64/tagged-address-abi.rst:64
msgid ""
"NOTE: This behaviour changed in v5.14 and so some earlier kernels may "
"incorrectly accept valid tagged pointers for this system call."
msgstr ""

#: ../../../arch/arm64/tagged-address-abi.rst:67
msgid ""
"User addresses accessed by the kernel (e.g. ``write()``). This ABI "
"relaxation is disabled by default and the application thread needs to "
"explicitly enable it via ``prctl()`` as follows:"
msgstr ""

#: ../../../arch/arm64/tagged-address-abi.rst:71
msgid ""
"``PR_SET_TAGGED_ADDR_CTRL``: enable or disable the AArch64 Tagged Address "
"ABI for the calling thread."
msgstr ""

#: ../../../arch/arm64/tagged-address-abi.rst:74
msgid ""
"The ``(unsigned int) arg2`` argument is a bit mask describing the control "
"mode used:"
msgstr ""

#: ../../../arch/arm64/tagged-address-abi.rst:77
msgid ""
"``PR_TAGGED_ADDR_ENABLE``: enable AArch64 Tagged Address ABI. Default status "
"is disabled."
msgstr ""

#: ../../../arch/arm64/tagged-address-abi.rst:80
msgid "Arguments ``arg3``, ``arg4``, and ``arg5`` must be 0."
msgstr ""

#: ../../../arch/arm64/tagged-address-abi.rst:82
msgid ""
"``PR_GET_TAGGED_ADDR_CTRL``: get the status of the AArch64 Tagged Address "
"ABI for the calling thread."
msgstr ""

#: ../../../arch/arm64/tagged-address-abi.rst:85
msgid "Arguments ``arg2``, ``arg3``, ``arg4``, and ``arg5`` must be 0."
msgstr ""

#: ../../../arch/arm64/tagged-address-abi.rst:87
msgid ""
"The ABI properties described above are thread-scoped, inherited on clone() "
"and fork() and cleared on exec()."
msgstr ""

#: ../../../arch/arm64/tagged-address-abi.rst:90
msgid ""
"Calling ``prctl(PR_SET_TAGGED_ADDR_CTRL, PR_TAGGED_ADDR_ENABLE, 0, 0, 0)`` "
"returns ``-EINVAL`` if the AArch64 Tagged Address ABI is globally disabled "
"by ``sysctl abi.tagged_addr_disabled=1``. The default ``sysctl abi."
"tagged_addr_disabled`` configuration is 0."
msgstr ""

#: ../../../arch/arm64/tagged-address-abi.rst:95
msgid ""
"When the AArch64 Tagged Address ABI is enabled for a thread, the following "
"behaviours are guaranteed:"
msgstr ""

#: ../../../arch/arm64/tagged-address-abi.rst:98
msgid ""
"All syscalls except the cases mentioned in section 3 can accept any valid "
"tagged pointer."
msgstr ""

#: ../../../arch/arm64/tagged-address-abi.rst:101
msgid ""
"The syscall behaviour is undefined for invalid tagged pointers: it may "
"result in an error code being returned, a (fatal) signal being raised, or "
"other modes of failure."
msgstr ""

#: ../../../arch/arm64/tagged-address-abi.rst:105
msgid ""
"The syscall behaviour for a valid tagged pointer is the same as for the "
"corresponding untagged pointer."
msgstr ""

#: ../../../arch/arm64/tagged-address-abi.rst:109
msgid ""
"A definition of the meaning of tagged pointers on AArch64 can be found in "
"Documentation/arch/arm64/tagged-pointers.rst."
msgstr ""

#: ../../../arch/arm64/tagged-address-abi.rst:113
msgid "3. AArch64 Tagged Address ABI Exceptions"
msgstr ""

#: ../../../arch/arm64/tagged-address-abi.rst:115
msgid ""
"The following system call parameters must be untagged regardless of the ABI "
"relaxation:"
msgstr ""

#: ../../../arch/arm64/tagged-address-abi.rst:118
msgid ""
"``prctl()`` other than pointers to user data either passed directly or "
"indirectly as arguments to be accessed by the kernel."
msgstr ""

#: ../../../arch/arm64/tagged-address-abi.rst:121
msgid ""
"``ioctl()`` other than pointers to user data either passed directly or "
"indirectly as arguments to be accessed by the kernel."
msgstr ""

#: ../../../arch/arm64/tagged-address-abi.rst:124
msgid "``shmat()`` and ``shmdt()``."
msgstr ""

#: ../../../arch/arm64/tagged-address-abi.rst:126
msgid "``brk()`` (since kernel v5.6)."
msgstr ""

#: ../../../arch/arm64/tagged-address-abi.rst:128
msgid "``mmap()`` (since kernel v5.6)."
msgstr ""

#: ../../../arch/arm64/tagged-address-abi.rst:130
msgid "``mremap()``, the ``new_address`` argument (since kernel v5.6)."
msgstr ""

#: ../../../arch/arm64/tagged-address-abi.rst:132
msgid ""
"Any attempt to use non-zero tagged pointers may result in an error code "
"being returned, a (fatal) signal being raised, or other modes of failure."
msgstr ""

#: ../../../arch/arm64/tagged-address-abi.rst:137
msgid "4. Example of correct usage"
msgstr ""
