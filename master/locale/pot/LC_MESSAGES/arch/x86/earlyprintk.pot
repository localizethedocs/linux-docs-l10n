# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../arch/x86/earlyprintk.rst:5
msgid "Early Printk"
msgstr ""

#: ../../../arch/x86/earlyprintk.rst:7
msgid ""
"Mini-HOWTO for using the earlyprintk=dbgp boot option with a USB2 Debug port "
"key and a debug cable, on x86 systems."
msgstr ""

#: ../../../arch/x86/earlyprintk.rst:10
msgid ""
"You need two computers, the 'USB debug key' special gadget and two USB "
"cables, connected like this::"
msgstr ""

#: ../../../arch/x86/earlyprintk.rst:16
msgid "Hardware requirements"
msgstr ""

#: ../../../arch/x86/earlyprintk.rst:18
msgid "Host/target system needs to have USB debug port capability."
msgstr ""

#: ../../../arch/x86/earlyprintk.rst:20
msgid ""
"You can check this capability by looking at a 'Debug port' bit in the lspci -"
"vvv output::"
msgstr ""

#: ../../../arch/x86/earlyprintk.rst:42
msgid ""
"If your system does not list a debug port capability then you probably won't "
"be able to use the USB debug key."
msgstr ""

#: ../../../arch/x86/earlyprintk.rst:45
msgid "You also need a NetChip USB debug cable/key:"
msgstr ""

#: ../../../arch/x86/earlyprintk.rst:47
msgid "http://www.plxtech.com/products/NET2000/NET20DC/default.asp"
msgstr ""

#: ../../../arch/x86/earlyprintk.rst:49
msgid ""
"This is a small blue plastic connector with two USB connections; it draws "
"power from its USB connections."
msgstr ""

#: ../../../arch/x86/earlyprintk.rst:52
msgid "You need a second client/console system with a high speed USB 2.0 port."
msgstr ""

#: ../../../arch/x86/earlyprintk.rst:54
msgid ""
"The NetChip device must be plugged directly into the physical debug port on "
"the \"host/target\" system. You cannot use a USB hub in between the physical "
"debug port and the \"host/target\" system."
msgstr ""

#: ../../../arch/x86/earlyprintk.rst:58
msgid ""
"The EHCI debug controller is bound to a specific physical USB port and the "
"NetChip device will only work as an early printk device in this port.  The "
"EHCI host controllers are electrically wired such that the EHCI debug "
"controller is hooked up to the first physical port and there is no way to "
"change this via software. You can find the physical port through "
"experimentation by trying each physical port on the system and rebooting.  "
"Or you can try and use lsusb or look at the kernel info messages emitted by "
"the usb stack when you plug a usb device into various ports on the \"host/"
"target\" system."
msgstr ""

#: ../../../arch/x86/earlyprintk.rst:69
msgid ""
"Some hardware vendors do not expose the usb debug port with a physical "
"connector and if you find such a device send a complaint to the hardware "
"vendor, because there is no reason not to wire this port into one of the "
"physically accessible ports."
msgstr ""

#: ../../../arch/x86/earlyprintk.rst:74
msgid ""
"It is also important to note, that many versions of the NetChip device "
"require the \"client/console\" system to be plugged into the right hand side "
"of the device (with the product logo facing up and readable left to right).  "
"The reason being is that the 5 volt power supply is taken from only one side "
"of the device and it must be the side that does not get rebooted."
msgstr ""

#: ../../../arch/x86/earlyprintk.rst:82
msgid "Software requirements"
msgstr ""

#: ../../../arch/x86/earlyprintk.rst:84
msgid "On the host/target system:"
msgstr ""

#: ../../../arch/x86/earlyprintk.rst:86
msgid "You need to enable the following kernel config option::"
msgstr ""

#: ../../../arch/x86/earlyprintk.rst:90
msgid "And you need to add the boot command line: \"earlyprintk=dbgp\"."
msgstr ""

#: ../../../arch/x86/earlyprintk.rst:93
msgid ""
"If you are using Grub, append it to the 'kernel' line in /etc/grub.conf.  If "
"you are using Grub2 on a BIOS firmware system, append it to the 'linux' line "
"in /boot/grub2/grub.cfg. If you are using Grub2 on an EFI firmware system, "
"append it to the 'linux' or 'linuxefi' line in /boot/grub2/grub.cfg or /boot/"
"efi/EFI/<distro>/grub.cfg."
msgstr ""

#: ../../../arch/x86/earlyprintk.rst:100
msgid ""
"On systems with more than one EHCI debug controller you must specify the "
"correct EHCI debug controller number.  The ordering comes from the PCI bus "
"enumeration of the EHCI controllers.  The default with no number argument is "
"\"0\" or the first EHCI debug controller.  To use the second EHCI debug "
"controller, you would use the command line: \"earlyprintk=dbgp1\""
msgstr ""

#: ../../../arch/x86/earlyprintk.rst:108
msgid ""
"normally earlyprintk console gets turned off once the regular console is "
"alive - use \"earlyprintk=dbgp,keep\" to keep this channel open beyond early "
"bootup. This can be useful for debugging crashes under Xorg, etc."
msgstr ""

#: ../../../arch/x86/earlyprintk.rst:113
msgid "On the client/console system:"
msgstr ""

#: ../../../arch/x86/earlyprintk.rst:115
msgid "You should enable the following kernel config option::"
msgstr ""

#: ../../../arch/x86/earlyprintk.rst:119
msgid ""
"On the next bootup with the modified kernel you should get a /dev/ttyUSBx "
"device(s)."
msgstr ""

#: ../../../arch/x86/earlyprintk.rst:122
msgid ""
"Now this channel of kernel messages is ready to be used: start your favorite "
"terminal emulator (minicom, etc.) and set it up to use /dev/ttyUSB0 - or use "
"a raw 'cat /dev/ttyUSBx' to see the raw output."
msgstr ""

#: ../../../arch/x86/earlyprintk.rst:127
msgid ""
"On Nvidia Southbridge based systems: the kernel will try to probe and find "
"out which port has a debug device connected."
msgstr ""

#: ../../../arch/x86/earlyprintk.rst:131
msgid "Testing"
msgstr ""

#: ../../../arch/x86/earlyprintk.rst:133
msgid ""
"You can test the output by using earlyprintk=dbgp,keep and provoking kernel "
"messages on the host/target system. You can provoke a harmless kernel "
"message by for example doing::"
msgstr ""

#: ../../../arch/x86/earlyprintk.rst:139
msgid ""
"On the host/target system you should see this help line in \"dmesg\" output::"
msgstr ""

#: ../../../arch/x86/earlyprintk.rst:143
msgid "On the client/console system do::"
msgstr ""

#: ../../../arch/x86/earlyprintk.rst:147
msgid ""
"And you should see the help line above displayed shortly after you've "
"provoked it on the host system."
msgstr ""

#: ../../../arch/x86/earlyprintk.rst:150
msgid ""
"If it does not work then please ask about it on the linux-kernel@vger.kernel."
"org mailing list or contact the x86 maintainers."
msgstr ""
