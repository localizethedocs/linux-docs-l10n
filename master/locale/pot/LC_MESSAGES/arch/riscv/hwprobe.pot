# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../arch/riscv/hwprobe.rst:4
msgid "RISC-V Hardware Probing Interface"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:6
msgid ""
"The RISC-V hardware probing interface is based around a single syscall, "
"which is defined in <asm/hwprobe.h>::"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:18
msgid ""
"The arguments are split into three groups: an array of key-value pairs, a "
"CPU set, and some flags. The key-value pairs are supplied with a count. "
"Userspace must prepopulate the key field for each element, and the kernel "
"will fill in the value if the key is recognized. If a key is unknown to the "
"kernel, its key field will be cleared to -1, and its value set to 0. The CPU "
"set is defined by CPU_SET(3) with size ``cpusetsize`` bytes. For value-like "
"keys (eg. vendor, arch, impl), the returned value will only be valid if all "
"CPUs in the given set have the same value. Otherwise -1 will be returned. "
"For boolean-like keys, the value returned will be a logical AND of the "
"values for the specified CPUs. Usermode can supply NULL for ``cpus`` and 0 "
"for ``cpusetsize`` as a shortcut for all online CPUs. The currently "
"supported flags are:"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:30
msgid ""
":c:macro:`RISCV_HWPROBE_WHICH_CPUS`: This flag basically reverses the "
"behavior of sys_riscv_hwprobe().  Instead of populating the values of keys "
"for a given set of CPUs, the values of each key are given and the set of "
"CPUs is reduced by sys_riscv_hwprobe() to only those which match each of the "
"key-value pairs. How matching is done depends on the key type.  For value-"
"like keys, matching means to be the exact same as the value.  For boolean-"
"like keys, matching means the result of a logical AND of the pair's value "
"with the CPU's value is exactly the same as the pair's value.  Additionally, "
"when ``cpus`` is an empty set, then it is initialized to all online CPUs "
"which fit within it, i.e. the CPU set returned is the reduction of all the "
"online CPUs which can be represented with a CPU set of size ``cpusetsize``."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:42
msgid "All other flags are reserved for future compatibility and must be zero."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:44
msgid "On success 0 is returned, on failure a negative error code is returned."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:46
msgid "The following keys are defined:"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:48
msgid ""
":c:macro:`RISCV_HWPROBE_KEY_MVENDORID`: Contains the value of ``mvendorid``, "
"as defined by the RISC-V privileged architecture specification."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:51
msgid ""
":c:macro:`RISCV_HWPROBE_KEY_MARCHID`: Contains the value of ``marchid``, as "
"defined by the RISC-V privileged architecture specification."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:54
msgid ""
":c:macro:`RISCV_HWPROBE_KEY_MIMPID`: Contains the value of ``mimpid``, as "
"defined by the RISC-V privileged architecture specification."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:57
msgid ""
":c:macro:`RISCV_HWPROBE_KEY_BASE_BEHAVIOR`: A bitmask containing the base "
"user-visible behavior that this kernel supports.  The following base user "
"ABIs are defined:"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:61
msgid ""
":c:macro:`RISCV_HWPROBE_BASE_BEHAVIOR_IMA`: Support for rv32ima or rv64ima, "
"as defined by version 2.2 of the user ISA and version 1.10 of the privileged "
"ISA, with the following known exceptions (more exceptions may be added, but "
"only if it can be demonstrated that the user ABI is not broken):"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:66
msgid ""
"The ``fence.i`` instruction cannot be directly executed by userspace "
"programs (it may still be executed in userspace via a kernel-controlled "
"mechanism such as the vDSO)."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:70
msgid ""
":c:macro:`RISCV_HWPROBE_KEY_IMA_EXT_0`: A bitmask containing the extensions "
"that are compatible with the :c:macro:`RISCV_HWPROBE_BASE_BEHAVIOR_IMA`: "
"base system behavior."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:74
msgid ""
":c:macro:`RISCV_HWPROBE_IMA_FD`: The F and D extensions are supported, as "
"defined by commit cd20cee (\"FMIN/FMAX now implement minimumNumber/"
"maximumNumber, not minNum/maxNum\") of the RISC-V ISA manual."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:78
msgid ""
":c:macro:`RISCV_HWPROBE_IMA_C`: The C extension is supported, as defined by "
"version 2.2 of the RISC-V ISA manual."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:81
msgid ""
":c:macro:`RISCV_HWPROBE_IMA_V`: The V extension is supported, as defined by "
"version 1.0 of the RISC-V Vector extension manual."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:84
msgid ""
":c:macro:`RISCV_HWPROBE_EXT_ZBA`: The Zba address generation extension is"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:85
msgid ""
"supported, as defined in version 1.0 of the Bit-Manipulation ISA extensions."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:88
msgid ""
":c:macro:`RISCV_HWPROBE_EXT_ZBB`: The Zbb extension is supported, as defined"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:89 ../../../arch/riscv/hwprobe.rst:92
#: ../../../arch/riscv/hwprobe.rst:98
msgid "in version 1.0 of the Bit-Manipulation ISA extensions."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:91
msgid ""
":c:macro:`RISCV_HWPROBE_EXT_ZBS`: The Zbs extension is supported, as defined"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:94
msgid ""
":c:macro:`RISCV_HWPROBE_EXT_ZICBOZ`: The Zicboz extension is supported, as"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:95 ../../../arch/riscv/hwprobe.rst:272
msgid "ratified in commit 3dd606f (\"Create cmobase-v1.0.pdf\") of riscv-CMOs."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:97
msgid ""
":c:macro:`RISCV_HWPROBE_EXT_ZBC` The Zbc extension is supported, as defined"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:100
msgid ":c:macro:`RISCV_HWPROBE_EXT_ZBKB` The Zbkb extension is supported, as"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:101 ../../../arch/riscv/hwprobe.rst:104
#: ../../../arch/riscv/hwprobe.rst:107 ../../../arch/riscv/hwprobe.rst:110
#: ../../../arch/riscv/hwprobe.rst:113 ../../../arch/riscv/hwprobe.rst:116
#: ../../../arch/riscv/hwprobe.rst:119 ../../../arch/riscv/hwprobe.rst:122
msgid "defined in version 1.0 of the Scalar Crypto ISA extensions."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:103
msgid ":c:macro:`RISCV_HWPROBE_EXT_ZBKC` The Zbkc extension is supported, as"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:106
msgid ":c:macro:`RISCV_HWPROBE_EXT_ZBKX` The Zbkx extension is supported, as"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:109
msgid ":c:macro:`RISCV_HWPROBE_EXT_ZKND` The Zknd extension is supported, as"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:112
msgid ":c:macro:`RISCV_HWPROBE_EXT_ZKNE` The Zkne extension is supported, as"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:115
msgid ":c:macro:`RISCV_HWPROBE_EXT_ZKNH` The Zknh extension is supported, as"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:118
msgid ":c:macro:`RISCV_HWPROBE_EXT_ZKSED` The Zksed extension is supported, as"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:121
msgid ":c:macro:`RISCV_HWPROBE_EXT_ZKSH` The Zksh extension is supported, as"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:124
msgid ""
":c:macro:`RISCV_HWPROBE_EXT_ZKT` The Zkt extension is supported, as defined"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:125
msgid "in version 1.0 of the Scalar Crypto ISA extensions."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:127
msgid ":c:macro:`RISCV_HWPROBE_EXT_ZVBB`: The Zvbb extension is supported as"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:128 ../../../arch/riscv/hwprobe.rst:131
#: ../../../arch/riscv/hwprobe.rst:134 ../../../arch/riscv/hwprobe.rst:137
#: ../../../arch/riscv/hwprobe.rst:140 ../../../arch/riscv/hwprobe.rst:143
#: ../../../arch/riscv/hwprobe.rst:146 ../../../arch/riscv/hwprobe.rst:149
#: ../../../arch/riscv/hwprobe.rst:152 ../../../arch/riscv/hwprobe.rst:155
msgid "defined in version 1.0 of the RISC-V Cryptography Extensions Volume II."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:130
msgid ":c:macro:`RISCV_HWPROBE_EXT_ZVBC`: The Zvbc extension is supported as"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:133
msgid ":c:macro:`RISCV_HWPROBE_EXT_ZVKB`: The Zvkb extension is supported as"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:136
msgid ":c:macro:`RISCV_HWPROBE_EXT_ZVKG`: The Zvkg extension is supported as"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:139
msgid ""
":c:macro:`RISCV_HWPROBE_EXT_ZVKNED`: The Zvkned extension is supported as"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:142
msgid ""
":c:macro:`RISCV_HWPROBE_EXT_ZVKNHA`: The Zvknha extension is supported as"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:145
msgid ""
":c:macro:`RISCV_HWPROBE_EXT_ZVKNHB`: The Zvknhb extension is supported as"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:148
msgid ""
":c:macro:`RISCV_HWPROBE_EXT_ZVKSED`: The Zvksed extension is supported as"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:151
msgid ":c:macro:`RISCV_HWPROBE_EXT_ZVKSH`: The Zvksh extension is supported as"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:154
msgid ":c:macro:`RISCV_HWPROBE_EXT_ZVKT`: The Zvkt extension is supported as"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:157
msgid ""
":c:macro:`RISCV_HWPROBE_EXT_ZFH`: The Zfh extension version 1.0 is supported"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:158
msgid "as defined in the RISC-V ISA manual."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:160
msgid ""
":c:macro:`RISCV_HWPROBE_EXT_ZFHMIN`: The Zfhmin extension version 1.0 is"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:161
msgid "supported as defined in the RISC-V ISA manual."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:163
msgid ""
":c:macro:`RISCV_HWPROBE_EXT_ZIHINTNTL`: The Zihintntl extension version 1.0"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:164 ../../../arch/riscv/hwprobe.rst:187
#: ../../../arch/riscv/hwprobe.rst:199
msgid "is supported as defined in the RISC-V ISA manual."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:166
msgid ":c:macro:`RISCV_HWPROBE_EXT_ZVFH`: The Zvfh extension is supported as"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:167 ../../../arch/riscv/hwprobe.rst:171
msgid ""
"defined in the RISC-V Vector manual starting from commit e2ccd0548d6c "
"(\"Remove draft warnings from Zvfh[min]\")."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:170
msgid ""
":c:macro:`RISCV_HWPROBE_EXT_ZVFHMIN`: The Zvfhmin extension is supported as"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:174
msgid ":c:macro:`RISCV_HWPROBE_EXT_ZFA`: The Zfa extension is supported as"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:175
msgid ""
"defined in the RISC-V ISA manual starting from commit 056b6ff467c7 (\"Zfa is "
"ratified\")."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:178
msgid ":c:macro:`RISCV_HWPROBE_EXT_ZTSO`: The Ztso extension is supported as"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:179
msgid ""
"defined in the RISC-V ISA manual starting from commit 5618fb5a216b (\"Ztso "
"is now ratified.\")"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:182
msgid ":c:macro:`RISCV_HWPROBE_EXT_ZACAS`: The Zacas extension is supported as"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:183
msgid ""
"defined in the Atomic Compare-and-Swap (CAS) instructions manual starting "
"from commit 5059e0ca641c (\"update to ratified\")."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:186
msgid ":c:macro:`RISCV_HWPROBE_EXT_ZICNTR`: The Zicntr extension version 2.0"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:189
msgid ""
":c:macro:`RISCV_HWPROBE_EXT_ZICOND`: The Zicond extension is supported as"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:190
msgid ""
"defined in the RISC-V Integer Conditional (Zicond) operations extension "
"manual starting from commit 95cf1f9 (\"Add changes requested by Ved during "
"signoff\")"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:194
msgid ":c:macro:`RISCV_HWPROBE_EXT_ZIHINTPAUSE`: The Zihintpause extension is"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:195
msgid ""
"supported as defined in the RISC-V ISA manual starting from commit "
"d8ab5c78c207 (\"Zihintpause is ratified\")."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:198
msgid ":c:macro:`RISCV_HWPROBE_EXT_ZIHPM`: The Zihpm extension version 2.0"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:201
msgid ""
":c:macro:`RISCV_HWPROBE_EXT_ZVE32X`: The Vector sub-extension Zve32x is "
"supported, as defined by version 1.0 of the RISC-V Vector extension manual."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:204
msgid ""
":c:macro:`RISCV_HWPROBE_EXT_ZVE32F`: The Vector sub-extension Zve32f is "
"supported, as defined by version 1.0 of the RISC-V Vector extension manual."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:207
msgid ""
":c:macro:`RISCV_HWPROBE_EXT_ZVE64X`: The Vector sub-extension Zve64x is "
"supported, as defined by version 1.0 of the RISC-V Vector extension manual."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:210
msgid ""
":c:macro:`RISCV_HWPROBE_EXT_ZVE64F`: The Vector sub-extension Zve64f is "
"supported, as defined by version 1.0 of the RISC-V Vector extension manual."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:213
msgid ""
":c:macro:`RISCV_HWPROBE_EXT_ZVE64D`: The Vector sub-extension Zve64d is "
"supported, as defined by version 1.0 of the RISC-V Vector extension manual."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:216
msgid ""
":c:macro:`RISCV_HWPROBE_EXT_ZIMOP`: The Zimop May-Be-Operations extension is"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:217
msgid ""
"supported as defined in the RISC-V ISA manual starting from commit "
"58220614a5f (\"Zimop is ratified/1.0\")."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:220
msgid ""
":c:macro:`RISCV_HWPROBE_EXT_ZCA`: The Zca extension part of Zc* standard"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:221 ../../../arch/riscv/hwprobe.rst:226
#: ../../../arch/riscv/hwprobe.rst:231 ../../../arch/riscv/hwprobe.rst:236
msgid ""
"extensions for code size reduction, as ratified in commit 8be3419c1c0 (\"Zcf "
"doesn't exist on RV64 as it contains no instructions\") of riscv-code-size-"
"reduction."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:225
msgid ""
":c:macro:`RISCV_HWPROBE_EXT_ZCB`: The Zcb extension part of Zc* standard"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:230
msgid ""
":c:macro:`RISCV_HWPROBE_EXT_ZCD`: The Zcd extension part of Zc* standard"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:235
msgid ""
":c:macro:`RISCV_HWPROBE_EXT_ZCF`: The Zcf extension part of Zc* standard"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:240
msgid ""
":c:macro:`RISCV_HWPROBE_EXT_ZCMOP`: The Zcmop May-Be-Operations extension is"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:241
msgid ""
"supported as defined in the RISC-V ISA manual starting from commit "
"c732a4f39a4 (\"Zcmop is ratified/1.0\")."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:244
msgid ":c:macro:`RISCV_HWPROBE_EXT_ZAWRS`: The Zawrs extension is supported as"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:245
msgid ""
"ratified in commit 98918c844281 (\"Merge pull request #1217 from riscv/"
"zawrs\") of riscv-isa-manual."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:248
msgid ":c:macro:`RISCV_HWPROBE_EXT_ZAAMO`: The Zaamo extension is supported as"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:249 ../../../arch/riscv/hwprobe.rst:253
msgid ""
"defined in the in the RISC-V ISA manual starting from commit e87412e621f1 "
"(\"integrate Zaamo and Zalrsc text (#1304)\")."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:252
msgid ""
":c:macro:`RISCV_HWPROBE_EXT_ZALRSC`: The Zalrsc extension is supported as"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:256
msgid ":c:macro:`RISCV_HWPROBE_EXT_SUPM`: The Supm extension is supported as"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:257
msgid "defined in version 1.0 of the RISC-V Pointer Masking extensions."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:259
msgid ""
":c:macro:`RISCV_HWPROBE_EXT_ZFBFMIN`: The Zfbfmin extension is supported as"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:260 ../../../arch/riscv/hwprobe.rst:264
#: ../../../arch/riscv/hwprobe.rst:268
msgid ""
"defined in the RISC-V ISA manual starting from commit 4dc23d6229de (\"Added "
"Chapter title to BF16\")."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:263
msgid ""
":c:macro:`RISCV_HWPROBE_EXT_ZVFBFMIN`: The Zvfbfmin extension is supported as"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:267
msgid ""
":c:macro:`RISCV_HWPROBE_EXT_ZVFBFWMA`: The Zvfbfwma extension is supported as"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:271
msgid ""
":c:macro:`RISCV_HWPROBE_EXT_ZICBOM`: The Zicbom extension is supported, as"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:274
msgid ":c:macro:`RISCV_HWPROBE_EXT_ZABHA`: The Zabha extension is supported as"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:275
msgid ""
"ratified in commit 49f49c842ff9 (\"Update to Rafified state\") of riscv-"
"zabha."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:278
msgid ""
":c:macro:`RISCV_HWPROBE_KEY_CPUPERF_0`: Deprecated.  Returns similar values "
"to"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:279
msgid ""
":c:macro:`RISCV_HWPROBE_KEY_MISALIGNED_SCALAR_PERF`, but the key was "
"mistakenly classified as a bitmask rather than a value."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:282
msgid ""
":c:macro:`RISCV_HWPROBE_KEY_MISALIGNED_SCALAR_PERF`: An enum value "
"describing the performance of misaligned scalar native word accesses on the "
"selected set of processors."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:286
msgid ""
":c:macro:`RISCV_HWPROBE_MISALIGNED_SCALAR_UNKNOWN`: The performance of "
"misaligned scalar accesses is unknown."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:289
msgid ""
":c:macro:`RISCV_HWPROBE_MISALIGNED_SCALAR_EMULATED`: Misaligned scalar "
"accesses are emulated via software, either in or below the kernel.  These "
"accesses are always extremely slow."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:293
msgid ""
":c:macro:`RISCV_HWPROBE_MISALIGNED_SCALAR_SLOW`: Misaligned scalar native "
"word sized accesses are slower than the equivalent quantity of byte "
"accesses. Misaligned accesses may be supported directly in hardware, or "
"trapped and emulated by software."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:298
msgid ""
":c:macro:`RISCV_HWPROBE_MISALIGNED_SCALAR_FAST`: Misaligned scalar native "
"word sized accesses are faster than the equivalent quantity of byte accesses."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:302
msgid ""
":c:macro:`RISCV_HWPROBE_MISALIGNED_SCALAR_UNSUPPORTED`: Misaligned scalar "
"accesses are not supported at all and will generate a misaligned address "
"fault."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:306
msgid ""
":c:macro:`RISCV_HWPROBE_KEY_ZICBOZ_BLOCK_SIZE`: An unsigned int which "
"represents the size of the Zicboz block in bytes."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:309
msgid ""
":c:macro:`RISCV_HWPROBE_KEY_HIGHEST_VIRT_ADDRESS`: An unsigned long which "
"represent the highest userspace virtual address usable."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:312
msgid ""
":c:macro:`RISCV_HWPROBE_KEY_TIME_CSR_FREQ`: Frequency (in Hz) of `time CSR`."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:314
msgid ""
":c:macro:`RISCV_HWPROBE_KEY_MISALIGNED_VECTOR_PERF`: An enum value "
"describing the"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:315
msgid ""
"performance of misaligned vector accesses on the selected set of processors."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:317
msgid ""
":c:macro:`RISCV_HWPROBE_MISALIGNED_VECTOR_UNKNOWN`: The performance of "
"misaligned vector accesses is unknown."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:320
msgid ""
":c:macro:`RISCV_HWPROBE_MISALIGNED_VECTOR_SLOW`: 32-bit misaligned accesses "
"using vector registers are slower than the equivalent quantity of byte "
"accesses via vector registers. Misaligned accesses may be supported directly "
"in hardware, or trapped and emulated by software."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:324
msgid ""
":c:macro:`RISCV_HWPROBE_MISALIGNED_VECTOR_FAST`: 32-bit misaligned accesses "
"using vector registers are faster than the equivalent quantity of byte "
"accesses via vector registers."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:327
msgid ""
":c:macro:`RISCV_HWPROBE_MISALIGNED_VECTOR_UNSUPPORTED`: Misaligned vector "
"accesses are not supported at all and will generate a misaligned address "
"fault."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:330
msgid ""
":c:macro:`RISCV_HWPROBE_KEY_VENDOR_EXT_THEAD_0`: A bitmask containing the "
"thead vendor extensions that are compatible with the :c:macro:"
"`RISCV_HWPROBE_BASE_BEHAVIOR_IMA`: base system behavior."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:334
msgid "T-HEAD"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:336
msgid ""
":c:macro:`RISCV_HWPROBE_VENDOR_EXT_XTHEADVECTOR`: The xtheadvector vendor"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:337
msgid ""
"extension is supported in the T-Head ISA extensions spec starting from "
"commit a18c801634 (\"Add T-Head VECTOR vendor extension. \")."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:340
msgid ""
":c:macro:`RISCV_HWPROBE_KEY_ZICBOM_BLOCK_SIZE`: An unsigned int which "
"represents the size of the Zicbom block in bytes."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:343
msgid ""
":c:macro:`RISCV_HWPROBE_KEY_VENDOR_EXT_SIFIVE_0`: A bitmask containing the "
"sifive vendor extensions that are compatible with the :c:macro:"
"`RISCV_HWPROBE_BASE_BEHAVIOR_IMA`: base system behavior."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:347
msgid "SIFIVE"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:349
msgid ""
":c:macro:`RISCV_HWPROBE_VENDOR_EXT_XSFVQMACCDOD`: The Xsfqmaccdod vendor"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:350
msgid ""
"extension is supported in version 1.1 of SiFive Int8 Matrix Multiplication "
"Extensions Specification."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:353
msgid ""
":c:macro:`RISCV_HWPROBE_VENDOR_EXT_XSFVQMACCQOQ`: The Xsfqmaccqoq vendor"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:354
msgid ""
"extension is supported in version 1.1 of SiFive Int8 Matrix Multiplication "
"Instruction Extensions Specification."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:357
msgid ""
":c:macro:`RISCV_HWPROBE_VENDOR_EXT_XSFVFNRCLIPXFQF`: The Xsfvfnrclipxfqf"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:358
msgid ""
"vendor extension is supported in version 1.0 of SiFive FP32-to-int8 Ranged "
"Clip Instructions Extensions Specification."
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:361
msgid ":c:macro:`RISCV_HWPROBE_VENDOR_EXT_XSFVFWMACCQQQ`: The Xsfvfwmaccqqq"
msgstr ""

#: ../../../arch/riscv/hwprobe.rst:362
msgid ""
"vendor extension is supported in version 1.0 of Matrix Multiply Accumulate "
"Instruction Extensions Specification."
msgstr ""
