# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../virt/kvm/loongarch/hypercalls.rst:5
msgid "The LoongArch paravirtual interface"
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:7
msgid ""
"KVM hypercalls use the HVCL instruction with code 0x100 and the hypercall "
"number is put in a0. Up to five arguments may be placed in registers a1 - "
"a5. The return value is placed in v0 (an alias of a0)."
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:11
msgid "Source code for this interface can be found in arch/loongarch/kvm*."
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:14
msgid "Querying for existence"
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:16
msgid ""
"To determine if the host is running on KVM, we can utilize the cpucfg() "
"function at index CPUCFG_KVM_BASE (0x40000000)."
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:19
msgid ""
"The CPUCFG_KVM_BASE range, spanning from 0x40000000 to 0x400000FF, The "
"CPUCFG_KVM_BASE range between 0x40000000 - 0x400000FF is marked as reserved. "
"Consequently, all current and future processors will not implement any "
"feature within this range."
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:24
msgid ""
"On a KVM-virtualized Linux system, a read operation on cpucfg() at index "
"CPUCFG_KVM_BASE (0x40000000) returns the magic string 'KVM\\0'."
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:27
msgid ""
"Once you have determined that your host is running on a paravirtualization- "
"capable KVM, you may now use hypercalls as described below."
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:31
msgid "KVM hypercall ABI"
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:33
msgid ""
"The KVM hypercall ABI is simple, with one scratch register a0 (v0) and at "
"most five generic registers (a1 - a5) used as input parameters. The FP "
"(Floating- point) and vector registers are not utilized as input registers "
"and must remain unmodified during a hypercall."
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:38
msgid ""
"Hypercall functions can be inlined as it only uses one scratch register."
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:40
msgid "The parameters are as follows:"
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:43
msgid "Register"
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:43
msgid "IN"
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:43
msgid "OUT"
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:45
msgid "a0"
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:45
msgid "function number"
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:45
msgid "Return  code"
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:46
msgid "a1"
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:46
msgid "1st     parameter"
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:47
msgid "a2"
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:47
msgid "2nd     parameter"
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:48
msgid "a3"
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:48
msgid "3rd     parameter"
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:49
msgid "a4"
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:49
msgid "4th     parameter"
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:50
msgid "a5"
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:50
msgid "5th     parameter"
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:53
msgid "The return codes may be one of the following:"
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:56
msgid "Code"
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:56
msgid "Meaning"
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:58
msgid "0"
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:58
msgid "Success"
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:59
msgid "-1"
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:59
msgid "Hypercall not implemented"
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:60
msgid "-2"
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:60
msgid "Bad Hypercall parameter"
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:64
msgid "KVM Hypercalls Documentation"
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:66
msgid "The template for each hypercall is as follows:"
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:68
msgid "Hypercall name"
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:0
#: ../../../virt/kvm/loongarch/hypercalls.rst:69
msgid "Purpose"
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:72
msgid "1. KVM_HCALL_FUNC_IPI"
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:74
msgid "Send IPIs to multiple vCPUs."
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:76
msgid "a0: KVM_HCALL_FUNC_IPI"
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:77
msgid "a1: Lower part of the bitmap for destination physical CPUIDs"
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:78
msgid "a2: Higher part of the bitmap for destination physical CPUIDs"
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:79
msgid "a3: The lowest physical CPUID in the bitmap"
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:81
msgid ""
"The hypercall lets a guest send multiple IPIs (Inter-Process Interrupts) "
"with at most 128 destinations per hypercall. The destinations are "
"represented in a bitmap contained in the first two input registers (a1 and "
"a2)."
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:85
msgid ""
"Bit 0 of a1 corresponds to the physical CPUID in the third input register "
"(a3) and bit 1 corresponds to the physical CPUID in a3+1, and so on."
msgstr ""

#: ../../../virt/kvm/loongarch/hypercalls.rst:88
msgid ""
"PV IPI on LoongArch includes both PV IPI multicast sending and PV IPI "
"receiving, and SWI is used for PV IPI inject since there is no VM-exits "
"accessing SWI registers."
msgstr ""
