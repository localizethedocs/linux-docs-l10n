# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../virt/kvm/arm/vcpu-features.rst:5
msgid "vCPU feature selection on arm64"
msgstr ""

#: ../../../virt/kvm/arm/vcpu-features.rst:7
msgid ""
"KVM/arm64 provides two mechanisms that allow userspace to configure the CPU "
"features presented to the guest."
msgstr ""

#: ../../../virt/kvm/arm/vcpu-features.rst:11
msgid "KVM_ARM_VCPU_INIT"
msgstr ""

#: ../../../virt/kvm/arm/vcpu-features.rst:13
msgid ""
"The ``KVM_ARM_VCPU_INIT`` ioctl accepts a bitmap of feature flags (``struct "
"kvm_vcpu_init::features``). Features enabled by this interface are *opt-in* "
"and may change/extend UAPI. See :ref:`KVM_ARM_VCPU_INIT` for complete "
"documentation of the features controlled by the ioctl."
msgstr ""

#: ../../../virt/kvm/arm/vcpu-features.rst:18
msgid ""
"Otherwise, all CPU features supported by KVM are described by the "
"architected ID registers."
msgstr ""

#: ../../../virt/kvm/arm/vcpu-features.rst:22
msgid "The ID Registers"
msgstr ""

#: ../../../virt/kvm/arm/vcpu-features.rst:24
msgid ""
"The Arm architecture specifies a range of *ID Registers* that describe the "
"set of architectural features supported by the CPU implementation. KVM "
"initializes the guest's ID registers to the maximum set of CPU features "
"supported by the system. The ID register values may be VM-scoped in KVM, "
"meaning that the values could be shared for all vCPUs in a VM."
msgstr ""

#: ../../../virt/kvm/arm/vcpu-features.rst:30
msgid ""
"KVM allows userspace to *opt-out* of certain CPU features described by the "
"ID registers by writing values to them via the ``KVM_SET_ONE_REG`` ioctl. "
"The ID registers are mutable until the VM has started, i.e. userspace has "
"called ``KVM_RUN`` on at least one vCPU in the VM. Userspace can discover "
"what fields are mutable in the ID registers using the "
"``KVM_ARM_GET_REG_WRITABLE_MASKS``. See the :ref:`ioctl documentation "
"<KVM_ARM_GET_REG_WRITABLE_MASKS>` for more details."
msgstr ""

#: ../../../virt/kvm/arm/vcpu-features.rst:38
msgid ""
"Userspace is allowed to *limit* or *mask* CPU features according to the "
"rules outlined by the architecture in DDI0487J.a D19.1.3 'Principles of the "
"ID scheme for fields in ID register'. KVM does not allow ID register values "
"that exceed the capabilities of the system."
msgstr ""

#: ../../../virt/kvm/arm/vcpu-features.rst:44
msgid ""
"It is **strongly recommended** that userspace modify the ID register values "
"before accessing the rest of the vCPU's CPU register state. KVM may use the "
"ID register values to control feature emulation. Interleaving ID register "
"modification with other system register accesses may lead to unpredictable "
"behavior."
msgstr ""
