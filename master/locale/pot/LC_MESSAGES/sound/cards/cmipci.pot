# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../sound/cards/cmipci.rst:3
msgid "Brief Notes on C-Media 8338/8738/8768/8770 Driver"
msgstr ""

#: ../../../sound/cards/cmipci.rst:5
msgid "Takashi Iwai <tiwai@suse.de>"
msgstr ""

#: ../../../sound/cards/cmipci.rst:9
msgid "Front/Rear Multi-channel Playback"
msgstr ""

#: ../../../sound/cards/cmipci.rst:11
msgid ""
"CM8x38 chip can use ADC as the second DAC so that two different stereo "
"channels can be used for front/rear playbacks.  Since there are two DACs, "
"both streams are handled independently unlike the 4/6ch multi- channel "
"playbacks in the section below."
msgstr ""

#: ../../../sound/cards/cmipci.rst:16
msgid ""
"As default, ALSA driver assigns the first PCM device (i.e. hw:0,0 for "
"card#0) for front and 4/6ch playbacks, while the second PCM device (hw:0,1) "
"is assigned to the second DAC for rear playback."
msgstr ""

#: ../../../sound/cards/cmipci.rst:20
msgid "There are slight differences between the two DACs:"
msgstr ""

#: ../../../sound/cards/cmipci.rst:22
msgid ""
"The first DAC supports U8 and S16LE formats, while the second DAC supports "
"only S16LE."
msgstr ""

#: ../../../sound/cards/cmipci.rst:24
msgid "The second DAC supports only two channel stereo."
msgstr ""

#: ../../../sound/cards/cmipci.rst:26
msgid ""
"Please note that the CM8x38 DAC doesn't support continuous playback rate but "
"only fixed rates: 5512, 8000, 11025, 16000, 22050, 32000, 44100 and 48000 Hz."
msgstr ""

#: ../../../sound/cards/cmipci.rst:30
msgid ""
"The rear output can be heard only when \"Four Channel Mode\" switch is "
"disabled.  Otherwise no signal will be routed to the rear speakers. As "
"default it's turned on."
msgstr ""

#: ../../../sound/cards/cmipci.rst:35
msgid ""
"When \"Four Channel Mode\" switch is off, the output from rear speakers will "
"be FULL VOLUME regardless of Master and PCM volumes [#]_. This might damage "
"your audio equipment.  Please disconnect speakers before your turn off this "
"switch."
msgstr ""

#: ../../../sound/cards/cmipci.rst:42
msgid ""
"Well.. I once got the output with correct volume (i.e. same with the front "
"one) and was so excited.  It was even with \"Four Channel\" bit on and "
"\"double DAC\" mode.  Actually I could hear separate 4 channels from front "
"and rear speakers!  But.. after reboot, all was gone. It's a very pity that "
"I didn't save the register dump at that time..  Maybe there is an unknown "
"register to achieve this..."
msgstr ""

#: ../../../sound/cards/cmipci.rst:49
msgid ""
"If your card has an extra output jack for the rear output, the rear playback "
"should be routed there as default.  If not, there is a control switch in the "
"driver \"Line-In As Rear\", which you can change via alsamixer or somewhat "
"else.  When this switch is on, line-in jack is used as rear output."
msgstr ""

#: ../../../sound/cards/cmipci.rst:55
msgid ""
"There are two more controls regarding to the rear output. The \"Exchange "
"DAC\" switch is used to exchange front and rear playback routes, i.e. the "
"2nd DAC is output from front output."
msgstr ""

#: ../../../sound/cards/cmipci.rst:61
msgid "4/6 Multi-Channel Playback"
msgstr ""

#: ../../../sound/cards/cmipci.rst:63
msgid ""
"The recent CM8738 chips support for the 4/6 multi-channel playback "
"function.  This is useful especially for AC3 decoding."
msgstr ""

#: ../../../sound/cards/cmipci.rst:66
msgid ""
"When the multi-channel is supported, the driver name has a suffix \"-MC\" "
"such like \"CMI8738-MC6\".  You can check this name from /proc/asound/cards."
msgstr ""

#: ../../../sound/cards/cmipci.rst:70
msgid ""
"When the 4/6-ch output is enabled, the second DAC accepts up to 6 (or 4) "
"channels.  While the dual DAC supports two different rates or formats, the "
"4/6-ch playback supports only the same condition for all channels.  Since "
"the multi-channel playback mode uses both DACs, you cannot operate with full-"
"duplex."
msgstr ""

#: ../../../sound/cards/cmipci.rst:76
msgid ""
"The 4.0 and 5.1 modes are defined as the pcm \"surround40\" and "
"\"surround51\" in alsa-lib.  For example, you can play a WAV file with 6 "
"channels like ::"
msgstr ""

#: ../../../sound/cards/cmipci.rst:82
msgid ""
"For programming the 4/6 channel playback, you need to specify the PCM "
"channels as you like and set the format S16LE.  For example, for playback "
"with 4 channels, ::"
msgstr ""

#: ../../../sound/cards/cmipci.rst:92
msgid "and use the interleaved 4 channel data."
msgstr ""

#: ../../../sound/cards/cmipci.rst:94
msgid "There are some control switches affecting to the speaker connections:"
msgstr ""

#: ../../../sound/cards/cmipci.rst:96
msgid "Line-In Mode"
msgstr ""

#: ../../../sound/cards/cmipci.rst:97
msgid ""
"an enum control to change the behavior of line-in jack.  Either \"Line-In\", "
"\"Rear Output\" or \"Bass Output\" can be selected.  The last item is "
"available only with model 039 or newer. When \"Rear Output\" is chosen, the "
"surround channels 3 and 4 are output to line-in jack."
msgstr ""

#: ../../../sound/cards/cmipci.rst:103
msgid "Mic-In Mode"
msgstr ""

#: ../../../sound/cards/cmipci.rst:104
msgid ""
"an enum control to change the behavior of mic-in jack.  Either \"Mic-In\" or "
"\"Center/LFE Output\" can be selected. When \"Center/LFE Output\" is chosen, "
"the center and bass channels (channels 5 and 6) are output to mic-in jack."
msgstr ""

#: ../../../sound/cards/cmipci.rst:111
msgid "Digital I/O"
msgstr ""

#: ../../../sound/cards/cmipci.rst:113
msgid ""
"The CM8x38 provides the excellent SPDIF capability with very cheap price "
"(yes, that's the reason I bought the card :)"
msgstr ""

#: ../../../sound/cards/cmipci.rst:116
msgid ""
"The SPDIF playback and capture are done via the third PCM device (hw:0,2).  "
"Usually this is assigned to the PCM device \"spdif\". The available rates "
"are 44100 and 48000 Hz. For playback with aplay, you can run like below: ::"
msgstr ""

#: ../../../sound/cards/cmipci.rst:124
msgid "or"
msgstr ""

#: ../../../sound/cards/cmipci.rst:130
msgid "24bit format is also supported experimentally."
msgstr ""

#: ../../../sound/cards/cmipci.rst:132
msgid ""
"The playback and capture over SPDIF use normal DAC and ADC, respectively, so "
"you cannot playback both analog and digital streams simultaneously."
msgstr ""

#: ../../../sound/cards/cmipci.rst:136
msgid ""
"To enable SPDIF output, you need to turn on \"IEC958 Output Switch\" control "
"via mixer or alsactl (\"IEC958\" is the official name of so-called S/PDIF).  "
"Then you'll see the red light on from the card so you know that's working "
"obviously :) The SPDIF input is always enabled, so you can hear SPDIF input "
"data from line-out with \"IEC958 In Monitor\" switch at any time (see below)."
msgstr ""

#: ../../../sound/cards/cmipci.rst:144
msgid ""
"You can play via SPDIF even with the first device (hw:0,0), but SPDIF is "
"enabled only when the proper format (S16LE), sample rate (441100 or 48000) "
"and channels (2) are used.  Otherwise it's turned off.  (Also don't forget "
"to turn on \"IEC958 Output Switch\", too.)"
msgstr ""

#: ../../../sound/cards/cmipci.rst:150
msgid "Additionally there are relevant control switches:"
msgstr ""

#: ../../../sound/cards/cmipci.rst:152
msgid "IEC958 Mix Analog"
msgstr ""

#: ../../../sound/cards/cmipci.rst:153
msgid ""
"Mix analog PCM playback and FM-OPL/3 streams and output through SPDIF.  This "
"switch appears only on old chip models (CM8738 033 and 037)."
msgstr ""

#: ../../../sound/cards/cmipci.rst:157
msgid ""
"Note: without this control you can output PCM to SPDIF. This is \"mixing\" "
"of streams, so e.g. it's not for AC3 output (see the next section)."
msgstr ""

#: ../../../sound/cards/cmipci.rst:161
msgid "IEC958 In Select"
msgstr ""

#: ../../../sound/cards/cmipci.rst:162
msgid ""
"Select SPDIF input, the internal CD-in (false) and the external input (true)."
msgstr ""

#: ../../../sound/cards/cmipci.rst:165
msgid "IEC958 Loop"
msgstr ""

#: ../../../sound/cards/cmipci.rst:166
msgid "SPDIF input data is loop back into SPDIF output (aka bypass)"
msgstr ""

#: ../../../sound/cards/cmipci.rst:169
msgid "IEC958 Copyright"
msgstr ""

#: ../../../sound/cards/cmipci.rst:170
msgid "Set the copyright bit."
msgstr ""

#: ../../../sound/cards/cmipci.rst:172
msgid "IEC958 5V"
msgstr ""

#: ../../../sound/cards/cmipci.rst:173
msgid ""
"Select 0.5V (coax) or 5V (optical) interface. On some cards this doesn't "
"work and you need to change the configuration with hardware dip-switch."
msgstr ""

#: ../../../sound/cards/cmipci.rst:177
msgid "IEC958 In Monitor"
msgstr ""

#: ../../../sound/cards/cmipci.rst:178
msgid "SPDIF input is routed to DAC."
msgstr ""

#: ../../../sound/cards/cmipci.rst:180
msgid "IEC958 In Phase Inverse"
msgstr ""

#: ../../../sound/cards/cmipci.rst:181
msgid ""
"Set SPDIF input format as inverse. [FIXME: this doesn't work on all chips..]"
msgstr ""

#: ../../../sound/cards/cmipci.rst:184
msgid "IEC958 In Valid"
msgstr ""

#: ../../../sound/cards/cmipci.rst:185
msgid "Set input validity flag detection."
msgstr ""

#: ../../../sound/cards/cmipci.rst:187
msgid ""
"Note: When \"PCM Playback Switch\" is on, you'll hear the digital output "
"stream through analog line-out."
msgstr ""

#: ../../../sound/cards/cmipci.rst:192
msgid "The AC3 (RAW DIGITAL) OUTPUT"
msgstr ""

#: ../../../sound/cards/cmipci.rst:194
msgid ""
"The driver supports raw digital (typically AC3) i/o over SPDIF.  This can be "
"toggled via IEC958 playback control, but usually you need to access it via "
"alsa-lib.  See alsa-lib documents for more details."
msgstr ""

#: ../../../sound/cards/cmipci.rst:198
msgid ""
"On the raw digital mode, the \"PCM Playback Switch\" is automatically turned "
"off so that non-audio data is heard from the analog line-out. Similarly the "
"following switches are off: \"IEC958 Mix Analog\" and \"IEC958 Loop\".  The "
"switches are resumed after closing the SPDIF PCM device automatically to the "
"previous state."
msgstr ""

#: ../../../sound/cards/cmipci.rst:204
msgid ""
"On the model 033, AC3 is implemented by the software conversion in the alsa-"
"lib.  If you need to bypass the software conversion of IEC958 subframes, "
"pass the \"soft_ac3=0\" module option.  This doesn't matter on the newer "
"models."
msgstr ""

#: ../../../sound/cards/cmipci.rst:211
msgid "ANALOG MIXER INTERFACE"
msgstr ""

#: ../../../sound/cards/cmipci.rst:213
msgid ""
"The mixer interface on CM8x38 is similar to SB16. There are Master, PCM, "
"Synth, CD, Line, Mic and PC Speaker playback volumes.  Synth, CD, Line and "
"Mic have playback and capture switches, too, as well as SB16."
msgstr ""

#: ../../../sound/cards/cmipci.rst:218
msgid ""
"In addition to the standard SB mixer, CM8x38 provides more functions. - PCM "
"playback switch - PCM capture switch (to capture the data sent to DAC) - Mic "
"Boost switch - Mic capture volume - Aux playback volume/switch and capture "
"switch - 3D control switch"
msgstr ""

#: ../../../sound/cards/cmipci.rst:228
msgid "MIDI CONTROLLER"
msgstr ""

#: ../../../sound/cards/cmipci.rst:230
msgid ""
"With CMI8338 chips, the MPU401-UART interface is disabled as default. You "
"need to set the module option \"mpu_port\" to a valid I/O port address to "
"enable MIDI support.  Valid I/O ports are 0x300, 0x310, 0x320 and 0x330.  "
"Choose a value that doesn't conflict with other cards."
msgstr ""

#: ../../../sound/cards/cmipci.rst:235
msgid ""
"With CMI8738 and newer chips, the MIDI interface is enabled by default and "
"the driver automatically chooses a port address."
msgstr ""

#: ../../../sound/cards/cmipci.rst:238
msgid ""
"There is *no* hardware wavetable function on this chip (except for OPL3 "
"synth below). What's said as MIDI synth on Windows is a software synthesizer "
"emulation.  On Linux use TiMidity or other softsynth program for playing "
"MIDI music."
msgstr ""

#: ../../../sound/cards/cmipci.rst:246
msgid "FM OPL/3 Synth"
msgstr ""

#: ../../../sound/cards/cmipci.rst:248
msgid ""
"The FM OPL/3 is also enabled as default only for the first card. Set "
"\"fm_port\" module option for more cards."
msgstr ""

#: ../../../sound/cards/cmipci.rst:251
msgid ""
"The output quality of FM OPL/3 is, however, very weird. I don't know why.."
msgstr ""

#: ../../../sound/cards/cmipci.rst:254
msgid "CMI8768 and newer chips do not have the FM synth."
msgstr ""

#: ../../../sound/cards/cmipci.rst:258
msgid "Joystick and Modem"
msgstr ""

#: ../../../sound/cards/cmipci.rst:260
msgid ""
"The legacy joystick is supported.  To enable the joystick support, pass "
"joystick_port=1 module option.  The value 1 means the auto-detection. If the "
"auto-detection fails, try to pass the exact I/O address."
msgstr ""

#: ../../../sound/cards/cmipci.rst:264
msgid "The modem is enabled dynamically via a card control switch \"Modem\"."
msgstr ""

#: ../../../sound/cards/cmipci.rst:268
msgid "Debugging Information"
msgstr ""

#: ../../../sound/cards/cmipci.rst:270
msgid ""
"The registers are shown in /proc/asound/cardX/cmipci.  If you have any "
"problem (especially unexpected behavior of mixer), please attach the output "
"of this proc file together with the bug report."
msgstr ""
