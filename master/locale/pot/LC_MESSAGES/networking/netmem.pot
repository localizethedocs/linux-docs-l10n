# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../networking/netmem.rst:5
msgid "Netmem Support for Network Drivers"
msgstr ""

#: ../../../networking/netmem.rst:7
msgid ""
"This document outlines the requirements for network drivers to support "
"netmem, an abstract memory type that enables features like device memory "
"TCP. By supporting netmem, drivers can work with various underlying memory "
"types with little to no modification."
msgstr ""

#: ../../../networking/netmem.rst:12
msgid "Benefits of Netmem :"
msgstr ""

#: ../../../networking/netmem.rst:14
msgid ""
"Flexibility: Netmem can be backed by different memory types (e.g., struct "
"page, DMA-buf), allowing drivers to support various use cases such as device "
"memory TCP."
msgstr ""

#: ../../../networking/netmem.rst:17
msgid ""
"Future-proof: Drivers with netmem support are ready for upcoming features "
"that rely on it."
msgstr ""

#: ../../../networking/netmem.rst:19
msgid ""
"Simplified Development: Drivers interact with a consistent API, regardless "
"of the underlying memory implementation."
msgstr ""

#: ../../../networking/netmem.rst:23
msgid "Driver RX Requirements"
msgstr ""

#: ../../../networking/netmem.rst:25
msgid "The driver must support page_pool."
msgstr ""

#: ../../../networking/netmem.rst:27
msgid "The driver must support the tcp-data-split ethtool option."
msgstr ""

#: ../../../networking/netmem.rst:29
msgid ""
"The driver must use the page_pool netmem APIs for payload memory. The netmem "
"APIs currently 1-to-1 correspond with page APIs. Conversion to netmem should "
"be achievable by switching the page APIs to netmem APIs and tracking memory "
"via netmem_refs in the driver rather than struct page * :"
msgstr ""

#: ../../../networking/netmem.rst:34
msgid "page_pool_alloc -> page_pool_alloc_netmem"
msgstr ""

#: ../../../networking/netmem.rst:35
msgid "page_pool_get_dma_addr -> page_pool_get_dma_addr_netmem"
msgstr ""

#: ../../../networking/netmem.rst:36
msgid "page_pool_put_page -> page_pool_put_netmem"
msgstr ""

#: ../../../networking/netmem.rst:38
msgid ""
"Not all page APIs have netmem equivalents at the moment. If your driver "
"relies on a missing netmem API, feel free to add and propose to netdev@, or "
"reach out to the maintainers and/or almasrymina@google.com for help adding "
"the netmem API."
msgstr ""

#: ../../../networking/netmem.rst:43
msgid "The driver must use the following PP_FLAGS:"
msgstr ""

#: ../../../networking/netmem.rst:45
msgid ""
"PP_FLAG_DMA_MAP: netmem is not dma-mappable by the driver. The driver must "
"delegate the dma mapping to the page_pool, which knows when dma-mapping is "
"(or is not) appropriate."
msgstr ""

#: ../../../networking/netmem.rst:48
msgid ""
"PP_FLAG_DMA_SYNC_DEV: netmem dma addr is not necessarily dma-syncable by the "
"driver. The driver must delegate the dma syncing to the page_pool, which "
"knows when dma-syncing is (or is not) appropriate."
msgstr ""

#: ../../../networking/netmem.rst:51
msgid ""
"PP_FLAG_ALLOW_UNREADABLE_NETMEM. The driver must specify this flag iff tcp-"
"data-split is enabled."
msgstr ""

#: ../../../networking/netmem.rst:54
msgid ""
"The driver must not assume the netmem is readable and/or backed by pages. "
"The netmem returned by the page_pool may be unreadable, in which case "
"netmem_address() will return NULL. The driver must correctly handle "
"unreadable netmem, i.e. don't attempt to handle its contents when "
"netmem_address() is NULL."
msgstr ""

#: ../../../networking/netmem.rst:60
msgid ""
"Ideally, drivers should not have to check the underlying netmem type via "
"helpers like netmem_is_net_iov() or convert the netmem to any of its "
"underlying types via netmem_to_page() or netmem_to_net_iov(). In most cases, "
"netmem or page_pool helpers that abstract this complexity are provided (and "
"more can be added)."
msgstr ""

#: ../../../networking/netmem.rst:66
msgid ""
"The driver must use page_pool_dma_sync_netmem_for_cpu() in lieu of "
"dma_sync_single_range_for_cpu(). For some memory providers, dma_syncing for "
"CPU will be done by the page_pool, for others (particularly dmabuf memory "
"provider), dma syncing for CPU is the responsibility of the userspace using "
"dmabuf APIs. The driver must delegate the entire dma-syncing operation to "
"the page_pool which will do it correctly."
msgstr ""

#: ../../../networking/netmem.rst:73
msgid ""
"Avoid implementing driver-specific recycling on top of the page_pool. "
"Drivers cannot hold onto a struct page to do their own recycling as the "
"netmem may not be backed by a struct page. However, you may hold onto a "
"page_pool reference with page_pool_fragment_netmem() or "
"page_pool_ref_netmem() for that purpose, but be mindful that some netmem "
"types might have longer circulation times, such as when userspace holds a "
"reference in zerocopy scenarios."
msgstr ""

#: ../../../networking/netmem.rst:82
msgid "Driver TX Requirements"
msgstr ""

#: ../../../networking/netmem.rst:84
msgid ""
"The Driver must not pass the netmem dma_addr to any of the dma-mapping APIs "
"directly. This is because netmem dma_addrs may come from a source like dma-"
"buf that is not compatible with the dma-mapping APIs."
msgstr ""

#: ../../../networking/netmem.rst:88
msgid ""
"Helpers like netmem_dma_unmap_page_attrs() & netmem_dma_unmap_addr_set() "
"should be used in lieu of dma_unmap_page[_attrs](), dma_unmap_addr_set(). "
"The netmem variants will handle netmem dma_addrs correctly regardless of the "
"source, delegating to the dma-mapping APIs when appropriate."
msgstr ""

#: ../../../networking/netmem.rst:93
msgid ""
"Not all dma-mapping APIs have netmem equivalents at the moment. If your "
"driver relies on a missing netmem API, feel free to add and propose to "
"netdev@, or reach out to the maintainers and/or almasrymina@google.com for "
"help adding the netmem API."
msgstr ""

#: ../../../networking/netmem.rst:98
msgid "Driver should declare support by setting `netdev->netmem_tx = true`"
msgstr ""
