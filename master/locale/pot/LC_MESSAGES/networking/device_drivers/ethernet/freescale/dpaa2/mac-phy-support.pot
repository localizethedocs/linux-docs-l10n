# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../networking/device_drivers/ethernet/freescale/dpaa2/mac-phy-support.rst:6
msgid "DPAA2 MAC / PHY support"
msgstr ""

#: ../../../networking/device_drivers/ethernet/freescale/dpaa2/mac-phy-support.rst:0
msgid "Copyright"
msgstr ""

#: ../../../networking/device_drivers/ethernet/freescale/dpaa2/mac-phy-support.rst:8
msgid "|copy| 2019 NXP"
msgstr ""

#: ../../../networking/device_drivers/ethernet/freescale/dpaa2/mac-phy-support.rst:11
msgid "Overview"
msgstr ""

#: ../../../networking/device_drivers/ethernet/freescale/dpaa2/mac-phy-support.rst:13
msgid ""
"The DPAA2 MAC / PHY support consists of a set of APIs that help DPAA2 "
"network drivers (dpaa2-eth, dpaa2-ethsw) interact with the PHY library."
msgstr ""

#: ../../../networking/device_drivers/ethernet/freescale/dpaa2/mac-phy-support.rst:17
msgid "DPAA2 Software Architecture"
msgstr ""

#: ../../../networking/device_drivers/ethernet/freescale/dpaa2/mac-phy-support.rst:19
msgid ""
"Among other DPAA2 objects, the fsl-mc bus exports DPNI objects (abstracting "
"a network interface) and DPMAC objects (abstracting a MAC). The dpaa2-eth "
"driver probes on the DPNI object and connects to and configures a DPMAC "
"object with the help of phylink."
msgstr ""

#: ../../../networking/device_drivers/ethernet/freescale/dpaa2/mac-phy-support.rst:24
msgid ""
"Data connections may be established between a DPNI and a DPMAC, or between "
"two DPNIs. Depending on the connection type, the netif_carrier_[on/off] is "
"handled directly by the dpaa2-eth driver or by phylink."
msgstr ""

#: ../../../networking/device_drivers/ethernet/freescale/dpaa2/mac-phy-support.rst:62
msgid ""
"Depending on an MC firmware configuration setting, each MAC may be in one of "
"two modes:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/freescale/dpaa2/mac-phy-support.rst:64
msgid ""
"DPMAC_LINK_TYPE_FIXED: the link state management is handled exclusively by "
"the MC firmware by polling the MAC PCS. Without the need to register a "
"phylink instance, the dpaa2-eth driver will not bind to the connected dpmac "
"object at all."
msgstr ""

#: ../../../networking/device_drivers/ethernet/freescale/dpaa2/mac-phy-support.rst:69
msgid ""
"DPMAC_LINK_TYPE_PHY: The MC firmware is left waiting for link state update "
"events, but those are in fact passed strictly between the dpaa2-mac (based "
"on phylink) and its attached net_device driver (dpaa2-eth, dpaa2-ethsw), "
"effectively bypassing the firmware."
msgstr ""

#: ../../../networking/device_drivers/ethernet/freescale/dpaa2/mac-phy-support.rst:75
msgid "Implementation"
msgstr ""

#: ../../../networking/device_drivers/ethernet/freescale/dpaa2/mac-phy-support.rst:77
msgid ""
"At probe time or when a DPNI's endpoint is dynamically changed, the dpaa2-"
"eth is responsible to find out if the peer object is a DPMAC and if this is "
"the case, to integrate it with PHYLINK using the dpaa2_mac_connect() API, "
"which will do the following:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/freescale/dpaa2/mac-phy-support.rst:82
msgid "look up the device tree for PHYLINK-compatible of binding (phy-handle)"
msgstr ""

#: ../../../networking/device_drivers/ethernet/freescale/dpaa2/mac-phy-support.rst:83
msgid "will create a PHYLINK instance associated with the received net_device"
msgstr ""

#: ../../../networking/device_drivers/ethernet/freescale/dpaa2/mac-phy-support.rst:84
msgid "connect to the PHY using phylink_of_phy_connect()"
msgstr ""

#: ../../../networking/device_drivers/ethernet/freescale/dpaa2/mac-phy-support.rst:86
msgid "The following phylink_mac_ops callback are implemented:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/freescale/dpaa2/mac-phy-support.rst:88
msgid ""
".validate() will populate the supported linkmodes with the MAC capabilities "
"only when the phy_interface_t is RGMII_* (at the moment, this is the only "
"link type supported by the driver)."
msgstr ""

#: ../../../networking/device_drivers/ethernet/freescale/dpaa2/mac-phy-support.rst:92
msgid ""
".mac_config() will configure the MAC in the new configuration using the "
"dpmac_set_link_state() MC firmware API."
msgstr ""

#: ../../../networking/device_drivers/ethernet/freescale/dpaa2/mac-phy-support.rst:95
msgid ""
".mac_link_up() / .mac_link_down() will update the MAC link using the same "
"API described above."
msgstr ""

#: ../../../networking/device_drivers/ethernet/freescale/dpaa2/mac-phy-support.rst:98
msgid ""
"At driver unbind() or when the DPNI object is disconnected from the DPMAC, "
"the dpaa2-eth driver calls dpaa2_mac_disconnect() which will, in turn, "
"disconnect from the PHY and destroy the PHYLINK instance."
msgstr ""

#: ../../../networking/device_drivers/ethernet/freescale/dpaa2/mac-phy-support.rst:102
msgid ""
"In case of a DPNI-DPMAC connection, an 'ip link set dev eth0 up' would start "
"the following sequence of operations:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/freescale/dpaa2/mac-phy-support.rst:105
msgid "phylink_start() called from .dev_open()."
msgstr ""

#: ../../../networking/device_drivers/ethernet/freescale/dpaa2/mac-phy-support.rst:106
msgid "The .mac_config() and .mac_link_up() callbacks are called by PHYLINK."
msgstr ""

#: ../../../networking/device_drivers/ethernet/freescale/dpaa2/mac-phy-support.rst:107
msgid ""
"In order to configure the HW MAC, the MC Firmware API dpmac_set_link_state() "
"is called."
msgstr ""

#: ../../../networking/device_drivers/ethernet/freescale/dpaa2/mac-phy-support.rst:109
msgid "The firmware will eventually setup the HW MAC in the new configuration."
msgstr ""

#: ../../../networking/device_drivers/ethernet/freescale/dpaa2/mac-phy-support.rst:110
msgid ""
"A netif_carrier_on() call is made directly from PHYLINK on the associated "
"net_device."
msgstr ""

#: ../../../networking/device_drivers/ethernet/freescale/dpaa2/mac-phy-support.rst:112
msgid ""
"The dpaa2-eth driver handles the LINK_STATE_CHANGE irq in order to enable/"
"disable Rx taildrop based on the pause frame settings."
msgstr ""

#: ../../../networking/device_drivers/ethernet/freescale/dpaa2/mac-phy-support.rst:141
msgid ""
"In case of a DPNI-DPNI connection, a usual sequence of operations looks like "
"the following:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/freescale/dpaa2/mac-phy-support.rst:144
msgid "ip link set dev eth0 up"
msgstr ""

#: ../../../networking/device_drivers/ethernet/freescale/dpaa2/mac-phy-support.rst:145
#: ../../../networking/device_drivers/ethernet/freescale/dpaa2/mac-phy-support.rst:147
msgid "The dpni_enable() MC API called on the associated fsl_mc_device."
msgstr ""

#: ../../../networking/device_drivers/ethernet/freescale/dpaa2/mac-phy-support.rst:146
msgid "ip link set dev eth1 up"
msgstr ""

#: ../../../networking/device_drivers/ethernet/freescale/dpaa2/mac-phy-support.rst:148
msgid ""
"The LINK_STATE_CHANGED irq is received by both instances of the dpaa2-eth "
"driver because now the operational link state is up."
msgstr ""

#: ../../../networking/device_drivers/ethernet/freescale/dpaa2/mac-phy-support.rst:150
msgid ""
"The netif_carrier_on() is called on the exported net_device from "
"link_state_update()."
msgstr ""

#: ../../../networking/device_drivers/ethernet/freescale/dpaa2/mac-phy-support.rst:175
msgid "Exported API"
msgstr ""

#: ../../../networking/device_drivers/ethernet/freescale/dpaa2/mac-phy-support.rst:177
msgid ""
"Any DPAA2 driver that drivers endpoints of DPMAC objects should service its "
"_EVENT_ENDPOINT_CHANGED irq and connect/disconnect from the associated DPMAC "
"when necessary using the below listed API::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/freescale/dpaa2/mac-phy-support.rst:184
msgid ""
"A phylink integration is necessary only when the partner DPMAC is not of "
"``TYPE_FIXED``. This means it is either of ``TYPE_PHY``, or of "
"``TYPE_BACKPLANE`` (the difference being the two that in the "
"``TYPE_BACKPLANE`` mode, the MC firmware does not access the PCS registers). "
"One can check for this condition using the following helper::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/freescale/dpaa2/mac-phy-support.rst:192
msgid ""
"Before connection to a MAC, the caller must allocate and populate the "
"dpaa2_mac structure with the associated net_device, a pointer to the MC "
"portal to be used and the actual fsl_mc_device structure of the DPMAC."
msgstr ""
