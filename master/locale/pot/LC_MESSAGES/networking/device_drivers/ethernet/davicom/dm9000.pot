# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../networking/device_drivers/ethernet/davicom/dm9000.rst:5
msgid "DM9000 Network driver"
msgstr ""

#: ../../../networking/device_drivers/ethernet/davicom/dm9000.rst:7
msgid "Copyright 2008 Simtec Electronics,"
msgstr ""

#: ../../../networking/device_drivers/ethernet/davicom/dm9000.rst:9
msgid "Ben Dooks <ben@simtec.co.uk> <ben-linux@fluff.org>"
msgstr ""

#: ../../../networking/device_drivers/ethernet/davicom/dm9000.rst:13
msgid "Introduction"
msgstr ""

#: ../../../networking/device_drivers/ethernet/davicom/dm9000.rst:15
msgid ""
"This file describes how to use the DM9000 platform-device based network "
"driver that is contained in the files drivers/net/dm9000.c and drivers/net/"
"dm9000.h."
msgstr ""

#: ../../../networking/device_drivers/ethernet/davicom/dm9000.rst:18
msgid ""
"The driver supports three DM9000 variants, the DM9000E which is the first "
"chip supported as well as the newer DM9000A and DM9000B devices. It is "
"currently maintained and tested by Ben Dooks, who should be CC: to any "
"patches for this driver."
msgstr ""

#: ../../../networking/device_drivers/ethernet/davicom/dm9000.rst:25
msgid "Defining the platform device"
msgstr ""

#: ../../../networking/device_drivers/ethernet/davicom/dm9000.rst:27
msgid ""
"The minimum set of resources attached to the platform device are as follows:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/davicom/dm9000.rst:29
msgid "The physical address of the address register"
msgstr ""

#: ../../../networking/device_drivers/ethernet/davicom/dm9000.rst:30
msgid "The physical address of the data register"
msgstr ""

#: ../../../networking/device_drivers/ethernet/davicom/dm9000.rst:31
msgid "The IRQ line the device's interrupt pin is connected to."
msgstr ""

#: ../../../networking/device_drivers/ethernet/davicom/dm9000.rst:33
msgid ""
"These resources should be specified in that order, as the ordering of the "
"two address regions is important (the driver expects these to be address and "
"then data)."
msgstr ""

#: ../../../networking/device_drivers/ethernet/davicom/dm9000.rst:37
msgid "An example from arch/arm/mach-s3c/mach-bast.c is::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/davicom/dm9000.rst:64
msgid ""
"Note the setting of the IRQ trigger flag in bast_dm9k_resource[2].flags, as "
"this will generate a warning if it is not present. The trigger from the "
"flags field will be passed to request_irq() when registering the IRQ handler "
"to ensure that the IRQ is setup correctly."
msgstr ""

#: ../../../networking/device_drivers/ethernet/davicom/dm9000.rst:69
msgid ""
"This shows a typical platform device, without the optional configuration "
"platform data supplied. The next example uses the same resources, but adds "
"the optional platform data to pass extra configuration data::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/davicom/dm9000.rst:87
msgid ""
"The platform data is defined in include/linux/dm9000.h and described below."
msgstr ""

#: ../../../networking/device_drivers/ethernet/davicom/dm9000.rst:91
msgid "Platform data"
msgstr ""

#: ../../../networking/device_drivers/ethernet/davicom/dm9000.rst:93
msgid ""
"Extra platform data for the DM9000 can describe the IO bus width to the "
"device, whether or not an external PHY is attached to the device and the "
"availability of an external configuration EEPROM."
msgstr ""

#: ../../../networking/device_drivers/ethernet/davicom/dm9000.rst:97
msgid "The flags for the platform data .flags field are as follows:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/davicom/dm9000.rst:99
msgid "DM9000_PLATF_8BITONLY"
msgstr ""

#: ../../../networking/device_drivers/ethernet/davicom/dm9000.rst:101
msgid "The IO should be done with 8bit operations."
msgstr ""

#: ../../../networking/device_drivers/ethernet/davicom/dm9000.rst:103
msgid "DM9000_PLATF_16BITONLY"
msgstr ""

#: ../../../networking/device_drivers/ethernet/davicom/dm9000.rst:105
msgid "The IO should be done with 16bit operations."
msgstr ""

#: ../../../networking/device_drivers/ethernet/davicom/dm9000.rst:107
msgid "DM9000_PLATF_32BITONLY"
msgstr ""

#: ../../../networking/device_drivers/ethernet/davicom/dm9000.rst:109
msgid "The IO should be done with 32bit operations."
msgstr ""

#: ../../../networking/device_drivers/ethernet/davicom/dm9000.rst:111
msgid "DM9000_PLATF_EXT_PHY"
msgstr ""

#: ../../../networking/device_drivers/ethernet/davicom/dm9000.rst:113
msgid "The chip is connected to an external PHY."
msgstr ""

#: ../../../networking/device_drivers/ethernet/davicom/dm9000.rst:115
msgid "DM9000_PLATF_NO_EEPROM"
msgstr ""

#: ../../../networking/device_drivers/ethernet/davicom/dm9000.rst:117
msgid ""
"This can be used to signify that the board does not have an EEPROM, or that "
"the EEPROM should be hidden from the user."
msgstr ""

#: ../../../networking/device_drivers/ethernet/davicom/dm9000.rst:120
msgid "DM9000_PLATF_SIMPLE_PHY"
msgstr ""

#: ../../../networking/device_drivers/ethernet/davicom/dm9000.rst:122
msgid ""
"Switch to using the simpler PHY polling method which does not try and read "
"the MII PHY state regularly. This is only available when using the internal "
"PHY. See the section on link state polling for more information."
msgstr ""

#: ../../../networking/device_drivers/ethernet/davicom/dm9000.rst:127
msgid ""
"The config symbol DM9000_FORCE_SIMPLE_PHY_POLL, Kconfig entry \"Force simple "
"NSR based PHY polling\" allows this flag to be forced on at build time."
msgstr ""

#: ../../../networking/device_drivers/ethernet/davicom/dm9000.rst:133
msgid "PHY Link state polling"
msgstr ""

#: ../../../networking/device_drivers/ethernet/davicom/dm9000.rst:135
msgid ""
"The driver keeps track of the link state and informs the network core about "
"link (carrier) availability. This is managed by several methods depending on "
"the version of the chip and on which PHY is being used."
msgstr ""

#: ../../../networking/device_drivers/ethernet/davicom/dm9000.rst:139
msgid ""
"For the internal PHY, the original (and currently default) method is to read "
"the MII state, either when the status changes if we have the necessary "
"interrupt support in the chip or every two seconds via a periodic timer."
msgstr ""

#: ../../../networking/device_drivers/ethernet/davicom/dm9000.rst:144
msgid ""
"To reduce the overhead for the internal PHY, there is now the option of "
"using the DM9000_FORCE_SIMPLE_PHY_POLL config, or DM9000_PLATF_SIMPLE_PHY "
"platform data option to read the summary information without the expensive "
"MII accesses. This method is faster, but does not print as much information."
msgstr ""

#: ../../../networking/device_drivers/ethernet/davicom/dm9000.rst:150
msgid ""
"When using an external PHY, the driver currently has to poll the MII link "
"status as there is no method for getting an interrupt on link change."
msgstr ""

#: ../../../networking/device_drivers/ethernet/davicom/dm9000.rst:155
msgid "DM9000A / DM9000B"
msgstr ""

#: ../../../networking/device_drivers/ethernet/davicom/dm9000.rst:157
msgid ""
"These chips are functionally similar to the DM9000E and are supported easily "
"by the same driver. The features are:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/davicom/dm9000.rst:160
msgid ""
"Interrupt on internal PHY state change. This means that the periodic polling "
"of the PHY status may be disabled on these devices when using the internal "
"PHY."
msgstr ""

#: ../../../networking/device_drivers/ethernet/davicom/dm9000.rst:164
msgid ""
"TCP/UDP checksum offloading, which the driver does not currently support."
msgstr ""

#: ../../../networking/device_drivers/ethernet/davicom/dm9000.rst:168
msgid "ethtool"
msgstr ""

#: ../../../networking/device_drivers/ethernet/davicom/dm9000.rst:170
msgid ""
"The driver supports the ethtool interface for access to the driver state "
"information, the PHY state and the EEPROM."
msgstr ""
