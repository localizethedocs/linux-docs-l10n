# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../networking/ieee802154.rst:3
msgid "IEEE 802.15.4 Developer's Guide"
msgstr ""

#: ../../../networking/ieee802154.rst:6
msgid "Introduction"
msgstr ""

#: ../../../networking/ieee802154.rst:7
msgid ""
"The IEEE 802.15.4 working group focuses on standardization of the bottom two "
"layers: Medium Access Control (MAC) and Physical access (PHY). And there are "
"mainly two options available for upper layers:"
msgstr ""

#: ../../../networking/ieee802154.rst:11
msgid "ZigBee - proprietary protocol from the ZigBee Alliance"
msgstr ""

#: ../../../networking/ieee802154.rst:12
msgid "6LoWPAN - IPv6 networking over low rate personal area networks"
msgstr ""

#: ../../../networking/ieee802154.rst:14
msgid ""
"The goal of the Linux-wpan is to provide a complete implementation of the "
"IEEE 802.15.4 and 6LoWPAN protocols. IEEE 802.15.4 is a stack of protocols "
"for organizing Low-Rate Wireless Personal Area Networks."
msgstr ""

#: ../../../networking/ieee802154.rst:18
msgid "The stack is composed of three main parts:"
msgstr ""

#: ../../../networking/ieee802154.rst:20
msgid ""
"IEEE 802.15.4 layer;  We have chosen to use plain Berkeley socket API, the "
"generic Linux networking stack to transfer IEEE 802.15.4 data messages and a "
"special protocol over netlink for configuration/management"
msgstr ""

#: ../../../networking/ieee802154.rst:23
msgid "MAC - provides access to shared channel and reliable data delivery"
msgstr ""

#: ../../../networking/ieee802154.rst:24
msgid "PHY - represents device drivers"
msgstr ""

#: ../../../networking/ieee802154.rst:27
msgid "Socket API"
msgstr ""

#: ../../../networking/ieee802154.rst:33
msgid ""
"The address family, socket addresses etc. are defined in the include/net/"
"af_ieee802154.h header or in the special header in the userspace package "
"(see either https://linux-wpan.org/wpan-tools.html or the git tree at "
"https://github.com/linux-wpan/wpan-tools)."
msgstr ""

#: ../../../networking/ieee802154.rst:39
msgid "6LoWPAN Linux implementation"
msgstr ""

#: ../../../networking/ieee802154.rst:41
msgid ""
"The IEEE 802.15.4 standard specifies an MTU of 127 bytes, yielding about 80 "
"octets of actual MAC payload once security is turned on, on a wireless link "
"with a link throughput of 250 kbps or less.  The 6LoWPAN adaptation format "
"[RFC4944] was specified to carry IPv6 datagrams over such constrained links, "
"taking into account limited bandwidth, memory, or energy resources that are "
"expected in applications such as wireless Sensor Networks.  [RFC4944] "
"defines a Mesh Addressing header to support sub-IP forwarding, a "
"Fragmentation header to support the IPv6 minimum MTU requirement [RFC2460], "
"and stateless header compression for IPv6 datagrams (LOWPAN_HC1 and "
"LOWPAN_HC2) to reduce the relatively large IPv6 and UDP headers down to (in "
"the best case) several bytes."
msgstr ""

#: ../../../networking/ieee802154.rst:52
msgid ""
"In September 2011 the standard update was published - [RFC6282]. It "
"deprecates HC1 and HC2 compression and defines IPHC encoding format which is "
"used in this Linux implementation."
msgstr ""

#: ../../../networking/ieee802154.rst:56
msgid ""
"All the code related to 6lowpan you may find in files: net/6lowpan/* and net/"
"ieee802154/6lowpan/*"
msgstr ""

#: ../../../networking/ieee802154.rst:59
msgid ""
"To setup a 6LoWPAN interface you need: 1. Add IEEE802.15.4 interface and set "
"channel and PAN ID; 2. Add 6lowpan interface by command like: # ip link add "
"link wpan0 name lowpan0 type lowpan 3. Bring up 'lowpan0' interface"
msgstr ""

#: ../../../networking/ieee802154.rst:66
msgid "Drivers"
msgstr ""

#: ../../../networking/ieee802154.rst:68
msgid ""
"Like with WiFi, there are several types of devices implementing IEEE "
"802.15.4. 1) 'HardMAC'. The MAC layer is implemented in the device itself, "
"the device exports a management (e.g. MLME) and data API. 2) 'SoftMAC' or "
"just radio. These types of devices are just radio transceivers possibly with "
"some kinds of acceleration like automatic CRC computation and comparison, "
"automagic ACK handling, address matching, etc."
msgstr ""

#: ../../../networking/ieee802154.rst:75
msgid ""
"Each type of device requires a different approach to be hooked into the "
"Linux kernel."
msgstr ""

#: ../../../networking/ieee802154.rst:79
msgid "HardMAC"
msgstr ""

#: ../../../networking/ieee802154.rst:81
msgid ""
"See the header include/net/ieee802154_netdev.h. You have to implement Linux "
"net_device, with .type = ARPHRD_IEEE802154. Data is exchanged with socket "
"family code via plain sk_buffs. On skb reception skb->cb must contain "
"additional info as described in the struct ieee802154_mac_cb. During packet "
"transmission the skb->cb is used to provide additional data to the device's "
"header_ops->create function. Be aware that this data can be overridden later "
"(when socket code submits skb to qdisc), so if you need something from that "
"cb later, you should store info in the skb->data on your own."
msgstr ""

#: ../../../networking/ieee802154.rst:90
msgid ""
"To hook the MLME interface you have to populate the ml_priv field of your "
"net_device with a pointer to struct ieee802154_mlme_ops instance. The fields "
"assoc_req, assoc_resp, disassoc_req, start_req, and scan_req are optional. "
"All other fields are required."
msgstr ""

#: ../../../networking/ieee802154.rst:96
msgid "SoftMAC"
msgstr ""

#: ../../../networking/ieee802154.rst:98
msgid ""
"The MAC is the middle layer in the IEEE 802.15.4 Linux stack. At the moment, "
"it provides an interface for driver registration and management of slave "
"interfaces."
msgstr ""

#: ../../../networking/ieee802154.rst:102
msgid ""
"NOTE: Currently the only monitor device type is supported - it's IEEE "
"802.15.4 stack interface for network sniffers (e.g. WireShark)."
msgstr ""

#: ../../../networking/ieee802154.rst:105
msgid "This layer is going to be extended soon."
msgstr ""

#: ../../../networking/ieee802154.rst:107
msgid ""
"See header include/net/mac802154.h and several drivers in drivers/net/"
"ieee802154/."
msgstr ""

#: ../../../networking/ieee802154.rst:111
msgid "Fake drivers"
msgstr ""

#: ../../../networking/ieee802154.rst:113
msgid ""
"In addition there is a driver available which simulates a real device with "
"SoftMAC (fakelb - IEEE 802.15.4 loopback driver) interface. This option "
"provides a possibility to test and debug the stack without usage of real "
"hardware."
msgstr ""

#: ../../../networking/ieee802154.rst:118
msgid "Device drivers API"
msgstr ""

#: ../../../networking/ieee802154.rst:120
msgid "The include/net/mac802154.h defines following functions:"
msgstr ""

#: ../../../networking/ieee802154.rst:124
msgid "Allocation of IEEE 802.15.4 compatible device."
msgstr ""

#: ../../../networking/ieee802154.rst:128
msgid "Freeing allocated device."
msgstr ""

#: ../../../networking/ieee802154.rst:132
msgid "Register PHY in the system."
msgstr ""

#: ../../../networking/ieee802154.rst:136
msgid "Freeing registered PHY."
msgstr ""

#: ../../../networking/ieee802154.rst:140
msgid ""
"Telling 802.15.4 module there is a new received frame in the skb with the RF "
"Link Quality Indicator (LQI) from the hardware device."
msgstr ""

#: ../../../networking/ieee802154.rst:145
msgid ""
"Telling 802.15.4 module the frame in the skb is or going to be transmitted "
"through the hardware device"
msgstr ""

#: ../../../networking/ieee802154.rst:148
msgid ""
"The device driver must implement the following callbacks in the IEEE "
"802.15.4 operations structure at least::"
msgstr ""

#: ../../../networking/ieee802154.rst:164
msgid ""
"Handler that 802.15.4 module calls for the hardware device initialization."
msgstr ""

#: ../../../networking/ieee802154.rst:168
msgid "Handler that 802.15.4 module calls for the hardware device cleanup."
msgstr ""

#: ../../../networking/ieee802154.rst:172
msgid ""
"Handler that 802.15.4 module calls for each frame in the skb going to be "
"transmitted through the hardware device."
msgstr ""

#: ../../../networking/ieee802154.rst:177
msgid ""
"Handler that 802.15.4 module calls for Energy Detection from the hardware "
"device."
msgstr ""

#: ../../../networking/ieee802154.rst:182
msgid "Set radio for listening on specific channel of the hardware device."
msgstr ""

#: ../../../networking/ieee802154.rst:184
msgid "Moreover IEEE 802.15.4 device operations structure should be filled."
msgstr ""
