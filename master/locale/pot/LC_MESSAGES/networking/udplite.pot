# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../networking/udplite.rst:5
msgid "The UDP-Lite protocol (RFC 3828)"
msgstr ""

#: ../../../networking/udplite.rst:8
msgid ""
"UDP-Lite is a Standards-Track IETF transport protocol whose characteristic "
"is a variable-length checksum. This has advantages for transport of "
"multimedia (video, VoIP) over wireless networks, as partly damaged packets "
"can still be fed into the codec instead of being discarded due to a failed "
"checksum test."
msgstr ""

#: ../../../networking/udplite.rst:13
msgid ""
"This file briefly describes the existing kernel support and the socket API. "
"For in-depth information, you can consult:"
msgstr ""

#: ../../../networking/udplite.rst:16
msgid ""
"The UDP-Lite Homepage: http://web.archive.org/web/%2E/http://www.erg.abdn.ac."
"uk/users/gerrit/udp-lite/"
msgstr ""

#: ../../../networking/udplite.rst:19
msgid "From here you can also download some example application source code."
msgstr ""

#: ../../../networking/udplite.rst:21
msgid ""
"The UDP-Lite HOWTO on http://web.archive.org/web/%2E/http://www.erg.abdn.ac."
"uk/users/gerrit/udp-lite/files/UDP-Lite-HOWTO.txt"
msgstr ""

#: ../../../networking/udplite.rst:24
msgid ""
"The Wireshark UDP-Lite WiKi (with capture files): https://wiki.wireshark.org/"
"Lightweight_User_Datagram_Protocol"
msgstr ""

#: ../../../networking/udplite.rst:27
msgid "The Protocol Spec, RFC 3828, http://www.ietf.org/rfc/rfc3828.txt"
msgstr ""

#: ../../../networking/udplite.rst:31
msgid "1. Applications"
msgstr ""

#: ../../../networking/udplite.rst:33
msgid ""
"Several applications have been ported successfully to UDP-Lite. Ethereal "
"(now called wireshark) has UDP-Litev4/v6 support by default."
msgstr ""

#: ../../../networking/udplite.rst:36
msgid ""
"Porting applications to UDP-Lite is straightforward: only socket level and "
"IPPROTO need to be changed; senders additionally set the checksum coverage "
"length (default = header length = 8). Details are in the next section."
msgstr ""

#: ../../../networking/udplite.rst:41
msgid "2. Programming API"
msgstr ""

#: ../../../networking/udplite.rst:43
msgid ""
"UDP-Lite provides a connectionless, unreliable datagram service and hence "
"uses the same socket type as UDP. In fact, porting from UDP to UDP-Lite is "
"very easy: simply add ``IPPROTO_UDPLITE`` as the last argument of the "
"socket(2) call so that the statement looks like::"
msgstr ""

#: ../../../networking/udplite.rst:50
msgid "or, respectively,"
msgstr ""

#: ../../../networking/udplite.rst:56
msgid ""
"With just the above change you are able to run UDP-Lite services or connect "
"to UDP-Lite servers. The kernel will assume that you are not interested in "
"using partial checksum coverage and so emulate UDP mode (full coverage)."
msgstr ""

#: ../../../networking/udplite.rst:60
msgid ""
"To make use of the partial checksum coverage facilities requires setting a "
"single socket option, which takes an integer specifying the coverage length:"
msgstr ""

#: ../../../networking/udplite.rst:63
msgid "Sender checksum coverage: UDPLITE_SEND_CSCOV"
msgstr ""

#: ../../../networking/udplite.rst:65
msgid "For example::"
msgstr ""

#: ../../../networking/udplite.rst:70
msgid ""
"sets the checksum coverage length to 20 bytes (12b data + 8b header). Of "
"each packet only the first 20 bytes (plus the pseudo-header) will be "
"checksummed. This is useful for RTP applications which have a 12-byte base "
"header."
msgstr ""

#: ../../../networking/udplite.rst:76
msgid "Receiver checksum coverage: UDPLITE_RECV_CSCOV"
msgstr ""

#: ../../../networking/udplite.rst:78
msgid ""
"This option is the receiver-side analogue. It is truly optional, i.e. not "
"required to enable traffic with partial checksum coverage. Its function is "
"that of a traffic filter: when enabled, it instructs the kernel to drop all "
"packets which have a coverage _less_ than this value. For example, if RTP "
"and UDP headers are to be protected, a receiver can enforce that only "
"packets with a minimum coverage of 20 are admitted::"
msgstr ""

#: ../../../networking/udplite.rst:88
msgid ""
"The calls to getsockopt(2) are analogous. Being an extension and not a "
"stand- alone protocol, all socket options known from UDP can be used in "
"exactly the same manner as before, e.g. UDP_CORK or UDP_ENCAP."
msgstr ""

#: ../../../networking/udplite.rst:92
msgid ""
"A detailed discussion of UDP-Lite checksum coverage options is in section IV."
msgstr ""

#: ../../../networking/udplite.rst:95
msgid "3. Header Files"
msgstr ""

#: ../../../networking/udplite.rst:97
msgid "The socket API requires support through header files in /usr/include:"
msgstr ""

#: ../../../networking/udplite.rst:99
msgid "/usr/include/netinet/in.h to define IPPROTO_UDPLITE"
msgstr ""

#: ../../../networking/udplite.rst:102
msgid ""
"/usr/include/netinet/udplite.h for UDP-Lite header fields and protocol "
"constants"
msgstr ""

#: ../../../networking/udplite.rst:105
msgid ""
"For testing purposes, the following can serve as a ``mini`` header file::"
msgstr ""

#: ../../../networking/udplite.rst:112
msgid ""
"Ready-made header files for various distros are in the UDP-Lite tarball."
msgstr ""

#: ../../../networking/udplite.rst:115
msgid "4. Kernel Behaviour with Regards to the Various Socket Options"
msgstr ""

#: ../../../networking/udplite.rst:118
msgid ""
"To enable debugging messages, the log level need to be set to 8, as most "
"messages use the KERN_DEBUG level (7)."
msgstr ""

#: ../../../networking/udplite.rst:121
msgid "Sender Socket Options"
msgstr ""

#: ../../../networking/udplite.rst:123
msgid ""
"If the sender specifies a value of 0 as coverage length, the module assumes "
"full coverage, transmits a packet with coverage length of 0 and according "
"checksum.  If the sender specifies a coverage < 8 and different from 0, the "
"kernel assumes 8 as default value.  Finally, if the specified coverage "
"length exceeds the packet length, the packet length is used instead as "
"coverage length."
msgstr ""

#: ../../../networking/udplite.rst:130
msgid "Receiver Socket Options"
msgstr ""

#: ../../../networking/udplite.rst:132
msgid ""
"The receiver specifies the minimum value of the coverage length it is "
"willing to accept.  A value of 0 here indicates that the receiver always "
"wants the whole of the packet covered. In this case, all partially covered "
"packets are dropped and an error is logged."
msgstr ""

#: ../../../networking/udplite.rst:137
msgid ""
"It is not possible to specify illegal values (<0 and <8); in these cases the "
"default of 8 is assumed."
msgstr ""

#: ../../../networking/udplite.rst:140
msgid ""
"All packets arriving with a coverage value less than the specified threshold "
"are discarded, these events are also logged."
msgstr ""

#: ../../../networking/udplite.rst:143
msgid "Disabling the Checksum Computation"
msgstr ""

#: ../../../networking/udplite.rst:145
msgid ""
"On both sender and receiver, checksumming will always be performed and "
"cannot be disabled using SO_NO_CHECK. Thus::"
msgstr ""

#: ../../../networking/udplite.rst:150
msgid "will always will be ignored, while the value of::"
msgstr ""

#: ../../../networking/udplite.rst:154
msgid ""
"is meaningless (as in TCP). Packets with a zero checksum field are illegal "
"(cf. RFC 3828, sec. 3.1) and will be silently discarded."
msgstr ""

#: ../../../networking/udplite.rst:157
msgid "Fragmentation"
msgstr ""

#: ../../../networking/udplite.rst:159
msgid ""
"The checksum computation respects both buffersize and MTU. The size of UDP-"
"Lite packets is determined by the size of the send buffer. The minimum size "
"of the send buffer is 2048 (defined as SOCK_MIN_SNDBUF in include/net/sock."
"h), the default value is configurable as net.core.wmem_default or via "
"setting the SO_SNDBUF socket(7) option. The maximum upper bound for the send "
"buffer is determined by net.core.wmem_max."
msgstr ""

#: ../../../networking/udplite.rst:167
msgid ""
"Given a payload size larger than the send buffer size, UDP-Lite will split "
"the payload into several individual packets, filling up the send buffer size "
"in each case."
msgstr ""

#: ../../../networking/udplite.rst:171
msgid ""
"The precise value also depends on the interface MTU. The interface MTU, in "
"turn, may trigger IP fragmentation. In this case, the generated UDP-Lite "
"packet is split into several IP packets, of which only the first one "
"contains the L4 header."
msgstr ""

#: ../../../networking/udplite.rst:176
msgid ""
"The send buffer size has implications on the checksum coverage length. "
"Consider the following example::"
msgstr ""

#: ../../../networking/udplite.rst:182
msgid "UDP-Lite will ship the 1536 bytes in two separate packets::"
msgstr ""

#: ../../../networking/udplite.rst:187
msgid ""
"The coverage packet covers the UDP-Lite header and 848 bytes of the payload "
"in the first packet, the second packet is fully covered. Note that for the "
"second packet, the coverage length exceeds the packet length. The kernel "
"always re-adjusts the coverage length to the packet length in such cases."
msgstr ""

#: ../../../networking/udplite.rst:193
msgid ""
"As an example of what happens when one UDP-Lite packet is split into several "
"tiny fragments, consider the following example::"
msgstr ""

#: ../../../networking/udplite.rst:206
msgid ""
"The UDP-Lite module generates one 1032 byte packet (1024 + 8 byte header). "
"According to the interface MTU, these are split into 4 IP packets (280 byte "
"IP payload + 20 byte IP header). The kernel module sums the contents of the "
"entire first two packets, plus 15 bytes of the last packet before releasing "
"the fragments to the IP module."
msgstr ""

#: ../../../networking/udplite.rst:212
msgid ""
"To see the analogous case for IPv6 fragmentation, consider a link MTU of "
"1280 bytes and a write buffer of 3356 bytes. If the checksum coverage is "
"less than 1232 bytes (MTU minus IPv6/fragment header lengths), only the "
"first fragment needs to be considered. When using larger checksum coverage "
"lengths, each eligible fragment needs to be checksummed. Suppose we have a "
"checksum coverage of 3062. The buffer of 3356 bytes will be split into the "
"following fragments::"
msgstr ""

#: ../../../networking/udplite.rst:224
msgid ""
"The first two fragments have to be checksummed in full, of the last fragment "
"only 598 (= 3062 - 2*1232) bytes are checksummed."
msgstr ""

#: ../../../networking/udplite.rst:227
msgid ""
"While it is important that such cases are dealt with correctly, they are "
"(annoyingly) rare: UDP-Lite is designed for optimising multimedia "
"performance over wireless (or generally noisy) links and thus smaller "
"coverage lengths are likely to be expected."
msgstr ""

#: ../../../networking/udplite.rst:233
msgid "5. UDP-Lite Runtime Statistics and their Meaning"
msgstr ""

#: ../../../networking/udplite.rst:235
msgid ""
"Exceptional and error conditions are logged to syslog at the KERN_DEBUG "
"level.  Live statistics about UDP-Lite are available in /proc/net/snmp and "
"can (with newer versions of netstat) be viewed using::"
msgstr ""

#: ../../../networking/udplite.rst:241
msgid ""
"This displays UDP-Lite statistics variables, whose meaning is as follows."
msgstr ""

#: ../../../networking/udplite.rst:244
msgid "InDatagrams"
msgstr ""

#: ../../../networking/udplite.rst:244
msgid "The total number of datagrams delivered to users."
msgstr ""

#: ../../../networking/udplite.rst:246
msgid "NoPorts"
msgstr ""

#: ../../../networking/udplite.rst:246
msgid ""
"Number of packets received to an unknown port. These cases are counted "
"separately (not as InErrors)."
msgstr ""

#: ../../../networking/udplite.rst:249
msgid "InErrors"
msgstr ""

#: ../../../networking/udplite.rst:249
msgid "Number of erroneous UDP-Lite packets. Errors include:"
msgstr ""

#: ../../../networking/udplite.rst:251
msgid "internal socket queue receive errors"
msgstr ""

#: ../../../networking/udplite.rst:252
msgid ""
"packet too short (less than 8 bytes or stated coverage length exceeds "
"received length)"
msgstr ""

#: ../../../networking/udplite.rst:254
msgid "xfrm4_policy_check() returned with error"
msgstr ""

#: ../../../networking/udplite.rst:255
msgid ""
"application has specified larger min. coverage length than that of incoming "
"packet"
msgstr ""

#: ../../../networking/udplite.rst:257
msgid "checksum coverage violated"
msgstr ""

#: ../../../networking/udplite.rst:258
msgid "bad checksum"
msgstr ""

#: ../../../networking/udplite.rst:260
msgid "OutDatagrams"
msgstr ""

#: ../../../networking/udplite.rst:260
msgid "Total number of sent datagrams."
msgstr ""

#: ../../../networking/udplite.rst:263
msgid "These statistics derive from the UDP MIB (RFC 2013)."
msgstr ""

#: ../../../networking/udplite.rst:266
msgid "6. IPtables"
msgstr ""

#: ../../../networking/udplite.rst:268
msgid ""
"There is packet match support for UDP-Lite as well as support for the LOG "
"target. If you copy and paste the following line into /etc/protocols::"
msgstr ""

#: ../../../networking/udplite.rst:273
msgid "then::"
msgstr ""

#: ../../../networking/udplite.rst:277
msgid ""
"will produce logging output to syslog. Dropping and rejecting packets also "
"works."
msgstr ""

#: ../../../networking/udplite.rst:280
msgid "7. Maintainer Address"
msgstr ""

#: ../../../networking/udplite.rst:282
msgid "The UDP-Lite patch was developed at"
msgstr ""

#: ../../../networking/udplite.rst:284
msgid ""
"University of Aberdeen Electronics Research Group Department of Engineering "
"Fraser Noble Building Aberdeen AB24 3UE; UK"
msgstr ""

#: ../../../networking/udplite.rst:290
msgid ""
"The current maintainer is Gerrit Renker, <gerrit@erg.abdn.ac.uk>. Initial "
"code was developed by William  Stanislaus, <william@erg.abdn.ac.uk>."
msgstr ""
