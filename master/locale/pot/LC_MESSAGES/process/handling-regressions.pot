# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../process/handling-regressions.rst:5
msgid "Handling regressions"
msgstr ""

#: ../../../process/handling-regressions.rst:7
msgid ""
"*We don't cause regressions* -- this document describes what this \"first "
"rule of Linux kernel development\" means in practice for developers. It "
"complements Documentation/admin-guide/reporting-regressions.rst, which "
"covers the topic from a user's point of view; if you never read that text, "
"go and at least skim over it before continuing here."
msgstr ""

#: ../../../process/handling-regressions.rst:14
msgid "The important bits (aka \"The TL;DR\")"
msgstr ""

#: ../../../process/handling-regressions.rst:16
msgid ""
"Ensure subscribers of the `regression mailing list <https://lore.kernel.org/"
"regressions/>`_ (regressions@lists.linux.dev) quickly become aware of any "
"new regression report:"
msgstr ""

#: ../../../process/handling-regressions.rst:20
msgid ""
"When receiving a mailed report that did not CC the list, bring it into the "
"loop by immediately sending at least a brief \"Reply-all\" with the list "
"CCed."
msgstr ""

#: ../../../process/handling-regressions.rst:24
msgid "Forward or bounce any reports submitted in bug trackers to the list."
msgstr ""

#: ../../../process/handling-regressions.rst:26
msgid ""
"Make the Linux kernel regression tracking bot \"regzbot\" track the issue "
"(this is optional, but recommended):"
msgstr ""

#: ../../../process/handling-regressions.rst:29
msgid ""
"For mailed reports, check if the reporter included a line like ``#regzbot "
"introduced: v5.13..v5.14-rc1``. If not, send a reply (with the regressions "
"list in CC) containing a paragraph like the following, which tells regzbot "
"when the issue started to happen::"
msgstr ""

#: ../../../process/handling-regressions.rst:36
msgid ""
"When forwarding reports from a bug tracker to the regressions list (see "
"above), include a paragraph like the following::"
msgstr ""

#: ../../../process/handling-regressions.rst:43
msgid ""
"When submitting fixes for regressions, add \"Closes:\" tags to the patch "
"description pointing to all places where the issue was reported, as mandated "
"by Documentation/process/submitting-patches.rst and :ref:`Documentation/"
"process/5.Posting.rst <development_posting>`. If you are only fixing part of "
"the issue that caused the regression, you may use \"Link:\" tags instead. "
"regzbot currently makes no distinction between the two."
msgstr ""

#: ../../../process/handling-regressions.rst:51
msgid ""
"Try to fix regressions quickly once the culprit has been identified; fixes "
"for most regressions should be merged within two weeks, but some need to be "
"resolved within two or three days."
msgstr ""

#: ../../../process/handling-regressions.rst:57
msgid "All the details on Linux kernel regressions relevant for developers"
msgstr ""

#: ../../../process/handling-regressions.rst:61
msgid "The important basics in more detail"
msgstr ""

#: ../../../process/handling-regressions.rst:65
msgid "What to do when receiving regression reports"
msgstr ""

#: ../../../process/handling-regressions.rst:67
msgid ""
"Ensure the Linux kernel's regression tracker and others subscribers of the "
"`regression mailing list <https://lore.kernel.org/regressions/>`_ "
"(regressions@lists.linux.dev) become aware of any newly reported regression:"
msgstr ""

#: ../../../process/handling-regressions.rst:71
msgid ""
"When you receive a report by mail that did not CC the list, immediately "
"bring it into the loop by sending at least a brief \"Reply-all\" with the "
"list CCed; try to ensure it gets CCed again in case you reply to a reply "
"that omitted the list."
msgstr ""

#: ../../../process/handling-regressions.rst:76
msgid ""
"If a report submitted in a bug tracker hits your Inbox, forward or bounce it "
"to the list. Consider checking the list archives beforehand, if the reporter "
"already forwarded the report as instructed by Documentation/admin-guide/"
"reporting-issues.rst."
msgstr ""

#: ../../../process/handling-regressions.rst:81
msgid ""
"When doing either, consider making the Linux kernel regression tracking bot "
"\"regzbot\" immediately start tracking the issue:"
msgstr ""

#: ../../../process/handling-regressions.rst:84
msgid ""
"For mailed reports, check if the reporter included a \"regzbot command\" "
"like ``#regzbot introduced: 1f2e3d4c5b6a``. If not, send a reply (with the "
"regressions list in CC) with a paragraph like the following:::"
msgstr ""

#: ../../../process/handling-regressions.rst:90
msgid ""
"This tells regzbot the version range in which the issue started to happen; "
"you can specify a range using commit-ids as well or state a single commit-id "
"in case the reporter bisected the culprit."
msgstr ""

#: ../../../process/handling-regressions.rst:94
msgid ""
"Note the caret (^) before the \"introduced\": it tells regzbot to treat the "
"parent mail (the one you reply to) as the initial report for the regression "
"you want to see tracked; that's important, as regzbot will later look out "
"for patches with \"Closes:\" tags pointing to the report in the archives on "
"lore.kernel.org."
msgstr ""

#: ../../../process/handling-regressions.rst:100
msgid ""
"When forwarding a regression reported to a bug tracker, include a paragraph "
"with these regzbot commands::"
msgstr ""

#: ../../../process/handling-regressions.rst:107
msgid ""
"Regzbot will then automatically associate patches with the report that "
"contain \"Closes:\" tags pointing to your mail or the mentioned ticket."
msgstr ""

#: ../../../process/handling-regressions.rst:111
msgid "What's important when fixing regressions"
msgstr ""

#: ../../../process/handling-regressions.rst:113
msgid ""
"You don't need to do anything special when submitting fixes for regression, "
"just remember to do what Documentation/process/submitting-patches.rst, :ref:"
"`Documentation/process/5.Posting.rst <development_posting>`, and "
"Documentation/process/stable-kernel-rules.rst already explain in more detail:"
msgstr ""

#: ../../../process/handling-regressions.rst:118
msgid ""
"Point to all places where the issue was reported using \"Closes:\" tags::"
msgstr ""

#: ../../../process/handling-regressions.rst:123
msgid ""
"If you are only fixing part of the issue, you may use \"Link:\" instead as "
"described in the first document mentioned above. regzbot currently treats "
"both of these equivalently and considers the linked reports as resolved."
msgstr ""

#: ../../../process/handling-regressions.rst:127
msgid "Add a \"Fixes:\" tag to specify the commit causing the regression."
msgstr ""

#: ../../../process/handling-regressions.rst:129
msgid ""
"If the culprit was merged in an earlier development cycle, explicitly mark "
"the fix for backporting using the ``Cc: stable@vger.kernel.org`` tag."
msgstr ""

#: ../../../process/handling-regressions.rst:132
msgid ""
"All this is expected from you and important when it comes to regression, as "
"these tags are of great value for everyone (you included) that might be "
"looking into the issue weeks, months, or years later. These tags are also "
"crucial for tools and scripts used by other kernel developers or Linux "
"distributions; one of these tools is regzbot, which heavily relies on the "
"\"Closes:\" tags to associate reports for regression with changes resolving "
"them."
msgstr ""

#: ../../../process/handling-regressions.rst:140
msgid "Expectations and best practices for fixing regressions"
msgstr ""

#: ../../../process/handling-regressions.rst:142
msgid ""
"As a Linux kernel developer, you are expected to give your best to prevent "
"situations where a regression caused by a recent change of yours leaves "
"users only these options:"
msgstr ""

#: ../../../process/handling-regressions.rst:146
msgid "Run a kernel with a regression that impacts usage."
msgstr ""

#: ../../../process/handling-regressions.rst:148
msgid "Switch to an older or newer kernel series."
msgstr ""

#: ../../../process/handling-regressions.rst:150
msgid ""
"Continue running an outdated and thus potentially insecure kernel for more "
"than three weeks after the regression's culprit was identified. Ideally it "
"should be less than two. And it ought to be just a few days, if the issue is "
"severe or affects many users -- either in general or in prevalent "
"environments."
msgstr ""

#: ../../../process/handling-regressions.rst:156
msgid ""
"How to realize that in practice depends on various factors. Use the "
"following rules of thumb as a guide."
msgstr ""

#: ../../../process/handling-regressions.rst:159
msgid "In general:"
msgstr ""

#: ../../../process/handling-regressions.rst:161
msgid ""
"Prioritize work on regressions over all other Linux kernel work, unless the "
"latter concerns a severe issue (e.g. acute security vulnerability, data "
"loss, bricked hardware, ...)."
msgstr ""

#: ../../../process/handling-regressions.rst:165
msgid ""
"Expedite fixing mainline regressions that recently made it into a proper "
"mainline, stable, or longterm release (either directly or via backport)."
msgstr ""

#: ../../../process/handling-regressions.rst:168
msgid ""
"Do not consider regressions from the current cycle as something that can "
"wait till the end of the cycle, as the issue might discourage or prevent "
"users and CI systems from testing mainline now or generally."
msgstr ""

#: ../../../process/handling-regressions.rst:172
msgid ""
"Work with the required care to avoid additional or bigger damage, even if "
"resolving an issue then might take longer than outlined below."
msgstr ""

#: ../../../process/handling-regressions.rst:175
msgid "On timing once the culprit of a regression is known:"
msgstr ""

#: ../../../process/handling-regressions.rst:177
msgid ""
"Aim to mainline a fix within two or three days, if the issue is severe or "
"bothering many users -- either in general or in prevalent conditions like a "
"particular hardware environment, distribution, or stable/longterm series."
msgstr ""

#: ../../../process/handling-regressions.rst:181
msgid ""
"Aim to mainline a fix by Sunday after the next, if the culprit made it into "
"a recent mainline, stable, or longterm release (either directly or via "
"backport); if the culprit became known early during a week and is simple to "
"resolve, try to mainline the fix within the same week."
msgstr ""

#: ../../../process/handling-regressions.rst:186
msgid ""
"For other regressions, aim to mainline fixes before the hindmost Sunday "
"within the next three weeks. One or two Sundays later are acceptable, if the "
"regression is something people can live with easily for a while -- like a "
"mild performance regression."
msgstr ""

#: ../../../process/handling-regressions.rst:191
msgid ""
"It's strongly discouraged to delay mainlining regression fixes till the next "
"merge window, except when the fix is extraordinarily risky or when the "
"culprit was mainlined more than a year ago."
msgstr ""

#: ../../../process/handling-regressions.rst:195
msgid "On procedure:"
msgstr ""

#: ../../../process/handling-regressions.rst:197
msgid ""
"Always consider reverting the culprit, as it's often the quickest and least "
"dangerous way to fix a regression. Don't worry about mainlining a fixed "
"variant later: that should be straight-forward, as most of the code went "
"through review once already."
msgstr ""

#: ../../../process/handling-regressions.rst:202
msgid ""
"Try to resolve any regressions introduced in mainline during the past twelve "
"months before the current development cycle ends: Linus wants such "
"regressions to be handled like those from the current cycle, unless fixing "
"bears unusual risks."
msgstr ""

#: ../../../process/handling-regressions.rst:207
msgid ""
"Consider CCing Linus on discussions or patch review, if a regression seems "
"tangly. Do the same in precarious or urgent cases -- especially if the "
"subsystem maintainer might be unavailable. Also CC the stable team, when you "
"know such a regression made it into a mainline, stable, or longterm release."
msgstr ""

#: ../../../process/handling-regressions.rst:212
msgid ""
"For urgent regressions, consider asking Linus to pick up the fix straight "
"from the mailing list: he is totally fine with that for uncontroversial "
"fixes. Ideally though such requests should happen in accordance with the "
"subsystem maintainers or come directly from them."
msgstr ""

#: ../../../process/handling-regressions.rst:217
msgid ""
"In case you are unsure if a fix is worth the risk applying just days before "
"a new mainline release, send Linus a mail with the usual lists and people in "
"CC; in it, summarize the situation while asking him to consider picking up "
"the fix straight from the list. He then himself can make the call and when "
"needed even postpone the release. Such requests again should ideally happen "
"in accordance with the subsystem maintainers or come directly from them."
msgstr ""

#: ../../../process/handling-regressions.rst:224
msgid "Regarding stable and longterm kernels:"
msgstr ""

#: ../../../process/handling-regressions.rst:226
msgid ""
"You are free to leave regressions to the stable team, if they at no point in "
"time occurred with mainline or were fixed there already."
msgstr ""

#: ../../../process/handling-regressions.rst:229
msgid ""
"If a regression made it into a proper mainline release during the past "
"twelve months, ensure to tag the fix with \"Cc: stable@vger.kernel.org\", as "
"a \"Fixes:\" tag alone does not guarantee a backport. Please add the same "
"tag, in case you know the culprit was backported to stable or longterm "
"kernels."
msgstr ""

#: ../../../process/handling-regressions.rst:234
msgid ""
"When receiving reports about regressions in recent stable or longterm kernel "
"series, please evaluate at least briefly if the issue might happen in "
"current mainline as well -- and if that seems likely, take hold of the "
"report. If in doubt, ask the reporter to check mainline."
msgstr ""

#: ../../../process/handling-regressions.rst:239
msgid ""
"Whenever you want to swiftly resolve a regression that recently also made it "
"into a proper mainline, stable, or longterm release, fix it quickly in "
"mainline; when appropriate thus involve Linus to fast-track the fix (see "
"above). That's because the stable team normally does neither revert nor fix "
"any changes that cause the same problems in mainline."
msgstr ""

#: ../../../process/handling-regressions.rst:245
msgid ""
"In case of urgent regression fixes you might want to ensure prompt "
"backporting by dropping the stable team a note once the fix was mainlined; "
"this is especially advisable during merge windows and shortly thereafter, as "
"the fix otherwise might land at the end of a huge patch queue."
msgstr ""

#: ../../../process/handling-regressions.rst:250
msgid "On patch flow:"
msgstr ""

#: ../../../process/handling-regressions.rst:252
msgid ""
"Developers, when trying to reach the time periods mentioned above, remember "
"to account for the time it takes to get fixes tested, reviewed, and merged "
"by Linus, ideally with them being in linux-next at least briefly. Hence, if "
"a fix is urgent, make it obvious to ensure others handle it appropriately."
msgstr ""

#: ../../../process/handling-regressions.rst:257
msgid ""
"Reviewers, you are kindly asked to assist developers in reaching the time "
"periods mentioned above by reviewing regression fixes in a timely manner."
msgstr ""

#: ../../../process/handling-regressions.rst:260
msgid ""
"Subsystem maintainers, you likewise are encouraged to expedite the handling "
"of regression fixes. Thus evaluate if skipping linux-next is an option for "
"the particular fix. Also consider sending git pull requests more often than "
"usual when needed. And try to avoid holding onto regression fixes over "
"weekends -- especially when the fix is marked for backporting."
msgstr ""

#: ../../../process/handling-regressions.rst:268
msgid "More aspects regarding regressions developers should be aware of"
msgstr ""

#: ../../../process/handling-regressions.rst:272
msgid "How to deal with changes where a risk of regression is known"
msgstr ""

#: ../../../process/handling-regressions.rst:274
msgid ""
"Evaluate how big the risk of regressions is, for example by performing a "
"code search in Linux distributions and Git forges. Also consider asking "
"other developers or projects likely to be affected to evaluate or even test "
"the proposed change; if problems surface, maybe some solution acceptable for "
"all can be found."
msgstr ""

#: ../../../process/handling-regressions.rst:280
msgid ""
"If the risk of regressions in the end seems to be relatively small, go ahead "
"with the change, but let all involved parties know about the risk. Hence, "
"make sure your patch description makes this aspect obvious. Once the change "
"is merged, tell the Linux kernel's regression tracker and the regressions "
"mailing list about the risk, so everyone has the change on the radar in case "
"reports trickle in. Depending on the risk, you also might want to ask the "
"subsystem maintainer to mention the issue in his mainline pull request."
msgstr ""

#: ../../../process/handling-regressions.rst:289
msgid "What else is there to known about regressions?"
msgstr ""

#: ../../../process/handling-regressions.rst:291
msgid ""
"Check out Documentation/admin-guide/reporting-regressions.rst, it covers a "
"lot of other aspects you want might want to be aware of:"
msgstr ""

#: ../../../process/handling-regressions.rst:294
msgid "the purpose of the \"no regressions\" rule"
msgstr ""

#: ../../../process/handling-regressions.rst:296
msgid "what issues actually qualify as regression"
msgstr ""

#: ../../../process/handling-regressions.rst:298
msgid "who's in charge for finding the root cause of a regression"
msgstr ""

#: ../../../process/handling-regressions.rst:300
msgid ""
"how to handle tricky situations, e.g. when a regression is caused by a "
"security fix or when fixing a regression might cause another one"
msgstr ""

#: ../../../process/handling-regressions.rst:304
msgid "Whom to ask for advice when it comes to regressions"
msgstr ""

#: ../../../process/handling-regressions.rst:306
msgid ""
"Send a mail to the regressions mailing list (regressions@lists.linux.dev) "
"while CCing the Linux kernel's regression tracker (regressions@leemhuis."
"info); if the issue might better be dealt with in private, feel free to omit "
"the list."
msgstr ""

#: ../../../process/handling-regressions.rst:312
msgid "More about regression tracking and regzbot"
msgstr ""

#: ../../../process/handling-regressions.rst:316
msgid "Why the Linux kernel has a regression tracker, and why is regzbot used?"
msgstr ""

#: ../../../process/handling-regressions.rst:318
msgid ""
"Rules like \"no regressions\" need someone to ensure they are followed, "
"otherwise they are broken either accidentally or on purpose. History has "
"shown this to be true for the Linux kernel as well. That's why Thorsten "
"Leemhuis volunteered to keep an eye on things as the Linux kernel's "
"regression tracker, who's occasionally helped by other people. Neither of "
"them are paid to do this, that's why regression tracking is done on a best "
"effort basis."
msgstr ""

#: ../../../process/handling-regressions.rst:325
msgid ""
"Earlier attempts to manually track regressions have shown it's an exhausting "
"and frustrating work, which is why they were abandoned after a while. To "
"prevent this from happening again, Thorsten developed regzbot to facilitate "
"the work, with the long term goal to automate regression tracking as much as "
"possible for everyone involved."
msgstr ""

#: ../../../process/handling-regressions.rst:332
msgid "How does regression tracking work with regzbot?"
msgstr ""

#: ../../../process/handling-regressions.rst:334
msgid ""
"The bot watches for replies to reports of tracked regressions. Additionally, "
"it's looking out for posted or committed patches referencing such reports "
"with \"Closes:\" tags; replies to such patch postings are tracked as well. "
"Combined this data provides good insights into the current state of the "
"fixing process."
msgstr ""

#: ../../../process/handling-regressions.rst:340
msgid ""
"Regzbot tries to do its job with as little overhead as possible for both "
"reporters and developers. In fact, only reporters are burdened with an extra "
"duty: they need to tell regzbot about the regression report using the "
"``#regzbot introduced`` command outlined above; if they don't do that, "
"someone else can take care of that using ``#regzbot ^introduced``."
msgstr ""

#: ../../../process/handling-regressions.rst:346
msgid ""
"For developers there normally is no extra work involved, they just need to "
"make sure to do something that was expected long before regzbot came to "
"light: add links to the patch description pointing to all reports about the "
"issue fixed."
msgstr ""

#: ../../../process/handling-regressions.rst:351
msgid "Do I have to use regzbot?"
msgstr ""

#: ../../../process/handling-regressions.rst:353
msgid ""
"It's in the interest of everyone if you do, as kernel maintainers like Linus "
"Torvalds partly rely on regzbot's tracking in their work -- for example when "
"deciding to release a new version or extend the development phase. For this "
"they need to be aware of all unfixed regression; to do that, Linus is known "
"to look into the weekly reports sent by regzbot."
msgstr ""

#: ../../../process/handling-regressions.rst:360
msgid "Do I have to tell regzbot about every regression I stumble upon?"
msgstr ""

#: ../../../process/handling-regressions.rst:362
msgid ""
"Ideally yes: we are all humans and easily forget problems when something "
"more important unexpectedly comes up -- for example a bigger problem in the "
"Linux kernel or something in real life that's keeping us away from keyboards "
"for a while. Hence, it's best to tell regzbot about every regression, except "
"when you immediately write a fix and commit it to a tree regularly merged to "
"the affected kernel series."
msgstr ""

#: ../../../process/handling-regressions.rst:370
msgid "How to see which regressions regzbot tracks currently?"
msgstr ""

#: ../../../process/handling-regressions.rst:372
msgid ""
"Check `regzbot's web-interface <https://linux-regtracking.leemhuis.info/"
"regzbot/>`_ for the latest info; alternatively, `search for the latest "
"regression report <https://lore.kernel.org/lkml/?"
"q=%22Linux+regressions+report%22+f%3Aregzbot>`_, which regzbot normally "
"sends out once a week on Sunday evening (UTC), which is a few hours before "
"Linus usually publishes new (pre-)releases."
msgstr ""

#: ../../../process/handling-regressions.rst:379
msgid "What places is regzbot monitoring?"
msgstr ""

#: ../../../process/handling-regressions.rst:381
msgid ""
"Regzbot is watching the most important Linux mailing lists as well as the "
"git repositories of linux-next, mainline, and stable/longterm."
msgstr ""

#: ../../../process/handling-regressions.rst:385
msgid "What kind of issues are supposed to be tracked by regzbot?"
msgstr ""

#: ../../../process/handling-regressions.rst:387
msgid ""
"The bot is meant to track regressions, hence please don't involve regzbot "
"for regular issues. But it's okay for the Linux kernel's regression tracker "
"if you use regzbot to track severe issues, like reports about hangs, "
"corrupted data, or internal errors (Panic, Oops, BUG(), warning, ...)."
msgstr ""

#: ../../../process/handling-regressions.rst:393
msgid "Can I add regressions found by CI systems to regzbot's tracking?"
msgstr ""

#: ../../../process/handling-regressions.rst:395
msgid ""
"Feel free to do so, if the particular regression likely has impact on "
"practical use cases and thus might be noticed by users; hence, please don't "
"involve regzbot for theoretical regressions unlikely to show themselves in "
"real world usage."
msgstr ""

#: ../../../process/handling-regressions.rst:401
msgid "How to interact with regzbot?"
msgstr ""

#: ../../../process/handling-regressions.rst:403
msgid ""
"By using a 'regzbot command' in a direct or indirect reply to the mail with "
"the regression report. These commands need to be in their own paragraph "
"(IOW: they need to be separated from the rest of the mail using blank lines)."
msgstr ""

#: ../../../process/handling-regressions.rst:407
msgid ""
"One such command is ``#regzbot introduced: <version or commit>``, which "
"makes regzbot consider your mail as a regressions report added to the "
"tracking, as already described above; ``#regzbot ^introduced: <version or "
"commit>`` is another such command, which makes regzbot consider the parent "
"mail as a report for a regression which it starts to track."
msgstr ""

#: ../../../process/handling-regressions.rst:413
msgid ""
"Once one of those two commands has been utilized, other regzbot commands can "
"be used in direct or indirect replies to the report. You can write them "
"below one of the `introduced` commands or in replies to the mail that used "
"one of them or itself is a reply to that mail:"
msgstr ""

#: ../../../process/handling-regressions.rst:418
msgid "Set or update the title::"
msgstr ""

#: ../../../process/handling-regressions.rst:422
msgid ""
"Monitor a discussion or bugzilla.kernel.org ticket where additions aspects "
"of the issue or a fix are discussed -- for example the posting of a patch "
"fixing the regression::"
msgstr ""

#: ../../../process/handling-regressions.rst:428
msgid ""
"Monitoring only works for lore.kernel.org and bugzilla.kernel.org; regzbot "
"will consider all messages in that thread or ticket as related to the fixing "
"process."
msgstr ""

#: ../../../process/handling-regressions.rst:432
msgid ""
"Point to a place with further details of interest, like a mailing list post "
"or a ticket in a bug tracker that are slightly related, but about a "
"different topic::"
msgstr ""

#: ../../../process/handling-regressions.rst:438
msgid ""
"Mark a regression as fixed by a commit that is heading upstream or already "
"landed::"
msgstr ""

#: ../../../process/handling-regressions.rst:443
msgid ""
"Mark a regression as a duplicate of another one already tracked by regzbot::"
msgstr ""

#: ../../../process/handling-regressions.rst:447
msgid "Mark a regression as invalid::"
msgstr ""

#: ../../../process/handling-regressions.rst:452
msgid "Is there more to tell about regzbot and its commands?"
msgstr ""

#: ../../../process/handling-regressions.rst:454
msgid ""
"More detailed and up-to-date information about the Linux kernel's regression "
"tracking bot can be found on its `project page <https://gitlab.com/knurd42/"
"regzbot>`_, which among others contains a `getting started guide <https://"
"gitlab.com/knurd42/regzbot/-/blob/main/docs/getting_started.md>`_ and "
"`reference documentation <https://gitlab.com/knurd42/regzbot/-/blob/main/"
"docs/reference.md>`_ which both cover more details than the above section."
msgstr ""

#: ../../../process/handling-regressions.rst:462
msgid "Quotes from Linus about regression"
msgstr ""

#: ../../../process/handling-regressions.rst:464
msgid ""
"Find below a few real life examples of how Linus Torvalds expects "
"regressions to be handled:"
msgstr ""

#: ../../../process/handling-regressions.rst:467
msgid ""
"From `2017-10-26 (1/2) <https://lore.kernel.org/lkml/"
"CA+55aFwiiQYJ+YoLKCXjN_beDVfu38mg=Ggg5LFOcqHE8Qi7Zw@mail.gmail.com/>`_::"
msgstr ""

#: ../../../process/handling-regressions.rst:490
msgid ""
"From `2017-10-26 (2/2) <https://lore.kernel.org/lkml/"
"CA+55aFxW7NMAMvYhkvz1UPbUTUJewRt6Yb51QAx5RtrWOwjebg@mail.gmail.com/>`_::"
msgstr ""

#: ../../../process/handling-regressions.rst:555
msgid ""
"From `2020-05-21 <https://lore.kernel.org/all/CAHk-"
"=wiVi7mSrsMP=fLXQrXK_UimybW=ziLOwSzFTtoXUacWVQ@mail.gmail.com/>`_::"
msgstr ""

#: ../../../process/handling-regressions.rst:595
msgid ""
"From `2017-11-05 <https://lore.kernel.org/all/CA+55aFzUvbGjD8nQ-"
"+3oiMBx14c_6zOj2n7KLN3UsJ-qsd4Dcw@mail.gmail.com/>`_::"
msgstr ""

#: ../../../process/handling-regressions.rst:612
msgid ""
"From `2018-08-03 <https://lore.kernel.org/all/"
"CA+55aFwWZX=CXmWDTkDGb36kf12XmTehmQjbiMPCqCRG2hi9kw@mail.gmail.com/>`_::"
msgstr ""

#: ../../../process/handling-regressions.rst:684
msgid ""
"From `2021-06-05 <https://lore.kernel.org/all/CAHk-"
"=wiUVqHN76YUwhkjZzwTdjMMJf_zN4+u7vEJjmEGh3recw@mail.gmail.com/>`_::"
msgstr ""

#: ../../../process/handling-regressions.rst:694
msgid ""
"From `2011-05-06 (1/3) <https://lore.kernel.org/all/BANLkTim9YvResB+PwRp7QTK-"
"a5VNg2PvmQ@mail.gmail.com/>`_::"
msgstr ""

#: ../../../process/handling-regressions.rst:717
msgid ""
"From `2011-05-06 (2/3) <https://lore.kernel.org/all/"
"BANLkTi=KVXjKR82sqsz4gwjr+E0vtqCmvA@mail.gmail.com/>`_::"
msgstr ""

#: ../../../process/handling-regressions.rst:723
msgid ""
"From `2011-05-06 (3/3) <https://lore.kernel.org/all/"
"BANLkTinazaXRdGovYL7rRVp+j6HbJ7pzhg@mail.gmail.com/>`_::"
msgstr ""

#: ../../../process/handling-regressions.rst:728
msgid ""
"From `2012-07-06 <https://lore.kernel.org/all/"
"CA+55aFwnLJ+0sjx92EGREGTWOx84wwKaraSzpTNJwPVV8edw8g@mail.gmail.com/>`_::"
msgstr ""

#: ../../../process/handling-regressions.rst:736
msgid ""
"From `2019-09-15 <https://lore.kernel.org/lkml/CAHk-"
"=wiP4K8DRJWsCo=20hn_6054xBamGKF2kPgUzpB5aMaofA@mail.gmail.com/>`_::"
msgstr ""
