# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../filesystems/squashfs.rst:5
msgid "Squashfs 4.0 Filesystem"
msgstr ""

#: ../../../filesystems/squashfs.rst:7
msgid "Squashfs is a compressed read-only filesystem for Linux."
msgstr ""

#: ../../../filesystems/squashfs.rst:9
msgid ""
"It uses zlib, lz4, lzo, xz or zstd compression to compress files, inodes and "
"directories.  Inodes in the system are very small and all blocks are packed "
"to minimise data overhead. Block sizes greater than 4K are supported up to a "
"maximum of 1Mbytes (default block size 128K)."
msgstr ""

#: ../../../filesystems/squashfs.rst:14
msgid ""
"Squashfs is intended for general read-only filesystem use, for archival use "
"(i.e. in cases where a .tar.gz file may be used), and in constrained block "
"device/memory systems (e.g. embedded systems) where low overhead is needed."
msgstr ""

#: ../../../filesystems/squashfs.rst:19
msgid ""
"Mailing list (kernel code): linux-fsdevel@vger.kernel.org Web site: github."
"com/plougher/squashfs-tools"
msgstr ""

#: ../../../filesystems/squashfs.rst:23
msgid "1. Filesystem Features"
msgstr ""

#: ../../../filesystems/squashfs.rst:25
msgid "Squashfs filesystem features versus Cramfs:"
msgstr ""

#: ../../../filesystems/squashfs.rst:30
msgid "Max filesystem size"
msgstr ""

#: ../../../filesystems/squashfs.rst:30
msgid "2^64"
msgstr ""

#: ../../../filesystems/squashfs.rst:30
msgid "256 MiB"
msgstr ""

#: ../../../filesystems/squashfs.rst:31
msgid "Max file size"
msgstr ""

#: ../../../filesystems/squashfs.rst:31
msgid "~ 2 TiB"
msgstr ""

#: ../../../filesystems/squashfs.rst:31
msgid "16 MiB"
msgstr ""

#: ../../../filesystems/squashfs.rst:32
msgid "Max files"
msgstr ""

#: ../../../filesystems/squashfs.rst:32 ../../../filesystems/squashfs.rst:33
#: ../../../filesystems/squashfs.rst:34
msgid "unlimited"
msgstr ""

#: ../../../filesystems/squashfs.rst:33
msgid "Max directories"
msgstr ""

#: ../../../filesystems/squashfs.rst:34
msgid "Max entries per directory"
msgstr ""

#: ../../../filesystems/squashfs.rst:35
msgid "Max block size"
msgstr ""

#: ../../../filesystems/squashfs.rst:35
msgid "1 MiB"
msgstr ""

#: ../../../filesystems/squashfs.rst:35
msgid "4 KiB"
msgstr ""

#: ../../../filesystems/squashfs.rst:36
msgid "Metadata compression"
msgstr ""

#: ../../../filesystems/squashfs.rst:36 ../../../filesystems/squashfs.rst:37
#: ../../../filesystems/squashfs.rst:38 ../../../filesystems/squashfs.rst:39
#: ../../../filesystems/squashfs.rst:40 ../../../filesystems/squashfs.rst:41
#: ../../../filesystems/squashfs.rst:42 ../../../filesystems/squashfs.rst:43
#: ../../../filesystems/squashfs.rst:44 ../../../filesystems/squashfs.rst:45
#: ../../../filesystems/squashfs.rst:46
msgid "yes"
msgstr ""

#: ../../../filesystems/squashfs.rst:36 ../../../filesystems/squashfs.rst:37
#: ../../../filesystems/squashfs.rst:38 ../../../filesystems/squashfs.rst:39
#: ../../../filesystems/squashfs.rst:40 ../../../filesystems/squashfs.rst:41
#: ../../../filesystems/squashfs.rst:42 ../../../filesystems/squashfs.rst:43
#: ../../../filesystems/squashfs.rst:44 ../../../filesystems/squashfs.rst:45
#: ../../../filesystems/squashfs.rst:46 ../../../filesystems/squashfs.rst:47
msgid "no"
msgstr ""

#: ../../../filesystems/squashfs.rst:37
msgid "Directory indexes"
msgstr ""

#: ../../../filesystems/squashfs.rst:38
msgid "Sparse file support"
msgstr ""

#: ../../../filesystems/squashfs.rst:39
msgid "Tail-end packing (fragments)"
msgstr ""

#: ../../../filesystems/squashfs.rst:40
msgid "Exportable (NFS etc.)"
msgstr ""

#: ../../../filesystems/squashfs.rst:41
msgid "Hard link support"
msgstr ""

#: ../../../filesystems/squashfs.rst:42
msgid "\".\" and \"..\" in readdir"
msgstr ""

#: ../../../filesystems/squashfs.rst:43
msgid "Real inode numbers"
msgstr ""

#: ../../../filesystems/squashfs.rst:44
msgid "32-bit uids/gids"
msgstr ""

#: ../../../filesystems/squashfs.rst:45
msgid "File creation time"
msgstr ""

#: ../../../filesystems/squashfs.rst:46
msgid "Xattr support"
msgstr ""

#: ../../../filesystems/squashfs.rst:47
msgid "ACL support"
msgstr ""

#: ../../../filesystems/squashfs.rst:50
msgid ""
"Squashfs compresses data, inodes and directories.  In addition, inode and "
"directory data are highly compacted, and packed on byte boundaries.  Each "
"compressed inode is on average 8 bytes in length (the exact length varies on "
"file type, i.e. regular file, directory, symbolic link, and block/char "
"device inodes have different sizes)."
msgstr ""

#: ../../../filesystems/squashfs.rst:57
msgid "2. Using Squashfs"
msgstr ""

#: ../../../filesystems/squashfs.rst:59
msgid ""
"As squashfs is a read-only filesystem, the mksquashfs program must be used "
"to create populated squashfs filesystems.  This and other squashfs utilities "
"are very likely packaged by your linux distribution (called squashfs-tools). "
"The source code can be obtained from github.com/plougher/squashfs-tools. "
"Usage instructions can also be obtained from this site."
msgstr ""

#: ../../../filesystems/squashfs.rst:66
msgid "2.1 Mount options"
msgstr ""

#: ../../../filesystems/squashfs.rst:68
msgid "errors=%s"
msgstr ""

#: ../../../filesystems/squashfs.rst:68
msgid "Specify whether squashfs errors trigger a kernel panic or not"
msgstr ""

#: ../../../filesystems/squashfs.rst:72
msgid "continue"
msgstr ""

#: ../../../filesystems/squashfs.rst:72
msgid "errors don't trigger a panic (default)"
msgstr ""

#: ../../../filesystems/squashfs.rst:73
msgid "panic"
msgstr ""

#: ../../../filesystems/squashfs.rst:73
msgid ""
"trigger a panic when errors are encountered, similar to several other "
"filesystems (e.g. btrfs, ext4, f2fs, GFS2, jfs, ntfs, ubifs)"
msgstr ""

#: ../../../filesystems/squashfs.rst:77
msgid ""
"This allows a kernel dump to be saved, useful for analyzing and debugging "
"the corruption."
msgstr ""

#: ../../../filesystems/squashfs.rst:81
msgid "threads=%s"
msgstr ""

#: ../../../filesystems/squashfs.rst:81
msgid "Select the decompression mode or the number of threads"
msgstr ""

#: ../../../filesystems/squashfs.rst:83
msgid "If SQUASHFS_CHOICE_DECOMP_BY_MOUNT is set:"
msgstr ""

#: ../../../filesystems/squashfs.rst:86
msgid "single"
msgstr ""

#: ../../../filesystems/squashfs.rst:86
msgid "use single-threaded decompression (default)"
msgstr ""

#: ../../../filesystems/squashfs.rst:88
msgid ""
"Only one block (data or metadata) can be decompressed at any one time. This "
"limits CPU and memory usage to a minimum, but it also gives poor performance "
"on parallel I/O workloads when using multiple CPU machines due to waiting on "
"decompressor availability."
msgstr ""

#: ../../../filesystems/squashfs.rst:94
msgid "multi"
msgstr ""

#: ../../../filesystems/squashfs.rst:94
msgid "use up to two parallel decompressors per core"
msgstr ""

#: ../../../filesystems/squashfs.rst:96
msgid ""
"If you have a parallel I/O workload and your system has enough memory, using "
"this option may improve overall I/O performance. It dynamically allocates "
"decompressors on a demand basis."
msgstr ""

#: ../../../filesystems/squashfs.rst:101
msgid "percpu"
msgstr ""

#: ../../../filesystems/squashfs.rst:101
msgid "use a maximum of one decompressor per core"
msgstr ""

#: ../../../filesystems/squashfs.rst:103
msgid ""
"It uses percpu variables to ensure decompression is load-balanced across the "
"cores."
msgstr ""

#: ../../../filesystems/squashfs.rst:106
msgid "1|2|3|..."
msgstr ""

#: ../../../filesystems/squashfs.rst:106 ../../../filesystems/squashfs.rst:117
msgid "configure the number of threads used for decompression"
msgstr ""

#: ../../../filesystems/squashfs.rst:109 ../../../filesystems/squashfs.rst:120
msgid "The upper limit is num_online_cpus() * 2."
msgstr ""

#: ../../../filesystems/squashfs.rst:112
msgid ""
"If SQUASHFS_CHOICE_DECOMP_BY_MOUNT is **not** set and SQUASHFS_DECOMP_MULTI, "
"SQUASHFS_MOUNT_DECOMP_THREADS are both set:"
msgstr ""

#: ../../../filesystems/squashfs.rst:117
msgid "2|3|..."
msgstr ""

#: ../../../filesystems/squashfs.rst:126
msgid "3. Squashfs Filesystem Design"
msgstr ""

#: ../../../filesystems/squashfs.rst:128
msgid ""
"A squashfs filesystem consists of a maximum of nine parts, packed together "
"on a byte alignment::"
msgstr ""

#: ../../../filesystems/squashfs.rst:158
msgid ""
"Compressed data blocks are written to the filesystem as files are read from "
"the source directory, and checked for duplicates.  Once all file data has "
"been written the completed inode, directory, fragment, export, uid/gid "
"lookup and xattr tables are written."
msgstr ""

#: ../../../filesystems/squashfs.rst:164
msgid "3.1 Compression options"
msgstr ""

#: ../../../filesystems/squashfs.rst:166
msgid ""
"Compressors can optionally support compression specific options (e.g. "
"dictionary size).  If non-default compression options have been used, then "
"these are stored here."
msgstr ""

#: ../../../filesystems/squashfs.rst:171
msgid "3.2 Inodes"
msgstr ""

#: ../../../filesystems/squashfs.rst:173
msgid ""
"Metadata (inodes and directories) are compressed in 8Kbyte blocks.  Each "
"compressed block is prefixed by a two byte length, the top bit is set if the "
"block is uncompressed.  A block will be uncompressed if the -noI option is "
"set, or if the compressed block was larger than the uncompressed block."
msgstr ""

#: ../../../filesystems/squashfs.rst:178
msgid ""
"Inodes are packed into the metadata blocks, and are not aligned to block "
"boundaries, therefore inodes overlap compressed blocks.  Inodes are "
"identified by a 48-bit number which encodes the location of the compressed "
"metadata block containing the inode, and the byte offset into that block "
"where the inode is placed (<block, offset>)."
msgstr ""

#: ../../../filesystems/squashfs.rst:184
msgid ""
"To maximise compression there are different inodes for each file type "
"(regular file, directory, device, etc.), the inode contents and length "
"varying with the type."
msgstr ""

#: ../../../filesystems/squashfs.rst:188
msgid ""
"To further maximise compression, two types of regular file inode and "
"directory inode are defined: inodes optimised for frequently occurring "
"regular files and directories, and extended types where extra information "
"has to be stored."
msgstr ""

#: ../../../filesystems/squashfs.rst:194
msgid "3.3 Directories"
msgstr ""

#: ../../../filesystems/squashfs.rst:196
msgid ""
"Like inodes, directories are packed into compressed metadata blocks, stored "
"in a directory table.  Directories are accessed using the start address of "
"the metablock containing the directory and the offset into the decompressed "
"block (<block, offset>)."
msgstr ""

#: ../../../filesystems/squashfs.rst:201
msgid ""
"Directories are organised in a slightly complex way, and are not simply a "
"list of file names.  The organisation takes advantage of the fact that (in "
"most cases) the inodes of the files will be in the same compressed metadata "
"block, and therefore, can share the start block. Directories are therefore "
"organised in a two level list, a directory header containing the shared "
"start block value, and a sequence of directory entries, each of which share "
"the shared start block.  A new directory header is written once/if the inode "
"start block changes.  The directory header/directory entry list is repeated "
"as many times as necessary."
msgstr ""

#: ../../../filesystems/squashfs.rst:211
msgid ""
"Directories are sorted, and can contain a directory index to speed up file "
"lookup.  Directory indexes store one entry per metablock, each entry storing "
"the index/filename mapping to the first directory header in each metadata "
"block.  Directories are sorted in alphabetical order, and at lookup the "
"index is scanned linearly looking for the first filename alphabetically "
"larger than the filename being looked up.  At this point the location of the "
"metadata block the filename is in has been found. The general idea of the "
"index is to ensure only one metadata block needs to be decompressed to do a "
"lookup irrespective of the length of the directory. This scheme has the "
"advantage that it doesn't require extra memory overhead and doesn't require "
"much extra storage on disk."
msgstr ""

#: ../../../filesystems/squashfs.rst:224
msgid "3.4 File data"
msgstr ""

#: ../../../filesystems/squashfs.rst:226
msgid ""
"Regular files consist of a sequence of contiguous compressed blocks, and/or "
"a compressed fragment block (tail-end packed block).   The compressed size "
"of each datablock is stored in a block list contained within the file inode."
msgstr ""

#: ../../../filesystems/squashfs.rst:231
msgid ""
"To speed up access to datablocks when reading 'large' files (256 Mbytes or "
"larger), the code implements an index cache that caches the mapping from "
"block index to datablock location on disk."
msgstr ""

#: ../../../filesystems/squashfs.rst:235
msgid ""
"The index cache allows Squashfs to handle large files (up to 1.75 TiB) while "
"retaining a simple and space-efficient block list on disk.  The cache is "
"split into slots, caching up to eight 224 GiB files (128 KiB blocks). Larger "
"files use multiple slots, with 1.75 TiB files using all 8 slots. The index "
"cache is designed to be memory efficient, and by default uses 16 KiB."
msgstr ""

#: ../../../filesystems/squashfs.rst:243
msgid "3.5 Fragment lookup table"
msgstr ""

#: ../../../filesystems/squashfs.rst:245
msgid ""
"Regular files can contain a fragment index which is mapped to a fragment "
"location on disk and compressed size using a fragment lookup table.  This "
"fragment lookup table is itself stored compressed into metadata blocks. A "
"second index table is used to locate these.  This second index table for "
"speed of access (and because it is small) is read at mount time and cached "
"in memory."
msgstr ""

#: ../../../filesystems/squashfs.rst:253
msgid "3.6 Uid/gid lookup table"
msgstr ""

#: ../../../filesystems/squashfs.rst:255
msgid ""
"For space efficiency regular files store uid and gid indexes, which are "
"converted to 32-bit uids/gids using an id look up table.  This table is "
"stored compressed into metadata blocks.  A second index table is used to "
"locate these.  This second index table for speed of access (and because it "
"is small) is read at mount time and cached in memory."
msgstr ""

#: ../../../filesystems/squashfs.rst:262
msgid "3.7 Export table"
msgstr ""

#: ../../../filesystems/squashfs.rst:264
msgid ""
"To enable Squashfs filesystems to be exportable (via NFS etc.) filesystems "
"can optionally (disabled with the -no-exports Mksquashfs option) contain an "
"inode number to inode disk location lookup table.  This is required to "
"enable Squashfs to map inode numbers passed in filehandles to the inode "
"location on disk, which is necessary when the export code reinstantiates "
"expired/flushed inodes."
msgstr ""

#: ../../../filesystems/squashfs.rst:271
msgid ""
"This table is stored compressed into metadata blocks.  A second index table "
"is used to locate these.  This second index table for speed of access (and "
"because it is small) is read at mount time and cached in memory."
msgstr ""

#: ../../../filesystems/squashfs.rst:276
msgid "3.8 Xattr table"
msgstr ""

#: ../../../filesystems/squashfs.rst:278
msgid ""
"The xattr table contains extended attributes for each inode.  The xattrs for "
"each inode are stored in a list, each list entry containing a type, name and "
"value field.  The type field encodes the xattr prefix (\"user.\", \"trusted."
"\" etc) and it also encodes how the name/value fields should be "
"interpreted.  Currently the type indicates whether the value is stored "
"inline (in which case the value field contains the xattr value), or if it is "
"stored out of line (in which case the value field stores a reference to "
"where the actual value is stored).  This allows large values to be stored "
"out of line improving scanning and lookup performance and it also allows "
"values to be de-duplicated, the value being stored once, and all other "
"occurrences holding an out of line reference to that value."
msgstr ""

#: ../../../filesystems/squashfs.rst:290
msgid ""
"The xattr lists are packed into compressed 8K metadata blocks. To reduce "
"overhead in inodes, rather than storing the on-disk location of the xattr "
"list inside each inode, a 32-bit xattr id is stored.  This xattr id is "
"mapped into the location of the xattr list using a second xattr id lookup "
"table."
msgstr ""

#: ../../../filesystems/squashfs.rst:297
msgid "4. TODOs and Outstanding Issues"
msgstr ""

#: ../../../filesystems/squashfs.rst:300
msgid "4.1 TODO list"
msgstr ""

#: ../../../filesystems/squashfs.rst:302
msgid "Implement ACL support."
msgstr ""

#: ../../../filesystems/squashfs.rst:305
msgid "4.2 Squashfs Internal Cache"
msgstr ""

#: ../../../filesystems/squashfs.rst:307
msgid ""
"Blocks in Squashfs are compressed.  To avoid repeatedly decompressing "
"recently accessed data Squashfs uses two small metadata and fragment caches."
msgstr ""

#: ../../../filesystems/squashfs.rst:310
msgid ""
"The cache is not used for file datablocks, these are decompressed and cached "
"in the page-cache in the normal way.  The cache is used to temporarily cache "
"fragment and metadata blocks which have been read as a result of a metadata "
"(i.e. inode or directory) or fragment access.  Because metadata and "
"fragments are packed together into blocks (to gain greater compression) the "
"read of a particular piece of metadata or fragment will retrieve other "
"metadata/fragments which have been packed with it, these because of locality-"
"of-reference may be read in the near future. Temporarily caching them "
"ensures they are available for near future access without requiring an "
"additional read and decompress."
msgstr ""

#: ../../../filesystems/squashfs.rst:320
msgid ""
"In the future this internal cache may be replaced with an implementation "
"which uses the kernel page cache.  Because the page cache operates on page "
"sized units this may introduce additional complexity in terms of locking and "
"associated race conditions."
msgstr ""
