# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-27 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../filesystems/caching/backend-api.rst:5
msgid "Cache Backend API"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:7
msgid ""
"The FS-Cache system provides an API by which actual caches can be supplied "
"to FS-Cache for it to then serve out to network filesystems and other "
"interested parties.  This API is used by::"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:15
msgid "Overview"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:17
msgid ""
"Interaction with the API is handled on three levels: cache, volume and data "
"storage, and each level has its own type of cookie object:"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:21
msgid "COOKIE"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:21
msgid "C TYPE"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:23
msgid "Cache cookie"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:23
msgid "struct fscache_cache"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:24
msgid "Volume cookie"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:24
msgid "struct fscache_volume"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:25
msgid "Data storage cookie"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:25
msgid "struct fscache_cookie"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:28
msgid ""
"Cookies are used to provide some filesystem data to the cache, manage state "
"and pin the cache during access in addition to acting as reference points "
"for the API functions.  Each cookie has a debugging ID that is included in "
"trace points to make it easier to correlate traces.  Note, though, that "
"debugging IDs are simply allocated from incrementing counters and will "
"eventually wrap."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:34
msgid ""
"The cache backend and the network filesystem can both ask for cache cookies "
"- and if they ask for one of the same name, they'll get the same cookie.  "
"Volume and data cookies, however, are created at the behest of the "
"filesystem only."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:40
msgid "Cache Cookies"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:42
msgid ""
"Caches are represented in the API by cache cookies.  These are objects of "
"type::"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:52
msgid ""
"There are a few fields that the cache backend might be interested in.  The "
"``debug_id`` can be used in tracing to match lines referring to the same "
"cache and ``name`` is the name the cache was registered with.  The "
"``cache_priv`` member is private data provided by the cache when it is "
"brought online.  The other fields are for internal use."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:60
msgid "Registering a Cache"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:62
msgid ""
"When a cache backend wants to bring a cache online, it should first register "
"the cache name and that will get it a cache cookie.  This is done with::"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:67
msgid ""
"This will look up and potentially create a cache cookie.  The cache cookie "
"may have already been created by a network filesystem looking for it, in "
"which case that cache cookie will be used.  If the cache cookie is not in "
"use by another cache, it will be moved into the preparing state, otherwise "
"it will return busy."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:73
msgid ""
"If successful, the cache backend can then start setting up the cache.  In "
"the event that the initialisation fails, the cache backend should call::"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:78
msgid "to reset and discard the cookie."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:82
msgid "Bringing a Cache Online"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:84
msgid "Once the cache is set up, it can be brought online by calling::"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:90
msgid ""
"This stores the cache operations table pointer and cache private data into "
"the cache cookie and moves the cache to the active state, thereby allowing "
"accesses to take place."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:96
msgid "Withdrawing a Cache From Service"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:98
msgid ""
"The cache backend can withdraw a cache from service by calling this "
"function::"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:102
msgid ""
"This moves the cache to the withdrawn state to prevent new cache- and volume-"
"level accesses from starting and then waits for outstanding cache-level "
"accesses to complete."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:106
msgid ""
"The cache must then go through the data storage objects it has and tell "
"fscache to withdraw them, calling::"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:111
msgid ""
"on the cookie that each object belongs to.  This schedules the specified "
"cookie for withdrawal.  This gets offloaded to a workqueue.  The cache "
"backend can wait for completion by calling::"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:117
msgid ""
"Once all the cookies are withdrawn, a cache backend can withdraw all the "
"volumes, calling::"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:122
msgid ""
"to tell fscache that a volume has been withdrawn.  This waits for all "
"outstanding accesses on the volume to complete before returning."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:125
msgid ""
"When the cache is completely withdrawn, fscache should be notified by "
"calling::"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:130
msgid "to clear fields in the cookie and discard the caller's ref on it."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:134
msgid "Volume Cookies"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:136
msgid ""
"Within a cache, the data storage objects are organised into logical volumes. "
"These are represented in the API as objects of type::"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:150
msgid ""
"There are a number of fields here that are of interest to the caching "
"backend:"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:152
msgid "``cache`` - The parent cache cookie."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:154
#: ../../../filesystems/caching/backend-api.rst:196
msgid "``cache_priv`` - A place for the cache to stash private data."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:156
#: ../../../filesystems/caching/backend-api.rst:216
msgid "``debug_id`` - A debugging ID for logging in tracepoints."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:158
msgid ""
"``key`` - A printable string with no '/' characters in it that represents "
"the index key for the volume.  The key is NUL-terminated and padded out to a "
"multiple of 4 bytes."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:162
#: ../../../filesystems/caching/backend-api.rst:222
msgid ""
"``key_hash`` - A hash of the index key.  This should work out the same, no "
"matter the cpu arch and endianness."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:165
msgid ""
"``coherency`` - A piece of coherency data that should be checked when the "
"volume is bound to in the cache."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:168
msgid "``coherency_len`` - The amount of data in the coherency buffer."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:172
msgid "Data Storage Cookies"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:174
msgid ""
"A volume is a logical group of data storage objects, each of which is "
"represented to the network filesystem by a cookie.  Cookies are represented "
"in the API as objects of type::"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:192
msgid "The fields in the cookie that are of interest to the cache backend are:"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:194
msgid "``volume`` - The parent volume cookie."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:198
msgid "``flags`` - A collection of bit flags, including:"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:200
msgid ""
"FSCACHE_COOKIE_NO_DATA_TO_READ - There is no data available in the cache to "
"be read as the cookie has been created or invalidated."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:203
msgid ""
"FSCACHE_COOKIE_NEEDS_UPDATE - The coherency data and/or object size has been "
"changed and needs committing."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:206
msgid ""
"FSCACHE_COOKIE_LOCAL_WRITE - The netfs's data has been modified locally, so "
"the cache object may be in an incoherent state with respect to the server."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:210
msgid ""
"FSCACHE_COOKIE_HAVE_DATA - The backend should set this if it successfully "
"stores data into the cache."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:213
msgid ""
"FSCACHE_COOKIE_RETIRED - The cookie was invalidated when it was relinquished "
"and the cached data should be discarded."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:218
msgid "``inval_counter`` - The number of invalidations done on the cookie."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:220
msgid "``advice`` - Information about how the cookie is to be used."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:225
msgid "``key_len`` - The length of the index key."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:227
msgid "``aux_len`` - The length of the coherency data buffer."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:229
msgid ""
"Each cookie has an index key, which may be stored inline to the cookie or "
"elsewhere.  A pointer to this can be obtained by calling::"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:234
msgid ""
"The index key is a binary blob, the storage for which is padded out to a "
"multiple of 4 bytes."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:237
msgid ""
"Each cookie also has a buffer for coherency data.  This may also be inline "
"or detached from the cookie and a pointer is obtained by calling::"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:245
msgid "Cookie Accounting"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:247
msgid ""
"Data storage cookies are counted and this is used to block cache withdrawal "
"completion until all objects have been destroyed.  The following functions "
"are provided to the cache to deal with that::"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:255
msgid ""
"The count function records the allocation of an object in a cache and the "
"uncount function records its destruction.  Warning: by the time the uncount "
"function returns, the cache may have been destroyed."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:259
msgid ""
"The wait function can be used during the withdrawal procedure to wait for "
"fscache to finish withdrawing all the objects in the cache.  When it "
"completes, there will be no remaining objects referring to the cache object "
"or any volume objects."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:266
msgid "Cache Management API"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:268
msgid ""
"The cache backend implements the cache management API by providing a table "
"of operations that fscache can use to manage various aspects of the cache.  "
"These are held in a structure of type::"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:277
msgid ""
"This contains a printable name for the cache backend driver plus a number of "
"pointers to methods to allow fscache to request management of the cache:"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:280
msgid "Set up a volume cookie [optional]::"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:284
msgid ""
"This method is called when a volume cookie is being created.  The caller "
"holds a cache-level access pin to prevent the cache from going away for the "
"duration.  This method should set up the resources to access a volume in the "
"cache and should not return until it has done so."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:289
msgid "If successful, it can set ``cache_priv`` to its own data."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:292
msgid "Clean up volume cookie [optional]::"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:296
msgid ""
"This method is called when a volume cookie is being released if "
"``cache_priv`` is set."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:300
msgid "Look up a cookie in the cache [mandatory]::"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:304
msgid ""
"This method is called to look up/create the resources needed to access the "
"data storage for a cookie.  It is called from a worker thread with a volume-"
"level access pin in the cache to prevent it from being withdrawn."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:308
msgid ""
"True should be returned if successful and false otherwise.  If false is "
"returned, the withdraw_cookie op (see below) will be called."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:311
msgid ""
"If lookup fails, but the object could still be created (e.g. it hasn't been "
"cached before), then::"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:317
msgid ""
"can be called to let the network filesystem proceed and start downloading "
"stuff whilst the cache backend gets on with the job of creating things."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:320
msgid "If successful, ``cookie->cache_priv`` can be set."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:323
msgid "Withdraw an object without any cookie access counts held [mandatory]::"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:327
msgid ""
"This method is called to withdraw a cookie from service.  It will be called "
"when the cookie is relinquished by the netfs, withdrawn or culled by the "
"cache backend or closed after a period of non-use by fscache."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:331
msgid ""
"The caller doesn't hold any access pins, but it is called from a non-"
"reentrant work item to manage races between the various ways withdrawal can "
"occur."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:335
msgid ""
"The cookie will have the ``FSCACHE_COOKIE_RETIRED`` flag set on it if the "
"associated data is to be removed from the cache."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:339
msgid "Change the size of a data storage object [mandatory]::"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:344
msgid ""
"This method is called to inform the cache backend of a change in size of the "
"netfs file due to local truncation.  The cache backend should make all of "
"the changes it needs to make before returning as this is done under the "
"netfs inode mutex."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:349
msgid ""
"The caller holds a cookie-level access pin to prevent a race with withdrawal "
"and the netfs must have the cookie marked in-use to prevent garbage "
"collection or culling from removing any resources."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:354
msgid "Invalidate a data storage object [mandatory]::"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:358
msgid ""
"This is called when the network filesystem detects a third-party "
"modification or when an O_DIRECT write is made locally.  This requests that "
"the cache backend should throw away all the data in the cache for this "
"object and start afresh.  It should return true if successful and false "
"otherwise."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:364
msgid ""
"On entry, new I O/operations are blocked.  Once the cache is in a position "
"to accept I/O again, the backend should release the block by calling::"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:369
msgid "If the method returns false, caching will be withdrawn for this cookie."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:372
msgid "Prepare to make local modifications to the cache [mandatory]::"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:376
msgid ""
"This method is called when the network filesystem finds that it is going to "
"need to modify the contents of the cache due to local writes or "
"truncations.  This gives the cache a chance to note that a cache object may "
"be incoherent with respect to the server and may need writing back later.  "
"This may also cause the cached data to be scrapped on later rebinding if not "
"properly committed."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:384
msgid "Begin an operation for the netfs lib [mandatory]::"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:389
msgid ""
"This method is called when an I/O operation is being set up (read, write or "
"resize).  The caller holds an access pin on the cookie and must have marked "
"the cookie as in-use."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:393
msgid ""
"If it can, the backend should attach any resources it needs to keep around "
"to the netfs_cache_resources object and return true."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:396
msgid "If it can't complete the setup, it should return false."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:398
msgid ""
"The want_state parameter indicates the state the caller needs the cache "
"object to be in and what it wants to do during the operation:"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:401
msgid ""
"``FSCACHE_WANT_PARAMS`` - The caller just wants to access cache object "
"parameters; it doesn't need to do data I/O yet."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:404
msgid "``FSCACHE_WANT_READ`` - The caller wants to read data."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:406
msgid ""
"``FSCACHE_WANT_WRITE`` - The caller wants to write to or resize the cache "
"object."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:409
msgid ""
"Note that there won't necessarily be anything attached to the cookie's "
"cache_priv yet if the cookie is still being created."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:414
msgid "Data I/O API"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:416
msgid ""
"A cache backend provides a data I/O API by through the netfs library's "
"``struct netfs_cache_ops`` attached to a ``struct netfs_cache_resources`` by "
"the ``begin_operation`` method described above."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:420
msgid "See the Documentation/filesystems/netfs_library.rst for a description."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:424
msgid "Miscellaneous Functions"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:426
msgid "FS-Cache provides some utilities that a cache backend may make use of:"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:428
msgid "Note occurrence of an I/O error in a cache::"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:432
msgid ""
"This tells FS-Cache that an I/O error occurred in the cache.  This prevents "
"any new I/O from being started on the cache."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:435
msgid ""
"This does not actually withdraw the cache.  That must be done separately."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:437
msgid "Note cessation of caching on a cookie due to failure::"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:441
msgid ""
"This notes that a the caching that was being done on a cookie failed in some "
"way, for instance the backing storage failed to be created or invalidation "
"failed and that no further I/O operations should take place on it until the "
"cache is reset."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:446
msgid "Count I/O requests::"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:451
msgid ""
"These record reads and writes from/to the cache.  The numbers are displayed "
"in /proc/fs/fscache/stats."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:454
msgid "Count out-of-space errors::"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:459
msgid ""
"These record ENOSPC errors in the cache, divided into failures of data "
"writes and failures of filesystem object creations (e.g. mkdir)."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:462
msgid "Count objects culled::"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:466
msgid "This records the culling of an object."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:468
msgid "Get the cookie from a set of cache resources::"
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:472
msgid ""
"Pull a pointer to the cookie from the cache resources.  This may return a "
"NULL cookie if no cookie was set."
msgstr ""

#: ../../../filesystems/caching/backend-api.rst:477
msgid "API Function Reference"
msgstr ""

#: ../../../filesystems/caching/backend-api:479:
#: include/linux/fscache-cache.h:123
msgid "Read the state of a cookie"
msgstr ""

#: ../../../filesystems/caching/backend-api:479:
#: include/linux/fscache-cache.h:127 include/linux/fscache-cache.h:140
#: include/linux/fscache-cache.h:159 include/linux/fscache-cache.h:171
#: include/linux/fscache-cache.h:184
msgid "**Parameters**"
msgstr ""

#: ../../../filesystems/caching/backend-api:479:
#: include/linux/fscache-cache.h:129 include/linux/fscache-cache.h:142
msgid "``struct fscache_cookie *cookie``"
msgstr ""

#: ../../../filesystems/caching/backend-api:479:
#: include/linux/fscache-cache.h:124 include/linux/fscache-cache.h:137
msgid "The cookie to query"
msgstr ""

#: ../../../filesystems/caching/backend-api:479:
#: include/linux/fscache-cache.h:126 include/linux/fscache-cache.h:139
#: include/linux/fscache-cache.h:158 include/linux/fscache-cache.h:170
#: include/linux/fscache-cache.h:183
msgid "**Description**"
msgstr ""

#: ../../../filesystems/caching/backend-api:479:
#: include/linux/fscache-cache.h:125
msgid ""
"Get the state of a cookie, imposing an ordering between the cookie contents "
"and the state value.  Paired with fscache_set_cookie_state()."
msgstr ""

#: ../../../filesystems/caching/backend-api:479:
#: include/linux/fscache-cache.h:136
msgid "Get a pointer to the cookie key"
msgstr ""

#: ../../../filesystems/caching/backend-api:479:
#: include/linux/fscache-cache.h:138
msgid "Return a pointer to the where a cookie's key is stored."
msgstr ""

#: ../../../filesystems/caching/backend-api:479:
#: include/linux/fscache-cache.h:155
msgid "Tell fscache that an object has been added"
msgstr ""

#: ../../../filesystems/caching/backend-api:479:
#: include/linux/fscache-cache.h:161 include/linux/fscache-cache.h:173
#: include/linux/fscache-cache.h:186
msgid "``struct fscache_cache *cache``"
msgstr ""

#: ../../../filesystems/caching/backend-api:479:
#: include/linux/fscache-cache.h:156 include/linux/fscache-cache.h:168
msgid "The cache to account to"
msgstr ""

#: ../../../filesystems/caching/backend-api:479:
#: include/linux/fscache-cache.h:157
msgid ""
"Tell fscache that an object has been added to the cache.  This prevents the "
"cache from tearing down the cache structure until the object is uncounted."
msgstr ""

#: ../../../filesystems/caching/backend-api:479:
#: include/linux/fscache-cache.h:167
msgid "Tell fscache that an object has been removed"
msgstr ""

#: ../../../filesystems/caching/backend-api:479:
#: include/linux/fscache-cache.h:169
msgid ""
"Tell fscache that an object has been removed from the cache and will no "
"longer be accessed.  After this point, the cache cookie may be destroyed."
msgstr ""

#: ../../../filesystems/caching/backend-api:479:
#: include/linux/fscache-cache.h:180
msgid "Wait for all objects to be withdrawn"
msgstr ""

#: ../../../filesystems/caching/backend-api:479:
#: include/linux/fscache-cache.h:181
msgid "The cache to query"
msgstr ""

#: ../../../filesystems/caching/backend-api:479:
#: include/linux/fscache-cache.h:182
msgid ""
"Wait for all extant objects in a cache to finish being withdrawn and go away."
msgstr ""
