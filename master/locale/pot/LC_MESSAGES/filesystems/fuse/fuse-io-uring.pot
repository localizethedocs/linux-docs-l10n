# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-06 15:47+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../filesystems/fuse/fuse-io-uring.rst:5
msgid "FUSE-over-io-uring design documentation"
msgstr ""

#: ../../../filesystems/fuse/fuse-io-uring.rst:7
msgid ""
"This documentation covers basic details how the fuse kernel/userspace "
"communication through io-uring is configured and works. For generic details "
"about FUSE see fuse.rst."
msgstr ""

#: ../../../filesystems/fuse/fuse-io-uring.rst:11
msgid ""
"This document also covers the current interface, which is still in "
"development and might change."
msgstr ""

#: ../../../filesystems/fuse/fuse-io-uring.rst:15
msgid "Limitations"
msgstr ""

#: ../../../filesystems/fuse/fuse-io-uring.rst:16
msgid ""
"As of now not all requests types are supported through io-uring, userspace "
"is required to also handle requests through /dev/fuse after io-uring setup "
"is complete. Specifically notifications (initiated from the daemon side) and "
"interrupts."
msgstr ""

#: ../../../filesystems/fuse/fuse-io-uring.rst:22
msgid "Fuse io-uring configuration"
msgstr ""

#: ../../../filesystems/fuse/fuse-io-uring.rst:24
msgid ""
"Fuse kernel requests are queued through the classical /dev/fuse read/write "
"interface - until io-uring setup is complete."
msgstr ""

#: ../../../filesystems/fuse/fuse-io-uring.rst:27
msgid ""
"In order to set up fuse-over-io-uring fuse-server (user-space) needs to "
"submit SQEs (opcode = IORING_OP_URING_CMD) to the /dev/fuse connection file "
"descriptor. Initial submit is with the sub command FUSE_URING_REQ_REGISTER, "
"which will just register entries to be available in the kernel."
msgstr ""

#: ../../../filesystems/fuse/fuse-io-uring.rst:33
msgid ""
"Once at least one entry per queue is submitted, kernel starts to enqueue to "
"ring queues. Note, every CPU core has its own fuse-io-uring queue. Userspace "
"handles the CQE/fuse-request and submits the result as subcommand "
"FUSE_URING_REQ_COMMIT_AND_FETCH - kernel completes the requests and also "
"marks the entry available again. If there are pending requests waiting the "
"request will be immediately submitted to the daemon again."
msgstr ""

#: ../../../filesystems/fuse/fuse-io-uring.rst:42
msgid "Initial SQE -----------::"
msgstr ""

#: ../../../filesystems/fuse/fuse-io-uring.rst:58
msgid "Sending requests with CQEs --------------------------::"
msgstr ""
