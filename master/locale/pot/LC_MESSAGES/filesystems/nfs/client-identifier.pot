# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../filesystems/nfs/client-identifier.rst:5
msgid "NFSv4 client identifier"
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:7
msgid ""
"This document explains how the NFSv4 protocol identifies client instances in "
"order to maintain file open and lock state during system restarts. A special "
"identifier and principal are maintained on each client. These can be set by "
"administrators, scripts provided by site administrators, or tools provided "
"by Linux distributors."
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:14
msgid ""
"There are risks if a client's NFSv4 identifier and its principal are not "
"chosen carefully."
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:19
msgid "Introduction"
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:21
msgid ""
"The NFSv4 protocol uses \"lease-based file locking\". Leases help NFSv4 "
"servers provide file lock guarantees and manage their resources."
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:25
msgid ""
"Simply put, an NFSv4 server creates a lease for each NFSv4 client. The "
"server collects each client's file open and lock state under the lease for "
"that client."
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:29
msgid ""
"The client is responsible for periodically renewing its leases. While a "
"lease remains valid, the server holding that lease guarantees the file locks "
"the client has created remain in place."
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:33
msgid ""
"If a client stops renewing its lease (for example, if it crashes), the NFSv4 "
"protocol allows the server to remove the client's open and lock state after "
"a certain period of time. When a client restarts, it indicates to servers "
"that open and lock state associated with its previous leases is no longer "
"valid and can be destroyed immediately."
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:40
msgid ""
"In addition, each NFSv4 server manages a persistent list of client leases. "
"When the server restarts and clients attempt to recover their state, the "
"server uses this list to distinguish amongst clients that held state before "
"the server restarted and clients sending fresh OPEN and LOCK requests. This "
"enables file locks to persist safely across server restarts."
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:48
msgid "NFSv4 client identifiers"
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:50
msgid ""
"Each NFSv4 client presents an identifier to NFSv4 servers so that they can "
"associate the client with its lease. Each client's identifier consists of "
"two elements:"
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:54
msgid "co_ownerid: An arbitrary but fixed string."
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:56
msgid ""
"boot verifier: A 64-bit incarnation verifier that enables a server to "
"distinguish successive boot epochs of the same client."
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:59
msgid ""
"The NFSv4.0 specification refers to these two items as an "
"\"nfs_client_id4\". The NFSv4.1 specification refers to these two items as a "
"\"client_owner4\"."
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:63
msgid ""
"NFSv4 servers tie this identifier to the principal and security flavor that "
"the client used when presenting it. Servers use this principal to authorize "
"subsequent lease modification operations sent by the client. Effectively "
"this principal is a third element of the identifier."
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:69
msgid ""
"As part of the identity presented to servers, a good \"co_ownerid\" string "
"has several important properties:"
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:72
msgid ""
"The \"co_ownerid\" string identifies the client during reboot recovery, "
"therefore the string is persistent across client reboots."
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:75
msgid ""
"The \"co_ownerid\" string helps servers distinguish the client from others, "
"therefore the string is globally unique. Note that there is no central "
"authority that assigns \"co_ownerid\" strings."
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:79
msgid ""
"Because it often appears on the network in the clear, the \"co_ownerid\" "
"string does not reveal private information about the client itself."
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:82
msgid ""
"The content of the \"co_ownerid\" string is set and unchanging before the "
"client attempts NFSv4 mounts after a restart."
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:84
msgid ""
"The NFSv4 protocol places a 1024-byte limit on the size of the "
"\"co_ownerid\" string."
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:88
msgid "Protecting NFSv4 lease state"
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:90
msgid ""
"NFSv4 servers utilize the \"client_owner4\" as described above to assign a "
"unique lease to each client. Under this scheme, there are circumstances "
"where clients can interfere with each other. This is referred to as \"lease "
"stealing\"."
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:95
msgid ""
"If distinct clients present the same \"co_ownerid\" string and use the same "
"principal (for example, AUTH_SYS and UID 0), a server is unable to tell that "
"the clients are not the same. Each distinct client presents a different boot "
"verifier, so it appears to the server as if there is one client that is "
"rebooting frequently. Neither client can maintain open or lock state in this "
"scenario."
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:102
msgid ""
"If distinct clients present the same \"co_ownerid\" string and use distinct "
"principals, the server is likely to allow the first client to operate "
"normally but reject subsequent clients with the same \"co_ownerid\" string."
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:107
msgid ""
"If a client's \"co_ownerid\" string or principal are not stable, state "
"recovery after a server or client reboot is not guaranteed. If a client "
"unexpectedly restarts but presents a different \"co_ownerid\" string or "
"principal to the server, the server orphans the client's previous open and "
"lock state. This blocks access to locked files until the server removes the "
"orphaned state."
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:114
msgid ""
"If the server restarts and a client presents a changed \"co_ownerid\" string "
"or principal to the server, the server will not allow the client to reclaim "
"its open and lock state, and may give those locks to other clients in the "
"meantime. This is referred to as \"lock stealing\"."
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:120
msgid ""
"Lease stealing and lock stealing increase the potential for denial of "
"service and in rare cases even data corruption."
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:124
msgid "Selecting an appropriate client identifier"
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:126
msgid ""
"By default, the Linux NFSv4 client implementation constructs its "
"\"co_ownerid\" string starting with the words \"Linux NFS\" followed by the "
"client's UTS node name (the same node name, incidentally, that is used as "
"the \"machine name\" in an AUTH_SYS credential). In small deployments, this "
"construction is usually adequate. Often, however, the node name by itself is "
"not adequately unique, and can change unexpectedly. Problematic situations "
"include:"
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:134
msgid ""
"NFS-root (diskless) clients, where the local DHCP server (or equivalent) "
"does not provide a unique host name."
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:137
msgid ""
"\"Containers\" within a single Linux host.  If each container has a separate "
"network namespace, but does not use the UTS namespace to provide a unique "
"host name, then there can be multiple NFS client instances with the same "
"host name."
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:142
msgid ""
"Clients across multiple administrative domains that access a common NFS "
"server. If hostnames are not assigned centrally then uniqueness cannot be "
"guaranteed unless a domain name is included in the hostname."
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:147
msgid ""
"Linux provides two mechanisms to add uniqueness to its \"co_ownerid\" string:"
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:150
msgid "nfs.nfs4_unique_id"
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:151
msgid ""
"This module parameter can set an arbitrary uniquifier string via the kernel "
"command line, or when the \"nfs\" module is loaded."
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:155
msgid "/sys/fs/nfs/net/nfs_client/identifier"
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:156
msgid ""
"This virtual file, available since Linux 5.3, is local to the network "
"namespace in which it is accessed and so can provide distinction between "
"network namespaces (containers) when the hostname remains uniform."
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:161
msgid ""
"Note that this file is empty on name-space creation. If the container system "
"has access to some sort of per-container identity then that uniquifier can "
"be used. For example, a uniquifier might be formed at boot using the "
"container's internal identifier:"
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:166
msgid "sha256sum /etc/machine-id | awk '{print $1}' \\\\"
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:167
msgid "> /sys/fs/nfs/net/nfs_client/identifier"
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:170
msgid "Security considerations"
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:172
msgid ""
"The use of cryptographic security for lease management operations is "
"strongly encouraged."
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:175
msgid ""
"If NFS with Kerberos is not configured, a Linux NFSv4 client uses AUTH_SYS "
"and UID 0 as the principal part of its client identity. This configuration "
"is not only insecure, it increases the risk of lease and lock stealing. "
"However, it might be the only choice for client configurations that have no "
"local persistent storage. \"co_ownerid\" string uniqueness and persistence "
"is critical in this case."
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:183
msgid ""
"When a Kerberos keytab is present on a Linux NFS client, the client attempts "
"to use one of the principals in that keytab when identifying itself to "
"servers. The \"sec=\" mount option does not control this behavior. "
"Alternately, a single-user client with a Kerberos principal can use that "
"principal in place of the client's host principal."
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:190
msgid ""
"Using Kerberos for this purpose enables the client and server to use the "
"same lease for operations covered by all \"sec=\" settings. Additionally, "
"the Linux NFS client uses the RPCSEC_GSS security flavor with Kerberos and "
"the integrity QOS to prevent in-transit modification of lease modification "
"requests."
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:197
msgid "Additional notes"
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:198
msgid ""
"The Linux NFSv4 client establishes a single lease on each NFSv4 server it "
"accesses. NFSv4 mounts from a Linux NFSv4 client of a particular server then "
"share that lease."
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:202
msgid ""
"Once a client establishes open and lock state, the NFSv4 protocol enables "
"lease state to transition to other servers, following data that has been "
"migrated. This hides data migration completely from running applications. "
"The Linux NFSv4 client facilitates state migration by presenting the same "
"\"client_owner4\" to all servers it encounters."
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:211
msgid "See Also"
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:213
msgid "nfs(5)"
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:214
msgid "kerberos(7)"
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:215
msgid "RFC 7530 for the NFSv4.0 specification"
msgstr ""

#: ../../../filesystems/nfs/client-identifier.rst:216
msgid "RFC 8881 for the NFSv4.1 specification."
msgstr ""
