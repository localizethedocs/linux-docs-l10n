# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../core-api/debugging-via-ohci1394.rst:3
msgid ""
"Using physical DMA provided by OHCI-1394 FireWire controllers for debugging"
msgstr ""

#: ../../../core-api/debugging-via-ohci1394.rst:6
msgid "Introduction"
msgstr ""

#: ../../../core-api/debugging-via-ohci1394.rst:8
msgid ""
"Basically all FireWire controllers which are in use today are compliant to "
"the OHCI-1394 specification which defines the controller to be a PCI bus "
"master which uses DMA to offload data transfers from the CPU and has a "
"\"Physical Response Unit\" which executes specific requests by employing PCI-"
"Bus master DMA after applying filters defined by the OHCI-1394 driver."
msgstr ""

#: ../../../core-api/debugging-via-ohci1394.rst:14
msgid ""
"Once properly configured, remote machines can send these requests to ask the "
"OHCI-1394 controller to perform read and write requests on physical system "
"memory and, for read requests, send the result of the physical memory read "
"back to the requester."
msgstr ""

#: ../../../core-api/debugging-via-ohci1394.rst:19
msgid ""
"With that, it is possible to debug issues by reading interesting memory "
"locations such as buffers like the printk buffer or the process table."
msgstr ""

#: ../../../core-api/debugging-via-ohci1394.rst:22
msgid ""
"Retrieving a full system memory dump is also possible over the FireWire, "
"using data transfer rates in the order of 10MB/s or more."
msgstr ""

#: ../../../core-api/debugging-via-ohci1394.rst:25
msgid ""
"With most FireWire controllers, memory access is limited to the low 4 GB of "
"physical address space.  This can be a problem on machines where memory is "
"located mostly above that limit, but it is rarely a problem on more common "
"hardware such as x86, x86-64 and PowerPC."
msgstr ""

#: ../../../core-api/debugging-via-ohci1394.rst:30
msgid ""
"At least LSI FW643e and FW643e2 controllers are known to support access to "
"physical addresses above 4 GB, but this feature is currently not enabled by "
"Linux."
msgstr ""

#: ../../../core-api/debugging-via-ohci1394.rst:34
msgid ""
"Together with a early initialization of the OHCI-1394 controller for "
"debugging, this facility proved most useful for examining long debugs logs "
"in the printk buffer on to debug early boot problems in areas like ACPI "
"where the system fails to boot and other means for debugging (serial port) "
"are either not available (notebooks) or too slow for extensive debug "
"information (like ACPI)."
msgstr ""

#: ../../../core-api/debugging-via-ohci1394.rst:41
msgid "Drivers"
msgstr ""

#: ../../../core-api/debugging-via-ohci1394.rst:43
msgid ""
"The firewire-ohci driver in drivers/firewire uses filtered physical DMA by "
"default, which is more secure but not suitable for remote debugging. Pass "
"the remote_dma=1 parameter to the driver to get unfiltered physical DMA."
msgstr ""

#: ../../../core-api/debugging-via-ohci1394.rst:47
msgid ""
"Because the firewire-ohci driver depends on the PCI enumeration to be "
"completed, an initialization routine which runs pretty early has been "
"implemented for x86.  This routine runs long before console_init() can be "
"called, i.e. before the printk buffer appears on the console."
msgstr ""

#: ../../../core-api/debugging-via-ohci1394.rst:52
msgid ""
"To activate it, enable CONFIG_PROVIDE_OHCI1394_DMA_INIT (Kernel hacking "
"menu: Remote debugging over FireWire early on boot) and pass the parameter "
"\"ohci1394_dma=early\" to the recompiled kernel on boot."
msgstr ""

#: ../../../core-api/debugging-via-ohci1394.rst:57
msgid "Tools"
msgstr ""

#: ../../../core-api/debugging-via-ohci1394.rst:59
msgid ""
"firescope - Originally developed by Benjamin Herrenschmidt, Andi Kleen "
"ported it from PowerPC to x86 and x86_64 and added functionality, firescope "
"can now be used to view the printk buffer of a remote machine, even with "
"live update."
msgstr ""

#: ../../../core-api/debugging-via-ohci1394.rst:63
msgid ""
"Bernhard Kaindl enhanced firescope to support accessing 64-bit machines from "
"32-bit firescope and vice versa: - http://v3.sk/~lkundrak/firescope/"
msgstr ""

#: ../../../core-api/debugging-via-ohci1394.rst:67
msgid ""
"and he implemented fast system dump (alpha version - read README.txt): - "
"http://halobates.de/firewire/firedump-0.1.tar.bz2"
msgstr ""

#: ../../../core-api/debugging-via-ohci1394.rst:70
msgid ""
"There is also a gdb proxy for firewire which allows to use gdb to access "
"data which can be referenced from symbols found by gdb in vmlinux: - http://"
"halobates.de/firewire/fireproxy-0.33.tar.bz2"
msgstr ""

#: ../../../core-api/debugging-via-ohci1394.rst:74
msgid ""
"The latest version of this gdb proxy (fireproxy-0.34) can communicate (not "
"yet stable) with kgdb over an memory-based communication module (kgdbom)."
msgstr ""

#: ../../../core-api/debugging-via-ohci1394.rst:78
msgid "Getting Started"
msgstr ""

#: ../../../core-api/debugging-via-ohci1394.rst:80
msgid ""
"The OHCI-1394 specification regulates that the OHCI-1394 controller must "
"disable all physical DMA on each bus reset."
msgstr ""

#: ../../../core-api/debugging-via-ohci1394.rst:83
msgid ""
"This means that if you want to debug an issue in a system state where "
"interrupts are disabled and where no polling of the OHCI-1394 controller for "
"bus resets takes place, you have to establish any FireWire cable connections "
"and fully initialize all FireWire hardware __before__ the system enters such "
"state."
msgstr ""

#: ../../../core-api/debugging-via-ohci1394.rst:89
msgid ""
"Step-by-step instructions for using firescope with early OHCI initialization:"
msgstr ""

#: ../../../core-api/debugging-via-ohci1394.rst:91
msgid "Verify that your hardware is supported:"
msgstr ""

#: ../../../core-api/debugging-via-ohci1394.rst:93
msgid ""
"Load the firewire-ohci module and check your kernel logs. You should see a "
"line similar to::"
msgstr ""

#: ../../../core-api/debugging-via-ohci1394.rst:99
msgid ""
"when loading the driver. If you have no supported controller, many PCI, "
"CardBus and even some Express cards which are fully compliant to OHCI-1394 "
"specification are available. If it requires no driver for Windows operating "
"systems, it most likely is. Only specialized shops have cards which are not "
"compliant, they are based on TI PCILynx chips and require drivers for "
"Windows operating systems."
msgstr ""

#: ../../../core-api/debugging-via-ohci1394.rst:106
msgid ""
"The mentioned kernel log message contains the string \"physUB\" if the "
"controller implements a writable Physical Upper Bound register.  This is "
"required for physical DMA above 4 GB (but not utilized by Linux yet)."
msgstr ""

#: ../../../core-api/debugging-via-ohci1394.rst:110
msgid "Establish a working FireWire cable connection:"
msgstr ""

#: ../../../core-api/debugging-via-ohci1394.rst:112
msgid ""
"Any FireWire cable, as long at it provides electrically and mechanically "
"stable connection and has matching connectors (there are small 4-pin and "
"large 6-pin FireWire ports) will do."
msgstr ""

#: ../../../core-api/debugging-via-ohci1394.rst:116
msgid "If an driver is running on both machines you should see a line like::"
msgstr ""

#: ../../../core-api/debugging-via-ohci1394.rst:120
msgid ""
"on both machines in the kernel log when the cable is plugged in and connects "
"the two machines."
msgstr ""

#: ../../../core-api/debugging-via-ohci1394.rst:123
msgid "Test physical DMA using firescope:"
msgstr ""

#: ../../../core-api/debugging-via-ohci1394.rst:125
msgid ""
"On the debug host, make sure that /dev/fw* is accessible, then start "
"firescope::"
msgstr ""

#: ../../../core-api/debugging-via-ohci1394.rst:145
msgid ""
"Besides the [LOCAL] node, it must show another node without error message."
msgstr ""

#: ../../../core-api/debugging-via-ohci1394.rst:147
msgid "Prepare for debugging with early OHCI-1394 initialization:"
msgstr ""

#: ../../../core-api/debugging-via-ohci1394.rst:149
msgid "4.1) Kernel compilation and installation on debug target"
msgstr ""

#: ../../../core-api/debugging-via-ohci1394.rst:151
msgid ""
"Compile the kernel to be debugged with CONFIG_PROVIDE_OHCI1394_DMA_INIT "
"(Kernel hacking: Provide code for enabling DMA over FireWire early on boot) "
"enabled and install it on the machine to be debugged (debug target)."
msgstr ""

#: ../../../core-api/debugging-via-ohci1394.rst:155
msgid "4.2) Transfer the System.map of the debugged kernel to the debug host"
msgstr ""

#: ../../../core-api/debugging-via-ohci1394.rst:157
msgid ""
"Copy the System.map of the kernel be debugged to the debug host (the host "
"which is connected to the debugged machine over the FireWire cable)."
msgstr ""

#: ../../../core-api/debugging-via-ohci1394.rst:160
msgid "Retrieving the printk buffer contents:"
msgstr ""

#: ../../../core-api/debugging-via-ohci1394.rst:162
msgid ""
"With the FireWire cable connected, the OHCI-1394 driver on the debugging "
"host loaded, reboot the debugged machine, booting the kernel which has "
"CONFIG_PROVIDE_OHCI1394_DMA_INIT enabled, with the option ohci1394_dma=early."
msgstr ""

#: ../../../core-api/debugging-via-ohci1394.rst:166
msgid "Then, on the debugging host, run firescope, for example by using -A::"
msgstr ""

#: ../../../core-api/debugging-via-ohci1394.rst:170
msgid ""
"Note: -A automatically attaches to the first non-local node. It only works "
"reliably if only connected two machines are connected using FireWire."
msgstr ""

#: ../../../core-api/debugging-via-ohci1394.rst:173
msgid ""
"After having attached to the debug target, press Ctrl-D to view the complete "
"printk buffer or Ctrl-U to enter auto update mode and get an updated live "
"view of recent kernel messages logged on the debug target."
msgstr ""

#: ../../../core-api/debugging-via-ohci1394.rst:177
msgid "Call \"firescope -h\" to get more information on firescope's options."
msgstr ""

#: ../../../core-api/debugging-via-ohci1394.rst:180
msgid "Notes"
msgstr ""

#: ../../../core-api/debugging-via-ohci1394.rst:182
msgid "Documentation and specifications: http://halobates.de/firewire/"
msgstr ""

#: ../../../core-api/debugging-via-ohci1394.rst:184
msgid ""
"FireWire is a trademark of Apple Inc. - for more information please refer "
"to: https://en.wikipedia.org/wiki/FireWire"
msgstr ""
