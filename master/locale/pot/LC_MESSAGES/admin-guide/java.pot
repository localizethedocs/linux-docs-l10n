# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../admin-guide/java.rst:2
msgid "Java(tm) Binary Kernel Support for Linux v1.03"
msgstr ""

#: ../../../admin-guide/java.rst:4
msgid ""
"Linux beats them ALL! While all other OS's are TALKING about direct support "
"of Java Binaries in the OS, Linux is doing it!"
msgstr ""

#: ../../../admin-guide/java.rst:7
msgid ""
"You can execute Java applications and Java Applets just like any other "
"program after you have done the following:"
msgstr ""

#: ../../../admin-guide/java.rst:10
msgid ""
"You MUST FIRST install the Java Developers Kit for Linux. The Java on Linux "
"HOWTO gives the details on getting and installing this. This HOWTO can be "
"found at:"
msgstr ""

#: ../../../admin-guide/java.rst:14
msgid "ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO/Java-HOWTO"
msgstr ""

#: ../../../admin-guide/java.rst:16
msgid ""
"You should also set up a reasonable CLASSPATH environment variable to use "
"Java applications that make use of any nonstandard classes (not included in "
"the same directory as the application itself)."
msgstr ""

#: ../../../admin-guide/java.rst:21
msgid ""
"You have to compile BINFMT_MISC either as a module or into the kernel "
"(``CONFIG_BINFMT_MISC``) and set it up properly. If you choose to compile it "
"as a module, you will have to insert it manually with modprobe/insmod, as "
"kmod cannot easily be supported with binfmt_misc. Read the file 'binfmt_misc."
"txt' in this directory to know more about the configuration process."
msgstr ""

#: ../../../admin-guide/java.rst:29
msgid ""
"Add the following configuration items to binfmt_misc (you should really have "
"read ``binfmt_misc.txt`` now): support for Java applications::"
msgstr ""

#: ../../../admin-guide/java.rst:35
msgid "support for executable Jar files::"
msgstr ""

#: ../../../admin-guide/java.rst:39
msgid "support for Java Applets::"
msgstr ""

#: ../../../admin-guide/java.rst:43
msgid "or the following, if you want to be more selective::"
msgstr ""

#: ../../../admin-guide/java.rst:47
msgid ""
"Of course you have to fix the path names. The path/file names given in this "
"document match the Debian 2.1 system. (i.e. jdk installed in ``/usr``, "
"custom wrappers from this document in ``/usr/local``)"
msgstr ""

#: ../../../admin-guide/java.rst:51
msgid ""
"Note, that for the more selective applet support you have to modify existing "
"html-files to contain ``<!--applet-->`` in the first line (``<`` has to be "
"the first character!) to let this work!"
msgstr ""

#: ../../../admin-guide/java.rst:55
msgid ""
"For the compiled Java programs you need a wrapper script like the following "
"(this is because Java is broken in case of the filename handling), again fix "
"the path names, both in the script and in the above given configuration "
"string."
msgstr ""

#: ../../../admin-guide/java.rst:60
msgid "You, too, need the little program after the script. Compile like::"
msgstr ""

#: ../../../admin-guide/java.rst:64
msgid "and stick it to ``/usr/local/bin``."
msgstr ""

#: ../../../admin-guide/java.rst:66
msgid ""
"Both the javawrapper shellscript and the javaclassname program were supplied "
"by Colin J. Watson <cjw44@cam.ac.uk>."
msgstr ""

#: ../../../admin-guide/java.rst:69
msgid "Javawrapper shell script:"
msgstr ""

#: ../../../admin-guide/java.rst:160
msgid "javaclassname.c:"
msgstr ""

#: ../../../admin-guide/java.rst:367
msgid "jarwrapper::"
msgstr ""

#: ../../../admin-guide/java.rst:375
msgid ""
"Now simply ``chmod +x`` the ``.class``, ``.jar`` and/or ``.html`` files you "
"want to execute."
msgstr ""

#: ../../../admin-guide/java.rst:378
msgid ""
"To add a Java program to your path best put a symbolic link to the main ."
"class file into /usr/bin (or another place you like) omitting the .class "
"extension. The directory containing the original .class file will be added "
"to your CLASSPATH during execution."
msgstr ""

#: ../../../admin-guide/java.rst:384
msgid ""
"To test your new setup, enter in the following simple Java app, and name it "
"\"HelloWorld.java\":"
msgstr ""

#: ../../../admin-guide/java.rst:395
msgid "Now compile the application with::"
msgstr ""

#: ../../../admin-guide/java.rst:399
msgid "Set the executable permissions of the binary file, with::"
msgstr ""

#: ../../../admin-guide/java.rst:403
msgid "And then execute it::"
msgstr ""

#: ../../../admin-guide/java.rst:408
msgid ""
"To execute Java Jar files, simple chmod the ``*.jar`` files to include the "
"execution bit, then just do::"
msgstr ""

#: ../../../admin-guide/java.rst:414
msgid ""
"To execute Java Applets, simple chmod the ``*.html`` files to include the "
"execution bit, then just do::"
msgstr ""

#: ../../../admin-guide/java.rst:420
msgid ""
"originally by Brian A. Lantz, brian@lantz.com heavily edited for binfmt_misc "
"by Richard GÃ¼nther new scripts by Colin J. Watson <cjw44@cam.ac.uk> added "
"executable Jar file support by Kurt Huwig <kurt@iku-netz.de>"
msgstr ""
