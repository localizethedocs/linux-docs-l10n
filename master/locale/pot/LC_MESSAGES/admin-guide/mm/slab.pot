# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../admin-guide/mm/slab.rst:3
msgid "Short users guide for the slab allocator"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:5
msgid ""
"The slab allocator includes full debugging support (when built with "
"CONFIG_SLUB_DEBUG=y) but it is off by default (unless built with "
"CONFIG_SLUB_DEBUG_ON=y).  You can enable debugging only for selected slabs "
"in order to avoid an impact on overall system performance which may make a "
"bug more difficult to find."
msgstr ""

#: ../../../admin-guide/mm/slab.rst:11
msgid ""
"In order to switch debugging on one can add an option ``slab_debug`` to the "
"kernel command line. That will enable full debugging for all slabs."
msgstr ""

#: ../../../admin-guide/mm/slab.rst:15
msgid ""
"Typically one would then use the ``slabinfo`` command to get statistical "
"data and perform operation on the slabs. By default ``slabinfo`` only lists "
"slabs that have data in them. See \"slabinfo -h\" for more options when "
"running the command. ``slabinfo`` can be compiled with ::"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:23
msgid ""
"Some of the modes of operation of ``slabinfo`` require that slub debugging "
"be enabled on the command line. F.e. no tracking information will be "
"available without debugging on and validation can only partially be "
"performed if debugging was not switched on."
msgstr ""

#: ../../../admin-guide/mm/slab.rst:29
msgid "Some more sophisticated uses of slab_debug:"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:31
msgid ""
"Parameters may be given to ``slab_debug``. If none is specified then full "
"debugging is enabled. Format:"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:34
msgid "slab_debug=<Debug-Options>"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:35
msgid "Enable options for all slabs"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:37
msgid "slab_debug=<Debug-Options>,<slab name1>,<slab name2>,..."
msgstr ""

#: ../../../admin-guide/mm/slab.rst:38
msgid "Enable options only for select slabs (no spaces after a comma)"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:41
msgid ""
"Multiple blocks of options for all slabs or selected slabs can be given, "
"with blocks of options delimited by ';'. The last of \"all slabs\" blocks is "
"applied to all slabs except those that match one of the \"select slabs\" "
"block. Options of the first \"select slabs\" blocks that matches the slab's "
"name are applied."
msgstr ""

#: ../../../admin-guide/mm/slab.rst:46
msgid "Possible debug options are::"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:60
msgid ""
"F.e. in order to boot just with sanity checks and red zoning one would "
"specify::"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:64
msgid "Trying to find an issue in the dentry cache? Try::"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:68
msgid ""
"to only enable debugging on the dentry cache.  You may use an asterisk at "
"the end of the slab name, in order to cover all slabs with the same prefix.  "
"For example, here's how you can poison the dentry cache as well as all "
"kmalloc slabs::"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:75
msgid ""
"Red zoning and tracking may realign the slab.  We can just apply sanity "
"checks to the dentry cache with::"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:80
msgid ""
"Debugging options may require the minimum possible slab order to increase as "
"a result of storing the metadata (for example, caches with PAGE_SIZE object "
"sizes).  This has a higher likelihood of resulting in slab allocation errors "
"in low memory situations or if there's high fragmentation of memory.  To "
"switch off debugging for such caches by default, use::"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:88
msgid ""
"You can apply different options to different list of slab names, using "
"blocks of options. This will enable red zoning for dentry and user tracking "
"for kmalloc. All other slabs will not get any debugging enabled::"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:94
msgid ""
"You can also enable options (e.g. sanity checks and poisoning) for all "
"caches except some that are deemed too performance critical and don't need "
"to be debugged by specifying global debug options followed by a list of slab "
"names with \"-\" as options::"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:101
msgid ""
"The state of each debug option for a slab can be found in the respective "
"files under::"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:106
msgid ""
"If the file contains 1, the option is enabled, 0 means disabled. The debug "
"options from the ``slab_debug`` parameter translate to the following files::"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:116
msgid ""
"failslab file is writable, so writing 1 or 0 will enable or disable the "
"option at runtime. Write returns -EINVAL if cache is an alias. Careful with "
"tracing: It may spew out lots of information and never stop if used on the "
"wrong slab."
msgstr ""

#: ../../../admin-guide/mm/slab.rst:122
msgid "Slab merging"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:124
msgid ""
"If no debug options are specified then SLUB may merge similar slabs together "
"in order to reduce overhead and increase cache hotness of objects. "
"``slabinfo -a`` displays which slabs were merged together."
msgstr ""

#: ../../../admin-guide/mm/slab.rst:129
msgid "Slab validation"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:131
msgid ""
"SLUB can validate all object if the kernel was booted with slab_debug. In "
"order to do so you must have the ``slabinfo`` tool. Then you can do ::"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:137
msgid "which will test all objects. Output will be generated to the syslog."
msgstr ""

#: ../../../admin-guide/mm/slab.rst:139
msgid ""
"This also works in a more limited way if boot was without slab debug. In "
"that case ``slabinfo -v`` simply tests all reachable objects. Usually these "
"are in the cpu slabs and the partial slabs. Full slabs are not tracked by "
"SLUB in a non debug situation."
msgstr ""

#: ../../../admin-guide/mm/slab.rst:145
msgid "Getting more performance"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:147
msgid ""
"To some degree SLUB's performance is limited by the need to take the "
"list_lock once in a while to deal with partial slabs. That overhead is "
"governed by the order of the allocation for each slab. The allocations can "
"be influenced by kernel parameters:"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:156
msgid "``slab_min_objects``"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:157
msgid ""
"allows to specify how many objects must at least fit into one slab in order "
"for the allocation order to be acceptable.  In general slub will be able to "
"perform this number of allocations on a slab without consulting centralized "
"resources (list_lock) where contention may occur."
msgstr ""

#: ../../../admin-guide/mm/slab.rst:163
msgid "``slab_min_order``"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:164
msgid ""
"specifies a minimum order of slabs. A similar effect like "
"``slab_min_objects``."
msgstr ""

#: ../../../admin-guide/mm/slab.rst:167
msgid "``slab_max_order``"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:168
msgid ""
"specified the order at which ``slab_min_objects`` should no longer be "
"checked. This is useful to avoid SLUB trying to generate super large order "
"pages to fit ``slab_min_objects`` of a slab cache with large object sizes "
"into one high order page. Setting command line parameter "
"``debug_guardpage_minorder=N`` (N > 0), forces setting ``slab_max_order`` to "
"0, what cause minimum possible order of slabs allocation."
msgstr ""

#: ../../../admin-guide/mm/slab.rst:177
msgid "``slab_strict_numa``"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:178
msgid ""
"Enables the application of memory policies on each allocation. This results "
"in more accurate placement of objects which may result in the reduction of "
"accesses to remote nodes. The default is to only apply memory policies at "
"the folio level when a new folio is acquired or a folio is retrieved from "
"the lists. Enabling this option reduces the fastpath performance of the slab "
"allocator."
msgstr ""

#: ../../../admin-guide/mm/slab.rst:187
msgid "SLUB Debug output"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:189
msgid "Here is a sample of slub debug output::"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:229
msgid ""
"If SLUB encounters a corrupted object (full detection requires the kernel to "
"be booted with slab_debug) then the following output will be dumped into the "
"syslog:"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:233
msgid "Description of the problem encountered"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:235
msgid "This will be a message in the system log starting with::"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:249
msgid ""
"(Object allocation / free information is only available if SLAB_STORE_USER "
"is set for the slab. slab_debug sets that option)"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:252
msgid "The object contents if an object was involved."
msgstr ""

#: ../../../admin-guide/mm/slab.rst:254
msgid "Various types of lines can follow the BUG SLUB line:"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:256
msgid "Bytes b4 <address>"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:-1
msgid "<bytes>"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:257
msgid ""
"Shows a few bytes before the object where the problem was detected. Can be "
"useful if the corruption does not stop with the start of the object."
msgstr ""

#: ../../../admin-guide/mm/slab.rst:261
msgid "Object <address>"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:262
msgid ""
"The bytes of the object. If the object is inactive then the bytes typically "
"contain poison values. Any non-poison value shows a corruption by a write "
"after free."
msgstr ""

#: ../../../admin-guide/mm/slab.rst:266
msgid "Redzone <address>"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:267
msgid ""
"The Redzone following the object. The Redzone is used to detect writes after "
"the object. All bytes should always have the same value. If there is any "
"deviation then it is due to a write after the object boundary."
msgstr ""

#: ../../../admin-guide/mm/slab.rst:272
msgid ""
"(Redzone information is only available if SLAB_RED_ZONE is set. slab_debug "
"sets that option)"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:275
msgid "Padding <address>"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:276
msgid ""
"Unused data to fill up the space in order to get the next object properly "
"aligned. In the debug case we make sure that there are at least 4 bytes of "
"padding. This allows the detection of writes before the object."
msgstr ""

#: ../../../admin-guide/mm/slab.rst:281
msgid "A stackdump"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:283
msgid ""
"The stackdump describes the location where the error was detected. The cause "
"of the corruption is may be more likely found by looking at the function "
"that allocated or freed the object."
msgstr ""

#: ../../../admin-guide/mm/slab.rst:287
msgid ""
"Report on how the problem was dealt with in order to ensure the continued "
"operation of the system."
msgstr ""

#: ../../../admin-guide/mm/slab.rst:290
msgid "These are messages in the system log beginning with::"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:294
msgid ""
"In the above sample SLUB found that the Redzone of an active object has been "
"overwritten. Here a string of 8 characters was written into a slab that has "
"the length of 8 characters. However, a 8 character string needs a "
"terminating 0. That zero has overwritten the first byte of the Redzone "
"field. After reporting the details of the issue encountered the FIX SLUB "
"message tells us that SLUB has restored the Redzone to its proper value and "
"then system operations continue."
msgstr ""

#: ../../../admin-guide/mm/slab.rst:303
msgid "Emergency operations"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:305
msgid ""
"Minimal debugging (sanity checks alone) can be enabled by booting with::"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:309
msgid ""
"This will be generally be enough to enable the resiliency features of slub "
"which will keep the system running even if a bad kernel component will keep "
"corrupting objects. This may be important for production systems. "
"Performance will be impacted by the sanity checks and there will be a "
"continual stream of error messages to the syslog but no additional memory "
"will be used (unlike full debugging)."
msgstr ""

#: ../../../admin-guide/mm/slab.rst:316
msgid ""
"No guarantees. The kernel component still needs to be fixed. Performance may "
"be optimized further by locating the slab that experiences corruption and "
"enabling debugging only for that cache"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:320
msgid "I.e.::"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:324
msgid ""
"If the corruption occurs by writing after the end of the object then it may "
"be advisable to enable a Redzone to avoid corrupting the beginning of other "
"objects::"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:331
msgid "Extended slabinfo mode and plotting"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:333
msgid ""
"The ``slabinfo`` tool has a special 'extended' ('-X') mode that includes:"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:334
msgid "Slabcache Totals"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:335
msgid "Slabs sorted by size (up to -N <num> slabs, default 1)"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:336
msgid "Slabs sorted by loss (up to -N <num> slabs, default 1)"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:338
msgid ""
"Additionally, in this mode ``slabinfo`` does not dynamically scale sizes (G/"
"M/K) and reports everything in bytes (this functionality is also available "
"to other slabinfo modes via '-B' option) which makes reporting more precise "
"and accurate. Moreover, in some sense the `-X' mode also simplifies the "
"analysis of slabs' behaviour, because its output can be plotted using the "
"``slabinfo-gnuplot.sh`` script. So it pushes the analysis from looking "
"through the numbers (tons of numbers) to something easier -- visual analysis."
msgstr ""

#: ../../../admin-guide/mm/slab.rst:347
msgid "To generate plots:"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:349
msgid "collect slabinfo extended records, for example::"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:353
msgid "pass stats file(-s) to ``slabinfo-gnuplot.sh`` script::"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:357
msgid ""
"The ``slabinfo-gnuplot.sh`` script will pre-processes the collected records "
"and generates 3 png files (and 3 pre-processing cache files) per STATS file: "
"- Slabcache Totals: FOO_STATS-totals.png - Slabs sorted by size: FOO_STATS-"
"slabs-by-size.png - Slabs sorted by loss: FOO_STATS-slabs-by-loss.png"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:364
msgid ""
"Another use case, when ``slabinfo-gnuplot.sh`` can be useful, is when you "
"need to compare slabs' behaviour \"prior to\" and \"after\" some code "
"modification.  To help you out there, ``slabinfo-gnuplot.sh`` script can "
"'merge' the `Slabcache Totals` sections from different measurements. To "
"visually compare N plots:"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:370
msgid "Collect as many STATS1, STATS2, .. STATSN files as you need::"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:374
msgid "Pre-process those STATS files::"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:378
msgid ""
"Execute ``slabinfo-gnuplot.sh`` in '-t' mode, passing all of the generated "
"pre-processed \\*-totals::"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:383
msgid "This will produce a single plot (png file)."
msgstr ""

#: ../../../admin-guide/mm/slab.rst:385
msgid ""
"Plots, expectedly, can be large so some fluctuations or small spikes can go "
"unnoticed. To deal with that, ``slabinfo-gnuplot.sh`` has two options to "
"'zoom-in'/'zoom-out':"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:389
msgid "``-s %d,%d`` -- overwrites the default image width and height"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:390
msgid ""
"``-r %d,%d`` -- specifies a range of samples to use (for example, in "
"``slabinfo -X >> FOO_STATS; sleep 1;`` case, using a ``-r 40,60`` range will "
"plot only samples collected between 40th and 60th seconds)."
msgstr ""

#: ../../../admin-guide/mm/slab.rst:397
msgid "DebugFS files for SLUB"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:399
msgid ""
"For more information about current state of SLUB caches with the user "
"tracking debug option enabled, debugfs files are available, typically under /"
"sys/kernel/debug/slab/<cache>/ (created only for caches with enabled user "
"tracking). There are 2 types of these files with the following debug "
"information:"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:405
msgid "alloc_traces::"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:436
msgid "free_traces::"
msgstr ""

#: ../../../admin-guide/mm/slab.rst:468
msgid "Christoph Lameter, May 30, 2007 Sergey Senozhatsky, October 23, 2015"
msgstr ""
