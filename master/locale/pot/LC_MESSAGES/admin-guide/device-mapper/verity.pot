# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../admin-guide/device-mapper/verity.rst:3
msgid "dm-verity"
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:5
msgid ""
"Device-Mapper's \"verity\" target provides transparent integrity checking of "
"block devices using a cryptographic digest provided by the kernel crypto "
"API. This target is read-only."
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:10
msgid "Construction Parameters"
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:20
msgid "<version>"
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:21
msgid "This is the type of the on-disk hash format."
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:23
msgid "0 is the original format used in the Chromium OS."
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:24
msgid ""
"The salt is appended when hashing, digests are stored continuously and the "
"rest of the block is padded with zeroes."
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:27
msgid "1 is the current format that should be used for new devices."
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:28
msgid ""
"The salt is prepended when hashing and each digest is padded with zeroes to "
"the power of two."
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:31
msgid "<dev>"
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:32
msgid ""
"This is the device containing data, the integrity of which needs to be "
"checked.  It may be specified as a path, like /dev/sdaX, or a device number, "
"<major>:<minor>."
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:36
msgid "<hash_dev>"
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:37
msgid ""
"This is the device that supplies the hash tree data.  It may be specified "
"similarly to the device path and may be the same device.  If the same device "
"is used, the hash_start should be outside the configured dm-verity device."
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:42
msgid "<data_block_size>"
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:43
msgid ""
"The block size on a data device in bytes. Each block corresponds to one "
"digest on the hash device."
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:46
msgid "<hash_block_size>"
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:47
msgid "The size of a hash block in bytes."
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:49
msgid "<num_data_blocks>"
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:50
msgid ""
"The number of data blocks on the data device.  Additional blocks are "
"inaccessible.  You can place hashes to the same partition as data, in this "
"case hashes are placed after <num_data_blocks>."
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:54
msgid "<hash_start_block>"
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:55
msgid ""
"This is the offset, in <hash_block_size>-blocks, from the start of hash_dev "
"to the root block of the hash tree."
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:58
msgid "<algorithm>"
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:59
msgid ""
"The cryptographic hash algorithm used for this device.  This should be the "
"name of the algorithm, like \"sha1\"."
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:62
msgid "<digest>"
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:63
msgid ""
"The hexadecimal encoding of the cryptographic hash of the root hash block "
"and the salt.  This hash should be trusted as there is no other authenticity "
"beyond this point."
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:67
msgid "<salt>"
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:68
msgid "The hexadecimal encoding of the salt value."
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:70
msgid "<#opt_params>"
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:71
msgid ""
"Number of optional parameters. If there are no optional parameters, the "
"optional parameters section can be skipped or #opt_params can be zero. "
"Otherwise #opt_params is the number of following arguments."
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:75
msgid "Example of optional parameters section:"
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:76
msgid "1 ignore_corruption"
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:78
msgid "ignore_corruption"
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:79
msgid "Log corrupted blocks, but allow read operations to proceed normally."
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:81
msgid "restart_on_corruption"
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:82
msgid ""
"Restart the system when a corrupted block is discovered. This option is not "
"compatible with ignore_corruption and requires user space support to avoid "
"restart loops."
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:86
msgid "panic_on_corruption"
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:87
msgid ""
"Panic the device when a corrupted block is discovered. This option is not "
"compatible with ignore_corruption and restart_on_corruption."
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:90
msgid "restart_on_error"
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:91
msgid ""
"Restart the system when an I/O error is detected. This option can be "
"combined with the restart_on_corruption option."
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:94
msgid "panic_on_error"
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:95
msgid ""
"Panic the device when an I/O error is detected. This option is not "
"compatible with the restart_on_error option but can be combined with the "
"panic_on_corruption option."
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:99
msgid "ignore_zero_blocks"
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:100
msgid ""
"Do not verify blocks that are expected to contain zeroes and always return "
"zeroes instead. This may be useful if the partition contains unused blocks "
"that are not guaranteed to contain zeroes."
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:104
msgid "use_fec_from_device <fec_dev>"
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:105
msgid ""
"Use forward error correction (FEC) to recover from corruption if hash "
"verification fails. Use encoding data from the specified device. This may be "
"the same device where data and hash blocks reside, in which case fec_start "
"must be outside data and hash areas."
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:110
msgid ""
"If the encoding data covers additional metadata, it must be accessible on "
"the hash device after the hash blocks."
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:113
msgid ""
"Note: block sizes for data and hash devices must match. Also, if the verity "
"<dev> is encrypted the <fec_dev> should be too."
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:116
msgid "fec_roots <num>"
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:117
msgid ""
"Number of generator roots. This equals to the number of parity bytes in the "
"encoding data. For example, in RS(M, N) encoding, the number of roots is M-N."
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:121
msgid "fec_blocks <num>"
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:122
msgid ""
"The number of encoding data blocks on the FEC device. The block size for the "
"FEC device is <data_block_size>."
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:125
msgid "fec_start <offset>"
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:126
msgid ""
"This is the offset, in <data_block_size> blocks, from the start of the FEC "
"device to the beginning of the encoding data."
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:129
msgid "check_at_most_once"
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:130
msgid ""
"Verify data blocks only the first time they are read from the data device, "
"rather than every time.  This reduces the overhead of dm-verity so that it "
"can be used on systems that are memory and/or CPU constrained.  However, it "
"provides a reduced level of security because only offline tampering of the "
"data device's content will be detected, not online tampering."
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:136
msgid ""
"Hash blocks are still verified each time they are read from the hash device, "
"since verification of hash blocks is less performance critical than data "
"blocks, and a hash block will not be verified any more after all the data "
"blocks it covers have been verified anyway."
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:141
msgid "root_hash_sig_key_desc <key_description>"
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:142
msgid ""
"This is the description of the USER_KEY that the kernel will lookup to get "
"the pkcs7 signature of the roothash. The pkcs7 signature is used to validate "
"the root hash during the creation of the device mapper block device. "
"Verification of roothash depends on the config DM_VERITY_VERIFY_ROOTHASH_SIG "
"being set in the kernel.  The signatures are checked against the builtin "
"trusted keyring by default, or the secondary trusted keyring if "
"DM_VERITY_VERIFY_ROOTHASH_SIG_SECONDARY_KEYRING is set.  The secondary "
"trusted keyring includes by default the builtin trusted keyring, and it can "
"also gain new certificates at run time if they are signed by a certificate "
"already in the secondary trusted keyring."
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:153
msgid "try_verify_in_tasklet"
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:154
msgid ""
"If verity hashes are in cache and the IO size does not exceed the limit, "
"verify data blocks in bottom half instead of workqueue. This option can "
"reduce IO latency. The size limits can be configured via /sys/module/"
"dm_verity/parameters/use_bh_bytes. The four parameters correspond to limits "
"for IOPRIO_CLASS_NONE, IOPRIO_CLASS_RT, IOPRIO_CLASS_BE and "
"IOPRIO_CLASS_IDLE in turn. For example: <none>,<rt>,<be>,<idle> "
"4096,4096,4096,4096"
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:165
msgid "Theory of operation"
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:167
msgid ""
"dm-verity is meant to be set up as part of a verified boot path.  This may "
"be anything ranging from a boot using tboot or trustedgrub to just booting "
"from a known-good device (like a USB drive or CD)."
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:171
msgid ""
"When a dm-verity device is configured, it is expected that the caller has "
"been authenticated in some way (cryptographic signatures, etc). After "
"instantiation, all hashes will be verified on-demand during disk access.  If "
"they cannot be verified up to the root node of the tree, the root hash, then "
"the I/O will fail.  This should detect tampering with any data on the device "
"and the hash data."
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:178
msgid ""
"Cryptographic hashes are used to assert the integrity of the device on a per-"
"block basis. This allows for a lightweight hash computation on first read "
"into the page cache. Block hashes are stored linearly, aligned to the "
"nearest block size."
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:183
msgid ""
"If forward error correction (FEC) support is enabled any recovery of "
"corrupted data will be verified using the cryptographic hash of the "
"corresponding data. This is why combining error correction with integrity "
"checking is essential."
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:189
msgid "Hash Tree"
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:191
msgid ""
"Each node in the tree is a cryptographic hash.  If it is a leaf node, the "
"hash of some data block on disk is calculated. If it is an intermediary "
"node, the hash of a number of child nodes is calculated."
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:195
msgid ""
"Each entry in the tree is a collection of neighboring nodes that fit in one "
"block.  The number is determined based on block_size and the size of the "
"selected cryptographic digest algorithm.  The hashes are linearly-ordered in "
"this entry and any unaligned trailing space is ignored but included when "
"calculating the parent node."
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:201
msgid "The tree looks something like:"
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:203
msgid "alg = sha256, num_blocks = 32768, block_size = 4096"
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:217
msgid "On-disk format"
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:219
msgid ""
"The verity kernel code does not read the verity metadata on-disk header. It "
"only reads the hash blocks which directly follow the header. It is expected "
"that a user-space tool will verify the integrity of the verity header."
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:224
msgid ""
"Alternatively, the header can be omitted and the dmsetup parameters can be "
"passed via the kernel command-line in a rooted chain of trust where the "
"command-line is verified."
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:228
msgid ""
"Directly following the header (and with sector number padded to the next "
"hash block boundary) are the hash blocks which are stored a depth at a time "
"(starting from the root), sorted in order of increasing index."
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:232
msgid ""
"The full specification of kernel parameters and on-disk metadata format is "
"available at the cryptsetup project's wiki page"
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:235
msgid "https://gitlab.com/cryptsetup/cryptsetup/wikis/DMVerity"
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:238
msgid "Status"
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:239
msgid ""
"V (for Valid) is returned if every check performed so far was valid. If any "
"check failed, C (for Corruption) is returned."
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:243
msgid "Example"
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:244
msgid "Set up a device::"
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:251
msgid ""
"A command line tool veritysetup is available to compute or verify the hash "
"tree or activate the kernel device. This is available from the cryptsetup "
"upstream repository https://gitlab.com/cryptsetup/cryptsetup/ (as a "
"libcryptsetup extension)."
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:256
msgid "Create hash on the device::"
msgstr ""

#: ../../../admin-guide/device-mapper/verity.rst:262
msgid "Activate the device::"
msgstr ""
