# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../admin-guide/device-mapper/snapshot.rst:3
msgid "Device-mapper snapshot support"
msgstr ""

#: ../../../admin-guide/device-mapper/snapshot.rst:5
msgid "Device-mapper allows you, without massive data copying:"
msgstr ""

#: ../../../admin-guide/device-mapper/snapshot.rst:7
msgid ""
"To create snapshots of any block device i.e. mountable, saved states of the "
"block device which are also writable without interfering with the original "
"content;"
msgstr ""

#: ../../../admin-guide/device-mapper/snapshot.rst:10
msgid ""
"To create device \"forks\", i.e. multiple different versions of the same "
"data stream."
msgstr ""

#: ../../../admin-guide/device-mapper/snapshot.rst:12
msgid ""
"To merge a snapshot of a block device back into the snapshot's origin device."
msgstr ""

#: ../../../admin-guide/device-mapper/snapshot.rst:15
msgid ""
"In the first two cases, dm copies only the chunks of data that get changed "
"and uses a separate copy-on-write (COW) block device for storage."
msgstr ""

#: ../../../admin-guide/device-mapper/snapshot.rst:19
msgid ""
"For snapshot merge the contents of the COW storage are merged back into the "
"origin device."
msgstr ""

#: ../../../admin-guide/device-mapper/snapshot.rst:23
msgid ""
"There are three dm targets available: snapshot, snapshot-origin, and "
"snapshot-merge."
msgstr ""

#: ../../../admin-guide/device-mapper/snapshot.rst:26
msgid "snapshot-origin <origin>"
msgstr ""

#: ../../../admin-guide/device-mapper/snapshot.rst:28
msgid ""
"which will normally have one or more snapshots based on it. Reads will be "
"mapped directly to the backing device. For each write, the original data "
"will be saved in the <COW device> of each snapshot to keep its visible "
"content unchanged, at least until the <COW device> fills up."
msgstr ""

#: ../../../admin-guide/device-mapper/snapshot.rst:34
msgid ""
"snapshot <origin> <COW device> <persistent?> <chunksize> [<# feature args> "
"[<arg>]*]"
msgstr ""

#: ../../../admin-guide/device-mapper/snapshot.rst:37
msgid ""
"A snapshot of the <origin> block device is created. Changed chunks of "
"<chunksize> sectors will be stored on the <COW device>.  Writes will only go "
"to the <COW device>.  Reads will come from the <COW device> or from <origin> "
"for unchanged data.  <COW device> will often be smaller than the origin and "
"if it fills up the snapshot will become useless and be disabled, returning "
"errors.  So it is important to monitor the amount of free space and expand "
"the <COW device> before it fills up."
msgstr ""

#: ../../../admin-guide/device-mapper/snapshot.rst:45
msgid ""
"<persistent?> is P (Persistent) or N (Not persistent - will not survive "
"after reboot).  O (Overflow) can be added as a persistent store option to "
"allow userspace to advertise its support for seeing \"Overflow\" in the "
"snapshot status.  So supported store types are \"P\", \"PO\" and \"N\"."
msgstr ""

#: ../../../admin-guide/device-mapper/snapshot.rst:50
msgid ""
"The difference between persistent and transient is with transient snapshots "
"less metadata must be saved on disk - they can be kept in memory by the "
"kernel."
msgstr ""

#: ../../../admin-guide/device-mapper/snapshot.rst:54
msgid ""
"When loading or unloading the snapshot target, the corresponding snapshot-"
"origin or snapshot-merge target must be suspended. A failure to suspend the "
"origin target could result in data corruption."
msgstr ""

#: ../../../admin-guide/device-mapper/snapshot.rst:58
msgid "Optional features:"
msgstr ""

#: ../../../admin-guide/device-mapper/snapshot.rst:60
msgid ""
"discard_zeroes_cow - a discard issued to the snapshot device that maps to "
"entire chunks to will zero the corresponding exception(s) in the snapshot's "
"exception store."
msgstr ""

#: ../../../admin-guide/device-mapper/snapshot.rst:64
msgid ""
"discard_passdown_origin - a discard to the snapshot device is passed down to "
"the snapshot-origin's underlying device.  This doesn't cause copy-out to the "
"snapshot exception store because the snapshot-origin target is bypassed."
msgstr ""

#: ../../../admin-guide/device-mapper/snapshot.rst:69
msgid ""
"The discard_passdown_origin feature depends on the discard_zeroes_cow "
"feature being enabled."
msgstr ""

#: ../../../admin-guide/device-mapper/snapshot.rst:73
msgid ""
"snapshot-merge <origin> <COW device> <persistent> <chunksize> [<# feature "
"args> [<arg>]*]"
msgstr ""

#: ../../../admin-guide/device-mapper/snapshot.rst:76
msgid ""
"takes the same table arguments as the snapshot target except it only works "
"with persistent snapshots.  This target assumes the role of the \"snapshot-"
"origin\" target and must not be loaded if the \"snapshot-origin\" is still "
"present for <origin>."
msgstr ""

#: ../../../admin-guide/device-mapper/snapshot.rst:81
msgid ""
"Creates a merging snapshot that takes control of the changed chunks stored "
"in the <COW device> of an existing snapshot, through a handover procedure, "
"and merges these chunks back into the <origin>.  Once merging has started "
"(in the background) the <origin> may be opened and the merge will continue "
"while I/O is flowing to it.  Changes to the <origin> are deferred until the "
"merging snapshot's corresponding chunk(s) have been merged.  Once merging "
"has started the snapshot device, associated with the \"snapshot\" target, "
"will return -EIO when accessed."
msgstr ""

#: ../../../admin-guide/device-mapper/snapshot.rst:92
msgid "How snapshot is used by LVM2"
msgstr ""

#: ../../../admin-guide/device-mapper/snapshot.rst:93
msgid ""
"When you create the first LVM2 snapshot of a volume, four dm devices are "
"used:"
msgstr ""

#: ../../../admin-guide/device-mapper/snapshot.rst:95
msgid "a device containing the original mapping table of the source volume;"
msgstr ""

#: ../../../admin-guide/device-mapper/snapshot.rst:96
msgid "a device used as the <COW device>;"
msgstr ""

#: ../../../admin-guide/device-mapper/snapshot.rst:97
msgid ""
"a \"snapshot\" device, combining #1 and #2, which is the visible snapshot "
"volume;"
msgstr ""

#: ../../../admin-guide/device-mapper/snapshot.rst:99
msgid ""
"the \"original\" volume (which uses the device number used by the original "
"source volume), whose table is replaced by a \"snapshot-origin\" mapping "
"from device #1."
msgstr ""

#: ../../../admin-guide/device-mapper/snapshot.rst:103
msgid "A fixed naming scheme is used, so with the following commands::"
msgstr ""

#: ../../../admin-guide/device-mapper/snapshot.rst:108
msgid "we'll have this situation (with volumes in above order)::"
msgstr ""

#: ../../../admin-guide/device-mapper/snapshot.rst:125
msgid "How snapshot-merge is used by LVM2"
msgstr ""

#: ../../../admin-guide/device-mapper/snapshot.rst:126
msgid ""
"A merging snapshot assumes the role of the \"snapshot-origin\" while "
"merging.  As such the \"snapshot-origin\" is replaced with \"snapshot-"
"merge\".  The \"-real\" device is not changed and the \"-cow\" device is "
"renamed to <origin name>-cow to aid LVM2's cleanup of the merging snapshot "
"after it completes.  The \"snapshot\" that hands over its COW device to the "
"\"snapshot-merge\" is deactivated (unless using lvchange --refresh); but if "
"it is left active it will simply return I/O errors."
msgstr ""

#: ../../../admin-guide/device-mapper/snapshot.rst:134
msgid "A snapshot will merge into its origin with the following command::"
msgstr ""

#: ../../../admin-guide/device-mapper/snapshot.rst:138
msgid "we'll now have this situation::"
msgstr ""

#: ../../../admin-guide/device-mapper/snapshot.rst:153
msgid "How to determine when a merging is complete"
msgstr ""

#: ../../../admin-guide/device-mapper/snapshot.rst:154
msgid "The snapshot-merge and snapshot status lines end with:"
msgstr ""

#: ../../../admin-guide/device-mapper/snapshot.rst:156
msgid "<sectors_allocated>/<total_sectors> <metadata_sectors>"
msgstr ""

#: ../../../admin-guide/device-mapper/snapshot.rst:158
msgid ""
"Both <sectors_allocated> and <total_sectors> include both data and metadata. "
"During merging, the number of sectors allocated gets smaller and smaller.  "
"Merging has finished when the number of sectors holding data is zero, in "
"other words <sectors_allocated> == <metadata_sectors>."
msgstr ""

#: ../../../admin-guide/device-mapper/snapshot.rst:163
msgid ""
"Here is a practical example (using a hybrid of lvm and dmsetup commands)::"
msgstr ""

#: ../../../admin-guide/device-mapper/snapshot.rst:190
msgid "Merging has finished."
msgstr ""
