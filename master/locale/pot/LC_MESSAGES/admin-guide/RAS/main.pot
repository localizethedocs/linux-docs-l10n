# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../admin-guide/RAS/main.rst:6
msgid "Reliability, Availability and Serviceability (RAS)"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:8
msgid ""
"This documents different aspects of the RAS functionality present in the "
"kernel."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:12
msgid "RAS concepts"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:14
msgid ""
"Reliability, Availability and Serviceability (RAS) is a concept used on "
"servers meant to measure their robustness."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:17
msgid "Reliability"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:18
msgid "is the probability that a system will produce correct outputs."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:20
msgid "Generally measured as Mean Time Between Failures (MTBF)"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:21
msgid ""
"Enhanced by features that help to avoid, detect and repair hardware faults"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:23
msgid "Availability"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:24
msgid "is the probability that a system is operational at a given time"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:26
msgid "Generally measured as a percentage of downtime per a period of time"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:27
msgid "Often uses mechanisms to detect and correct hardware faults in runtime;"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:30
msgid "Serviceability (or maintainability)"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:31
msgid ""
"is the simplicity and speed with which a system can be repaired or maintained"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:34
msgid "Generally measured on Mean Time Between Repair (MTBR)"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:37
msgid "Improving RAS"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:39
msgid ""
"In order to reduce systems downtime, a system should be capable of detecting "
"hardware errors, and, when possible correcting them in runtime. It should "
"also provide mechanisms to detect hardware degradation, in order to warn the "
"system administrator to take the action of replacing a component before it "
"causes data loss or system downtime."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:45
msgid "Among the monitoring measures, the most usual ones include:"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:47
msgid "CPU – detect errors at instruction execution and at L1/L2/L3 caches;"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:48
msgid "Memory – add error correction logic (ECC) to detect and correct errors;"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:49
msgid "I/O – add CRC checksums for transferred data;"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:50
msgid ""
"Storage – RAID, journal file systems, checksums, Self-Monitoring, Analysis "
"and Reporting Technology (SMART)."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:53
msgid ""
"By monitoring the number of occurrences of error detections, it is possible "
"to identify if the probability of hardware errors is increasing, and, on "
"such case, do a preventive maintenance to replace a degraded component while "
"those errors are correctable."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:59
msgid "Types of errors"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:61
msgid ""
"Most mechanisms used on modern systems use technologies like Hamming Codes "
"that allow error correction when the number of errors on a bit packet is "
"below a threshold. If the number of errors is above, those mechanisms can "
"indicate with a high degree of confidence that an error happened, but they "
"can't correct."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:67
msgid ""
"Also, sometimes an error occur on a component that it is not used. For "
"example, a part of the memory that it is not currently allocated."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:70
msgid "That defines some categories of errors:"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:72
msgid ""
"**Correctable Error (CE)** - the error detection mechanism detected and "
"corrected the error. Such errors are usually not fatal, although some Kernel "
"mechanisms allow the system administrator to consider them as fatal."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:76
msgid ""
"**Uncorrected Error (UE)** - the amount of errors happened above the error "
"correction threshold, and the system was unable to auto-correct."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:79
msgid ""
"**Fatal Error** - when an UE error happens on a critical component of the "
"system (for example, a piece of the Kernel got corrupted by an UE), the only "
"reliable way to avoid data corruption is to hang or reboot the machine."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:83
msgid ""
"**Non-fatal Error** - when an UE error happens on an unused component, like "
"a CPU in power down state or an unused memory bank, the system may still "
"run, eventually replacing the affected hardware by a hot spare, if available."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:88
msgid ""
"Also, when an error happens on a userspace process, it is also possible to "
"kill such process and let userspace restart it."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:91
msgid ""
"The mechanism for handling non-fatal errors is usually complex and may "
"require the help of some userspace application, in order to apply the policy "
"desired by the system administrator."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:96
msgid "Identifying a bad hardware component"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:98
msgid ""
"Just detecting a hardware flaw is usually not enough, as the system needs to "
"pinpoint to the minimal replaceable unit (MRU) that should be exchanged to "
"make the hardware reliable again."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:102
msgid ""
"So, it requires not only error logging facilities, but also mechanisms that "
"will translate the error message to the silkscreen or component label for "
"the MRU."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:106
msgid ""
"Typically, it is very complex for memory, as modern CPUs interlace memory "
"from different memory modules, in order to provide a better performance. The "
"DMI BIOS usually have a list of memory module labels, with can be obtained "
"using the ``dmidecode`` tool. For example, on a desktop machine, it shows::"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:125
msgid ""
"On the above example, a DDR4 SO-DIMM memory module is located at the "
"system's memory labeled as \"BANK 0\", as given by the *bank locator* field. "
"Please notice that, on such system, the *total width* is equal to the *data "
"width*. It means that such memory module doesn't have error detection/"
"correction mechanisms."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:131
msgid ""
"Unfortunately, not all systems use the same field to specify the memory "
"bank. On this example, from an older server, ``dmidecode`` shows::"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:150
msgid ""
"There, the DDR3 RDIMM memory module is located at the system's memory "
"labeled as \"DIMM_A1\", as given by the *locator* field. Please notice that "
"this memory module has 64 bits of *data width* and 72 bits of *total width*. "
"So, it has 8 extra bits to be used by error detection and correction "
"mechanisms. Such kind of memory is called Error-correcting code memory (ECC "
"memory)."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:156
msgid ""
"To make things even worse, it is not uncommon that systems with different "
"labels on their system's board to use exactly the same BIOS, meaning that "
"the labels provided by the BIOS won't match the real ones."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:161
msgid "ECC memory"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:163
msgid ""
"As mentioned in the previous section, ECC memory has extra bits to be used "
"for error correction. In the above example, a memory module has 64 bits of "
"*data width*, and 72 bits of *total width*.  The extra 8 bits which are used "
"for the error detection and correction mechanisms are referred to as the "
"*syndrome*\\ [#f1]_\\ [#f2]_."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:169
msgid ""
"So, when the cpu requests the memory controller to write a word with *data "
"width*, the memory controller calculates the *syndrome* in real time, using "
"Hamming code, or some other error correction code, like SECDED+, producing a "
"code with *total width* size. Such code is then written on the memory "
"modules."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:175
msgid ""
"At read, the *total width* bits code is converted back, using the same ECC "
"code used on write, producing a word with *data width* and a *syndrome*. The "
"word with *data width* is sent to the CPU, even when errors happen."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:179
msgid ""
"The memory controller also looks at the *syndrome* in order to check if "
"there was an error, and if the ECC code was able to fix such error. If the "
"error was corrected, a Corrected Error (CE) happened. If not, an Uncorrected "
"Error (UE) happened."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:184
msgid ""
"The information about the CE/UE errors is stored on some special registers "
"at the memory controller and can be accessed by reading such registers, "
"either by BIOS, by some special CPUs or by Linux EDAC driver. On x86 64 bit "
"CPUs, such errors can also be retrieved via the Machine Check Architecture "
"(MCA)\\ [#f3]_."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:190
msgid ""
"Please notice that several memory controllers allow operation on a mode "
"called \"Lock-Step\", where it groups two memory modules together, doing 128-"
"bit reads/writes. That gives 16 bits for error correction, with "
"significantly improves the error correction mechanism, at the expense that, "
"when an error happens, there's no way to know what memory module is to "
"blame. So, it has to blame both memory modules."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:197
msgid ""
"Some memory controllers also allow using memory in mirror mode. On such "
"mode, the same data is written to two memory modules. At read, the system "
"checks both memory modules, in order to check if both provide identical "
"data. On such configuration, when an error happens, there's no way to know "
"what memory module is to blame. So, it has to blame both memory modules (or "
"4 memory modules, if the system is also on Lock-step mode)."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:205
msgid ""
"For more details about the Machine Check Architecture (MCA), please read "
"Documentation/arch/x86/x86_64/machinecheck.rst at the Kernel tree."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:209
msgid "EDAC - Error Detection And Correction"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:213
msgid ""
"\"bluesmoke\" was the name for this device driver subsystem when it was "
"\"out-of-tree\" and maintained at http://bluesmoke.sourceforge.net. That "
"site is mostly archaic now and can be used only for historical purposes."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:218
msgid ""
"When the subsystem was pushed upstream for the first time, on Kernel 2.6.16, "
"it was renamed to ``EDAC``."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:222
msgid "Purpose"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:224
msgid ""
"The ``edac`` kernel module's goal is to detect and report hardware errors "
"that occur within the computer system running under linux."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:228
msgid "Memory"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:230
msgid ""
"Memory Correctable Errors (CE) and Uncorrectable Errors (UE) are the primary "
"errors being harvested. These types of errors are harvested by the "
"``edac_mc`` device."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:234
msgid ""
"Detecting CE events, then harvesting those events and reporting them, "
"**can** but must not necessarily be a predictor of future UE events. With CE "
"events only, the system can and will continue to operate as no data has been "
"damaged yet."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:239
msgid ""
"However, preventive maintenance and proactive part replacement of memory "
"modules exhibiting CEs can reduce the likelihood of the dreaded UE events "
"and system panics."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:244
msgid "Other hardware elements"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:246
msgid ""
"A new feature for EDAC, the ``edac_device`` class of device, was added in "
"the 2.6.23 version of the kernel."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:249
msgid ""
"This new device type allows for non-memory type of ECC hardware detectors to "
"have their states harvested and presented to userspace via the sysfs "
"interface."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:253
msgid ""
"Some architectures have ECC detectors for L1, L2 and L3 caches, along with "
"DMA engines, fabric switches, main data path switches, interconnections, and "
"various other hardware data paths. If the hardware reports it, then a "
"edac_device device probably can be constructed to harvest and present that "
"to userspace."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:261
msgid "PCI bus scanning"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:263
msgid ""
"In addition, PCI devices are scanned for PCI Bus Parity and SERR Errors in "
"order to determine if errors are occurring during data transfers."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:266
msgid ""
"The presence of PCI Parity errors must be examined with a grain of salt. "
"There are several add-in adapters that do **not** follow the PCI "
"specification with regards to Parity generation and reporting. The "
"specification says the vendor should tie the parity status bits to 0 if they "
"do not intend to generate parity.  Some vendors do not do this, and thus the "
"parity bit can \"float\" giving false positives."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:273
msgid ""
"There is a PCI device attribute located in sysfs that is checked by the EDAC "
"PCI scanning code. If that attribute is set, PCI parity/error scanning is "
"skipped for that device. The attribute is::"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:279
msgid ""
"and is located in ``/sys/devices/pci<XXX>/0000:XX:YY.Z`` directories for PCI "
"devices."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:284
msgid "Versioning"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:286
msgid ""
"EDAC is composed of a \"core\" module (``edac_core.ko``) and several Memory "
"Controller (MC) driver modules. On a given system, the CORE is loaded and "
"one MC driver will be loaded. Both the CORE and the MC driver (or "
"``edac_device`` driver) have individual versions that reflect current "
"release level of their respective modules."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:292
msgid ""
"Thus, to \"report\" on what version a system is running, one must report "
"both the CORE's and the MC driver's versions."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:297
msgid "Loading"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:299
msgid ""
"If ``edac`` was statically linked with the kernel then no loading is "
"necessary. If ``edac`` was built as modules then simply modprobe the "
"``edac`` pieces that you need. You should be able to modprobe hardware-"
"specific modules and have the dependencies load the necessary core modules."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:305
msgid "Example::"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:309
msgid ""
"loads both the ``amd76x_edac.ko`` memory controller module and the ``edac_mc."
"ko`` core module."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:314
msgid "Sysfs interface"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:316
msgid ""
"EDAC presents a ``sysfs`` interface for control and reporting purposes. It "
"lives in the /sys/devices/system/edac directory."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:319
msgid "Within this directory there currently reside 2 components:"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:322
msgid "mc"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:322
msgid "memory controller(s) system"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:323
msgid "pci"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:323
msgid "PCI control and status system"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:329
msgid "Memory Controller (mc) Model"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:331
msgid ""
"Each ``mc`` device controls a set of memory modules [#f4]_. These modules "
"are laid out in a Chip-Select Row (``csrowX``) and Channel table (``chX``). "
"There can be multiple csrows and multiple channels."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:335
msgid ""
"Nowadays, the term DIMM (Dual In-line Memory Module) is widely used to refer "
"to a memory module, although there are other memory packaging alternatives, "
"like SO-DIMM, SIMM, etc. The UEFI specification (Version 2.7) defines a "
"memory module in the Common Platform Error Record (CPER) section to be an "
"SMBIOS Memory Device (Type 17). Along this document, and inside the EDAC "
"subsystem, the term \"dimm\" is used for all memory modules, even when they "
"use a different kind of packaging."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:344
msgid ""
"Memory controllers allow for several csrows, with 8 csrows being a typical "
"value. Yet, the actual number of csrows depends on the layout of a given "
"motherboard, memory controller and memory module characteristics."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:348
msgid ""
"Dual channels allow for dual data length (e. g. 128 bits, on 64 bit systems) "
"data transfers to/from the CPU from/to memory. Some newer chipsets allow for "
"more than 2 channels, like Fully Buffered DIMMs (FB-DIMMs) memory "
"controllers. The following example will assume 2 channels:"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:354
msgid "CS Rows"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:354
msgid "Channels"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:356
msgid "``ch0``"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:356
msgid "``ch1``"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:358
msgid "**DIMM_A0**"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:358
msgid "**DIMM_B0**"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:360
msgid "``csrow0``"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:360 ../../../admin-guide/RAS/main.rst:366
msgid "rank0"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:362
msgid "``csrow1``"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:362 ../../../admin-guide/RAS/main.rst:368
msgid "rank1"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:364
msgid "**DIMM_A1**"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:364
msgid "**DIMM_B1**"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:366
msgid "``csrow2``"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:368
msgid "``csrow3``"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:371
msgid ""
"In the above example, there are 4 physical slots on the motherboard for "
"memory DIMMs:"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:375
msgid "DIMM_A0"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:375
msgid "DIMM_B0"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:377
msgid "DIMM_A1"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:377
msgid "DIMM_B1"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:380
msgid ""
"Labels for these slots are usually silk-screened on the motherboard. Slots "
"labeled ``A`` are channel 0 in this example. Slots labeled ``B`` are channel "
"1. Notice that there are two csrows possible on a physical DIMM. These "
"csrows are allocated their csrow assignment based on the slot into which the "
"memory DIMM is placed. Thus, when 1 DIMM is placed in each Channel, the "
"csrows cross both DIMMs."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:387
msgid ""
"Memory DIMMs come single or dual \"ranked\". A rank is a populated csrow. In "
"the example above 2 dual ranked DIMMs are similarly placed. Thus, both "
"csrow0 and csrow1 are populated. On the other hand, when 2 single ranked "
"DIMMs are placed in slots DIMM_A0 and DIMM_B0, then they will have just one "
"csrow (csrow0) and csrow1 will be empty. The pattern repeats itself for "
"csrow2 and csrow3. Also note that some memory controllers don't have any "
"logic to identify the memory module, see ``rankX`` directories below."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:396
msgid ""
"The representation of the above is reflected in the directory tree in EDAC's "
"sysfs interface. Starting in directory ``/sys/devices/system/edac/mc``, each "
"memory controller will be represented by its own ``mcX`` directory, where "
"``X`` is the index of the MC::"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:409
msgid ""
"Under each ``mcX`` directory each ``csrowX`` is again represented by a "
"``csrowX``, where ``X`` is the csrow index::"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:419
msgid ""
"Notice that there is no csrow1, which indicates that csrow0 is composed of a "
"single ranked DIMMs. This should also apply in both Channels, in order to "
"have dual-channel mode be operational. Since both csrow2 and csrow3 are "
"populated, this indicates a dual ranked set of DIMMs for channels 0 and 1."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:425
msgid ""
"Within each of the ``mcX`` and ``csrowX`` directories are several EDAC "
"control and attribute files."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:429
msgid "``mcX`` directories"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:431
msgid ""
"In ``mcX`` directories are EDAC control and attribute files for this ``X`` "
"instance of the memory controllers."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:434
msgid "For a description of the sysfs API, please see:"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:436
msgid "Documentation/ABI/testing/sysfs-devices-edac"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:440
msgid "``dimmX`` or ``rankX`` directories"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:442
msgid ""
"The recommended way to use the EDAC subsystem is to look at the information "
"provided by the ``dimmX`` or ``rankX`` directories [#f5]_."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:445
msgid ""
"A typical EDAC system has the following structure under ``/sys/devices/"
"system/edac/``\\ [#f6]_::"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:495
msgid ""
"In the ``dimmX`` directories are EDAC control and attribute files for this "
"``X`` memory module:"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:498
msgid "``size`` - Total memory managed by this csrow attribute file"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:500 ../../../admin-guide/RAS/main.rst:612
msgid ""
"This attribute file displays, in count of megabytes, the memory that this "
"csrow contains."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:503
msgid "``dimm_ue_count`` - Uncorrectable Errors count attribute file"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:505
msgid ""
"This attribute file displays the total count of uncorrectable errors that "
"have occurred on this DIMM. If panic_on_ue is set this counter will not have "
"a chance to increment, since EDAC will panic the system."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:510
msgid "``dimm_ce_count`` - Correctable Errors count attribute file"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:512
msgid ""
"This attribute file displays the total count of correctable errors that have "
"occurred on this DIMM. This count is very important to examine. CEs provide "
"early indications that a DIMM is beginning to fail. This count field should "
"be monitored for non-zero values and report such information to the system "
"administrator."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:519
msgid "``dimm_dev_type``  - Device type attribute file"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:521 ../../../admin-guide/RAS/main.rst:634
msgid ""
"This attribute file will display what type of DRAM device is being utilized "
"on this DIMM. Examples:"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:525 ../../../admin-guide/RAS/main.rst:638
msgid "x1"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:526 ../../../admin-guide/RAS/main.rst:639
msgid "x2"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:527 ../../../admin-guide/RAS/main.rst:640
msgid "x4"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:528 ../../../admin-guide/RAS/main.rst:641
msgid "x8"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:530
msgid "``dimm_edac_mode`` - EDAC Mode of operation attribute file"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:532 ../../../admin-guide/RAS/main.rst:628
msgid ""
"This attribute file will display what type of Error detection and correction "
"is being utilized."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:535
msgid "``dimm_label`` - memory module label control file"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:537 ../../../admin-guide/RAS/main.rst:659
#: ../../../admin-guide/RAS/main.rst:688
msgid ""
"This control file allows this DIMM to have a label assigned to it. With this "
"label in the module, when errors occur the output can provide the DIMM label "
"in the system log. This becomes vital for panic events to isolate the cause "
"of the UE event."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:543 ../../../admin-guide/RAS/main.rst:665
#: ../../../admin-guide/RAS/main.rst:694
msgid ""
"DIMM Labels must be assigned after booting, with information that correctly "
"identifies the physical slot with its silk screen label. This information is "
"currently very motherboard specific and determination of this information "
"must occur in userland at this time."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:549
msgid "``dimm_location`` - location of the memory module"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:551
msgid ""
"The location can have up to 3 levels, and describe how the memory controller "
"identifies the location of a memory module. Depending on the type of memory "
"and memory controller, it can be:"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:556
msgid ""
"*csrow* and *channel* - used when the memory controller doesn't identify a "
"single DIMM - e. g. in ``rankX`` dir;"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:558
msgid ""
"*branch*, *channel*, *slot* - typically used on FB-DIMM memory controllers;"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:560
msgid "*channel*, *slot* - used on Nehalem and newer Intel drivers."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:562
msgid "``dimm_mem_type`` - Memory Type attribute file"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:564 ../../../admin-guide/RAS/main.rst:618
msgid ""
"This attribute file will display what type of memory is currently on this "
"csrow. Normally, either buffered or unbuffered memory. Examples:"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:568 ../../../admin-guide/RAS/main.rst:622
msgid "Registered-DDR"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:569 ../../../admin-guide/RAS/main.rst:623
msgid "Unbuffered-DDR"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:571
msgid ""
"On some systems, the memory controller doesn't have any logic to identify "
"the memory module. On such systems, the directory is called ``rankX`` and "
"works on a similar way as the ``csrowX`` directories. On modern Intel memory "
"controllers, the memory controller identifies the memory modules directly. "
"On such systems, the directory is called ``dimmX``."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:576
msgid ""
"There are also some ``power`` directories and ``subsystem`` symlinks inside "
"the sysfs mapping that are automatically created by the sysfs subsystem. "
"Currently, they serve no purpose."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:581
msgid "``csrowX`` directories"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:583
msgid ""
"When CONFIG_EDAC_LEGACY_SYSFS is enabled, sysfs will contain the ``csrowX`` "
"directories. As this API doesn't work properly for Rambus, FB-DIMMs and "
"modern Intel Memory Controllers, this is being deprecated in favor of "
"``dimmX`` directories."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:588
msgid ""
"In the ``csrowX`` directories are EDAC control and attribute files for this "
"``X`` instance of csrow:"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:592
msgid "``ue_count`` - Total Uncorrectable Errors count attribute file"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:594
msgid ""
"This attribute file displays the total count of uncorrectable errors that "
"have occurred on this csrow. If panic_on_ue is set this counter will not "
"have a chance to increment, since EDAC will panic the system."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:600
msgid "``ce_count`` - Total Correctable Errors count attribute file"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:602
msgid ""
"This attribute file displays the total count of correctable errors that have "
"occurred on this csrow. This count is very important to examine. CEs provide "
"early indications that a DIMM is beginning to fail. This count field should "
"be monitored for non-zero values and report such information to the system "
"administrator."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:610
msgid "``size_mb`` - Total memory managed by this csrow attribute file"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:616
msgid "``mem_type`` - Memory Type attribute file"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:626
msgid "``edac_mode`` - EDAC Mode of operation attribute file"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:632
msgid "``dev_type`` - Device type attribute file"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:644
msgid "``ch0_ce_count`` - Channel 0 CE Count attribute file"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:646
msgid ""
"This attribute file will display the count of CEs on this DIMM located in "
"channel 0."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:650
msgid "``ch0_ue_count`` - Channel 0 UE Count attribute file"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:652 ../../../admin-guide/RAS/main.rst:682
msgid ""
"This attribute file will display the count of UEs on this DIMM located in "
"channel 0."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:656
msgid "``ch0_dimm_label`` - Channel 0 DIMM Label control file"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:672
msgid "``ch1_ce_count`` - Channel 1 CE Count attribute file"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:675
msgid ""
"This attribute file will display the count of CEs on this DIMM located in "
"channel 1."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:679
msgid "``ch1_ue_count`` - Channel 1 UE Count attribute file"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:686
msgid "``ch1_dimm_label`` - Channel 1 DIMM Label control file"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:702
msgid "System Logging"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:704
msgid ""
"If logging for UEs and CEs is enabled, then system logs will contain "
"information indicating that errors have been detected::"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:711
msgid "The structure of the message is:"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:714
msgid "Content"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:714
msgid "Example"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:716
msgid "The memory controller"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:716
msgid "MC0"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:718
msgid "Error type"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:718
msgid "CE"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:720
msgid "Memory page"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:720
msgid "0x283"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:722
msgid "Offset in the page"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:722
msgid "0xce0"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:724
msgid "The byte granularity or resolution of the error"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:724
msgid "grain 8"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:727
msgid "The error syndrome"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:727
msgid "0xb741"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:729
msgid "Memory row"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:729
msgid "row 0"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:731
msgid "Memory channel"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:731
msgid "channel 1"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:733
msgid "DIMM label, if set prior"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:733
msgid "DIMM B1"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:735
msgid ""
"And then an optional, driver-specific message that may have additional "
"information."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:740
msgid ""
"Both UEs and CEs with no info will lack all but memory controller, error "
"type, a notice of \"no info\" and then an optional, driver-specific error "
"message."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:746
msgid "PCI Bus Parity Detection"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:748
msgid ""
"On Header Type 00 devices, the primary status is looked at for any parity "
"error regardless of whether parity is enabled on the device or not. (The "
"spec indicates parity is generated in some cases). On Header Type 01 "
"bridges, the secondary status register is also looked at to see if parity "
"occurred on the bus on the other side of the bridge."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:756
msgid "Sysfs configuration"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:758
msgid ""
"Under ``/sys/devices/system/edac/pci`` are control and attribute files as "
"follows:"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:762
msgid "``check_pci_parity`` - Enable/Disable PCI Parity checking control file"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:764
msgid ""
"This control file enables or disables the PCI Bus Parity scanning operation. "
"Writing a 1 to this file enables the scanning. Writing a 0 to this file "
"disables the scanning."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:768 ../../../admin-guide/RAS/main.rst:866
msgid "Enable::"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:772 ../../../admin-guide/RAS/main.rst:870
msgid "Disable::"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:777
msgid "``pci_parity_count`` - Parity Count"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:779
msgid ""
"This attribute file will display the number of parity errors that have been "
"detected."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:784
msgid "Module parameters"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:786
msgid "``edac_mc_panic_on_ue`` - Panic on UE control file"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:788
msgid ""
"An uncorrectable error will cause a machine panic.  This is usually "
"desirable.  It is a bad idea to continue when an uncorrectable error occurs "
"- it is indeterminate what was uncorrected and the operating system context "
"might be so mangled that continuing will lead to further corruption. If the "
"kernel has MCE configured, then EDAC will never notice the UE."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:795 ../../../admin-guide/RAS/main.rst:811
#: ../../../admin-guide/RAS/main.rst:827 ../../../admin-guide/RAS/main.rst:846
msgid "LOAD TIME::"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:799 ../../../admin-guide/RAS/main.rst:815
#: ../../../admin-guide/RAS/main.rst:831 ../../../admin-guide/RAS/main.rst:850
msgid "RUN TIME::"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:804
msgid "``edac_mc_log_ue`` - Log UE control file"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:807
msgid ""
"Generate kernel messages describing uncorrectable errors.  These errors are "
"reported through the system message log system.  UE statistics will be "
"accumulated even when UE logging is disabled."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:820
msgid "``edac_mc_log_ce`` - Log CE control file"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:823
msgid ""
"Generate kernel messages describing correctable errors.  These errors are "
"reported through the system message log system. CE statistics will be "
"accumulated even when CE logging is disabled."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:836
msgid "``edac_mc_poll_msec`` - Polling period control file"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:839
msgid ""
"The time period, in milliseconds, for polling for error information. Too "
"small a value wastes resources.  Too large a value might delay necessary "
"handling of errors and might loose valuable information for locating the "
"error.  1000 milliseconds (once each second) is the current default. Systems "
"which require all the bandwidth they can get, may increase this."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:855
msgid "``panic_on_pci_parity`` - Panic on PCI PARITY Error"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:858
msgid ""
"This control file enables or disables panicking when a parity error has been "
"detected."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:862
msgid "module/kernel parameter::"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:877
msgid "EDAC device type"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:879
msgid ""
"In the header file, edac_pci.h, there is a series of edac_device structures "
"and APIs for the EDAC_DEVICE."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:882
msgid "User space access to an edac_device is through the sysfs interface."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:884
msgid ""
"At the location ``/sys/devices/system/edac`` (sysfs) new edac_device devices "
"will appear."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:887
msgid ""
"There is a three level tree beneath the above ``edac`` directory. For "
"example, the ``test_device_edac`` device (found at the http://bluesmoke."
"sourceforget.net website) installs itself as::"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:893
msgid ""
"in this directory are various controls, a symlink and one or more "
"``instance`` directories."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:896
msgid "The standard default controls are:"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:899
msgid "log_ce"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:899
msgid "boolean to log CE events"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:900
msgid "log_ue"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:900
msgid "boolean to log UE events"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:901
msgid "panic_on_ue"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:901
msgid ""
"boolean to ``panic`` the system if an UE is encountered (default off, can be "
"set true via startup script)"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:903
msgid "poll_msec"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:903
msgid "time period between POLL cycles for events"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:906
msgid ""
"The test_device_edac device adds at least one of its own custom control:"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:909
msgid "test_bits"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:909
msgid ""
"which in the current test driver does nothing but show how it is installed. "
"A ported driver can add one or more such controls and/or attributes for "
"specific uses. One out-of-tree driver uses controls here to allow for ERROR "
"INJECTION operations to hardware injection registers"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:918
msgid ""
"The symlink points to the 'struct dev' that is registered for this "
"edac_device."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:921
msgid "Instances"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:923
msgid ""
"One or more instance directories are present. For the ``test_device_edac`` "
"case:"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:927
msgid "test-instance0"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:931
msgid ""
"In this directory there are two default counter attributes, which are totals "
"of counter in deeper subdirectories."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:935 ../../../admin-guide/RAS/main.rst:952
msgid "ce_count"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:935
msgid "total of CE events of subdirectories"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:936 ../../../admin-guide/RAS/main.rst:954
msgid "ue_count"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:936
msgid "total of UE events of subdirectories"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:940
msgid "Blocks"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:942
msgid ""
"At the lowest directory level is the ``block`` directory. There can be 0, 1 "
"or more blocks specified in each instance:"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:946
msgid "test-block0"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:949
msgid "In this directory the default attributes are:"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:952
msgid ""
"which is counter of CE events for this ``block`` of hardware being monitored"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:954
msgid ""
"which is counter of UE events for this ``block`` of hardware being monitored"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:959
msgid "The ``test_device_edac`` device adds 4 attributes and 1 control:"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:962
msgid "test-block-bits-0"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:962
msgid "for every POLL cycle this counter is incremented"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:964
msgid "test-block-bits-1"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:964
msgid ""
"every 10 cycles, this counter is bumped once, and test-block-bits-0 is set "
"to 0"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:966
msgid "test-block-bits-2"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:966
msgid ""
"every 100 cycles, this counter is bumped once, and test-block-bits-1 is set "
"to 0"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:968
msgid "test-block-bits-3"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:968
msgid ""
"every 1000 cycles, this counter is bumped once, and test-block-bits-2 is set "
"to 0"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:974
msgid "reset-counters"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:974
msgid "writing ANY thing to this control will reset all the above counters."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:979
msgid ""
"Use of the ``test_device_edac`` driver should enable any others to create "
"their own unique drivers for their hardware systems."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:982
msgid ""
"The ``test_device_edac`` sample driver is located at the http://bluesmoke."
"sourceforge.net project site for EDAC."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:987
msgid "Usage of EDAC APIs on Nehalem and newer Intel CPUs"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:989
msgid ""
"On older Intel architectures, the memory controller was part of the North "
"Bridge chipset. Nehalem, Sandy Bridge, Ivy Bridge, Haswell, Sky Lake and "
"newer Intel architectures integrated an enhanced version of the memory "
"controller (MC) inside the CPUs."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:994
msgid ""
"This chapter will cover the differences of the enhanced memory controllers "
"found on newer Intel CPUs, such as ``i7core_edac``, ``sb_edac`` and "
"``sbx_edac`` drivers."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1000
msgid ""
"The Xeon E7 processor families use a separate chip for the memory "
"controller, called Intel Scalable Memory Buffer. This section doesn't apply "
"for such families."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1004
msgid ""
"There is one Memory Controller per Quick Patch Interconnect (QPI). At the "
"driver, the term \"socket\" means one QPI. This is associated with a "
"physical CPU socket."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1008
msgid ""
"Each MC have 3 physical read channels, 3 physical write channels and 3 logic "
"channels. The driver currently sees it as just 3 channels. Each channel can "
"have up to 3 DIMMs."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1012
msgid ""
"The minimum known unity is DIMMs. There are no information about csrows. As "
"EDAC API maps the minimum unity is csrows, the driver sequentially maps "
"channel/DIMM into different csrows."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1016
msgid "For example, supposing the following layout::"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1026
msgid "The driver will map it as::"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1033
msgid "exports one DIMM per csrow."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1035
msgid "Each QPI is exported as a different memory controller."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1037
msgid ""
"The MC has the ability to inject errors to test drivers. The drivers "
"implement this functionality via some error injection nodes:"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1040
msgid ""
"For injecting a memory error, there are some sysfs nodes, under ``/sys/"
"devices/system/edac/mc/mc?/``:"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1043
msgid "``inject_addrmatch/*``:"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1044
msgid ""
"Controls the error injection mask register. It is possible to specify "
"several characteristics of the address to match an error code::"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1054
msgid ""
"each of the above values can be set to \"any\" to match any valid value."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1056
msgid "At driver init, all values are set to any."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1058
msgid ""
"For example, to generate an error at rank 1 of dimm 2, for any channel, any "
"bank, any page, any column::"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1069
msgid "``inject_eccmask``:"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1070
msgid "specifies what bits will have troubles,"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1072
msgid "``inject_section``:"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1073
msgid "specifies what ECC cache section will get the error::"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1079
msgid "``inject_type``:"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1080
msgid ""
"specifies the type of error, being a combination of the following bits::"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1086
msgid "``inject_enable``:"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1087
msgid "starts the error generation when something different than 0 is written."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1089
msgid "All inject vars can be read. root permission is needed for write."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1091
msgid ""
"Datasheet states that the error will only be generated after a write on an "
"address that matches inject_addrmatch. It seems, however, that reading will "
"also produce an error."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1095
msgid ""
"For example, the following code will generate an error for any write access "
"at socket 0, on any DIMM/address on channel 2::"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1105
msgid ""
"For socket 1, it is needed to replace \"mc0\" by \"mc1\" at the above "
"commands."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1108
msgid "The generated error message will look like::"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1112
msgid "Corrected Error memory register counters"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1114
msgid ""
"Those newer MCs have some registers to count memory errors. The driver uses "
"those registers to report Corrected Errors on devices with Registered DIMMs."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1118
msgid ""
"However, those counters don't work with Unregistered DIMM. As the chipset "
"offers some counters that also work with UDIMMs (but with a worse level of "
"granularity than the default ones), the driver exposes those registers for "
"UDIMM memories."
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1123
msgid ""
"They can be read by looking at the contents of ``all_channel_counts/``::"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1133
msgid ""
"What happens here is that errors on different csrows, but at the same dimm "
"number will increment the same counter. So, in this memory mapping::"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1142
msgid ""
"The hardware will increment udimm0 for an error at the first dimm at either "
"csrow0, csrow2  or csrow3;"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1145
msgid ""
"The hardware will increment udimm1 for an error at the second dimm at either "
"csrow0, csrow2  or csrow3;"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1148
msgid ""
"The hardware will increment udimm2 for an error at the third dimm at either "
"csrow0, csrow2  or csrow3;"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1151
msgid "Standard error counters"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1153
msgid ""
"The standard error counters are generated when an mcelog error is received "
"by the driver. Since, with UDIMM, this is counted by software, it is "
"possible that some errors could be lost. With RDIMM's, they display the "
"contents of the registers"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1159
msgid "Reference documents used on ``amd64_edac``"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1161
msgid ""
"``amd64_edac`` module is based on the following documents (available from "
"http://support.amd.com/en-us/search/tech-docs):"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:0
msgid "Title"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1164
msgid ""
"BIOS and Kernel Developer's Guide for AMD Athlon 64 and AMD Opteron "
"Processors"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:0
msgid "AMD publication #"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1166
msgid "26094"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:0
msgid "Revision"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1167
msgid "3.26"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:0
msgid "Link"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1168
msgid "http://support.amd.com/TechDocs/26094.PDF"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1170
msgid "BIOS and Kernel Developer's Guide for AMD NPT Family 0Fh Processors"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1172
msgid "32559"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1173
#: ../../../admin-guide/RAS/main.rst:1180
msgid "3.00"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:0
msgid "Issue Date"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1174
msgid "May 2006"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1175
msgid "http://support.amd.com/TechDocs/32559.pdf"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1177
msgid "BIOS and Kernel Developer's Guide (BKDG) For AMD Family 10h Processors"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1179
msgid "31116"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1181
msgid "September 07, 2007"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1182
msgid "http://support.amd.com/TechDocs/31116.pdf"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1184
msgid ""
"BIOS and Kernel Developer's Guide (BKDG) for AMD Family 15h Models 30h-3Fh "
"Processors"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1186
msgid "49125"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1187
msgid "3.06"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1188
msgid "2/12/2015 (latest release)"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1189
msgid "http://support.amd.com/TechDocs/49125_15h_Models_30h-3Fh_BKDG.pdf"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1191
msgid ""
"BIOS and Kernel Developer's Guide (BKDG) for AMD Family 15h Models 60h-6Fh "
"Processors"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1193
msgid "50742"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1194
msgid "3.01"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1195
msgid "7/23/2015 (latest release)"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1196
msgid "http://support.amd.com/TechDocs/50742_15h_Models_60h-6Fh_BKDG.pdf"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1198
msgid ""
"BIOS and Kernel Developer's Guide (BKDG) for AMD Family 16h Models 00h-0Fh "
"Processors"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1200
msgid "48751"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1201
msgid "3.03"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1202
msgid "2/23/2015 (latest release)"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1203
msgid "http://support.amd.com/TechDocs/48751_16h_bkdg.pdf"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1206
msgid "Credits"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1208
msgid "Written by Doug Thompson <dougthompson@xmission.com>"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1210
msgid "7 Dec 2005"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1211
msgid "17 Jul 2007 Updated"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1213
msgid "|copy| Mauro Carvalho Chehab"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1215
msgid "05 Aug 2009 Nehalem interface"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1216
msgid "26 Oct 2016 Converted to ReST and cleanups at the Nehalem section"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1218
msgid "EDAC authors/maintainers:"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1220
msgid "Doug Thompson, Dave Jiang, Dave Peterson et al,"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1221
msgid "Mauro Carvalho Chehab"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1222
msgid "Borislav Petkov"
msgstr ""

#: ../../../admin-guide/RAS/main.rst:1223
msgid "original author: Thayne Harbaugh"
msgstr ""
