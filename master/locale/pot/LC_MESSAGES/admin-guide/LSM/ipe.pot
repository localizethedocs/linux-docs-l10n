# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../admin-guide/LSM/ipe.rst:4
msgid "Integrity Policy Enforcement (IPE)"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:8
msgid ""
"This is the documentation for admins, system builders, or individuals "
"attempting to use IPE. If you're looking for more developer-focused "
"documentation about IPE please see :doc:`the design docs </security/ipe>`."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:13
msgid "Overview"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:15
msgid ""
"Integrity Policy Enforcement (IPE) is a Linux Security Module that takes a "
"complementary approach to access control. Unlike traditional access control "
"mechanisms that rely on labels and paths for decision-making, IPE focuses on "
"the immutable security properties inherent to system components. These "
"properties are fundamental attributes or features of a system component that "
"cannot be altered, ensuring a consistent and reliable basis for security "
"decisions."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:23
msgid ""
"To elaborate, in the context of IPE, system components primarily refer to "
"files or the devices these files reside on. However, this is just a starting "
"point. The concept of system components is flexible and can be extended to "
"include new elements as the system evolves. The immutable properties include "
"the origin of a file, which remains constant and unchangeable over time. For "
"example, IPE policies can be crafted to trust files originating from the "
"initramfs. Since initramfs is typically verified by the bootloader, its "
"files are deemed trustworthy; \"file is from initramfs\" becomes an "
"immutable property under IPE's consideration."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:33
msgid ""
"The immutable property concept extends to the security features enabled on a "
"file's origin, such as dm-verity or fs-verity, which provide a layer of "
"integrity and trust. For example, IPE allows the definition of policies that "
"trust files from a dm-verity protected device. dm-verity ensures the "
"integrity of an entire device by providing a verifiable and immutable state "
"of its contents. Similarly, fs-verity offers filesystem-level integrity "
"checks, allowing IPE to enforce policies that trust files protected by fs-"
"verity. These two features cannot be turned off once established, so they "
"are considered immutable properties. These examples demonstrate how IPE "
"leverages immutable properties, such as a file's origin and its integrity "
"protection mechanisms, to make access control decisions."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:45
msgid ""
"For the IPE policy, specifically, it grants the ability to enforce stringent "
"access controls by assessing security properties against reference values "
"defined within the policy. This assessment can be based on the existence of "
"a security property (e.g., verifying if a file originates from initramfs) or "
"evaluating the internal state of an immutable security property. The latter "
"includes checking the roothash of a dm-verity protected device, determining "
"whether dm-verity possesses a valid signature, assessing the digest of a fs-"
"verity protected file, or determining whether fs-verity possesses a valid "
"built-in signature. This nuanced approach to policy enforcement enables a "
"highly secure and customizable system defense mechanism, tailored to "
"specific security requirements and trust models."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:58
msgid ""
"To enable IPE, ensure that ``CONFIG_SECURITY_IPE`` (under :menuselection:"
"`Security -> Integrity Policy Enforcement (IPE)`) config option is enabled."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:63
msgid "Use Cases"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:65
msgid ""
"IPE works best in fixed-function devices: devices in which their purpose is "
"clearly defined and not supposed to be changed (e.g. network firewall device "
"in a data center, an IoT device, etcetera), where all software and "
"configuration is built and provisioned by the system owner."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:70
msgid ""
"IPE is a long-way off for use in general-purpose computing: the Linux "
"community as a whole tends to follow a decentralized trust model (known as "
"the web of trust), which IPE has no support for it yet. Instead, IPE "
"supports PKI (public key infrastructure), which generally designates a set "
"of trusted entities that provide a measure of absolute trust."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:76
msgid ""
"Additionally, while most packages are signed today, the files inside the "
"packages (for instance, the executables), tend to be unsigned. This makes it "
"difficult to utilize IPE in systems where a package manager is expected to "
"be functional, without major changes to the package manager and ecosystem "
"behind it."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:82
msgid ""
"The digest_cache LSM [#digest_cache_lsm]_ is a system that when combined "
"with IPE, could be used to enable and support general-purpose computing use "
"cases."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:86
msgid "Known Limitations"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:88
msgid ""
"IPE cannot verify the integrity of anonymous executable memory, such as the "
"trampolines created by gcc closures and libffi (<3.4.2), or JIT'd code. "
"Unfortunately, as this is dynamically generated code, there is no way for "
"IPE to ensure the integrity of this code to form a trust basis."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:93
msgid ""
"IPE cannot verify the integrity of programs written in interpreted languages "
"when these scripts are invoked by passing these program files to the "
"interpreter. This is because the way interpreters execute these files; the "
"scripts themselves are not evaluated as executable code through one of IPE's "
"hooks, but they are merely text files that are read (as opposed to compiled "
"executables) [#interpreters]_."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:101
msgid "Threat Model"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:103
msgid ""
"IPE specifically targets the risk of tampering with user-space executable "
"code after the kernel has initially booted, including the kernel modules "
"loaded from userspace via ``modprobe`` or ``insmod``."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:107
msgid ""
"To illustrate, consider a scenario where an untrusted binary, possibly "
"malicious, is downloaded along with all necessary dependencies, including a "
"loader and libc. The primary function of IPE in this context is to prevent "
"the execution of such binaries and their dependencies."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:112
msgid ""
"IPE achieves this by verifying the integrity and authenticity of all "
"executable code before allowing them to run. It conducts a thorough check to "
"ensure that the code's integrity is intact and that they match an authorized "
"reference value (digest, signature, etc) as per the defined policy. If a "
"binary does not pass this verification process, either because its integrity "
"has been compromised or it does not meet the authorization criteria, IPE "
"will deny its execution. Additionally, IPE generates audit logs which may be "
"utilized to detect and analyze failures resulting from policy violation."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:122
msgid ""
"Tampering threat scenarios include modification or replacement of executable "
"code by a range of actors including:"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:125
msgid "Actors with physical access to the hardware"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:126
msgid "Actors with local network access to the system"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:127
msgid "Actors with access to the deployment system"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:128
msgid "Compromised internal systems under external control"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:129
msgid "Malicious end users of the system"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:130
msgid "Compromised end users of the system"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:131
msgid "Remote (external) compromise of the system"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:133
msgid ""
"IPE does not mitigate threats arising from malicious but authorized "
"developers (with access to a signing certificate), or compromised developer "
"tools used by them (i.e. return-oriented programming attacks). Additionally, "
"IPE draws hard security boundary between userspace and kernelspace. As a "
"result, kernel-level exploits are considered outside the scope of IPE and "
"mitigation is left to other mechanisms."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:141
msgid "Policy"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:143
msgid ""
"IPE policy is a plain-text [#devdoc]_ policy composed of multiple statements "
"over several lines. There is one required line, at the top of the policy, "
"indicating the policy name, and the policy version, for instance::"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:150
msgid ""
"The policy name is a unique key identifying this policy in a human readable "
"name. This is used to create nodes under securityfs as well as uniquely "
"identify policies to deploy new policies vs update existing policies."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:155
msgid ""
"The policy version indicates the current version of the policy (NOT the "
"policy syntax version). This is used to prevent rollback of policy to "
"potentially insecure previous versions of the policy."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:159
msgid ""
"The next portion of IPE policy are rules. Rules are formed by key=value "
"pairs, known as properties. IPE rules require two properties: ``action``, "
"which determines what IPE does when it encounters a match against the rule, "
"and ``op``, which determines when the rule should be evaluated. The ordering "
"is significant, a rule must start with ``op``, and end with ``action``. "
"Thus, a minimal rule is::"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:168
msgid ""
"This example will allow any execution. Additional properties are used to "
"assess immutable security properties about the files being evaluated. These "
"properties are intended to be descriptions of systems within the kernel that "
"can provide a measure of integrity verification, such that IPE can determine "
"the trust of the resource based on the value of the property."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:174
msgid ""
"Rules are evaluated top-to-bottom. As a result, any revocation rules, or "
"denies should be placed early in the file to ensure that these rules are "
"evaluated before a rule with ``action=ALLOW``."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:178
msgid ""
"IPE policy supports comments. The character '#' will function as a comment, "
"ignoring all characters to the right of '#' until the newline."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:181
msgid ""
"The default behavior of IPE evaluations can also be expressed in policy, "
"through the ``DEFAULT`` statement. This can be done at a global level, or a "
"per-operation level::"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:191
msgid ""
"A default must be set for all known operations in IPE. If you want to "
"preserve older policies being compatible with newer kernels that can "
"introduce new operations, set a global default of ``ALLOW``, then override "
"the defaults on a per-operation basis (as above)."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:196
msgid ""
"With configurable policy-based LSMs, there's several issues with enforcing "
"the configurable policies at startup, around reading and parsing the policy:"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:200
msgid ""
"The kernel *should* not read files from userspace, so directly reading the "
"policy file is prohibited."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:202
msgid ""
"The kernel command line has a character limit, and one kernel module should "
"not reserve the entire character limit for its own configuration."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:205
msgid ""
"There are various boot loaders in the kernel ecosystem, so handing off a "
"memory block would be costly to maintain."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:208
msgid ""
"As a result, IPE has addressed this problem through a concept of a \"boot "
"policy\". A boot policy is a minimal policy which is compiled into the "
"kernel. This policy is intended to get the system to a state where userspace "
"is set up and ready to receive commands, at which point a more complex "
"policy can be deployed via securityfs. The boot policy can be specified via "
"``SECURITY_IPE_BOOT_POLICY`` config option, which accepts a path to a plain-"
"text version of the IPE policy to apply. This policy will be compiled into "
"the kernel. If not specified, IPE will be disabled until a policy is "
"deployed and activated through securityfs."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:219
msgid "Deploying Policies"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:221
msgid ""
"Policies can be deployed from userspace through securityfs. These policies "
"are signed through the PKCS#7 message format to enforce some level of "
"authorization of the policies (prohibiting an attacker from gaining "
"unconstrained root, and deploying an \"allow all\" policy). These policies "
"must be signed by a certificate that chains to the "
"``SYSTEM_TRUSTED_KEYRING``, or to the secondary and/or platform keyrings if "
"``CONFIG_IPE_POLICY_SIG_SECONDARY_KEYRING`` and/or "
"``CONFIG_IPE_POLICY_SIG_PLATFORM_KEYRING`` are enabled, respectively. With "
"openssl, the policy can be signed by::"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:241
msgid ""
"Deploying the policies is done through securityfs, through the "
"``new_policy`` node. To deploy a policy, simply cat the file into the "
"securityfs node::"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:247
msgid ""
"Upon success, this will create one subdirectory under ``/sys/kernel/security/"
"ipe/policies/``. The subdirectory will be the ``policy_name`` field of the "
"policy deployed, so for the example above, the directory will be ``/sys/"
"kernel/security/ipe/policies/Ex_Policy``. Within this directory, there will "
"be seven files: ``pkcs7``, ``policy``, ``name``, ``version``, ``active``, "
"``update``, and ``delete``."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:254
msgid ""
"The ``pkcs7`` file is read-only. Reading it returns the raw PKCS#7 data that "
"was provided to the kernel, representing the policy. If the policy being "
"read is the boot policy, this will return ``ENOENT``, as it is not signed."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:258
msgid ""
"The ``policy`` file is read only. Reading it returns the PKCS#7 inner "
"content of the policy, which will be the plain text policy."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:261
msgid ""
"The ``active`` file is used to set a policy as the currently active policy. "
"This file is rw, and accepts a value of ``\"1\"`` to set the policy as "
"active. Since only a single policy can be active at one time, all other "
"policies will be marked inactive. The policy being marked active must have a "
"policy version greater or equal to the currently-running version."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:267
msgid ""
"The ``update`` file is used to update a policy that is already present in "
"the kernel. This file is write-only and accepts a PKCS#7 signed policy. Two "
"checks will always be performed on this policy: First, the ``policy_names`` "
"must match with the updated version and the existing version. Second the "
"updated policy must have a policy version greater than the currently-running "
"version. This is to prevent rollback attacks."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:274
msgid ""
"The ``delete`` file is used to remove a policy that is no longer needed. "
"This file is write-only and accepts a value of ``1`` to delete the policy. "
"On deletion, the securityfs node representing the policy will be removed. "
"However, delete the current active policy is not allowed and will return an "
"operation not permitted error."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:280
msgid ""
"Similarly, writing to both ``update`` and ``new_policy`` could result in bad "
"message(policy syntax error) or file exists error. The latter error happens "
"when trying to deploy a policy with a ``policy_name`` while the kernel "
"already has a deployed policy with the same ``policy_name``."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:285
msgid ""
"Deploying a policy will *not* cause IPE to start enforcing the policy. IPE "
"will only enforce the policy marked active. Note that only one policy can be "
"active at a time."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:289
msgid ""
"Once deployment is successful, the policy can be activated, by writing file "
"``/sys/kernel/security/ipe/policies/$policy_name/active``. For example, the "
"``Ex_Policy`` can be activated by::"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:295
msgid ""
"From above point on, ``Ex_Policy`` is now the enforced policy on the system."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:298
msgid ""
"IPE also provides a way to delete policies. This can be done via the "
"``delete`` securityfs node, ``/sys/kernel/security/ipe/policies/$policy_name/"
"delete``. Writing ``1`` to that file deletes the policy::"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:305
msgid ""
"There is only one requirement to delete a policy: the policy being deleted "
"must be inactive."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:310
msgid ""
"If a traditional MAC system is enabled (SELinux, apparmor, smack), all "
"writes to ipe's securityfs nodes require ``CAP_MAC_ADMIN``."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:314
msgid "Modes"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:316
msgid ""
"IPE supports two modes of operation: permissive (similar to SELinux's "
"permissive mode) and enforced. In permissive mode, all events are checked "
"and policy violations are logged, but the policy is not really enforced. "
"This allows users to test policies before enforcing them."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:321
msgid ""
"The default mode is enforce, and can be changed via the kernel command line "
"parameter ``ipe.enforce=(0|1)``, or the securityfs node ``/sys/kernel/"
"security/ipe/enforce``."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:327 ../../../admin-guide/LSM/ipe.rst:538
msgid ""
"If a traditional MAC system is enabled (SELinux, apparmor, smack, etcetera), "
"all writes to ipe's securityfs nodes require ``CAP_MAC_ADMIN``."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:331
msgid "Audit Events"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:334
msgid "1420 AUDIT_IPE_ACCESS"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:335 ../../../admin-guide/LSM/ipe.rst:489
msgid "Event Examples::"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:345
msgid ""
"This event indicates that IPE made an access control decision; the IPE "
"specific record (1420) is always emitted in conjunction with a "
"``AUDITSYSCALL`` record."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:349
msgid ""
"Determining whether IPE is in permissive or enforced mode can be derived "
"from ``success`` property and exit code of the ``AUDITSYSCALL`` record."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:353 ../../../admin-guide/LSM/ipe.rst:395
#: ../../../admin-guide/LSM/ipe.rst:434 ../../../admin-guide/LSM/ipe.rst:501
msgid "Field descriptions:"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:356 ../../../admin-guide/LSM/ipe.rst:398
#: ../../../admin-guide/LSM/ipe.rst:437 ../../../admin-guide/LSM/ipe.rst:504
msgid "Field"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:356 ../../../admin-guide/LSM/ipe.rst:398
#: ../../../admin-guide/LSM/ipe.rst:437 ../../../admin-guide/LSM/ipe.rst:504
msgid "Value Type"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:356 ../../../admin-guide/LSM/ipe.rst:398
#: ../../../admin-guide/LSM/ipe.rst:437 ../../../admin-guide/LSM/ipe.rst:504
msgid "Optional?"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:356 ../../../admin-guide/LSM/ipe.rst:398
#: ../../../admin-guide/LSM/ipe.rst:437 ../../../admin-guide/LSM/ipe.rst:504
msgid "Description of Value"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:358
msgid "ipe_op"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:358 ../../../admin-guide/LSM/ipe.rst:360
#: ../../../admin-guide/LSM/ipe.rst:366 ../../../admin-guide/LSM/ipe.rst:368
#: ../../../admin-guide/LSM/ipe.rst:372 ../../../admin-guide/LSM/ipe.rst:374
#: ../../../admin-guide/LSM/ipe.rst:400 ../../../admin-guide/LSM/ipe.rst:402
#: ../../../admin-guide/LSM/ipe.rst:404 ../../../admin-guide/LSM/ipe.rst:406
#: ../../../admin-guide/LSM/ipe.rst:408 ../../../admin-guide/LSM/ipe.rst:410
#: ../../../admin-guide/LSM/ipe.rst:416 ../../../admin-guide/LSM/ipe.rst:439
#: ../../../admin-guide/LSM/ipe.rst:441 ../../../admin-guide/LSM/ipe.rst:443
#: ../../../admin-guide/LSM/ipe.rst:449 ../../../admin-guide/LSM/ipe.rst:518
msgid "string"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:358 ../../../admin-guide/LSM/ipe.rst:360
#: ../../../admin-guide/LSM/ipe.rst:362 ../../../admin-guide/LSM/ipe.rst:364
#: ../../../admin-guide/LSM/ipe.rst:366 ../../../admin-guide/LSM/ipe.rst:374
#: ../../../admin-guide/LSM/ipe.rst:406 ../../../admin-guide/LSM/ipe.rst:408
#: ../../../admin-guide/LSM/ipe.rst:410 ../../../admin-guide/LSM/ipe.rst:412
#: ../../../admin-guide/LSM/ipe.rst:414 ../../../admin-guide/LSM/ipe.rst:416
#: ../../../admin-guide/LSM/ipe.rst:418 ../../../admin-guide/LSM/ipe.rst:445
#: ../../../admin-guide/LSM/ipe.rst:447 ../../../admin-guide/LSM/ipe.rst:449
#: ../../../admin-guide/LSM/ipe.rst:451 ../../../admin-guide/LSM/ipe.rst:453
#: ../../../admin-guide/LSM/ipe.rst:506 ../../../admin-guide/LSM/ipe.rst:508
#: ../../../admin-guide/LSM/ipe.rst:510 ../../../admin-guide/LSM/ipe.rst:512
#: ../../../admin-guide/LSM/ipe.rst:514 ../../../admin-guide/LSM/ipe.rst:516
#: ../../../admin-guide/LSM/ipe.rst:518 ../../../admin-guide/LSM/ipe.rst:520
msgid "No"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:358
msgid "The IPE operation name associated with the log"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:360
msgid "ipe_hook"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:360
msgid "The name of the LSM hook that triggered the IPE event"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:362 ../../../admin-guide/LSM/ipe.rst:506
msgid "enforcing"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:362 ../../../admin-guide/LSM/ipe.rst:364
#: ../../../admin-guide/LSM/ipe.rst:370 ../../../admin-guide/LSM/ipe.rst:412
#: ../../../admin-guide/LSM/ipe.rst:414 ../../../admin-guide/LSM/ipe.rst:418
#: ../../../admin-guide/LSM/ipe.rst:445 ../../../admin-guide/LSM/ipe.rst:447
#: ../../../admin-guide/LSM/ipe.rst:451 ../../../admin-guide/LSM/ipe.rst:453
#: ../../../admin-guide/LSM/ipe.rst:506 ../../../admin-guide/LSM/ipe.rst:508
#: ../../../admin-guide/LSM/ipe.rst:510 ../../../admin-guide/LSM/ipe.rst:512
#: ../../../admin-guide/LSM/ipe.rst:514 ../../../admin-guide/LSM/ipe.rst:516
#: ../../../admin-guide/LSM/ipe.rst:520
msgid "integer"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:362
msgid ""
"The current IPE enforcing state 1 is in enforcing mode, 0 is in permissive "
"mode"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:364
msgid "pid"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:364
msgid "The pid of the process that triggered the IPE event."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:366
msgid "comm"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:366
msgid ""
"The command line program name of the process that triggered the IPE event"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:368
msgid "path"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:368 ../../../admin-guide/LSM/ipe.rst:370
#: ../../../admin-guide/LSM/ipe.rst:372 ../../../admin-guide/LSM/ipe.rst:400
#: ../../../admin-guide/LSM/ipe.rst:402 ../../../admin-guide/LSM/ipe.rst:404
#: ../../../admin-guide/LSM/ipe.rst:439 ../../../admin-guide/LSM/ipe.rst:441
#: ../../../admin-guide/LSM/ipe.rst:443
msgid "Yes"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:368
msgid "The absolute path to the evaluated file"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:370
msgid "ino"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:370
msgid "The inode number of the evaluated file"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:372
msgid "dev"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:372
msgid "The device name of the evaluated file, e.g. vda"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:374
msgid "rule"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:374
msgid "The matched policy rule"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:378
msgid "1421 AUDIT_IPE_CONFIG_CHANGE"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:380 ../../../admin-guide/LSM/ipe.rst:424
msgid "Event Example::"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:386
msgid ""
"This event indicates that IPE switched the active poliy from one to another "
"along with the version and the hash digest of the two policies. Note IPE can "
"only have one policy active at a time, all access decision evaluation is "
"based on the current active policy. The normal procedure to deploy a new "
"policy is loading the policy to deploy into the kernel first, then switch "
"the active policy to it."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:393 ../../../admin-guide/LSM/ipe.rst:432
#: ../../../admin-guide/LSM/ipe.rst:499
msgid ""
"This record will always be emitted in conjunction with a ``AUDITSYSCALL`` "
"record for the ``write`` syscall."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:400
msgid "old_active_pol_name"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:400
msgid "The name of previous active policy"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:402
msgid "old_active_pol_version"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:402
msgid "The version of previous active policy"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:404
msgid "old_policy_digest"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:404
msgid "The hash of previous active policy"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:406
msgid "new_active_pol_name"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:406
msgid "The name of current active policy"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:408
msgid "new_active_pol_version"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:408
msgid "The version of current active policy"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:410
msgid "new_policy_digest"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:410
msgid "The hash of current active policy"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:412 ../../../admin-guide/LSM/ipe.rst:445
#: ../../../admin-guide/LSM/ipe.rst:510
msgid "auid"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:412 ../../../admin-guide/LSM/ipe.rst:445
#: ../../../admin-guide/LSM/ipe.rst:510
msgid "The login user ID"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:414 ../../../admin-guide/LSM/ipe.rst:447
#: ../../../admin-guide/LSM/ipe.rst:512
msgid "ses"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:414 ../../../admin-guide/LSM/ipe.rst:447
#: ../../../admin-guide/LSM/ipe.rst:512
msgid "The login session ID"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:416 ../../../admin-guide/LSM/ipe.rst:449
#: ../../../admin-guide/LSM/ipe.rst:518
msgid "lsm"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:416 ../../../admin-guide/LSM/ipe.rst:449
#: ../../../admin-guide/LSM/ipe.rst:518
msgid "The lsm name associated with the event"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:418 ../../../admin-guide/LSM/ipe.rst:451
#: ../../../admin-guide/LSM/ipe.rst:520
msgid "res"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:418 ../../../admin-guide/LSM/ipe.rst:451
#: ../../../admin-guide/LSM/ipe.rst:520
msgid "The result of the audited operation(success/fail)"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:422
msgid "1422 AUDIT_IPE_POLICY_LOAD"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:430
msgid ""
"This record indicates a new policy has been loaded into the kernel with the "
"policy name, policy version and policy hash."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:439
msgid "policy_name"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:439
msgid "The policy_name"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:441
msgid "policy_version"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:441
msgid "The policy_version"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:443
msgid "policy_digest"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:443
msgid "The policy hash"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:453
msgid "errno"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:453
msgid "Error code from policy loading operations (see table below)"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:456
msgid "Policy error codes (errno):"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:458
msgid ""
"The following table lists the error codes that may appear in the errno field "
"while loading or updating the policy:"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:461
msgid "Error Code"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:461
msgid "Description"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:463
msgid "0"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:463
msgid "Success"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:465
msgid "-EPERM"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:465
msgid "Insufficient permission"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:467
msgid "-EEXIST"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:467
msgid "Same name policy already deployed"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:469
msgid "-EBADMSG"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:469
msgid "Policy is invalid"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:471
msgid "-ENOMEM"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:471
msgid "Out of memory (OOM)"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:473
msgid "-ERANGE"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:473
msgid "Policy version number overflow"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:475
msgid "-EINVAL"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:475
msgid "Policy version parsing error"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:477
msgid "-ENOKEY"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:477
msgid "Key used to sign the IPE policy not found in keyring"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:479
msgid "-EKEYREJECTED"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:479
msgid "Policy signature verification failed"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:481
msgid "-ESTALE"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:481
msgid "Attempting to update an IPE policy with older version"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:483
msgid "-ENOENT"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:483
msgid "Policy was deleted while updating"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:487
msgid "1404 AUDIT_MAC_STATUS"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:506
msgid ""
"The enforcing state IPE is being switched to, 1 is in enforcing mode, 0 is "
"in permissive mode"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:508
msgid "old_enforcing"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:508
msgid ""
"The enforcing state IPE is being switched from, 1 is in enforcing mode, 0 is "
"in permissive mode"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:514
msgid "enabled"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:514
msgid "The new TTY audit enabled setting"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:516
msgid "old-enabled"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:516
msgid "The old TTY audit enabled setting"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:525
msgid "Success Auditing"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:527
msgid ""
"IPE supports success auditing. When enabled, all events that pass IPE policy "
"and are not blocked will emit an audit event. This is disabled by default, "
"and can be enabled via the kernel command line ``ipe.success_audit=(0|1)`` "
"or ``/sys/kernel/security/ipe/success_audit`` securityfs file."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:533
msgid ""
"This is *very* noisy, as IPE will check every userspace binary on the "
"system, but is useful for debugging policies."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:542
msgid "Properties"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:544
msgid ""
"As explained above, IPE properties are ``key=value`` pairs expressed in IPE "
"policy. Two properties are built-into the policy parser: 'op' and 'action'. "
"The other properties are used to restrict immutable security properties "
"about the files being evaluated. Currently those properties are: "
"'``boot_verified``', '``dmverity_signature``', '``dmverity_roothash``', "
"'``fsverity_signature``', '``fsverity_digest``'. A description of all "
"properties supported by IPE are listed below:"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:553
msgid "op"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:555
msgid ""
"Indicates the operation for a rule to apply to. Must be in every rule, as "
"the first token. IPE supports the following operations:"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:558
msgid "``EXECUTE``"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:560
msgid ""
"Pertains to any file attempting to be executed, or loaded as an executable."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:563
msgid "``FIRMWARE``:"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:565
msgid ""
"Pertains to firmware being loaded via the firmware_class interface. This "
"covers both the preallocated buffer and the firmware file itself."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:569
msgid "``KMODULE``:"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:571
msgid "Pertains to loading kernel modules via ``modprobe`` or ``insmod``."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:573
msgid "``KEXEC_IMAGE``:"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:575
msgid "Pertains to kernel images loading via ``kexec``."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:577
msgid "``KEXEC_INITRAMFS``"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:579
msgid "Pertains to initrd images loading via ``kexec --initrd``."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:581
msgid "``POLICY``:"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:583
msgid "Controls loading policies via reading a kernel-space initiated read."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:585
msgid ""
"An example of such is loading IMA policies by writing the path to the policy "
"file to ``$securityfs/ima/policy``"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:588
msgid "``X509_CERT``:"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:590
msgid ""
"Controls loading IMA certificates through the Kconfigs, "
"``CONFIG_IMA_X509_PATH`` and ``CONFIG_EVM_X509_PATH``."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:594
msgid "action"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:596
msgid ""
"Determines what IPE should do when a rule matches. Must be in every rule, as "
"the final clause. Can be one of:"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:599
msgid "``ALLOW``:"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:601
msgid ""
"If the rule matches, explicitly allow access to the resource to proceed "
"without executing any more rules."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:604
msgid "``DENY``:"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:606
msgid ""
"If the rule matches, explicitly prohibit access to the resource to proceed "
"without executing any more rules."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:610
msgid "boot_verified"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:612
msgid ""
"This property can be utilized for authorization of files from initramfs. The "
"format of this property is::"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:620
msgid ""
"This property will trust files from initramfs(rootfs). It should only be "
"used during early booting stage. Before mounting the real rootfs on top of "
"the initramfs, initramfs script will recursively remove all files and "
"directories on the initramfs. This is typically implemented by using "
"switch_root(8) [#switch_root]_. Therefore the initramfs will be empty and "
"not accessible after the real rootfs takes over. It is advised to switch to "
"a different policy that doesn't rely on the property after this point. This "
"ensures that the trust policies remain relevant and effective throughout the "
"system's operation."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:632
msgid "dmverity_roothash"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:634
msgid ""
"This property can be utilized for authorization or revocation of specific dm-"
"verity volumes, identified via their root hashes. It has a dependency on the "
"DM_VERITY module. This property is controlled by the ``IPE_PROP_DM_VERITY`` "
"config option, it will be automatically selected when ``SECURITY_IPE`` and "
"``DM_VERITY`` are all enabled. The format of this property is::"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:643
msgid "The supported DigestNames for dmverity_roothash are [#dmveritydigests]_"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:645
msgid "blake2b-512"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:646
msgid "blake2s-256"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:647 ../../../admin-guide/LSM/ipe.rst:686
msgid "sha256"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:648
msgid "sha384"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:649 ../../../admin-guide/LSM/ipe.rst:687
msgid "sha512"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:650
msgid "sha3-224"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:651
msgid "sha3-256"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:652
msgid "sha3-384"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:653
msgid "sha3-512"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:654
msgid "sm3"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:655
msgid "rmd160"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:658
msgid "dmverity_signature"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:660
msgid ""
"This property can be utilized for authorization of all dm-verity volumes "
"that have a signed roothash that validated by a keyring specified by dm-"
"verity's configuration, either the system trusted keyring, or the secondary "
"keyring. It depends on ``DM_VERITY_VERIFY_ROOTHASH_SIG`` config option and "
"is controlled by the ``IPE_PROP_DM_VERITY_SIGNATURE`` config option, it will "
"be automatically selected when ``SECURITY_IPE``, ``DM_VERITY`` and "
"``DM_VERITY_VERIFY_ROOTHASH_SIG`` are all enabled. The format of this "
"property is::"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:673
msgid "fsverity_digest"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:675
msgid ""
"This property can be utilized for authorization of specific fsverity enabled "
"files, identified via their fsverity digests. It depends on ``FS_VERITY`` "
"config option and is controlled by the ``IPE_PROP_FS_VERITY`` config option, "
"it will be automatically selected when ``SECURITY_IPE`` and ``FS_VERITY`` "
"are all enabled. The format of this property is::"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:684
msgid "The supported DigestNames for fsverity_digest are [#fsveritydigest]_"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:690
msgid "fsverity_signature"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:692
msgid ""
"This property is used to authorize all fs-verity enabled files that have "
"been verified by fs-verity's built-in signature mechanism. The signature "
"verification relies on a key stored within the \".fs-verity\" keyring. It "
"depends on ``FS_VERITY_BUILTIN_SIGNATURES`` config option and it is "
"controlled by the ``IPE_PROP_FS_VERITY`` config option, it will be "
"automatically selected when ``SECURITY_IPE``, ``FS_VERITY`` and "
"``FS_VERITY_BUILTIN_SIGNATURES`` are all enabled. The format of this "
"property is::"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:704
msgid "Policy Examples"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:707
msgid "Allow all"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:715
msgid "Allow only initramfs"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:725
msgid "Allow any signed and validated dm-verity volume and the initramfs"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:736
msgid "Prohibit execution from a specific dm-verity volume"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:749
msgid "Allow only a specific dm-verity volume"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:759
msgid "Allow any fs-verity file with a valid built-in signature"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:769
msgid "Allow execution of a specific fs-verity file"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:779
msgid "Additional Information"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:781
msgid "`Github Repository <https://github.com/microsoft/ipe>`_"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:782
msgid ":doc:`Developer and design docs for IPE </security/ipe>`"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:785
msgid "FAQ"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:787
msgid "Q:"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:788
msgid ""
"What's the difference between other LSMs which provide a measure of trust-"
"based access control?"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:791
msgid "A:"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:793
msgid ""
"In general, there's two other LSMs that can provide similar functionality: "
"IMA, and Loadpin."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:796
msgid ""
"IMA and IPE are functionally very similar. The significant difference "
"between the two is the policy. [#devdoc]_"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:799
msgid ""
"Loadpin and IPE differ fairly dramatically, as Loadpin only covers the IPE's "
"kernel read operations, whereas IPE is capable of controlling execution on "
"top of kernel read. The trust model is also different; Loadpin roots its "
"trust in the initial super-block, whereas trust in IPE is stemmed from "
"kernel itself (via ``SYSTEM_TRUSTED_KEYS``)."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:807
msgid ""
"https://lore.kernel.org/lkml/20240415142436.2545003-1-roberto."
"sassu@huaweicloud.com/"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:809
msgid ""
"There is `some interest in solving this issue <https://lore.kernel.org/"
"lkml/20220321161557.495388-1-mic@digikod.net/>`_."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:811
msgid ""
"Please see :doc:`the design docs </security/ipe>` for more on this topic."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:814
msgid "https://man7.org/linux/man-pages/man8/switch_root.8.html"
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:816
msgid ""
"These hash algorithms are based on values accepted by the Linux crypto API; "
"IPE does not impose any restrictions on the digest algorithm itself; thus, "
"this list may be out of date."
msgstr ""

#: ../../../admin-guide/LSM/ipe.rst:821
msgid ""
"These hash algorithms are based on values accepted by the kernel's fsverity "
"support; IPE does not impose any restrictions on the digest algorithm "
"itself; thus, this list may be out of date."
msgstr ""
