# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../admin-guide/hw-vuln/mds.rst:2
msgid "MDS - Microarchitectural Data Sampling"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:4
msgid ""
"Microarchitectural Data Sampling is a hardware vulnerability which allows "
"unprivileged speculative access to data which is available in various CPU "
"internal buffers."
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:9
msgid "Affected processors"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:11
msgid ""
"This vulnerability affects a wide range of Intel processors. The "
"vulnerability is not present on:"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:14
msgid "Processors from AMD, Centaur and other non Intel vendors"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:16
msgid "Older processor models, where the CPU family is < 6"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:18
msgid "Some Atoms (Bonnell, Saltwell, Goldmont, GoldmontPlus)"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:20
msgid ""
"Intel processors which have the ARCH_CAP_MDS_NO bit set in the "
"IA32_ARCH_CAPABILITIES MSR."
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:23
msgid ""
"Whether a processor is affected or not can be read out from the MDS "
"vulnerability file in sysfs. See :ref:`mds_sys_info`."
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:26
msgid ""
"Not all processors are affected by all variants of MDS, but the mitigation "
"is identical for all of them so the kernel treats them as a single "
"vulnerability."
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:31
msgid "Related CVEs"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:33
msgid "The following CVE entries are related to the MDS vulnerability:"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:36
msgid "CVE-2018-12126"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:36
msgid "MSBDS"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:36
msgid "Microarchitectural Store Buffer Data Sampling"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:37
msgid "CVE-2018-12130"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:37
msgid "MFBDS"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:37
msgid "Microarchitectural Fill Buffer Data Sampling"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:38
msgid "CVE-2018-12127"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:38
msgid "MLPDS"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:38
msgid "Microarchitectural Load Port Data Sampling"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:39
msgid "CVE-2019-11091"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:39
msgid "MDSUM"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:39
msgid "Microarchitectural Data Sampling Uncacheable Memory"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:43
msgid "Problem"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:45
msgid ""
"When performing store, load, L1 refill operations, processors write data "
"into temporary microarchitectural structures (buffers). The data in the "
"buffer can be forwarded to load operations as an optimization."
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:49
msgid ""
"Under certain conditions, usually a fault/assist caused by a load operation, "
"data unrelated to the load memory address can be speculatively forwarded "
"from the buffers. Because the load operation causes a fault or assist and "
"its result will be discarded, the forwarded data will not cause incorrect "
"program execution or state changes. But a malicious operation may be able to "
"forward this speculative data to a disclosure gadget which allows in turn to "
"infer the value via a cache side channel attack."
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:57
msgid ""
"Because the buffers are potentially shared between Hyper-Threads cross Hyper-"
"Thread attacks are possible."
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:60
msgid ""
"Deeper technical information is available in the MDS specific x86 "
"architecture section: :ref:`Documentation/arch/x86/mds.rst <mds>`."
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:65
msgid "Attack scenarios"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:67
msgid ""
"Attacks against the MDS vulnerabilities can be mounted from malicious non- "
"privileged user space applications running on hosts or guest. Malicious "
"guest OSes can obviously mount attacks as well."
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:71
msgid ""
"Contrary to other speculation based vulnerabilities the MDS vulnerability "
"does not allow the attacker to control the memory target address. As a "
"consequence the attacks are purely sampling based, but as demonstrated with "
"the TLBleed attack samples can be postprocessed successfully."
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:77
msgid "Web-Browsers"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:79
msgid ""
"It's unclear whether attacks through Web-Browsers are possible at all. The "
"exploitation through Java-Script is considered very unlikely, but other "
"widely used web technologies like Webassembly could possibly be abused."
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:88
msgid "MDS system information"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:90
msgid ""
"The Linux kernel provides a sysfs interface to enumerate the current MDS "
"status of the system: whether the system is vulnerable, and which "
"mitigations are active. The relevant sysfs file is:"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:94
msgid "/sys/devices/system/cpu/vulnerabilities/mds"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:96
msgid "The possible values in this file are:"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:100
msgid "'Not affected'"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:101
msgid "The processor is not vulnerable"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:102
msgid "'Vulnerable'"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:103
msgid "The processor is vulnerable, but no mitigation enabled"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:104
msgid "'Vulnerable: Clear CPU buffers attempted, no microcode'"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:105
msgid ""
"The processor is vulnerable but microcode is not updated. The mitigation is "
"enabled on a best effort basis."
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:108
msgid ""
"If the processor is vulnerable but the availability of the microcode based "
"mitigation mechanism is not advertised via CPUID, the kernel selects a best "
"effort mitigation mode. This mode invokes the mitigation instructions "
"without a guarantee that they clear the CPU buffers."
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:113
msgid ""
"This is done to address virtualization scenarios where the host has the "
"microcode update applied, but the hypervisor is not yet updated to expose "
"the CPUID to the guest. If the host has updated microcode the protection "
"takes effect; otherwise a few CPU cycles are wasted pointlessly."
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:118
msgid "'Mitigation: Clear CPU buffers'"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:119
msgid ""
"The processor is vulnerable and the CPU buffer clearing mitigation is "
"enabled."
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:122
msgid ""
"If the processor is vulnerable then the following information is appended to "
"the above information:"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:126
msgid "'SMT vulnerable'"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:126
msgid "SMT is enabled"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:127
msgid "'SMT mitigated'"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:127
msgid "SMT is enabled and mitigated"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:128
msgid "'SMT disabled'"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:128
msgid "SMT is disabled"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:129
msgid "'SMT Host state unknown'"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:129
msgid "Kernel runs in a VM, Host SMT state unknown"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:133
msgid "Mitigation mechanism"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:135
msgid ""
"The kernel detects the affected CPUs and the presence of the microcode which "
"is required."
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:138
msgid ""
"If a CPU is affected and the microcode is available, then the kernel enables "
"the mitigation by default. The mitigation can be controlled at boot time via "
"a kernel command line option. See :ref:`mds_mitigation_control_command_line`."
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:146
msgid "CPU buffer clearing"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:148
msgid ""
"The mitigation for MDS clears the affected CPU buffers on return to user "
"space and when entering a guest."
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:151
msgid ""
"If SMT is enabled it also clears the buffers on idle entry when the CPU is "
"only affected by MSBDS and not any other MDS variant, because the other "
"variants cannot be protected against cross Hyper-Thread attacks."
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:155
msgid ""
"For CPUs which are only affected by MSBDS the user space, guest and idle "
"transition mitigations are sufficient and SMT is not affected."
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:161
msgid "Virtualization mitigation"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:163
msgid ""
"The protection for host to guest transition depends on the L1TF "
"vulnerability of the CPU:"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:166
msgid "CPU is affected by L1TF:"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:168
msgid ""
"If the L1D flush mitigation is enabled and up to date microcode is "
"available, the L1D flush mitigation is automatically protecting the guest "
"transition."
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:172
msgid ""
"If the L1D flush mitigation is disabled then the MDS mitigation is invoked "
"explicit when the host MDS mitigation is enabled."
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:175
msgid ""
"For details on L1TF and virtualization see: :ref:`Documentation/admin-guide/"
"hw-vuln//l1tf.rst <mitigation_control_kvm>`."
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:178
msgid "CPU is not affected by L1TF:"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:180
msgid ""
"CPU buffers are flushed before entering the guest when the host MDS "
"mitigation is enabled."
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:183
msgid "The resulting MDS protection matrix for the host to guest transition:"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:186
msgid "L1TF"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:186
msgid "MDS"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:186
msgid "VMX-L1FLUSH"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:186
msgid "Host MDS"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:186
msgid "MDS-State"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:188
#: ../../../admin-guide/hw-vuln/mds.rst:194
msgid "Don't care"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:188
#: ../../../admin-guide/hw-vuln/mds.rst:196
#: ../../../admin-guide/hw-vuln/mds.rst:198
msgid "No"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:188
#: ../../../admin-guide/hw-vuln/mds.rst:196
#: ../../../admin-guide/hw-vuln/mds.rst:198
msgid "N/A"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:188
msgid "Not affected"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:190
#: ../../../admin-guide/hw-vuln/mds.rst:192
#: ../../../admin-guide/hw-vuln/mds.rst:194
#: ../../../admin-guide/hw-vuln/mds.rst:196
#: ../../../admin-guide/hw-vuln/mds.rst:198
msgid "Yes"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:190
#: ../../../admin-guide/hw-vuln/mds.rst:192
msgid "Disabled"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:190
#: ../../../admin-guide/hw-vuln/mds.rst:196
msgid "Off"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:190
#: ../../../admin-guide/hw-vuln/mds.rst:196
msgid "Vulnerable"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:192
#: ../../../admin-guide/hw-vuln/mds.rst:198
msgid "Full"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:192
#: ../../../admin-guide/hw-vuln/mds.rst:194
#: ../../../admin-guide/hw-vuln/mds.rst:198
msgid "Mitigated"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:194
msgid "Enabled"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:201
msgid ""
"This only covers the host to guest transition, i.e. prevents leakage from "
"host to guest, but does not protect the guest internally. Guests need to "
"have their own protections."
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:208
msgid "XEON PHI specific considerations"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:210
msgid ""
"The XEON PHI processor family is affected by MSBDS which can be exploited "
"cross Hyper-Threads when entering idle states. Some XEON PHI variants allow "
"to use MWAIT in user space (Ring 3) which opens an potential attack vector "
"for malicious user space. The exposure can be disabled on the kernel command "
"line with the 'ring3mwait=disable' command line option."
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:216
msgid ""
"XEON PHI is not affected by the other MDS variants and MSBDS is mitigated "
"before the CPU enters a idle state. As XEON PHI is not affected by L1TF "
"either disabling SMT is not required for full protection."
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:223
msgid "SMT control"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:225
msgid ""
"All MDS variants except MSBDS can be attacked cross Hyper-Threads. That "
"means on CPUs which are affected by MFBDS or MLPDS it is necessary to "
"disable SMT for full protection. These are most of the affected CPUs; the "
"exception is XEON PHI, see :ref:`xeon_phi`."
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:230
msgid ""
"Disabling SMT can have a significant performance impact, but the impact "
"depends on the type of workloads."
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:233
msgid ""
"See the relevant chapter in the L1TF mitigation documentation for details: :"
"ref:`Documentation/admin-guide/hw-vuln/l1tf.rst <smt_control>`."
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:240
msgid "Mitigation control on the kernel command line"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:242
msgid ""
"The kernel command line allows to control the MDS mitigations at boot time "
"with the option \"mds=\". The valid arguments for this option are:"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:246
msgid "full"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:246
msgid ""
"If the CPU is vulnerable, enable all available mitigations for the MDS "
"vulnerability, CPU buffer clearing on exit to userspace and when entering a "
"VM. Idle transitions are protected as well if SMT is enabled."
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:251
msgid "It does not automatically disable SMT."
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:253
msgid "full,nosmt"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:253
msgid ""
"The same as mds=full, with SMT disabled on vulnerable CPUs.  This is the "
"complete mitigation."
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:256
msgid "off"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:256
msgid "Disables MDS mitigations completely."
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:260
msgid ""
"Not specifying this option is equivalent to \"mds=full\". For processors "
"that are affected by both TAA (TSX Asynchronous Abort) and MDS, specifying "
"just \"mds=off\" without an accompanying \"tsx_async_abort=off\" will have "
"no effect as the same mitigation is used for both vulnerabilities."
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:267
msgid "Mitigation selection guide"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:270
msgid "1. Trusted userspace"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:272
msgid ""
"If all userspace applications are from a trusted source and do not execute "
"untrusted code which is supplied externally, then the mitigation can be "
"disabled."
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:278
msgid "2. Virtualization with trusted guests"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:280
msgid "The same considerations as above versus trusted user space apply."
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:283
msgid "3. Virtualization with untrusted guests"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:285
msgid ""
"The protection depends on the state of the L1TF mitigations. See :ref:"
"`virt_mechanism`."
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:288
msgid ""
"If the MDS mitigation is enabled and SMT is disabled, guest to host and "
"guest to guest attacks are prevented."
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:294
msgid "Default mitigations"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:296
msgid "The kernel default mitigations for vulnerable processors are:"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:298
msgid "Enable CPU buffer clearing"
msgstr ""

#: ../../../admin-guide/hw-vuln/mds.rst:300
msgid ""
"The kernel does not by default enforce the disabling of SMT, which leaves "
"SMT systems vulnerable when running untrusted code. The same rationale as "
"for L1TF applies. See :ref:`Documentation/admin-guide/hw-vuln//l1tf.rst "
"<default_mitigations>`."
msgstr ""
