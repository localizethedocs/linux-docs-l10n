# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-27 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../gpu/backlight.rst:3
msgid "Backlight support"
msgstr ""

#: ../../../gpu/backlight:5: drivers/video/backlight/backlight.c:26
msgid "The backlight core supports implementing backlight drivers."
msgstr ""

#: ../../../gpu/backlight:5: drivers/video/backlight/backlight.c:28
msgid ""
"A backlight driver registers a driver using "
"devm_backlight_device_register(). The properties of the backlight driver "
"such as type and max_brightness must be specified. When the core detect "
"changes in for example brightness or power state the update_status() "
"operation is called. The backlight driver shall implement this operation and "
"use it to adjust backlight."
msgstr ""

#: ../../../gpu/backlight:5: drivers/video/backlight/backlight.c:35
msgid "Several sysfs attributes are provided by the backlight core::"
msgstr ""

#: ../../../gpu/backlight:5: drivers/video/backlight/backlight.c:41
msgid "See Documentation/ABI/stable/sysfs-class-backlight for the full list."
msgstr ""

#: ../../../gpu/backlight:5: drivers/video/backlight/backlight.c:43
msgid ""
"The backlight can be adjusted using the sysfs interface, and the backlight "
"driver may also support adjusting backlight using a hot-key or some other "
"platform or firmware specific way."
msgstr ""

#: ../../../gpu/backlight:5: drivers/video/backlight/backlight.c:47
msgid ""
"The driver must implement the get_brightness() operation if the HW do not "
"support all the levels that can be specified in brightness, thus providing "
"user-space access to the actual level via the actual_brightness attribute."
msgstr ""

#: ../../../gpu/backlight:5: drivers/video/backlight/backlight.c:52
msgid ""
"When the backlight changes this is reported to user-space using an uevent "
"connected to the actual_brightness attribute. When brightness is set by "
"platform specific means, for example a hot-key to adjust backlight, the "
"driver must notify the backlight core that brightness has changed using "
"backlight_force_update()."
msgstr ""

#: ../../../gpu/backlight:5: drivers/video/backlight/backlight.c:58
msgid ""
"Display drives can control the backlight device's status using "
"backlight_notify_blank() and backlight_notify_blank_all(). If this results "
"in a change in the backlight state the functions call the update_status() "
"operation."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:18
msgid "what method was used to update backlight"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:22
#: include/linux/backlight.h:40
msgid "**Constants**"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:24
msgid "``BACKLIGHT_UPDATE_HOTKEY``"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:25
msgid "The backlight was updated using a hot-key."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:27
msgid "``BACKLIGHT_UPDATE_SYSFS``"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:28
msgid "The backlight was updated using sysfs."
msgstr ""

#: ../../../gpu/backlight:11: drivers/video/backlight/backlight.c:338
#: drivers/video/backlight/backlight.c:453
#: drivers/video/backlight/backlight.c:519
#: drivers/video/backlight/backlight.c:557
#: drivers/video/backlight/backlight.c:582
#: drivers/video/backlight/backlight.c:633 ../../../gpu/backlight:8:
#: include/linux/backlight.h:30 include/linux/backlight.h:54
#: include/linux/backlight.h:157 include/linux/backlight.h:240
#: include/linux/backlight.h:295 include/linux/backlight.h:346
#: include/linux/backlight.h:363 include/linux/backlight.h:419
msgid "**Description**"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:19
msgid ""
"A driver indicates the method (reason) used for updating the backlight when "
"calling backlight_force_update()."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:36
msgid "the type of backlight control"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:42
msgid "``BACKLIGHT_RAW``"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:43
msgid "The backlight is controlled using hardware registers."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:45
msgid "``BACKLIGHT_PLATFORM``"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:46
msgid "The backlight is controlled using a platform-specific interface."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:48
msgid "``BACKLIGHT_FIRMWARE``"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:49
msgid "The backlight is controlled using a standard firmware interface."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:51
msgid "``BACKLIGHT_TYPE_MAX``"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:52
msgid "Number of entries."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:37
msgid "The type of interface used to control the backlight."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:97
msgid "backlight operations"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:101
#: include/linux/backlight.h:163 include/linux/backlight.h:246
msgid "**Definition**::"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:111
#: include/linux/backlight.h:179 include/linux/backlight.h:258
msgid "**Members**"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:103
msgid "``options``"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:104
msgid "Configure how operations are called from the core."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:106
msgid ""
"The options parameter is used to adjust the behaviour of the core. Set "
"BL_CORE_SUSPENDRESUME to get the update_status() operation called upon "
"suspend and resume."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:114
msgid "``update_status``"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:115
msgid "Operation called when properties have changed."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:117
msgid ""
"Notify the backlight driver some property has changed. The update_status "
"operation is protected by the update_lock."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:120
msgid ""
"The backlight driver is expected to use backlight_is_blank() to check if the "
"display is blanked and set brightness accordingly. update_status() is called "
"when any of the properties has changed."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:124
#: include/linux/backlight.h:137 include/linux/backlight.h:151
msgid "RETURNS:"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:126
msgid "0 on success, negative error code if any failure occurred."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:130
msgid "``get_brightness``"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:131
msgid "Return the current backlight brightness."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:133
msgid ""
"The driver may implement this as a readback from the HW. This operation is "
"optional and if not present then the current brightness property value is "
"used."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:139
msgid ""
"A brightness value which is 0 or a positive number. On failure a negative "
"error code is returned."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:144
msgid "``controls_device``"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:145
msgid "Check against the display device"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:147
msgid ""
"Check if the backlight controls the given display device. This operation is "
"optional and if not implemented it is assumed that the display is always the "
"one controlled by the backlight."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:153
msgid ""
"If display_dev is NULL or display_dev matches the device controlled by the "
"backlight, return true. Otherwise return false."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:98
msgid ""
"The backlight operations are specified when the backlight device is "
"registered."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:159
msgid "backlight properties"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:165
msgid "``brightness``"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:166
msgid "The current brightness requested by the user."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:168
msgid ""
"The backlight core makes sure the range is (0 to max_brightness) when the "
"brightness is set via the sysfs attribute: /sys/class/backlight/<backlight>/"
"brightness."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:172
msgid ""
"This value can be set in the backlight_properties passed to "
"devm_backlight_device_register() to set a default brightness value."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:178
msgid "``max_brightness``"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:179
msgid "The maximum brightness value."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:181
msgid ""
"This value must be set in the backlight_properties passed to "
"devm_backlight_device_register() and shall not be modified by the driver "
"after registration."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:187
msgid "``power``"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:188
msgid "The current power mode."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:190
msgid ""
"User space can configure the power mode using the sysfs attribute: /sys/"
"class/backlight/<backlight>/bl_power When the power property is updated "
"update_status() is called."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:194
msgid ""
"The possible values are: (0: full on, 4: full off), see BACKLIGHT_POWER "
"constants."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:197
msgid ""
"When the backlight device is enabled, **power** is set to "
"BACKLIGHT_POWER_ON. When the backlight device is disabled, **power** is set "
"to BACKLIGHT_POWER_OFF."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:207
msgid "``type``"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:208
msgid "The type of backlight supported."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:210
msgid ""
"The backlight type allows userspace to make appropriate policy decisions "
"based on the backlight type."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:213
msgid ""
"This value must be set in the backlight_properties passed to "
"devm_backlight_device_register()."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:218
msgid "``state``"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:219
msgid "The state of the backlight core."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:221
msgid ""
"The state is a bitmask. BL_CORE_FBBLANK is set when the display is expected "
"to be blank. BL_CORE_SUSPENDED is set when the driver is suspended."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:225
msgid ""
"backlight drivers are expected to use backlight_is_blank() in their "
"update_status() operation rather than reading the state property."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:229
msgid "The state is maintained by the core and drivers may not modify it."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:236
msgid "``scale``"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:237
msgid "The type of the brightness scale."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:160
msgid "This structure defines all the properties of a backlight."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:242
msgid "backlight device data"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:248
msgid "``props``"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:249
msgid "Backlight properties"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:253
msgid "``update_lock``"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:254
msgid "The lock used when calling the update_status() operation."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:256
msgid ""
"update_lock is an internal backlight lock that serialise access to the "
"update_status() operation. The backlight core holds the update_lock when "
"calling the update_status() operation. The update_lock shall not be used by "
"backlight drivers."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:263
msgid "``ops_lock``"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:264
msgid "The lock used around everything related to backlight_ops."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:266
msgid ""
"ops_lock is an internal backlight lock that protects the ops pointer and is "
"used around all accesses to ops and when the operations are invoked. The "
"ops_lock shall not be used by backlight drivers."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:272
msgid "``ops``"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:273
msgid "Pointer to the backlight operations."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:275
msgid ""
"If ops is NULL, the driver that registered this device has been unloaded, "
"and if class_get_devdata() points to something in the body of that driver, "
"it is also invalid."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:281
msgid "``entry``"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:282
msgid "List entry of all registered backlight devices"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:286
msgid "``dev``"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:287
msgid "Parent device."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:291
msgid "``use_count``"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:292
msgid "The number of unblanked displays."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:243
msgid "This structure holds all data required by a backlight device."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:297
msgid "force an update of the backlight device status"
msgstr ""

#: ../../../gpu/backlight:11: drivers/video/backlight/backlight.c:337
#: drivers/video/backlight/backlight.c:454
#: drivers/video/backlight/backlight.c:515
#: drivers/video/backlight/backlight.c:557
#: drivers/video/backlight/backlight.c:583
#: drivers/video/backlight/backlight.c:634 ../../../gpu/backlight:8:
#: include/linux/backlight.h:301 include/linux/backlight.h:317
#: include/linux/backlight.h:332 include/linux/backlight.h:347
#: include/linux/backlight.h:364 include/linux/backlight.h:420
msgid "**Parameters**"
msgstr ""

#: ../../../gpu/backlight:11: drivers/video/backlight/backlight.c:339
#: drivers/video/backlight/backlight.c:556 ../../../gpu/backlight:8:
#: include/linux/backlight.h:303 include/linux/backlight.h:319
#: include/linux/backlight.h:334
msgid "``struct backlight_device *bd``"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:298
#: include/linux/backlight.h:344 include/linux/backlight.h:361
msgid "the backlight device"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:313
msgid "Enable backlight"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:314
msgid "the backlight device to enable"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:328
msgid "Disable backlight"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:329
msgid "the backlight device to disable"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:343
msgid "Return true if display is expected to be blank"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:349
#: include/linux/backlight.h:366
msgid "``const struct backlight_device *bd``"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:345
msgid "Display is expected to be blank if any of these is true::"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:350
msgid "Returns true if display is expected to be blank, false otherwise."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:360
msgid "Returns the current brightness value"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:362
msgid ""
"Returns the current brightness value, taking in consideration the current "
"state. If backlight_is_blank() returns true then return 0 as brightness "
"otherwise return the current brightness property value."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:366
msgid ""
"Backlight drivers are expected to use this function in their update_status() "
"operation to get the brightness value."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:416
msgid "access devdata"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:422
msgid "``struct backlight_device *bl_dev``"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:417
msgid "pointer to backlight device"
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:418
msgid ""
"When a backlight device is registered the driver has the possibility to "
"supply a void * devdata. bl_get_data() return a pointer to the devdata."
msgstr ""

#: ../../../gpu/backlight:8: include/linux/backlight.h:423
msgid "pointer to devdata stored while registering the backlight device."
msgstr ""

#: ../../../gpu/backlight:11: drivers/video/backlight/backlight.c:333
msgid "tell the backlight subsystem that hardware state has changed"
msgstr ""

#: ../../../gpu/backlight:11: drivers/video/backlight/backlight.c:335
msgid "the backlight device to update"
msgstr ""

#: ../../../gpu/backlight:11: drivers/video/backlight/backlight.c:337
msgid "``enum backlight_update_reason reason``"
msgstr ""

#: ../../../gpu/backlight:11: drivers/video/backlight/backlight.c:336
msgid "reason for update"
msgstr ""

#: ../../../gpu/backlight:11: drivers/video/backlight/backlight.c:337
msgid ""
"Updates the internal state of the backlight in response to a hardware event, "
"and generates an uevent to notify userspace. A backlight driver shall call "
"backlight_force_update() when the backlight is changed using, for example, a "
"hot-key. The updated brightness is read using get_brightness() and the "
"brightness value is reported using an uevent."
msgstr ""

#: ../../../gpu/backlight:11: drivers/video/backlight/backlight.c:450
msgid "Get backlight device by name"
msgstr ""

#: ../../../gpu/backlight:11: drivers/video/backlight/backlight.c:456
#: drivers/video/backlight/backlight.c:514
msgid "``const char *name``"
msgstr ""

#: ../../../gpu/backlight:11: drivers/video/backlight/backlight.c:451
msgid "Device name"
msgstr ""

#: ../../../gpu/backlight:11: drivers/video/backlight/backlight.c:452
msgid ""
"This function looks up a backlight device by its name. It obtains a "
"reference on the backlight device and it is the caller's responsibility to "
"drop the reference by calling put_device()."
msgstr ""

#: ../../../gpu/backlight:11: drivers/video/backlight/backlight.c:456
msgid "**Return**"
msgstr ""

#: ../../../gpu/backlight:11: drivers/video/backlight/backlight.c:457
msgid "A pointer to the backlight device if found, otherwise NULL."
msgstr ""

#: ../../../gpu/backlight:11: drivers/video/backlight/backlight.c:511
msgid "register a new backlight device"
msgstr ""

#: ../../../gpu/backlight:11: drivers/video/backlight/backlight.c:517
#: drivers/video/backlight/backlight.c:559
#: drivers/video/backlight/backlight.c:636
msgid "``struct device *dev``"
msgstr ""

#: ../../../gpu/backlight:11: drivers/video/backlight/backlight.c:512
msgid "the device to register"
msgstr ""

#: ../../../gpu/backlight:11: drivers/video/backlight/backlight.c:513
msgid "the name of the device"
msgstr ""

#: ../../../gpu/backlight:11: drivers/video/backlight/backlight.c:515
msgid "``struct device *parent``"
msgstr ""

#: ../../../gpu/backlight:11: drivers/video/backlight/backlight.c:514
msgid "a pointer to the parent device (often the same as **dev**)"
msgstr ""

#: ../../../gpu/backlight:11: drivers/video/backlight/backlight.c:516
msgid "``void *devdata``"
msgstr ""

#: ../../../gpu/backlight:11: drivers/video/backlight/backlight.c:515
msgid "an optional pointer to be stored for private driver use"
msgstr ""

#: ../../../gpu/backlight:11: drivers/video/backlight/backlight.c:517
msgid "``const struct backlight_ops *ops``"
msgstr ""

#: ../../../gpu/backlight:11: drivers/video/backlight/backlight.c:516
msgid "the backlight operations structure"
msgstr ""

#: ../../../gpu/backlight:11: drivers/video/backlight/backlight.c:518
msgid "``const struct backlight_properties *props``"
msgstr ""

#: ../../../gpu/backlight:11: drivers/video/backlight/backlight.c:517
msgid "the backlight properties"
msgstr ""

#: ../../../gpu/backlight:11: drivers/video/backlight/backlight.c:518
msgid ""
"Creates and registers new backlight device. When a backlight device is "
"registered the configuration must be specified in the **props** parameter. "
"See description of :c:type:`backlight_properties`."
msgstr ""

#: ../../../gpu/backlight:11: drivers/video/backlight/backlight.c:523
msgid "struct backlight on success, or an ERR_PTR on error"
msgstr ""

#: ../../../gpu/backlight:11: drivers/video/backlight/backlight.c:553
msgid "unregister backlight device"
msgstr ""

#: ../../../gpu/backlight:11: drivers/video/backlight/backlight.c:554
msgid "the device to unregister"
msgstr ""

#: ../../../gpu/backlight:11: drivers/video/backlight/backlight.c:555
msgid "the backlight device to unregister"
msgstr ""

#: ../../../gpu/backlight:11: drivers/video/backlight/backlight.c:556
msgid ""
"Deallocates a backlight allocated with devm_backlight_device_register(). "
"Normally this function will not need to be called and the resource "
"management code will ensure that the resources are freed."
msgstr ""

#: ../../../gpu/backlight:11: drivers/video/backlight/backlight.c:579
msgid "find backlight device by device-tree node"
msgstr ""

#: ../../../gpu/backlight:11: drivers/video/backlight/backlight.c:585
msgid "``struct device_node *node``"
msgstr ""

#: ../../../gpu/backlight:11: drivers/video/backlight/backlight.c:580
msgid "device-tree node of the backlight device"
msgstr ""

#: ../../../gpu/backlight:11: drivers/video/backlight/backlight.c:581
msgid ""
"Returns a pointer to the backlight device corresponding to the given DT node "
"or NULL if no such backlight device exists or if the device hasn't been "
"probed yet."
msgstr ""

#: ../../../gpu/backlight:11: drivers/video/backlight/backlight.c:585
msgid ""
"This function obtains a reference on the backlight device and it is the "
"caller's responsibility to drop the reference by calling put_device() on the "
"backlight device's .dev field."
msgstr ""

#: ../../../gpu/backlight:11: drivers/video/backlight/backlight.c:630
msgid "find backlight for a device"
msgstr ""

#: ../../../gpu/backlight:11: drivers/video/backlight/backlight.c:631
msgid "the device"
msgstr ""

#: ../../../gpu/backlight:11: drivers/video/backlight/backlight.c:632
msgid ""
"This function looks for a property named 'backlight' on the DT node "
"connected to **dev** and looks up the backlight device. The lookup is device "
"managed so the reference to the backlight device is automatically dropped on "
"driver detach."
msgstr ""

#: ../../../gpu/backlight:11: drivers/video/backlight/backlight.c:638
msgid ""
"A pointer to the backlight device if found. Error pointer -EPROBE_DEFER if "
"the DT property is set, but no backlight device is found. NULL if there's no "
"backlight property."
msgstr ""
