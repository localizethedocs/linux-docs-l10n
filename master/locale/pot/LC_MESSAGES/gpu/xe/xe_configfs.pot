# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-20 11:24+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../gpu/xe/xe_configfs.rst:7
msgid "Xe Configfs"
msgstr ""

#: ../../../gpu/xe/xe_configfs:9: drivers/gpu/drm/xe/xe_configfs.c:26
msgid ""
"Configfs is a filesystem-based manager of kernel objects. XE KMD registers a "
"configfs subsystem called ``xe`` that creates a directory in the mounted "
"configfs directory. The user can create devices under this directory and "
"configure them as necessary. See Documentation/filesystems/configfs.rst for "
"more information about how configfs works."
msgstr ""

#: ../../../gpu/xe/xe_configfs:9: drivers/gpu/drm/xe/xe_configfs.c:35
msgid ""
"To create a device, the ``xe`` module should already be loaded, but some "
"attributes can only be set before binding the device. It can be accomplished "
"by blocking the driver autoprobe::"
msgstr ""

#: ../../../gpu/xe/xe_configfs:9: drivers/gpu/drm/xe/xe_configfs.c:42
msgid ""
"In order to create a device, the user has to create a directory inside "
"``xe``::"
msgstr ""

#: ../../../gpu/xe/xe_configfs:9: drivers/gpu/drm/xe/xe_configfs.c:46
msgid ""
"Every device created is populated by the driver with entries that can be "
"used to configure it::"
msgstr ""

#: ../../../gpu/xe/xe_configfs:9: drivers/gpu/drm/xe/xe_configfs.c:60
msgid ""
"After configuring the attributes as per next section, the device can be "
"probed with::"
msgstr ""

#: ../../../gpu/xe/xe_configfs:9: drivers/gpu/drm/xe/xe_configfs.c:73
msgid ""
"Enable survivability mode on supported cards. This setting only takes effect "
"when probing the device. Example to enable it::"
msgstr ""

#: ../../../gpu/xe/xe_configfs:9: drivers/gpu/drm/xe/xe_configfs.c:78
#: drivers/gpu/drm/xe/xe_configfs.c:104 drivers/gpu/drm/xe/xe_configfs.c:116
msgid "This attribute can only be set before binding to the device."
msgstr ""

#: ../../../gpu/xe/xe_configfs:9: drivers/gpu/drm/xe/xe_configfs.c:83
msgid ""
"Allow only a set of engine(s) to be available, disabling the other engines "
"even if they are available in hardware. This is applied after HW fuses are "
"considered on each tile. Examples:"
msgstr ""

#: ../../../gpu/xe/xe_configfs:9: drivers/gpu/drm/xe/xe_configfs.c:87
msgid "Allow only one render and one copy engines, nothing else::"
msgstr ""

#: ../../../gpu/xe/xe_configfs:9: drivers/gpu/drm/xe/xe_configfs.c:91
msgid "Allow only compute engines and first copy engine::"
msgstr ""

#: ../../../gpu/xe/xe_configfs:9: drivers/gpu/drm/xe/xe_configfs.c:95
msgid ""
"Note that the engine names are the per-GT hardware names. On multi-tile "
"platforms, writing ``rcs0,bcs0`` to this file would allow the first render "
"and copy engines on each tile."
msgstr ""

#: ../../../gpu/xe/xe_configfs:9: drivers/gpu/drm/xe/xe_configfs.c:99
msgid ""
"The requested configuration may not be supported by the platform and driver "
"may fail to probe. For example: if at least one copy engine is expected to "
"be available for migrations, but it's disabled. This is intended for "
"debugging purposes only."
msgstr ""

#: ../../../gpu/xe/xe_configfs:9: drivers/gpu/drm/xe/xe_configfs.c:109
msgid ""
"Enable extra debugging capabilities to trace engine execution. Only useful "
"during early platform enabling and requires additional hardware connected. "
"Once it's enabled, additionals WAs are added and runtime configuration is "
"done via debugfs. Example to enable it::"
msgstr ""

#: ../../../gpu/xe/xe_configfs:9: drivers/gpu/drm/xe/xe_configfs.c:121
msgid ""
"Allow to execute a batch buffer during any context switches. When the GPU is "
"restoring the context, it executes additional commands. It's useful for "
"testing additional workarounds and validating certain HW behaviors: it's not "
"intended for normal execution and will taint the kernel with TAINT_TEST when "
"used."
msgstr ""

#: ../../../gpu/xe/xe_configfs:9: drivers/gpu/drm/xe/xe_configfs.c:127
msgid ""
"The syntax allows to pass straight instructions to be executed by the engine "
"in a batch buffer or set specific registers."
msgstr ""

#: ../../../gpu/xe/xe_configfs:9: drivers/gpu/drm/xe/xe_configfs.c:130
msgid "Generic instruction::"
msgstr ""

#: ../../../gpu/xe/xe_configfs:9: drivers/gpu/drm/xe/xe_configfs.c:134
msgid "Simple register setting::"
msgstr ""

#: ../../../gpu/xe/xe_configfs:9: drivers/gpu/drm/xe/xe_configfs.c:138
msgid ""
"Commands are saved per engine class: all instances of that class will "
"execute those commands during context switch. The instruction, dword "
"arguments, addresses and values are in hex format like in the examples below."
msgstr ""

#: ../../../gpu/xe/xe_configfs:9: drivers/gpu/drm/xe/xe_configfs.c:142
msgid ""
"Execute a LRI command to write 0xDEADBEEF to register 0x4f10 after the "
"normal context restore::"
msgstr ""

#: ../../../gpu/xe/xe_configfs:9: drivers/gpu/drm/xe/xe_configfs.c:148
msgid ""
"Execute a LRI command to write 0xDEADBEEF to register 0x4f10 at the "
"beginning of the context restore::"
msgstr ""

#: ../../../gpu/xe/xe_configfs:9: drivers/gpu/drm/xe/xe_configfs.c:153
msgid ""
"Load certain values in a couple of registers (it can be used as a simpler "
"alternative to the `cmd`) action::"
msgstr ""

#: ../../../gpu/xe/xe_configfs:9: drivers/gpu/drm/xe/xe_configfs.c:163
msgid ""
"When using multiple lines, make sure to use a command that is implemented "
"with a single write syscall, like HEREDOC."
msgstr ""

#: ../../../gpu/xe/xe_configfs:9: drivers/gpu/drm/xe/xe_configfs.c:166
msgid ""
"Currently this is implemented only for post and mid context restore and "
"these attributes can only be set before binding to the device."
msgstr ""

#: ../../../gpu/xe/xe_configfs:9: drivers/gpu/drm/xe/xe_configfs.c:172
msgid "The created device directories can be removed using ``rmdir``::"
msgstr ""

#: ../../../gpu/xe/xe_configfs.rst:13
msgid "Internal API"
msgstr ""

#: ../../../gpu/xe/xe_configfs:15: drivers/gpu/drm/xe/xe_configfs.c:857
msgid "Test if device was configured by configfs"
msgstr ""

#: ../../../gpu/xe/xe_configfs:15: drivers/gpu/drm/xe/xe_configfs.c:861
#: drivers/gpu/drm/xe/xe_configfs.c:884 drivers/gpu/drm/xe/xe_configfs.c:904
#: drivers/gpu/drm/xe/xe_configfs.c:924 drivers/gpu/drm/xe/xe_configfs.c:944
#: drivers/gpu/drm/xe/xe_configfs.c:971
msgid "**Parameters**"
msgstr ""

#: ../../../gpu/xe/xe_configfs:15: drivers/gpu/drm/xe/xe_configfs.c:863
#: drivers/gpu/drm/xe/xe_configfs.c:886 drivers/gpu/drm/xe/xe_configfs.c:906
#: drivers/gpu/drm/xe/xe_configfs.c:926 drivers/gpu/drm/xe/xe_configfs.c:946
#: drivers/gpu/drm/xe/xe_configfs.c:973
msgid "``struct pci_dev *pdev``"
msgstr ""

#: ../../../gpu/xe/xe_configfs:15: drivers/gpu/drm/xe/xe_configfs.c:858
msgid "the :c:type:`pci_dev` device to test"
msgstr ""

#: ../../../gpu/xe/xe_configfs:15: drivers/gpu/drm/xe/xe_configfs.c:860
msgid "**Description**"
msgstr ""

#: ../../../gpu/xe/xe_configfs:15: drivers/gpu/drm/xe/xe_configfs.c:859
msgid ""
"Try to find the configfs group that belongs to the specified pci device and "
"print a diagnostic message if different than the default value."
msgstr ""

#: ../../../gpu/xe/xe_configfs:15: drivers/gpu/drm/xe/xe_configfs.c:880
msgid "get configfs survivability mode attribute"
msgstr ""

#: ../../../gpu/xe/xe_configfs:15: drivers/gpu/drm/xe/xe_configfs.c:881
#: drivers/gpu/drm/xe/xe_configfs.c:901 drivers/gpu/drm/xe/xe_configfs.c:921
#: drivers/gpu/drm/xe/xe_configfs.c:941 drivers/gpu/drm/xe/xe_configfs.c:968
msgid "pci device"
msgstr ""

#: ../../../gpu/xe/xe_configfs:15: drivers/gpu/drm/xe/xe_configfs.c:883
#: drivers/gpu/drm/xe/xe_configfs.c:903 drivers/gpu/drm/xe/xe_configfs.c:923
#: drivers/gpu/drm/xe/xe_configfs.c:945 drivers/gpu/drm/xe/xe_configfs.c:972
msgid "**Return**"
msgstr ""

#: ../../../gpu/xe/xe_configfs:15: drivers/gpu/drm/xe/xe_configfs.c:883
msgid "survivability_mode attribute in configfs"
msgstr ""

#: ../../../gpu/xe/xe_configfs:15: drivers/gpu/drm/xe/xe_configfs.c:900
msgid "get engine allowed mask from configfs"
msgstr ""

#: ../../../gpu/xe/xe_configfs:15: drivers/gpu/drm/xe/xe_configfs.c:903
msgid "engine mask with allowed engines set in configfs"
msgstr ""

#: ../../../gpu/xe/xe_configfs:15: drivers/gpu/drm/xe/xe_configfs.c:920
msgid "get configfs enable_psmi setting"
msgstr ""

#: ../../../gpu/xe/xe_configfs:15: drivers/gpu/drm/xe/xe_configfs.c:923
msgid "enable_psmi setting in configfs"
msgstr ""

#: ../../../gpu/xe/xe_configfs:15: drivers/gpu/drm/xe/xe_configfs.c:940
msgid "get configfs ctx_restore_mid_bb setting"
msgstr ""

#: ../../../gpu/xe/xe_configfs:15: drivers/gpu/drm/xe/xe_configfs.c:943
#: drivers/gpu/drm/xe/xe_configfs.c:970
msgid "``enum xe_engine_class class``"
msgstr ""

#: ../../../gpu/xe/xe_configfs:15: drivers/gpu/drm/xe/xe_configfs.c:942
#: drivers/gpu/drm/xe/xe_configfs.c:969
msgid "hw engine class"
msgstr ""

#: ../../../gpu/xe/xe_configfs:15: drivers/gpu/drm/xe/xe_configfs.c:944
#: drivers/gpu/drm/xe/xe_configfs.c:971
msgid "``const u32 **cs``"
msgstr ""

#: ../../../gpu/xe/xe_configfs:15: drivers/gpu/drm/xe/xe_configfs.c:943
#: drivers/gpu/drm/xe/xe_configfs.c:970
msgid "pointer to the bb to use - only valid during probe"
msgstr ""

#: ../../../gpu/xe/xe_configfs:15: drivers/gpu/drm/xe/xe_configfs.c:945
msgid "Number of dwords used in the mid_ctx_restore setting in configfs"
msgstr ""

#: ../../../gpu/xe/xe_configfs:15: drivers/gpu/drm/xe/xe_configfs.c:967
msgid "get configfs ctx_restore_post_bb setting"
msgstr ""

#: ../../../gpu/xe/xe_configfs:15: drivers/gpu/drm/xe/xe_configfs.c:972
msgid "Number of dwords used in the post_ctx_restore setting in configfs"
msgstr ""
