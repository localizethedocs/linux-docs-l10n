# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-13 08:27+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../gpu/xe/xe_rtp.rst:5
msgid "Register Table Processing"
msgstr ""

#: ../../../gpu/xe/xe_rtp:7: drivers/gpu/drm/xe/xe_rtp.c:20
msgid ""
"Internal infrastructure to define how registers should be updated based on "
"rules and actions. This can be used to define tables with multiple entries "
"(one per register) that will be walked over at some point in time to apply "
"the values to the registers that have matching rules."
msgstr ""

#: ../../../gpu/xe/xe_rtp.rst:11
msgid "Internal API"
msgstr ""

#: ../../../gpu/xe/xe_rtp:13: drivers/gpu/drm/xe/xe_rtp_types.h:17
msgid "action to take for any matching rule"
msgstr ""

#: ../../../gpu/xe/xe_rtp:13: drivers/gpu/drm/xe/xe_rtp_types.h:21
msgid "**Definition**::"
msgstr ""

#: ../../../gpu/xe/xe_rtp:13: drivers/gpu/drm/xe/xe_rtp_types.h:33
msgid "**Members**"
msgstr ""

#: ../../../gpu/xe/xe_rtp:13: drivers/gpu/drm/xe/xe_rtp_types.h:23
msgid "``reg``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:13: drivers/gpu/drm/xe/xe_rtp_types.h:24
#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:234
#: drivers/gpu/drm/xe/xe_rtp.h:249 drivers/gpu/drm/xe/xe_rtp.h:267
#: drivers/gpu/drm/xe/xe_rtp.h:285 drivers/gpu/drm/xe/xe_rtp.h:307
msgid "Register"
msgstr ""

#: ../../../gpu/xe/xe_rtp:13: drivers/gpu/drm/xe/xe_rtp_types.h:26
msgid "``clr_bits``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:13: drivers/gpu/drm/xe/xe_rtp_types.h:27
msgid ""
"bits to clear when updating register. It's always a superset of bits being "
"modified"
msgstr ""

#: ../../../gpu/xe/xe_rtp:13: drivers/gpu/drm/xe/xe_rtp_types.h:30
msgid "``set_bits``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:13: drivers/gpu/drm/xe/xe_rtp_types.h:31
msgid "bits to set when updating register"
msgstr ""

#: ../../../gpu/xe/xe_rtp:13: drivers/gpu/drm/xe/xe_rtp_types.h:33
msgid "``read_mask``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:13: drivers/gpu/drm/xe/xe_rtp_types.h:34
msgid "mask for bits to consider when reading value back"
msgstr ""

#: ../../../gpu/xe/xe_rtp:13: drivers/gpu/drm/xe/xe_rtp_types.h:36
msgid "``flags``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:13: drivers/gpu/drm/xe/xe_rtp_types.h:37
msgid "flags to apply on rule evaluation or action"
msgstr ""

#: ../../../gpu/xe/xe_rtp:13: drivers/gpu/drm/xe/xe_rtp_types.h:40
#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:54
#: drivers/gpu/drm/xe/xe_rtp.h:64 drivers/gpu/drm/xe/xe_rtp.h:74
#: drivers/gpu/drm/xe/xe_rtp.h:87 drivers/gpu/drm/xe/xe_rtp.h:99
#: drivers/gpu/drm/xe/xe_rtp.h:108 drivers/gpu/drm/xe/xe_rtp.h:122
#: drivers/gpu/drm/xe/xe_rtp.h:133 drivers/gpu/drm/xe/xe_rtp.h:146
#: drivers/gpu/drm/xe/xe_rtp.h:160 drivers/gpu/drm/xe/xe_rtp.h:171
#: drivers/gpu/drm/xe/xe_rtp.h:184 drivers/gpu/drm/xe/xe_rtp.h:197
#: drivers/gpu/drm/xe/xe_rtp.h:205 drivers/gpu/drm/xe/xe_rtp.h:213
#: drivers/gpu/drm/xe/xe_rtp.h:238 drivers/gpu/drm/xe/xe_rtp.h:253
#: drivers/gpu/drm/xe/xe_rtp.h:271 drivers/gpu/drm/xe/xe_rtp.h:290
#: drivers/gpu/drm/xe/xe_rtp.h:311 drivers/gpu/drm/xe/xe_rtp.h:325
#: drivers/gpu/drm/xe/xe_rtp.h:333 drivers/gpu/drm/xe/xe_rtp.h:355
#: drivers/gpu/drm/xe/xe_rtp.h:377 drivers/gpu/drm/xe/xe_rtp.h:402
#: ../../../gpu/xe/xe_rtp:19: drivers/gpu/drm/xe/xe_rtp.c:246
#: drivers/gpu/drm/xe/xe_rtp.c:278 drivers/gpu/drm/xe/xe_rtp.c:321
msgid "**Description**"
msgstr ""

#: ../../../gpu/xe/xe_rtp:13: drivers/gpu/drm/xe/xe_rtp_types.h:18
msgid ""
"This struct records what action should be taken in a register that has a "
"matching rule. Example of actions: set/clear bits."
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:53
msgid "``XE_RTP_RULE_PLATFORM (plat_)``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:51
msgid "Create rule matching platform"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:55
#: drivers/gpu/drm/xe/xe_rtp.h:64 drivers/gpu/drm/xe/xe_rtp.h:74
#: drivers/gpu/drm/xe/xe_rtp.h:87 drivers/gpu/drm/xe/xe_rtp.h:100
#: drivers/gpu/drm/xe/xe_rtp.h:109 drivers/gpu/drm/xe/xe_rtp.h:123
#: drivers/gpu/drm/xe/xe_rtp.h:133 drivers/gpu/drm/xe/xe_rtp.h:147
#: drivers/gpu/drm/xe/xe_rtp.h:161 drivers/gpu/drm/xe/xe_rtp.h:171
#: drivers/gpu/drm/xe/xe_rtp.h:185 drivers/gpu/drm/xe/xe_rtp.h:236
#: drivers/gpu/drm/xe/xe_rtp.h:252 drivers/gpu/drm/xe/xe_rtp.h:270
#: drivers/gpu/drm/xe/xe_rtp.h:288 drivers/gpu/drm/xe/xe_rtp.h:310
#: drivers/gpu/drm/xe/xe_rtp.h:326 drivers/gpu/drm/xe/xe_rtp.h:334
#: drivers/gpu/drm/xe/xe_rtp.h:356 drivers/gpu/drm/xe/xe_rtp.h:378
#: drivers/gpu/drm/xe/xe_rtp.h:403 drivers/gpu/drm/xe/xe_rtp.h:446
#: ../../../gpu/xe/xe_rtp:19: drivers/gpu/drm/xe/xe_rtp.c:240
#: drivers/gpu/drm/xe/xe_rtp.c:273 drivers/gpu/drm/xe/xe_rtp.c:321
msgid "**Parameters**"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:57
#: drivers/gpu/drm/xe/xe_rtp.h:66
msgid "``plat_``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:52
#: drivers/gpu/drm/xe/xe_rtp.h:61
msgid "platform to match"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:53
#: drivers/gpu/drm/xe/xe_rtp.h:63 drivers/gpu/drm/xe/xe_rtp.h:76
#: drivers/gpu/drm/xe/xe_rtp.h:89 drivers/gpu/drm/xe/xe_rtp.h:98
#: drivers/gpu/drm/xe/xe_rtp.h:111 drivers/gpu/drm/xe/xe_rtp.h:121
#: drivers/gpu/drm/xe/xe_rtp.h:135 drivers/gpu/drm/xe/xe_rtp.h:149
#: drivers/gpu/drm/xe/xe_rtp.h:159 drivers/gpu/drm/xe/xe_rtp.h:173
#: drivers/gpu/drm/xe/xe_rtp.h:187 drivers/gpu/drm/xe/xe_rtp.h:196
#: drivers/gpu/drm/xe/xe_rtp.h:204
msgid "Refer to XE_RTP_RULES() for expected usage."
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:62
msgid "``XE_RTP_RULE_SUBPLATFORM (plat_, sub_)``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:60
msgid "Create rule matching platform and sub-platform"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:63
msgid "``sub_``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:62
msgid "sub-platform to match"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:72
msgid "``XE_RTP_RULE_GRAPHICS_STEP (start_, end_)``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:70
msgid "Create rule matching graphics stepping"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:76
#: drivers/gpu/drm/xe/xe_rtp.h:89
msgid "``start_``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:71
#: drivers/gpu/drm/xe/xe_rtp.h:84
msgid "First stepping matching the rule"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:73
#: drivers/gpu/drm/xe/xe_rtp.h:86
msgid "``end_``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:72
#: drivers/gpu/drm/xe/xe_rtp.h:85
msgid "First stepping that does not match the rule"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:73
#: drivers/gpu/drm/xe/xe_rtp.h:86
msgid ""
"Note that the range matching this rule is [ **start_**, **end_** ), i.e. "
"inclusive on the left, exclusive on the right."
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:85
msgid "``XE_RTP_RULE_MEDIA_STEP (start_, end_)``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:83
msgid "Create rule matching media stepping"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:98
msgid "``XE_RTP_RULE_ENGINE_CLASS (cls_)``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:96
msgid "Create rule matching an engine class"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:102
msgid "``cls_``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:97
msgid "Engine class to match"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:107
msgid "``XE_RTP_RULE_FUNC (func__)``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:105
msgid "Create rule using callback function for match"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:111
msgid "``func__``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:106
msgid "Function to call to decide if rule matches"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:107
msgid ""
"This allows more complex checks to be performed. The ``XE_RTP`` "
"infrastructure will simply call the function **func_** passed to decide if "
"this rule matches the device."
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:121
msgid "``XE_RTP_RULE_GRAPHICS_VERSION (ver__)``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:119
msgid "Create rule matching graphics version"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:125
#: drivers/gpu/drm/xe/xe_rtp.h:149 drivers/gpu/drm/xe/xe_rtp.h:163
#: drivers/gpu/drm/xe/xe_rtp.h:187
msgid "``ver__``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:120
#: drivers/gpu/drm/xe/xe_rtp.h:144
msgid "Graphics IP version to match"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:131
msgid "``XE_RTP_RULE_GRAPHICS_VERSION_RANGE (ver_start__, ver_end__)``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:129
msgid "Create rule matching a range of graphics version"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:135
#: drivers/gpu/drm/xe/xe_rtp.h:173
msgid "``ver_start__``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:130
msgid "First graphics IP version to match"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:132
#: drivers/gpu/drm/xe/xe_rtp.h:170
msgid "``ver_end__``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:131
msgid "Last graphics IP version to match"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:132
#: drivers/gpu/drm/xe/xe_rtp.h:170
msgid ""
"Note that the range matching this rule is [ **ver_start__**, "
"**ver_end__** ], i.e. inclusive on both sides"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:145
msgid "``XE_RTP_RULE_GRAPHICS_VERSION_ANY_GT (ver__)``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:143
msgid "Create rule matching graphics version on any GT"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:145
msgid ""
"Like XE_RTP_RULE_GRAPHICS_VERSION, but it matches even if the current GT "
"being checked is not of the graphics type. It allows to add RTP entries to "
"another GT when the device contains a Graphics IP with that version."
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:159
msgid "``XE_RTP_RULE_MEDIA_VERSION (ver__)``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:157
msgid "Create rule matching media version"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:158
#: drivers/gpu/drm/xe/xe_rtp.h:182
msgid "Media IP version to match"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:169
msgid "``XE_RTP_RULE_MEDIA_VERSION_RANGE (ver_start__, ver_end__)``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:167
msgid "Create rule matching a range of media version"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:168
msgid "First media IP version to match"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:169
msgid "Last media IP version to match"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:183
msgid "``XE_RTP_RULE_MEDIA_VERSION_ANY_GT (ver__)``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:181
msgid "Create rule matching media version on any GT"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:183
msgid ""
"Like XE_RTP_RULE_MEDIA_VERSION, but it matches even if the current GT being "
"checked is not of the media type. It allows to add RTP entries to another GT "
"when the device contains a Media IP with that version."
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:197
msgid "``XE_RTP_RULE_IS_INTEGRATED``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:195
msgid "Create a rule matching integrated graphics devices"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:205
msgid "``XE_RTP_RULE_IS_DISCRETE``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:203
msgid "Create a rule matching discrete graphics devices"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:213
msgid "``XE_RTP_RULE_OR``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:211
msgid "Create an OR condition for rtp rules"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:212
msgid ""
"RTP rules are AND'ed when evaluated and all of them need to match. "
"XE_RTP_RULE_OR allows to create set of rules where any of them matching is "
"sufficient for the action to trigger. Example:"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:234
msgid "``XE_RTP_ACTION_WR (reg_, val_, ...)``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:232
msgid "Helper to write a value to the register, overriding all the bits"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:238
#: drivers/gpu/drm/xe/xe_rtp.h:254 drivers/gpu/drm/xe/xe_rtp.h:272
#: drivers/gpu/drm/xe/xe_rtp.h:290 drivers/gpu/drm/xe/xe_rtp.h:312
msgid "``reg_``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:236
#: drivers/gpu/drm/xe/xe_rtp.h:251 drivers/gpu/drm/xe/xe_rtp.h:269
#: drivers/gpu/drm/xe/xe_rtp.h:288 drivers/gpu/drm/xe/xe_rtp.h:309
msgid "``val_``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:235
msgid "Value to set"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:237
#: drivers/gpu/drm/xe/xe_rtp.h:252 drivers/gpu/drm/xe/xe_rtp.h:270
#: drivers/gpu/drm/xe/xe_rtp.h:289 drivers/gpu/drm/xe/xe_rtp.h:310
#: drivers/gpu/drm/xe/xe_rtp.h:336 drivers/gpu/drm/xe/xe_rtp.h:358
#: drivers/gpu/drm/xe/xe_rtp.h:380 drivers/gpu/drm/xe/xe_rtp.h:405
msgid "``...``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:236
#: drivers/gpu/drm/xe/xe_rtp.h:251 drivers/gpu/drm/xe/xe_rtp.h:269
#: drivers/gpu/drm/xe/xe_rtp.h:288 drivers/gpu/drm/xe/xe_rtp.h:309
msgid "Additional fields to override in the struct xe_rtp_action entry"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:237
msgid "The correspondent notation in bspec is:"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:239
msgid "REGNAME = VALUE"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:250
msgid "``XE_RTP_ACTION_SET (reg_, val_, ...)``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:248
msgid "Set bits from **val_** in the register."
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:250
msgid "Bits to set in the register"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:252
#: drivers/gpu/drm/xe/xe_rtp.h:270
msgid ""
"For masked registers this translates to a single write, while for other "
"registers it's a RMW. The correspondent bspec notation is (example for bits "
"2 and 5, but could be any):"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:256
msgid "REGNAME[2] = 1 REGNAME[5] = 1"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:268
msgid "``XE_RTP_ACTION_CLR (reg_, val_, ...)``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:266
msgid "Clear bits from **val_** in the register."
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:268
msgid "Bits to clear in the register"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:274
msgid "REGNAME[2] = 0 REGNAME[5] = 0"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:286
msgid "``XE_RTP_ACTION_FIELD_SET (reg_, mask_bits_, val_, ...)``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:284
msgid "Set a bit range"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:287
msgid "``mask_bits_``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:286
msgid "Mask of bits to be changed in the register, forming a field"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:287
msgid "Value to set in the field denoted by **mask_bits_**"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:289
msgid ""
"For masked registers this translates to a single write, while for other "
"registers it's a RMW. The correspondent bspec notation is:"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:292
msgid "REGNAME[<end>:<start>] = VALUE"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:308
msgid "``XE_RTP_ACTION_WHITELIST (reg_, val_, ...)``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:306
msgid "Add register to userspace whitelist"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:308
msgid "Whitelist-specific flags to set"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:310
msgid ""
"Add a register to the whitelist, allowing userspace to modify the ster with "
"regular user privileges."
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:324
msgid "``XE_RTP_NAME (s_)``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:322
msgid "Helper to set the name in xe_rtp_entry"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:328
msgid "``s_``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:323
msgid "Name describing this rule, often a HW-specific number"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:324
msgid "TODO: maybe move this behind a debug config?"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:332
msgid "``XE_RTP_ENTRY_FLAG (...)``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:330
msgid "Helper to add multiple flags to a struct xe_rtp_entry_sr"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:331
msgid "Entry flags, without the ``XE_RTP_ENTRY_FLAG_`` prefix"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:332
msgid ""
"Helper to automatically add a ``XE_RTP_ENTRY_FLAG_`` prefix to the flags "
"when defining struct xe_rtp_entry entries. Example:"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:354
msgid "``XE_RTP_ACTION_FLAG (...)``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:352
msgid "Helper to add multiple flags to a struct xe_rtp_action"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:353
msgid "Action flags, without the ``XE_RTP_ACTION_FLAG_`` prefix"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:354
msgid ""
"Helper to automatically add a ``XE_RTP_ACTION_FLAG_`` prefix to the flags "
"when defining struct xe_rtp_action entries. Example:"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:376
msgid "``XE_RTP_RULES (...)``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:374
msgid "Helper to set multiple rules to a struct xe_rtp_entry_sr entry"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:375
msgid "Rules"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:376
msgid ""
"At least one rule is needed and up to 12 are supported. Multiple rules are "
"AND'ed together, i.e. all the rules must evaluate to true for the entry to "
"be processed. See XE_RTP_MATCH_* for the possible match rules. Example:"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:401
msgid "``XE_RTP_ACTIONS (...)``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:399
msgid "Helper to set multiple actions to a struct xe_rtp_entry_sr"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:400
msgid "Actions to be taken"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:401
msgid ""
"At least one action is needed and up to 12 are supported. See "
"XE_RTP_ACTION_* for the possible actions. Example:"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:442
msgid "Match if engine instance is even"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:448
msgid "``const struct xe_gt *gt``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:443
msgid "GT structure"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:445
msgid "``const struct xe_hw_engine *hwe``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:444
msgid "Engine instance"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:446
msgid "**Return**"
msgstr ""

#: ../../../gpu/xe/xe_rtp:16: drivers/gpu/drm/xe/xe_rtp.h:446
msgid "true if engine instance is even, false otherwise"
msgstr ""

#: ../../../gpu/xe/xe_rtp:19: drivers/gpu/drm/xe/xe_rtp.c:236
msgid "Enable tracking of active entries"
msgstr ""

#: ../../../gpu/xe/xe_rtp:19: drivers/gpu/drm/xe/xe_rtp.c:242
#: drivers/gpu/drm/xe/xe_rtp.c:275 drivers/gpu/drm/xe/xe_rtp.c:323
msgid "``struct xe_rtp_process_ctx *ctx``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:19: drivers/gpu/drm/xe/xe_rtp.c:242
msgid "The context for processing the table"
msgstr ""

#: ../../../gpu/xe/xe_rtp:19: drivers/gpu/drm/xe/xe_rtp.c:244
msgid "``unsigned long *active_entries``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:19: drivers/gpu/drm/xe/xe_rtp.c:243
msgid "bitmap to store the active entries"
msgstr ""

#: ../../../gpu/xe/xe_rtp:19: drivers/gpu/drm/xe/xe_rtp.c:245
#: drivers/gpu/drm/xe/xe_rtp.c:274
msgid "``size_t n_entries``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:19: drivers/gpu/drm/xe/xe_rtp.c:244
msgid "number of entries to be processed"
msgstr ""

#: ../../../gpu/xe/xe_rtp:19: drivers/gpu/drm/xe/xe_rtp.c:237
msgid ""
"Set additional metadata to track what entries are considered \"active\", i."
"e. their rules match the condition. Bits are never cleared: entries with "
"matching rules set the corresponding bit in the bitmap."
msgstr ""

#: ../../../gpu/xe/xe_rtp:19: drivers/gpu/drm/xe/xe_rtp.c:269
msgid ""
"Process all rtp **entries**, adding the matching ones to the save-restore "
"argument."
msgstr ""

#: ../../../gpu/xe/xe_rtp:19: drivers/gpu/drm/xe/xe_rtp.c:271
#: drivers/gpu/drm/xe/xe_rtp.c:318
msgid "The context for processing the table, with one of device, gt or hwe"
msgstr ""

#: ../../../gpu/xe/xe_rtp:19: drivers/gpu/drm/xe/xe_rtp.c:273
msgid "``const struct xe_rtp_entry_sr *entries``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:19: drivers/gpu/drm/xe/xe_rtp.c:272
#: drivers/gpu/drm/xe/xe_rtp.c:319
msgid "Table with RTP definitions"
msgstr ""

#: ../../../gpu/xe/xe_rtp:19: drivers/gpu/drm/xe/xe_rtp.c:273
msgid "Number of entries to process, usually ARRAY_SIZE(entries)"
msgstr ""

#: ../../../gpu/xe/xe_rtp:19: drivers/gpu/drm/xe/xe_rtp.c:275
msgid "``struct xe_reg_sr *sr``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:19: drivers/gpu/drm/xe/xe_rtp.c:274
msgid ""
"Save-restore struct where matching rules execute the action. This can be "
"viewed as the \"coalesced view\" of multiple the tables. The bits for each "
"register set are expected not to collide with previously added entries"
msgstr ""

#: ../../../gpu/xe/xe_rtp:19: drivers/gpu/drm/xe/xe_rtp.c:277
msgid ""
"Walk the table pointed by **entries** (with an empty sentinel) and add all "
"entries with matching rules to **sr**. If **hwe** is not NULL, its mmio_base "
"is used to calculate the right register offset"
msgstr ""

#: ../../../gpu/xe/xe_rtp:19: drivers/gpu/drm/xe/xe_rtp.c:317
msgid "Process all rtp **entries**, without running any action"
msgstr ""

#: ../../../gpu/xe/xe_rtp:19: drivers/gpu/drm/xe/xe_rtp.c:320
msgid "``const struct xe_rtp_entry *entries``"
msgstr ""

#: ../../../gpu/xe/xe_rtp:19: drivers/gpu/drm/xe/xe_rtp.c:320
msgid ""
"Walk the table pointed by **entries** (with an empty sentinel), executing "
"the rules. One difference from xe_rtp_process_to_sr(): there is no action "
"associated with each entry since this uses struct xe_rtp_entry. Its main use "
"is for marking active workarounds via "
"xe_rtp_process_ctx_enable_active_tracking()."
msgstr ""
