# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../gpu/nova/core/fwsec.rst:5
msgid "FWSEC (Firmware Security)"
msgstr ""

#: ../../../gpu/nova/core/fwsec.rst:6
msgid ""
"This document briefly/conceptually describes the FWSEC (Firmware Security) "
"image and its role in the GPU boot sequence. As such, this information is "
"subject to change in the future and is only current as of the Ampere GPU "
"family. However, hopefully the concepts described will be useful for "
"understanding the kernel code that deals with it. All the information is "
"derived from publicly available sources such as public drivers and "
"documentation."
msgstr ""

#: ../../../gpu/nova/core/fwsec.rst:13
msgid ""
"The role of FWSEC is to provide a secure boot process. It runs in 'Heavy-"
"secure' mode, and performs firmware verification after a GPU reset before "
"loading various ucode images onto other microcontrollers on the GPU, such as "
"the PMU and GSP."
msgstr ""

#: ../../../gpu/nova/core/fwsec.rst:18
msgid ""
"FWSEC itself is an application stored in the VBIOS ROM in the FWSEC "
"partition of ROM (see vbios.rst for more details). It contains different "
"commands like FRTS (Firmware Runtime Services) and SB (Secure Booting other "
"microcontrollers after reset and loading them with other non-FWSEC ucode). "
"The kernel driver only needs to perform FRTS, since Secure Boot (SB) has "
"already completed by the time the driver is loaded."
msgstr ""

#: ../../../gpu/nova/core/fwsec.rst:25
msgid ""
"The FRTS command carves out the WPR2 region (Write protected region) which "
"contains data required for power management. Once setup, only HS mode ucode "
"can access it (see falcon.rst for privilege levels)."
msgstr ""

#: ../../../gpu/nova/core/fwsec.rst:29
msgid ""
"The FWSEC image is located in the VBIOS ROM in the partition of the ROM that "
"contains various ucode images (also known as applications) -- one of them "
"being FWSEC. For how it is extracted, see vbios.rst and the vbios.rs source "
"code."
msgstr ""

#: ../../../gpu/nova/core/fwsec.rst:33
msgid ""
"The Falcon data for each ucode images (including the FWSEC image) is a "
"combination of headers, data sections (DMEM) and instruction code sections "
"(IMEM). All these ucode images are stored in the same ROM partition and the "
"PMU table is used to look up the application to load it based on its "
"application ID (see vbios.rs)."
msgstr ""

#: ../../../gpu/nova/core/fwsec.rst:38
msgid ""
"For the nova-core driver, the FWSEC contains an 'application interface' "
"called DMEMMAPPER. This interface is used to execute the 'FWSEC-FRTS' "
"command, among others. For Ampere, FWSEC is running on the GSP in Heavy-"
"secure mode and runs FRTS."
msgstr ""

#: ../../../gpu/nova/core/fwsec.rst:43
msgid "FWSEC Memory Layout"
msgstr ""

#: ../../../gpu/nova/core/fwsec.rst:44
msgid "The memory layout of the FWSEC image is as follows::"
msgstr ""

#: ../../../gpu/nova/core/fwsec.rst:172
msgid ""
"This is using an GA-102 Ampere GPU as an example and could vary for future "
"GPUs."
msgstr ""

#: ../../../gpu/nova/core/fwsec.rst:175
msgid ""
"The FWSEC image also plays a role in memory scrubbing (ECC initialization) "
"and VPR (Video Protected Region) initialization as well. Before the nova-"
"core driver is even loaded, the FWSEC image is running on the GSP in heavy-"
"secure mode. After the devinit sequence completes, it does VRAM memory "
"scrubbing (ECC initialization). On consumer GPUs, it scrubs only part of "
"memory and then initiates 'async scrubbing'. Before this async scrubbing "
"completes, the unscrubbed VRAM cannot be used for allocation (thus DRM "
"memory allocators need to wait for this scrubbing to complete)."
msgstr ""
