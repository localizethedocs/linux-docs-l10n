# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-20 11:24+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../dev-tools/kunit/api/test.rst:5
msgid "Test API"
msgstr ""

#: ../../../dev-tools/kunit/api/test.rst:7
msgid "This file documents all of the standard testing API."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:55
msgid "Type of result for a test or test suite"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:59
msgid "**Constants**"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:61
msgid "``KUNIT_SUCCESS``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:62
msgid "Denotes the test suite has not failed nor been skipped"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:64
msgid "``KUNIT_FAILURE``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:65
msgid "Denotes the test has failed."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:67
msgid "``KUNIT_SKIPPED``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:68
msgid "Denotes the test has been skipped."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:89
msgid "represents an individual test case."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:93
#: include/kunit/test.h:256 include/kunit/test.h:315
msgid "**Definition**::"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:104
#: include/kunit/test.h:268 include/kunit/test.h:323
msgid "**Members**"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:91
msgid "``run_case``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:92
msgid "the function representing the actual test case."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:92
#: include/kunit/test.h:254 include/kunit/test.h:1727 include/kunit/test.h:1751
msgid "``name``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:93
msgid "the name of the test case."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:93
msgid "``generate_params``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:94
msgid "the generator function for parameterized tests."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:94
#: include/kunit/test.h:260
msgid "``attr``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:95
msgid "the attributes associated with the test"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:95
msgid "``param_init``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:96
msgid "The init function to run before a parameterized test."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:96
msgid "``param_exit``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:97
msgid "The exit function to run after a parameterized test."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:3
#: include/kunit/test.h:100 include/kunit/test.h:160 include/kunit/test.h:197
#: include/kunit/test.h:234 include/kunit/test.h:264 include/kunit/test.h:321
#: include/kunit/test.h:421 include/kunit/test.h:447 include/kunit/test.h:479
#: include/kunit/test.h:494 include/kunit/test.h:517 include/kunit/test.h:531
#: include/kunit/test.h:544 include/kunit/test.h:556 include/kunit/test.h:580
#: include/kunit/test.h:608 include/kunit/test.h:717 include/kunit/test.h:764
#: include/kunit/test.h:986 include/kunit/test.h:1007 include/kunit/test.h:1026
#: include/kunit/test.h:1047 include/kunit/test.h:1068
#: include/kunit/test.h:1089 include/kunit/test.h:1110
#: include/kunit/test.h:1131 include/kunit/test.h:1152
#: include/kunit/test.h:1173 include/kunit/test.h:1194
#: include/kunit/test.h:1215 include/kunit/test.h:1237
#: include/kunit/test.h:1264 include/kunit/test.h:1289
#: include/kunit/test.h:1310 include/kunit/test.h:1331
#: include/kunit/test.h:1352 include/kunit/test.h:1366
#: include/kunit/test.h:1386 include/kunit/test.h:1406
#: include/kunit/test.h:1426 include/kunit/test.h:1446
#: include/kunit/test.h:1467 include/kunit/test.h:1486
#: include/kunit/test.h:1506 include/kunit/test.h:1527
#: include/kunit/test.h:1548 include/kunit/test.h:1569
#: include/kunit/test.h:1589 include/kunit/test.h:1611
#: include/kunit/test.h:1638 include/kunit/test.h:1663
#: include/kunit/test.h:1684 include/kunit/test.h:1705
#: include/kunit/test.h:1726 include/kunit/test.h:1750
#: include/kunit/test.h:1774
msgid "**Description**"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:97
msgid ""
"A test case is a function with the signature, ``void (*)(struct kunit *)`` "
"that makes expectations and assertions (see KUNIT_EXPECT_TRUE() and "
"KUNIT_ASSERT_TRUE()) about code under test. Each test case is associated "
"with a :c:type:`struct kunit_suite <kunit_suite>` and will be run after the "
"suite's init function and followed by the suite's exit function."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:104
msgid ""
"A test case should be static and should only be created with the "
"KUNIT_CASE() macro; additionally, every array of test cases should be "
"terminated with an empty test case."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:108
msgid "**Example**"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:158
msgid "``KUNIT_CASE (test_name)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:156
msgid "A helper for creating a :c:type:`struct kunit_case <kunit_case>`"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:160
#: include/kunit/test.h:173 include/kunit/test.h:185 include/kunit/test.h:196
#: include/kunit/test.h:217 include/kunit/test.h:231 include/kunit/test.h:420
#: include/kunit/test.h:445 include/kunit/test.h:477 include/kunit/test.h:493
#: include/kunit/test.h:509 include/kunit/test.h:516 include/kunit/test.h:529
#: include/kunit/test.h:544 include/kunit/test.h:554 include/kunit/test.h:578
#: include/kunit/test.h:591 include/kunit/test.h:603 include/kunit/test.h:624
#: include/kunit/test.h:643 include/kunit/test.h:675 include/kunit/test.h:687
#: include/kunit/test.h:698 include/kunit/test.h:718 include/kunit/test.h:763
#: include/kunit/test.h:985 include/kunit/test.h:1006 include/kunit/test.h:1025
#: include/kunit/test.h:1046 include/kunit/test.h:1067
#: include/kunit/test.h:1088 include/kunit/test.h:1109
#: include/kunit/test.h:1130 include/kunit/test.h:1151
#: include/kunit/test.h:1172 include/kunit/test.h:1193
#: include/kunit/test.h:1214 include/kunit/test.h:1235
#: include/kunit/test.h:1262 include/kunit/test.h:1289
#: include/kunit/test.h:1310 include/kunit/test.h:1331
#: include/kunit/test.h:1351 include/kunit/test.h:1365
#: include/kunit/test.h:1386 include/kunit/test.h:1405
#: include/kunit/test.h:1425 include/kunit/test.h:1445
#: include/kunit/test.h:1465 include/kunit/test.h:1485
#: include/kunit/test.h:1505 include/kunit/test.h:1526
#: include/kunit/test.h:1547 include/kunit/test.h:1568
#: include/kunit/test.h:1588 include/kunit/test.h:1609
#: include/kunit/test.h:1636 include/kunit/test.h:1663
#: include/kunit/test.h:1684 include/kunit/test.h:1705
#: include/kunit/test.h:1725 include/kunit/test.h:1749
#: include/kunit/test.h:1771
msgid "**Parameters**"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:162
#: include/kunit/test.h:175 include/kunit/test.h:187 include/kunit/test.h:198
#: include/kunit/test.h:219 include/kunit/test.h:233
msgid "``test_name``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:158
#: include/kunit/test.h:172 include/kunit/test.h:184 include/kunit/test.h:194
#: include/kunit/test.h:216
msgid "a reference to a test case function."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:159
msgid ""
"Takes a symbol for a function representing a test case and creates a :c:type:"
"`struct kunit_case <kunit_case>` object from it. See the documentation for :"
"c:type:`struct kunit_case <kunit_case>` for an example on how to use it."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:171
msgid "``KUNIT_CASE_ATTR (test_name, attributes)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:169
msgid ""
"A helper for creating a :c:type:`struct kunit_case <kunit_case>` with "
"attributes"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:174
#: include/kunit/test.h:219
msgid "``attributes``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:173
#: include/kunit/test.h:218
msgid ""
"a reference to a struct kunit_attributes object containing test attributes"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:183
msgid "``KUNIT_CASE_SLOW (test_name)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:181
msgid ""
"A helper for creating a :c:type:`struct kunit_case <kunit_case>` with the "
"slow attribute"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:194
msgid "``KUNIT_CASE_PARAM (test_name, gen_params)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:192
msgid ""
"A helper for creation a parameterized :c:type:`struct kunit_case "
"<kunit_case>`"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:196
#: include/kunit/test.h:218 include/kunit/test.h:231
msgid "``gen_params``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:195
#: include/kunit/test.h:217
msgid "a reference to a parameter generator function."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:196
msgid "The generator function::"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:200
msgid ""
"is used to lazily generate a series of arbitrarily typed values that fit "
"into a void*. The argument **prev** is the previously returned value, which "
"should be used to derive the next value; **prev** is set to NULL on the "
"initial generator call. When no more values are available, the generator "
"must return NULL. Optionally write a string into **desc** (size of "
"KUNIT_PARAM_DESC_SIZE) describing the parameter."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:215
msgid "``KUNIT_CASE_PARAM_ATTR (test_name, gen_params, attributes)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:213
msgid ""
"A helper for creating a parameterized :c:type:`struct kunit_case "
"<kunit_case>` with attributes"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:229
msgid "``KUNIT_CASE_PARAM_WITH_INIT (test_name, gen_params, init, exit)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:227
msgid ""
"Define a parameterized KUnit test case with custom param_init() and "
"param_exit() functions."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:229
msgid "The function implementing the test case."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:230
msgid "The function to generate parameters for the test case."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:232
#: include/kunit/test.h:257
msgid "``init``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:231
msgid ""
"A reference to the param_init() function to run before a parameterized test."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:233
#: include/kunit/test.h:258
msgid "``exit``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:232
msgid ""
"A reference to the param_exit() function to run after a parameterized test."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:233
msgid ""
"Provides the option to register param_init() and param_exit() functions. "
"param_init/exit will be passed the parameterized test context and run once "
"before and once after the parameterized test. The init function can be used "
"to add resources to share between parameter runs, pass parameter arrays, and "
"any other setup logic. The exit function can be used to clean up resources "
"that were not managed by the parameterized test, and any other teardown "
"logic."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:240
#: include/kunit/test.h:453 include/kunit/test.h:1777
msgid "**Note**"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:241
msgid ""
"If you are registering a parameter array in param_init() with "
"kunit_register_param_array() then you need to pass kunit_array_gen_params() "
"to this as the generator function."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:252
msgid ""
"describes a related collection of :c:type:`struct kunit_case <kunit_case>`"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:255
msgid "the name of the test. Purely informational."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:255
msgid "``suite_init``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:256
msgid "called once per test suite before the test cases."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:256
msgid "``suite_exit``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:257
msgid "called once per test suite after all test cases."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:258
msgid "called before every test case."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:259
msgid "called after every test case."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:259
msgid "``test_cases``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:260
msgid "a null terminated array of test cases."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:261
msgid "the attributes associated with the test suite"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:261
msgid ""
"A kunit_suite is a collection of related :c:type:`struct kunit_case "
"<kunit_case>` s, such that **init** is called before every test case and "
"**exit** is called after every test case, similar to the notion of a *test "
"fixture* or a *test class* in other unit testing frameworks like JUnit or "
"Googletest."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:266
msgid ""
"Note that **exit** and **suite_exit** will run even if **init** or "
"**suite_init** fail: make sure they can handle any inconsistent state which "
"may result."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:269
msgid ""
"Every :c:type:`struct kunit_case <kunit_case>` must be associated with a "
"kunit_suite for KUnit to run it."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:311
msgid "represents a running instance of a test."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:313
msgid "``priv``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:314
msgid ""
"for user to store arbitrary data. Commonly used to pass data created in the "
"init function (see :c:type:`struct kunit_suite <kunit_suite>`)."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:315
msgid "``parent``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:316
msgid ""
"reference to the parent context of type struct kunit that can be used for "
"storing shared resources."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:317
msgid "``params_array``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:318
msgid "for storing the parameter array."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:318
msgid ""
"Used to store information about the current context under which the test is "
"running. Most of this data is private and should only be accessed indirectly "
"via public functions; the exceptions are **priv**, **parent** and "
"**params_array** which can be used by the test writer to store arbitrary "
"data, access the parent context, and to store the parameter array, "
"respectively."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:418
msgid "``kunit_test_suites (__suites...)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:416
msgid ""
"used to register one or more :c:type:`struct kunit_suite <kunit_suite>` with "
"KUnit."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:422
#: include/kunit/test.h:447
msgid "``__suites...``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:419
#: include/kunit/test.h:445
msgid ""
"a statically allocated list of :c:type:`struct kunit_suite <kunit_suite>`."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:420
msgid ""
"Registers **suites** with the test framework. This is done by placing the "
"array of struct kunit_suite * in the .kunit_test_suites ELF section."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:424
msgid ""
"When builtin, KUnit tests are all run via the executor at boot, and when "
"built as a module, they run on module load."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:443
msgid "``kunit_test_init_section_suites (__suites...)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:441
msgid ""
"used to register one or more :c:type:`struct kunit_suite <kunit_suite>` "
"containing init functions or init data."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:446
msgid ""
"This functions similar to kunit_test_suites() except that it compiles the "
"list of suites during init phase."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:449
msgid ""
"This macro also suffixes the array and suite declarations it makes with "
"_probe; so that modpost suppresses warnings about referencing init data for "
"symbols named in this manner."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:454
msgid ""
"these init tests are not able to be run after boot so there is no \"run\" "
"debugfs file generated for these tests."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:457
msgid ""
"Also, do not mark the suite or test case structs with __initdata because "
"they will be used after the init phase with debugfs."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:473
msgid "Like kmalloc_array() except the allocation is *test managed*."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:479
#: include/kunit/test.h:495 include/kunit/test.h:511 include/kunit/test.h:518
#: include/kunit/test.h:531 include/kunit/test.h:546 include/kunit/test.h:556
#: include/kunit/test.h:580 include/kunit/test.h:605
msgid "``struct kunit *test``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:474
#: include/kunit/test.h:490 include/kunit/test.h:513 include/kunit/test.h:526
#: include/kunit/test.h:541 include/kunit/test.h:552 include/kunit/test.h:576
#: include/kunit/test.h:600 include/kunit/test.h:622 include/kunit/test.h:641
#: include/kunit/test.h:673 include/kunit/test.h:685 include/kunit/test.h:696
#: include/kunit/test.h:715 include/kunit/test.h:760 include/kunit/test.h:982
#: include/kunit/test.h:1003 include/kunit/test.h:1022
#: include/kunit/test.h:1043 include/kunit/test.h:1064
#: include/kunit/test.h:1085 include/kunit/test.h:1106
#: include/kunit/test.h:1127 include/kunit/test.h:1148
#: include/kunit/test.h:1169 include/kunit/test.h:1190
#: include/kunit/test.h:1211 include/kunit/test.h:1232
#: include/kunit/test.h:1259 include/kunit/test.h:1286
#: include/kunit/test.h:1307 include/kunit/test.h:1328
#: include/kunit/test.h:1348 include/kunit/test.h:1362
#: include/kunit/test.h:1383 include/kunit/test.h:1402
#: include/kunit/test.h:1422 include/kunit/test.h:1442
#: include/kunit/test.h:1463 include/kunit/test.h:1482
#: include/kunit/test.h:1502 include/kunit/test.h:1523
#: include/kunit/test.h:1544 include/kunit/test.h:1565
#: include/kunit/test.h:1585 include/kunit/test.h:1606
#: include/kunit/test.h:1633 include/kunit/test.h:1660
#: include/kunit/test.h:1681 include/kunit/test.h:1702
msgid "The test context object."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:476
#: include/kunit/test.h:528
msgid "``size_t n``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:475
#: include/kunit/test.h:527
msgid "number of elements."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:477
#: include/kunit/test.h:492 include/kunit/test.h:515 include/kunit/test.h:529
msgid "``size_t size``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:476
#: include/kunit/test.h:491 include/kunit/test.h:514 include/kunit/test.h:528
msgid "The size in bytes of the desired memory."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:478
#: include/kunit/test.h:493 include/kunit/test.h:516 include/kunit/test.h:530
#: include/kunit/test.h:555 include/kunit/test.h:579
msgid "``gfp_t gfp``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:477
#: include/kunit/test.h:492 include/kunit/test.h:515 include/kunit/test.h:529
#: include/kunit/test.h:554 include/kunit/test.h:578
msgid "flags passed to underlying kmalloc()."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:478
msgid ""
"Just like `kmalloc_array(...)`, except the allocation is managed by the test "
"case and is automatically cleaned up after the test case concludes. See "
"kunit_add_action() for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:482
#: include/kunit/test.h:495
msgid ""
"Note that some internal context data is also allocated with GFP_KERNEL, "
"regardless of the gfp passed in."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:489
msgid "Like kmalloc() except the allocation is *test managed*."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:493
msgid "See kmalloc() and kunit_kmalloc_array() for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:505
msgid "Like kfree except for allocations managed by KUnit."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:506
msgid "The test case to which the resource belongs."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:508
msgid "``const void *ptr``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:507
msgid "The memory allocation to free."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:512
msgid "Just like kunit_kmalloc(), but zeroes the allocation."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:516
msgid "See kzalloc() and kunit_kmalloc_array() for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:525
msgid "Just like kunit_kmalloc_array(), but zeroes the allocation."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:530
msgid "See kcalloc() and kunit_kmalloc_array() for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:540
msgid "conditionally free test managed memory"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:543
msgid "``const void *x``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:542
msgid "pointer to the memory"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:543
msgid ""
"Calls kunit_kfree() only if **x** is not in .rodata section. See "
"kunit_kstrdup_const() for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:550
msgid "Duplicates a string into a test managed allocation."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:554
#: include/kunit/test.h:578
msgid "``const char *str``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:553
#: include/kunit/test.h:577
msgid "The NULL-terminated string to duplicate."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:555
msgid "See kstrdup() and kunit_kmalloc_array() for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:574
msgid "Conditionally duplicates a string into a test managed allocation."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:579
msgid ""
"Calls kunit_kstrdup() only if **str** is not in the rodata section. Must be "
"freed with kunit_kfree_const() -- not kunit_kfree(). See kstrdup_const() and "
"kunit_kmalloc_array() for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:587
msgid "Create and attach a new mm if it doesn't already exist."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:593
msgid "``void``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1
msgid "no arguments"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:588
msgid ""
"Allocates a :c:type:`struct mm_struct <mm_struct>` and attaches it to "
"**current**. In most cases, call kunit_vm_mmap() without calling "
"kunit_attach_mm() directly. Only necessary when code under test accesses the "
"mm before executing the mmap (e.g., to perform additional initialization "
"beforehand)."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:593
msgid "**Return**"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:594
msgid "0 on success, -errno on failure."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:599
msgid "Allocate KUnit-tracked vm_mmap() area"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:602
msgid "``struct file *file``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:601
msgid "struct file pointer to map from, if any"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:603
msgid "``unsigned long addr``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:602
msgid "desired address, if any"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:604
msgid "``unsigned long len``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:603
msgid "how many bytes to allocate"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:605
msgid "``unsigned long prot``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:604
msgid "mmap PROT_* bits"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:606
msgid "``unsigned long flag``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:605
msgid "mmap flags"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:607
msgid "``unsigned long offset``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:606
msgid "offset into **file** to start mapping from."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:607
msgid "See vm_mmap() for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:622
msgid "``kunit_mark_skipped (test, fmt, ...)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:620
#: include/kunit/test.h:639
msgid "Marks **test** as skipped"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:626
#: include/kunit/test.h:645 include/kunit/test.h:677 include/kunit/test.h:689
#: include/kunit/test.h:700 include/kunit/test.h:720 include/kunit/test.h:765
#: include/kunit/test.h:987 include/kunit/test.h:1008 include/kunit/test.h:1027
#: include/kunit/test.h:1048 include/kunit/test.h:1069
#: include/kunit/test.h:1090 include/kunit/test.h:1111
#: include/kunit/test.h:1132 include/kunit/test.h:1153
#: include/kunit/test.h:1174 include/kunit/test.h:1195
#: include/kunit/test.h:1216 include/kunit/test.h:1237
#: include/kunit/test.h:1264 include/kunit/test.h:1291
#: include/kunit/test.h:1312 include/kunit/test.h:1333
#: include/kunit/test.h:1353 include/kunit/test.h:1367
#: include/kunit/test.h:1388 include/kunit/test.h:1407
#: include/kunit/test.h:1427 include/kunit/test.h:1447
#: include/kunit/test.h:1467 include/kunit/test.h:1487
#: include/kunit/test.h:1507 include/kunit/test.h:1528
#: include/kunit/test.h:1549 include/kunit/test.h:1570
#: include/kunit/test.h:1590 include/kunit/test.h:1611
#: include/kunit/test.h:1638 include/kunit/test.h:1665
#: include/kunit/test.h:1686 include/kunit/test.h:1707
#: include/kunit/test.h:1773
msgid "``test``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:624
#: include/kunit/test.h:643 include/kunit/test.h:675 include/kunit/test.h:687
#: include/kunit/test.h:698 include/kunit/test.h:762 include/kunit/test.h:1350
msgid "``fmt``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:623
#: include/kunit/test.h:642 include/kunit/test.h:674 include/kunit/test.h:686
#: include/kunit/test.h:697
msgid "A printk() style format string."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:625
#: include/kunit/test.h:644 include/kunit/test.h:676 include/kunit/test.h:688
#: include/kunit/test.h:699 include/kunit/test.h:763 include/kunit/test.h:1351
msgid "``...``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1
msgid "variable arguments"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:624
msgid ""
"Marks the test as skipped. **fmt** is given output as the test status "
"comment, typically the reason the test was skipped."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:627
msgid "Test execution continues after kunit_mark_skipped() is called."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:641
msgid "``kunit_skip (test, fmt, ...)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:643
msgid ""
"Skips the test. **fmt** is given output as the test status comment, "
"typically the reason the test was skipped."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:646
msgid "Test execution is halted after kunit_skip() is called."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:673
msgid "``kunit_info (test, fmt, ...)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:671
msgid "Prints an INFO level message associated with **test**."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:675
msgid ""
"Prints an info level message associated with the test suite being run. Takes "
"a variable number of format parameters just like printk()."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:685
msgid "``kunit_warn (test, fmt, ...)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:683
msgid "Prints a WARN level message associated with **test**."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:687
msgid "Prints a warning level message."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:696
msgid "``kunit_err (test, fmt, ...)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:694
msgid "Prints an ERROR level message associated with **test**."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:698
msgid "Prints an error level message."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:716
msgid "``KUNIT_SUCCEED (test)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:714
msgid "A no-op expectation. Only exists for code clarity."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:716
msgid ""
"The opposite of KUNIT_FAIL(), it is an expectation that cannot fail. In "
"other words, it does nothing and only exists for code clarity. See "
"KUNIT_EXPECT_TRUE() for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:761
msgid "``KUNIT_FAIL (test, fmt, ...)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:759
msgid "Always causes a test to fail when evaluated."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:761
#: include/kunit/test.h:1349
msgid "an informational message to be printed when the assertion is made."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:762
#: include/kunit/test.h:1350
msgid "string format arguments."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:763
msgid ""
"The opposite of KUNIT_SUCCEED(), it is an expectation that always fails. In "
"other words, it always results in a failed expectation, and consequently "
"always causes the test case to fail when evaluated. See KUNIT_EXPECT_TRUE() "
"for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:983
msgid "``KUNIT_EXPECT_TRUE (test, condition)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:981
msgid "Causes a test failure when the expression is not true."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:984
#: include/kunit/test.h:1005 include/kunit/test.h:1364
#: include/kunit/test.h:1385
msgid "``condition``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:983
msgid ""
"an arbitrary boolean expression. The test fails when this does not evaluate "
"to true."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:985
msgid ""
"This and expectations of the form `KUNIT_EXPECT_*` will cause the test case "
"to fail when the specified condition is not met; however, it will not "
"prevent the test case from continuing to run; this is otherwise known as an "
"*expectation failure*."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1004
msgid "``KUNIT_EXPECT_FALSE (test, condition)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1002
msgid "Makes a test failure when the expression is not false."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1004
msgid ""
"an arbitrary boolean expression. The test fails when this does not evaluate "
"to false."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1006
msgid ""
"Sets an expectation that **condition** evaluates to false. See "
"KUNIT_EXPECT_TRUE() for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1023
msgid "``KUNIT_EXPECT_EQ (test, left, right)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1021
msgid "Sets an expectation that **left** and **right** are equal."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1024
#: include/kunit/test.h:1045 include/kunit/test.h:1066
#: include/kunit/test.h:1087 include/kunit/test.h:1108
#: include/kunit/test.h:1129 include/kunit/test.h:1150
#: include/kunit/test.h:1171 include/kunit/test.h:1192
#: include/kunit/test.h:1213 include/kunit/test.h:1234
#: include/kunit/test.h:1261 include/kunit/test.h:1404
#: include/kunit/test.h:1424 include/kunit/test.h:1444
#: include/kunit/test.h:1465 include/kunit/test.h:1484
#: include/kunit/test.h:1504 include/kunit/test.h:1525
#: include/kunit/test.h:1546 include/kunit/test.h:1567
#: include/kunit/test.h:1587 include/kunit/test.h:1608
#: include/kunit/test.h:1635
msgid "``left``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1023
#: include/kunit/test.h:1024 include/kunit/test.h:1065
#: include/kunit/test.h:1066 include/kunit/test.h:1107
#: include/kunit/test.h:1108 include/kunit/test.h:1128
#: include/kunit/test.h:1129 include/kunit/test.h:1149
#: include/kunit/test.h:1150 include/kunit/test.h:1170
#: include/kunit/test.h:1171 include/kunit/test.h:1403
#: include/kunit/test.h:1404 include/kunit/test.h:1443
#: include/kunit/test.h:1444 include/kunit/test.h:1483
#: include/kunit/test.h:1484 include/kunit/test.h:1503
#: include/kunit/test.h:1504 include/kunit/test.h:1524
#: include/kunit/test.h:1525 include/kunit/test.h:1545
#: include/kunit/test.h:1546
msgid "an arbitrary expression that evaluates to a primitive C type."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1025
#: include/kunit/test.h:1046 include/kunit/test.h:1067
#: include/kunit/test.h:1088 include/kunit/test.h:1109
#: include/kunit/test.h:1130 include/kunit/test.h:1151
#: include/kunit/test.h:1172 include/kunit/test.h:1193
#: include/kunit/test.h:1214 include/kunit/test.h:1235
#: include/kunit/test.h:1262 include/kunit/test.h:1405
#: include/kunit/test.h:1425 include/kunit/test.h:1445
#: include/kunit/test.h:1466 include/kunit/test.h:1485
#: include/kunit/test.h:1505 include/kunit/test.h:1526
#: include/kunit/test.h:1547 include/kunit/test.h:1568
#: include/kunit/test.h:1588 include/kunit/test.h:1609
#: include/kunit/test.h:1636
msgid "``right``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1025
#: include/kunit/test.h:1046
msgid ""
"Sets an expectation that the values that **left** and **right** evaluate to "
"are equal. This is semantically equivalent to KUNIT_EXPECT_TRUE(**test**, "
"(**left**) == (**right**)). See KUNIT_EXPECT_TRUE() for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1044
msgid "``KUNIT_EXPECT_PTR_EQ (test, left, right)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1042
msgid "Expects that pointers **left** and **right** are equal."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1044
#: include/kunit/test.h:1045 include/kunit/test.h:1086
#: include/kunit/test.h:1087 include/kunit/test.h:1423
#: include/kunit/test.h:1424 include/kunit/test.h:1464
#: include/kunit/test.h:1465
msgid "an arbitrary expression that evaluates to a pointer."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1065
msgid "``KUNIT_EXPECT_NE (test, left, right)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1063
msgid "An expectation that **left** and **right** are not equal."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1067
#: include/kunit/test.h:1088
msgid ""
"Sets an expectation that the values that **left** and **right** evaluate to "
"are not equal. This is semantically equivalent to "
"KUNIT_EXPECT_TRUE(**test**, (**left**) != (**right**)). See "
"KUNIT_EXPECT_TRUE() for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1086
msgid "``KUNIT_EXPECT_PTR_NE (test, left, right)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1084
msgid "Expects that pointers **left** and **right** are not equal."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1107
msgid "``KUNIT_EXPECT_LT (test, left, right)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1105
msgid "An expectation that **left** is less than **right**."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1109
msgid ""
"Sets an expectation that the value that **left** evaluates to is less than "
"the value that **right** evaluates to. This is semantically equivalent to "
"KUNIT_EXPECT_TRUE(**test**, (**left**) < (**right**)). See "
"KUNIT_EXPECT_TRUE() for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1128
msgid "``KUNIT_EXPECT_LE (test, left, right)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1126
msgid "Expects that **left** is less than or equal to **right**."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1130
msgid ""
"Sets an expectation that the value that **left** evaluates to is less than "
"or equal to the value that **right** evaluates to. Semantically this is "
"equivalent to KUNIT_EXPECT_TRUE(**test**, (**left**) <= (**right**)). See "
"KUNIT_EXPECT_TRUE() for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1149
msgid "``KUNIT_EXPECT_GT (test, left, right)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1147
msgid "An expectation that **left** is greater than **right**."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1151
msgid ""
"Sets an expectation that the value that **left** evaluates to is greater "
"than the value that **right** evaluates to. This is semantically equivalent "
"to KUNIT_EXPECT_TRUE(**test**, (**left**) > (**right**)). See "
"KUNIT_EXPECT_TRUE() for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1170
msgid "``KUNIT_EXPECT_GE (test, left, right)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1168
msgid "Expects that **left** is greater than or equal to **right**."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1172
msgid ""
"Sets an expectation that the value that **left** evaluates to is greater "
"than the value that **right** evaluates to. This is semantically equivalent "
"to KUNIT_EXPECT_TRUE(**test**, (**left**) >= (**right**)). See "
"KUNIT_EXPECT_TRUE() for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1191
msgid "``KUNIT_EXPECT_STREQ (test, left, right)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1189
msgid "Expects that strings **left** and **right** are equal."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1191
#: include/kunit/test.h:1192 include/kunit/test.h:1212
#: include/kunit/test.h:1213 include/kunit/test.h:1566
#: include/kunit/test.h:1567 include/kunit/test.h:1586
#: include/kunit/test.h:1587
msgid "an arbitrary expression that evaluates to a null terminated string."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1193
msgid ""
"Sets an expectation that the values that **left** and **right** evaluate to "
"are equal. This is semantically equivalent to KUNIT_EXPECT_TRUE(**test**, !"
"strcmp((**left**), (**right**))). See KUNIT_EXPECT_TRUE() for more "
"information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1212
msgid "``KUNIT_EXPECT_STRNEQ (test, left, right)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1210
msgid "Expects that strings **left** and **right** are not equal."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1214
msgid ""
"Sets an expectation that the values that **left** and **right** evaluate to "
"are not equal. This is semantically equivalent to "
"KUNIT_EXPECT_TRUE(**test**, strcmp((**left**), (**right**))). See "
"KUNIT_EXPECT_TRUE() for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1233
msgid "``KUNIT_EXPECT_MEMEQ (test, left, right, size)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1231
msgid ""
"Expects that the first **size** bytes of **left** and **right** are equal."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1233
#: include/kunit/test.h:1234 include/kunit/test.h:1260
#: include/kunit/test.h:1261 include/kunit/test.h:1607
#: include/kunit/test.h:1608 include/kunit/test.h:1634
#: include/kunit/test.h:1635
msgid "An arbitrary expression that evaluates to the specified size."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1236
#: include/kunit/test.h:1263 include/kunit/test.h:1610
#: include/kunit/test.h:1637
msgid "``size``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1235
#: include/kunit/test.h:1262 include/kunit/test.h:1609
#: include/kunit/test.h:1636
msgid "Number of bytes compared."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1236
msgid ""
"Sets an expectation that the values that **left** and **right** evaluate to "
"are equal. This is semantically equivalent to KUNIT_EXPECT_TRUE(**test**, !"
"memcmp((**left**), (**right**), (**size**))). See KUNIT_EXPECT_TRUE() for "
"more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1241
#: include/kunit/test.h:1268
msgid ""
"Although this expectation works for any memory block, it is not recommended "
"for comparing more structured data, such as structs. This expectation is "
"recommended for comparing, for example, data arrays."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1260
msgid "``KUNIT_EXPECT_MEMNEQ (test, left, right, size)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1258
msgid ""
"Expects that the first **size** bytes of **left** and **right** are not "
"equal."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1263
msgid ""
"Sets an expectation that the values that **left** and **right** evaluate to "
"are not equal. This is semantically equivalent to "
"KUNIT_EXPECT_TRUE(**test**, memcmp((**left**), (**right**), (**size**))). "
"See KUNIT_EXPECT_TRUE() for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1287
msgid "``KUNIT_EXPECT_NULL (test, ptr)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1285
msgid "Expects that **ptr** is null."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1288
#: include/kunit/test.h:1309 include/kunit/test.h:1330
#: include/kunit/test.h:1662 include/kunit/test.h:1683
#: include/kunit/test.h:1704
msgid "``ptr``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1287
#: include/kunit/test.h:1308 include/kunit/test.h:1329
#: include/kunit/test.h:1661 include/kunit/test.h:1682
#: include/kunit/test.h:1703
msgid "an arbitrary pointer."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1288
msgid ""
"Sets an expectation that the value that **ptr** evaluates to is null. This "
"is semantically equivalent to KUNIT_EXPECT_PTR_EQ(**test**, ptr, NULL). See "
"KUNIT_EXPECT_TRUE() for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1308
msgid "``KUNIT_EXPECT_NOT_NULL (test, ptr)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1306
msgid "Expects that **ptr** is not null."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1309
msgid ""
"Sets an expectation that the value that **ptr** evaluates to is not null. "
"This is semantically equivalent to KUNIT_EXPECT_PTR_NE(**test**, ptr, NULL). "
"See KUNIT_EXPECT_TRUE() for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1329
msgid "``KUNIT_EXPECT_NOT_ERR_OR_NULL (test, ptr)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1327
msgid "Expects that **ptr** is not null and not err."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1330
msgid ""
"Sets an expectation that the value that **ptr** evaluates to is not null and "
"not an errno stored in a pointer. This is semantically equivalent to "
"KUNIT_EXPECT_TRUE(**test**, !IS_ERR_OR_NULL(**ptr**)). See "
"KUNIT_EXPECT_TRUE() for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1349
msgid "``KUNIT_FAIL_AND_ABORT (test, fmt, ...)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1347
msgid "Always causes a test to fail and abort when evaluated."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1351
msgid ""
"The opposite of KUNIT_SUCCEED(), it is an assertion that always fails. In "
"other words, it always results in a failed assertion, and consequently "
"always causes the test case to fail and abort when evaluated. See "
"KUNIT_ASSERT_TRUE() for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1363
msgid "``KUNIT_ASSERT_TRUE (test, condition)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1361
msgid "Sets an assertion that **condition** is true."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1363
msgid ""
"an arbitrary boolean expression. The test fails and aborts when this does "
"not evaluate to true."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1365
msgid ""
"This and assertions of the form `KUNIT_ASSERT_*` will cause the test case to "
"fail *and immediately abort* when the specified condition is not met. Unlike "
"an expectation failure, it will prevent the test case from continuing to "
"run; this is otherwise known as an *assertion failure*."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1384
msgid "``KUNIT_ASSERT_FALSE (test, condition)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1382
msgid "Sets an assertion that **condition** is false."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1384
msgid "an arbitrary boolean expression."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1385
msgid ""
"Sets an assertion that the value that **condition** evaluates to is false. "
"This is the same as KUNIT_EXPECT_FALSE(), except it causes an assertion "
"failure (see KUNIT_ASSERT_TRUE()) when the assertion is not met."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1403
msgid "``KUNIT_ASSERT_EQ (test, left, right)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1401
msgid "Sets an assertion that **left** and **right** are equal."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1405
#: include/kunit/test.h:1425
msgid ""
"Sets an assertion that the values that **left** and **right** evaluate to "
"are equal. This is the same as KUNIT_EXPECT_EQ(), except it causes an "
"assertion failure (see KUNIT_ASSERT_TRUE()) when the assertion is not met."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1423
msgid "``KUNIT_ASSERT_PTR_EQ (test, left, right)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1421
msgid "Asserts that pointers **left** and **right** are equal."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1443
msgid "``KUNIT_ASSERT_NE (test, left, right)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1441
msgid "An assertion that **left** and **right** are not equal."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1445
#: include/kunit/test.h:1466
msgid ""
"Sets an assertion that the values that **left** and **right** evaluate to "
"are not equal. This is the same as KUNIT_EXPECT_NE(), except it causes an "
"assertion failure (see KUNIT_ASSERT_TRUE()) when the assertion is not met."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1463
msgid "``KUNIT_ASSERT_PTR_NE (test, left, right)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1461
msgid ""
"Asserts that pointers **left** and **right** are not equal. "
"KUNIT_ASSERT_PTR_EQ() - Asserts that pointers **left** and **right** are "
"equal."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1483
msgid "``KUNIT_ASSERT_LT (test, left, right)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1481
msgid "An assertion that **left** is less than **right**."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1485
msgid ""
"Sets an assertion that the value that **left** evaluates to is less than the "
"value that **right** evaluates to. This is the same as KUNIT_EXPECT_LT(), "
"except it causes an assertion failure (see KUNIT_ASSERT_TRUE()) when the "
"assertion is not met."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1503
msgid "``KUNIT_ASSERT_LE (test, left, right)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1501
msgid "An assertion that **left** is less than or equal to **right**."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1505
msgid ""
"Sets an assertion that the value that **left** evaluates to is less than or "
"equal to the value that **right** evaluates to. This is the same as "
"KUNIT_EXPECT_LE(), except it causes an assertion failure (see "
"KUNIT_ASSERT_TRUE()) when the assertion is not met."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1524
msgid "``KUNIT_ASSERT_GT (test, left, right)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1522
msgid "An assertion that **left** is greater than **right**."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1526
msgid ""
"Sets an assertion that the value that **left** evaluates to is greater than "
"the value that **right** evaluates to. This is the same as "
"KUNIT_EXPECT_GT(), except it causes an assertion failure (see "
"KUNIT_ASSERT_TRUE()) when the assertion is not met."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1545
msgid "``KUNIT_ASSERT_GE (test, left, right)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1543
msgid "Assertion that **left** is greater than or equal to **right**."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1547
msgid ""
"Sets an assertion that the value that **left** evaluates to is greater than "
"the value that **right** evaluates to. This is the same as "
"KUNIT_EXPECT_GE(), except it causes an assertion failure (see "
"KUNIT_ASSERT_TRUE()) when the assertion is not met."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1566
msgid "``KUNIT_ASSERT_STREQ (test, left, right)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1564
msgid "An assertion that strings **left** and **right** are equal."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1568
msgid ""
"Sets an assertion that the values that **left** and **right** evaluate to "
"are equal. This is the same as KUNIT_EXPECT_STREQ(), except it causes an "
"assertion failure (see KUNIT_ASSERT_TRUE()) when the assertion is not met."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1586
msgid "``KUNIT_ASSERT_STRNEQ (test, left, right)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1584
msgid "An assertion that strings **left** and **right** are not equal."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1588
msgid ""
"Sets an assertion that the values that **left** and **right** evaluate to "
"are not equal. This is semantically equivalent to "
"KUNIT_ASSERT_TRUE(**test**, strcmp((**left**), (**right**))). See "
"KUNIT_ASSERT_TRUE() for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1607
msgid "``KUNIT_ASSERT_MEMEQ (test, left, right, size)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1605
msgid ""
"Asserts that the first **size** bytes of **left** and **right** are equal."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1610
msgid ""
"Sets an assertion that the values that **left** and **right** evaluate to "
"are equal. This is semantically equivalent to KUNIT_ASSERT_TRUE(**test**, !"
"memcmp((**left**), (**right**), (**size**))). See KUNIT_ASSERT_TRUE() for "
"more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1615
#: include/kunit/test.h:1642
msgid ""
"Although this assertion works for any memory block, it is not recommended "
"for comparing more structured data, such as structs. This assertion is "
"recommended for comparing, for example, data arrays."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1634
msgid "``KUNIT_ASSERT_MEMNEQ (test, left, right, size)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1632
msgid ""
"Asserts that the first **size** bytes of **left** and **right** are not "
"equal."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1637
msgid ""
"Sets an assertion that the values that **left** and **right** evaluate to "
"are not equal. This is semantically equivalent to "
"KUNIT_ASSERT_TRUE(**test**, memcmp((**left**), (**right**), (**size**))). "
"See KUNIT_ASSERT_TRUE() for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1661
msgid "``KUNIT_ASSERT_NULL (test, ptr)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1659
msgid "Asserts that pointers **ptr** is null."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1662
msgid ""
"Sets an assertion that the values that **ptr** evaluates to is null. This is "
"the same as KUNIT_EXPECT_NULL(), except it causes an assertion failure (see "
"KUNIT_ASSERT_TRUE()) when the assertion is not met."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1682
msgid "``KUNIT_ASSERT_NOT_NULL (test, ptr)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1680
msgid "Asserts that pointers **ptr** is not null."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1683
msgid ""
"Sets an assertion that the values that **ptr** evaluates to is not null. "
"This is the same as KUNIT_EXPECT_NOT_NULL(), except it causes an assertion "
"failure (see KUNIT_ASSERT_TRUE()) when the assertion is not met."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1703
msgid "``KUNIT_ASSERT_NOT_ERR_OR_NULL (test, ptr)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1701
msgid "Assertion that **ptr** is not null and not err."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1704
msgid ""
"Sets an assertion that the value that **ptr** evaluates to is not null and "
"not an errno stored in a pointer. This is the same as "
"KUNIT_EXPECT_NOT_ERR_OR_NULL(), except it causes an assertion failure (see "
"KUNIT_ASSERT_TRUE()) when the assertion is not met."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1723
msgid "``KUNIT_ARRAY_PARAM (name, array, get_desc)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1721
#: include/kunit/test.h:1745
msgid "Define test parameter generator from an array."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1722
#: include/kunit/test.h:1746
msgid "prefix for the test parameter generator function."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1724
#: include/kunit/test.h:1748 include/kunit/test.h:1770
msgid "``array``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1723
#: include/kunit/test.h:1747
msgid "array of test parameters."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1725
#: include/kunit/test.h:1772
msgid "``get_desc``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1724
msgid "function to convert param to description; NULL to use default"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1725
#: include/kunit/test.h:1749
msgid ""
"Define function **name_gen_params** which uses **array** to generate "
"parameters."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1747
msgid "``KUNIT_ARRAY_PARAM_DESC (name, array, desc_member)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1749
msgid "``desc_member``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1748
msgid "structure member from array element to use as description"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1769
msgid "``kunit_register_params_array (test, array, param_count, get_desc)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1767
msgid "Register parameter array for a KUnit test."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1768
msgid "The KUnit test structure to which parameters will be added."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1769
msgid "An array of test parameters."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1771
msgid "``param_count``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1770
msgid "Number of parameters."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1771
msgid ""
"Function that generates a string description for a given parameter element."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1773
msgid ""
"This macro initializes the **test**'s parameter array data, storing "
"information including the parameter array, its count, the element size, and "
"the parameter description function within `test->params_array`."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1778
msgid ""
"If using this macro in param_init(), kunit_array_gen_params() will then need "
"to be manually provided as the parameter generator function to "
"KUNIT_CASE_PARAM_WITH_INIT(). kunit_array_gen_params() is a KUnit function "
"that uses the registered array to generate parameters"
msgstr ""
