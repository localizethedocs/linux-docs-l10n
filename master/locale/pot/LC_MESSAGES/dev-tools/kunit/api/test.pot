# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../dev-tools/kunit/api/test.rst:5
msgid "Test API"
msgstr ""

#: ../../../dev-tools/kunit/api/test.rst:7
msgid "This file documents all of the standard testing API."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:55
msgid "Type of result for a test or test suite"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:59
msgid "**Constants**"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:61
msgid "``KUNIT_SUCCESS``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:62
msgid "Denotes the test suite has not failed nor been skipped"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:64
msgid "``KUNIT_FAILURE``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:65
msgid "Denotes the test has failed."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:67
msgid "``KUNIT_SKIPPED``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:68
msgid "Denotes the test has been skipped."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:89
msgid "represents an individual test case."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:93
#: include/kunit/test.h:226 include/kunit/test.h:271
msgid "**Definition**::"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:102
#: include/kunit/test.h:238 include/kunit/test.h:277
msgid "**Members**"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:91
msgid "``run_case``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:92
msgid "the function representing the actual test case."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:92
#: include/kunit/test.h:224 include/kunit/test.h:1675 include/kunit/test.h:1696
msgid "``name``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:93
msgid "the name of the test case."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:93
msgid "``generate_params``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:94
msgid "the generator function for parameterized tests."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:94
#: include/kunit/test.h:230
msgid "``attr``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:95
msgid "the attributes associated with the test"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:3
#: include/kunit/test.h:98 include/kunit/test.h:155 include/kunit/test.h:192
#: include/kunit/test.h:234 include/kunit/test.h:274 include/kunit/test.h:369
#: include/kunit/test.h:395 include/kunit/test.h:427 include/kunit/test.h:442
#: include/kunit/test.h:465 include/kunit/test.h:479 include/kunit/test.h:492
#: include/kunit/test.h:504 include/kunit/test.h:528 include/kunit/test.h:556
#: include/kunit/test.h:665 include/kunit/test.h:712 include/kunit/test.h:934
#: include/kunit/test.h:955 include/kunit/test.h:974 include/kunit/test.h:995
#: include/kunit/test.h:1016 include/kunit/test.h:1037
#: include/kunit/test.h:1058 include/kunit/test.h:1079
#: include/kunit/test.h:1100 include/kunit/test.h:1121
#: include/kunit/test.h:1142 include/kunit/test.h:1163
#: include/kunit/test.h:1185 include/kunit/test.h:1212
#: include/kunit/test.h:1237 include/kunit/test.h:1258
#: include/kunit/test.h:1279 include/kunit/test.h:1300
#: include/kunit/test.h:1314 include/kunit/test.h:1334
#: include/kunit/test.h:1354 include/kunit/test.h:1374
#: include/kunit/test.h:1394 include/kunit/test.h:1415
#: include/kunit/test.h:1434 include/kunit/test.h:1454
#: include/kunit/test.h:1475 include/kunit/test.h:1496
#: include/kunit/test.h:1517 include/kunit/test.h:1537
#: include/kunit/test.h:1559 include/kunit/test.h:1586
#: include/kunit/test.h:1611 include/kunit/test.h:1632
#: include/kunit/test.h:1653 include/kunit/test.h:1674
#: include/kunit/test.h:1695
msgid "**Description**"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:95
msgid ""
"A test case is a function with the signature, ``void (*)(struct kunit *)`` "
"that makes expectations and assertions (see KUNIT_EXPECT_TRUE() and "
"KUNIT_ASSERT_TRUE()) about code under test. Each test case is associated "
"with a :c:type:`struct kunit_suite <kunit_suite>` and will be run after the "
"suite's init function and followed by the suite's exit function."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:102
msgid ""
"A test case should be static and should only be created with the "
"KUNIT_CASE() macro; additionally, every array of test cases should be "
"terminated with an empty test case."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:106
msgid "**Example**"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:153
msgid "``KUNIT_CASE (test_name)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:151
msgid "A helper for creating a :c:type:`struct kunit_case <kunit_case>`"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:155
#: include/kunit/test.h:168 include/kunit/test.h:180 include/kunit/test.h:191
#: include/kunit/test.h:212 include/kunit/test.h:368 include/kunit/test.h:393
#: include/kunit/test.h:425 include/kunit/test.h:441 include/kunit/test.h:457
#: include/kunit/test.h:464 include/kunit/test.h:477 include/kunit/test.h:492
#: include/kunit/test.h:502 include/kunit/test.h:526 include/kunit/test.h:539
#: include/kunit/test.h:551 include/kunit/test.h:572 include/kunit/test.h:591
#: include/kunit/test.h:623 include/kunit/test.h:635 include/kunit/test.h:646
#: include/kunit/test.h:666 include/kunit/test.h:711 include/kunit/test.h:933
#: include/kunit/test.h:954 include/kunit/test.h:973 include/kunit/test.h:994
#: include/kunit/test.h:1015 include/kunit/test.h:1036
#: include/kunit/test.h:1057 include/kunit/test.h:1078
#: include/kunit/test.h:1099 include/kunit/test.h:1120
#: include/kunit/test.h:1141 include/kunit/test.h:1162
#: include/kunit/test.h:1183 include/kunit/test.h:1210
#: include/kunit/test.h:1237 include/kunit/test.h:1258
#: include/kunit/test.h:1279 include/kunit/test.h:1299
#: include/kunit/test.h:1313 include/kunit/test.h:1334
#: include/kunit/test.h:1353 include/kunit/test.h:1373
#: include/kunit/test.h:1393 include/kunit/test.h:1413
#: include/kunit/test.h:1433 include/kunit/test.h:1453
#: include/kunit/test.h:1474 include/kunit/test.h:1495
#: include/kunit/test.h:1516 include/kunit/test.h:1536
#: include/kunit/test.h:1557 include/kunit/test.h:1584
#: include/kunit/test.h:1611 include/kunit/test.h:1632
#: include/kunit/test.h:1653 include/kunit/test.h:1673
#: include/kunit/test.h:1694
msgid "**Parameters**"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:157
#: include/kunit/test.h:170 include/kunit/test.h:182 include/kunit/test.h:193
#: include/kunit/test.h:214
msgid "``test_name``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:153
#: include/kunit/test.h:167 include/kunit/test.h:179 include/kunit/test.h:189
#: include/kunit/test.h:211
msgid "a reference to a test case function."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:154
msgid ""
"Takes a symbol for a function representing a test case and creates a :c:type:"
"`struct kunit_case <kunit_case>` object from it. See the documentation for :"
"c:type:`struct kunit_case <kunit_case>` for an example on how to use it."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:166
msgid "``KUNIT_CASE_ATTR (test_name, attributes)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:164
msgid ""
"A helper for creating a :c:type:`struct kunit_case <kunit_case>` with "
"attributes"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:169
#: include/kunit/test.h:214
msgid "``attributes``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:168
#: include/kunit/test.h:213
msgid ""
"a reference to a struct kunit_attributes object containing test attributes"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:178
msgid "``KUNIT_CASE_SLOW (test_name)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:176
msgid ""
"A helper for creating a :c:type:`struct kunit_case <kunit_case>` with the "
"slow attribute"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:189
msgid "``KUNIT_CASE_PARAM (test_name, gen_params)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:187
msgid ""
"A helper for creation a parameterized :c:type:`struct kunit_case "
"<kunit_case>`"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:191
#: include/kunit/test.h:213
msgid "``gen_params``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:190
#: include/kunit/test.h:212
msgid "a reference to a parameter generator function."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:191
msgid "The generator function::"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:195
msgid ""
"is used to lazily generate a series of arbitrarily typed values that fit "
"into a void*. The argument **prev** is the previously returned value, which "
"should be used to derive the next value; **prev** is set to NULL on the "
"initial generator call. When no more values are available, the generator "
"must return NULL. Optionally write a string into **desc** (size of "
"KUNIT_PARAM_DESC_SIZE) describing the parameter."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:210
msgid "``KUNIT_CASE_PARAM_ATTR (test_name, gen_params, attributes)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:208
msgid ""
"A helper for creating a parameterized :c:type:`struct kunit_case "
"<kunit_case>` with attributes"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:222
msgid ""
"describes a related collection of :c:type:`struct kunit_case <kunit_case>`"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:225
msgid "the name of the test. Purely informational."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:225
msgid "``suite_init``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:226
msgid "called once per test suite before the test cases."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:226
msgid "``suite_exit``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:227
msgid "called once per test suite after all test cases."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:227
msgid "``init``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:228
msgid "called before every test case."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:228
msgid "``exit``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:229
msgid "called after every test case."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:229
msgid "``test_cases``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:230
msgid "a null terminated array of test cases."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:231
msgid "the attributes associated with the test suite"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:231
msgid ""
"A kunit_suite is a collection of related :c:type:`struct kunit_case "
"<kunit_case>` s, such that **init** is called before every test case and "
"**exit** is called after every test case, similar to the notion of a *test "
"fixture* or a *test class* in other unit testing frameworks like JUnit or "
"Googletest."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:236
msgid ""
"Note that **exit** and **suite_exit** will run even if **init** or "
"**suite_init** fail: make sure they can handle any inconsistent state which "
"may result."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:239
msgid ""
"Every :c:type:`struct kunit_case <kunit_case>` must be associated with a "
"kunit_suite for KUnit to run it."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:267
msgid "represents a running instance of a test."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:269
msgid "``priv``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:270
msgid ""
"for user to store arbitrary data. Commonly used to pass data created in the "
"init function (see :c:type:`struct kunit_suite <kunit_suite>`)."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:271
msgid ""
"Used to store information about the current context under which the test is "
"running. Most of this data is private and should only be accessed indirectly "
"via public functions; the one exception is **priv** which can be used by the "
"test writer to store arbitrary data."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:366
msgid "``kunit_test_suites (__suites...)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:364
msgid ""
"used to register one or more :c:type:`struct kunit_suite <kunit_suite>` with "
"KUnit."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:370
#: include/kunit/test.h:395
msgid "``__suites...``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:367
#: include/kunit/test.h:393
msgid ""
"a statically allocated list of :c:type:`struct kunit_suite <kunit_suite>`."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:368
msgid ""
"Registers **suites** with the test framework. This is done by placing the "
"array of struct kunit_suite * in the .kunit_test_suites ELF section."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:372
msgid ""
"When builtin, KUnit tests are all run via the executor at boot, and when "
"built as a module, they run on module load."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:391
msgid "``kunit_test_init_section_suites (__suites...)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:389
msgid ""
"used to register one or more :c:type:`struct kunit_suite <kunit_suite>` "
"containing init functions or init data."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:394
msgid ""
"This functions similar to kunit_test_suites() except that it compiles the "
"list of suites during init phase."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:397
msgid ""
"This macro also suffixes the array and suite declarations it makes with "
"_probe; so that modpost suppresses warnings about referencing init data for "
"symbols named in this manner."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:401
msgid "**Note**"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:402
msgid ""
"these init tests are not able to be run after boot so there is no \"run\" "
"debugfs file generated for these tests."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:405
msgid ""
"Also, do not mark the suite or test case structs with __initdata because "
"they will be used after the init phase with debugfs."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:421
msgid "Like kmalloc_array() except the allocation is *test managed*."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:427
#: include/kunit/test.h:443 include/kunit/test.h:459 include/kunit/test.h:466
#: include/kunit/test.h:479 include/kunit/test.h:494 include/kunit/test.h:504
#: include/kunit/test.h:528 include/kunit/test.h:553
msgid "``struct kunit *test``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:422
#: include/kunit/test.h:438 include/kunit/test.h:461 include/kunit/test.h:474
#: include/kunit/test.h:489 include/kunit/test.h:500 include/kunit/test.h:524
#: include/kunit/test.h:548 include/kunit/test.h:570 include/kunit/test.h:589
#: include/kunit/test.h:621 include/kunit/test.h:633 include/kunit/test.h:644
#: include/kunit/test.h:663 include/kunit/test.h:708 include/kunit/test.h:930
#: include/kunit/test.h:951 include/kunit/test.h:970 include/kunit/test.h:991
#: include/kunit/test.h:1012 include/kunit/test.h:1033
#: include/kunit/test.h:1054 include/kunit/test.h:1075
#: include/kunit/test.h:1096 include/kunit/test.h:1117
#: include/kunit/test.h:1138 include/kunit/test.h:1159
#: include/kunit/test.h:1180 include/kunit/test.h:1207
#: include/kunit/test.h:1234 include/kunit/test.h:1255
#: include/kunit/test.h:1276 include/kunit/test.h:1296
#: include/kunit/test.h:1310 include/kunit/test.h:1331
#: include/kunit/test.h:1350 include/kunit/test.h:1370
#: include/kunit/test.h:1390 include/kunit/test.h:1411
#: include/kunit/test.h:1430 include/kunit/test.h:1450
#: include/kunit/test.h:1471 include/kunit/test.h:1492
#: include/kunit/test.h:1513 include/kunit/test.h:1533
#: include/kunit/test.h:1554 include/kunit/test.h:1581
#: include/kunit/test.h:1608 include/kunit/test.h:1629
#: include/kunit/test.h:1650
msgid "The test context object."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:424
#: include/kunit/test.h:476
msgid "``size_t n``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:423
#: include/kunit/test.h:475
msgid "number of elements."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:425
#: include/kunit/test.h:440 include/kunit/test.h:463 include/kunit/test.h:477
msgid "``size_t size``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:424
#: include/kunit/test.h:439 include/kunit/test.h:462 include/kunit/test.h:476
msgid "The size in bytes of the desired memory."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:426
#: include/kunit/test.h:441 include/kunit/test.h:464 include/kunit/test.h:478
#: include/kunit/test.h:503 include/kunit/test.h:527
msgid "``gfp_t gfp``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:425
#: include/kunit/test.h:440 include/kunit/test.h:463 include/kunit/test.h:477
#: include/kunit/test.h:502 include/kunit/test.h:526
msgid "flags passed to underlying kmalloc()."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:426
msgid ""
"Just like `kmalloc_array(...)`, except the allocation is managed by the test "
"case and is automatically cleaned up after the test case concludes. See "
"kunit_add_action() for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:430
#: include/kunit/test.h:443
msgid ""
"Note that some internal context data is also allocated with GFP_KERNEL, "
"regardless of the gfp passed in."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:437
msgid "Like kmalloc() except the allocation is *test managed*."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:441
msgid "See kmalloc() and kunit_kmalloc_array() for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:453
msgid "Like kfree except for allocations managed by KUnit."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:454
msgid "The test case to which the resource belongs."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:456
msgid "``const void *ptr``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:455
msgid "The memory allocation to free."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:460
msgid "Just like kunit_kmalloc(), but zeroes the allocation."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:464
msgid "See kzalloc() and kunit_kmalloc_array() for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:473
msgid "Just like kunit_kmalloc_array(), but zeroes the allocation."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:478
msgid "See kcalloc() and kunit_kmalloc_array() for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:488
msgid "conditionally free test managed memory"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:491
msgid "``const void *x``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:490
msgid "pointer to the memory"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:491
msgid ""
"Calls kunit_kfree() only if **x** is not in .rodata section. See "
"kunit_kstrdup_const() for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:498
msgid "Duplicates a string into a test managed allocation."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:502
#: include/kunit/test.h:526
msgid "``const char *str``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:501
#: include/kunit/test.h:525
msgid "The NULL-terminated string to duplicate."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:503
msgid "See kstrdup() and kunit_kmalloc_array() for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:522
msgid "Conditionally duplicates a string into a test managed allocation."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:527
msgid ""
"Calls kunit_kstrdup() only if **str** is not in the rodata section. Must be "
"freed with kunit_kfree_const() -- not kunit_kfree(). See kstrdup_const() and "
"kunit_kmalloc_array() for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:535
msgid "Create and attach a new mm if it doesn't already exist."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:541
msgid "``void``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1
msgid "no arguments"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:536
msgid ""
"Allocates a :c:type:`struct mm_struct <mm_struct>` and attaches it to "
"**current**. In most cases, call kunit_vm_mmap() without calling "
"kunit_attach_mm() directly. Only necessary when code under test accesses the "
"mm before executing the mmap (e.g., to perform additional initialization "
"beforehand)."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:541
msgid "**Return**"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:542
msgid "0 on success, -errno on failure."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:547
msgid "Allocate KUnit-tracked vm_mmap() area"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:550
msgid "``struct file *file``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:549
msgid "struct file pointer to map from, if any"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:551
msgid "``unsigned long addr``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:550
msgid "desired address, if any"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:552
msgid "``unsigned long len``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:551
msgid "how many bytes to allocate"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:553
msgid "``unsigned long prot``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:552
msgid "mmap PROT_* bits"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:554
msgid "``unsigned long flag``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:553
msgid "mmap flags"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:555
msgid "``unsigned long offset``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:554
msgid "offset into **file** to start mapping from."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:555
msgid "See vm_mmap() for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:570
msgid "``kunit_mark_skipped (test, fmt, ...)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:568
#: include/kunit/test.h:587
msgid "Marks **test** as skipped"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:574
#: include/kunit/test.h:593 include/kunit/test.h:625 include/kunit/test.h:637
#: include/kunit/test.h:648 include/kunit/test.h:668 include/kunit/test.h:713
#: include/kunit/test.h:935 include/kunit/test.h:956 include/kunit/test.h:975
#: include/kunit/test.h:996 include/kunit/test.h:1017 include/kunit/test.h:1038
#: include/kunit/test.h:1059 include/kunit/test.h:1080
#: include/kunit/test.h:1101 include/kunit/test.h:1122
#: include/kunit/test.h:1143 include/kunit/test.h:1164
#: include/kunit/test.h:1185 include/kunit/test.h:1212
#: include/kunit/test.h:1239 include/kunit/test.h:1260
#: include/kunit/test.h:1281 include/kunit/test.h:1301
#: include/kunit/test.h:1315 include/kunit/test.h:1336
#: include/kunit/test.h:1355 include/kunit/test.h:1375
#: include/kunit/test.h:1395 include/kunit/test.h:1415
#: include/kunit/test.h:1435 include/kunit/test.h:1455
#: include/kunit/test.h:1476 include/kunit/test.h:1497
#: include/kunit/test.h:1518 include/kunit/test.h:1538
#: include/kunit/test.h:1559 include/kunit/test.h:1586
#: include/kunit/test.h:1613 include/kunit/test.h:1634
#: include/kunit/test.h:1655
msgid "``test``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:572
#: include/kunit/test.h:591 include/kunit/test.h:623 include/kunit/test.h:635
#: include/kunit/test.h:646 include/kunit/test.h:710 include/kunit/test.h:1298
msgid "``fmt``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:571
#: include/kunit/test.h:590 include/kunit/test.h:622 include/kunit/test.h:634
#: include/kunit/test.h:645
msgid "A printk() style format string."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:573
#: include/kunit/test.h:592 include/kunit/test.h:624 include/kunit/test.h:636
#: include/kunit/test.h:647 include/kunit/test.h:711 include/kunit/test.h:1299
msgid "``...``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1
msgid "variable arguments"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:572
msgid ""
"Marks the test as skipped. **fmt** is given output as the test status "
"comment, typically the reason the test was skipped."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:575
msgid "Test execution continues after kunit_mark_skipped() is called."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:589
msgid "``kunit_skip (test, fmt, ...)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:591
msgid ""
"Skips the test. **fmt** is given output as the test status comment, "
"typically the reason the test was skipped."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:594
msgid "Test execution is halted after kunit_skip() is called."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:621
msgid "``kunit_info (test, fmt, ...)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:619
msgid "Prints an INFO level message associated with **test**."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:623
msgid ""
"Prints an info level message associated with the test suite being run. Takes "
"a variable number of format parameters just like printk()."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:633
msgid "``kunit_warn (test, fmt, ...)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:631
msgid "Prints a WARN level message associated with **test**."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:635
msgid "Prints a warning level message."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:644
msgid "``kunit_err (test, fmt, ...)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:642
msgid "Prints an ERROR level message associated with **test**."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:646
msgid "Prints an error level message."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:664
msgid "``KUNIT_SUCCEED (test)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:662
msgid "A no-op expectation. Only exists for code clarity."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:664
msgid ""
"The opposite of KUNIT_FAIL(), it is an expectation that cannot fail. In "
"other words, it does nothing and only exists for code clarity. See "
"KUNIT_EXPECT_TRUE() for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:709
msgid "``KUNIT_FAIL (test, fmt, ...)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:707
msgid "Always causes a test to fail when evaluated."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:709
#: include/kunit/test.h:1297
msgid "an informational message to be printed when the assertion is made."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:710
#: include/kunit/test.h:1298
msgid "string format arguments."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:711
msgid ""
"The opposite of KUNIT_SUCCEED(), it is an expectation that always fails. In "
"other words, it always results in a failed expectation, and consequently "
"always causes the test case to fail when evaluated. See KUNIT_EXPECT_TRUE() "
"for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:931
msgid "``KUNIT_EXPECT_TRUE (test, condition)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:929
msgid "Causes a test failure when the expression is not true."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:932
#: include/kunit/test.h:953 include/kunit/test.h:1312 include/kunit/test.h:1333
msgid "``condition``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:931
msgid ""
"an arbitrary boolean expression. The test fails when this does not evaluate "
"to true."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:933
msgid ""
"This and expectations of the form `KUNIT_EXPECT_*` will cause the test case "
"to fail when the specified condition is not met; however, it will not "
"prevent the test case from continuing to run; this is otherwise known as an "
"*expectation failure*."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:952
msgid "``KUNIT_EXPECT_FALSE (test, condition)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:950
msgid "Makes a test failure when the expression is not false."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:952
msgid ""
"an arbitrary boolean expression. The test fails when this does not evaluate "
"to false."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:954
msgid ""
"Sets an expectation that **condition** evaluates to false. See "
"KUNIT_EXPECT_TRUE() for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:971
msgid "``KUNIT_EXPECT_EQ (test, left, right)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:969
msgid "Sets an expectation that **left** and **right** are equal."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:972
#: include/kunit/test.h:993 include/kunit/test.h:1014 include/kunit/test.h:1035
#: include/kunit/test.h:1056 include/kunit/test.h:1077
#: include/kunit/test.h:1098 include/kunit/test.h:1119
#: include/kunit/test.h:1140 include/kunit/test.h:1161
#: include/kunit/test.h:1182 include/kunit/test.h:1209
#: include/kunit/test.h:1352 include/kunit/test.h:1372
#: include/kunit/test.h:1392 include/kunit/test.h:1413
#: include/kunit/test.h:1432 include/kunit/test.h:1452
#: include/kunit/test.h:1473 include/kunit/test.h:1494
#: include/kunit/test.h:1515 include/kunit/test.h:1535
#: include/kunit/test.h:1556 include/kunit/test.h:1583
msgid "``left``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:971
#: include/kunit/test.h:972 include/kunit/test.h:1013 include/kunit/test.h:1014
#: include/kunit/test.h:1055 include/kunit/test.h:1056
#: include/kunit/test.h:1076 include/kunit/test.h:1077
#: include/kunit/test.h:1097 include/kunit/test.h:1098
#: include/kunit/test.h:1118 include/kunit/test.h:1119
#: include/kunit/test.h:1351 include/kunit/test.h:1352
#: include/kunit/test.h:1391 include/kunit/test.h:1392
#: include/kunit/test.h:1431 include/kunit/test.h:1432
#: include/kunit/test.h:1451 include/kunit/test.h:1452
#: include/kunit/test.h:1472 include/kunit/test.h:1473
#: include/kunit/test.h:1493 include/kunit/test.h:1494
msgid "an arbitrary expression that evaluates to a primitive C type."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:973
#: include/kunit/test.h:994 include/kunit/test.h:1015 include/kunit/test.h:1036
#: include/kunit/test.h:1057 include/kunit/test.h:1078
#: include/kunit/test.h:1099 include/kunit/test.h:1120
#: include/kunit/test.h:1141 include/kunit/test.h:1162
#: include/kunit/test.h:1183 include/kunit/test.h:1210
#: include/kunit/test.h:1353 include/kunit/test.h:1373
#: include/kunit/test.h:1393 include/kunit/test.h:1414
#: include/kunit/test.h:1433 include/kunit/test.h:1453
#: include/kunit/test.h:1474 include/kunit/test.h:1495
#: include/kunit/test.h:1516 include/kunit/test.h:1536
#: include/kunit/test.h:1557 include/kunit/test.h:1584
msgid "``right``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:973
#: include/kunit/test.h:994
msgid ""
"Sets an expectation that the values that **left** and **right** evaluate to "
"are equal. This is semantically equivalent to KUNIT_EXPECT_TRUE(**test**, "
"(**left**) == (**right**)). See KUNIT_EXPECT_TRUE() for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:992
msgid "``KUNIT_EXPECT_PTR_EQ (test, left, right)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:990
msgid "Expects that pointers **left** and **right** are equal."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:992
#: include/kunit/test.h:993 include/kunit/test.h:1034 include/kunit/test.h:1035
#: include/kunit/test.h:1371 include/kunit/test.h:1372
#: include/kunit/test.h:1412 include/kunit/test.h:1413
msgid "an arbitrary expression that evaluates to a pointer."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1013
msgid "``KUNIT_EXPECT_NE (test, left, right)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1011
msgid "An expectation that **left** and **right** are not equal."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1015
#: include/kunit/test.h:1036
msgid ""
"Sets an expectation that the values that **left** and **right** evaluate to "
"are not equal. This is semantically equivalent to "
"KUNIT_EXPECT_TRUE(**test**, (**left**) != (**right**)). See "
"KUNIT_EXPECT_TRUE() for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1034
msgid "``KUNIT_EXPECT_PTR_NE (test, left, right)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1032
msgid "Expects that pointers **left** and **right** are not equal."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1055
msgid "``KUNIT_EXPECT_LT (test, left, right)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1053
msgid "An expectation that **left** is less than **right**."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1057
msgid ""
"Sets an expectation that the value that **left** evaluates to is less than "
"the value that **right** evaluates to. This is semantically equivalent to "
"KUNIT_EXPECT_TRUE(**test**, (**left**) < (**right**)). See "
"KUNIT_EXPECT_TRUE() for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1076
msgid "``KUNIT_EXPECT_LE (test, left, right)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1074
msgid "Expects that **left** is less than or equal to **right**."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1078
msgid ""
"Sets an expectation that the value that **left** evaluates to is less than "
"or equal to the value that **right** evaluates to. Semantically this is "
"equivalent to KUNIT_EXPECT_TRUE(**test**, (**left**) <= (**right**)). See "
"KUNIT_EXPECT_TRUE() for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1097
msgid "``KUNIT_EXPECT_GT (test, left, right)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1095
msgid "An expectation that **left** is greater than **right**."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1099
msgid ""
"Sets an expectation that the value that **left** evaluates to is greater "
"than the value that **right** evaluates to. This is semantically equivalent "
"to KUNIT_EXPECT_TRUE(**test**, (**left**) > (**right**)). See "
"KUNIT_EXPECT_TRUE() for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1118
msgid "``KUNIT_EXPECT_GE (test, left, right)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1116
msgid "Expects that **left** is greater than or equal to **right**."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1120
msgid ""
"Sets an expectation that the value that **left** evaluates to is greater "
"than the value that **right** evaluates to. This is semantically equivalent "
"to KUNIT_EXPECT_TRUE(**test**, (**left**) >= (**right**)). See "
"KUNIT_EXPECT_TRUE() for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1139
msgid "``KUNIT_EXPECT_STREQ (test, left, right)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1137
msgid "Expects that strings **left** and **right** are equal."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1139
#: include/kunit/test.h:1140 include/kunit/test.h:1160
#: include/kunit/test.h:1161 include/kunit/test.h:1514
#: include/kunit/test.h:1515 include/kunit/test.h:1534
#: include/kunit/test.h:1535
msgid "an arbitrary expression that evaluates to a null terminated string."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1141
msgid ""
"Sets an expectation that the values that **left** and **right** evaluate to "
"are equal. This is semantically equivalent to KUNIT_EXPECT_TRUE(**test**, !"
"strcmp((**left**), (**right**))). See KUNIT_EXPECT_TRUE() for more "
"information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1160
msgid "``KUNIT_EXPECT_STRNEQ (test, left, right)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1158
msgid "Expects that strings **left** and **right** are not equal."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1162
msgid ""
"Sets an expectation that the values that **left** and **right** evaluate to "
"are not equal. This is semantically equivalent to "
"KUNIT_EXPECT_TRUE(**test**, strcmp((**left**), (**right**))). See "
"KUNIT_EXPECT_TRUE() for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1181
msgid "``KUNIT_EXPECT_MEMEQ (test, left, right, size)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1179
msgid ""
"Expects that the first **size** bytes of **left** and **right** are equal."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1181
#: include/kunit/test.h:1182 include/kunit/test.h:1208
#: include/kunit/test.h:1209 include/kunit/test.h:1555
#: include/kunit/test.h:1556 include/kunit/test.h:1582
#: include/kunit/test.h:1583
msgid "An arbitrary expression that evaluates to the specified size."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1184
#: include/kunit/test.h:1211 include/kunit/test.h:1558
#: include/kunit/test.h:1585
msgid "``size``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1183
#: include/kunit/test.h:1210 include/kunit/test.h:1557
#: include/kunit/test.h:1584
msgid "Number of bytes compared."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1184
msgid ""
"Sets an expectation that the values that **left** and **right** evaluate to "
"are equal. This is semantically equivalent to KUNIT_EXPECT_TRUE(**test**, !"
"memcmp((**left**), (**right**), (**size**))). See KUNIT_EXPECT_TRUE() for "
"more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1189
#: include/kunit/test.h:1216
msgid ""
"Although this expectation works for any memory block, it is not recommended "
"for comparing more structured data, such as structs. This expectation is "
"recommended for comparing, for example, data arrays."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1208
msgid "``KUNIT_EXPECT_MEMNEQ (test, left, right, size)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1206
msgid ""
"Expects that the first **size** bytes of **left** and **right** are not "
"equal."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1211
msgid ""
"Sets an expectation that the values that **left** and **right** evaluate to "
"are not equal. This is semantically equivalent to "
"KUNIT_EXPECT_TRUE(**test**, memcmp((**left**), (**right**), (**size**))). "
"See KUNIT_EXPECT_TRUE() for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1235
msgid "``KUNIT_EXPECT_NULL (test, ptr)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1233
msgid "Expects that **ptr** is null."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1236
#: include/kunit/test.h:1257 include/kunit/test.h:1278
#: include/kunit/test.h:1610 include/kunit/test.h:1631
#: include/kunit/test.h:1652
msgid "``ptr``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1235
#: include/kunit/test.h:1256 include/kunit/test.h:1277
#: include/kunit/test.h:1609 include/kunit/test.h:1630
#: include/kunit/test.h:1651
msgid "an arbitrary pointer."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1236
msgid ""
"Sets an expectation that the value that **ptr** evaluates to is null. This "
"is semantically equivalent to KUNIT_EXPECT_PTR_EQ(**test**, ptr, NULL). See "
"KUNIT_EXPECT_TRUE() for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1256
msgid "``KUNIT_EXPECT_NOT_NULL (test, ptr)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1254
msgid "Expects that **ptr** is not null."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1257
msgid ""
"Sets an expectation that the value that **ptr** evaluates to is not null. "
"This is semantically equivalent to KUNIT_EXPECT_PTR_NE(**test**, ptr, NULL). "
"See KUNIT_EXPECT_TRUE() for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1277
msgid "``KUNIT_EXPECT_NOT_ERR_OR_NULL (test, ptr)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1275
msgid "Expects that **ptr** is not null and not err."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1278
msgid ""
"Sets an expectation that the value that **ptr** evaluates to is not null and "
"not an errno stored in a pointer. This is semantically equivalent to "
"KUNIT_EXPECT_TRUE(**test**, !IS_ERR_OR_NULL(**ptr**)). See "
"KUNIT_EXPECT_TRUE() for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1297
msgid "``KUNIT_FAIL_AND_ABORT (test, fmt, ...)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1295
msgid "Always causes a test to fail and abort when evaluated."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1299
msgid ""
"The opposite of KUNIT_SUCCEED(), it is an assertion that always fails. In "
"other words, it always results in a failed assertion, and consequently "
"always causes the test case to fail and abort when evaluated. See "
"KUNIT_ASSERT_TRUE() for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1311
msgid "``KUNIT_ASSERT_TRUE (test, condition)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1309
msgid "Sets an assertion that **condition** is true."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1311
msgid ""
"an arbitrary boolean expression. The test fails and aborts when this does "
"not evaluate to true."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1313
msgid ""
"This and assertions of the form `KUNIT_ASSERT_*` will cause the test case to "
"fail *and immediately abort* when the specified condition is not met. Unlike "
"an expectation failure, it will prevent the test case from continuing to "
"run; this is otherwise known as an *assertion failure*."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1332
msgid "``KUNIT_ASSERT_FALSE (test, condition)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1330
msgid "Sets an assertion that **condition** is false."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1332
msgid "an arbitrary boolean expression."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1333
msgid ""
"Sets an assertion that the value that **condition** evaluates to is false. "
"This is the same as KUNIT_EXPECT_FALSE(), except it causes an assertion "
"failure (see KUNIT_ASSERT_TRUE()) when the assertion is not met."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1351
msgid "``KUNIT_ASSERT_EQ (test, left, right)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1349
msgid "Sets an assertion that **left** and **right** are equal."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1353
#: include/kunit/test.h:1373
msgid ""
"Sets an assertion that the values that **left** and **right** evaluate to "
"are equal. This is the same as KUNIT_EXPECT_EQ(), except it causes an "
"assertion failure (see KUNIT_ASSERT_TRUE()) when the assertion is not met."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1371
msgid "``KUNIT_ASSERT_PTR_EQ (test, left, right)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1369
msgid "Asserts that pointers **left** and **right** are equal."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1391
msgid "``KUNIT_ASSERT_NE (test, left, right)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1389
msgid "An assertion that **left** and **right** are not equal."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1393
#: include/kunit/test.h:1414
msgid ""
"Sets an assertion that the values that **left** and **right** evaluate to "
"are not equal. This is the same as KUNIT_EXPECT_NE(), except it causes an "
"assertion failure (see KUNIT_ASSERT_TRUE()) when the assertion is not met."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1411
msgid "``KUNIT_ASSERT_PTR_NE (test, left, right)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1409
msgid ""
"Asserts that pointers **left** and **right** are not equal. "
"KUNIT_ASSERT_PTR_EQ() - Asserts that pointers **left** and **right** are "
"equal."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1431
msgid "``KUNIT_ASSERT_LT (test, left, right)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1429
msgid "An assertion that **left** is less than **right**."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1433
msgid ""
"Sets an assertion that the value that **left** evaluates to is less than the "
"value that **right** evaluates to. This is the same as KUNIT_EXPECT_LT(), "
"except it causes an assertion failure (see KUNIT_ASSERT_TRUE()) when the "
"assertion is not met."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1451
msgid "``KUNIT_ASSERT_LE (test, left, right)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1449
msgid "An assertion that **left** is less than or equal to **right**."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1453
msgid ""
"Sets an assertion that the value that **left** evaluates to is less than or "
"equal to the value that **right** evaluates to. This is the same as "
"KUNIT_EXPECT_LE(), except it causes an assertion failure (see "
"KUNIT_ASSERT_TRUE()) when the assertion is not met."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1472
msgid "``KUNIT_ASSERT_GT (test, left, right)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1470
msgid "An assertion that **left** is greater than **right**."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1474
msgid ""
"Sets an assertion that the value that **left** evaluates to is greater than "
"the value that **right** evaluates to. This is the same as "
"KUNIT_EXPECT_GT(), except it causes an assertion failure (see "
"KUNIT_ASSERT_TRUE()) when the assertion is not met."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1493
msgid "``KUNIT_ASSERT_GE (test, left, right)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1491
msgid "Assertion that **left** is greater than or equal to **right**."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1495
msgid ""
"Sets an assertion that the value that **left** evaluates to is greater than "
"the value that **right** evaluates to. This is the same as "
"KUNIT_EXPECT_GE(), except it causes an assertion failure (see "
"KUNIT_ASSERT_TRUE()) when the assertion is not met."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1514
msgid "``KUNIT_ASSERT_STREQ (test, left, right)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1512
msgid "An assertion that strings **left** and **right** are equal."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1516
msgid ""
"Sets an assertion that the values that **left** and **right** evaluate to "
"are equal. This is the same as KUNIT_EXPECT_STREQ(), except it causes an "
"assertion failure (see KUNIT_ASSERT_TRUE()) when the assertion is not met."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1534
msgid "``KUNIT_ASSERT_STRNEQ (test, left, right)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1532
msgid "An assertion that strings **left** and **right** are not equal."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1536
msgid ""
"Sets an assertion that the values that **left** and **right** evaluate to "
"are not equal. This is semantically equivalent to "
"KUNIT_ASSERT_TRUE(**test**, strcmp((**left**), (**right**))). See "
"KUNIT_ASSERT_TRUE() for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1555
msgid "``KUNIT_ASSERT_MEMEQ (test, left, right, size)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1553
msgid ""
"Asserts that the first **size** bytes of **left** and **right** are equal."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1558
msgid ""
"Sets an assertion that the values that **left** and **right** evaluate to "
"are equal. This is semantically equivalent to KUNIT_ASSERT_TRUE(**test**, !"
"memcmp((**left**), (**right**), (**size**))). See KUNIT_ASSERT_TRUE() for "
"more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1563
#: include/kunit/test.h:1590
msgid ""
"Although this assertion works for any memory block, it is not recommended "
"for comparing more structured data, such as structs. This assertion is "
"recommended for comparing, for example, data arrays."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1582
msgid "``KUNIT_ASSERT_MEMNEQ (test, left, right, size)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1580
msgid ""
"Asserts that the first **size** bytes of **left** and **right** are not "
"equal."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1585
msgid ""
"Sets an assertion that the values that **left** and **right** evaluate to "
"are not equal. This is semantically equivalent to "
"KUNIT_ASSERT_TRUE(**test**, memcmp((**left**), (**right**), (**size**))). "
"See KUNIT_ASSERT_TRUE() for more information."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1609
msgid "``KUNIT_ASSERT_NULL (test, ptr)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1607
msgid "Asserts that pointers **ptr** is null."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1610
msgid ""
"Sets an assertion that the values that **ptr** evaluates to is null. This is "
"the same as KUNIT_EXPECT_NULL(), except it causes an assertion failure (see "
"KUNIT_ASSERT_TRUE()) when the assertion is not met."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1630
msgid "``KUNIT_ASSERT_NOT_NULL (test, ptr)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1628
msgid "Asserts that pointers **ptr** is not null."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1631
msgid ""
"Sets an assertion that the values that **ptr** evaluates to is not null. "
"This is the same as KUNIT_EXPECT_NOT_NULL(), except it causes an assertion "
"failure (see KUNIT_ASSERT_TRUE()) when the assertion is not met."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1651
msgid "``KUNIT_ASSERT_NOT_ERR_OR_NULL (test, ptr)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1649
msgid "Assertion that **ptr** is not null and not err."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1652
msgid ""
"Sets an assertion that the value that **ptr** evaluates to is not null and "
"not an errno stored in a pointer. This is the same as "
"KUNIT_EXPECT_NOT_ERR_OR_NULL(), except it causes an assertion failure (see "
"KUNIT_ASSERT_TRUE()) when the assertion is not met."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1671
msgid "``KUNIT_ARRAY_PARAM (name, array, get_desc)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1669
#: include/kunit/test.h:1690
msgid "Define test parameter generator from an array."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1670
#: include/kunit/test.h:1691
msgid "prefix for the test parameter generator function."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1672
#: include/kunit/test.h:1693
msgid "``array``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1671
#: include/kunit/test.h:1692
msgid "array of test parameters."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1673
msgid "``get_desc``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1672
msgid "function to convert param to description; NULL to use default"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1673
#: include/kunit/test.h:1694
msgid ""
"Define function **name_gen_params** which uses **array** to generate "
"parameters."
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1692
msgid "``KUNIT_ARRAY_PARAM_DESC (name, array, desc_member)``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1694
msgid "``desc_member``"
msgstr ""

#: ../../../dev-tools/kunit/api/test:9: include/kunit/test.h:1693
msgid "structure member from array element to use as description"
msgstr ""
