# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../bpf/s390.rst:3
msgid "Testing BPF on s390"
msgstr ""

#: ../../../bpf/s390.rst:6
msgid "1. Introduction"
msgstr ""

#: ../../../bpf/s390.rst:8
msgid ""
"IBM Z are mainframe computers, which are descendants of IBM System/360 from "
"year 1964. They are supported by the Linux kernel under the name \"s390\". "
"This document describes how to test BPF in an s390 QEMU guest."
msgstr ""

#: ../../../bpf/s390.rst:13
msgid "2. One-time setup"
msgstr ""

#: ../../../bpf/s390.rst:15
msgid "The following is required to build and run the test suite:"
msgstr ""

#: ../../../bpf/s390.rst:17
msgid "s390 GCC"
msgstr ""

#: ../../../bpf/s390.rst:18
msgid "s390 development headers and libraries"
msgstr ""

#: ../../../bpf/s390.rst:19
msgid "Clang with BPF support"
msgstr ""

#: ../../../bpf/s390.rst:20
msgid "QEMU with s390 support"
msgstr ""

#: ../../../bpf/s390.rst:21
msgid "Disk image with s390 rootfs"
msgstr ""

#: ../../../bpf/s390.rst:23
msgid ""
"Debian supports installing compiler and libraries for s390 out of the box. "
"Users of other distros may use debootstrap in order to set up a Debian "
"chroot::"
msgstr ""

#: ../../../bpf/s390.rst:36
msgid "Once on Debian, the build prerequisites can be installed as follows::"
msgstr ""

#: ../../../bpf/s390.rst:62
msgid "Latest Clang targeting BPF can be installed as follows::"
msgstr ""

#: ../../../bpf/s390.rst:77
msgid "The disk image can be prepared using a loopback mount and debootstrap::"
msgstr ""

#: ../../../bpf/s390.rst:103
msgid "3. Compilation"
msgstr ""

#: ../../../bpf/s390.rst:105
msgid ""
"In addition to the usual Kconfig options required to run the BPF test suite, "
"it is also helpful to select::"
msgstr ""

#: ../../../bpf/s390.rst:113
msgid ""
"as that would enable a very easy way to share files with the s390 virtual "
"machine."
msgstr ""

#: ../../../bpf/s390.rst:116
msgid ""
"Compiling kernel, modules and testsuite, as well as preparing gdb scripts to "
"simplify debugging, can be done using the following commands::"
msgstr ""

#: ../../../bpf/s390.rst:128
msgid "4. Running the test suite"
msgstr ""

#: ../../../bpf/s390.rst:130
msgid "The virtual machine can be started as follows::"
msgstr ""

#: ../../../bpf/s390.rst:146
msgid ""
"When using this on a real IBM Z, ``-enable-kvm`` may be added for better "
"performance. When starting the virtual machine for the first time, disk "
"image setup must be finalized using the following command::"
msgstr ""

#: ../../../bpf/s390.rst:152
msgid ""
"Directory with the code built on the host as well as ``/proc`` and ``/sys`` "
"need to be mounted as follows::"
msgstr ""

#: ../../../bpf/s390.rst:160
msgid "After that, the test suite can be run using the following commands::"
msgstr ""

#: ../../../bpf/s390.rst:165
msgid "As usual, tests can be also run individually::"
msgstr ""

#: ../../../bpf/s390.rst:171
msgid "5. Debugging"
msgstr ""

#: ../../../bpf/s390.rst:173
msgid ""
"It is possible to debug the s390 kernel using QEMU GDB stub, which is "
"activated by passing ``-s`` to QEMU."
msgstr ""

#: ../../../bpf/s390.rst:176
msgid ""
"It is preferable to turn KASLR off, so that gdb would know where to find the "
"kernel image in memory, by building the kernel with::"
msgstr ""

#: ../../../bpf/s390.rst:181
msgid "GDB can then be attached using the following command::"
msgstr ""

#: ../../../bpf/s390.rst:186
msgid "6. Network"
msgstr ""

#: ../../../bpf/s390.rst:188
msgid ""
"In case one needs to use the network in the virtual machine in order to e.g. "
"install additional packages, it can be configured using::"
msgstr ""

#: ../../../bpf/s390.rst:194
msgid "7. Links"
msgstr ""

#: ../../../bpf/s390.rst:196
msgid ""
"This document is a compilation of techniques, whose more comprehensive "
"descriptions can be found by following these links:"
msgstr ""

#: ../../../bpf/s390.rst:199
msgid "`Debootstrap <https://wiki.debian.org/EmDebian/CrossDebootstrap>`_"
msgstr ""

#: ../../../bpf/s390.rst:200
msgid "`Multiarch <https://wiki.debian.org/Multiarch/HOWTO>`_"
msgstr ""

#: ../../../bpf/s390.rst:201
msgid "`Building LLVM <https://llvm.org/docs/CMake.html>`_"
msgstr ""

#: ../../../bpf/s390.rst:202
msgid ""
"`Cross-compiling the kernel <https://wiki.gentoo.org/wiki/Embedded_Handbook/"
"General/Cross-compiling_the_kernel>`_"
msgstr ""

#: ../../../bpf/s390.rst:203
msgid ""
"`QEMU s390x Guest Support <https://wiki.qemu.org/Documentation/Platforms/"
"S390X>`_"
msgstr ""

#: ../../../bpf/s390.rst:204
msgid ""
"`Plan 9 folder sharing over Virtio <https://wiki.qemu.org/"
"Documentation/9psetup>`_"
msgstr ""

#: ../../../bpf/s390.rst:205
msgid ""
"`Using GDB with QEMU <https://wiki.osdev.org/"
"Kernel_Debugging#Use_GDB_with_QEMU>`_"
msgstr ""
