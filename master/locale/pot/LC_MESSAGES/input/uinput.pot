# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../input/uinput.rst:3
msgid "uinput module"
msgstr ""

#: ../../../input/uinput.rst:6
msgid "Introduction"
msgstr ""

#: ../../../input/uinput.rst:8
msgid ""
"uinput is a kernel module that makes it possible to emulate input devices "
"from userspace. By writing to /dev/uinput (or /dev/input/uinput) device, a "
"process can create a virtual input device with specific capabilities. Once "
"this virtual device is created, the process can send events through it, that "
"will be delivered to userspace and in-kernel consumers."
msgstr ""

#: ../../../input/uinput.rst:15
msgid "Interface"
msgstr ""

#: ../../../input/uinput.rst:21
msgid ""
"The uinput header defines ioctls to create, set up, and destroy virtual "
"devices."
msgstr ""

#: ../../../input/uinput.rst:25
msgid "libevdev"
msgstr ""

#: ../../../input/uinput.rst:27
msgid ""
"libevdev is a wrapper library for evdev devices that provides interfaces to "
"create uinput devices and send events. libevdev is less error-prone than "
"accessing uinput directly, and should be considered for new software."
msgstr ""

#: ../../../input/uinput.rst:31
msgid ""
"For examples and more information about libevdev: https://www.freedesktop."
"org/software/libevdev/doc/latest/"
msgstr ""

#: ../../../input/uinput.rst:35
msgid "Examples"
msgstr ""

#: ../../../input/uinput.rst:38
msgid "Keyboard events"
msgstr ""

#: ../../../input/uinput.rst:40
msgid ""
"This first example shows how to create a new virtual device, and how to send "
"a key event. All default imports and error handlers were removed for the "
"sake of simplicity."
msgstr ""

#: ../../../input/uinput.rst:113
msgid "Mouse movements"
msgstr ""

#: ../../../input/uinput.rst:115
msgid ""
"This example shows how to create a virtual device that behaves like a "
"physical mouse."
msgstr ""

#: ../../../input/uinput.rst:179
msgid "uinput old interface"
msgstr ""

#: ../../../input/uinput.rst:181
msgid ""
"Before uinput version 5, there wasn't a dedicated ioctl to set up a virtual "
"device. Programs supporting older versions of uinput interface need to fill "
"a uinput_user_dev structure and write it to the uinput file descriptor to "
"configure the new uinput device. New code should not use the old interface "
"but interact with uinput via ioctl calls, or use libevdev."
msgstr ""
