# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../security/tpm/tpm_event_log.rst:5
msgid "TPM Event Log"
msgstr ""

#: ../../../security/tpm/tpm_event_log.rst:7
msgid ""
"This document briefly describes what TPM log is and how it is handed over "
"from the preboot firmware to the operating system."
msgstr ""

#: ../../../security/tpm/tpm_event_log.rst:11
msgid "Introduction"
msgstr ""

#: ../../../security/tpm/tpm_event_log.rst:13
msgid ""
"The preboot firmware maintains an event log that gets new entries every time "
"something gets hashed by it to any of the PCR registers. The events are "
"segregated by their type and contain the value of the hashed PCR register. "
"Typically, the preboot firmware will hash the components to who execution is "
"to be handed over or actions relevant to the boot process."
msgstr ""

#: ../../../security/tpm/tpm_event_log.rst:20
msgid ""
"The main application for this is remote attestation and the reason why it is "
"useful is nicely put in the very first section of [1]:"
msgstr ""

#: ../../../security/tpm/tpm_event_log.rst:23
msgid ""
"\"Attestation is used to provide information about the platformâ€™s state to a "
"challenger. However, PCR contents are difficult to interpret; therefore, "
"attestation is typically more useful when the PCR contents are accompanied "
"by a measurement log. While not trusted on their own, the measurement log "
"contains a richer set of information than do the PCR contents. The PCR "
"contents are used to provide the validation of the measurement log.\""
msgstr ""

#: ../../../security/tpm/tpm_event_log.rst:32
msgid "UEFI event log"
msgstr ""

#: ../../../security/tpm/tpm_event_log.rst:34
msgid "UEFI provided event log has a few somewhat weird quirks."
msgstr ""

#: ../../../security/tpm/tpm_event_log.rst:36
msgid ""
"Before calling ExitBootServices() Linux EFI stub copies the event log to a "
"custom configuration table defined by the stub itself. Unfortunately, the "
"events generated by ExitBootServices() don't end up in the table."
msgstr ""

#: ../../../security/tpm/tpm_event_log.rst:40
msgid ""
"The firmware provides so called final events configuration table to sort out "
"this issue. Events gets mirrored to this table after the first time "
"EFI_TCG2_PROTOCOL.GetEventLog() gets called."
msgstr ""

#: ../../../security/tpm/tpm_event_log.rst:44
msgid ""
"This introduces another problem: nothing guarantees that it is not called "
"before the Linux EFI stub gets to run. Thus, it needs to calculate and save "
"the final events table size while the stub is still running to the custom "
"configuration table so that the TPM driver can later on skip these events "
"when concatenating two halves of the event log from the custom configuration "
"table and the final events table."
msgstr ""

#: ../../../security/tpm/tpm_event_log.rst:52
msgid "References"
msgstr ""

#: ../../../security/tpm/tpm_event_log.rst:54
msgid ""
"[1] https://trustedcomputinggroup.org/resource/pc-client-specific-platform-"
"firmware-profile-specification/"
msgstr ""

#: ../../../security/tpm/tpm_event_log.rst:55
msgid "[2] The final concatenation is done in drivers/char/tpm/eventlog/efi.c"
msgstr ""
