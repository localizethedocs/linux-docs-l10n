# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../security/SCTP.rst:5
msgid "SCTP"
msgstr ""

#: ../../../security/SCTP.rst:8
msgid "SCTP LSM Support"
msgstr ""

#: ../../../security/SCTP.rst:11 ../../../security/SCTP.rst:191
msgid "Security Hooks"
msgstr ""

#: ../../../security/SCTP.rst:13
msgid ""
"For security module support, three SCTP specific hooks have been "
"implemented::"
msgstr ""

#: ../../../security/SCTP.rst:20
msgid ""
"The usage of these hooks are described below with the SELinux implementation "
"described in the `SCTP SELinux Support`_ chapter."
msgstr ""

#: ../../../security/SCTP.rst:25 ../../../security/SCTP.rst:203
msgid "security_sctp_assoc_request()"
msgstr ""

#: ../../../security/SCTP.rst:26 ../../../security/SCTP.rst:204
msgid ""
"Passes the ``@asoc`` and ``@chunk->skb`` of the association INIT packet to "
"the security module. Returns 0 on success, error on failure. ::"
msgstr ""

#: ../../../security/SCTP.rst:35 ../../../security/SCTP.rst:229
msgid "security_sctp_bind_connect()"
msgstr ""

#: ../../../security/SCTP.rst:36
msgid ""
"Passes one or more ipv4/ipv6 addresses to the security module for validation "
"based on the ``@optname`` that will result in either a bind or connect "
"service as shown in the permission check tables below. Returns 0 on success, "
"error on failure. ::"
msgstr ""

#: ../../../security/SCTP.rst:68
msgid "A summary of the ``@optname`` entries is as follows::"
msgstr ""

#: ../../../security/SCTP.rst:95
msgid ""
"To support Dynamic Address Reconfiguration the following parameters must be "
"enabled on both endpoints (or use the appropriate **setsockopt**\\(2))::"
msgstr ""

#: ../../../security/SCTP.rst:101
msgid ""
"then the following *_PARAM_*'s are sent to the peer in an ASCONF chunk when "
"the corresponding ``@optname``'s are present::"
msgstr ""

#: ../../../security/SCTP.rst:111 ../../../security/SCTP.rst:259
msgid "security_sctp_sk_clone()"
msgstr ""

#: ../../../security/SCTP.rst:112
msgid ""
"Called whenever a new socket is created by **accept**\\(2) (i.e. a TCP style "
"socket) or when a socket is 'peeled off' e.g userspace calls "
"**sctp_peeloff**\\(3). ::"
msgstr ""

#: ../../../security/SCTP.rst:123 ../../../security/SCTP.rst:273
msgid "security_sctp_assoc_established()"
msgstr ""

#: ../../../security/SCTP.rst:124
msgid ""
"Called when a COOKIE ACK is received, and the peer secid will be saved into "
"``@asoc->peer_secid`` for client::"
msgstr ""

#: ../../../security/SCTP.rst:132
msgid "Security Hooks used for Association Establishment"
msgstr ""

#: ../../../security/SCTP.rst:134
msgid ""
"The following diagram shows the use of ``security_sctp_bind_connect()``, "
"``security_sctp_assoc_request()``, ``security_sctp_assoc_established()`` "
"when establishing an association. ::"
msgstr ""

#: ../../../security/SCTP.rst:188
msgid "SCTP SELinux Support"
msgstr ""

#: ../../../security/SCTP.rst:193
msgid ""
"The `SCTP LSM Support`_ chapter above describes the following SCTP security "
"hooks with the SELinux specifics expanded below::"
msgstr ""

#: ../../../security/SCTP.rst:211
msgid "The security module performs the following operations:"
msgstr ""

#: ../../../security/SCTP.rst:212
msgid ""
"IF this is the first association on ``@asoc->base.sk``, then set the peer "
"sid to that in ``@skb``. This will ensure there is only one peer sid "
"assigned to ``@asoc->base.sk`` that may support multiple associations."
msgstr ""

#: ../../../security/SCTP.rst:216
msgid ""
"ELSE validate the ``@asoc->base.sk peer_sid`` against the ``@skb peer sid`` "
"to determine whether the association should be allowed or denied."
msgstr ""

#: ../../../security/SCTP.rst:219
msgid ""
"Set the sctp ``@asoc sid`` to socket's sid (from ``asoc->base.sk``) with MLS "
"portion taken from ``@skb peer sid``. This will be used by SCTP TCP style "
"sockets and peeled off connections as they cause a new socket to be "
"generated."
msgstr ""

#: ../../../security/SCTP.rst:224
msgid ""
"If IP security options are configured (CIPSO/CALIPSO), then the ip options "
"are set on the socket."
msgstr ""

#: ../../../security/SCTP.rst:230
msgid ""
"Checks permissions required for ipv4/ipv6 addresses based on the "
"``@optname`` as follows::"
msgstr ""

#: ../../../security/SCTP.rst:253
msgid ""
"`SCTP LSM Support`_ gives a summary of the ``@optname`` entries and also "
"describes ASCONF chunk processing when Dynamic Address Reconfiguration is "
"enabled."
msgstr ""

#: ../../../security/SCTP.rst:260
msgid ""
"Called whenever a new socket is created by **accept**\\(2) (i.e. a TCP style "
"socket) or when a socket is 'peeled off' e.g userspace calls "
"**sctp_peeloff**\\(3). ``security_sctp_sk_clone()`` will set the new sockets "
"sid and peer sid to that contained in the ``@asoc sid`` and ``@asoc peer "
"sid`` respectively. ::"
msgstr ""

#: ../../../security/SCTP.rst:274
msgid ""
"Called when a COOKIE ACK is received where it sets the connection's peer sid "
"to that in ``@skb``::"
msgstr ""

#: ../../../security/SCTP.rst:282
msgid "Policy Statements"
msgstr ""

#: ../../../security/SCTP.rst:283
msgid ""
"The following class and permissions to support SCTP are available within the "
"kernel::"
msgstr ""

#: ../../../security/SCTP.rst:288
msgid "whenever the following policy capability is enabled::"
msgstr ""

#: ../../../security/SCTP.rst:292
msgid ""
"SELinux SCTP support adds the ``name_connect`` permission for connecting to "
"a specific port type and the ``association`` permission that is explained in "
"the section below."
msgstr ""

#: ../../../security/SCTP.rst:296
msgid ""
"If userspace tools have been updated, SCTP will support the ``portcon`` "
"statement as shown in the following example::"
msgstr ""

#: ../../../security/SCTP.rst:303
msgid "SCTP Peer Labeling"
msgstr ""

#: ../../../security/SCTP.rst:304
msgid ""
"An SCTP socket will only have one peer label assigned to it. This will be "
"assigned during the establishment of the first association. Any further "
"associations on this socket will have their packet peer label compared to "
"the sockets peer label, and only if they are different will the "
"``association`` permission be validated. This is validated by checking the "
"socket peer sid against the received packets peer sid to determine whether "
"the association should be allowed or denied."
msgstr ""

#: ../../../security/SCTP.rst:312
msgid "NOTES:"
msgstr ""

#: ../../../security/SCTP.rst:313
msgid ""
"If peer labeling is not enabled, then the peer context will always be "
"``SECINITSID_UNLABELED`` (``unlabeled_t`` in Reference Policy)."
msgstr ""

#: ../../../security/SCTP.rst:316
msgid ""
"As SCTP can support more than one transport address per endpoint (multi-"
"homing) on a single socket, it is possible to configure policy and NetLabel "
"to provide different peer labels for each of these. As the socket peer label "
"is determined by the first associations transport address, it is recommended "
"that all peer labels are consistent."
msgstr ""

#: ../../../security/SCTP.rst:322
msgid ""
"**getpeercon**\\(3) may be used by userspace to retrieve the sockets peer "
"context."
msgstr ""

#: ../../../security/SCTP.rst:325
msgid ""
"While not SCTP specific, be aware when using NetLabel that if a label is "
"assigned to a specific interface, and that interface 'goes down', then the "
"NetLabel service will remove the entry. Therefore ensure that the network "
"startup scripts call **netlabelctl**\\(8) to set the required label (see "
"**netlabel-config**\\(8) helper script for details)."
msgstr ""

#: ../../../security/SCTP.rst:331
msgid ""
"The NetLabel SCTP peer labeling rules apply as discussed in the following "
"set of posts tagged \"netlabel\" at: https://www.paul-moore.com/blog/t."
msgstr ""

#: ../../../security/SCTP.rst:334
msgid ""
"CIPSO is only supported for IPv4 addressing: ``socket(AF_INET, ...)`` "
"CALIPSO is only supported for IPv6 addressing: ``socket(AF_INET6, ...)``"
msgstr ""

#: ../../../security/SCTP.rst:337
msgid "Note the following when testing CIPSO/CALIPSO:"
msgstr ""

#: ../../../security/SCTP.rst:338
msgid ""
"CIPSO will send an ICMP packet if an SCTP packet cannot be delivered because "
"of an invalid label."
msgstr ""

#: ../../../security/SCTP.rst:340
msgid "CALIPSO does not send an ICMP packet, just silently discards it."
msgstr ""

#: ../../../security/SCTP.rst:342
msgid ""
"IPSEC is not supported as RFC 3554 - sctp/ipsec support has not been "
"implemented in userspace (**racoon**\\(8) or **ipsec_pluto**\\(8)), although "
"the kernel supports SCTP/IPSEC."
msgstr ""
