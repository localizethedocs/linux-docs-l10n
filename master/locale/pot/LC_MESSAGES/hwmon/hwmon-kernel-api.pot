# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../hwmon/hwmon-kernel-api.rst:2
msgid "The Linux Hardware Monitoring kernel API"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:4
msgid "Guenter Roeck"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:7
msgid "Introduction"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:9
msgid ""
"This document describes the API that can be used by hardware monitoring "
"drivers that want to use the hardware monitoring framework."
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:12
msgid ""
"This document does not describe what a hardware monitoring (hwmon) Driver or "
"Device is. It also does not describe the API which can be used by user space "
"to communicate with a hardware monitoring device. If you want to know this "
"then please read the following file: Documentation/hwmon/sysfs-interface.rst."
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:17
msgid ""
"For additional guidelines on how to write and improve hwmon drivers, please "
"also read Documentation/hwmon/submitting-patches.rst."
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:21
msgid "The API"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:22
msgid ""
"Each hardware monitoring driver must #include <linux/hwmon.h> and, in some "
"cases, <linux/hwmon-sysfs.h>. linux/hwmon.h declares the following register/"
"unregister functions::"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:45
msgid ""
"hwmon_device_register_with_info registers a hardware monitoring device. It "
"creates the standard sysfs attributes in the hardware monitoring core, "
"letting the driver focus on reading from and writing to the chip instead of "
"having to bother with sysfs attributes. The parent device parameter as well "
"as the chip parameter must not be NULL. Its parameters are described in more "
"detail below."
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:52
msgid ""
"devm_hwmon_device_register_with_info is similar to "
"hwmon_device_register_with_info. However, it is device managed, meaning the "
"hwmon device does not have to be removed explicitly by the removal function."
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:56
msgid ""
"All other hardware monitoring device registration functions are deprecated "
"and must not be used in new drivers."
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:59
msgid ""
"hwmon_device_unregister deregisters a registered hardware monitoring device. "
"The parameter of this function is the pointer to the registered hardware "
"monitoring device structure. This function must be called from the driver "
"remove function if the hardware monitoring device was registered with "
"hwmon_device_register_with_info."
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:65
msgid ""
"All supported hwmon device registration functions only accept valid device "
"names. Device names including invalid characters (whitespace, '*', or '-') "
"will be rejected. If NULL is passed as name parameter, the hardware "
"monitoring device name will be derived from the parent device name."
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:70
msgid ""
"If the driver doesn't use a static device name (for example it uses "
"dev_name()), and therefore cannot make sure the name only contains valid "
"characters, hwmon_sanitize_name can be used. This convenience function will "
"duplicate the string and replace any invalid characters with an underscore. "
"It will allocate memory for the new string and it is the responsibility of "
"the caller to release the memory when the device is removed."
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:78
msgid ""
"devm_hwmon_sanitize_name is the resource managed version of "
"hwmon_sanitize_name; the memory will be freed automatically on device "
"removal."
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:83
msgid "Using devm_hwmon_device_register_with_info()"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:85
msgid ""
"hwmon_device_register_with_info() registers a hardware monitoring device. "
"The parameters to this function are"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:89
msgid "`struct device *dev`"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:89
msgid "Pointer to parent device"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:90
msgid "`const char *name`"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:90
msgid "Device name"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:91
msgid "`void *drvdata`"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:91
msgid "Driver private data"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:92
msgid "`const struct hwmon_chip_info *info`"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:92
msgid "Pointer to chip description."
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:93
msgid "`const struct attribute_group **extra_groups`"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:93
msgid "Null-terminated list of additional non-standard sysfs attribute groups."
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:97
msgid ""
"This function returns a pointer to the created hardware monitoring device on "
"success and a negative error code for failure."
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:100
msgid "The hwmon_chip_info structure looks as follows::"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:107
msgid "It contains the following fields:"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:109
msgid "ops:"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:110
msgid "Pointer to device operations."
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:111
msgid "info:"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:112
msgid "NULL-terminated list of device channel descriptors."
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:114
msgid "The list of hwmon operations is defined as::"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:125
msgid "It defines the following operations."
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:127
msgid "is_visible:"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:128
msgid ""
"Pointer to a function to return the file mode for each supported attribute. "
"This function is mandatory."
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:131
msgid "read:"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:132
msgid ""
"Pointer to a function for reading a value from the chip. This function is "
"optional, but must be provided if any readable attributes exist."
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:135
msgid "write:"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:136
msgid ""
"Pointer to a function for writing a value to the chip. This function is "
"optional, but must be provided if any writeable attributes exist."
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:139
msgid ""
"Each sensor channel is described with struct hwmon_channel_info, which is "
"defined as follows::"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:147
msgid "It contains following fields:"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:149
#: ../../../hwmon/hwmon-kernel-api.rst:258
#: ../../../hwmon/hwmon-kernel-api.rst:280
#: ../../../hwmon/hwmon-kernel-api.rst:303
msgid "type:"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:150
msgid "The hardware monitoring sensor type."
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:152
msgid "Supported sensor types are"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:155
msgid "hwmon_chip"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:155
msgid ""
"A virtual sensor type, used to describe attributes which are not bound to a "
"specific input or output"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:157
msgid "hwmon_temp"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:157
msgid "Temperature sensor"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:158
msgid "hwmon_in"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:158
msgid "Voltage sensor"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:159
msgid "hwmon_curr"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:159
msgid "Current sensor"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:160
msgid "hwmon_power"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:160
msgid "Power sensor"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:161
msgid "hwmon_energy"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:161
msgid "Energy sensor"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:162
msgid "hwmon_humidity"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:162
msgid "Humidity sensor"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:163
msgid "hwmon_fan"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:163
msgid "Fan speed sensor"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:164
msgid "hwmon_pwm"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:164
msgid "PWM control"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:167
msgid "config:"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:168
msgid ""
"Pointer to a 0-terminated list of configuration values for each sensor of "
"the given type. Each value is a combination of bit values describing the "
"attributes supposed by a single sensor."
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:172
msgid ""
"As an example, here is the complete description file for a LM75 compatible "
"sensor chip. The chip has a single temperature sensor. The driver wants to "
"register with the thermal subsystem (HWMON_C_REGISTER_TZ), and it supports "
"the update_interval attribute (HWMON_C_UPDATE_INTERVAL). The chip supports "
"reading the temperature (HWMON_T_INPUT), it has a maximum temperature "
"register (HWMON_T_MAX) as well as a maximum temperature hysteresis register "
"(HWMON_T_MAX_HYST)::"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:230
msgid ""
"A complete list of bit values indicating individual attribute support is "
"defined in include/linux/hwmon.h. Definition prefixes are as follows."
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:234
#: ../../../hwmon/hwmon-kernel-api.rst:237
msgid "HWMON_C_xxxx"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:234
msgid "Chip attributes, for use with hwmon_chip."
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:235
msgid "HWMON_T_xxxx"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:235
msgid "Temperature attributes, for use with hwmon_temp."
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:236
msgid "HWMON_I_xxxx"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:236
msgid "Voltage attributes, for use with hwmon_in."
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:237
msgid ""
"Current attributes, for use with hwmon_curr. Notice the prefix overlap with "
"chip attributes."
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:239
msgid "HWMON_P_xxxx"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:239
msgid "Power attributes, for use with hwmon_power."
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:240
msgid "HWMON_E_xxxx"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:240
msgid "Energy attributes, for use with hwmon_energy."
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:241
msgid "HWMON_H_xxxx"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:241
msgid "Humidity attributes, for use with hwmon_humidity."
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:242
msgid "HWMON_F_xxxx"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:242
msgid "Fan speed attributes, for use with hwmon_fan."
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:243
msgid "HWMON_PWM_xxxx"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:243
msgid "PWM control attributes, for use with hwmon_pwm."
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:247
msgid "Driver callback functions"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:249
msgid ""
"Each driver provides is_visible, read, and write functions. Parameters and "
"return values for those functions are as follows::"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:255
#: ../../../hwmon/hwmon-kernel-api.rst:277
#: ../../../hwmon/hwmon-kernel-api.rst:300
msgid "Parameters:"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:256
msgid "data:"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:257
msgid "Pointer to device private data structure."
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:259
#: ../../../hwmon/hwmon-kernel-api.rst:281
#: ../../../hwmon/hwmon-kernel-api.rst:304
msgid "The sensor type."
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:260
#: ../../../hwmon/hwmon-kernel-api.rst:282
#: ../../../hwmon/hwmon-kernel-api.rst:305
msgid "attr:"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:261
msgid ""
"Attribute identifier associated with a specific attribute. For example, the "
"attribute value for HWMON_T_INPUT would be hwmon_temp_input. For complete "
"mappings of bit fields to attribute values please see include/linux/hwmon.h."
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:265
#: ../../../hwmon/hwmon-kernel-api.rst:287
#: ../../../hwmon/hwmon-kernel-api.rst:310
msgid "channel:"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:266
#: ../../../hwmon/hwmon-kernel-api.rst:288
#: ../../../hwmon/hwmon-kernel-api.rst:311
msgid "The sensor channel number."
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:268
#: ../../../hwmon/hwmon-kernel-api.rst:292
#: ../../../hwmon/hwmon-kernel-api.rst:315
msgid "Return value:"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:269
msgid ""
"The file mode for this attribute. Typically, this will be 0 (the attribute "
"will not be created), 0444, or 0644."
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:278
#: ../../../hwmon/hwmon-kernel-api.rst:301
msgid "dev:"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:279
#: ../../../hwmon/hwmon-kernel-api.rst:302
msgid "Pointer to the hardware monitoring device."
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:283
#: ../../../hwmon/hwmon-kernel-api.rst:306
msgid ""
"Attribute identifier associated with a specific attribute. For example, the "
"attribute value for HWMON_T_INPUT would be hwmon_temp_input. For complete "
"mappings please see include/linux/hwmon.h."
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:289
#: ../../../hwmon/hwmon-kernel-api.rst:312
msgid "val:"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:290
msgid "Pointer to attribute value."
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:293
#: ../../../hwmon/hwmon-kernel-api.rst:316
msgid "0 on success, a negative error number otherwise."
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:313
msgid "The value to write to the chip."
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:320
msgid "Driver-provided sysfs attributes"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:322
msgid ""
"In most situations it should not be necessary for a driver to provide sysfs "
"attributes since the hardware monitoring core creates those internally. Only "
"additional non-standard sysfs attributes need to be provided."
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:326
msgid ""
"The header file linux/hwmon-sysfs.h provides a number of useful macros to "
"declare and use hardware monitoring sysfs attributes."
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:329
msgid ""
"In many cases, you can use the existing define DEVICE_ATTR or its variants "
"DEVICE_ATTR_{RW,RO,WO} to declare such attributes. This is feasible if an "
"attribute has no additional context. However, in many cases there will be "
"additional information such as a sensor index which will need to be passed "
"to the sysfs attribute handling function."
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:335
msgid ""
"SENSOR_DEVICE_ATTR and SENSOR_DEVICE_ATTR_2 can be used to define attributes "
"which need such additional context information. SENSOR_DEVICE_ATTR requires "
"one additional argument, SENSOR_DEVICE_ATTR_2 requires two."
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:339
msgid ""
"Simplified variants of SENSOR_DEVICE_ATTR and SENSOR_DEVICE_ATTR_2 are "
"available and should be used if standard attribute permissions and function "
"names are feasible. Standard permissions are 0644 for "
"SENSOR_DEVICE_ATTR[_2]_RW, 0444 for SENSOR_DEVICE_ATTR[_2]_RO, and 0200 for "
"SENSOR_DEVICE_ATTR[_2]_WO. Standard functions, similar to DEVICE_ATTR_{RW,RO,"
"WO}, have _show and _store appended to the provided function name."
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:346
msgid ""
"SENSOR_DEVICE_ATTR and its variants define a struct sensor_device_attribute "
"variable. This structure has the following fields::"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:354
msgid ""
"You can use to_sensor_dev_attr to get the pointer to this structure from the "
"attribute read or write function. Its parameter is the device to which the "
"attribute is attached."
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:358
msgid ""
"SENSOR_DEVICE_ATTR_2 and its variants define a struct "
"sensor_device_attribute_2 variable, which is defined as follows::"
msgstr ""

#: ../../../hwmon/hwmon-kernel-api.rst:367
msgid ""
"Use to_sensor_dev_attr_2 to get the pointer to this structure. Its parameter "
"is the device to which the attribute is attached."
msgstr ""
