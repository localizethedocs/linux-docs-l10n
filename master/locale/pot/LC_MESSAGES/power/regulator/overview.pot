# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../power/regulator/overview.rst:3
msgid "Linux voltage and current regulator framework"
msgstr ""

#: ../../../power/regulator/overview.rst:6
msgid "About"
msgstr ""

#: ../../../power/regulator/overview.rst:8
msgid ""
"This framework is designed to provide a standard kernel interface to control "
"voltage and current regulators."
msgstr ""

#: ../../../power/regulator/overview.rst:11
msgid ""
"The intention is to allow systems to dynamically control regulator power "
"output in order to save power and prolong battery life. This applies to both "
"voltage regulators (where voltage output is controllable) and current sinks "
"(where current limit is controllable)."
msgstr ""

#: ../../../power/regulator/overview.rst:16
msgid "2008  Wolfson Microelectronics PLC."
msgstr ""

#: ../../../power/regulator/overview.rst:18
msgid "Author: Liam Girdwood <lrg@slimlogic.co.uk>"
msgstr ""

#: ../../../power/regulator/overview.rst:22
msgid "Nomenclature"
msgstr ""

#: ../../../power/regulator/overview.rst:24
msgid "Some terms used in this document:"
msgstr ""

#: ../../../power/regulator/overview.rst:26
msgid "Regulator"
msgstr ""

#: ../../../power/regulator/overview.rst:27
msgid ""
"Electronic device that supplies power to other devices. Most regulators can "
"enable and disable their output while some can control their output voltage "
"and or current."
msgstr ""

#: ../../../power/regulator/overview.rst:31
msgid "Input Voltage -> Regulator -> Output Voltage"
msgstr ""

#: ../../../power/regulator/overview.rst:34
msgid "PMIC"
msgstr ""

#: ../../../power/regulator/overview.rst:35
msgid ""
"Power Management IC. An IC that contains numerous regulators and often "
"contains other subsystems."
msgstr ""

#: ../../../power/regulator/overview.rst:39
msgid "Consumer"
msgstr ""

#: ../../../power/regulator/overview.rst:40
msgid ""
"Electronic device that is supplied power by a regulator. Consumers can be "
"classified into two types:-"
msgstr ""

#: ../../../power/regulator/overview.rst:43
msgid ""
"Static: consumer does not change its supply voltage or current limit. It "
"only needs to enable or disable its power supply. Its supply voltage is set "
"by the hardware, bootloader, firmware or kernel board initialisation code."
msgstr ""

#: ../../../power/regulator/overview.rst:48
msgid ""
"Dynamic: consumer needs to change its supply voltage or current limit to "
"meet operation demands."
msgstr ""

#: ../../../power/regulator/overview.rst:52
msgid "Power Domain"
msgstr ""

#: ../../../power/regulator/overview.rst:53
msgid ""
"Electronic circuit that is supplied its input power by the output power of a "
"regulator, switch or by another power domain."
msgstr ""

#: ../../../power/regulator/overview.rst:57
msgid "The supply regulator may be behind a switch(s). i.e.::"
msgstr ""

#: ../../../power/regulator/overview.rst:65
msgid "That is one regulator and three power domains:"
msgstr ""

#: ../../../power/regulator/overview.rst:67
msgid "Domain 1: Switch-1, Consumers D & E."
msgstr ""

#: ../../../power/regulator/overview.rst:68
msgid "Domain 2: Switch-2, Consumers B & C."
msgstr ""

#: ../../../power/regulator/overview.rst:69
msgid "Domain 3: Consumer A."
msgstr ""

#: ../../../power/regulator/overview.rst:71
msgid "and this represents a \"supplies\" relationship:"
msgstr ""

#: ../../../power/regulator/overview.rst:73
msgid "Domain-1 --> Domain-2 --> Domain-3."
msgstr ""

#: ../../../power/regulator/overview.rst:75
msgid ""
"A power domain may have regulators that are supplied power by other "
"regulators. i.e.::"
msgstr ""

#: ../../../power/regulator/overview.rst:82
msgid "This gives us two regulators and two power domains:"
msgstr ""

#: ../../../power/regulator/overview.rst:84
msgid "Domain 1: Regulator-2, Consumer B."
msgstr ""

#: ../../../power/regulator/overview.rst:85
msgid "Domain 2: Consumer A."
msgstr ""

#: ../../../power/regulator/overview.rst:87
msgid "and a \"supplies\" relationship:"
msgstr ""

#: ../../../power/regulator/overview.rst:89
msgid "Domain-1 --> Domain-2"
msgstr ""

#: ../../../power/regulator/overview.rst:92
msgid "Constraints"
msgstr ""

#: ../../../power/regulator/overview.rst:93
msgid ""
"Constraints are used to define power levels for performance and hardware "
"protection. Constraints exist at three levels:"
msgstr ""

#: ../../../power/regulator/overview.rst:96
msgid ""
"Regulator Level: This is defined by the regulator hardware operating "
"parameters and is specified in the regulator datasheet. i.e."
msgstr ""

#: ../../../power/regulator/overview.rst:100
msgid "voltage output is in the range 800mV -> 3500mV."
msgstr ""

#: ../../../power/regulator/overview.rst:101
msgid "regulator current output limit is 20mA @ 5V but is 10mA @ 10V."
msgstr ""

#: ../../../power/regulator/overview.rst:104
msgid ""
"Power Domain Level: This is defined in software by kernel level board "
"initialisation code. It is used to constrain a power domain to a particular "
"power range. i.e."
msgstr ""

#: ../../../power/regulator/overview.rst:108
msgid "Domain-1 voltage is 3300mV"
msgstr ""

#: ../../../power/regulator/overview.rst:109
msgid "Domain-2 voltage is 1400mV -> 1600mV"
msgstr ""

#: ../../../power/regulator/overview.rst:110
msgid "Domain-3 current limit is 0mA -> 20mA."
msgstr ""

#: ../../../power/regulator/overview.rst:112
msgid ""
"Consumer Level: This is defined by consumer drivers dynamically setting "
"voltage or current limit levels."
msgstr ""

#: ../../../power/regulator/overview.rst:115
msgid ""
"e.g. a consumer backlight driver asks for a current increase from 5mA to "
"10mA to increase LCD illumination. This passes to through the levels as "
"follows :-"
msgstr ""

#: ../../../power/regulator/overview.rst:119
msgid ""
"Consumer: need to increase LCD brightness. Lookup and request next current "
"mA value in brightness table (the consumer driver could be used on several "
"different personalities based upon the same reference device)."
msgstr ""

#: ../../../power/regulator/overview.rst:124
msgid ""
"Power Domain: is the new current limit within the domain operating limits "
"for this domain and system state (e.g. battery power, USB power)"
msgstr ""

#: ../../../power/regulator/overview.rst:128
msgid ""
"Regulator Domains: is the new current limit within the regulator operating "
"parameters for input/output voltage."
msgstr ""

#: ../../../power/regulator/overview.rst:131
msgid ""
"If the regulator request passes all the constraint tests then the new "
"regulator value is applied."
msgstr ""

#: ../../../power/regulator/overview.rst:136
msgid "Design"
msgstr ""

#: ../../../power/regulator/overview.rst:138
msgid ""
"The framework is designed and targeted at SoC based devices but may also be "
"relevant to non SoC devices and is split into the following four interfaces:-"
msgstr ""

#: ../../../power/regulator/overview.rst:142
msgid "Consumer driver interface."
msgstr ""

#: ../../../power/regulator/overview.rst:144
msgid ""
"This uses a similar API to the kernel clock interface in that consumer "
"drivers can get and put a regulator (like they can with clocks atm) and get/"
"set voltage, current limit, mode, enable and disable. This should allow "
"consumers complete control over their supply voltage and current limit. This "
"also compiles out if not in use so drivers can be reused in systems with no "
"regulator based power control."
msgstr ""

#: ../../../power/regulator/overview.rst:151
msgid "See Documentation/power/regulator/consumer.rst"
msgstr ""

#: ../../../power/regulator/overview.rst:153
msgid "Regulator driver interface."
msgstr ""

#: ../../../power/regulator/overview.rst:155
msgid ""
"This allows regulator drivers to register their regulators and provide "
"operations to the core. It also has a notifier call chain for propagating "
"regulator events to clients."
msgstr ""

#: ../../../power/regulator/overview.rst:159
msgid "See Documentation/power/regulator/regulator.rst"
msgstr ""

#: ../../../power/regulator/overview.rst:161
msgid "Machine interface."
msgstr ""

#: ../../../power/regulator/overview.rst:163
msgid ""
"This interface is for machine specific code and allows the creation of "
"voltage/current domains (with constraints) for each regulator. It can "
"provide regulator constraints that will prevent device damage through "
"overvoltage or overcurrent caused by buggy client drivers. It also allows "
"the creation of a regulator tree whereby some regulators are supplied by "
"others (similar to a clock tree)."
msgstr ""

#: ../../../power/regulator/overview.rst:170
msgid "See Documentation/power/regulator/machine.rst"
msgstr ""

#: ../../../power/regulator/overview.rst:172
msgid "Userspace ABI."
msgstr ""

#: ../../../power/regulator/overview.rst:174
msgid ""
"The framework also exports a lot of useful voltage/current/opmode data to "
"userspace via sysfs. This could be used to help monitor device power "
"consumption and status."
msgstr ""

#: ../../../power/regulator/overview.rst:178
msgid "See Documentation/ABI/testing/sysfs-class-regulator"
msgstr ""
