# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../power/powercap/powercap.rst:3
msgid "Power Capping Framework"
msgstr ""

#: ../../../power/powercap/powercap.rst:5
msgid ""
"The power capping framework provides a consistent interface between the "
"kernel and the user space that allows power capping drivers to expose the "
"settings to user space in a uniform way."
msgstr ""

#: ../../../power/powercap/powercap.rst:10
msgid "Terminology"
msgstr ""

#: ../../../power/powercap/powercap.rst:12
msgid ""
"The framework exposes power capping devices to user space via sysfs in the "
"form of a tree of objects. The objects at the root level of the tree "
"represent 'control types', which correspond to different methods of power "
"capping.  For example, the intel-rapl control type represents the Intel "
"\"Running Average Power Limit\" (RAPL) technology, whereas the 'idle-"
"injection' control type corresponds to the use of idle injection for "
"controlling power."
msgstr ""

#: ../../../power/powercap/powercap.rst:19
msgid ""
"Power zones represent different parts of the system, which can be controlled "
"and monitored using the power capping method determined by the control type "
"the given zone belongs to. They each contain attributes for monitoring "
"power, as well as controls represented in the form of power constraints.  If "
"the parts of the system represented by different power zones are "
"hierarchical (that is, one bigger part consists of multiple smaller parts "
"that each have their own power controls), those power zones may also be "
"organized in a hierarchy with one parent power zone containing multiple "
"subzones and so on to reflect the power control topology of the system.  In "
"that case, it is possible to apply power capping to a set of devices "
"together using the parent power zone and if more fine grained control is "
"required, it can be applied through the subzones."
msgstr ""

#: ../../../power/powercap/powercap.rst:32
msgid "Example sysfs interface tree::"
msgstr ""

#: ../../../power/powercap/powercap.rst:148
msgid ""
"The above example illustrates a case in which the Intel RAPL technology, "
"available in IntelÂ® IA-64 and IA-32 Processor Architectures, is used. There "
"is one control type called intel-rapl which contains two power zones, intel-"
"rapl:0 and intel-rapl:1, representing CPU packages.  Each of these power "
"zones contains two subzones, intel-rapl:j:0 and intel-rapl:j:1 (j = 0, 1), "
"representing the \"core\" and the \"uncore\" parts of the given CPU package, "
"respectively.  All of the zones and subzones contain energy monitoring "
"attributes (energy_uj, max_energy_range_uj) and constraint attributes "
"(constraint_*) allowing controls to be applied (the constraints in the "
"'package' power zones apply to the whole CPU packages and the subzone "
"constraints only apply to the respective parts of the given package "
"individually). Since Intel RAPL doesn't provide instantaneous power value, "
"there is no power_uw attribute."
msgstr ""

#: ../../../power/powercap/powercap.rst:161
msgid ""
"In addition to that, each power zone contains a name attribute, allowing the "
"part of the system represented by that zone to be identified. For example::"
msgstr ""

#: ../../../power/powercap/powercap.rst:168
msgid "package-0"
msgstr ""

#: ../../../power/powercap/powercap.rst:170
msgid ""
"Depending on different power zones, the Intel RAPL technology allows one or "
"multiple constraints like short term, long term and peak power, with "
"different time windows to be applied to each power zone. All the zones "
"contain attributes representing the constraint names, power limits and the "
"sizes of the time windows. Note that time window is not applicable to peak "
"power. Here, constraint_j_* attributes correspond to the jth constraint (j = "
"0,1,2)."
msgstr ""

#: ../../../power/powercap/powercap.rst:178
msgid "For example::"
msgstr ""

#: ../../../power/powercap/powercap.rst:191
msgid "Power Zone Attributes"
msgstr ""

#: ../../../power/powercap/powercap.rst:194
msgid "Monitoring attributes"
msgstr ""

#: ../../../power/powercap/powercap.rst:196
msgid "energy_uj (rw)"
msgstr ""

#: ../../../power/powercap/powercap.rst:197
msgid ""
"Current energy counter in micro joules. Write \"0\" to reset. If the counter "
"can not be reset, then this attribute is read only."
msgstr ""

#: ../../../power/powercap/powercap.rst:200
msgid "max_energy_range_uj (ro)"
msgstr ""

#: ../../../power/powercap/powercap.rst:201
msgid "Range of the above energy counter in micro-joules."
msgstr ""

#: ../../../power/powercap/powercap.rst:203
msgid "power_uw (ro)"
msgstr ""

#: ../../../power/powercap/powercap.rst:204
msgid "Current power in micro watts."
msgstr ""

#: ../../../power/powercap/powercap.rst:206
msgid "max_power_range_uw (ro)"
msgstr ""

#: ../../../power/powercap/powercap.rst:207
msgid "Range of the above power value in micro-watts."
msgstr ""

#: ../../../power/powercap/powercap.rst:209
msgid "name (ro)"
msgstr ""

#: ../../../power/powercap/powercap.rst:210
msgid "Name of this power zone."
msgstr ""

#: ../../../power/powercap/powercap.rst:212
msgid ""
"It is possible that some domains have both power ranges and energy counter "
"ranges; however, only one is mandatory."
msgstr ""

#: ../../../power/powercap/powercap.rst:216
msgid "Constraints"
msgstr ""

#: ../../../power/powercap/powercap.rst:218
msgid "constraint_X_power_limit_uw (rw)"
msgstr ""

#: ../../../power/powercap/powercap.rst:219
msgid ""
"Power limit in micro watts, which should be applicable for the time window "
"specified by \"constraint_X_time_window_us\"."
msgstr ""

#: ../../../power/powercap/powercap.rst:222
msgid "constraint_X_time_window_us (rw)"
msgstr ""

#: ../../../power/powercap/powercap.rst:223
msgid "Time window in micro seconds."
msgstr ""

#: ../../../power/powercap/powercap.rst:225
msgid "constraint_X_name (ro)"
msgstr ""

#: ../../../power/powercap/powercap.rst:226
msgid "An optional name of the constraint"
msgstr ""

#: ../../../power/powercap/powercap.rst:228
msgid "constraint_X_max_power_uw(ro)"
msgstr ""

#: ../../../power/powercap/powercap.rst:229
msgid "Maximum allowed power in micro watts."
msgstr ""

#: ../../../power/powercap/powercap.rst:231
msgid "constraint_X_min_power_uw(ro)"
msgstr ""

#: ../../../power/powercap/powercap.rst:232
msgid "Minimum allowed power in micro watts."
msgstr ""

#: ../../../power/powercap/powercap.rst:234
msgid "constraint_X_max_time_window_us(ro)"
msgstr ""

#: ../../../power/powercap/powercap.rst:235
msgid "Maximum allowed time window in micro seconds."
msgstr ""

#: ../../../power/powercap/powercap.rst:237
msgid "constraint_X_min_time_window_us(ro)"
msgstr ""

#: ../../../power/powercap/powercap.rst:238
msgid "Minimum allowed time window in micro seconds."
msgstr ""

#: ../../../power/powercap/powercap.rst:240
msgid "Except power_limit_uw and time_window_us other fields are optional."
msgstr ""

#: ../../../power/powercap/powercap.rst:243
msgid "Common zone and control type attributes"
msgstr ""

#: ../../../power/powercap/powercap.rst:245
msgid ""
"enabled (rw): Enable/Disable controls at zone level or for all zones using a "
"control type."
msgstr ""

#: ../../../power/powercap/powercap.rst:249
msgid "Power Cap Client Driver Interface"
msgstr ""

#: ../../../power/powercap/powercap.rst:251
msgid "The API summary:"
msgstr ""

#: ../../../power/powercap/powercap.rst:253
msgid ""
"Call powercap_register_control_type() to register control type object. Call "
"powercap_register_zone() to register a power zone (under a given control "
"type), either as a top-level power zone or as a subzone of another power "
"zone registered earlier. The number of constraints in a power zone and the "
"corresponding callbacks have to be defined prior to calling "
"powercap_register_zone() to register that zone."
msgstr ""

#: ../../../power/powercap/powercap.rst:260
msgid ""
"To Free a power zone call powercap_unregister_zone(). To free a control type "
"object call powercap_unregister_control_type(). Detailed API can be "
"generated using kernel-doc on include/linux/powercap.h."
msgstr ""
