# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-06 15:47+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../gpu/amdgpu/debugfs.rst:3
msgid "AMDGPU DebugFS"
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:5
msgid ""
"The amdgpu driver provides a number of debugfs files to aid in debugging "
"issues in the driver.  These are usually found in /sys/kernel/debug/dri/"
"<num>."
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:10
msgid "DebugFS Files"
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:13
msgid "amdgpu_benchmark"
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:15
msgid ""
"Run benchmarks using the DMA engine the driver uses for GPU memory paging. "
"Write a number to the file to run the test.  The results are written to the "
"kernel log.  VRAM is on device memory (dGPUs) or carve out (APUs) and GTT "
"(Graphics Translation Tables) is system memory that is accessible by the "
"GPU. The following tests are available:"
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:21
msgid "1: simple test, VRAM to GTT and GTT to VRAM"
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:22
msgid "2: simple test, VRAM to VRAM"
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:23
msgid "3: GTT to VRAM, buffer size sweep, powers of 2"
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:24
msgid "4: VRAM to GTT, buffer size sweep, powers of 2"
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:25
msgid "5: VRAM to VRAM, buffer size sweep, powers of 2"
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:26
msgid "6: GTT to VRAM, buffer size sweep, common display sizes"
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:27
msgid "7: VRAM to GTT, buffer size sweep, common display sizes"
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:28
msgid "8: VRAM to VRAM, buffer size sweep, common display sizes"
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:31
msgid "amdgpu_test_ib"
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:33
msgid ""
"Read this file to run simple IB (Indirect Buffer) tests on all kernel "
"managed rings.  IBs are command buffers usually generated by userspace "
"applications which are submitted to the kernel for execution on an "
"particular GPU engine. This just runs the simple IB tests included in the "
"kernel.  These tests are engine specific and verify that IB submission works."
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:40
msgid "amdgpu_discovery"
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:42
msgid ""
"Provides raw access to the IP discovery binary provided by the GPU.  Read "
"this file to access the raw binary.  This is useful for verifying the "
"contents of the IP discovery table.  It is chip specific."
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:47
msgid "amdgpu_vbios"
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:49
msgid ""
"Provides raw access to the ROM binary image from the GPU.  Read this file to "
"access the raw binary.  This is useful for verifying the contents of the "
"video BIOS ROM.  It is board specific."
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:54
msgid "amdgpu_evict_gtt"
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:56
msgid ""
"Evict all buffers from the GTT memory pool.  Read this file to evict all "
"buffers from this pool."
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:60
msgid "amdgpu_evict_vram"
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:62
msgid ""
"Evict all buffers from the VRAM memory pool.  Read this file to evict all "
"buffers from this pool."
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:66
msgid "amdgpu_gpu_recover"
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:68
msgid ""
"Trigger a GPU reset.  Read this file to trigger reset the entire GPU. All "
"work currently running  on the GPU will be lost."
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:72
msgid "amdgpu_ring_<name>"
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:74
msgid ""
"Provides read access to the kernel managed ring buffers for each ring "
"<name>. These are useful for debugging problems on a particular ring.  The "
"ring buffer is how the CPU sends commands to the GPU.  The CPU writes "
"commands into the buffer and then asks the GPU engine to process it.  This "
"is the raw binary contents of the ring buffer.  Use a tool like UMR to "
"decode the rings into human readable form."
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:82
msgid "amdgpu_mqd_<name>"
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:84
msgid ""
"Provides read access to the kernel managed MQD (Memory Queue Descriptor) for "
"ring <name> managed by the kernel driver.  MQDs define the features of the "
"ring and are used to store the ring's state when it is not connected to "
"hardware. The driver writes the requested ring features and metadata (GPU "
"addresses of the ring itself and associated buffers) to the MQD and the "
"firmware uses the MQD to populate the hardware when the ring is mapped to a "
"hardware slot.  Only available on engines which use MQDs.  This provides "
"access to the raw MQD binary."
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:94
msgid "amdgpu_error_<name>"
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:96
msgid ""
"Provides an interface to set an error code on the dma fences associated with "
"ring <name>.  The error code specified is propagated to all fences "
"associated with the ring.  Use this to inject a fence error into a ring."
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:101
msgid "amdgpu_pm_info"
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:103
msgid ""
"Provides human readable information about the power management features and "
"state of the GPU.  This includes current GFX clock, Memory clock, voltages, "
"average SoC power, temperature, GFX load, Memory load, SMU feature mask, VCN "
"power state, clock and power gating features."
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:109
msgid "amdgpu_firmware_info"
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:111
msgid ""
"Lists the firmware versions for all firmwares used by the GPU.  Only entries "
"with a non-0 version are valid.  If the version is 0, the firmware is not "
"valid for the GPU."
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:116
msgid "amdgpu_fence_info"
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:118
msgid ""
"Shows the last signalled and emitted fence sequence numbers for each kernel "
"driver managed ring.  Fences are associated with submissions to the engine.  "
"Emitted fences have been submitted to the ring and signalled fences have "
"been signalled by the GPU.  Rings with a larger emitted fence value have "
"outstanding work that is still being processed by the engine that owns that "
"ring.  When the emitted and signalled fence values are equal, the ring is "
"idle."
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:127
msgid "amdgpu_gem_info"
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:129
msgid ""
"Lists all of the PIDs using the GPU and the GPU buffers that they have "
"allocated.  This lists the buffer size, pool (VRAM, GTT, etc.), and buffer "
"attributes (CPU access required, CPU cache attributes, etc.)."
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:134
msgid "amdgpu_vm_info"
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:136
msgid ""
"Lists all of the PIDs using the GPU and the GPU buffers that they have "
"allocated as well as the status of those buffers relative to that process' "
"GPU virtual address space (e.g., evicted, idle, invalidated, etc.)."
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:141
msgid "amdgpu_sa_info"
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:143
msgid ""
"Prints out all of the suballocations (sa) by the suballocation manager in "
"the kernel driver.  Prints the GPU address, size, and fence info associated "
"with each suballocation.  The suballocations are used internally within the "
"kernel driver for various things."
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:149
msgid "amdgpu_<pool>_mm"
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:151
msgid "Prints TTM information about the memory pool <pool>."
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:154
msgid "amdgpu_vram"
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:156
msgid ""
"Provides direct access to VRAM.  Used by tools like UMR to inspect objects "
"in VRAM."
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:160
msgid "amdgpu_iomem"
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:162
msgid ""
"Provides direct access to GTT memory.  Used by tools like UMR to inspect GTT "
"memory."
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:166
msgid "amdgpu_regs_*"
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:168
msgid ""
"Provides direct access to various register apertures on the GPU.  Used by "
"tools like UMR to access GPU registers."
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:172
msgid "amdgpu_regs2"
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:174
msgid ""
"Provides an IOCTL interface used by UMR for interacting with GPU registers."
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:178
msgid "amdgpu_sensors"
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:180
msgid ""
"Provides an interface to query GPU power metrics (temperature, average "
"power, etc.).  Used by tools like UMR to query GPU power metrics."
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:185
msgid "amdgpu_gca_config"
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:187
msgid ""
"Provides an interface to query GPU details (Graphics/Compute Array config, "
"PCI config, GPU family, etc.).  Used by tools like UMR to query GPU details."
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:191
msgid "amdgpu_wave"
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:193
msgid ""
"Used to query GFX/compute wave information from the hardware.  Used by tools "
"like UMR to query GFX/compute wave information."
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:197
msgid "amdgpu_gpr"
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:199
msgid ""
"Used to query GFX/compute GPR (General Purpose Register) information from "
"the hardware.  Used by tools like UMR to query GPRs when debugging shaders."
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:203
msgid "amdgpu_gprwave"
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:205
msgid ""
"Provides an IOCTL interface used by UMR for interacting with shader waves."
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:208
msgid "amdgpu_fw_attestation"
msgstr ""

#: ../../../gpu/amdgpu/debugfs.rst:210
msgid "Provides an interface for reading back firmware attestation records."
msgstr ""
