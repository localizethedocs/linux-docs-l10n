# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../driver-api/sync_file.rst:3
msgid "Sync File API Guide"
msgstr ""

#: ../../../driver-api/sync_file.rst:0
msgid "Author"
msgstr ""

#: ../../../driver-api/sync_file.rst:5
msgid "Gustavo Padovan <gustavo at padovan dot org>"
msgstr ""

#: ../../../driver-api/sync_file.rst:7
msgid ""
"This document serves as a guide for device drivers writers on what the "
"sync_file API is, and how drivers can support it. Sync file is the carrier "
"of the fences(struct dma_fence) that are needed to synchronize between "
"drivers or across process boundaries."
msgstr ""

#: ../../../driver-api/sync_file.rst:12
msgid ""
"The sync_file API is meant to be used to send and receive fence information "
"to/from userspace. It enables userspace to do explicit fencing, where "
"instead of attaching a fence to the buffer a producer driver (such as a GPU "
"or V4L driver) sends the fence related to the buffer to userspace via a "
"sync_file."
msgstr ""

#: ../../../driver-api/sync_file.rst:17
msgid ""
"The sync_file then can be sent to the consumer (DRM driver for example), "
"that will not use the buffer for anything before the fence(s) signals, i.e., "
"the driver that issued the fence is not using/processing the buffer anymore, "
"so it signals that the buffer is ready to use. And vice-versa for the "
"consumer -> producer part of the cycle."
msgstr ""

#: ../../../driver-api/sync_file.rst:23
msgid ""
"Sync files allows userspace awareness on buffer sharing synchronization "
"between drivers."
msgstr ""

#: ../../../driver-api/sync_file.rst:26
msgid ""
"Sync file was originally added in the Android kernel but current Linux "
"Desktop can benefit a lot from it."
msgstr ""

#: ../../../driver-api/sync_file.rst:30
msgid "in-fences and out-fences"
msgstr ""

#: ../../../driver-api/sync_file.rst:32
msgid ""
"Sync files can go either to or from userspace. When a sync_file is sent from "
"the driver to userspace we call the fences it contains 'out-fences'. They "
"are related to a buffer that the driver is processing or is going to "
"process, so the driver creates an out-fence to be able to notify, through "
"dma_fence_signal(), when it has finished using (or processing) that buffer. "
"Out-fences are fences that the driver creates."
msgstr ""

#: ../../../driver-api/sync_file.rst:39
msgid ""
"On the other hand if the driver receives fence(s) through a sync_file from "
"userspace we call these fence(s) 'in-fences'. Receiving in-fences means that "
"we need to wait for the fence(s) to signal before using any buffer related "
"to the in-fences."
msgstr ""

#: ../../../driver-api/sync_file.rst:45
msgid "Creating Sync Files"
msgstr ""

#: ../../../driver-api/sync_file.rst:47
msgid ""
"When a driver needs to send an out-fence userspace it creates a sync_file."
msgstr ""

#: ../../../driver-api/sync_file.rst:49 ../../../driver-api/sync_file.rst:75
msgid "Interface::"
msgstr ""

#: ../../../driver-api/sync_file.rst:53
msgid ""
"The caller pass the out-fence and gets back the sync_file. That is just the "
"first step, next it needs to install an fd on sync_file->file. So it gets an "
"fd::"
msgstr ""

#: ../../../driver-api/sync_file.rst:59
msgid "and installs it on sync_file->file::"
msgstr ""

#: ../../../driver-api/sync_file.rst:63
msgid "The sync_file fd now can be sent to userspace."
msgstr ""

#: ../../../driver-api/sync_file.rst:65
msgid ""
"If the creation process fail, or the sync_file needs to be released by any "
"other reason fput(sync_file->file) should be used."
msgstr ""

#: ../../../driver-api/sync_file.rst:69
msgid "Receiving Sync Files from Userspace"
msgstr ""

#: ../../../driver-api/sync_file.rst:71
msgid ""
"When userspace needs to send an in-fence to the driver it passes file "
"descriptor of the Sync File to the kernel. The kernel can then retrieve the "
"fences from it."
msgstr ""

#: ../../../driver-api/sync_file.rst:80
msgid ""
"The returned reference is owned by the caller and must be disposed of "
"afterwards using dma_fence_put(). In case of error, a NULL is returned "
"instead."
msgstr ""

#: ../../../driver-api/sync_file.rst:83
msgid "References:"
msgstr ""

#: ../../../driver-api/sync_file.rst:85
msgid "struct sync_file in include/linux/sync_file.h"
msgstr ""

#: ../../../driver-api/sync_file.rst:86
msgid "All interfaces mentioned above defined in include/linux/sync_file.h"
msgstr ""
