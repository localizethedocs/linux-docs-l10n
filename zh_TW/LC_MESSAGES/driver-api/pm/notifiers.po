# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-30 08:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../driver-api/pm/notifiers.rst:6
msgid "Suspend/Hibernation Notifiers"
msgstr ""

#: ../../../driver-api/pm/notifiers.rst:0
msgid "Copyright"
msgstr ""

#: ../../../driver-api/pm/notifiers.rst:8
msgid "|copy| 2016 Intel Corporation"
msgstr ""

#: ../../../driver-api/pm/notifiers.rst:0
msgid "Author"
msgstr ""

#: ../../../driver-api/pm/notifiers.rst:10
msgid "Rafael J. Wysocki <rafael.j.wysocki@intel.com>"
msgstr ""

#: ../../../driver-api/pm/notifiers.rst:13
msgid ""
"There are some operations that subsystems or drivers may want to carry out "
"before hibernation/suspend or after restore/resume, but they require the "
"system to be fully functional, so the drivers' and subsystems' ``-"
">suspend()`` and ``->resume()`` or even ``->prepare()`` and ``->complete()`` "
"callbacks are not suitable for this purpose."
msgstr ""

#: ../../../driver-api/pm/notifiers.rst:19
msgid ""
"For example, device drivers may want to upload firmware to their devices "
"after resume/restore, but they cannot do it by calling :c:func:"
"`request_firmware()` from their ``->resume()`` or ``->complete()`` callback "
"routines (user land processes are frozen at these points).  The solution may "
"be to load the firmware into memory before processes are frozen and upload "
"it from there in the ``->resume()`` routine.  A suspend/hibernation notifier "
"may be used for that."
msgstr ""

#: ../../../driver-api/pm/notifiers.rst:26
msgid ""
"Subsystems or drivers having such needs can register suspend notifiers that "
"will be called upon the following events by the PM core:"
msgstr ""

#: ../../../driver-api/pm/notifiers.rst:29
msgid "``PM_HIBERNATION_PREPARE``"
msgstr ""

#: ../../../driver-api/pm/notifiers.rst:30
msgid ""
"The system is going to hibernate, tasks will be frozen immediately. This is "
"different from ``PM_SUSPEND_PREPARE`` below, because in this case additional "
"work is done between the notifiers and the invocation of PM callbacks for "
"the \"freeze\" transition."
msgstr ""

#: ../../../driver-api/pm/notifiers.rst:35
msgid "``PM_POST_HIBERNATION``"
msgstr ""

#: ../../../driver-api/pm/notifiers.rst:36
msgid ""
"The system memory state has been restored from a hibernation image or an "
"error occurred during hibernation.  Device restore callbacks have been "
"executed and tasks have been thawed."
msgstr ""

#: ../../../driver-api/pm/notifiers.rst:40
msgid "``PM_RESTORE_PREPARE``"
msgstr ""

#: ../../../driver-api/pm/notifiers.rst:41
msgid ""
"The system is going to restore a hibernation image.  If all goes well, the "
"restored image kernel will issue a ``PM_POST_HIBERNATION`` notification."
msgstr ""

#: ../../../driver-api/pm/notifiers.rst:45
msgid "``PM_POST_RESTORE``"
msgstr ""

#: ../../../driver-api/pm/notifiers.rst:46
msgid ""
"An error occurred during restore from hibernation.  Device restore callbacks "
"have been executed and tasks have been thawed."
msgstr ""

#: ../../../driver-api/pm/notifiers.rst:49
msgid "``PM_SUSPEND_PREPARE``"
msgstr ""

#: ../../../driver-api/pm/notifiers.rst:50
msgid "The system is preparing for suspend."
msgstr ""

#: ../../../driver-api/pm/notifiers.rst:52
msgid "``PM_POST_SUSPEND``"
msgstr ""

#: ../../../driver-api/pm/notifiers.rst:53
msgid ""
"The system has just resumed or an error occurred during suspend.  Device "
"resume callbacks have been executed and tasks have been thawed."
msgstr ""

#: ../../../driver-api/pm/notifiers.rst:56
msgid ""
"It is generally assumed that whatever the notifiers do for "
"``PM_HIBERNATION_PREPARE``, should be undone for ``PM_POST_HIBERNATION``. "
"Analogously, operations carried out for ``PM_SUSPEND_PREPARE`` should be "
"reversed for ``PM_POST_SUSPEND``."
msgstr ""

#: ../../../driver-api/pm/notifiers.rst:61
msgid ""
"Moreover, if one of the notifiers fails for the ``PM_HIBERNATION_PREPARE`` "
"or ``PM_SUSPEND_PREPARE`` event, the notifiers that have already succeeded "
"for that event will be called for ``PM_POST_HIBERNATION`` or "
"``PM_POST_SUSPEND``, respectively."
msgstr ""

#: ../../../driver-api/pm/notifiers.rst:66
msgid ""
"The hibernation and suspend notifiers are called with :c:data:`pm_mutex` "
"held. They are defined in the usual way, but their last argument is "
"meaningless (it is always NULL)."
msgstr ""

#: ../../../driver-api/pm/notifiers.rst:70
msgid ""
"To register and/or unregister a suspend notifier use :c:func:"
"`register_pm_notifier()` and :c:func:`unregister_pm_notifier()`, "
"respectively (both defined in :file:`include/linux/suspend.h`).  If you "
"don't need to unregister the notifier, you can also use the :c:func:"
"`pm_notifier()` macro defined in :file:`include/linux/suspend.h`."
msgstr ""
