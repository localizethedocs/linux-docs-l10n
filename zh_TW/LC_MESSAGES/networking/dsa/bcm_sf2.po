# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-30 08:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../networking/dsa/bcm_sf2.rst:3
msgid "Broadcom Starfighter 2 Ethernet switch driver"
msgstr ""

#: ../../../networking/dsa/bcm_sf2.rst:5
msgid ""
"Broadcom's Starfighter 2 Ethernet switch hardware block is commonly found "
"and deployed in the following products:"
msgstr ""

#: ../../../networking/dsa/bcm_sf2.rst:8
msgid "xDSL gateways such as BCM63138"
msgstr ""

#: ../../../networking/dsa/bcm_sf2.rst:9
msgid "streaming/multimedia Set Top Box such as BCM7445"
msgstr ""

#: ../../../networking/dsa/bcm_sf2.rst:10
msgid "Cable Modem/residential gateways such as BCM7145/BCM3390"
msgstr ""

#: ../../../networking/dsa/bcm_sf2.rst:12
msgid ""
"The switch is typically deployed in a configuration involving between 5 to "
"13 ports, offering a range of built-in and customizable interfaces:"
msgstr ""

#: ../../../networking/dsa/bcm_sf2.rst:15
msgid "single integrated Gigabit PHY"
msgstr ""

#: ../../../networking/dsa/bcm_sf2.rst:16
msgid "quad integrated Gigabit PHY"
msgstr ""

#: ../../../networking/dsa/bcm_sf2.rst:17
msgid "quad external Gigabit PHY w/ MDIO multiplexer"
msgstr ""

#: ../../../networking/dsa/bcm_sf2.rst:18
msgid "integrated MoCA PHY"
msgstr ""

#: ../../../networking/dsa/bcm_sf2.rst:19
msgid "several external MII/RevMII/GMII/RGMII interfaces"
msgstr ""

#: ../../../networking/dsa/bcm_sf2.rst:21
msgid ""
"The switch also supports specific congestion control features which allow "
"MoCA fail-over not to lose packets during a MoCA role re-election, as well "
"as out of band back-pressure to the host CPU network interface when "
"downstream interfaces are connected at a lower speed."
msgstr ""

#: ../../../networking/dsa/bcm_sf2.rst:26
msgid ""
"The switch hardware block is typically interfaced using MMIO accesses and "
"contains a bunch of sub-blocks/registers:"
msgstr ""

#: ../../../networking/dsa/bcm_sf2.rst:29
msgid "``SWITCH_CORE``: common switch registers"
msgstr ""

#: ../../../networking/dsa/bcm_sf2.rst:30
msgid "``SWITCH_REG``: external interfaces switch register"
msgstr ""

#: ../../../networking/dsa/bcm_sf2.rst:31
msgid ""
"``SWITCH_MDIO``: external MDIO bus controller (there is another one in "
"SWITCH_CORE, which is used for indirect PHY accesses)"
msgstr ""

#: ../../../networking/dsa/bcm_sf2.rst:33
msgid "``SWITCH_INDIR_RW``: 64-bits wide register helper block"
msgstr ""

#: ../../../networking/dsa/bcm_sf2.rst:34
msgid "``SWITCH_INTRL2_0/1``: Level-2 interrupt controllers"
msgstr ""

#: ../../../networking/dsa/bcm_sf2.rst:35
msgid "``SWITCH_ACB``: Admission control block"
msgstr ""

#: ../../../networking/dsa/bcm_sf2.rst:36
msgid "``SWITCH_FCB``: Fail-over control block"
msgstr ""

#: ../../../networking/dsa/bcm_sf2.rst:39
msgid "Implementation details"
msgstr ""

#: ../../../networking/dsa/bcm_sf2.rst:41
msgid ""
"The driver is located in ``drivers/net/dsa/bcm_sf2.c`` and is implemented as "
"a DSA driver; see ``Documentation/networking/dsa/dsa.rst`` for details on "
"the subsystem and what it provides."
msgstr ""

#: ../../../networking/dsa/bcm_sf2.rst:45
msgid ""
"The SF2 switch is configured to enable a Broadcom specific 4-bytes switch "
"tag which gets inserted by the switch for every packet forwarded to the CPU "
"interface, conversely, the CPU network interface should insert a similar tag "
"for packets entering the CPU port. The tag format is described in ``net/dsa/"
"tag_brcm.c``."
msgstr ""

#: ../../../networking/dsa/bcm_sf2.rst:51
msgid ""
"Overall, the SF2 driver is a fairly regular DSA driver; there are a few "
"specifics covered below."
msgstr ""

#: ../../../networking/dsa/bcm_sf2.rst:55
msgid "Device Tree probing"
msgstr ""

#: ../../../networking/dsa/bcm_sf2.rst:57
msgid ""
"The DSA platform device driver is probed using a specific compatible string "
"provided in ``net/dsa/dsa.c``. The reason for that is because the DSA "
"subsystem gets registered as a platform device driver currently. DSA will "
"provide the needed device_node pointers which are then accessible by the "
"switch driver setup function to setup resources such as register ranges and "
"interrupts. This currently works very well because none of the of_* "
"functions utilized by the driver require a struct device to be bound to a "
"struct device_node, but things may change in the future."
msgstr ""

#: ../../../networking/dsa/bcm_sf2.rst:67
msgid "MDIO indirect accesses"
msgstr ""

#: ../../../networking/dsa/bcm_sf2.rst:69
msgid ""
"Due to a limitation in how Broadcom switches have been designed, external "
"Broadcom switches connected to a SF2 require the use of the DSA user MDIO "
"bus in order to properly configure them. By default, the SF2 pseudo-PHY "
"address, and an external switch pseudo-PHY address will both be snooping for "
"incoming MDIO transactions, since they are at the same address (30), "
"resulting in some kind of \"double\" programming. Using DSA, and setting "
"``ds->phys_mii_mask`` accordingly, we selectively divert reads and writes "
"towards external Broadcom switches pseudo-PHY addresses. Newer revisions of "
"the SF2 hardware have introduced a configurable pseudo-PHY address which "
"circumvents the initial design limitation."
msgstr ""

#: ../../../networking/dsa/bcm_sf2.rst:80
msgid "Multimedia over CoAxial (MoCA) interfaces"
msgstr ""

#: ../../../networking/dsa/bcm_sf2.rst:82
msgid ""
"MoCA interfaces are fairly specific and require the use of a firmware blob "
"which gets loaded onto the MoCA processor(s) for packet processing. The "
"switch hardware contains logic which will assert/de-assert link states "
"accordingly for the MoCA interface whenever the MoCA coaxial cable gets "
"disconnected or the firmware gets reloaded. The SF2 driver relies on such "
"events to properly set its MoCA interface carrier state and properly report "
"this to the networking stack."
msgstr ""

#: ../../../networking/dsa/bcm_sf2.rst:89
msgid ""
"The MoCA interfaces are supported using the PHY library's fixed PHY/emulated "
"PHY device and the switch driver registers a ``fixed_link_update`` callback "
"for such PHYs which reflects the link state obtained from the interrupt "
"handler."
msgstr ""

#: ../../../networking/dsa/bcm_sf2.rst:95
msgid "Power Management"
msgstr ""

#: ../../../networking/dsa/bcm_sf2.rst:97
msgid ""
"Whenever possible, the SF2 driver tries to minimize the overall switch power "
"consumption by applying a combination of:"
msgstr ""

#: ../../../networking/dsa/bcm_sf2.rst:100
msgid "turning off internal buffers/memories"
msgstr ""

#: ../../../networking/dsa/bcm_sf2.rst:101
msgid "disabling packet processing logic"
msgstr ""

#: ../../../networking/dsa/bcm_sf2.rst:102
msgid "putting integrated PHYs in IDDQ/low-power"
msgstr ""

#: ../../../networking/dsa/bcm_sf2.rst:103
msgid "reducing the switch core clock based on the active port count"
msgstr ""

#: ../../../networking/dsa/bcm_sf2.rst:104
msgid "enabling and advertising EEE"
msgstr ""

#: ../../../networking/dsa/bcm_sf2.rst:105
msgid "turning off RGMII data processing logic when the link goes down"
msgstr ""

#: ../../../networking/dsa/bcm_sf2.rst:108
msgid "Wake-on-LAN"
msgstr ""

#: ../../../networking/dsa/bcm_sf2.rst:110
msgid ""
"Wake-on-LAN is currently implemented by utilizing the host processor "
"Ethernet MAC controller wake-on logic. Whenever Wake-on-LAN is requested, an "
"intersection between the user request and the supported host Ethernet "
"interface WoL capabilities is done and the intersection result gets "
"configured. During system-wide suspend/resume, only ports not participating "
"in Wake-on-LAN are disabled."
msgstr ""
