# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-30 08:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../spi/butterfly.rst:3
msgid "spi_butterfly - parport-to-butterfly adapter driver"
msgstr ""

#: ../../../spi/butterfly.rst:5
msgid ""
"This is a hardware and software project that includes building and using a "
"parallel port adapter cable, together with an \"AVR Butterfly\" to run "
"firmware for user interfacing and/or sensors.  A Butterfly is a $US20 "
"battery powered card with an AVR microcontroller and lots of goodies: "
"sensors, LCD, flash, toggle stick, and more.  You can use AVR-GCC to develop "
"firmware for this, and flash it using this adapter cable."
msgstr ""

#: ../../../spi/butterfly.rst:12
msgid ""
"You can make this adapter from an old printer cable and solder things "
"directly to the Butterfly.  Or (if you have the parts and skills) you can "
"come up with something fancier, providing circuit protection to the "
"Butterfly and the printer port, or with a better power supply than two "
"signal pins from the printer port.  Or for that matter, you can use similar "
"cables to talk to many AVR boards, even a breadboard."
msgstr ""

#: ../../../spi/butterfly.rst:19
msgid ""
"This is more powerful than \"ISP programming\" cables since it lets kernel "
"SPI protocol drivers interact with the AVR, and could even let the AVR issue "
"interrupts to them.  Later, your protocol driver should work easily with a "
"\"real SPI controller\", instead of this bitbanger."
msgstr ""

#: ../../../spi/butterfly.rst:25
msgid ""
"The first cable connections will hook Linux up to one SPI bus, with the AVR "
"and a DataFlash chip; and to the AVR reset line.  This is all you need to "
"reflash the firmware, and the pins are the standard Atmel \"ISP\" connector "
"pins (used also on non-Butterfly AVR boards).  On the parport side this is "
"like \"sp12\" programming cables."
msgstr ""

#: ../../../spi/butterfly.rst:32 ../../../spi/butterfly.rst:48
#: ../../../spi/butterfly.rst:65
msgid "Signal"
msgstr ""

#: ../../../spi/butterfly.rst:32 ../../../spi/butterfly.rst:48
#: ../../../spi/butterfly.rst:65
msgid "Butterfly"
msgstr ""

#: ../../../spi/butterfly.rst:32 ../../../spi/butterfly.rst:48
#: ../../../spi/butterfly.rst:65
msgid "Parport (DB-25)"
msgstr ""

#: ../../../spi/butterfly.rst:34 ../../../spi/butterfly.rst:67
msgid "SCK"
msgstr ""

#: ../../../spi/butterfly.rst:34
msgid "J403.PB1/SCK"
msgstr ""

#: ../../../spi/butterfly.rst:34
msgid "pin 2/D0"
msgstr ""

#: ../../../spi/butterfly.rst:35
msgid "RESET"
msgstr ""

#: ../../../spi/butterfly.rst:35
msgid "J403.nRST"
msgstr ""

#: ../../../spi/butterfly.rst:35
msgid "pin 3/D1"
msgstr ""

#: ../../../spi/butterfly.rst:36 ../../../spi/butterfly.rst:50
msgid "VCC"
msgstr ""

#: ../../../spi/butterfly.rst:36
msgid "J403.VCC_EXT"
msgstr ""

#: ../../../spi/butterfly.rst:36
msgid "pin 8/D6"
msgstr ""

#: ../../../spi/butterfly.rst:37 ../../../spi/butterfly.rst:68
msgid "MOSI"
msgstr ""

#: ../../../spi/butterfly.rst:37
msgid "J403.PB2/MOSI"
msgstr ""

#: ../../../spi/butterfly.rst:37
msgid "pin 9/D7"
msgstr ""

#: ../../../spi/butterfly.rst:38 ../../../spi/butterfly.rst:69
msgid "MISO"
msgstr ""

#: ../../../spi/butterfly.rst:38
msgid "J403.PB3/MISO"
msgstr ""

#: ../../../spi/butterfly.rst:38
msgid "pin 11/S7,nBUSY"
msgstr ""

#: ../../../spi/butterfly.rst:39 ../../../spi/butterfly.rst:52
#: ../../../spi/butterfly.rst:70 ../../../spi/butterfly.rst:73
msgid "GND"
msgstr ""

#: ../../../spi/butterfly.rst:39 ../../../spi/butterfly.rst:70
msgid "J403.GND"
msgstr ""

#: ../../../spi/butterfly.rst:39
msgid "pin 23/GND"
msgstr ""

#: ../../../spi/butterfly.rst:42
msgid ""
"Then to let Linux master that bus to talk to the DataFlash chip, you must "
"(a) flash new firmware that disables SPI (set PRR.2, and disable pullups by "
"clearing PORTB.[0-3]); (b) configure the mtd_dataflash driver; and (c) cable "
"in the chipselect."
msgstr ""

#: ../../../spi/butterfly.rst:50
msgid "J400.VCC_EXT"
msgstr ""

#: ../../../spi/butterfly.rst:50
msgid "pin 7/D5"
msgstr ""

#: ../../../spi/butterfly.rst:51
msgid "SELECT"
msgstr ""

#: ../../../spi/butterfly.rst:51
msgid "J400.PB0/nSS"
msgstr ""

#: ../../../spi/butterfly.rst:51
msgid "pin 17/C3,nSELECT"
msgstr ""

#: ../../../spi/butterfly.rst:52
msgid "J400.GND"
msgstr ""

#: ../../../spi/butterfly.rst:52
msgid "pin 24/GND"
msgstr ""

#: ../../../spi/butterfly.rst:55
msgid ""
"Or you could flash firmware making the AVR into an SPI slave (keeping the "
"DataFlash in reset) and tweak the spi_butterfly driver to make it bind to "
"the driver for your custom SPI-based protocol."
msgstr ""

#: ../../../spi/butterfly.rst:59
msgid ""
"The \"USI\" controller, using J405, can also be used for a second SPI bus. "
"That would let you talk to the AVR using custom SPI-with-USI firmware, while "
"letting either Linux or the AVR use the DataFlash.  There are plenty of "
"spare parport pins to wire this one up, such as:"
msgstr ""

#: ../../../spi/butterfly.rst:67
msgid "J403.PE4/USCK"
msgstr ""

#: ../../../spi/butterfly.rst:67
msgid "pin 5/D3"
msgstr ""

#: ../../../spi/butterfly.rst:68
msgid "J403.PE5/DI"
msgstr ""

#: ../../../spi/butterfly.rst:68
msgid "pin 6/D4"
msgstr ""

#: ../../../spi/butterfly.rst:69
msgid "J403.PE6/DO"
msgstr ""

#: ../../../spi/butterfly.rst:69
msgid "pin 12/S5,nPAPEROUT"
msgstr ""

#: ../../../spi/butterfly.rst:70
msgid "pin 22/GND"
msgstr ""

#: ../../../spi/butterfly.rst:72
msgid "IRQ"
msgstr ""

#: ../../../spi/butterfly.rst:72
msgid "J402.PF4"
msgstr ""

#: ../../../spi/butterfly.rst:72
msgid "pin 10/S6,ACK"
msgstr ""

#: ../../../spi/butterfly.rst:73
msgid "J402.GND(P2)"
msgstr ""

#: ../../../spi/butterfly.rst:73
msgid "pin 25/GND"
msgstr ""
