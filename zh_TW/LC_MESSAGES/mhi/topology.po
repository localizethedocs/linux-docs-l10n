# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../mhi/topology.rst:5
msgid "MHI Topology"
msgstr ""

#: ../../../mhi/topology.rst:7
msgid ""
"This document provides information about the MHI topology modeling and "
"representation in the kernel."
msgstr ""

#: ../../../mhi/topology.rst:11
msgid "MHI Controller"
msgstr ""

#: ../../../mhi/topology.rst:13
msgid ""
"MHI controller driver manages the interaction with the MHI client devices "
"such as the external modems and WiFi chipsets. It is also the MHI bus master "
"which is in charge of managing the physical link between the host and "
"device. It is however not involved in the actual data transfer as the data "
"transfer is taken care by the physical bus such as PCIe. Each controller "
"driver exposes channels and events based on the client device type."
msgstr ""

#: ../../../mhi/topology.rst:20
msgid "Below are the roles of the MHI controller driver:"
msgstr ""

#: ../../../mhi/topology.rst:22
msgid "Turns on the physical bus and establishes the link to the device"
msgstr ""

#: ../../../mhi/topology.rst:23
msgid "Configures IRQs, IOMMU, and IOMEM"
msgstr ""

#: ../../../mhi/topology.rst:24
msgid ""
"Allocates struct mhi_controller and registers with the MHI bus framework "
"with channel and event configurations using mhi_register_controller."
msgstr ""

#: ../../../mhi/topology.rst:26
msgid "Initiates power on and shutdown sequence"
msgstr ""

#: ../../../mhi/topology.rst:27
msgid "Initiates suspend and resume power management operations of the device."
msgstr ""

#: ../../../mhi/topology.rst:30
msgid "MHI Device"
msgstr ""

#: ../../../mhi/topology.rst:32
msgid ""
"MHI device is the logical device which binds to a maximum of two MHI "
"channels for bi-directional communication. Once MHI is in powered on state, "
"the MHI core will create MHI devices based on the channel configuration "
"exposed by the controller. There can be a single MHI device for each channel "
"or for a couple of channels."
msgstr ""

#: ../../../mhi/topology.rst:38
msgid "Each supported device is enumerated in::"
msgstr ""

#: ../../../mhi/topology.rst:43
msgid "MHI Driver"
msgstr ""

#: ../../../mhi/topology.rst:45
msgid ""
"MHI driver is the client driver which binds to one or more MHI devices. The "
"MHI driver sends and receives the upper-layer protocol packets like IP "
"packets, modem control messages, and diagnostics messages over MHI. The MHI "
"core will bind the MHI devices to the MHI driver."
msgstr ""

#: ../../../mhi/topology.rst:50
msgid "Each supported driver is enumerated in::"
msgstr ""

#: ../../../mhi/topology.rst:54
msgid "Below are the roles of the MHI driver:"
msgstr ""

#: ../../../mhi/topology.rst:56
msgid ""
"Registers the driver with the MHI bus framework using mhi_driver_register."
msgstr ""

#: ../../../mhi/topology.rst:57
msgid "Prepares the device for transfer by calling mhi_prepare_for_transfer."
msgstr ""

#: ../../../mhi/topology.rst:58
msgid "Initiates data transfer by calling mhi_queue_transfer."
msgstr ""

#: ../../../mhi/topology.rst:59
msgid ""
"Once the data transfer is finished, calls mhi_unprepare_from_transfer to end "
"data transfer."
msgstr ""
