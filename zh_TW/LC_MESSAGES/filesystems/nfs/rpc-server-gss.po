# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../filesystems/nfs/rpc-server-gss.rst:3
msgid "rpcsec_gss support for kernel RPC servers"
msgstr ""

#: ../../../filesystems/nfs/rpc-server-gss.rst:5
msgid ""
"This document gives references to the standards and protocols used to "
"implement RPCGSS authentication in kernel RPC servers such as the NFS server "
"and the NFS client's NFSv4.0 callback server.  (But note that NFSv4.1 and "
"higher don't require the client to act as a server for the purposes of "
"authentication.)"
msgstr ""

#: ../../../filesystems/nfs/rpc-server-gss.rst:11
msgid "RPCGSS is specified in a few IETF documents:"
msgstr ""

#: ../../../filesystems/nfs/rpc-server-gss.rst:13
msgid "RFC2203 v1: https://tools.ietf.org/rfc/rfc2203.txt"
msgstr ""

#: ../../../filesystems/nfs/rpc-server-gss.rst:14
msgid "RFC5403 v2: https://tools.ietf.org/rfc/rfc5403.txt"
msgstr ""

#: ../../../filesystems/nfs/rpc-server-gss.rst:16
msgid "There is a third version that we don't currently implement:"
msgstr ""

#: ../../../filesystems/nfs/rpc-server-gss.rst:18
msgid "RFC7861 v3: https://tools.ietf.org/rfc/rfc7861.txt"
msgstr ""

#: ../../../filesystems/nfs/rpc-server-gss.rst:21
msgid "Background"
msgstr ""

#: ../../../filesystems/nfs/rpc-server-gss.rst:23
msgid ""
"The RPCGSS Authentication method describes a way to perform GSSAPI "
"Authentication for NFS.  Although GSSAPI is itself completely mechanism "
"agnostic, in many cases only the KRB5 mechanism is supported by NFS "
"implementations."
msgstr ""

#: ../../../filesystems/nfs/rpc-server-gss.rst:28
msgid ""
"The Linux kernel, at the moment, supports only the KRB5 mechanism, and "
"depends on GSSAPI extensions that are KRB5 specific."
msgstr ""

#: ../../../filesystems/nfs/rpc-server-gss.rst:31
msgid ""
"GSSAPI is a complex library, and implementing it completely in kernel is "
"unwarranted. However GSSAPI operations are fundamentally separable in 2 "
"parts:"
msgstr ""

#: ../../../filesystems/nfs/rpc-server-gss.rst:35
msgid "initial context establishment"
msgstr ""

#: ../../../filesystems/nfs/rpc-server-gss.rst:36
msgid ""
"integrity/privacy protection (signing and encrypting of individual packets)"
msgstr ""

#: ../../../filesystems/nfs/rpc-server-gss.rst:39
msgid ""
"The former is more complex and policy-independent, but less performance-"
"sensitive.  The latter is simpler and needs to be very fast."
msgstr ""

#: ../../../filesystems/nfs/rpc-server-gss.rst:42
msgid ""
"Therefore, we perform per-packet integrity and privacy protection in the "
"kernel, but leave the initial context establishment to userspace.  We need "
"upcalls to request userspace to perform context establishment."
msgstr ""

#: ../../../filesystems/nfs/rpc-server-gss.rst:47
msgid "NFS Server Legacy Upcall Mechanism"
msgstr ""

#: ../../../filesystems/nfs/rpc-server-gss.rst:49
msgid ""
"The classic upcall mechanism uses a custom text based upcall mechanism to "
"talk to a custom daemon called rpc.svcgssd that is provide by the nfs-utils "
"package."
msgstr ""

#: ../../../filesystems/nfs/rpc-server-gss.rst:53
msgid "This upcall mechanism has 2 limitations:"
msgstr ""

#: ../../../filesystems/nfs/rpc-server-gss.rst:55
msgid "It can handle tokens that are no bigger than 2KiB"
msgstr ""

#: ../../../filesystems/nfs/rpc-server-gss.rst:57
msgid ""
"In some Kerberos deployment GSSAPI tokens can be quite big, up and beyond "
"64KiB in size due to various authorization extensions attacked to the "
"Kerberos tickets, that needs to be sent through the GSS layer in order to "
"perform context establishment."
msgstr ""

#: ../../../filesystems/nfs/rpc-server-gss.rst:62
msgid ""
"B) It does not properly handle creds where the user is member of more than a "
"few thousand groups (the current hard limit in the kernel is 65K groups) due "
"to limitation on the size of the buffer that can be send back to the kernel "
"(4KiB)."
msgstr ""

#: ../../../filesystems/nfs/rpc-server-gss.rst:68
msgid "NFS Server New RPC Upcall Mechanism"
msgstr ""

#: ../../../filesystems/nfs/rpc-server-gss.rst:70
msgid ""
"The newer upcall mechanism uses RPC over a unix socket to a daemon called "
"gss-proxy, implemented by a userspace program called Gssproxy."
msgstr ""

#: ../../../filesystems/nfs/rpc-server-gss.rst:73
msgid ""
"The gss_proxy RPC protocol is currently documented `here <https://"
"fedorahosted.org/gss-proxy/wiki/ProtocolDocumentation>`_."
msgstr ""

#: ../../../filesystems/nfs/rpc-server-gss.rst:76
msgid ""
"This upcall mechanism uses the kernel rpc client and connects to the "
"gssproxy userspace program over a regular unix socket. The gssproxy protocol "
"does not suffer from the size limitations of the legacy protocol."
msgstr ""

#: ../../../filesystems/nfs/rpc-server-gss.rst:81
msgid "Negotiating Upcall Mechanisms"
msgstr ""

#: ../../../filesystems/nfs/rpc-server-gss.rst:83
msgid ""
"To provide backward compatibility, the kernel defaults to using the legacy "
"mechanism.  To switch to the new mechanism, gss-proxy must bind to /var/run/"
"gssproxy.sock and then write \"1\" to /proc/net/rpc/use-gss-proxy.  If gss-"
"proxy dies, it must repeat both steps."
msgstr ""

#: ../../../filesystems/nfs/rpc-server-gss.rst:89
msgid ""
"Once the upcall mechanism is chosen, it cannot be changed.  To prevent "
"locking into the legacy mechanisms, the above steps must be performed before "
"starting nfsd.  Whoever starts nfsd can guarantee this by reading from /proc/"
"net/rpc/use-gss-proxy and checking that it contains a \"1\"--the read will "
"block until gss-proxy has done its write to the file."
msgstr ""
