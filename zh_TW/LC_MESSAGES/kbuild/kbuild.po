# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-30 08:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../kbuild/kbuild.rst:3
msgid "Kbuild"
msgstr ""

#: ../../../kbuild/kbuild.rst:7
msgid "Output files"
msgstr ""

#: ../../../kbuild/kbuild.rst:10
msgid "modules.order"
msgstr ""

#: ../../../kbuild/kbuild.rst:11
msgid ""
"This file records the order in which modules appear in Makefiles. This is "
"used by modprobe to deterministically resolve aliases that match multiple "
"modules."
msgstr ""

#: ../../../kbuild/kbuild.rst:16
msgid "modules.builtin"
msgstr ""

#: ../../../kbuild/kbuild.rst:17
msgid ""
"This file lists all modules that are built into the kernel. This is used by "
"modprobe to not fail when trying to load something builtin."
msgstr ""

#: ../../../kbuild/kbuild.rst:21
msgid "modules.builtin.modinfo"
msgstr ""

#: ../../../kbuild/kbuild.rst:22
msgid ""
"This file contains modinfo from all modules that are built into the kernel. "
"Unlike modinfo of a separate module, all fields are prefixed with module "
"name."
msgstr ""

#: ../../../kbuild/kbuild.rst:26
msgid "modules.builtin.ranges"
msgstr ""

#: ../../../kbuild/kbuild.rst:27
msgid ""
"This file contains address offset ranges (per ELF section) for all modules "
"that are built into the kernel. Together with System.map, it can be used to "
"associate module names with symbols."
msgstr ""

#: ../../../kbuild/kbuild.rst:32
msgid "Environment variables"
msgstr ""

#: ../../../kbuild/kbuild.rst:35
msgid "KCPPFLAGS"
msgstr ""

#: ../../../kbuild/kbuild.rst:36
msgid ""
"Additional options to pass when preprocessing. The preprocessing options "
"will be used in all cases where kbuild does preprocessing including building "
"C files and assembler files."
msgstr ""

#: ../../../kbuild/kbuild.rst:41
msgid "KAFLAGS"
msgstr ""

#: ../../../kbuild/kbuild.rst:42
msgid "Additional options to the assembler (for built-in and modules)."
msgstr ""

#: ../../../kbuild/kbuild.rst:45
msgid "AFLAGS_MODULE"
msgstr ""

#: ../../../kbuild/kbuild.rst:46
msgid "Additional assembler options for modules."
msgstr ""

#: ../../../kbuild/kbuild.rst:49
msgid "AFLAGS_KERNEL"
msgstr ""

#: ../../../kbuild/kbuild.rst:50
msgid "Additional assembler options for built-in."
msgstr ""

#: ../../../kbuild/kbuild.rst:53
msgid "KCFLAGS"
msgstr ""

#: ../../../kbuild/kbuild.rst:54
msgid "Additional options to the C compiler (for built-in and modules)."
msgstr ""

#: ../../../kbuild/kbuild.rst:57
msgid "KRUSTFLAGS"
msgstr ""

#: ../../../kbuild/kbuild.rst:58
msgid "Additional options to the Rust compiler (for built-in and modules)."
msgstr ""

#: ../../../kbuild/kbuild.rst:61
msgid "CFLAGS_KERNEL"
msgstr ""

#: ../../../kbuild/kbuild.rst:62
msgid ""
"Additional options for $(CC) when used to compile code that is compiled as "
"built-in."
msgstr ""

#: ../../../kbuild/kbuild.rst:66
msgid "CFLAGS_MODULE"
msgstr ""

#: ../../../kbuild/kbuild.rst:67
msgid "Additional module specific options to use for $(CC)."
msgstr ""

#: ../../../kbuild/kbuild.rst:70
msgid "RUSTFLAGS_KERNEL"
msgstr ""

#: ../../../kbuild/kbuild.rst:71
msgid ""
"Additional options for $(RUSTC) when used to compile code that is compiled "
"as built-in."
msgstr ""

#: ../../../kbuild/kbuild.rst:75
msgid "RUSTFLAGS_MODULE"
msgstr ""

#: ../../../kbuild/kbuild.rst:76
msgid "Additional module specific options to use for $(RUSTC)."
msgstr ""

#: ../../../kbuild/kbuild.rst:79
msgid "LDFLAGS_MODULE"
msgstr ""

#: ../../../kbuild/kbuild.rst:80
msgid "Additional options used for $(LD) when linking modules."
msgstr ""

#: ../../../kbuild/kbuild.rst:83
msgid "HOSTCFLAGS"
msgstr ""

#: ../../../kbuild/kbuild.rst:84
msgid "Additional flags to be passed to $(HOSTCC) when building host programs."
msgstr ""

#: ../../../kbuild/kbuild.rst:87
msgid "HOSTCXXFLAGS"
msgstr ""

#: ../../../kbuild/kbuild.rst:88
msgid ""
"Additional flags to be passed to $(HOSTCXX) when building host programs."
msgstr ""

#: ../../../kbuild/kbuild.rst:91
msgid "HOSTRUSTFLAGS"
msgstr ""

#: ../../../kbuild/kbuild.rst:92
msgid ""
"Additional flags to be passed to $(HOSTRUSTC) when building host programs."
msgstr ""

#: ../../../kbuild/kbuild.rst:95
msgid "PROCMACROLDFLAGS"
msgstr ""

#: ../../../kbuild/kbuild.rst:96
msgid ""
"Flags to be passed when linking Rust proc macros. Since proc macros are "
"loaded by rustc at build time, they must be linked in a way that is "
"compatible with the rustc toolchain being used."
msgstr ""

#: ../../../kbuild/kbuild.rst:100
msgid ""
"For instance, it can be useful when rustc uses a different C library than "
"the one the user wants to use for host programs."
msgstr ""

#: ../../../kbuild/kbuild.rst:103
msgid "If unset, it defaults to the flags passed when linking host programs."
msgstr ""

#: ../../../kbuild/kbuild.rst:106
msgid "HOSTLDFLAGS"
msgstr ""

#: ../../../kbuild/kbuild.rst:107
msgid "Additional flags to be passed when linking host programs."
msgstr ""

#: ../../../kbuild/kbuild.rst:110
msgid "HOSTLDLIBS"
msgstr ""

#: ../../../kbuild/kbuild.rst:111
msgid "Additional libraries to link against when building host programs."
msgstr ""

#: ../../../kbuild/kbuild.rst:116
msgid "USERCFLAGS"
msgstr ""

#: ../../../kbuild/kbuild.rst:117
msgid "Additional options used for $(CC) when compiling userprogs."
msgstr ""

#: ../../../kbuild/kbuild.rst:120
msgid "USERLDFLAGS"
msgstr ""

#: ../../../kbuild/kbuild.rst:121
msgid ""
"Additional options used for $(LD) when linking userprogs. userprogs are "
"linked with CC, so $(USERLDFLAGS) should include \"-Wl,\" prefix as "
"applicable."
msgstr ""

#: ../../../kbuild/kbuild.rst:125
msgid "KBUILD_KCONFIG"
msgstr ""

#: ../../../kbuild/kbuild.rst:126
msgid ""
"Set the top-level Kconfig file to the value of this environment variable.  "
"The default name is \"Kconfig\"."
msgstr ""

#: ../../../kbuild/kbuild.rst:130
msgid "KBUILD_VERBOSE"
msgstr ""

#: ../../../kbuild/kbuild.rst:131
msgid "Set the kbuild verbosity. Can be assigned same values as \"V=...\"."
msgstr ""

#: ../../../kbuild/kbuild.rst:133
msgid "See make help for the full list."
msgstr ""

#: ../../../kbuild/kbuild.rst:135
msgid "Setting \"V=...\" takes precedence over KBUILD_VERBOSE."
msgstr ""

#: ../../../kbuild/kbuild.rst:138
msgid "KBUILD_EXTMOD"
msgstr ""

#: ../../../kbuild/kbuild.rst:139
msgid ""
"Set the directory to look for the kernel source when building external "
"modules."
msgstr ""

#: ../../../kbuild/kbuild.rst:142
msgid "Setting \"M=...\" takes precedence over KBUILD_EXTMOD."
msgstr ""

#: ../../../kbuild/kbuild.rst:145
msgid "KBUILD_OUTPUT"
msgstr ""

#: ../../../kbuild/kbuild.rst:146
msgid "Specify the output directory when building the kernel."
msgstr ""

#: ../../../kbuild/kbuild.rst:148
msgid ""
"This variable can also be used to point to the kernel output directory when "
"building external modules against a pre-built kernel in a separate build "
"directory. Please note that this does NOT specify the output directory for "
"the external modules themselves. (Use KBUILD_EXTMOD_OUTPUT for that purpose.)"
msgstr ""

#: ../../../kbuild/kbuild.rst:153
msgid "The output directory can also be specified using \"O=...\"."
msgstr ""

#: ../../../kbuild/kbuild.rst:155
msgid "Setting \"O=...\" takes precedence over KBUILD_OUTPUT."
msgstr ""

#: ../../../kbuild/kbuild.rst:158
msgid "KBUILD_EXTMOD_OUTPUT"
msgstr ""

#: ../../../kbuild/kbuild.rst:159
msgid "Specify the output directory for external modules."
msgstr ""

#: ../../../kbuild/kbuild.rst:161
msgid "Setting \"MO=...\" takes precedence over KBUILD_EXTMOD_OUTPUT."
msgstr ""

#: ../../../kbuild/kbuild.rst:164
msgid "KBUILD_EXTRA_WARN"
msgstr ""

#: ../../../kbuild/kbuild.rst:165
msgid ""
"Specify the extra build checks. The same value can be assigned by passing "
"W=... from the command line."
msgstr ""

#: ../../../kbuild/kbuild.rst:168
msgid "See `make help` for the list of the supported values."
msgstr ""

#: ../../../kbuild/kbuild.rst:170
msgid "Setting \"W=...\" takes precedence over KBUILD_EXTRA_WARN."
msgstr ""

#: ../../../kbuild/kbuild.rst:173
msgid "KBUILD_DEBARCH"
msgstr ""

#: ../../../kbuild/kbuild.rst:174
msgid ""
"For the deb-pkg target, allows overriding the normal heuristics deployed by "
"deb-pkg. Normally deb-pkg attempts to guess the right architecture based on "
"the UTS_MACHINE variable, and on some architectures also the kernel config. "
"The value of KBUILD_DEBARCH is assumed (not checked) to be a valid Debian "
"architecture."
msgstr ""

#: ../../../kbuild/kbuild.rst:181
msgid "KDOCFLAGS"
msgstr ""

#: ../../../kbuild/kbuild.rst:182
msgid ""
"Specify extra (warning/error) flags for kernel-doc checks during the build, "
"see scripts/kernel-doc for which flags are supported. Note that this doesn't "
"(currently) apply to documentation builds."
msgstr ""

#: ../../../kbuild/kbuild.rst:187
msgid "ARCH"
msgstr ""

#: ../../../kbuild/kbuild.rst:188
msgid "Set ARCH to the architecture to be built."
msgstr ""

#: ../../../kbuild/kbuild.rst:190
msgid ""
"In most cases the name of the architecture is the same as the directory name "
"found in the arch/ directory."
msgstr ""

#: ../../../kbuild/kbuild.rst:193
msgid "But some architectures such as x86 and sparc have aliases."
msgstr ""

#: ../../../kbuild/kbuild.rst:195
msgid "x86: i386 for 32 bit, x86_64 for 64 bit"
msgstr ""

#: ../../../kbuild/kbuild.rst:196
msgid "parisc: parisc64 for 64 bit"
msgstr ""

#: ../../../kbuild/kbuild.rst:197
msgid "sparc: sparc32 for 32 bit, sparc64 for 64 bit"
msgstr ""

#: ../../../kbuild/kbuild.rst:200
msgid "CROSS_COMPILE"
msgstr ""

#: ../../../kbuild/kbuild.rst:201
msgid ""
"Specify an optional fixed part of the binutils filename. CROSS_COMPILE can "
"be a part of the filename or the full path."
msgstr ""

#: ../../../kbuild/kbuild.rst:204
msgid "CROSS_COMPILE is also used for ccache in some setups."
msgstr ""

#: ../../../kbuild/kbuild.rst:207
msgid "CF"
msgstr ""

#: ../../../kbuild/kbuild.rst:208
msgid "Additional options for sparse."
msgstr ""

#: ../../../kbuild/kbuild.rst:210
msgid "CF is often used on the command-line like this::"
msgstr ""

#: ../../../kbuild/kbuild.rst:215
msgid "INSTALL_PATH"
msgstr ""

#: ../../../kbuild/kbuild.rst:216
msgid ""
"INSTALL_PATH specifies where to place the updated kernel and system map "
"images. Default is /boot, but you can set it to other values."
msgstr ""

#: ../../../kbuild/kbuild.rst:220
msgid "INSTALLKERNEL"
msgstr ""

#: ../../../kbuild/kbuild.rst:221
msgid ""
"Install script called when using \"make install\". The default name is "
"\"installkernel\"."
msgstr ""

#: ../../../kbuild/kbuild.rst:224
msgid "The script will be called with the following arguments:"
msgstr ""

#: ../../../kbuild/kbuild.rst:226
msgid "$1 - kernel version"
msgstr ""

#: ../../../kbuild/kbuild.rst:227
msgid "$2 - kernel image file"
msgstr ""

#: ../../../kbuild/kbuild.rst:228
msgid "$3 - kernel map file"
msgstr ""

#: ../../../kbuild/kbuild.rst:229
msgid "$4 - default install path (use root directory if blank)"
msgstr ""

#: ../../../kbuild/kbuild.rst:231
msgid ""
"The implementation of \"make install\" is architecture specific and it may "
"differ from the above."
msgstr ""

#: ../../../kbuild/kbuild.rst:234
msgid ""
"INSTALLKERNEL is provided to enable the possibility to specify a custom "
"installer when cross compiling a kernel."
msgstr ""

#: ../../../kbuild/kbuild.rst:238
msgid "MODLIB"
msgstr ""

#: ../../../kbuild/kbuild.rst:239
msgid "Specify where to install modules. The default value is::"
msgstr ""

#: ../../../kbuild/kbuild.rst:244 ../../../kbuild/kbuild.rst:271
msgid "The value can be overridden in which case the default value is ignored."
msgstr ""

#: ../../../kbuild/kbuild.rst:247
msgid "INSTALL_MOD_PATH"
msgstr ""

#: ../../../kbuild/kbuild.rst:248
msgid ""
"INSTALL_MOD_PATH specifies a prefix to MODLIB for module directory "
"relocations required by build roots.  This is not defined in the makefile "
"but the argument can be passed to make if needed."
msgstr ""

#: ../../../kbuild/kbuild.rst:253
msgid "INSTALL_MOD_STRIP"
msgstr ""

#: ../../../kbuild/kbuild.rst:254
msgid ""
"INSTALL_MOD_STRIP, if defined, will cause modules to be stripped after they "
"are installed.  If INSTALL_MOD_STRIP is '1', then the default option --strip-"
"debug will be used.  Otherwise, INSTALL_MOD_STRIP value will be used as the "
"options to the strip command."
msgstr ""

#: ../../../kbuild/kbuild.rst:260
msgid "INSTALL_HDR_PATH"
msgstr ""

#: ../../../kbuild/kbuild.rst:261
msgid ""
"INSTALL_HDR_PATH specifies where to install user space headers when "
"executing \"make headers_*\"."
msgstr ""

#: ../../../kbuild/kbuild.rst:264
msgid "The default value is::"
msgstr ""

#: ../../../kbuild/kbuild.rst:268
msgid ""
"$(objtree) is the directory where output files are saved. The output "
"directory is often set using \"O=...\" on the commandline."
msgstr ""

#: ../../../kbuild/kbuild.rst:274
msgid "INSTALL_DTBS_PATH"
msgstr ""

#: ../../../kbuild/kbuild.rst:275
msgid ""
"INSTALL_DTBS_PATH specifies where to install device tree blobs for "
"relocations required by build roots.  This is not defined in the makefile "
"but the argument can be passed to make if needed."
msgstr ""

#: ../../../kbuild/kbuild.rst:280
msgid "KBUILD_ABS_SRCTREE"
msgstr ""

#: ../../../kbuild/kbuild.rst:281
msgid ""
"Kbuild uses a relative path to point to the tree when possible. For "
"instance, when building in the source tree, the source tree path is '.'"
msgstr ""

#: ../../../kbuild/kbuild.rst:284
msgid ""
"Setting this flag requests Kbuild to use absolute path to the source tree. "
"There are some useful cases to do so, like when generating tag files with "
"absolute path entries etc."
msgstr ""

#: ../../../kbuild/kbuild.rst:289
msgid "KBUILD_SIGN_PIN"
msgstr ""

#: ../../../kbuild/kbuild.rst:290
msgid ""
"This variable allows a passphrase or PIN to be passed to the sign-file "
"utility when signing kernel modules, if the private key requires such."
msgstr ""

#: ../../../kbuild/kbuild.rst:294
msgid "KBUILD_MODPOST_WARN"
msgstr ""

#: ../../../kbuild/kbuild.rst:295
msgid ""
"KBUILD_MODPOST_WARN can be set to avoid errors in case of undefined symbols "
"in the final module linking stage. It changes such errors into warnings."
msgstr ""

#: ../../../kbuild/kbuild.rst:300
msgid "KBUILD_MODPOST_NOFINAL"
msgstr ""

#: ../../../kbuild/kbuild.rst:301
msgid ""
"KBUILD_MODPOST_NOFINAL can be set to skip the final link of modules. This is "
"solely useful to speed up test compiles."
msgstr ""

#: ../../../kbuild/kbuild.rst:305
msgid "KBUILD_EXTRA_SYMBOLS"
msgstr ""

#: ../../../kbuild/kbuild.rst:306
msgid ""
"For modules that use symbols from other modules. See more details in modules."
"rst."
msgstr ""

#: ../../../kbuild/kbuild.rst:310
msgid "ALLSOURCE_ARCHS"
msgstr ""

#: ../../../kbuild/kbuild.rst:311
msgid ""
"For tags/TAGS/cscope targets, you can specify more than one arch to be "
"included in the databases, separated by blank space. E.g.::"
msgstr ""

#: ../../../kbuild/kbuild.rst:316
msgid "To get all available archs you can also specify all. E.g.::"
msgstr ""

#: ../../../kbuild/kbuild.rst:321
msgid "IGNORE_DIRS"
msgstr ""

#: ../../../kbuild/kbuild.rst:322
msgid ""
"For tags/TAGS/cscope targets, you can choose which directories won't be "
"included in the databases, separated by blank space. E.g.::"
msgstr ""

#: ../../../kbuild/kbuild.rst:328
msgid "KBUILD_BUILD_TIMESTAMP"
msgstr ""

#: ../../../kbuild/kbuild.rst:329
msgid ""
"Setting this to a date string overrides the timestamp used in the "
"UTS_VERSION definition (uname -v in the running kernel). The value has to be "
"a string that can be passed to date -d. The default value is the output of "
"the date command at one point during build."
msgstr ""

#: ../../../kbuild/kbuild.rst:335
msgid "KBUILD_BUILD_USER, KBUILD_BUILD_HOST"
msgstr ""

#: ../../../kbuild/kbuild.rst:336
msgid ""
"These two variables allow to override the user@host string displayed during "
"boot and in /proc/version. The default value is the output of the commands "
"whoami and host, respectively."
msgstr ""

#: ../../../kbuild/kbuild.rst:341
msgid "LLVM"
msgstr ""

#: ../../../kbuild/kbuild.rst:342
msgid ""
"If this variable is set to 1, Kbuild will use Clang and LLVM utilities "
"instead of GCC and GNU binutils to build the kernel."
msgstr ""
