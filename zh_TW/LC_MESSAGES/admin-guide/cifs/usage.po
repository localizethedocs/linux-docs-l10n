# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../admin-guide/cifs/usage.rst:3
msgid "Usage"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:5
msgid ""
"This module supports the SMB3 family of advanced network protocols (as well "
"as older dialects, originally called \"CIFS\" or SMB1)."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:8
msgid ""
"The CIFS VFS module for Linux supports many advanced network filesystem "
"features such as hierarchical DFS like namespace, hardlinks, locking and "
"more. It was designed to comply with the SNIA CIFS Technical Reference "
"(which supersedes the 1992 X/Open SMB Standard) as well as to perform best "
"practice practical interoperability with Windows 2000, Windows XP, Samba and "
"equivalent servers.  This code was developed in participation with the "
"Protocol Freedom Information Foundation.  CIFS and now SMB3 has now become a "
"defacto standard for interoperating between Macs and Windows and major NAS "
"appliances."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:17
msgid ""
"Please see MS-SMB2 (for detailed SMB2/SMB3/SMB3.1.1 protocol specification) "
"or https://samba.org/samba/PFIF/ for more details."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:23
msgid "For questions or bug reports please contact:"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:25
msgid "smfrench@gmail.com"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:27
msgid ""
"See the project page at: https://wiki.samba.org/index.php/LinuxCIFS_utils"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:30
msgid "Build instructions"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:32
msgid "For Linux:"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:34
msgid ""
"Download the kernel (e.g. from https://www.kernel.org) and change directory "
"into the top of the kernel directory tree (e.g. /usr/src/linux-2.5.73)"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:37
msgid "make menuconfig (or make xconfig)"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:38
msgid "select cifs from within the network filesystem choices"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:39
msgid "save and exit"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:40
msgid "make"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:44
msgid "Installation instructions"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:46
msgid ""
"If you have built the CIFS vfs as module (successfully) simply type ``make "
"modules_install`` (or if you prefer, manually copy the file to the modules "
"directory e.g. /lib/modules/6.3.0-060300-generic/kernel/fs/smb/client/cifs."
"ko)."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:50
msgid ""
"If you have built the CIFS vfs into the kernel itself, follow the "
"instructions for your distribution on how to install a new kernel (usually "
"you would simply type ``make install``)."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:54
msgid ""
"If you do not have the utility mount.cifs (in the Samba 4.x source tree and "
"on the CIFS VFS web site) copy it to the same directory in which mount "
"helpers reside (usually /sbin).  Although the helper software is not "
"required, mount.cifs is recommended.  Most distros include a ``cifs-utils`` "
"package that includes this utility so it is recommended to install this."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:60
msgid ""
"Note that running the Winbind pam/nss module (logon service) on all of your "
"Linux clients is useful in mapping Uids and Gids consistently across the "
"domain to the proper network user.  The mount.cifs mount helper can be found "
"at cifs-utils.git on git.samba.org"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:65
msgid ""
"If cifs is built as a module, then the size and number of network buffers "
"and maximum number of simultaneous requests to one server can be configured. "
"Changing these from their defaults is not recommended. By executing modinfo::"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:71
msgid ""
"on kernel/fs/smb/client/cifs.ko the list of configuration changes that can "
"be made at module initialization time (by running insmod cifs.ko) can be "
"seen."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:75
msgid "Recommendations"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:77
msgid ""
"To improve security the SMB2.1 dialect or later (usually will get SMB3.1.1) "
"is now the new default. To use old dialects (e.g. to mount Windows XP) use "
"\"vers=1.0\" on mount (or vers=2.0 for Windows Vista).  Note that the CIFS "
"(vers=1.0) is much older and less secure than the default dialect SMB3 which "
"includes many advanced security features such as downgrade attack detection "
"and encrypted shares and stronger signing and authentication algorithms. "
"There are additional mount options that may be helpful for SMB3 to get "
"improved POSIX behavior (NB: can use vers=3 to force SMB3 or later, never "
"2.1):"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:86
msgid ""
"``mfsymlinks`` and either ``cifsacl`` or ``modefromsid`` (usually with "
"``idsfromsid``)"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:89
msgid "Allowing User Mounts"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:91
msgid ""
"To permit users to mount and unmount over directories they own is possible "
"with the cifs vfs.  A way to enable such mounting is to mark the mount.cifs "
"utility as suid (e.g. ``chmod +s /sbin/mount.cifs``). To enable users to "
"umount shares they mount requires"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:96
msgid "mount.cifs version 1.4 or later"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:97
msgid ""
"an entry for the share in /etc/fstab indicating that a user may unmount it e."
"g.::"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:102
msgid ""
"Note that when the mount.cifs utility is run suid (allowing user mounts), in "
"order to reduce risks, the ``nosuid`` mount flag is passed in on mount to "
"disallow execution of an suid program mounted on the remote target. When "
"mount is executed as root, nosuid is not passed in by default, and execution "
"of suid programs on the remote target would be enabled by default. This can "
"be changed, as with nfs and other filesystems, by simply specifying "
"``nosuid`` among the mount options. For user mounts though to be able to "
"pass the suid flag to mount requires rebuilding mount.cifs with the "
"following flag: CIFS_ALLOW_USR_SUID"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:112
msgid ""
"There is a corresponding manual page for cifs mounting in the Samba 3.0 and "
"later source tree in docs/manpages/mount.cifs.8"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:116
msgid "Allowing User Unmounts"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:118
msgid ""
"To permit users to unmount directories that they have user mounted (see "
"above), the utility umount.cifs may be used.  It may be invoked directly, or "
"if umount.cifs is placed in /sbin, umount can invoke the cifs umount helper "
"(at least for most versions of the umount utility) for umount of cifs "
"mounts, unless umount is invoked with -i (which will avoid invoking a umount "
"helper). As with mount.cifs, to enable user unmounts umount.cifs must be "
"marked as suid (e.g. ``chmod +s /sbin/umount.cifs``) or equivalent (some "
"distributions allow adding entries to a file to the /etc/permissions file to "
"achieve the equivalent suid effect).  For this utility to succeed the target "
"path must be a cifs mount, and the uid of the current user must match the "
"uid of the user who mounted the resource."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:130
msgid ""
"Also note that the customary way of allowing user mounts and unmounts is "
"(instead of using mount.cifs and unmount.cifs as suid) to add a line to the "
"file /etc/fstab for each //server/share you wish to mount, but this can "
"become unwieldy when potential mount targets include many or  unpredictable "
"UNC names."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:137
msgid "Samba Considerations"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:139
msgid ""
"Most current servers support SMB2.1 and SMB3 which are more secure, but "
"there are useful protocol extensions for the older less secure CIFS dialect, "
"so to get the maximum benefit if mounting using the older dialect (CIFS/"
"SMB1), we recommend using a server that supports the SNIA CIFS Unix "
"Extensions standard (e.g. almost any  version of Samba ie version 2.2.5 or "
"later) but the CIFS vfs works fine with a wide variety of CIFS servers. Note "
"that uid, gid and file permissions will display default values if you do not "
"have a server that supports the Unix extensions for CIFS (such as Samba "
"2.2.5 or later).  To enable the Unix CIFS Extensions in the Samba server, "
"add the line::"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:152
msgid ""
"to your smb.conf file on the server.  Note that the following smb.conf "
"settings are also useful (on the Samba server) when the majority of clients "
"are Unix or Linux::"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:160
msgid ""
"Note that server ea support is required for supporting xattrs from the Linux "
"cifs client, and that EA support is present in later versions of Samba (e.g. "
"3.0.6 and later (also EA support works in all versions of Windows, at least "
"to shares on NTFS filesystems).  Extended Attribute (xattr) support is an "
"optional feature of most Linux filesystems which may require enabling via "
"make menuconfig. Client support for extended attributes (user xattr) can be "
"disabled on a per-mount basis by specifying ``nouser_xattr`` on mount."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:168
msgid ""
"The CIFS client can get and set POSIX ACLs (getfacl, setfacl) to Samba "
"servers version 3.10 and later.  Setting POSIX ACLs requires enabling both "
"XATTR and then POSIX support in the CIFS configuration options when building "
"the cifs module.  POSIX ACL support can be disabled on a per mount basic by "
"specifying ``noacl`` on mount."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:174
msgid ""
"Some administrators may want to change Samba's smb.conf ``map archive`` and "
"``create mask`` parameters from the default.  Unless the create mask is "
"changed newly created files can end up with an unnecessarily restrictive "
"default mode, which may not be what you want, although if the CIFS Unix "
"extensions are enabled on the server and client, subsequent setattr calls (e."
"g. chmod) can fix the mode.  Note that creating special devices (mknod) "
"remotely may require specifying a mkdev function to Samba if you are not "
"using Samba 3.0.6 or later.  For more information on these see the manual "
"pages (``man smb.conf``) on the Samba server system.  Note that the cifs "
"vfs, unlike the smbfs vfs, does not read the smb.conf on the client system "
"(the few optional settings are passed in on mount via -o parameters "
"instead). Note that Samba 2.2.7 or later includes a fix that allows the CIFS "
"VFS to delete open files (required for strict POSIX compliance).  Windows "
"Servers already supported this feature. Samba server does not allow symlinks "
"that refer to files outside of the share, so in Samba versions prior to "
"3.0.6, most symlinks to files with absolute paths (ie beginning with slash) "
"such as::"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:193
msgid ""
"would be forbidden. Samba 3.0.6 server or later includes the ability to "
"create such symlinks safely by converting unsafe symlinks (ie symlinks to "
"server files that are outside of the share) to a samba specific format on "
"the server that is ignored by local server applications and non-cifs clients "
"and that will not be traversed by the Samba server).  This is opaque to the "
"Linux client application using the cifs vfs. Absolute symlinks will work to "
"Samba 3.0.5 or later, but only for remote clients using the CIFS Unix "
"extensions, and will be invisible to Windows clients and typically will not "
"affect local applications running on the same server as Samba."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:204
msgid "Use instructions"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:206
msgid ""
"Once the CIFS VFS support is built into the kernel or installed as a module "
"(cifs.ko), you can use mount syntax like the following to access Samba or "
"Mac or Windows servers::"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:212
msgid ""
"Before -o the option -v may be specified to make the mount.cifs mount helper "
"display the mount steps more verbosely. After -o the following commonly used "
"cifs vfs specific options are supported::"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:221
msgid ""
"Other cifs mount options are described below.  Use of TCP names (in addition "
"to ip addresses) is available if the mount helper (mount.cifs) is installed. "
"If you do not trust the server to which are mounted, or if you do not have "
"cifs signing enabled (and the physical network is insecure), consider use of "
"the standard mount options ``noexec`` and ``nosuid`` to reduce the risk of "
"running an altered binary on your local system (downloaded from a hostile "
"server or altered by a hostile router)."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:229
msgid ""
"Although mounting using format corresponding to the CIFS URL specification "
"is not possible in mount.cifs yet, it is possible to use an alternate format "
"for the server and sharename (which is somewhat similar to NFS style mount "
"syntax) instead of the more widely used UNC format (i.e. \\\\server\\share)::"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:236
msgid ""
"When using the mount helper mount.cifs, passwords may be specified via "
"alternate mechanisms, instead of specifying it after -o using the normal "
"``pass=`` syntax on the command line: 1) By including it in a credential "
"file. Specify credentials=filename as one of the mount options. Credential "
"files contain two lines::"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:245
msgid ""
"By specifying the password in the PASSWD environment variable (similarly the "
"user name can be taken from the USER environment variable)."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:247
msgid "By specifying the password in a file by name via PASSWD_FILE"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:248
msgid "By specifying the password in a file by file descriptor via PASSWD_FD"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:250
msgid "If no password is provided, mount.cifs will prompt for password entry"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:253
msgid "Restrictions"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:255
msgid ""
"Servers must support either \"pure-TCP\" (port 445 TCP/IP CIFS connections) "
"or RFC 1001/1002 support for \"Netbios-Over-TCP/IP.\" This is not likely to "
"be a problem as most servers support this."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:259
msgid ""
"Valid filenames differ between Windows and Linux.  Windows typically "
"restricts filenames which contain certain reserved characters (e.g.the "
"character : which is used to delimit the beginning of a stream name by "
"Windows), while Linux allows a slightly wider set of valid characters in "
"filenames. Windows servers can remap such characters when an explicit "
"mapping is specified in the Server's registry.  Samba starting with version "
"3.10 will allow such filenames (ie those which contain valid Linux "
"characters, which normally would be forbidden for Windows/CIFS semantics) as "
"long as the server is configured for Unix Extensions (and the client has not "
"disabled /proc/fs/cifs/LinuxExtensionsEnabled). In addition the mount option "
"``mapposix`` can be used on CIFS (vers=1.0) to force the mapping of illegal "
"Windows/NTFS/SMB characters to a remap range (this mount parameter is the "
"default for SMB3). This remap (``mapposix``) range is also compatible with "
"Mac (and \"Services for Mac\" on some older Windows). When POSIX Extensions "
"for SMB 3.1.1 are negotiated, remapping is automatically disabled."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:277
msgid "CIFS VFS Mount Options"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:278
msgid "A partial list of the supported mount options follows:"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:280
msgid "username"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:281
msgid "The user name to use when trying to establish the CIFS session."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:283
msgid "password"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:284
msgid ""
"The user password.  If the mount helper is installed, the user will be "
"prompted for password if not supplied."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:287
msgid "ip"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:288
msgid "The ip address of the target server"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:289
msgid "unc"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:290
msgid "The target server Universal Network Name (export) to mount."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:292
msgid "domain"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:293
msgid ""
"Set the SMB/CIFS workgroup name prepended to the username during CIFS "
"session establishment"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:295
msgid "forceuid"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:296
msgid ""
"Set the default uid for inodes to the uid passed in on mount. For mounts to "
"servers which do support the CIFS Unix extensions, such as a properly "
"configured Samba server, the server provides the uid, gid and mode so this "
"parameter should not be specified unless the server and clients uid and gid "
"numbering differ.  If the server and client are in the same domain (e.g. "
"running winbind or nss_ldap) and the server supports the Unix Extensions "
"then the uid and gid can be retrieved from the server (and uid and gid would "
"not have to be specified on the mount. For servers which do not support the "
"CIFS Unix extensions, the default uid (and gid) returned on lookup of "
"existing files will be the uid (gid) of the person who executed the mount "
"(root, except when mount.cifs is configured setuid for user mounts) unless "
"the ``uid=`` (gid) mount option is specified. Also note that permission "
"checks (authorization checks) on accesses to a file occur at the server, but "
"there are cases in which an administrator may want to restrict at the client "
"as well.  For those servers which do not report a uid/gid owner (such as "
"Windows), permissions can also be checked at the client, and a crude form of "
"client side permission checking can be enabled by specifying file_mode and "
"dir_mode on the client.  (default)"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:321
msgid "forcegid"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:322
msgid "(similar to above but for the groupid instead of uid) (default)"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:323
msgid "noforceuid"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:324
msgid ""
"Fill in file owner information (uid) by requesting it from the server if "
"possible. With this option, the value given in the uid= option (on mount) "
"will only be used if the server can not support returning uids on inodes."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:328
msgid "noforcegid"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:329
msgid "(similar to above but for the group owner, gid, instead of uid)"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:330
msgid "uid"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:331
msgid ""
"Set the default uid for inodes, and indicate to the cifs kernel driver which "
"local user mounted. If the server supports the unix extensions the default "
"uid is not used to fill in the owner fields of inodes (files) unless the "
"``forceuid`` parameter is specified."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:336
msgid "gid"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:337
msgid "Set the default gid for inodes (similar to above)."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:338
msgid "file_mode"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:339
msgid ""
"If CIFS Unix extensions are not supported by the server this overrides the "
"default mode for file inodes."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:341
msgid "fsc"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:342
msgid ""
"Enable local disk caching using FS-Cache (off by default). This option could "
"be useful to improve performance on a slow link, heavily loaded server and/"
"or network where reading from the disk is faster than reading from the "
"server (over the network). This could also impact scalability positively as "
"the number of calls to the server are reduced. However, local caching is not "
"suitable for all workloads for e.g. read-once type workloads. So, you need "
"to consider carefully your workload/scenario before using this option. "
"Currently, local disk caching is functional for CIFS files opened as read-"
"only."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:352
msgid "dir_mode"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:353
msgid ""
"If CIFS Unix extensions are not supported by the server this overrides the "
"default mode for directory inodes."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:355
msgid "port"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:356
msgid ""
"attempt to contact the server on this tcp port, before trying the usual "
"ports (port 445, then 139)."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:358
msgid "iocharset"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:359
msgid ""
"Codepage used to convert local path names to and from Unicode. Unicode is "
"used by default for network path names if the server supports it.  If "
"iocharset is not specified then the nls_default specified during the local "
"client kernel build will be used. If server does not support Unicode, this "
"parameter is unused."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:366
msgid "rsize"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:367
msgid ""
"default read size (usually 16K). The client currently can not use rsize "
"larger than CIFSMaxBufSize. CIFSMaxBufSize defaults to 16K and may be "
"changed (from 8K to the maximum kmalloc size allowed by your kernel) at "
"module install time for cifs.ko. Setting CIFSMaxBufSize to a very large "
"value will cause cifs to use more memory and may reduce performance in some "
"cases.  To use rsize greater than 127K (the original cifs protocol maximum) "
"also requires that the server support a new Unix Capability flag (for very "
"large read) which some newer servers (e.g. Samba 3.0.26 or later) do. rsize "
"can be set from a minimum of 2048 to a maximum of 130048 (127K or "
"CIFSMaxBufSize, whichever is smaller)"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:379
msgid "wsize"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:380
msgid ""
"default write size (default 57344) maximum wsize currently allowed by CIFS "
"is 57344 (fourteen 4096 byte pages)"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:383
msgid "actimeo=n"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:384
msgid ""
"attribute cache timeout in seconds (default 1 second). After this timeout, "
"the cifs client requests fresh attribute information from the server. This "
"option allows to tune the attribute cache timeout to suit the workload "
"needs. Shorter timeouts mean better the cache coherency, but increased "
"number of calls to the server. Longer timeouts mean reduced number of calls "
"to the server at the expense of less stricter cache coherency checks (i.e. "
"incorrect attribute cache for a short period of time)."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:393
msgid "rw"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:394
msgid ""
"mount the network share read-write (note that the server may still consider "
"the share read-only)"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:396
msgid "ro"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:397
msgid "mount network share read-only"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:398
msgid "version"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:399
msgid ""
"used to distinguish different versions of the mount helper utility (not "
"typically needed)"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:401
msgid "sep"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:402
msgid ""
"if first mount option (after the -o), overrides the comma as the separator "
"between the mount parameters. e.g.::"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:408
msgid "could be passed instead with period as the separator by::"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:412
msgid ""
"this might be useful when comma is contained within username or password or "
"domain. This option is less important when the cifs mount helper cifs.mount "
"(version 1.1 or later) is used."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:416
msgid "nosuid"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:417
msgid ""
"Do not allow remote executables with the suid bit program to be executed.  "
"This is only meaningful for mounts to servers such as Samba which support "
"the CIFS Unix Extensions. If you do not trust the servers in your network "
"(your mount targets) it is recommended that you specify this option for "
"greater security."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:423
msgid "exec"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:424
msgid "Permit execution of binaries on the mount."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:425
msgid "noexec"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:426
msgid "Do not permit execution of binaries on the mount."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:427
msgid "dev"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:428
msgid "Recognize block devices on the remote mount."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:429
msgid "nodev"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:430
msgid "Do not recognize devices on the remote mount."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:431
msgid "suid"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:432
msgid ""
"Allow remote files on this mountpoint with suid enabled to be executed "
"(default for mounts when executed as root, nosuid is default for user "
"mounts)."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:435
msgid "credentials"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:436
msgid ""
"Although ignored by the cifs kernel component, it is used by the mount "
"helper, mount.cifs. When mount.cifs is installed it opens and reads the "
"credential file specified in order to obtain the userid and password "
"arguments which are passed to the cifs vfs."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:441
msgid "guest"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:442
msgid ""
"Although ignored by the kernel component, the mount.cifs mount helper will "
"not prompt the user for a password if guest is specified on the mount "
"options.  If no password is specified a null password will be used."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:446
msgid "perm"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:447
msgid ""
"Client does permission checks (vfs_permission check of uid and gid of the "
"file against the mode and desired operation), Note that this is in addition "
"to the normal ACL check on the target machine done by the server software. "
"Client permission checking is enabled by default."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:452
msgid "noperm"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:453
msgid ""
"Client does not do permission checks.  This can expose files on this mount "
"to access by other users on the local client system. It is typically only "
"needed when the server supports the CIFS Unix Extensions but the UIDs/GIDs "
"on the client and server system do not match closely enough to allow access "
"by the user doing the mount, but it may be useful with non CIFS Unix "
"Extension mounts for cases in which the default mode is specified on the "
"mount but is not to be enforced on the client (e.g. perhaps when "
"MultiUserMount is enabled) Note that this does not affect the normal ACL "
"check on the target machine done by the server software (of the server ACL "
"against the user name provided at mount time)."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:465
msgid "serverino"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:466
msgid ""
"Use server's inode numbers instead of generating automatically incrementing "
"inode numbers on the client.  Although this will make it easier to spot "
"hardlinked files (as they will have the same inode numbers) and inode "
"numbers may be persistent, note that the server does not guarantee that the "
"inode numbers are unique if multiple server side mounts are exported under a "
"single share (since inode numbers on the servers might not be unique if "
"multiple filesystems are mounted under the same shared higher level "
"directory).  Note that some older (e.g. pre-Windows 2000) do not support "
"returning UniqueIDs or the CIFS Unix Extensions equivalent and for those "
"this mount option will have no effect.  Exporting cifs mounts under nfsd "
"requires this mount option on the cifs mount. This is now the default if "
"server supports the required network operation."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:481
msgid "noserverino"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:482
msgid ""
"Client generates inode numbers (rather than using the actual one from the "
"server). These inode numbers will vary after unmount or reboot which can "
"confuse some applications, but not all server filesystems support unique "
"inode numbers."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:487
msgid "setuids"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:488
msgid ""
"If the CIFS Unix extensions are negotiated with the server the client will "
"attempt to set the effective uid and gid of the local process on newly "
"created files, directories, and devices (create, mkdir, mknod).  If the CIFS "
"Unix Extensions are not negotiated, for newly created files and directories "
"instead of using the default uid and gid specified on the mount, cache the "
"new file's uid and gid locally which means that the uid for the file can "
"change when the inode is reloaded (or the user remounts the share)."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:497
msgid "nosetuids"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:498
msgid ""
"The client will not attempt to set the uid and gid on on newly created "
"files, directories, and devices (create, mkdir, mknod) which will result in "
"the server setting the uid and gid to the default (usually the server uid of "
"the user who mounted the share).  Letting the server (rather than the "
"client) set the uid and gid is the default. If the CIFS Unix Extensions are "
"not negotiated then the uid and gid for new files will appear to be the uid "
"(gid) of the mounter or the uid (gid) parameter specified on the mount."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:507
msgid "netbiosname"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:508
msgid ""
"When mounting to servers via port 139, specifies the RFC1001 source name to "
"use to represent the client netbios machine name when doing the RFC1001 "
"netbios session initialize."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:511
msgid "direct"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:512
msgid ""
"Do not do inode data caching on files opened on this mount. This precludes "
"mmapping files on this mount. In some cases with fast networks and little or "
"no caching benefits on the client (e.g. when the application is doing large "
"sequential reads bigger than page size without rereading the same data) this "
"can provide better performance than the default behavior which caches reads "
"(readahead) and writes (writebehind) through the local Linux client "
"pagecache if oplock (caching token) is granted and held. Note that direct "
"allows write operations larger than page size to be sent to the server."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:523
msgid "strictcache"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:524
msgid ""
"Use for switching on strict cache mode. In this mode the client read from "
"the cache all the time it has Oplock Level II, otherwise - read from the "
"server. All written data are stored in the cache, but if the client doesn't "
"have Exclusive Oplock, it writes the data to the server."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:529
msgid "rwpidforward"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:530
msgid ""
"Forward pid of a process who opened a file to any read or write operation on "
"that file. This prevent applications like WINE from failing on read and "
"write if we use mandatory brlock style."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:533
msgid "acl"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:534
msgid ""
"Allow setfacl and getfacl to manage posix ACLs if server supports them.  "
"(default)"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:536
msgid "noacl"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:537
msgid "Do not allow setfacl and getfacl calls on this mount"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:538
msgid "user_xattr"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:539
msgid ""
"Allow getting and setting user xattrs (those attributes whose name begins "
"with ``user.`` or ``os2.``) as OS/2 EAs (extended attributes) to the "
"server.  This allows support of the setfattr and getfattr utilities. "
"(default)"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:543
msgid "nouser_xattr"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:544
msgid "Do not allow getfattr/setfattr to get/set/list xattrs"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:545
msgid "mapchars"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:546
msgid "Translate six of the seven reserved characters (not backslash)::"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:550
msgid ""
"to the remap range (above 0xF000), which also allows the CIFS client to "
"recognize files created with such characters by Windows's POSIX emulation. "
"This can also be useful when mounting to most versions of Samba (which also "
"forbids creating and opening files whose names contain any of these seven "
"characters). This has no effect if the server does not support Unicode on "
"the wire."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:558
msgid "nomapchars"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:559
msgid "Do not translate any of these seven characters (default)."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:560
msgid "nocase"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:561
msgid ""
"Request case insensitive path name matching (case sensitive is the default "
"if the server supports it). (mount option ``ignorecase`` is identical to "
"``nocase``)"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:564
msgid "posixpaths"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:565
msgid ""
"If CIFS Unix extensions are supported, attempt to negotiate posix path name "
"support which allows certain characters forbidden in typical CIFS filenames, "
"without requiring remapping. (default)"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:569
msgid "noposixpaths"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:570
msgid ""
"If CIFS Unix extensions are supported, do not request posix path name "
"support (this may cause servers to reject creatingfile with certain reserved "
"characters)."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:573
msgid "nounix"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:574
msgid ""
"Disable the CIFS Unix Extensions for this mount (tree connection). This is "
"rarely needed, but it may be useful in order to turn off multiple settings "
"all at once (ie posix acls, posix locks, posix paths, symlink support and "
"retrieving uids/gids/mode from the server) or to work around a bug in server "
"which implement the Unix Extensions."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:581
msgid "nobrl"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:582
msgid ""
"Do not send byte range lock requests to the server. This is necessary for "
"certain applications that break with cifs style mandatory byte range locks "
"(and most cifs servers do not yet support requesting advisory byte range "
"locks)."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:587
msgid "forcemandatorylock"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:588
msgid ""
"Even if the server supports posix (advisory) byte range locking, send only "
"mandatory lock requests.  For some (presumably rare) applications, "
"originally coded for DOS/Windows, which require Windows style mandatory byte "
"range locking, they may be able to take advantage of this option, forcing "
"the cifs client to only send mandatory locks even if the cifs server would "
"support posix advisory locks. ``forcemand`` is accepted as a shorter form of "
"this mount option."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:597
msgid "nostrictsync"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:598
msgid ""
"If this mount option is set, when an application does an fsync call then the "
"cifs client does not send an SMB Flush to the server (to force the server to "
"write all dirty data for this file immediately to disk), although cifs still "
"sends all dirty (cached) file data to the server and waits for the server to "
"respond to the write.  Since SMB Flush can be very slow, and some servers "
"may be reliable enough (to risk delaying slightly flushing the data to disk "
"on the server), turning on this option may be useful to improve performance "
"for applications that fsync too much, at a small risk of server crash.  If "
"this mount option is not set, by default cifs will send an SMB flush request "
"(and wait for a response) on every fsync call."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:611
msgid "nodfs"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:612
msgid ""
"Disable DFS (global name space support) even if the server claims to support "
"it.  This can help work around a problem with parsing of DFS paths with "
"Samba server versions 3.0.24 and 3.0.25."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:616
msgid "remount"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:617
msgid ""
"remount the share (often used to change from ro to rw mounts or vice versa)"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:619
msgid "cifsacl"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:620
msgid ""
"Report mode bits (e.g. on stat) based on the Windows ACL for the file. "
"(EXPERIMENTAL)"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:622
msgid "servern"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:623
msgid ""
"Specify the server 's netbios name (RFC1001 name) to use when attempting to "
"setup a session to the server. This is needed for mounting to some older "
"servers (such as OS/2 or Windows 98 and Windows ME) since they do not "
"support a default server name.  A server name can be up to 15 characters "
"long and is usually uppercased."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:629
msgid "sfu"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:630
msgid ""
"When the CIFS Unix Extensions are not negotiated, attempt to create device "
"files and fifos in a format compatible with Services for Unix (SFU).  In "
"addition retrieve bits 10-12 of the mode via the SETFILEBITS extended "
"attribute (as SFU does).  In the future the bottom 9 bits of the mode also "
"will be emulated using queries of the security descriptor (ACL)."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:637
msgid "mfsymlinks"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:638
msgid ""
"Enable support for Minshall+French symlinks (see http://wiki.samba.org/index."
"php/UNIX_Extensions#Minshall.2BFrench_symlinks) This option is ignored when "
"specified together with the 'sfu' option. Minshall+French symlinks are used "
"even if the server supports the CIFS Unix Extensions."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:643
msgid "sign"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:644
msgid ""
"Must use packet signing (helps avoid unwanted data modification by "
"intermediate systems in the route).  Note that signing does not work with "
"lanman or plaintext authentication."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:647
msgid "seal"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:648
msgid ""
"Must seal (encrypt) all data on this mounted share before sending on the "
"network.  Requires support for Unix Extensions. Note that this differs from "
"the sign mount option in that it causes encryption of data sent over this "
"mounted share but other shares mounted to the same server are unaffected."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:653
msgid "locallease"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:654
msgid ""
"This option is rarely needed. Fcntl F_SETLEASE is used by some applications "
"such as Samba and NFSv4 server to check to see whether a file is cacheable.  "
"CIFS has no way to explicitly request a lease, but can check whether a file "
"is cacheable (oplocked).  Unfortunately, even if a file is not oplocked, it "
"could still be cacheable (ie cifs client could grant fcntl leases if no "
"other local processes are using the file) for cases for example such as when "
"the server does not support oplocks and the user is sure that the only "
"updates to the file will be from this client. Specifying this mount option "
"will allow the cifs client to check for leases (only) locally for files "
"which are not oplocked instead of denying leases in that case. (EXPERIMENTAL)"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:667
msgid "sec"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:668
msgid "Security mode.  Allowed values are:"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:670
msgid "none"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:671
msgid "attempt to connection as a null user (no name)"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:672
msgid "krb5"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:673
msgid "Use Kerberos version 5 authentication"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:674
msgid "krb5i"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:675
msgid "Use Kerberos authentication and packet signing"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:676
msgid "ntlm"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:677
msgid "Use NTLM password hashing (default)"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:678
msgid "ntlmi"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:679
msgid ""
"Use NTLM password hashing with signing (if /proc/fs/cifs/"
"PacketSigningEnabled on or if server requires signing also can be the "
"default)"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:682
msgid "ntlmv2"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:683
msgid "Use NTLMv2 password hashing"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:684
msgid "ntlmv2i"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:685
msgid "Use NTLMv2 password hashing with packet signing"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:686
msgid "lanman"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:687
msgid "(if configured in kernel config) use older lanman hash"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:689
msgid "hard"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:690
msgid "Retry file operations if server is not responding"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:691
msgid "soft"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:692
msgid ""
"Limit retries to unresponsive servers (usually only one retry) before "
"returning an error.  (default)"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:695
msgid ""
"The mount.cifs mount helper also accepts a few mount options before -o "
"including:"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:699
msgid "-S"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:699
msgid ""
"take password from stdin (equivalent to setting the environment variable "
"``PASSWD_FD=0``"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:701
msgid "-V"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:701
msgid "print mount.cifs version"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:702
msgid "-?"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:702
msgid "display simple usage information"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:705
msgid ""
"With most 2.6 kernel versions of modutils, the version of the cifs kernel "
"module can be displayed via modinfo."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:709
msgid "Misc /proc/fs/cifs Flags and Debug Info"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:711
msgid "Informational pseudo-files:"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:714
msgid "DebugData"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:714
msgid ""
"Displays information about active CIFS sessions and shares, features enabled "
"as well as the cifs.ko version."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:717
msgid "Stats"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:717
msgid ""
"Lists summary resource usage information as well as per share statistics."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:719
msgid "open_files"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:719
msgid "List all the open file handles on all active SMB sessions."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:720
msgid "mount_params"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:720
msgid "List of all mount parameters available for the module"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:723
msgid "Configuration pseudo-files:"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:726
msgid "SecurityFlags"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:726
msgid ""
"Flags which control security negotiation and also packet signing. "
"Authentication (may/must) flags (e.g. for NTLMv2) may be combined with the "
"signing flags.  Specifying two different password hashing mechanisms (as "
"\"must use\") on the other hand does not make much sense. Default flags are::"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:735
msgid ""
"(NTLMv2 and packet signing allowed).  Some SecurityFlags may require "
"enabling a corresponding menuconfig option."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:738
msgid ""
"may use packet signing                        0x00001 must use packet "
"signing                       0x01001 may use "
"NTLMv2                                0x00004 must use "
"NTLMv2                               0x04004 may use Kerberos security "
"(krb5)              0x00008 must use Kerberos                             "
"0x08008 may use NTLMSSP                               0x00080 must use "
"NTLMSSP                              0x80080 seal (packet "
"encryption)                      0x00040 must "
"seal                                     0x40040"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:749
msgid "cifsFYI"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:749
msgid ""
"If set to non-zero value, additional debug information will be logged to the "
"system error log.  This field contains three flags controlling different "
"classes of debugging entries.  The maximum value it can be set to is 7 which "
"enables all debugging points (default 0). Some debugging statements are not "
"compiled into the cifs kernel unless CONFIG_CIFS_DEBUG2 is enabled in the "
"kernel configuration. cifsFYI may be set to one or more of the following "
"flags (7 sets them all)::"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:770
msgid "traceSMB"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:770
msgid ""
"If set to one, debug information is logged to the system error log with the "
"start of smb requests and responses (default 0)"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:773
msgid "LookupCacheEnable"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:773
msgid ""
"If set to one, inode information is kept cached for one second improving "
"performance of lookups (default 1)"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:776
msgid "LinuxExtensionsEnabled"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:776
msgid ""
"If set to one then the client will attempt to use the CIFS \"UNIX\" "
"extensions which are optional protocol enhancements that allow CIFS servers "
"to return accurate UID/GID information as well as support symbolic links. If "
"you use servers such as Samba that support the CIFS Unix extensions but do "
"not want to use symbolic link support and want to map the uid and gid fields "
"to values supplied at mount (rather than the actual values, then set this to "
"zero. (default 1)"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:786
msgid "dfscache"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:786
msgid ""
"List the content of the DFS cache. If set to 0, the client will clear the "
"cache."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:790
msgid ""
"These experimental features and tracing can be enabled by changing flags in /"
"proc/fs/cifs (after the cifs module has been installed or built into the "
"kernel, e.g.  insmod cifs).  To enable a feature set it to 1 e.g.  to enable "
"tracing to the kernel message log type::"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:797
msgid ""
"cifsFYI functions as a bit mask. Setting it to 1 enables additional kernel "
"logging of various informational messages.  2 enables logging of non-zero "
"SMB return codes while 4 enables logging of requests that take longer than "
"one second to complete (except for byte range lock requests). Setting it to "
"4 requires CONFIG_CIFS_STATS2 to be set in kernel configuration (.config). "
"Setting it to seven enables all three.  Finally, tracing the start of smb "
"requests and responses can be enabled via::"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:807
msgid ""
"Per share (per client mount) statistics are available in /proc/fs/cifs/"
"Stats. Additional information is available if CONFIG_CIFS_STATS2 is enabled "
"in the kernel configuration (.config).  The statistics returned include "
"counters which represent the number of attempted and failed (ie non-zero "
"return code from the server) SMB3 (or cifs) requests grouped by request type "
"(read, write, close etc.). Also recorded is the total bytes read and bytes "
"written to the server for that share.  Note that due to client caching "
"effects this can be less than the number of bytes read and written by the "
"application running on the client. Statistics can be reset to zero by ``echo "
"0 > /proc/fs/cifs/Stats`` which may be useful if comparing performance of "
"two different scenarios."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:818
msgid ""
"Also note that ``cat /proc/fs/cifs/DebugData`` will display information "
"about the active sessions and the shares that are mounted."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:821
msgid ""
"Enabling Kerberos (extended security) works but requires version 1.2 or "
"later of the helper program cifs.upcall to be present and to be configured "
"in the /etc/request-key.conf file.  The cifs.upcall helper program is from "
"the Samba project(https://www.samba.org). NTLM and NTLMv2 and LANMAN support "
"do not require this helper. Note that NTLMv2 security (which does not "
"require the cifs.upcall helper program), instead of using Kerberos, is "
"sufficient for some use cases."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:829
msgid ""
"DFS support allows transparent redirection to shares in an MS-DFS name "
"space. In addition, DFS support for target shares which are specified as UNC "
"names which begin with host names (rather than IP addresses) requires a user "
"space helper (such as cifs.upcall) to be present in order to translate host "
"names to ip address, and the user space helper must also be configured in "
"the file /etc/request-key.conf.  Samba, Windows servers and many NAS "
"appliances support DFS as a way of constructing a global name space to ease "
"network configuration and improve reliability."
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:838
msgid ""
"To use cifs Kerberos and DFS support, the Linux keyutils package should be "
"installed and something like the following lines should be added to the /etc/"
"request-key.conf file::"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:846
msgid "CIFS kernel module parameters"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:847
msgid ""
"These module parameters can be specified or modified either during the time "
"of module loading or during the runtime by using the interface::"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:852
msgid "i.e.::"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:856
msgid ""
"More detailed descriptions of the available module parameters and their "
"values can be seen by doing:"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:859
msgid "modinfo cifs (or modinfo smb3)"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:862
msgid "enable_oplocks"
msgstr ""

#: ../../../admin-guide/cifs/usage.rst:862
msgid ""
"Enable or disable oplocks. Oplocks are enabled by default. [Y/y/1]. To "
"disable use any of [N/n/0]."
msgstr ""
