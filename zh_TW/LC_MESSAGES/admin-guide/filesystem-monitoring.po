# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../admin-guide/filesystem-monitoring.rst:5
msgid "File system Monitoring with fanotify"
msgstr ""

#: ../../../admin-guide/filesystem-monitoring.rst:8
msgid "File system Error Reporting"
msgstr ""

#: ../../../admin-guide/filesystem-monitoring.rst:10
msgid ""
"Fanotify supports the FAN_FS_ERROR event type for file system-wide error "
"reporting.  It is meant to be used by file system health monitoring daemons, "
"which listen for these events and take actions (notify sysadmin, start "
"recovery) when a file system problem is detected."
msgstr ""

#: ../../../admin-guide/filesystem-monitoring.rst:15
msgid ""
"By design, a FAN_FS_ERROR notification exposes sufficient information for a "
"monitoring tool to know a problem in the file system has happened. It "
"doesn't necessarily provide a user space application with semantics to "
"verify an IO operation was successfully executed.  That is out of scope for "
"this feature.  Instead, it is only meant as a framework for early file "
"system problem detection and reporting recovery tools."
msgstr ""

#: ../../../admin-guide/filesystem-monitoring.rst:22
msgid ""
"When a file system operation fails, it is common for dozens of kernel errors "
"to cascade after the initial failure, hiding the original failure log, which "
"is usually the most useful debug data to troubleshoot the problem.  For this "
"reason, FAN_FS_ERROR tries to report only the first error that occurred for "
"a file system since the last notification, and it simply counts additional "
"errors.  This ensures that the most important pieces of information are "
"never lost."
msgstr ""

#: ../../../admin-guide/filesystem-monitoring.rst:30
msgid ""
"FAN_FS_ERROR requires the fanotify group to be setup with the FAN_REPORT_FID "
"flag."
msgstr ""

#: ../../../admin-guide/filesystem-monitoring.rst:33
msgid ""
"At the time of this writing, the only file system that emits FAN_FS_ERROR "
"notifications is Ext4."
msgstr ""

#: ../../../admin-guide/filesystem-monitoring.rst:36
msgid "A FAN_FS_ERROR Notification has the following format::"
msgstr ""

#: ../../../admin-guide/filesystem-monitoring.rst:44
msgid ""
"The order of records is not guaranteed, and new records might be added in "
"the future.  Therefore, applications must not rely on the order and must be "
"prepared to skip over unknown records. Please refer to ``samples/fanotify/fs-"
"monitor.c`` for an example parser."
msgstr ""

#: ../../../admin-guide/filesystem-monitoring.rst:50
msgid "Generic error record"
msgstr ""

#: ../../../admin-guide/filesystem-monitoring.rst:52
msgid ""
"The generic error record provides enough information for a file system "
"agnostic tool to learn about a problem in the file system, without providing "
"any additional details about the problem.  This record is identified by "
"``struct fanotify_event_info_header.info_type`` being set to "
"FAN_EVENT_INFO_TYPE_ERROR."
msgstr ""

#: ../../../admin-guide/filesystem-monitoring.rst:66
msgid ""
"The `error` field identifies the type of error using errno values. "
"`error_count` tracks the number of errors that occurred and were suppressed "
"to preserve the original error information, since the last notification."
msgstr ""

#: ../../../admin-guide/filesystem-monitoring.rst:72
msgid "FID record"
msgstr ""

#: ../../../admin-guide/filesystem-monitoring.rst:74
msgid ""
"The FID record can be used to uniquely identify the inode that triggered the "
"error through the combination of fsid and file handle.  A file system "
"specific application can use that information to attempt a recovery "
"procedure.  Errors that are not related to an inode are reported with an "
"empty file handle of type FILEID_INVALID."
msgstr ""
