# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../admin-guide/mm/pagemap.rst:3
msgid "Examining Process Page Tables"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:5
msgid ""
"pagemap is a new (as of 2.6.25) set of interfaces in the kernel that allow "
"userspace programs to examine the page tables and related information by "
"reading files in ``/proc``."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:9
msgid "There are four components to pagemap:"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:11
msgid ""
"``/proc/pid/pagemap``.  This file lets a userspace process find out which "
"physical frame each virtual page is mapped to.  It contains one 64-bit value "
"for each virtual page, containing the following data (from ``fs/proc/"
"task_mmu.c``, above pagemap_read):"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:16
msgid "Bits 0-54  page frame number (PFN) if present"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:17
msgid "Bits 0-4   swap type if swapped"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:18
msgid "Bits 5-54  swap offset if swapped"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:19
msgid ""
"Bit  55    pte is soft-dirty (see Documentation/admin-guide/mm/soft-dirty."
"rst)"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:21
msgid "Bit  56    page exclusively mapped (since 4.2)"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:22
msgid ""
"Bit  57    pte is uffd-wp write-protected (since 5.13) (see Documentation/"
"admin-guide/mm/userfaultfd.rst)"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:24
msgid ""
"Bit  58    pte is a guard region (since 6.15) (see madvise (2) man page)"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:25
msgid "Bits 59-60 zero"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:26
msgid "Bit  61    page is file-page or shared-anon (since 3.5)"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:27
msgid "Bit  62    page swapped"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:28
msgid "Bit  63    page present"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:30
msgid ""
"Since Linux 4.0 only users with the CAP_SYS_ADMIN capability can get PFNs. "
"In 4.0 and 4.1 opens by unprivileged fail with -EPERM.  Starting from 4.2 "
"the PFN field is zeroed if the user does not have CAP_SYS_ADMIN. Reason: "
"information about PFNs helps in exploiting Rowhammer vulnerability."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:35
msgid ""
"If the page is not present but in swap, then the PFN contains an encoding of "
"the swap file number and the page's offset into the swap. Unmapped pages "
"return a null PFN. This allows determining precisely which pages are mapped "
"(or in swap) and comparing mapped pages between processes."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:41
msgid ""
"Traditionally, bit 56 indicates that a page is mapped exactly once and bit "
"56 is clear when a page is mapped multiple times, even when mapped in the "
"same process multiple times. In some kernel configurations, the semantics "
"for pages part of a larger allocation (e.g., THP) can differ: bit 56 is set "
"if all pages part of the corresponding large allocation are *certainly* "
"mapped in the same process, even if the page is mapped multiple times in "
"that process. Bit 56 is clear when any page page of the larger allocation is "
"*maybe* mapped in a different process. In some cases, a large allocation "
"might be treated as \"maybe mapped by multiple processes\" even though this "
"is no longer the case."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:52
msgid ""
"Efficient users of this interface will use ``/proc/pid/maps`` to determine "
"which areas of memory are actually mapped and llseek to skip over unmapped "
"regions."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:56
msgid ""
"``/proc/kpagecount``.  This file contains a 64-bit count of the number of "
"times each page is mapped, indexed by PFN. Some kernel configurations do not "
"track the precise number of times a page part of a larger allocation (e.g., "
"THP) is mapped. In these configurations, the average number of mappings per "
"page in this larger allocation is returned instead. However, if any page of "
"the large allocation is mapped, the returned value will be at least 1."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:64
msgid ""
"The page-types tool in the tools/mm directory can be used to query the "
"number of times a page is mapped."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:67
msgid ""
"``/proc/kpageflags``.  This file contains a 64-bit set of flags for each "
"page, indexed by PFN."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:70
msgid "The flags are (from ``fs/proc/page.c``, above kpageflags_read):"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:72
msgid "LOCKED"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:73
msgid "ERROR"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:74
msgid "REFERENCED"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:75
msgid "UPTODATE"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:76
msgid "DIRTY"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:77
msgid "LRU"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:78
msgid "ACTIVE"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:79
msgid "SLAB"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:80
msgid "WRITEBACK"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:81
msgid "RECLAIM"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:82
msgid "BUDDY"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:83
msgid "MMAP"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:84
msgid "ANON"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:85
msgid "SWAPCACHE"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:86
msgid "SWAPBACKED"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:87
msgid "COMPOUND_HEAD"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:88
msgid "COMPOUND_TAIL"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:89
msgid "HUGE"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:90
msgid "UNEVICTABLE"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:91
msgid "HWPOISON"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:92
msgid "NOPAGE"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:93
msgid "KSM"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:94
msgid "THP"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:95
msgid "OFFLINE"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:96
msgid "ZERO_PAGE"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:97
msgid "IDLE"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:98
msgid "PGTABLE"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:100
msgid ""
"``/proc/kpagecgroup``.  This file contains a 64-bit inode number of the "
"memory cgroup each page is charged to, indexed by PFN. Only available when "
"CONFIG_MEMCG is set."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:105
msgid "Short descriptions to the page flags"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:107
msgid "0 - LOCKED"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:108
msgid ""
"The page is being locked for exclusive access, e.g. by undergoing read/write "
"IO."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:110
msgid "7 - SLAB"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:111
msgid ""
"The page is managed by the SLAB/SLUB kernel memory allocator. When compound "
"page is used, either will only set this flag on the head page."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:114
msgid "10 - BUDDY"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:115
msgid ""
"A free memory block managed by the buddy system allocator. The buddy system "
"organizes free memory in blocks of various orders. An order N block has 2^N "
"physically contiguous pages, with the BUDDY flag set for and _only_ for the "
"first page."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:119
msgid "15 - COMPOUND_HEAD"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:120
msgid ""
"A compound page with order N consists of 2^N physically contiguous pages. A "
"compound page with order 2 takes the form of \"HTTT\", where H donates its "
"head page and T donates its tail page(s).  The major consumers of compound "
"pages are hugeTLB pages (Documentation/admin-guide/mm/hugetlbpage.rst), the "
"SLUB etc.  memory allocators and various device drivers. However in this "
"interface, only huge/giga pages are made visible to end users."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:127
msgid "16 - COMPOUND_TAIL"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:128
msgid "A compound page tail (see description above)."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:129
msgid "17 - HUGE"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:130
msgid "This is an integral part of a HugeTLB page."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:131
msgid "19 - HWPOISON"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:132
msgid "Hardware detected memory corruption on this page: don't touch the data!"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:133
msgid "20 - NOPAGE"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:134
msgid "No page frame exists at the requested address."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:135
msgid "21 - KSM"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:136
msgid ""
"Identical memory pages dynamically shared between one or more processes."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:137
msgid "22 - THP"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:138
msgid ""
"Contiguous pages which construct THP of any size and mapped by any "
"granularity."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:139
msgid "23 - OFFLINE"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:140
msgid "The page is logically offline."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:141
msgid "24 - ZERO_PAGE"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:142
msgid "Zero page for pfn_zero or huge_zero page."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:143
msgid "25 - IDLE"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:144
msgid ""
"The page has not been accessed since it was marked idle (see Documentation/"
"admin-guide/mm/idle_page_tracking.rst). Note that this flag may be stale in "
"case the page was accessed via a PTE. To make sure the flag is up-to-date "
"one has to read ``/sys/kernel/mm/page_idle/bitmap`` first."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:149
msgid "26 - PGTABLE"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:150
msgid "The page is in use as a page table."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:153
msgid "IO related page flags"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:155
msgid "1 - ERROR"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:156
msgid "IO error occurred."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:157
msgid "3 - UPTODATE"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:158
msgid ""
"The page has up-to-date data. ie. for file backed page: (in-memory data "
"revision >= on-disk one)"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:160
msgid "4 - DIRTY"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:161
msgid ""
"The page has been written to, hence contains new data. i.e. for file backed "
"page: (in-memory data revision >  on-disk one)"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:163
msgid "8 - WRITEBACK"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:164
msgid "The page is being synced to disk."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:167
msgid "LRU related page flags"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:169
msgid "5 - LRU"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:170
msgid "The page is in one of the LRU lists."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:171
msgid "6 - ACTIVE"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:172
msgid "The page is in the active LRU list."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:173
msgid "18 - UNEVICTABLE"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:174
msgid ""
"The page is in the unevictable (non-)LRU list It is somehow pinned and not a "
"candidate for LRU page reclaims, e.g. ramfs pages, shmctl(SHM_LOCK) and "
"mlock() memory segments."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:177
msgid "2 - REFERENCED"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:178
msgid "The page has been referenced since last LRU list enqueue/requeue."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:179
msgid "9 - RECLAIM"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:180
msgid "The page will be reclaimed soon after its pageout IO completed."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:181
msgid "11 - MMAP"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:182
msgid "A memory mapped page."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:183
msgid "12 - ANON"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:184
msgid "A memory mapped page that is not part of a file."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:185
msgid "13 - SWAPCACHE"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:186
msgid "The page is mapped to swap space, i.e. has an associated swap entry."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:187
msgid "14 - SWAPBACKED"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:188
msgid "The page is backed by swap/RAM."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:190
msgid ""
"The page-types tool in the tools/mm directory can be used to query the above "
"flags."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:194
msgid "Exceptions for Shared Memory"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:196
msgid ""
"Page table entries for shared pages are cleared when the pages are zapped or "
"swapped out. This makes swapped out pages indistinguishable from never-"
"allocated ones."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:200
msgid ""
"In kernel space, the swap location can still be retrieved from the page "
"cache. However, values stored only on the normal PTE get lost irretrievably "
"when the page is swapped out (i.e. SOFT_DIRTY)."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:204
msgid ""
"In user space, whether the page is present, swapped or none can be deduced "
"with the help of lseek and/or mincore system calls."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:207
msgid ""
"lseek() can differentiate between accessed pages (present or swapped out) "
"and holes (none/non-allocated) by specifying the SEEK_DATA flag on the file "
"where the pages are backed. For anonymous shared pages, the file can be "
"found in ``/proc/pid/map_files/``."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:212
msgid ""
"mincore() can differentiate between pages in memory (present, including swap "
"cache) and out of memory (swapped out or none/non-allocated)."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:216
msgid "Other notes"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:218
msgid ""
"Reading from any of the files will return -EINVAL if you are not starting "
"the read on an 8-byte boundary (e.g., if you sought an odd number of bytes "
"into the file), or if the size of the read is not a multiple of 8 bytes."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:222
msgid ""
"Before Linux 3.11 pagemap bits 55-60 were used for \"page-shift\" (which is "
"always 12 at most architectures). Since Linux 3.11 their meaning changes "
"after first clear of soft-dirty bits. Since Linux 4.2 they are used for "
"flags unconditionally."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:228
msgid "Pagemap Scan IOCTL"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:230
msgid ""
"The ``PAGEMAP_SCAN`` IOCTL on the pagemap file can be used to get or "
"optionally clear the info about page table entries. The following operations "
"are supported in this IOCTL:"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:234
msgid ""
"Scan the address range and get the memory ranges matching the provided "
"criteria. This is performed when the output buffer is specified."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:236
msgid ""
"Write-protect the pages. The ``PM_SCAN_WP_MATCHING`` is used to write-"
"protect the pages of interest. The ``PM_SCAN_CHECK_WPASYNC`` aborts the "
"operation if non-Async Write Protected pages are found. The "
"``PM_SCAN_WP_MATCHING`` can be used with or without "
"``PM_SCAN_CHECK_WPASYNC``."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:240
msgid ""
"Both of those operations can be combined into one atomic operation where we "
"can get and write protect the pages as well."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:243
msgid "Following flags about pages are currently supported:"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:245
msgid "``PAGE_IS_WPALLOWED`` - Page has async-write-protection enabled"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:246
msgid ""
"``PAGE_IS_WRITTEN`` - Page has been written to from the time it was write "
"protected"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:247
msgid "``PAGE_IS_FILE`` - Page is file backed"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:248
msgid "``PAGE_IS_PRESENT`` - Page is present in the memory"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:249
msgid "``PAGE_IS_SWAPPED`` - Page is in swapped"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:250
msgid "``PAGE_IS_PFNZERO`` - Page has zero PFN"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:251
msgid "``PAGE_IS_HUGE`` - Page is PMD-mapped THP or Hugetlb backed"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:252
msgid "``PAGE_IS_SOFT_DIRTY`` - Page is soft-dirty"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:253
msgid "``PAGE_IS_GUARD`` - Page is a part of a guard region"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:255
msgid "The ``struct pm_scan_arg`` is used as the argument of the IOCTL."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:257
msgid ""
"The size of the ``struct pm_scan_arg`` must be specified in the ``size`` "
"field. This field will be helpful in recognizing the structure if extensions "
"are done later."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:260
msgid ""
"The flags can be specified in the ``flags`` field. The "
"``PM_SCAN_WP_MATCHING`` and ``PM_SCAN_CHECK_WPASYNC`` are the only added "
"flags at this time. The get operation is optionally performed depending upon "
"if the output buffer is provided or not."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:264
msgid "The range is specified through ``start`` and ``end``."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:265
msgid ""
"The walk can abort before visiting the complete range such as the user "
"buffer can get full etc. The walk ending address is specified in``end_walk``."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:267
msgid ""
"The output buffer of ``struct page_region`` array and size is specified in "
"``vec`` and ``vec_len``."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:269
msgid ""
"The optional maximum requested pages are specified in the ``max_pages``."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:270
msgid ""
"The masks are specified in ``category_mask``, ``category_anyof_mask``, "
"``category_inverted`` and ``return_mask``."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:273
msgid "Find pages which have been written and WP them as well::"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:283
msgid ""
"Find pages which have been written, are file backed, not swapped and either "
"present or huge::"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:297
msgid ""
"The ``PAGE_IS_WRITTEN`` flag can be considered as a better-performing "
"alternative of soft-dirty flag. It doesn't get affected by VMA merging of "
"the kernel and hence the user can find the true soft-dirty pages in case of "
"normal pages. (There may still be extra dirty pages reported for THP or "
"Hugetlb pages.)"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:302
msgid ""
"\"PAGE_IS_WRITTEN\" category is used with uffd write protect-enabled ranges "
"to implement memory dirty tracking in userspace:"
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:305
msgid ""
"The userfaultfd file descriptor is created with ``userfaultfd`` syscall."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:306
msgid ""
"The ``UFFD_FEATURE_WP_UNPOPULATED`` and ``UFFD_FEATURE_WP_ASYNC`` features "
"are set by ``UFFDIO_API`` IOCTL."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:308
msgid ""
"The memory range is registered with ``UFFDIO_REGISTER_MODE_WP`` mode through "
"``UFFDIO_REGISTER`` IOCTL."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:310
msgid ""
"Then any part of the registered memory or the whole memory region must be "
"write protected using ``PAGEMAP_SCAN`` IOCTL with flag "
"``PM_SCAN_WP_MATCHING`` or the ``UFFDIO_WRITEPROTECT`` IOCTL can be used. "
"Both of these perform the same operation. The former is better in terms of "
"performance."
msgstr ""

#: ../../../admin-guide/mm/pagemap.rst:314
msgid ""
"Now the ``PAGEMAP_SCAN`` IOCTL can be used to either just find pages which "
"have been written to since they were last marked and/or optionally write "
"protect the pages as well."
msgstr ""
