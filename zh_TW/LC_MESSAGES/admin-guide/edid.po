# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-30 08:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../admin-guide/edid.rst:5
msgid "EDID"
msgstr ""

#: ../../../admin-guide/edid.rst:7
msgid ""
"In the good old days when graphics parameters were configured explicitly in "
"a file called xorg.conf, even broken hardware could be managed."
msgstr ""

#: ../../../admin-guide/edid.rst:10
msgid ""
"Today, with the advent of Kernel Mode Setting, a graphics board is either "
"correctly working because all components follow the standards - or the "
"computer is unusable, because the screen remains dark after booting or it "
"displays the wrong area. Cases when this happens are:"
msgstr ""

#: ../../../admin-guide/edid.rst:15
msgid "The graphics board does not recognize the monitor."
msgstr ""

#: ../../../admin-guide/edid.rst:16
msgid "The graphics board is unable to detect any EDID data."
msgstr ""

#: ../../../admin-guide/edid.rst:17
msgid "The graphics board incorrectly forwards EDID data to the driver."
msgstr ""

#: ../../../admin-guide/edid.rst:18
msgid "The monitor sends no or bogus EDID data."
msgstr ""

#: ../../../admin-guide/edid.rst:19
msgid ""
"A KVM sends its own EDID data instead of querying the connected monitor."
msgstr ""

#: ../../../admin-guide/edid.rst:21
msgid ""
"Adding the kernel parameter \"nomodeset\" helps in most cases, but causes "
"restrictions later on."
msgstr ""

#: ../../../admin-guide/edid.rst:24
msgid ""
"As a remedy for such situations, the kernel configuration item "
"CONFIG_DRM_LOAD_EDID_FIRMWARE was introduced. It allows to provide an "
"individually prepared or corrected EDID data set in the /lib/firmware "
"directory from where it is loaded via the firmware interface."
msgstr ""
