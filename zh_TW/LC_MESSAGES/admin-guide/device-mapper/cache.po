# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-30 08:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../admin-guide/device-mapper/cache.rst:3
msgid "Cache"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:6
msgid "Introduction"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:8
msgid ""
"dm-cache is a device mapper target written by Joe Thornber, Heinz "
"Mauelshagen, and Mike Snitzer."
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:11
msgid ""
"It aims to improve performance of a block device (eg, a spindle) by "
"dynamically migrating some of its data to a faster, smaller device (eg, an "
"SSD)."
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:15
msgid ""
"This device-mapper solution allows us to insert this caching at different "
"levels of the dm stack, for instance above the data device for a thin-"
"provisioning pool.  Caching solutions that are integrated more closely with "
"the virtual memory system should give better performance."
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:20
msgid ""
"The target reuses the metadata library used in the thin-provisioning library."
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:23
msgid ""
"The decision as to what data to migrate and when is left to a plug-in policy "
"module.  Several of these have been written as we experiment, and we hope "
"other people will contribute others for specific io scenarios (eg. a vm "
"image server)."
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:29
msgid "Glossary"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:31
msgid "Migration"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:32
msgid ""
"Movement of the primary copy of a logical block from one device to the other."
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:34
msgid "Promotion"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:35
msgid "Migration from slow device to fast device."
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:36
msgid "Demotion"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:37
msgid "Migration from fast device to slow device."
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:39
msgid ""
"The origin device always contains a copy of the logical block, which may be "
"out of date or kept in sync with the copy on the cache device (depending on "
"policy)."
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:44
msgid "Design"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:47
msgid "Sub-devices"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:49
msgid ""
"The target is constructed by passing three devices to it (along with other "
"parameters detailed later):"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:52
msgid "An origin device - the big, slow one."
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:54
msgid "A cache device - the small, fast one."
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:56
msgid ""
"A small metadata device - records which blocks are in the cache, which are "
"dirty, and extra hints for use by the policy object. This information could "
"be put on the cache device, but having it separate allows the volume manager "
"to configure it differently, e.g. as a mirror for extra robustness.  This "
"metadata device may only be used by a single cache device."
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:64
msgid "Fixed block size"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:66
msgid ""
"The origin is divided up into blocks of a fixed size.  This block size is "
"configurable when you first create the cache.  Typically we've been using "
"block sizes of 256KB - 1024KB.  The block size must be between 64 sectors "
"(32KB) and 2097152 sectors (1GB) and a multiple of 64 sectors (32KB)."
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:71
msgid ""
"Having a fixed block size simplifies the target a lot.  But it is something "
"of a compromise.  For instance, a small part of a block may be getting hit a "
"lot, yet the whole block will be promoted to the cache. So large block sizes "
"are bad because they waste cache space.  And small block sizes are bad "
"because they increase the amount of metadata (both in core and on disk)."
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:79
msgid "Cache operating modes"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:81
msgid ""
"The cache has three operating modes: writeback, writethrough and passthrough."
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:84
msgid ""
"If writeback, the default, is selected then a write to a block that is "
"cached will go only to the cache and the block will be marked dirty in the "
"metadata."
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:88
msgid ""
"If writethrough is selected then a write to a cached block will not complete "
"until it has hit both the origin and cache devices.  Clean blocks should "
"remain clean."
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:92
msgid ""
"If passthrough is selected, useful when the cache contents are not known to "
"be coherent with the origin device, then all reads are served from the "
"origin device (all reads miss the cache) and all writes are forwarded to the "
"origin device; additionally, write hits cause cache block invalidates.  To "
"enable passthrough mode the cache must be clean. Passthrough mode allows a "
"cache device to be activated without having to worry about coherency.  "
"Coherency that exists is maintained, although the cache will gradually cool "
"as writes take place.  If the coherency of the cache can later be verified, "
"or established through use of the \"invalidate_cblocks\" message, the cache "
"device can be transitioned to writethrough or writeback mode while still "
"warm.  Otherwise, the cache contents can be discarded prior to transitioning "
"to the desired operating mode."
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:106
msgid ""
"A simple cleaner policy is provided, which will clean (write back) all dirty "
"blocks in a cache.  Useful for decommissioning a cache or when shrinking a "
"cache.  Shrinking the cache's fast device requires all cache blocks, in the "
"area of the cache being removed, to be clean.  If the area being removed "
"from the cache still contains dirty blocks the resize will fail.  Care must "
"be taken to never reduce the volume used for the cache's fast device until "
"the cache is clean.  This is of particular importance if writeback mode is "
"used.  Writethrough and passthrough modes already maintain a clean cache.  "
"Future support to partially clean the cache, above a specified threshold, "
"will allow for keeping the cache warm and in writeback mode during resize."
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:119
msgid "Migration throttling"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:121
msgid ""
"Migrating data between the origin and cache device uses bandwidth. The user "
"can set a throttle to prevent more than a certain amount of migration "
"occurring at any one time.  Currently we're not taking any account of normal "
"io traffic going to the devices.  More work needs doing here to avoid "
"migrating during those peak io moments."
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:127
msgid ""
"For the time being, a message \"migration_threshold <#sectors>\" can be used "
"to set the maximum number of sectors being migrated, the default being 2048 "
"sectors (1MB)."
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:132
msgid "Updating on-disk metadata"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:134
msgid ""
"On-disk metadata is committed every time a FLUSH or FUA bio is written. If "
"no such requests are made then commits will occur every second.  This means "
"the cache behaves like a physical disk that has a volatile write cache.  If "
"power is lost you may lose some recent writes.  The metadata should always "
"be consistent in spite of any crash."
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:140
msgid ""
"The 'dirty' state for a cache block changes far too frequently for us to "
"keep updating it on the fly.  So we treat it as a hint.  In normal operation "
"it will be written when the dm device is suspended.  If the system crashes "
"all cache blocks will be assumed dirty when restarted."
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:146
msgid "Per-block policy hints"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:148
msgid ""
"Policy plug-ins can store a chunk of data per cache block.  It's up to the "
"policy how big this chunk is, but it should be kept small.  Like the dirty "
"flags this data is lost if there's a crash so a safe fallback value should "
"always be possible."
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:153
msgid "Policy hints affect performance, not correctness."
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:156
msgid "Policy messaging"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:158
msgid ""
"Policies will have different tunables, specific to each one, so we need a "
"generic way of getting and setting these.  Device-mapper messages are used.  "
"Refer to cache-policies.txt."
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:163
msgid "Discard bitset resolution"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:165
msgid ""
"We can avoid copying data during migration if we know the block has been "
"discarded.  A prime example of this is when mkfs discards the whole block "
"device.  We store a bitset tracking the discard state of blocks.  However, "
"we allow this bitset to have a different block size from the cache blocks.  "
"This is because we need to track the discard state for all of the origin "
"device (compare with the dirty bitset which is just for the smaller cache "
"device)."
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:174
msgid "Target interface"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:177
msgid "Constructor"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:186
msgid "metadata dev"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:186
msgid "fast device holding the persistent metadata"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:187
msgid "cache dev"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:187
msgid "fast device holding cached data blocks"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:188
msgid "origin dev"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:188
msgid "slow device holding original data blocks"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:189
msgid "block size"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:189
msgid "cache unit size in sectors"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:191
#: ../../../admin-guide/device-mapper/cache.rst:269
msgid "#feature args"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:191
msgid "number of feature arguments passed"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:192
#: ../../../admin-guide/device-mapper/cache.rst:270
msgid "feature args"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:192
msgid "writethrough or passthrough (The default is writeback.)"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:194
msgid "policy"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:194
msgid "the replacement policy to use"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:195
#: ../../../admin-guide/device-mapper/cache.rst:275
msgid "#policy args"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:195
msgid ""
"an even number of arguments corresponding to key/value pairs passed to the "
"policy"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:197
#: ../../../admin-guide/device-mapper/cache.rst:276
msgid "policy args"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:197
msgid ""
"key/value pairs passed to the policy E.g. 'sequential_threshold 1024' See "
"cache-policies.txt for details."
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:202
msgid "Optional feature arguments are:"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:206
msgid "writethrough"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:206
msgid ""
"write through caching that prohibits cache block content from being "
"different from origin block content. Without this argument, the default "
"behaviour is to write back cache block contents later for performance "
"reasons, so they may differ from the corresponding origin blocks."
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:212
msgid "passthrough"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:212
msgid ""
"a degraded mode useful for various cache coherency situations (e.g., rolling "
"back snapshots of underlying storage).     Reads and writes always go to the "
"origin.     If a write goes to a cached origin block, then the cache block "
"is invalidated. To enable passthrough mode the cache must be clean."
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:219
msgid "metadata2"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:219
msgid ""
"use version 2 of the metadata.  This stores the dirty bits in a separate "
"btree, which improves speed of shutting down the cache."
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:223
msgid "no_discard_passdown"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:223
msgid ""
"disable passing down discards from the cache to the origin's data device."
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:227
msgid ""
"A policy called 'default' is always registered.  This is an alias for the "
"policy we currently think is giving best all round performance."
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:230
msgid ""
"As the default policy could vary between kernels, if you are relying on the "
"characteristics of a specific policy, always request it by name."
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:234
msgid "Status"
msgstr "狀態"

#: ../../../admin-guide/device-mapper/cache.rst:247
msgid "metadata block size"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:247
msgid "Fixed block size for each metadata block in sectors"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:249
msgid "#used metadata blocks"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:249
msgid "Number of metadata blocks used"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:250
msgid "#total metadata blocks"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:250
msgid "Total number of metadata blocks"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:251
msgid "cache block size"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:251
msgid "Configurable block size for the cache device in sectors"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:253
msgid "#used cache blocks"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:253
msgid "Number of blocks resident in the cache"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:254
msgid "#total cache blocks"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:254
msgid "Total number of cache blocks"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:255
msgid "#read hits"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:255
msgid "Number of times a READ bio has been mapped to the cache"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:257
msgid "#read misses"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:257
msgid "Number of times a READ bio has been mapped to the origin"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:259
msgid "#write hits"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:259
msgid "Number of times a WRITE bio has been mapped to the cache"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:261
msgid "#write misses"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:261
msgid "Number of times a WRITE bio has been mapped to the origin"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:263
msgid "#demotions"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:263
msgid "Number of times a block has been removed from the cache"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:265
msgid "#promotions"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:265
msgid "Number of times a block has been moved to the cache"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:267
msgid "#dirty"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:267
msgid "Number of blocks in the cache that differ from the origin"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:269
msgid "Number of feature args to follow"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:270
msgid "'writethrough' (optional)"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:271
msgid "#core args"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:271
msgid "Number of core arguments (must be even)"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:272
msgid "core args"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:272
msgid "Key/value pairs for tuning the core e.g. migration_threshold"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:274
msgid "policy name"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:274
msgid "Name of the policy"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:275
msgid "Number of policy arguments to follow (must be even)"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:276
msgid "Key/value pairs e.g. sequential_threshold"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:277
msgid "cache metadata mode"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:277
msgid "ro if read-only, rw if read-write"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:279
msgid ""
"In serious cases where even a read-only mode is deemed unsafe no further I/O "
"will be permitted and the status will just contain the string 'Fail'. The "
"userspace recovery tools should then be used."
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:283
msgid "needs_check"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:283
msgid ""
"'needs_check' if set, '-' if not set A metadata operation has failed, "
"resulting in the needs_check flag being set in the metadata's superblock.  "
"The metadata device must be deactivated and checked/repaired before the "
"cache can be made fully operational again. '-' indicates needs_check is not "
"set."
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:293
msgid "Messages"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:295
msgid ""
"Policies will have different tunables, specific to each one, so we need a "
"generic way of getting and setting these.  Device-mapper messages are used.  "
"(A sysfs interface would also be possible.)"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:299
msgid "The message format is::"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:303
#: ../../../admin-guide/device-mapper/cache.rst:320
msgid "E.g.::"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:308
msgid ""
"Invalidation is removing an entry from the cache without writing it back.  "
"Cache blocks can be invalidated via the invalidate_cblocks message, which "
"takes an arbitrary number of cblock ranges.  Each cblock range's end value "
"is \"one past the end\", meaning 5-10 expresses a range of values from 5 to "
"9.  Each cblock must be expressed as a decimal value, in the future a "
"variant message that takes cblock ranges expressed in hexadecimal may be "
"needed to better support efficient invalidation of larger caches.  The cache "
"must be in passthrough mode when invalidate_cblocks is used::"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:325
msgid "Examples"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:327
msgid "The test suite can be found here:"
msgstr ""

#: ../../../admin-guide/device-mapper/cache.rst:329
msgid "https://github.com/jthornber/device-mapper-test-suite"
msgstr ""
