# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../fb/api.rst:3
msgid "The Frame Buffer Device API"
msgstr ""

#: ../../../fb/api.rst:5
msgid "Last revised: June 21, 2011"
msgstr ""

#: ../../../fb/api.rst:9
msgid "0. Introduction"
msgstr ""

#: ../../../fb/api.rst:11
msgid ""
"This document describes the frame buffer API used by applications to "
"interact with frame buffer devices. In-kernel APIs between device drivers "
"and the frame buffer core are not described."
msgstr ""

#: ../../../fb/api.rst:15
msgid ""
"Due to a lack of documentation in the original frame buffer API, drivers "
"behaviours differ in subtle (and not so subtle) ways. This document "
"describes the recommended API implementation, but applications should be "
"prepared to deal with different behaviours."
msgstr ""

#: ../../../fb/api.rst:22
msgid "1. Capabilities"
msgstr ""

#: ../../../fb/api.rst:24
msgid ""
"Device and driver capabilities are reported in the fixed screen information "
"capabilities field::"
msgstr ""

#: ../../../fb/api.rst:33
msgid ""
"Application should use those capabilities to find out what features they can "
"expect from the device and driver."
msgstr ""

#: ../../../fb/api.rst:36
msgid "FB_CAP_FOURCC"
msgstr ""

#: ../../../fb/api.rst:38
msgid ""
"The driver supports the four character code (FOURCC) based format setting "
"API. When supported, formats are configured using a FOURCC instead of "
"manually specifying color components layout."
msgstr ""

#: ../../../fb/api.rst:44
msgid "2. Types and visuals"
msgstr ""

#: ../../../fb/api.rst:46
msgid ""
"Pixels are stored in memory in hardware-dependent formats. Applications need "
"to be aware of the pixel storage format in order to write image data to the "
"frame buffer memory in the format expected by the hardware."
msgstr ""

#: ../../../fb/api.rst:50
msgid ""
"Formats are described by frame buffer types and visuals. Some visuals "
"require additional information, which are stored in the variable screen "
"information bits_per_pixel, grayscale, red, green, blue and transp fields."
msgstr ""

#: ../../../fb/api.rst:54
msgid ""
"Visuals describe how color information is encoded and assembled to create "
"macropixels. Types describe how macropixels are stored in memory. The "
"following types and visuals are supported."
msgstr ""

#: ../../../fb/api.rst:58
msgid "FB_TYPE_PACKED_PIXELS"
msgstr ""

#: ../../../fb/api.rst:60
msgid ""
"Macropixels are stored contiguously in a single plane. If the number of bits "
"per macropixel is not a multiple of 8, whether macropixels are padded to the "
"next multiple of 8 bits or packed together into bytes depends on the visual."
msgstr ""

#: ../../../fb/api.rst:64
msgid ""
"Padding at end of lines may be present and is then reported through the "
"fixed screen information line_length field."
msgstr ""

#: ../../../fb/api.rst:67
msgid "FB_TYPE_PLANES"
msgstr ""

#: ../../../fb/api.rst:69 ../../../fb/api.rst:77
msgid ""
"Macropixels are split across multiple planes. The number of planes is equal "
"to the number of bits per macropixel, with plane i'th storing i'th bit from "
"all macropixels."
msgstr ""

#: ../../../fb/api.rst:73
msgid "Planes are located contiguously in memory."
msgstr ""

#: ../../../fb/api.rst:75
msgid "FB_TYPE_INTERLEAVED_PLANES"
msgstr ""

#: ../../../fb/api.rst:81
msgid ""
"Planes are interleaved in memory. The interleave factor, defined as the "
"distance in bytes between the beginning of two consecutive interleaved "
"blocks belonging to different planes, is stored in the fixed screen "
"information type_aux field."
msgstr ""

#: ../../../fb/api.rst:86
msgid "FB_TYPE_FOURCC"
msgstr ""

#: ../../../fb/api.rst:88
msgid ""
"Macropixels are stored in memory as described by the format FOURCC "
"identifier stored in the variable screen information grayscale field."
msgstr ""

#: ../../../fb/api.rst:91
msgid "FB_VISUAL_MONO01"
msgstr ""

#: ../../../fb/api.rst:93 ../../../fb/api.rst:104
msgid ""
"Pixels are black or white and stored on a number of bits (typically one) "
"specified by the variable screen information bpp field."
msgstr ""

#: ../../../fb/api.rst:96
msgid ""
"Black pixels are represented by all bits set to 1 and white pixels by all "
"bits set to 0. When the number of bits per pixel is smaller than 8, several "
"pixels are packed together in a byte."
msgstr ""

#: ../../../fb/api.rst:100 ../../../fb/api.rst:111
msgid "FB_VISUAL_MONO01 is currently used with FB_TYPE_PACKED_PIXELS only."
msgstr ""

#: ../../../fb/api.rst:102
msgid "FB_VISUAL_MONO10"
msgstr ""

#: ../../../fb/api.rst:107
msgid ""
"Black pixels are represented by all bits set to 0 and white pixels by all "
"bits set to 1. When the number of bits per pixel is smaller than 8, several "
"pixels are packed together in a byte."
msgstr ""

#: ../../../fb/api.rst:113
msgid "FB_VISUAL_TRUECOLOR"
msgstr ""

#: ../../../fb/api.rst:115
msgid ""
"Pixels are broken into red, green and blue components, and each component "
"indexes a read-only lookup table for the corresponding value. Lookup tables "
"are device-dependent, and provide linear or non-linear ramps."
msgstr ""

#: ../../../fb/api.rst:119 ../../../fb/api.rst:136
msgid ""
"Each component is stored in a macropixel according to the variable screen "
"information red, green, blue and transp fields."
msgstr ""

#: ../../../fb/api.rst:122
msgid "FB_VISUAL_PSEUDOCOLOR and FB_VISUAL_STATIC_PSEUDOCOLOR"
msgstr ""

#: ../../../fb/api.rst:124
msgid ""
"Pixel values are encoded as indices into a colormap that stores red, green "
"and blue components. The colormap is read-only for "
"FB_VISUAL_STATIC_PSEUDOCOLOR and read-write for FB_VISUAL_PSEUDOCOLOR."
msgstr ""

#: ../../../fb/api.rst:128
msgid ""
"Each pixel value is stored in the number of bits reported by the variable "
"screen information bits_per_pixel field."
msgstr ""

#: ../../../fb/api.rst:131
msgid "FB_VISUAL_DIRECTCOLOR"
msgstr ""

#: ../../../fb/api.rst:133
msgid ""
"Pixels are broken into red, green and blue components, and each component "
"indexes a programmable lookup table for the corresponding value."
msgstr ""

#: ../../../fb/api.rst:139
msgid "FB_VISUAL_FOURCC"
msgstr ""

#: ../../../fb/api.rst:141
msgid ""
"Pixels are encoded and  interpreted as described by the format FOURCC "
"identifier stored in the variable screen information grayscale field."
msgstr ""

#: ../../../fb/api.rst:146
msgid "3. Screen information"
msgstr ""

#: ../../../fb/api.rst:148
msgid ""
"Screen information are queried by applications using the FBIOGET_FSCREENINFO "
"and FBIOGET_VSCREENINFO ioctls. Those ioctls take a pointer to a "
"fb_fix_screeninfo and fb_var_screeninfo structure respectively."
msgstr ""

#: ../../../fb/api.rst:152
msgid ""
"struct fb_fix_screeninfo stores device independent unchangeable information "
"about the frame buffer device and the current format. Those information "
"can't be directly modified by applications, but can be changed by the driver "
"when an application modifies the format::"
msgstr ""

#: ../../../fb/api.rst:178
msgid ""
"struct fb_var_screeninfo stores device independent changeable information "
"about a frame buffer device, its current format and video mode, as well as "
"other miscellaneous parameters::"
msgstr ""

#: ../../../fb/api.rst:222
msgid ""
"To modify variable information, applications call the FBIOPUT_VSCREENINFO "
"ioctl with a pointer to a fb_var_screeninfo structure. If the call is "
"successful, the driver will update the fixed screen information accordingly."
msgstr ""

#: ../../../fb/api.rst:226
msgid ""
"Instead of filling the complete fb_var_screeninfo structure manually, "
"applications should call the FBIOGET_VSCREENINFO ioctl and modify only the "
"fields they care about."
msgstr ""

#: ../../../fb/api.rst:232
msgid "4. Format configuration"
msgstr ""

#: ../../../fb/api.rst:234
msgid ""
"Frame buffer devices offer two ways to configure the frame buffer format: "
"the legacy API and the FOURCC-based API."
msgstr ""

#: ../../../fb/api.rst:238
msgid ""
"The legacy API has been the only frame buffer format configuration API for a "
"long time and is thus widely used by application. It is the recommended API "
"for applications when using RGB and grayscale formats, as well as legacy non-"
"standard formats."
msgstr ""

#: ../../../fb/api.rst:243
msgid ""
"To select a format, applications set the fb_var_screeninfo bits_per_pixel "
"field to the desired frame buffer depth. Values up to 8 will usually map to "
"monochrome, grayscale or pseudocolor visuals, although this is not required."
msgstr ""

#: ../../../fb/api.rst:247
msgid ""
"For grayscale formats, applications set the grayscale field to one. The red, "
"blue, green and transp fields must be set to 0 by applications and ignored "
"by drivers. Drivers must fill the red, blue and green offsets to 0 and "
"lengths to the bits_per_pixel value."
msgstr ""

#: ../../../fb/api.rst:252
msgid ""
"For pseudocolor formats, applications set the grayscale field to zero. The "
"red, blue, green and transp fields must be set to 0 by applications and "
"ignored by drivers. Drivers must fill the red, blue and green offsets to 0 "
"and lengths to the bits_per_pixel value."
msgstr ""

#: ../../../fb/api.rst:257
msgid ""
"For truecolor and directcolor formats, applications set the grayscale field "
"to zero, and the red, blue, green and transp fields to describe the layout "
"of color components in memory::"
msgstr ""

#: ../../../fb/api.rst:268
msgid ""
"Pixel values are bits_per_pixel wide and are split in non-overlapping red, "
"green, blue and alpha (transparency) components. Location and size of each "
"component in the pixel value are described by the fb_bitfield offset and "
"length fields. Offset are computed from the right."
msgstr ""

#: ../../../fb/api.rst:273
msgid ""
"Pixels are always stored in an integer number of bytes. If the number of "
"bits per pixel is not a multiple of 8, pixel values are padded to the next "
"multiple of 8 bits."
msgstr ""

#: ../../../fb/api.rst:277
msgid ""
"Upon successful format configuration, drivers update the fb_fix_screeninfo "
"type, visual and line_length fields depending on the selected format."
msgstr ""

#: ../../../fb/api.rst:281
msgid ""
"The FOURCC-based API replaces format descriptions by four character codes "
"(FOURCC). FOURCCs are abstract identifiers that uniquely define a format "
"without explicitly describing it. This is the only API that supports YUV "
"formats. Drivers are also encouraged to implement the FOURCC-based API for "
"RGB and grayscale formats."
msgstr ""

#: ../../../fb/api.rst:287
msgid ""
"Drivers that support the FOURCC-based API report this capability by setting "
"the FB_CAP_FOURCC bit in the fb_fix_screeninfo capabilities field."
msgstr ""

#: ../../../fb/api.rst:290
msgid ""
"FOURCC definitions are located in the linux/videodev2.h header. However, and "
"despite starting with the V4L2_PIX_FMT_prefix, they are not restricted to "
"V4L2 and don't require usage of the V4L2 subsystem. FOURCC documentation is "
"available in Documentation/userspace-api/media/v4l/pixfmt.rst."
msgstr ""

#: ../../../fb/api.rst:295
msgid ""
"To select a format, applications set the grayscale field to the desired "
"FOURCC. For YUV formats, they should also select the appropriate colorspace "
"by setting the colorspace field to one of the colorspaces listed in linux/"
"videodev2.h and documented in Documentation/userspace-api/media/v4l/"
"colorspaces.rst."
msgstr ""

#: ../../../fb/api.rst:300
msgid ""
"The red, green, blue and transp fields are not used with the FOURCC-based "
"API. For forward compatibility reasons applications must zero those fields, "
"and drivers must ignore them. Values other than 0 may get a meaning in "
"future extensions."
msgstr ""

#: ../../../fb/api.rst:305
msgid ""
"Upon successful format configuration, drivers update the fb_fix_screeninfo "
"type, visual and line_length fields depending on the selected format. The "
"type and visual fields are set to FB_TYPE_FOURCC and FB_VISUAL_FOURCC "
"respectively."
msgstr ""
