# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../scsi/53c700.rst:5
msgid "The 53c700 Driver Notes"
msgstr ""

#: ../../../scsi/53c700.rst:8
msgid "General Description"
msgstr ""

#: ../../../scsi/53c700.rst:10
msgid ""
"This driver supports the 53c700 and 53c700-66 chips.  It also supports the "
"53c710 but only in 53c700 emulation mode.  It is full featured and does sync "
"(-66 and 710 only), disconnects and tag command queueing."
msgstr ""

#: ../../../scsi/53c700.rst:14
msgid ""
"Since the 53c700 must be interfaced to a bus, you need to wrapper the card "
"detector around this driver.  For an example, see the NCR_D700.[ch] or "
"lasi700.[ch] files."
msgstr ""

#: ../../../scsi/53c700.rst:18
msgid ""
"The comments in the 53c700.[ch] files tell you which parts you need to fill "
"in to get the driver working."
msgstr ""

#: ../../../scsi/53c700.rst:23
msgid "Compile Time Flags"
msgstr ""

#: ../../../scsi/53c700.rst:25
msgid "A compile time flag is::"
msgstr ""

#: ../../../scsi/53c700.rst:29
msgid ""
"define if the chipset must be supported in little endian mode on a big "
"endian architecture (used for the 700 on parisc)."
msgstr ""

#: ../../../scsi/53c700.rst:34
msgid "Using the Chip Core Driver"
msgstr ""

#: ../../../scsi/53c700.rst:36
msgid ""
"In order to plumb the 53c700 chip core driver into a working SCSI driver, "
"you need to know three things about the way the chip is wired into your "
"system (or expansion card)."
msgstr ""

#: ../../../scsi/53c700.rst:40
msgid "The clock speed of the SCSI core"
msgstr ""

#: ../../../scsi/53c700.rst:41
msgid "The interrupt line used"
msgstr ""

#: ../../../scsi/53c700.rst:42
msgid "The memory (or io space) location of the 53c700 registers."
msgstr ""

#: ../../../scsi/53c700.rst:44
msgid ""
"Optionally, you may also need to know other things, like how to read the "
"SCSI Id from the card bios or whether the chip is wired for differential "
"operation."
msgstr ""

#: ../../../scsi/53c700.rst:48
msgid ""
"Usually you can find items 2. and 3. from general spec. documents or even by "
"examining the configuration of a working driver under another operating "
"system."
msgstr ""

#: ../../../scsi/53c700.rst:52
msgid ""
"The clock speed is usually buried deep in the technical literature. It is "
"required because it is used to set up both the synchronous and asynchronous "
"dividers for the chip.  As a general rule of thumb, manufacturers set the "
"clock speed at the lowest possible setting consistent with the best "
"operation of the chip (although some choose to drive it off the CPU or bus "
"clock rather than going to the expense of an extra clock chip).  The best "
"operation clock speeds are:"
msgstr ""

#: ../../../scsi/53c700.rst:61
msgid "53c700"
msgstr ""

#: ../../../scsi/53c700.rst:61
msgid "25MHz"
msgstr ""

#: ../../../scsi/53c700.rst:62
msgid "53c700-66"
msgstr ""

#: ../../../scsi/53c700.rst:62
msgid "50MHz"
msgstr ""

#: ../../../scsi/53c700.rst:63
msgid "53c710"
msgstr ""

#: ../../../scsi/53c700.rst:63
msgid "40Mhz"
msgstr ""

#: ../../../scsi/53c700.rst:67
msgid "Writing Your Glue Driver"
msgstr ""

#: ../../../scsi/53c700.rst:69
msgid ""
"This will be a standard SCSI driver (I don't know of a good document "
"describing this, just copy from some other driver) with at least a detect "
"and release entry."
msgstr ""

#: ../../../scsi/53c700.rst:73
msgid ""
"In the detect routine, you need to allocate a struct NCR_700_Host_Parameters "
"sized memory area and clear it (so that the default values for everything "
"are 0).  Then you must fill in the parameters that matter to you (see "
"below), plumb the NCR_700_intr routine into the interrupt line and call "
"NCR_700_detect with the host template and the new parameters as arguments.  "
"You should also call the relevant request_*_region function and place the "
"register base address into the 'base' pointer of the host parameters."
msgstr ""

#: ../../../scsi/53c700.rst:82
msgid ""
"In the release routine, you must free the NCR_700_Host_Parameters that you "
"allocated, call the corresponding release_*_region and free the interrupt."
msgstr ""

#: ../../../scsi/53c700.rst:87
msgid "Handling Interrupts"
msgstr ""

#: ../../../scsi/53c700.rst:89
msgid "In general, you should just plumb the card's interrupt line in with"
msgstr ""

#: ../../../scsi/53c700.rst:91
msgid "request_irq(irq, NCR_700_intr, <irq flags>, <driver name>, host);"
msgstr ""

#: ../../../scsi/53c700.rst:93
msgid "where host is the return from the relevant NCR_700_detect() routine."
msgstr ""

#: ../../../scsi/53c700.rst:95
msgid ""
"You may also write your own interrupt handling routine which calls "
"NCR_700_intr() directly.  However, you should only really do this if you "
"have a card with more than one chip on it and you can read a register to "
"tell which set of chips wants the interrupt."
msgstr ""

#: ../../../scsi/53c700.rst:101
msgid "Settable NCR_700_Host_Parameters"
msgstr ""

#: ../../../scsi/53c700.rst:103
msgid "The following are a list of the user settable parameters:"
msgstr ""

#: ../../../scsi/53c700.rst:105
msgid "clock: (MANDATORY)"
msgstr ""

#: ../../../scsi/53c700.rst:106
msgid "Set to the clock speed of the chip in MHz."
msgstr ""

#: ../../../scsi/53c700.rst:108
msgid "base: (MANDATORY)"
msgstr ""

#: ../../../scsi/53c700.rst:109
msgid ""
"Set to the base of the io or mem region for the register set. On 64 bit "
"architectures this is only 32 bits wide, so the registers must be mapped "
"into the low 32 bits of memory."
msgstr ""

#: ../../../scsi/53c700.rst:113
msgid "pci_dev: (OPTIONAL)"
msgstr ""

#: ../../../scsi/53c700.rst:114
msgid ""
"Set to the PCI board device.  Leave NULL for a non-pci board.  This is used "
"for the pci_alloc_consistent() and pci_map_*() functions."
msgstr ""

#: ../../../scsi/53c700.rst:117
msgid "dmode_extra: (OPTIONAL, 53c710 only)"
msgstr ""

#: ../../../scsi/53c700.rst:118
msgid ""
"Extra flags for the DMODE register.  These are used to control bus output "
"pins on the 710.  The settings should be a combination of DMODE_FC1 and "
"DMODE_FC2.  What these pins actually do is entirely up to the board "
"designer.  Usually it is safe to ignore this setting."
msgstr ""

#: ../../../scsi/53c700.rst:123
msgid "differential: (OPTIONAL)"
msgstr ""

#: ../../../scsi/53c700.rst:124
msgid "Set to 1 if the chip drives a differential bus."
msgstr ""

#: ../../../scsi/53c700.rst:126
msgid "force_le_on_be: (OPTIONAL, only if CONFIG_53C700_LE_ON_BE is set)"
msgstr ""

#: ../../../scsi/53c700.rst:127
msgid ""
"Set to 1 if the chip is operating in little endian mode on a big endian "
"architecture."
msgstr ""

#: ../../../scsi/53c700.rst:130
msgid "chip710: (OPTIONAL)"
msgstr ""

#: ../../../scsi/53c700.rst:131
msgid "Set to 1 if the chip is a 53c710."
msgstr ""

#: ../../../scsi/53c700.rst:133
msgid "burst_disable: (OPTIONAL, 53c710 only)"
msgstr ""

#: ../../../scsi/53c700.rst:134
msgid "Disable 8 byte bursting for DMA transfers."
msgstr ""
