# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../arch/arm/firmware.rst:3
msgid ""
"Interface for registering and calling firmware-specific operations for ARM"
msgstr ""

#: ../../../arch/arm/firmware.rst:5
msgid "Written by Tomasz Figa <t.figa@samsung.com>"
msgstr ""

#: ../../../arch/arm/firmware.rst:7
msgid ""
"Some boards are running with secure firmware running in TrustZone secure "
"world, which changes the way some things have to be initialized. This makes "
"a need to provide an interface for such platforms to specify available "
"firmware operations and call them when needed."
msgstr ""

#: ../../../arch/arm/firmware.rst:12
msgid ""
"Firmware operations can be specified by filling in a struct firmware_ops "
"with appropriate callbacks and then registering it with "
"register_firmware_ops() function::"
msgstr ""

#: ../../../arch/arm/firmware.rst:18
msgid ""
"The ops pointer must be non-NULL. More information about struct firmware_ops "
"and its members can be found in arch/arm/include/asm/firmware.h header."
msgstr ""

#: ../../../arch/arm/firmware.rst:21
msgid ""
"There is a default, empty set of operations provided, so there is no need to "
"set anything if platform does not require firmware operations."
msgstr ""

#: ../../../arch/arm/firmware.rst:24
msgid "To call a firmware operation, a helper macro is provided::"
msgstr ""

#: ../../../arch/arm/firmware.rst:29
msgid ""
"the macro checks if the operation is provided and calls it or otherwise "
"returns -ENOSYS to signal that given operation is not available (for "
"example, to allow fallback to legacy operation)."
msgstr ""

#: ../../../arch/arm/firmware.rst:33
msgid "Example of registering firmware operations::"
msgstr ""

#: ../../../arch/arm/firmware.rst:61
msgid "Example of using a firmware operation::"
msgstr ""
