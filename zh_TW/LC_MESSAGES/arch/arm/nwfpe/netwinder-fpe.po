# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../arch/arm/nwfpe/netwinder-fpe.rst:3
msgid "Current State"
msgstr ""

#: ../../../arch/arm/nwfpe/netwinder-fpe.rst:5
msgid ""
"The following describes the current state of the NetWinder's floating point "
"emulator."
msgstr ""

#: ../../../arch/arm/nwfpe/netwinder-fpe.rst:8
msgid ""
"In the following nomenclature is used to describe the floating point "
"instructions.  It follows the conventions in the ARM manual."
msgstr ""

#: ../../../arch/arm/nwfpe/netwinder-fpe.rst:17
msgid "Note: items enclosed in {} are optional."
msgstr ""

#: ../../../arch/arm/nwfpe/netwinder-fpe.rst:20
msgid "Floating Point Coprocessor Data Transfer Instructions (CPDT)"
msgstr ""

#: ../../../arch/arm/nwfpe/netwinder-fpe.rst:22
msgid "LDF/STF - load and store floating"
msgstr ""

#: ../../../arch/arm/nwfpe/netwinder-fpe.rst:24
msgid ""
"<LDF|STF>{cond}<S|D|E> Fd, Rn <LDF|STF>{cond}<S|D|E> Fd, [Rn, #<expression>]"
"{!} <LDF|STF>{cond}<S|D|E> Fd, [Rn], #<expression>"
msgstr ""

#: ../../../arch/arm/nwfpe/netwinder-fpe.rst:28
msgid "These instructions are fully implemented."
msgstr ""

#: ../../../arch/arm/nwfpe/netwinder-fpe.rst:30
msgid "LFM/SFM - load and store multiple floating"
msgstr ""

#: ../../../arch/arm/nwfpe/netwinder-fpe.rst:32
msgid ""
"Form 1 syntax: <LFM|SFM>{cond}<S|D|E> Fd, <count>, [Rn] <LFM|SFM>{cond}<S|D|"
"E> Fd, <count>, [Rn, #<expression>]{!} <LFM|SFM>{cond}<S|D|E> Fd, <count>, "
"[Rn], #<expression>"
msgstr ""

#: ../../../arch/arm/nwfpe/netwinder-fpe.rst:37
msgid "Form 2 syntax: <LFM|SFM>{cond}<FD,EA> Fd, <count>, [Rn]{!}"
msgstr ""

#: ../../../arch/arm/nwfpe/netwinder-fpe.rst:40
msgid ""
"These instructions are fully implemented.  They store/load three words for "
"each floating point register into the memory location given in the "
"instruction.  The format in memory is unlikely to be compatible with other "
"implementations, in particular the actual hardware.  Specific mention of "
"this is made in the ARM manuals."
msgstr ""

#: ../../../arch/arm/nwfpe/netwinder-fpe.rst:47
msgid "Floating Point Coprocessor Register Transfer Instructions (CPRT)"
msgstr ""

#: ../../../arch/arm/nwfpe/netwinder-fpe.rst:49
msgid "Conversions, read/write status/control register instructions"
msgstr ""

#: ../../../arch/arm/nwfpe/netwinder-fpe.rst:51
msgid ""
"FLT{cond}<S,D,E>{P,M,Z} Fn, Rd          Convert integer to floating point "
"FIX{cond}{P,M,Z} Rd, Fn                 Convert floating point to integer "
"WFS{cond} Rd                            Write floating point status register "
"RFS{cond} Rd                            Read floating point status register "
"WFC{cond} Rd                            Write floating point control "
"register RFC{cond} Rd                            Read floating point control "
"register"
msgstr ""

#: ../../../arch/arm/nwfpe/netwinder-fpe.rst:58
msgid "FLT/FIX are fully implemented."
msgstr ""

#: ../../../arch/arm/nwfpe/netwinder-fpe.rst:60
msgid "RFS/WFS are fully implemented."
msgstr ""

#: ../../../arch/arm/nwfpe/netwinder-fpe.rst:62
msgid ""
"RFC/WFC are fully implemented.  RFC/WFC are supervisor only instructions, "
"and presently check the CPU mode, and do an invalid instruction trap if not "
"called from supervisor mode."
msgstr ""

#: ../../../arch/arm/nwfpe/netwinder-fpe.rst:66
msgid "Compare instructions"
msgstr ""

#: ../../../arch/arm/nwfpe/netwinder-fpe.rst:68
msgid ""
"CMF{cond} Fn, Fm        Compare floating CMFE{cond} Fn, Fm       Compare "
"floating with exception CNF{cond} Fn, Fm        Compare negated floating "
"CNFE{cond} Fn, Fm       Compare negated floating with exception"
msgstr ""

#: ../../../arch/arm/nwfpe/netwinder-fpe.rst:73
#: ../../../arch/arm/nwfpe/netwinder-fpe.rst:87
#: ../../../arch/arm/nwfpe/netwinder-fpe.rst:110
#: ../../../arch/arm/nwfpe/netwinder-fpe.rst:116
msgid "These are fully implemented."
msgstr ""

#: ../../../arch/arm/nwfpe/netwinder-fpe.rst:76
msgid "Floating Point Coprocessor Data Instructions (CPDT)"
msgstr ""

#: ../../../arch/arm/nwfpe/netwinder-fpe.rst:78
msgid "Dyadic operations:"
msgstr ""

#: ../../../arch/arm/nwfpe/netwinder-fpe.rst:80
msgid ""
"ADF{cond}<S|D|E>{P,M,Z} Fd, Fn, <Fm,#value> - add SUF{cond}<S|D|E>{P,M,Z} "
"Fd, Fn, <Fm,#value> - subtract RSF{cond}<S|D|E>{P,M,Z} Fd, Fn, <Fm,#value> - "
"reverse subtract MUF{cond}<S|D|E>{P,M,Z} Fd, Fn, <Fm,#value> - multiply "
"DVF{cond}<S|D|E>{P,M,Z} Fd, Fn, <Fm,#value> - divide RDV{cond}<S|D|E>{P,M,Z} "
"Fd, Fn, <Fm,#value> - reverse divide"
msgstr ""

#: ../../../arch/arm/nwfpe/netwinder-fpe.rst:89
msgid ""
"FML{cond}<S|D|E>{P,M,Z} Fd, Fn, <Fm,#value> - fast multiply FDV{cond}<S|D|"
"E>{P,M,Z} Fd, Fn, <Fm,#value> - fast divide FRD{cond}<S|D|E>{P,M,Z} Fd, Fn, "
"<Fm,#value> - fast reverse divide"
msgstr ""

#: ../../../arch/arm/nwfpe/netwinder-fpe.rst:93
msgid ""
"These are fully implemented as well.  They use the same algorithm as the non-"
"fast versions.  Hence, in this implementation their performance is "
"equivalent to the MUF/DVF/RDV instructions.  This is acceptable according to "
"the ARM manual.  The manual notes these are defined only for single "
"operands, on the actual FPA11 hardware they do not work for double or "
"extended precision operands.  The emulator currently does not check the "
"requested permissions conditions, and performs the requested operation."
msgstr ""

#: ../../../arch/arm/nwfpe/netwinder-fpe.rst:101
msgid "RMF{cond}<S|D|E>{P,M,Z} Fd, Fn, <Fm,#value> - IEEE remainder"
msgstr ""

#: ../../../arch/arm/nwfpe/netwinder-fpe.rst:103
msgid "This is fully implemented."
msgstr ""

#: ../../../arch/arm/nwfpe/netwinder-fpe.rst:105
msgid "Monadic operations:"
msgstr ""

#: ../../../arch/arm/nwfpe/netwinder-fpe.rst:107
msgid ""
"MVF{cond}<S|D|E>{P,M,Z} Fd, <Fm,#value> - move MNF{cond}<S|D|E>{P,M,Z} Fd, "
"<Fm,#value> - move negated"
msgstr ""

#: ../../../arch/arm/nwfpe/netwinder-fpe.rst:112
msgid ""
"ABS{cond}<S|D|E>{P,M,Z} Fd, <Fm,#value> - absolute value SQT{cond}<S|D|E>{P,"
"M,Z} Fd, <Fm,#value> - square root RND{cond}<S|D|E>{P,M,Z} Fd, <Fm,#value> - "
"round"
msgstr ""

#: ../../../arch/arm/nwfpe/netwinder-fpe.rst:118
msgid ""
"URD{cond}<S|D|E>{P,M,Z} Fd, <Fm,#value> - unnormalized round NRM{cond}<S|D|"
"E>{P,M,Z} Fd, <Fm,#value> - normalize"
msgstr ""

#: ../../../arch/arm/nwfpe/netwinder-fpe.rst:121
msgid ""
"These are implemented.  URD is implemented using the same code as the RND "
"instruction.  Since URD cannot return a unnormalized number, NRM becomes a "
"NOP."
msgstr ""

#: ../../../arch/arm/nwfpe/netwinder-fpe.rst:125
msgid "Library calls:"
msgstr ""

#: ../../../arch/arm/nwfpe/netwinder-fpe.rst:127
msgid ""
"POW{cond}<S|D|E>{P,M,Z} Fd, Fn, <Fm,#value> - power RPW{cond}<S|D|E>{P,M,Z} "
"Fd, Fn, <Fm,#value> - reverse power POL{cond}<S|D|E>{P,M,Z} Fd, Fn, <Fm,"
"#value> - polar angle (arctan2)"
msgstr ""

#: ../../../arch/arm/nwfpe/netwinder-fpe.rst:131
msgid ""
"LOG{cond}<S|D|E>{P,M,Z} Fd, <Fm,#value> - logarithm to base 10 LGN{cond}<S|D|"
"E>{P,M,Z} Fd, <Fm,#value> - logarithm to base e EXP{cond}<S|D|E>{P,M,Z} Fd, "
"<Fm,#value> - exponent SIN{cond}<S|D|E>{P,M,Z} Fd, <Fm,#value> - sine "
"COS{cond}<S|D|E>{P,M,Z} Fd, <Fm,#value> - cosine TAN{cond}<S|D|E>{P,M,Z} Fd, "
"<Fm,#value> - tangent ASN{cond}<S|D|E>{P,M,Z} Fd, <Fm,#value> - arcsine "
"ACS{cond}<S|D|E>{P,M,Z} Fd, <Fm,#value> - arccosine ATN{cond}<S|D|E>{P,M,Z} "
"Fd, <Fm,#value> - arctangent"
msgstr ""

#: ../../../arch/arm/nwfpe/netwinder-fpe.rst:141
msgid ""
"These are not implemented.  They are not currently issued by the compiler, "
"and are handled by routines in libc.  These are not implemented by the FPA11 "
"hardware, but are handled by the floating point support code.  They should "
"be implemented in future versions."
msgstr ""

#: ../../../arch/arm/nwfpe/netwinder-fpe.rst:146
msgid "Signalling:"
msgstr ""

#: ../../../arch/arm/nwfpe/netwinder-fpe.rst:148
msgid ""
"Signals are implemented.  However current ELF kernels produced by Rebel.com "
"have a bug in them that prevents the module from generating a SIGFPE.  This "
"is caused by a failure to alias fp_current to the kernel variable "
"current_set[0] correctly."
msgstr ""

#: ../../../arch/arm/nwfpe/netwinder-fpe.rst:153
msgid ""
"The kernel provided with this distribution (vmlinux-nwfpe-0.93) contains a "
"fix for this problem and also incorporates the current version of the "
"emulator directly.  It is possible to run with no floating point module "
"loaded with this kernel.  It is provided as a demonstration of the "
"technology and for those who want to do floating point work that depends on "
"signals.  It is not strictly necessary to use the module."
msgstr ""

#: ../../../arch/arm/nwfpe/netwinder-fpe.rst:160
msgid ""
"A module (either the one provided by Russell King, or the one in this "
"distribution) can be loaded to replace the functionality of the emulator "
"built into the kernel."
msgstr ""
