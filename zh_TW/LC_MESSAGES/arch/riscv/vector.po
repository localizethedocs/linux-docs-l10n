# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-30 08:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../arch/riscv/vector.rst:5
msgid "Vector Extension Support for RISC-V Linux"
msgstr ""

#: ../../../arch/riscv/vector.rst:7
msgid ""
"This document briefly outlines the interface provided to userspace by Linux "
"in order to support the use of the RISC-V Vector Extension."
msgstr ""

#: ../../../arch/riscv/vector.rst:11
msgid "1.  prctl() Interface"
msgstr ""

#: ../../../arch/riscv/vector.rst:13
msgid ""
"Two new prctl() calls are added to allow programs to manage the enablement "
"status for the use of Vector in userspace. The intended usage guideline for "
"these interfaces is to give init systems a way to modify the availability of "
"V for processes running under its domain. Calling these interfaces is not "
"recommended in libraries routines because libraries should not override "
"policies configured from the parent process. Also, users must note that "
"these interfaces are not portable to non-Linux, nor non-RISC-V environments, "
"so it is discourage to use in a portable code. To get the availability of V "
"in an ELF program, please read :c:macro:`COMPAT_HWCAP_ISA_V` bit of :c:macro:"
"`ELF_HWCAP` in the auxiliary vector."
msgstr ""

#: ../../../arch/riscv/vector.rst:24
msgid "prctl(PR_RISCV_V_SET_CONTROL, unsigned long arg)"
msgstr ""

#: ../../../arch/riscv/vector.rst:26
msgid ""
"Sets the Vector enablement status of the calling thread, where the control "
"argument consists of two 2-bit enablement statuses and a bit for inheritance "
"mode. Other threads of the calling process are unaffected."
msgstr ""

#: ../../../arch/riscv/vector.rst:30
msgid ""
"Enablement status is a tri-state value each occupying 2-bit of space in the "
"control argument:"
msgstr ""

#: ../../../arch/riscv/vector.rst:33
msgid ""
":c:macro:`PR_RISCV_V_VSTATE_CTRL_DEFAULT`: Use the system-wide default "
"enablement status on execve(). The system-wide default setting can be "
"controlled via sysctl interface (see sysctl section below)."
msgstr ""

#: ../../../arch/riscv/vector.rst:37
msgid ""
":c:macro:`PR_RISCV_V_VSTATE_CTRL_ON`: Allow Vector to be run for the thread."
msgstr ""

#: ../../../arch/riscv/vector.rst:40
msgid ""
":c:macro:`PR_RISCV_V_VSTATE_CTRL_OFF`: Disallow Vector. Executing Vector "
"instructions under such condition will trap and casuse the termination of "
"the thread."
msgstr ""

#: ../../../arch/riscv/vector.rst:43
msgid ""
"arg: The control argument is a 5-bit value consisting of 3 parts, and "
"accessed by 3 masks respectively."
msgstr ""

#: ../../../arch/riscv/vector.rst:46
msgid ""
"The 3 masks, PR_RISCV_V_VSTATE_CTRL_CUR_MASK, "
"PR_RISCV_V_VSTATE_CTRL_NEXT_MASK, and PR_RISCV_V_VSTATE_CTRL_INHERIT "
"represents bit[1:0], bit[3:2], and bit[4]. bit[1:0] accounts for the "
"enablement status of current thread, and the setting at bit[3:2] takes place "
"at next execve(). bit[4] defines the inheritance mode of the setting in "
"bit[3:2]."
msgstr ""

#: ../../../arch/riscv/vector.rst:53
msgid ""
":c:macro:`PR_RISCV_V_VSTATE_CTRL_CUR_MASK`: bit[1:0]: Account for the Vector "
"enablement status for the calling thread. The calling thread is not able to "
"turn off Vector once it has been enabled. The prctl() call fails with EPERM "
"if the value in this mask is PR_RISCV_V_VSTATE_CTRL_OFF but the current "
"enablement status is not off. Setting PR_RISCV_V_VSTATE_CTRL_DEFAULT here "
"takes no effect but to set back the original enablement status."
msgstr ""

#: ../../../arch/riscv/vector.rst:61
msgid ""
":c:macro:`PR_RISCV_V_VSTATE_CTRL_NEXT_MASK`: bit[3:2]: Account for the "
"Vector enablement setting for the calling thread at the next execve() system "
"call. If PR_RISCV_V_VSTATE_CTRL_DEFAULT is used in this mask, then the "
"enablement status will be decided by the system-wide enablement status when "
"execve() happen."
msgstr ""

#: ../../../arch/riscv/vector.rst:67
msgid ""
":c:macro:`PR_RISCV_V_VSTATE_CTRL_INHERIT`: bit[4]: the inheritance mode for "
"the setting at PR_RISCV_V_VSTATE_CTRL_NEXT_MASK. If the bit is set then the "
"following execve() will not clear the setting in both "
"PR_RISCV_V_VSTATE_CTRL_NEXT_MASK and PR_RISCV_V_VSTATE_CTRL_INHERIT. This "
"setting persists across changes in the system-wide default value."
msgstr ""

#: ../../../arch/riscv/vector.rst:73 ../../../arch/riscv/vector.rst:98
msgid "Return value:"
msgstr ""

#: ../../../arch/riscv/vector.rst:74
msgid "0 on success;"
msgstr ""

#: ../../../arch/riscv/vector.rst:75
msgid ""
"EINVAL: Vector not supported, invalid enablement status for current or next "
"mask;"
msgstr ""

#: ../../../arch/riscv/vector.rst:77
msgid ""
"EPERM: Turning off Vector in PR_RISCV_V_VSTATE_CTRL_CUR_MASK if Vector was "
"enabled for the calling thread."
msgstr ""

#: ../../../arch/riscv/vector.rst:80
msgid "On success:"
msgstr ""

#: ../../../arch/riscv/vector.rst:81
msgid ""
"A valid setting for PR_RISCV_V_VSTATE_CTRL_CUR_MASK takes place immediately. "
"The enablement status specified in PR_RISCV_V_VSTATE_CTRL_NEXT_MASK happens "
"at the next execve() call, or all following execve() calls if "
"PR_RISCV_V_VSTATE_CTRL_INHERIT bit is set."
msgstr ""

#: ../../../arch/riscv/vector.rst:86
msgid ""
"Every successful call overwrites a previous setting for the calling thread."
msgstr ""

#: ../../../arch/riscv/vector.rst:89
msgid "prctl(PR_RISCV_V_GET_CONTROL)"
msgstr ""

#: ../../../arch/riscv/vector.rst:91
msgid ""
"Gets the same Vector enablement status for the calling thread. Setting for "
"next execve() call and the inheritance bit are all OR-ed together."
msgstr ""

#: ../../../arch/riscv/vector.rst:94
msgid ""
"Note that ELF programs are able to get the availability of V for itself by "
"reading :c:macro:`COMPAT_HWCAP_ISA_V` bit of :c:macro:`ELF_HWCAP` in the "
"auxiliary vector."
msgstr ""

#: ../../../arch/riscv/vector.rst:99
msgid "a nonnegative value on success;"
msgstr ""

#: ../../../arch/riscv/vector.rst:100
msgid "EINVAL: Vector not supported."
msgstr ""

#: ../../../arch/riscv/vector.rst:103
msgid "2.  System runtime configuration (sysctl)"
msgstr ""

#: ../../../arch/riscv/vector.rst:105
msgid ""
"To mitigate the ABI impact of expansion of the signal stack, a policy "
"mechanism is provided to the administrators, distro maintainers, and "
"developers to control the default Vector enablement status for userspace "
"processes in form of sysctl knob:"
msgstr ""

#: ../../../arch/riscv/vector.rst:110
msgid "/proc/sys/abi/riscv_v_default_allow"
msgstr ""

#: ../../../arch/riscv/vector.rst:112
msgid ""
"Writing the text representation of 0 or 1 to this file sets the default "
"system enablement status for new starting userspace programs. Valid values "
"are:"
msgstr ""

#: ../../../arch/riscv/vector.rst:116
msgid ""
"0: Do not allow Vector code to be executed as the default for new processes."
msgstr ""

#: ../../../arch/riscv/vector.rst:117
msgid "1: Allow Vector code to be executed as the default for new processes."
msgstr ""

#: ../../../arch/riscv/vector.rst:119
msgid "Reading this file returns the current system default enablement status."
msgstr ""

#: ../../../arch/riscv/vector.rst:121
msgid ""
"At every execve() call, a new enablement status of the new process is set to "
"the system default, unless:"
msgstr ""

#: ../../../arch/riscv/vector.rst:124
msgid ""
"PR_RISCV_V_VSTATE_CTRL_INHERIT is set for the calling process, and the "
"setting in PR_RISCV_V_VSTATE_CTRL_NEXT_MASK is not "
"PR_RISCV_V_VSTATE_CTRL_DEFAULT. Or,"
msgstr ""

#: ../../../arch/riscv/vector.rst:128
msgid ""
"The setting in PR_RISCV_V_VSTATE_CTRL_NEXT_MASK is not "
"PR_RISCV_V_VSTATE_CTRL_DEFAULT."
msgstr ""

#: ../../../arch/riscv/vector.rst:131
msgid ""
"Modifying the system default enablement status does not affect the "
"enablement status of any existing process of thread that do not make an "
"execve() call."
msgstr ""

#: ../../../arch/riscv/vector.rst:135
msgid "3.  Vector Register State Across System Calls"
msgstr ""

#: ../../../arch/riscv/vector.rst:137
msgid ""
"As indicated by version 1.0 of the V extension [1], vector registers are "
"clobbered by system calls."
msgstr ""

#: ../../../arch/riscv/vector.rst:140
msgid ""
"1: https://github.com/riscv/riscv-v-spec/blob/master/calling-convention.adoc"
msgstr ""
