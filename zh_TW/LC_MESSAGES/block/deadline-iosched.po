# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../block/deadline-iosched.rst:3
msgid "Deadline IO scheduler tunables"
msgstr ""

#: ../../../block/deadline-iosched.rst:5
msgid ""
"This little file attempts to document how the deadline io scheduler works. "
"In particular, it will clarify the meaning of the exposed tunables that may "
"be of interest to power users."
msgstr ""

#: ../../../block/deadline-iosched.rst:10
msgid "Selecting IO schedulers"
msgstr ""

#: ../../../block/deadline-iosched.rst:11
msgid ""
"Refer to Documentation/block/switching-sched.rst for information on "
"selecting an io scheduler on a per-device basis."
msgstr ""

#: ../../../block/deadline-iosched.rst:17
msgid "read_expire     (in ms)"
msgstr ""

#: ../../../block/deadline-iosched.rst:19
msgid ""
"The goal of the deadline io scheduler is to attempt to guarantee a start "
"service time for a request. As we focus mainly on read latencies, this is "
"tunable. When a read request first enters the io scheduler, it is assigned a "
"deadline that is the current time + the read_expire value in units of "
"milliseconds."
msgstr ""

#: ../../../block/deadline-iosched.rst:27
msgid "write_expire    (in ms)"
msgstr ""

#: ../../../block/deadline-iosched.rst:29
msgid "Similar to read_expire mentioned above, but for writes."
msgstr ""

#: ../../../block/deadline-iosched.rst:33
msgid "fifo_batch      (number of requests)"
msgstr ""

#: ../../../block/deadline-iosched.rst:35
msgid ""
"Requests are grouped into ``batches`` of a particular data direction (read "
"or write) which are serviced in increasing sector order.  To limit extra "
"seeking, deadline expiries are only checked between batches.  fifo_batch "
"controls the maximum number of requests per batch."
msgstr ""

#: ../../../block/deadline-iosched.rst:40
msgid ""
"This parameter tunes the balance between per-request latency and aggregate "
"throughput.  When low latency is the primary concern, smaller is better "
"(where a value of 1 yields first-come first-served behaviour).  Increasing "
"fifo_batch generally improves throughput, at the cost of latency variation."
msgstr ""

#: ../../../block/deadline-iosched.rst:47
msgid "writes_starved  (number of dispatches)"
msgstr ""

#: ../../../block/deadline-iosched.rst:49
msgid ""
"When we have to move requests from the io scheduler queue to the block "
"device dispatch queue, we always give a preference to reads. However, we "
"don't want to starve writes indefinitely either. So writes_starved controls "
"how many times we give preference to reads over writes. When that has been "
"done writes_starved number of times, we dispatch some writes based on the "
"same criteria as reads."
msgstr ""

#: ../../../block/deadline-iosched.rst:58
msgid "front_merges    (bool)"
msgstr ""

#: ../../../block/deadline-iosched.rst:60
msgid ""
"Sometimes it happens that a request enters the io scheduler that is "
"contiguous with a request that is already on the queue. Either it fits in "
"the back of that request, or it fits at the front. That is called either a "
"back merge candidate or a front merge candidate. Due to the way files are "
"typically laid out, back merges are much more common than front merges. For "
"some work loads, you may even know that it is a waste of time to spend any "
"time attempting to front merge requests. Setting front_merges to 0 disables "
"this functionality. Front merges may still occur due to the cached "
"last_merge hint, but since that comes at basically 0 cost we leave that on. "
"We simply disable the rbtree front sector lookup when the io scheduler merge "
"function is called."
msgstr ""

#: ../../../block/deadline-iosched.rst:72
msgid "Nov 11 2002, Jens Axboe <jens.axboe@oracle.com>"
msgstr ""
