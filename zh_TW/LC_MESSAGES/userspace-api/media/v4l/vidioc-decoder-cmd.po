# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:8
msgid "ioctl VIDIOC_DECODER_CMD, VIDIOC_TRY_DECODER_CMD"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:11
msgid "Name"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:13
msgid ""
"VIDIOC_DECODER_CMD - VIDIOC_TRY_DECODER_CMD - Execute an decoder command"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:16
msgid "Synopsis"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:20
msgid ""
"``int ioctl(int fd, VIDIOC_DECODER_CMD, struct v4l2_decoder_cmd *argp)``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:24
msgid ""
"``int ioctl(int fd, VIDIOC_TRY_DECODER_CMD, struct v4l2_decoder_cmd *argp)``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:27
msgid "Arguments"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:29
msgid "``fd``"
msgstr "``fd``"

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:30
msgid "File descriptor returned by :c:func:`open()`."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:32
msgid "``argp``"
msgstr "``argp``"

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:33
msgid "pointer to struct :c:type:`v4l2_decoder_cmd`."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:36
msgid "Description"
msgstr "描述"

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:38
msgid ""
"These ioctls control an audio/video (usually MPEG-) decoder. "
"``VIDIOC_DECODER_CMD`` sends a command to the decoder, "
"``VIDIOC_TRY_DECODER_CMD`` can be used to try a command without actually "
"executing it. To send a command applications must initialize all fields of a "
"struct :c:type:`v4l2_decoder_cmd` and call ``VIDIOC_DECODER_CMD`` or "
"``VIDIOC_TRY_DECODER_CMD`` with a pointer to this structure."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:46
msgid ""
"The ``cmd`` field must contain the command code. Some commands use the "
"``flags`` field for additional information."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:49
msgid ""
"A :c:func:`write()` or :ref:`VIDIOC_STREAMON` call sends an implicit START "
"command to the decoder if it has not been started yet. Applies to both "
"queues of mem2mem decoders."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:53
msgid ""
"A :c:func:`close()` or :ref:`VIDIOC_STREAMOFF <VIDIOC_STREAMON>` call of a "
"streaming file descriptor sends an implicit immediate STOP command to the "
"decoder, and all buffered data is discarded. Applies to both queues of "
"mem2mem decoders."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:58
msgid ""
"In principle, these ioctls are optional, not all drivers may support them. "
"They were introduced in Linux 3.3. They are, however, mandatory for stateful "
"mem2mem decoders (as further documented in :ref:`decoder`)."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:68
msgid "struct v4l2_decoder_cmd"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:73
#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:77
#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:100
#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:124
msgid "__u32"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:74
msgid "``cmd``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:76
msgid "The decoder command, see :ref:`decoder-cmds`."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:78
msgid "``flags``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:80
msgid ""
"Flags to go with the command. If no flags are defined for this command, "
"drivers and applications must set this field to zero."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:82
msgid "union {"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:83
msgid "(anonymous)"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:84
#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:110
#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:121
msgid "struct"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:85
msgid "``start``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:87
msgid ""
"Structure containing additional data for the ``V4L2_DEC_CMD_START`` command."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:90
msgid "__s32"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:91
msgid "``speed``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:92
msgid ""
"Playback speed and direction. The playback speed is defined as "
"``speed``/1000 of the normal speed. So 1000 is normal playback. Negative "
"numbers denote reverse playback, so -1000 does reverse playback at normal "
"speed. Speeds -1, 0 and 1 have special meanings: speed 0 is shorthand for "
"1000 (normal playback). A speed of 1 steps just one frame forward, a speed "
"of -1 steps just one frame back."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:101
msgid "``format``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:102
msgid ""
"Format restrictions. This field is set by the driver, not the application. "
"Possible values are ``V4L2_DEC_START_FMT_NONE`` if there are no format "
"restrictions or ``V4L2_DEC_START_FMT_GOP`` if the decoder operates on full "
"GOPs (*Group Of Pictures*). This is usually the case for reverse playback: "
"the decoder needs full GOPs, which it can then play in reverse order. So to "
"implement reverse playback the application must feed the decoder the last "
"GOP in the video file, then the GOP before that, etc. etc."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:111
msgid "``stop``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:113
msgid ""
"Structure containing additional data for the ``V4L2_DEC_CMD_STOP`` command."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:116
msgid "__u64"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:117
msgid "``pts``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:118
msgid ""
"Stop playback at this ``pts`` or immediately if the playback is already past "
"that timestamp. Leave to 0 if you want to stop after the last frame was "
"decoded."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:122
msgid "``raw``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:125
msgid "``data``\\ [16]"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:126
msgid ""
"Reserved for future extensions. Drivers and applications must set the array "
"to zero."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:128
msgid "}"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:138
msgid "Decoder Commands"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:143
msgid "``V4L2_DEC_CMD_START``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:144
msgid "0"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:145
msgid ""
"Start the decoder. When the decoder is already running or paused, this "
"command will just change the playback speed. That means that calling "
"``V4L2_DEC_CMD_START`` when the decoder was paused will *not* resume the "
"decoder. You have to explicitly call ``V4L2_DEC_CMD_RESUME`` for that. This "
"command has one flag: ``V4L2_DEC_CMD_START_MUTE_AUDIO``. If set, then audio "
"will be muted when playing back at a non-standard speed."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:153
msgid ""
"For a device implementing the :ref:`decoder`, once the drain sequence is "
"initiated with the ``V4L2_DEC_CMD_STOP`` command, it must be driven to "
"completion before this command can be invoked.  Any attempt to invoke the "
"command while the drain sequence is in progress will trigger an ``EBUSY`` "
"error code.  The command may be also used to restart the decoder in case of "
"an implicit stop initiated by the decoder itself, without the "
"``V4L2_DEC_CMD_STOP`` being called explicitly. See :ref:`decoder` for more "
"details."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:161
msgid "``V4L2_DEC_CMD_STOP``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:162
msgid "1"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:163
msgid ""
"Stop the decoder. When the decoder is already stopped, this command does "
"nothing. This command has two flags: if ``V4L2_DEC_CMD_STOP_TO_BLACK`` is "
"set, then the decoder will set the picture to black after it stopped "
"decoding. Otherwise the last image will repeat. If "
"``V4L2_DEC_CMD_STOP_IMMEDIATELY`` is set, then the decoder stops immediately "
"(ignoring the ``pts`` value), otherwise it will keep decoding until "
"timestamp >= pts or until the last of the pending data from its internal "
"buffers was decoded."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:173
msgid ""
"For a device implementing the :ref:`decoder`, the command will initiate the "
"drain sequence as documented in :ref:`decoder`.  No flags or other arguments "
"are accepted in this case. Any attempt to invoke the command again before "
"the sequence completes will trigger an ``EBUSY`` error code."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:178
msgid "``V4L2_DEC_CMD_PAUSE``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:179
msgid "2"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:180
msgid ""
"Pause the decoder. When the decoder has not been started yet, the driver "
"will return an ``EPERM`` error code. When the decoder is already paused, "
"this command does nothing. This command has one flag: if "
"``V4L2_DEC_CMD_PAUSE_TO_BLACK`` is set, then set the decoder output to black "
"when paused."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:185
msgid "``V4L2_DEC_CMD_RESUME``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:186
msgid "3"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:187
msgid ""
"Resume decoding after a PAUSE command. When the decoder has not been started "
"yet, the driver will return an ``EPERM`` error code. When the decoder is "
"already running, this command does nothing. No flags are defined for this "
"command."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:191
msgid "``V4L2_DEC_CMD_FLUSH``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:192
msgid "4"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:193
msgid ""
"Flush any held capture buffers. Only valid for stateless decoders. This "
"command is typically used when the application reached the end of the stream "
"and the last output buffer had the ``V4L2_BUF_FLAG_M2M_HOLD_CAPTURE_BUF`` "
"flag set. This would prevent dequeueing the capture buffer containing the "
"last decoded frame. So this command can be used to explicitly flush that "
"final decoded frame. This command does nothing if there are no held capture "
"buffers."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:202
msgid "Return Value"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:204
msgid ""
"On success 0 is returned, on error -1 and the ``errno`` variable is set "
"appropriately. The generic error codes are described at the :ref:`Generic "
"Error Codes <gen-errors>` chapter."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:208
msgid "EBUSY"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:209
msgid ""
"A drain sequence of a device implementing the :ref:`decoder` is still in "
"progress. It is not allowed to issue another decoder command until it "
"completes."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:213
msgid "EINVAL"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:214
msgid "The ``cmd`` field is invalid."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:216
msgid "EPERM"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-decoder-cmd.rst:217
msgid ""
"The application sent a PAUSE or RESUME command when the decoder was not "
"running."
msgstr ""
