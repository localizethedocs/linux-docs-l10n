# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:8
msgid "ioctl VIDIOC_ENCODER_CMD, VIDIOC_TRY_ENCODER_CMD"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:11
msgid "Name"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:13
msgid ""
"VIDIOC_ENCODER_CMD - VIDIOC_TRY_ENCODER_CMD - Execute an encoder command"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:16
msgid "Synopsis"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:20
msgid ""
"``int ioctl(int fd, VIDIOC_ENCODER_CMD, struct v4l2_encoder_cmd *argp)``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:24
msgid ""
"``int ioctl(int fd, VIDIOC_TRY_ENCODER_CMD, struct v4l2_encoder_cmd *argp)``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:27
msgid "Arguments"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:29
msgid "``fd``"
msgstr "``fd``"

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:30
msgid "File descriptor returned by :c:func:`open()`."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:32
msgid "``argp``"
msgstr "``argp``"

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:33
msgid "Pointer to struct :c:type:`v4l2_encoder_cmd`."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:36
msgid "Description"
msgstr "描述"

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:38
msgid ""
"These ioctls control an audio/video (usually MPEG-) encoder. "
"``VIDIOC_ENCODER_CMD`` sends a command to the encoder, "
"``VIDIOC_TRY_ENCODER_CMD`` can be used to try a command without actually "
"executing it."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:43
msgid ""
"To send a command applications must initialize all fields of a struct :c:"
"type:`v4l2_encoder_cmd` and call ``VIDIOC_ENCODER_CMD`` or "
"``VIDIOC_TRY_ENCODER_CMD`` with a pointer to this structure."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:48
msgid ""
"The ``cmd`` field must contain the command code. Some commands use the "
"``flags`` field for additional information."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:51
msgid ""
"After a STOP command, :c:func:`read()` calls will read the remaining data "
"buffered by the driver. When the buffer is empty, :c:func:`read()` will "
"return zero and the next :c:func:`read()` call will restart the encoder."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:56
msgid ""
"A :c:func:`read()` or :ref:`VIDIOC_STREAMON <VIDIOC_STREAMON>` call sends an "
"implicit START command to the encoder if it has not been started yet. "
"Applies to both queues of mem2mem encoders."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:60
msgid ""
"A :c:func:`close()` or :ref:`VIDIOC_STREAMOFF <VIDIOC_STREAMON>` call of a "
"streaming file descriptor sends an implicit immediate STOP to the encoder, "
"and all buffered data is discarded. Applies to both queues of mem2mem "
"encoders."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:65
msgid ""
"These ioctls are optional, not all drivers may support them. They were "
"introduced in Linux 2.6.21. They are, however, mandatory for stateful "
"mem2mem encoders (as further documented in :ref:`encoder`)."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:73
msgid "struct v4l2_encoder_cmd"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:78
#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:81
#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:86
msgid "__u32"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:79
msgid "``cmd``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:80
msgid "The encoder command, see :ref:`encoder-cmds`."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:82
msgid "``flags``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:83
msgid ""
"Flags to go with the command, see :ref:`encoder-flags`. If no flags are "
"defined for this command, drivers and applications must set this field to "
"zero."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:87
msgid "``data``\\ [8]"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:88
msgid ""
"Reserved for future extensions. Drivers and applications must set the array "
"to zero."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:96
msgid "Encoder Commands"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:101
msgid "``V4L2_ENC_CMD_START``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:102
msgid "0"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:103
msgid ""
"Start the encoder. When the encoder is already running or paused, this "
"command does nothing. No flags are defined for this command."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:106
msgid ""
"For a device implementing the :ref:`encoder`, once the drain sequence is "
"initiated with the ``V4L2_ENC_CMD_STOP`` command, it must be driven to "
"completion before this command can be invoked.  Any attempt to invoke the "
"command while the drain sequence is in progress will trigger an ``EBUSY`` "
"error code. See :ref:`encoder` for more details."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:111
msgid "``V4L2_ENC_CMD_STOP``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:112
msgid "1"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:113
msgid ""
"Stop the encoder. When the ``V4L2_ENC_CMD_STOP_AT_GOP_END`` flag is set, "
"encoding will continue until the end of the current *Group Of Pictures*, "
"otherwise encoding will stop immediately. When the encoder is already "
"stopped, this command does nothing."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:118
msgid ""
"For a device implementing the :ref:`encoder`, the command will initiate the "
"drain sequence as documented in :ref:`encoder`. No flags or other arguments "
"are accepted in this case. Any attempt to invoke the command again before "
"the sequence completes will trigger an ``EBUSY`` error code."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:123
msgid "``V4L2_ENC_CMD_PAUSE``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:124
msgid "2"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:125
msgid ""
"Pause the encoder. When the encoder has not been started yet, the driver "
"will return an ``EPERM`` error code. When the encoder is already paused, "
"this command does nothing. No flags are defined for this command."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:129
msgid "``V4L2_ENC_CMD_RESUME``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:130
msgid "3"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:131
msgid ""
"Resume encoding after a PAUSE command. When the encoder has not been started "
"yet, the driver will return an ``EPERM`` error code. When the encoder is "
"already running, this command does nothing. No flags are defined for this "
"command."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:140
msgid "Encoder Command Flags"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:145
msgid "``V4L2_ENC_CMD_STOP_AT_GOP_END``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:146
msgid "0x0001"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:147
msgid ""
"Stop encoding at the end of the current *Group Of Pictures*, rather than "
"immediately."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:150
msgid "Does not apply to :ref:`encoder`."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:153
msgid "Return Value"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:155
msgid ""
"On success 0 is returned, on error -1 and the ``errno`` variable is set "
"appropriately. The generic error codes are described at the :ref:`Generic "
"Error Codes <gen-errors>` chapter."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:159
msgid "EBUSY"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:160
msgid ""
"A drain sequence of a device implementing the :ref:`encoder` is still in "
"progress. It is not allowed to issue another encoder command until it "
"completes."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:164
msgid "EINVAL"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:165
msgid "The ``cmd`` field is invalid."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:167
msgid "EPERM"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-encoder-cmd.rst:168
msgid ""
"The application sent a PAUSE or RESUME command when the encoder was not "
"running."
msgstr ""
