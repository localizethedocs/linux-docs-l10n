# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-30 08:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../userspace-api/netlink/c-code-gen.rst:5
msgid "Netlink spec C code generation"
msgstr ""

#: ../../../userspace-api/netlink/c-code-gen.rst:7
msgid ""
"This document describes how Netlink specifications are used to render C code "
"(uAPI, policies etc.). It also defines the additional properties allowed in "
"older families by the ``genetlink-c`` protocol level, to control the naming."
msgstr ""

#: ../../../userspace-api/netlink/c-code-gen.rst:12
msgid ""
"For brevity this document refers to ``name`` properties of various objects "
"by the object type. For example ``$attr`` is the value of ``name`` in an "
"attribute, and ``$family`` is the name of the family (the global ``name`` "
"property)."
msgstr ""

#: ../../../userspace-api/netlink/c-code-gen.rst:17
msgid ""
"The upper case is used to denote literal values, e.g. ``$family-CMD`` means "
"the concatenation of ``$family``, a dash character, and the literal ``CMD``."
msgstr ""

#: ../../../userspace-api/netlink/c-code-gen.rst:21
msgid ""
"The names of ``#defines`` and enum values are always converted to upper "
"case, and with dashes (``-``) replaced by underscores (``_``)."
msgstr ""

#: ../../../userspace-api/netlink/c-code-gen.rst:24
msgid ""
"If the constructed name is a C keyword, an extra underscore is appended "
"(``do`` -> ``do_``)."
msgstr ""

#: ../../../userspace-api/netlink/c-code-gen.rst:28
msgid "Globals"
msgstr ""

#: ../../../userspace-api/netlink/c-code-gen.rst:30
msgid ""
"``c-family-name`` controls the name of the ``#define`` for the family name, "
"default is ``$family-FAMILY-NAME``."
msgstr ""

#: ../../../userspace-api/netlink/c-code-gen.rst:33
msgid ""
"``c-version-name`` controls the name of the ``#define`` for the version of "
"the family, default is ``$family-FAMILY-VERSION``."
msgstr ""

#: ../../../userspace-api/netlink/c-code-gen.rst:36
msgid ""
"``max-by-define`` selects if max values for enums are defined as a "
"``#define`` rather than inside the enum."
msgstr ""

#: ../../../userspace-api/netlink/c-code-gen.rst:40
msgid "Definitions"
msgstr ""

#: ../../../userspace-api/netlink/c-code-gen.rst:43
msgid "Constants"
msgstr ""

#: ../../../userspace-api/netlink/c-code-gen.rst:45
msgid ""
"Every constant is rendered as a ``#define``. The name of the constant is "
"``$family-$constant`` and the value is rendered as a string or integer "
"according to its type in the spec."
msgstr ""

#: ../../../userspace-api/netlink/c-code-gen.rst:50
msgid "Enums and flags"
msgstr ""

#: ../../../userspace-api/netlink/c-code-gen.rst:52
msgid ""
"Enums are named ``$family-$enum``. The full name can be set directly or "
"suppressed by specifying the ``enum-name`` property. Default entry name is "
"``$family-$enum-$entry``. If ``name-prefix`` is specified it replaces the "
"``$family-$enum`` portion of the entry name."
msgstr ""

#: ../../../userspace-api/netlink/c-code-gen.rst:58
msgid ""
"Boolean ``render-max`` controls creation of the max values (which are "
"enabled by default for attribute enums). These max values are named ``__$pfx-"
"MAX`` and ``$pfx-MAX``. The name of the first value can be overridden via "
"``enum-cnt-name`` property."
msgstr ""

#: ../../../userspace-api/netlink/c-code-gen.rst:64
msgid "Attributes"
msgstr ""

#: ../../../userspace-api/netlink/c-code-gen.rst:66
msgid "Each attribute set (excluding fractional sets) is rendered as an enum."
msgstr ""

#: ../../../userspace-api/netlink/c-code-gen.rst:68
msgid ""
"Attribute enums are traditionally unnamed in netlink headers. If naming is "
"desired ``enum-name`` can be used to specify the name."
msgstr ""

#: ../../../userspace-api/netlink/c-code-gen.rst:71
msgid ""
"The default attribute name prefix is ``$family-A`` if the name of the set is "
"the same as the name of the family and ``$family-A-$set`` if the names "
"differ. The prefix can be overridden by the ``name-prefix`` property of a "
"set. The rest of the section will refer to the prefix as ``$pfx``."
msgstr ""

#: ../../../userspace-api/netlink/c-code-gen.rst:76
msgid "Attributes are named ``$pfx-$attribute``."
msgstr ""

#: ../../../userspace-api/netlink/c-code-gen.rst:78
msgid ""
"Attribute enums end with two special values ``__$pfx-MAX`` and ``$pfx-MAX`` "
"which are used for sizing attribute tables. These two names can be specified "
"directly with the ``attr-cnt-name`` and ``attr-max-name`` properties "
"respectively."
msgstr ""

#: ../../../userspace-api/netlink/c-code-gen.rst:83
msgid ""
"If ``max-by-define`` is set to ``true`` at the global level ``attr-max-"
"name`` will be specified as a ``#define`` rather than an enum value."
msgstr ""

#: ../../../userspace-api/netlink/c-code-gen.rst:87
msgid "Operations"
msgstr ""

#: ../../../userspace-api/netlink/c-code-gen.rst:89
msgid ""
"Operations are named ``$family-CMD-$operation``. If ``name-prefix`` is "
"specified it replaces the ``$family-CMD`` portion of the name."
msgstr ""

#: ../../../userspace-api/netlink/c-code-gen.rst:93
msgid ""
"Similarly to attribute enums operation enums end with special count and max "
"attributes. For operations those attributes can be renamed with ``cmd-cnt-"
"name`` and ``cmd-max-name``. Max will be a define if ``max-by-define`` is "
"``true``."
msgstr ""

#: ../../../userspace-api/netlink/c-code-gen.rst:99
msgid "Multicast groups"
msgstr ""

#: ../../../userspace-api/netlink/c-code-gen.rst:101
msgid ""
"Each multicast group gets a define rendered into the kernel uAPI header. The "
"name of the define is ``$family-MCGRP-$group``, and can be overwritten with "
"the ``c-define-name`` property."
msgstr ""

#: ../../../userspace-api/netlink/c-code-gen.rst:106
msgid "Code generation"
msgstr ""

#: ../../../userspace-api/netlink/c-code-gen.rst:108
msgid ""
"uAPI header is assumed to come from ``<linux/$family.h>`` in the default "
"header search path. It can be changed using the ``uapi-header`` global "
"property."
msgstr ""
