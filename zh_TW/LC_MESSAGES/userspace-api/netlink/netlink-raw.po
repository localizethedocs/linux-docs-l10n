# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-06 15:47+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../userspace-api/netlink/netlink-raw.rst:5
msgid "Netlink specification support for raw Netlink families"
msgstr ""

#: ../../../userspace-api/netlink/netlink-raw.rst:7
msgid ""
"This document describes the additional properties required by raw Netlink "
"families such as ``NETLINK_ROUTE`` which use the ``netlink-raw`` protocol "
"specification."
msgstr ""

#: ../../../userspace-api/netlink/netlink-raw.rst:12
msgid "Specification"
msgstr ""

#: ../../../userspace-api/netlink/netlink-raw.rst:14
msgid ""
"The netlink-raw schema extends the :doc:`genetlink-legacy <genetlink-"
"legacy>` schema with properties that are needed to specify the protocol "
"numbers and multicast IDs used by raw netlink families. See :ref:"
"`classic_netlink` for more information. The raw netlink families also make "
"use of type-specific sub-messages."
msgstr ""

#: ../../../userspace-api/netlink/netlink-raw.rst:21
msgid "Globals"
msgstr ""

#: ../../../userspace-api/netlink/netlink-raw.rst:24
msgid "protonum"
msgstr ""

#: ../../../userspace-api/netlink/netlink-raw.rst:26
msgid ""
"The ``protonum`` property is used to specify the protocol number to use when "
"opening a netlink socket."
msgstr ""

#: ../../../userspace-api/netlink/netlink-raw.rst:39
msgid "Multicast group properties"
msgstr ""

#: ../../../userspace-api/netlink/netlink-raw.rst:42
msgid "value"
msgstr ""

#: ../../../userspace-api/netlink/netlink-raw.rst:44
msgid ""
"The ``value`` property is used to specify the group ID to use for multicast "
"group registration."
msgstr ""

#: ../../../userspace-api/netlink/netlink-raw.rst:62
msgid "Sub-messages"
msgstr ""

#: ../../../userspace-api/netlink/netlink-raw.rst:64
msgid ""
"Several raw netlink families such as :ref:`rt-link<netlink-rt-link>` and :"
"ref:`tc<netlink-tc>` use attribute nesting as an abstraction to carry module "
"specific information."
msgstr ""

#: ../../../userspace-api/netlink/netlink-raw.rst:69
msgid "Conceptually it looks as follows::"
msgstr ""

#: ../../../userspace-api/netlink/netlink-raw.rst:79
msgid ""
"The ``GENERIC ATTRs`` at the outer level are defined in the core (or rt_link "
"or core TC), while specific drivers, TC classifiers, qdiscs etc. can carry "
"their own information wrapped in the ``GENERIC ATTR - wrapper``. Even though "
"the example above shows attributes nesting inside the wrapper, the modules "
"generally have full freedom to define the format of the nest. In practice "
"the payload of the wrapper attr has very similar characteristics to a "
"netlink message. It may contain a fixed header / structure, netlink "
"attributes, or both. Because of those shared characteristics we refer to the "
"payload of the wrapper attribute as a sub-message."
msgstr ""

#: ../../../userspace-api/netlink/netlink-raw.rst:89
msgid ""
"A sub-message attribute uses the value of another attribute as a selector "
"key to choose the right sub-message format. For example if the following "
"attribute has already been decoded:"
msgstr ""

#: ../../../userspace-api/netlink/netlink-raw.rst:97
msgid "and we encounter the following attribute spec:"
msgstr ""

#: ../../../userspace-api/netlink/netlink-raw.rst:107
msgid ""
"Then we look for a sub-message definition called ``linkinfo-data-msg`` and "
"use the value of the ``kind`` attribute i.e. ``gre`` as the key to choose "
"the correct format for the sub-message:"
msgstr ""

#: ../../../userspace-api/netlink/netlink-raw.rst:126
msgid ""
"This would decode the attribute value as a sub-message with the attribute-"
"set called ``linkinfo-gre-attrs`` as the attribute space."
msgstr ""

#: ../../../userspace-api/netlink/netlink-raw.rst:129
msgid ""
"A sub-message can have an optional ``fixed-header`` followed by zero or more "
"attributes from an ``attribute-set``. For example the following ``tc-options-"
"msg`` sub-message defines message formats that use a mixture of ``fixed-"
"header``, ``attribute-set`` or both together:"
msgstr ""

#: ../../../userspace-api/netlink/netlink-raw.rst:151
msgid ""
"Note that a selector attribute must appear in a netlink message before any "
"sub-message attributes that depend on it."
msgstr ""

#: ../../../userspace-api/netlink/netlink-raw.rst:154
msgid ""
"If an attribute such as ``kind`` is defined at more than one nest level, "
"then a sub-message selector will be resolved using the value 'closest' to "
"the selector. For example, if the same attribute name is defined in a nested "
"``attribute-set`` alongside a sub-message selector and also in a top level "
"``attribute-set``, then the selector will be resolved using the value "
"'closest' to the selector. If the value is not present in the message at the "
"same level as defined in the spec then this is an error."
msgstr ""

#: ../../../userspace-api/netlink/netlink-raw.rst:163
msgid "Nested struct definitions"
msgstr ""

#: ../../../userspace-api/netlink/netlink-raw.rst:165
msgid ""
"Many raw netlink families such as :ref:`tc<netlink-tc>` make use of nested "
"struct definitions. The ``netlink-raw`` schema makes it possible to embed a "
"struct within a struct definition using the ``struct`` property. For "
"example, the following struct definition embeds the ``tc-ratespec`` struct "
"definition for both the ``rate`` and the ``peakrate`` members of ``struct tc-"
"tbf-qopt``."
msgstr ""
