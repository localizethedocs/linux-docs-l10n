# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-30 08:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../networking/mac80211-injection.rst:5
msgid "How to use packet injection with mac80211"
msgstr ""

#: ../../../networking/mac80211-injection.rst:7
msgid ""
"mac80211 now allows arbitrary packets to be injected down any Monitor Mode "
"interface from userland.  The packet you inject needs to be composed in the "
"following format::"
msgstr ""

#: ../../../networking/mac80211-injection.rst:15
msgid ""
"The radiotap format is discussed in ./Documentation/networking/radiotap-"
"headers.rst."
msgstr ""

#: ../../../networking/mac80211-injection.rst:18
msgid ""
"Despite many radiotap parameters being currently defined, most only make "
"sense to appear on received packets.  The following information is parsed "
"from the radiotap headers and used to control injection:"
msgstr ""

#: ../../../networking/mac80211-injection.rst:22
msgid "IEEE80211_RADIOTAP_FLAGS"
msgstr ""

#: ../../../networking/mac80211-injection.rst:25
msgid "IEEE80211_RADIOTAP_F_FCS"
msgstr ""

#: ../../../networking/mac80211-injection.rst:25
msgid "FCS will be removed and recalculated"
msgstr ""

#: ../../../networking/mac80211-injection.rst:26
msgid "IEEE80211_RADIOTAP_F_WEP"
msgstr ""

#: ../../../networking/mac80211-injection.rst:26
msgid "frame will be encrypted if key available"
msgstr ""

#: ../../../networking/mac80211-injection.rst:27
msgid "IEEE80211_RADIOTAP_F_FRAG"
msgstr ""

#: ../../../networking/mac80211-injection.rst:27
msgid ""
"frame will be fragmented if longer than the current fragmentation threshold."
msgstr ""

#: ../../../networking/mac80211-injection.rst:31
msgid "IEEE80211_RADIOTAP_TX_FLAGS"
msgstr ""

#: ../../../networking/mac80211-injection.rst:34
msgid "IEEE80211_RADIOTAP_F_TX_NOACK"
msgstr ""

#: ../../../networking/mac80211-injection.rst:34
msgid ""
"frame should be sent without waiting for an ACK even if it is a unicast frame"
msgstr ""

#: ../../../networking/mac80211-injection.rst:38
msgid "IEEE80211_RADIOTAP_RATE"
msgstr ""

#: ../../../networking/mac80211-injection.rst:40
msgid ""
"legacy rate for the transmission (only for devices without own rate control)"
msgstr ""

#: ../../../networking/mac80211-injection.rst:42
msgid "IEEE80211_RADIOTAP_MCS"
msgstr ""

#: ../../../networking/mac80211-injection.rst:44
msgid ""
"HT rate for the transmission (only for devices without own rate control). "
"Also some flags are parsed"
msgstr ""

#: ../../../networking/mac80211-injection.rst:48
msgid "IEEE80211_RADIOTAP_MCS_SGI"
msgstr ""

#: ../../../networking/mac80211-injection.rst:48
msgid "use short guard interval"
msgstr ""

#: ../../../networking/mac80211-injection.rst:49
msgid "IEEE80211_RADIOTAP_MCS_BW_40"
msgstr ""

#: ../../../networking/mac80211-injection.rst:49
msgid "send in HT40 mode"
msgstr ""

#: ../../../networking/mac80211-injection.rst:52
msgid "IEEE80211_RADIOTAP_DATA_RETRIES"
msgstr ""

#: ../../../networking/mac80211-injection.rst:54
msgid ""
"number of retries when either IEEE80211_RADIOTAP_RATE or "
"IEEE80211_RADIOTAP_MCS was used"
msgstr ""

#: ../../../networking/mac80211-injection.rst:57
msgid "IEEE80211_RADIOTAP_VHT"
msgstr ""

#: ../../../networking/mac80211-injection.rst:59
msgid ""
"VHT mcs and number of streams used in the transmission (only for devices "
"without own rate control). Also other fields are parsed"
msgstr ""

#: ../../../networking/mac80211-injection.rst:62
msgid "flags field"
msgstr ""

#: ../../../networking/mac80211-injection.rst:63
msgid "IEEE80211_RADIOTAP_VHT_FLAG_SGI: use short guard interval"
msgstr ""

#: ../../../networking/mac80211-injection.rst:65
msgid "bandwidth field"
msgstr ""

#: ../../../networking/mac80211-injection.rst:66
msgid "1: send using 40MHz channel width"
msgstr ""

#: ../../../networking/mac80211-injection.rst:67
msgid "4: send using 80MHz channel width"
msgstr ""

#: ../../../networking/mac80211-injection.rst:68
msgid "11: send using 160MHz channel width"
msgstr ""

#: ../../../networking/mac80211-injection.rst:70
msgid ""
"The injection code can also skip all other currently defined radiotap fields "
"facilitating replay of captured radiotap headers directly."
msgstr ""

#: ../../../networking/mac80211-injection.rst:73
msgid "Here is an example valid radiotap header defining some parameters::"
msgstr ""

#: ../../../networking/mac80211-injection.rst:82
msgid ""
"The ieee80211 header follows immediately afterwards, looking for example "
"like this::"
msgstr ""

#: ../../../networking/mac80211-injection.rst:91
msgid "Then lastly there is the payload."
msgstr ""

#: ../../../networking/mac80211-injection.rst:93
msgid ""
"After composing the packet contents, it is sent by send()-ing it to a "
"logical mac80211 interface that is in Monitor mode.  Libpcap can also be "
"used, (which is easier than doing the work to bind the socket to the right "
"interface), along the following lines:::"
msgstr ""

#: ../../../networking/mac80211-injection.rst:102
msgid "You can also find a link to a complete inject application here:"
msgstr ""

#: ../../../networking/mac80211-injection.rst:104
msgid "https://wireless.wiki.kernel.org/en/users/Documentation/packetspammer"
msgstr ""

#: ../../../networking/mac80211-injection.rst:106
msgid "Andy Green <andy@warmcat.com>"
msgstr ""
