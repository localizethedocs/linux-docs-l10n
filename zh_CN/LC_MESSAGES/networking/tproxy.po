# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../networking/tproxy.rst:5
msgid "Transparent proxy support"
msgstr ""

#: ../../../networking/tproxy.rst:7
msgid ""
"This feature adds Linux 2.2-like transparent proxy support to current "
"kernels. To use it, enable the socket match and the TPROXY target in your "
"kernel config. You will need policy routing too, so be sure to enable that "
"as well."
msgstr ""

#: ../../../networking/tproxy.rst:11
msgid ""
"From Linux 4.18 transparent proxy support is also available in nf_tables."
msgstr ""

#: ../../../networking/tproxy.rst:14
msgid "1. Making non-local sockets work"
msgstr ""

#: ../../../networking/tproxy.rst:16
msgid ""
"The idea is that you identify packets with destination address matching a "
"local socket on your box, set the packet mark to a certain value::"
msgstr ""

#: ../../../networking/tproxy.rst:24
msgid "Alternatively you can do this in nft with the following commands::"
msgstr ""

#: ../../../networking/tproxy.rst:30
msgid ""
"And then match on that value using policy routing to have those packets "
"delivered locally::"
msgstr ""

#: ../../../networking/tproxy.rst:36
msgid ""
"Because of certain restrictions in the IPv4 routing output code you'll have "
"to modify your application to allow it to send datagrams _from_ non-local IP "
"addresses. All you have to do is enable the (SOL_IP, IP_TRANSPARENT) socket "
"option before calling bind::"
msgstr ""

#: ../../../networking/tproxy.rst:51
msgid ""
"A trivial patch for netcat is available here: http://people.netfilter.org/"
"hidden/tproxy/netcat-ip_transparent-support.patch"
msgstr ""

#: ../../../networking/tproxy.rst:56
msgid "2. Redirecting traffic"
msgstr ""

#: ../../../networking/tproxy.rst:58
msgid ""
"Transparent proxying often involves \"intercepting\" traffic on a router. "
"This is usually done with the iptables REDIRECT target; however, there are "
"serious limitations of that method. One of the major issues is that it "
"actually modifies the packets to change the destination address -- which "
"might not be acceptable in certain situations. (Think of proxying UDP for "
"example: you won't be able to find out the original destination address. "
"Even in case of TCP getting the original destination address is racy.)"
msgstr ""

#: ../../../networking/tproxy.rst:66
msgid ""
"The 'TPROXY' target provides similar functionality without relying on NAT. "
"Simply add rules like this to the iptables ruleset above::"
msgstr ""

#: ../../../networking/tproxy.rst:72
msgid "Or the following rule to nft::"
msgstr ""

#: ../../../networking/tproxy.rst:76
msgid ""
"Note that for this to work you'll have to modify the proxy to enable "
"(SOL_IP, IP_TRANSPARENT) for the listening socket."
msgstr ""

#: ../../../networking/tproxy.rst:79
msgid ""
"As an example implementation, tcprdr is available here: https://git."
"breakpoint.cc/cgit/fw/tcprdr.git/ This tool is written by Florian Westphal "
"and it was used for testing during the nf_tables implementation."
msgstr ""

#: ../../../networking/tproxy.rst:85
msgid "3. Iptables and nf_tables extensions"
msgstr ""

#: ../../../networking/tproxy.rst:87
msgid ""
"To use tproxy you'll need to have the following modules compiled for "
"iptables:"
msgstr ""

#: ../../../networking/tproxy.rst:89
msgid "NETFILTER_XT_MATCH_SOCKET"
msgstr ""

#: ../../../networking/tproxy.rst:90
msgid "NETFILTER_XT_TARGET_TPROXY"
msgstr ""

#: ../../../networking/tproxy.rst:92
msgid "Or the floowing modules for nf_tables:"
msgstr ""

#: ../../../networking/tproxy.rst:94
msgid "NFT_SOCKET"
msgstr ""

#: ../../../networking/tproxy.rst:95
msgid "NFT_TPROXY"
msgstr ""

#: ../../../networking/tproxy.rst:98
msgid "4. Application support"
msgstr ""

#: ../../../networking/tproxy.rst:101
msgid "4.1. Squid"
msgstr ""

#: ../../../networking/tproxy.rst:103
msgid ""
"Squid 3.HEAD has support built-in. To use it, pass '--enable-linux-"
"netfilter' to configure and set the 'tproxy' option on the HTTP listener you "
"redirect traffic to with the TPROXY iptables target."
msgstr ""

#: ../../../networking/tproxy.rst:108
msgid ""
"For more information please consult the following page on the Squid wiki: "
"http://wiki.squid-cache.org/Features/Tproxy4"
msgstr ""
