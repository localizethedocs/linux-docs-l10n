# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-30 08:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:5
msgid "Linux kernel driver for Elastic Network Adapter (ENA) family"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:8
msgid "Overview"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:10
msgid ""
"ENA is a networking interface designed to make good use of modern CPU "
"features and system architectures."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:13
msgid ""
"The ENA device exposes a lightweight management interface with a minimal set "
"of memory mapped registers and extendible command set through an Admin Queue."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:17
msgid ""
"The driver supports a range of ENA devices, is link-speed independent (i.e., "
"the same driver is used for 10GbE, 25GbE, 40GbE, etc), and has a negotiated "
"and extendible feature set."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:21
msgid ""
"Some ENA devices support SR-IOV. This driver is used for both the SR-IOV "
"Physical Function (PF) and Virtual Function (VF) devices."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:24
msgid ""
"ENA devices enable high speed and low overhead network traffic processing by "
"providing multiple Tx/Rx queue pairs (the maximum number is advertised by "
"the device via the Admin Queue), a dedicated MSI-X interrupt vector per Tx/"
"Rx queue pair, adaptive interrupt moderation, and CPU cacheline optimized "
"data placement."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:30
msgid ""
"The ENA driver supports industry standard TCP/IP offload features such as "
"checksum offload. Receive-side scaling (RSS) is supported for multi-core "
"scaling."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:34
msgid ""
"The ENA driver and its corresponding devices implement health monitoring "
"mechanisms such as watchdog, enabling the device and driver to recover in a "
"manner transparent to the application, as well as debug logs."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:39
msgid ""
"Some of the ENA devices support a working mode called Low-latency Queue "
"(LLQ), which saves several more microseconds."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:43
msgid "ENA Source Code Directory Structure"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:46
msgid "ena_com.[ch]"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:46
msgid ""
"Management communication layer. This layer is responsible for the handling "
"all the management (admin) communication between the device and the driver."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:50
msgid "ena_eth_com.[ch]"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:50
msgid "Tx/Rx data path."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:51
msgid "ena_admin_defs.h"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:51
msgid "Definition of ENA management interface."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:52
msgid "ena_eth_io_defs.h"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:52
msgid "Definition of ENA data path interface."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:53
msgid "ena_common_defs.h"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:53
msgid "Common definitions for ena_com layer."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:54
msgid "ena_regs_defs.h"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:54
msgid "Definition of ENA PCI memory-mapped (MMIO) registers."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:55
msgid "ena_netdev.[ch]"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:55
msgid "Main Linux kernel driver."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:56
msgid "ena_ethtool.c"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:56
msgid "ethtool callbacks."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:57
msgid "ena_xdp.[ch]"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:57
msgid "XDP files"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:58
msgid "ena_pci_id_tbl.h"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:58
msgid "Supported device IDs."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:59
msgid "ena_phc.[ch]"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:59
msgid "PTP hardware clock infrastructure (see `PHC`_ for more info)"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:60
msgid "ena_devlink.[ch]"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:60
msgid "devlink files."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:61
msgid "ena_debugfs.[ch]"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:61
msgid "debugfs files."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:65
msgid "Management Interface:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:67
msgid "ENA management interface is exposed by means of:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:69
msgid "PCIe Configuration Space"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:70
msgid "Device Registers"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:71
msgid "Admin Queue (AQ) and Admin Completion Queue (ACQ)"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:72
msgid "Asynchronous Event Notification Queue (AENQ)"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:74
msgid ""
"ENA device MMIO Registers are accessed only during driver initialization and "
"are not used during further normal device operation."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:78
msgid ""
"AQ is used for submitting management commands, and the results/responses are "
"reported asynchronously through ACQ."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:81
msgid ""
"ENA introduces a small set of management commands with room for vendor-"
"specific extensions. Most of the management operations are framed in a "
"generic Get/Set feature command."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:85
msgid "The following admin queue commands are supported:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:87
msgid "Create I/O submission queue"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:88
msgid "Create I/O completion queue"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:89
msgid "Destroy I/O submission queue"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:90
msgid "Destroy I/O completion queue"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:91
msgid "Get feature"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:92
msgid "Set feature"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:93
msgid "Configure AENQ"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:94
msgid "Get statistics"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:96
msgid ""
"Refer to ena_admin_defs.h for the list of supported Get/Set Feature "
"properties."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:99
msgid ""
"The Asynchronous Event Notification Queue (AENQ) is a uni-directional queue "
"used by the ENA device to send to the driver events that cannot be reported "
"using ACQ. AENQ events are subdivided into groups. Each group may have "
"multiple syndromes, as shown below"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:104
msgid "The events are:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:107
msgid "Group"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:107
msgid "Syndrome"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:109
msgid "Link state change"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:109
#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:110
#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:113
msgid "**X**"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:110
msgid "Fatal error"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:111
#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:112
msgid "Notification"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:111
msgid "Suspend traffic"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:112
msgid "Resume traffic"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:113
msgid "Keep-Alive"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:116
msgid "ACQ and AENQ share the same MSI-X vector."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:118
msgid ""
"Keep-Alive is a special mechanism that allows monitoring the device's "
"health. A Keep-Alive event is delivered by the device every second. The "
"driver maintains a watchdog (WD) handler which logs the current state and "
"statistics. If the keep-alive events aren't delivered as expected the WD "
"resets the device and the driver."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:125
msgid "Data Path Interface"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:127
msgid ""
"I/O operations are based on Tx and Rx Submission Queues (Tx SQ and Rx SQ "
"correspondingly). Each SQ has a completion queue (CQ) associated with it."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:131
msgid ""
"The SQs and CQs are implemented as descriptor rings in contiguous physical "
"memory."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:134
msgid "The ENA driver supports two Queue Operation modes for Tx SQs:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:136
msgid ""
"**Regular mode:** In this mode the Tx SQs reside in the host's memory. The "
"ENA device fetches the ENA Tx descriptors and packet data from host memory."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:141
msgid ""
"**Low Latency Queue (LLQ) mode or \"push-mode\":** In this mode the driver "
"pushes the transmit descriptors and the first 96 bytes of the packet "
"directly to the ENA device memory space. The rest of the packet payload is "
"fetched by the device. For this operation mode, the driver uses a dedicated "
"PCI device memory BAR, which is mapped with write-combine capability."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:148
msgid ""
"**Note that** not all ENA devices support LLQ, and this feature is "
"negotiated with the device upon initialization. If the ENA device does not "
"support LLQ mode, the driver falls back to the regular mode."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:152
msgid "The Rx SQs support only the regular mode."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:154
msgid ""
"The driver supports multi-queue for both Tx and Rx. This has various "
"benefits:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:157
msgid "Reduced CPU/thread/process contention on a given Ethernet interface."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:158
msgid ""
"Cache miss rate on completion is reduced, particularly for data cache lines "
"that hold the sk_buff structures."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:160
msgid "Increased process-level parallelism when handling received packets."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:161
msgid ""
"Increased data cache hit rate, by steering kernel processing of packets to "
"the CPU, where the application thread consuming the packet is running."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:164
msgid "In hardware interrupt re-direction."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:167
msgid "Interrupt Modes"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:169
msgid ""
"The driver assigns a single MSI-X vector per queue pair (for both Tx and Rx "
"directions). The driver assigns an additional dedicated MSI-X vector for "
"management (for ACQ and AENQ)."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:173
msgid ""
"Management interrupt registration is performed when the Linux kernel probes "
"the adapter, and it is de-registered when the adapter is removed. I/O queue "
"interrupt registration is performed when the Linux interface of the adapter "
"is opened, and it is de-registered when the interface is closed."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:179
msgid "The management interrupt is named::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:183
msgid "and for each queue pair, an interrupt is named::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:187
msgid ""
"The ENA device operates in auto-mask and auto-clear interrupt modes. That "
"is, once MSI-X is delivered to the host, its Cause bit is automatically "
"cleared and the interrupt is masked. The interrupt is unmasked by the driver "
"after NAPI processing is complete."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:193
msgid "Interrupt Moderation"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:195
msgid ""
"ENA driver and device can operate in conventional or adaptive interrupt "
"moderation mode."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:198
msgid ""
"**In conventional mode** the driver instructs device to postpone interrupt "
"posting according to static interrupt delay value. The interrupt delay value "
"can be configured through `ethtool(8)`. The following `ethtool` parameters "
"are supported by the driver: ``tx-usecs``, ``rx-usecs``"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:203
msgid ""
"**In adaptive interrupt** moderation mode the interrupt delay value is "
"updated by the driver dynamically and adjusted every NAPI cycle according to "
"the traffic nature."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:207
msgid ""
"Adaptive coalescing can be switched on/off through `ethtool(8)`'s :code:"
"`adaptive_rx on|off` parameter."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:210
msgid ""
"More information about Adaptive Interrupt Moderation (DIM) can be found in "
"Documentation/networking/net_dim.rst"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:216
msgid "RX copybreak"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:218
msgid ""
"The rx_copybreak is initialized by default to ENA_DEFAULT_RX_COPYBREAK and "
"can be configured by the ETHTOOL_STUNABLE command of the SIOCETHTOOL ioctl."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:222
msgid ""
"This option controls the maximum packet length for which the RX descriptor "
"it was received on would be recycled. When a packet smaller than RX "
"copybreak bytes is received, it is copied into a new memory buffer and the "
"RX descriptor is returned to HW."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:230
msgid "PTP Hardware Clock (PHC)"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:234
msgid ""
"ENA Linux driver supports PTP hardware clock providing timestamp reference "
"to achieve nanosecond resolution."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:236
msgid "**PHC support**"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:238
msgid ""
"PHC depends on the PTP module, which needs to be either loaded as a module "
"or compiled into the kernel."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:240
msgid "Verify if the PTP module is present:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:246
msgid ""
"If no output is provided, the ENA driver cannot be loaded with PHC support."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:248
msgid "**PHC activation**"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:250
msgid ""
"The feature is turned off by default, in order to turn the feature on, the "
"ENA driver can be loaded in the following way:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:253
msgid "devlink:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:263
msgid "All available PTP clock sources can be tracked here:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:269
msgid "PHC support and capabilities can be verified using ethtool:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:275
msgid "**PHC timestamp**"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:277
msgid ""
"To retrieve PHC timestamp, use `ptp-userspace-api`_, usage example using "
"`testptp`_:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:283
msgid ""
"PHC get time requests should be within reasonable bounds, avoid excessive "
"utilization to ensure optimal performance and efficiency. The ENA device "
"restricts the frequency of PHC get time requests to a maximum of 125 "
"requests per second. If this limit is surpassed, the get time request will "
"fail, leading to an increment in the phc_err_ts statistic."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:289
msgid "**PHC statistics**"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:291
msgid "PHC can be monitored using debugfs (if mounted):"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:300
msgid ""
"PHC errors must remain below 1% of all PHC requests to maintain the desired "
"level of accuracy and reliability"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:303
msgid "**phc_cnt**"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:0
msgid "Number of successful retrieved timestamps (below expire timeout)."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:304
msgid "**phc_exp**"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:0
msgid "Number of expired retrieved timestamps (above expire timeout)."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:305
msgid "**phc_skp**"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:0
msgid "Number of skipped get time attempts (during block period)."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:306
msgid "**phc_err_dv**"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:0
msgid ""
"Number of failed get time attempts due to device errors (entering into block "
"state)."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:307
msgid "**phc_err_ts**"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:0
msgid ""
"Number of failed get time attempts due to timestamp errors (entering into "
"block state),"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:0
msgid ""
"This occurs if driver exceeded the request limit or device received an "
"invalid timestamp."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:311
msgid "PHC timeouts:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:314
msgid "**expire**"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:0
msgid ""
"Max time for a valid timestamp retrieval, passing this threshold will fail"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:0
msgid "the get time request and block new requests until block timeout."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:316
msgid "**block**"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:0
msgid "Blocking period starts once get time request expires or fails,"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:0
msgid "all get time requests during block period will be skipped."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:321
msgid "Statistics"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:323
msgid ""
"The user can obtain ENA device and driver statistics using `ethtool`. The "
"driver can collect regular or extended statistics (including per-queue "
"stats) from the device."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:327
msgid "In addition the driver logs the stats to syslog upon device reset."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:329
msgid ""
"On supported instance types, the statistics will also include the ENA "
"Express data (fields prefixed with `ena_srd`). For a complete documentation "
"of ENA Express data refer to https://docs.aws.amazon.com/AWSEC2/latest/"
"UserGuide/ena-express.html#ena-express-monitor"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:335
msgid "MTU"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:337
msgid ""
"The driver supports an arbitrarily large MTU with a maximum that is "
"negotiated with the device. The driver configures MTU using the SetFeature "
"command (ENA_ADMIN_MTU property). The user can change MTU via `ip(8)` and "
"similar legacy tools."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:343
msgid "Stateless Offloads"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:345
msgid "The ENA driver supports:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:347
msgid "IPv4 header checksum offload"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:348
msgid "TCP/UDP over IPv4/IPv6 checksum offloads"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:351
msgid "RSS"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:353
msgid "The ENA device supports RSS that allows flexible Rx traffic steering."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:355
msgid "Toeplitz and CRC32 hash functions are supported."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:356
msgid ""
"Different combinations of L2/L3/L4 fields can be configured as inputs for "
"hash functions."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:358
msgid ""
"The driver configures RSS settings using the AQ SetFeature command "
"(ENA_ADMIN_RSS_HASH_FUNCTION, ENA_ADMIN_RSS_HASH_INPUT and "
"ENA_ADMIN_RSS_INDIRECTION_TABLE_CONFIG properties)."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:361
msgid ""
"If the NETIF_F_RXHASH flag is set, the 32-bit result of the hash function "
"delivered in the Rx CQ descriptor is set in the received SKB."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:364
msgid ""
"The user can provide a hash key, hash function, and configure the "
"indirection table through `ethtool(8)`."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:368
msgid "DEVLINK SUPPORT"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:371
msgid ""
"`devlink`_ supports reloading the driver and initiating re-negotiation with "
"the ENA device"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:380
msgid "DATA PATH"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:383
msgid "Tx"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:385
msgid ""
":code:`ena_start_xmit()` is called by the stack. This function does the "
"following:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:387
msgid "Maps data buffers (``skb->data`` and frags)."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:388
msgid ""
"Populates ``ena_buf`` for the push buffer (if the driver and device are in "
"push mode)."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:390
msgid "Prepares ENA bufs for the remaining frags."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:391
msgid ""
"Allocates a new request ID from the empty ``req_id`` ring. The request ID is "
"the index of the packet in the Tx info. This is used for out-of-order Tx "
"completions."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:394
msgid "Adds the packet to the proper place in the Tx ring."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:395
msgid ""
"Calls :code:`ena_com_prepare_tx()`, an ENA communication layer that converts "
"the ``ena_bufs`` to ENA descriptors (and adds meta ENA descriptors as "
"needed)."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:399
msgid ""
"This function also copies the ENA descriptors and the push buffer to the "
"Device memory space (if in push mode)."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:402
msgid "Writes a doorbell to the ENA device."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:403
msgid ""
"When the ENA device finishes sending the packet, a completion interrupt is "
"raised."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:405
#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:420
msgid "The interrupt handler schedules NAPI."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:406
msgid ""
"The :code:`ena_clean_tx_irq()` function is called. This function handles the "
"completion descriptors generated by the ENA, with a single completion "
"descriptor per completed packet."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:410
msgid ""
"``req_id`` is retrieved from the completion descriptor. The ``tx_info`` of "
"the packet is retrieved via the ``req_id``. The data buffers are unmapped "
"and ``req_id`` is returned to the empty ``req_id`` ring."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:413
msgid ""
"The function stops when the completion descriptors are completed or the "
"budget is reached."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:417
msgid "Rx"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:419
msgid "When a packet is received from the ENA device."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:421
msgid ""
"The :code:`ena_clean_rx_irq()` function is called. This function calls :code:"
"`ena_com_rx_pkt()`, an ENA communication layer function, which returns the "
"number of descriptors used for a new packet, and zero if no new packet is "
"found."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:425
msgid ":code:`ena_rx_skb()` checks packet length:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:427
msgid ""
"If the packet is small (len < rx_copybreak), the driver allocates a SKB for "
"the new packet, and copies the packet payload into the SKB data buffer."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:431
msgid ""
"In this way the original data buffer is not passed to the stack and is "
"reused for future Rx packets."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:434
msgid ""
"Otherwise the function unmaps the Rx buffer, sets the first descriptor as "
"`skb`'s linear part and the other descriptors as the `skb`'s frags."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:438
msgid ""
"The new SKB is updated with the necessary information (protocol, checksum hw "
"verify result, etc), and then passed to the network stack, using the NAPI "
"interface function :code:`napi_gro_receive()`."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:443
msgid "Dynamic RX Buffers (DRB)"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:445
msgid ""
"Each RX descriptor in the RX ring is a single memory page (which is either "
"4KB or 16KB long depending on system's configurations). To reduce the memory "
"allocations required when dealing with a high rate of small packets, the "
"driver tries to reuse the remaining RX descriptor's space if more than 2KB "
"of this page remain unused."
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:451
msgid "A simple example of this mechanism is the following sequence of events:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/amazon/ena.rst:468
msgid ""
"This mechanism isn't used when an XDP program is loaded, or when the RX "
"packet is less than rx_copybreak bytes (in which case the packet is copied "
"out of the RX buffer into the linear part of a new skb allocated for it and "
"the RX buffer remains the same size, see `RX copybreak`_)."
msgstr ""
