# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-30 08:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../userspace-api/media/rc/rc-protos.rst:7
msgid "Remote Controller Protocols and Scancodes"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:9
msgid ""
"IR is encoded as a series of pulses and spaces, using a protocol. These "
"protocols can encode e.g. an address (which device should respond) and a "
"command: what it should do. The values for these are not always consistent "
"across different devices for a given protocol."
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:14
msgid ""
"Therefore out the output of the IR decoder is a scancode; a single u32 "
"value. Using keymap tables this can be mapped to linux key codes."
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:17
msgid ""
"Other things can be encoded too. Some IR protocols encode a toggle bit; this "
"is to distinguish whether the same button is being held down, or has been "
"released and pressed again. If has been released and pressed again, the "
"toggle bit will invert from one IR message to the next."
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:22
msgid ""
"Some remotes have a pointer-type device which can used to control the mouse; "
"some air conditioning systems can have their target temperature target set "
"in IR."
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:26
msgid ""
"The following are the protocols the kernel knows about and also lists how "
"scancodes are encoded for each protocol."
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:30
msgid "rc-5 (RC_PROTO_RC5)"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:32
msgid ""
"This IR protocol uses manchester encoding to encode 14 bits. There is a "
"detailed description here https://www.sbprojects.net/knowledge/ir/rc5.php."
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:35
msgid ""
"The scancode encoding is *not* consistent with the lirc daemon (lircd) rc5 "
"protocol, or the manchester BPF decoder."
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:38
msgid "rc5 bits scancode mapping"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:41
msgid "rc-5 bit"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:43
#: ../../../userspace-api/media/rc/rc-protos.rst:93
#: ../../../userspace-api/media/rc/rc-protos.rst:138
#: ../../../userspace-api/media/rc/rc-protos.rst:199
#: ../../../userspace-api/media/rc/rc-protos.rst:226
#: ../../../userspace-api/media/rc/rc-protos.rst:253
#: ../../../userspace-api/media/rc/rc-protos.rst:311
msgid "scancode bit"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:45
#: ../../../userspace-api/media/rc/rc-protos.rst:95
#: ../../../userspace-api/media/rc/rc-protos.rst:140
#: ../../../userspace-api/media/rc/rc-protos.rst:201
#: ../../../userspace-api/media/rc/rc-protos.rst:228
#: ../../../userspace-api/media/rc/rc-protos.rst:255
msgid "description"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:47
#: ../../../userspace-api/media/rc/rc-protos.rst:53
#: ../../../userspace-api/media/rc/rc-protos.rst:59
#: ../../../userspace-api/media/rc/rc-protos.rst:97
#: ../../../userspace-api/media/rc/rc-protos.rst:103
#: ../../../userspace-api/media/rc/rc-protos.rst:109
#: ../../../userspace-api/media/rc/rc-protos.rst:142
#: ../../../userspace-api/media/rc/rc-protos.rst:148
#: ../../../userspace-api/media/rc/rc-protos.rst:154
msgid "1"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:49
#: ../../../userspace-api/media/rc/rc-protos.rst:61
#: ../../../userspace-api/media/rc/rc-protos.rst:99
#: ../../../userspace-api/media/rc/rc-protos.rst:111
#: ../../../userspace-api/media/rc/rc-protos.rst:144
#: ../../../userspace-api/media/rc/rc-protos.rst:156
msgid "none"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:51
#: ../../../userspace-api/media/rc/rc-protos.rst:101
#: ../../../userspace-api/media/rc/rc-protos.rst:146
msgid "Start bit, always set"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:55
msgid "6 (inverted)"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:57
msgid "2nd start bit in rc5,  re-used as 6th command bit"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:63
#: ../../../userspace-api/media/rc/rc-protos.rst:113
#: ../../../userspace-api/media/rc/rc-protos.rst:158
msgid "Toggle bit"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:65
#: ../../../userspace-api/media/rc/rc-protos.rst:160
#: ../../../userspace-api/media/rc/rc-protos.rst:203
#: ../../../userspace-api/media/rc/rc-protos.rst:257
msgid "5"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:67
#: ../../../userspace-api/media/rc/rc-protos.rst:168
msgid "8 to 13"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:69
#: ../../../userspace-api/media/rc/rc-protos.rst:119
#: ../../../userspace-api/media/rc/rc-protos.rst:164
#: ../../../userspace-api/media/rc/rc-protos.rst:170
msgid "Address"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:71
#: ../../../userspace-api/media/rc/rc-protos.rst:115
#: ../../../userspace-api/media/rc/rc-protos.rst:121
#: ../../../userspace-api/media/rc/rc-protos.rst:166
#: ../../../userspace-api/media/rc/rc-protos.rst:172
msgid "6"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:73
#: ../../../userspace-api/media/rc/rc-protos.rst:123
#: ../../../userspace-api/media/rc/rc-protos.rst:174
msgid "0 to 5"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:75
#: ../../../userspace-api/media/rc/rc-protos.rst:125
#: ../../../userspace-api/media/rc/rc-protos.rst:176
msgid "Command"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:77
msgid ""
"There is a variant of rc5 called either rc5x or extended rc5 where there the "
"second stop bit is the 6th command bit, but inverted. This is done so it the "
"scancodes and encoding is compatible with existing schemes. This bit is "
"stored in bit 6 of the scancode, inverted. This is done to keep it "
"compatible with plain rc-5 where there are two start bits."
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:84
msgid "rc-5-sz (RC_PROTO_RC5_SZ)"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:85
msgid ""
"This is much like rc-5 but one bit longer. The scancode is encoded "
"differently."
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:88
msgid "rc-5-sz bits scancode mapping"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:91
#: ../../../userspace-api/media/rc/rc-protos.rst:136
msgid "rc-5-sz bits"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:105
msgid "13"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:107
#: ../../../userspace-api/media/rc/rc-protos.rst:152
msgid "Address bit"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:117
msgid "6 to 11"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:128
msgid "rc-5x-20 (RC_PROTO_RC5X_20)"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:130
msgid ""
"This rc-5 extended to encoded 20 bits. The is a 3555 microseconds space "
"after the 8th bit."
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:133
msgid "rc-5x-20 bits scancode mapping"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:150
msgid "14"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:162
#: ../../../userspace-api/media/rc/rc-protos.rst:205
#: ../../../userspace-api/media/rc/rc-protos.rst:259
msgid "16 to 20"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:180
msgid "jvc (RC_PROTO_JVC)"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:182
msgid ""
"The jvc protocol is much like nec, without the inverted values. It is "
"described here https://www.sbprojects.net/knowledge/ir/jvc.php."
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:185
msgid ""
"The scancode is a 16 bits value, where the address is the lower 8 bits and "
"the command the higher 8 bits; this is reversed from IR order."
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:189
msgid "sony-12 (RC_PROTO_SONY12)"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:191
#: ../../../userspace-api/media/rc/rc-protos.rst:218
#: ../../../userspace-api/media/rc/rc-protos.rst:245
msgid ""
"The sony protocol is a pulse-width encoding. There are three variants, which "
"just differ in number of bits and scancode encoding."
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:194
#: ../../../userspace-api/media/rc/rc-protos.rst:221
msgid "sony-12 bits scancode mapping"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:197
#: ../../../userspace-api/media/rc/rc-protos.rst:224
msgid "sony-12 bits"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:207
#: ../../../userspace-api/media/rc/rc-protos.rst:234
#: ../../../userspace-api/media/rc/rc-protos.rst:261
#: ../../../userspace-api/media/rc/rc-protos.rst:267
msgid "device"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:209
#: ../../../userspace-api/media/rc/rc-protos.rst:236
#: ../../../userspace-api/media/rc/rc-protos.rst:263
msgid "7"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:211
#: ../../../userspace-api/media/rc/rc-protos.rst:238
msgid "0 to 6"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:213
#: ../../../userspace-api/media/rc/rc-protos.rst:240
msgid "function"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:216
msgid "sony-15 (RC_PROTO_SONY15)"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:230
#: ../../../userspace-api/media/rc/rc-protos.rst:269
msgid "8"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:232
#: ../../../userspace-api/media/rc/rc-protos.rst:315
msgid "16 to 23"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:243
msgid "sony-20 (RC_PROTO_SONY20)"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:248
msgid "sony-20 bits scancode mapping"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:251
msgid "sony-20 bits"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:265
#: ../../../userspace-api/media/rc/rc-protos.rst:323
msgid "0 to 7"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:271
#: ../../../userspace-api/media/rc/rc-protos.rst:327
msgid "8 to 15"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:273
msgid "extended bits"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:276
msgid "nec (RC_PROTO_NEC)"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:278
msgid ""
"The nec protocol encodes an 8 bit address and an 8 bit command. It is "
"described here https://www.sbprojects.net/knowledge/ir/nec.php. Note that "
"the protocol sends least significant bit first."
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:282
msgid ""
"As a check, the nec protocol sends the address and command twice; the second "
"time it is inverted. This is done for verification."
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:285
msgid ""
"A plain nec IR message has 16 bits; the high 8 bits are the address and the "
"low 8 bits are the command."
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:289
msgid "nec-x (RC_PROTO_NECX)"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:291
msgid ""
"Extended nec has a 16 bit address and a 8 bit command. This is encoded as a "
"24 bit value as you would expect, with the lower 8 bits the command and the "
"upper 16 bits the address."
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:296
msgid "nec-32 (RC_PROTO_NEC32)"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:298
msgid ""
"nec-32 does not send an inverted address or an inverted command; the entire "
"message, all 32 bits, are used."
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:301
msgid ""
"For this to be decoded correctly, the second 8 bits must not be the inverted "
"value of the first, and also the last 8 bits must not be the inverted value "
"of the third 8 bit value."
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:305
msgid "The scancode has a somewhat unusual encoding."
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:307
msgid "nec-32 bits scancode mapping"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:309
msgid "nec-32 bits"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:313
msgid "First 8 bits"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:317
msgid "Second 8 bits"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:319
msgid "24 to 31"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:321
msgid "Third 8 bits"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:325
msgid "Fourth 8 bits"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:330
msgid "sanyo (RC_PROTO_SANYO)"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:332
msgid ""
"The sanyo protocol is like the nec protocol, but with 13 bits address rather "
"than 8 bits. Both the address and the command are followed by their inverted "
"versions, but these are not present in the scancodes."
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:336
msgid ""
"Bis 8 to 20 of the scancode is the 13 bits address, and the lower 8 bits are "
"the command."
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:340
msgid "mcir2-kbd (RC_PROTO_MCIR2_KBD)"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:342
msgid ""
"This protocol is generated by the Microsoft MCE keyboard for keyboard "
"events. Refer to the ir-mce_kbd-decoder.c to see how it is encoded."
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:346
msgid "mcir2-mse (RC_PROTO_MCIR2_MSE)"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:348
msgid ""
"This protocol is generated by the Microsoft MCE keyboard for pointer events. "
"Refer to the ir-mce_kbd-decoder.c to see how it is encoded."
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:352
msgid "rc-6-0 (RC_PROTO_RC6_0)"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:354
msgid ""
"This is the rc-6 in mode 0. rc-6 is described here https://www.sbprojects."
"net/knowledge/ir/rc6.php. The scancode is the exact 16 bits as in the "
"protocol. There is also a toggle bit."
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:360
msgid "rc-6-6a-20 (RC_PROTO_RC6_6A_20)"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:362
msgid ""
"This is the rc-6 in mode 6a, 20 bits. rc-6 is described here https://www."
"sbprojects.net/knowledge/ir/rc6.php. The scancode is the exact 20 bits as in "
"the protocol. There is also a toggle bit."
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:368
msgid "rc-6-6a-24 (RC_PROTO_RC6_6A_24)"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:370
msgid ""
"This is the rc-6 in mode 6a, 24 bits. rc-6 is described here https://www."
"sbprojects.net/knowledge/ir/rc6.php. The scancode is the exact 24 bits as in "
"the protocol. There is also a toggle bit."
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:376
msgid "rc-6-6a-32 (RC_PROTO_RC6_6A_32)"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:378
msgid ""
"This is the rc-6 in mode 6a, 32 bits. rc-6 is described here https://www."
"sbprojects.net/knowledge/ir/rc6.php. The upper 16 bits are the vendor, and "
"the lower 16 bits are the vendor-specific bits. This protocol is for the non-"
"Microsoft MCE variant (vendor != 0x800f)."
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:386
msgid "rc-6-mce (RC_PROTO_RC6_MCE)"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:388
msgid ""
"This is the rc-6 in mode 6a, 32 bits. The upper 16 bits are the vendor, and "
"the lower 16 bits are the vendor-specific bits. This protocol is for the "
"Microsoft MCE variant (vendor = 0x800f). The toggle bit in the protocol "
"itself is ignored, and the 16th bit should be takes as the toggle bit."
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:395
msgid "sharp (RC_PROTO_SHARP)"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:397
msgid ""
"This is a protocol used by Sharp VCRs, is described here https://www."
"sbprojects.net/knowledge/ir/sharp.php. There is a very long (40ms) space "
"between the normal and inverted values, and some IR receivers cannot decode "
"this."
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:402
msgid ""
"There is a 5 bit address and a 8 bit command. In the scancode the address is "
"in bits 8 to 12, and the command in bits 0 to 7."
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:406
msgid "xmp (RC_PROTO_XMP)"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:408
msgid ""
"This protocol has several versions and only version 1 is supported. Refer to "
"the decoder (ir-xmp-decoder.c) to see how it is encoded."
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:413
msgid "cec (RC_PROTO_CEC)"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:415
msgid ""
"This is not an IR protocol, this is a protocol over CEC. The CEC "
"infrastructure uses rc-core for handling CEC commands, so that they can "
"easily be remapped."
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:420
msgid "imon (RC_PROTO_IMON)"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:422
msgid "This protocol is used by Antec Veris/SoundGraph iMON remotes."
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:424
msgid ""
"The protocol describes both button presses and pointer movements. The "
"protocol encodes 31 bits, and the scancode is simply the 31 bits with the "
"top bit always 0."
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:429
msgid "rc-mm-12 (RC_PROTO_RCMM12)"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:431
msgid ""
"The rc-mm protocol is described here https://www.sbprojects.net/knowledge/ir/"
"rcmm.php. The scancode is simply the 12 bits."
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:436
msgid "rc-mm-24 (RC_PROTO_RCMM24)"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:438
msgid ""
"The rc-mm protocol is described here https://www.sbprojects.net/knowledge/ir/"
"rcmm.php. The scancode is simply the 24 bits."
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:443
msgid "rc-mm-32 (RC_PROTO_RCMM32)"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:445
msgid ""
"The rc-mm protocol is described here https://www.sbprojects.net/knowledge/ir/"
"rcmm.php. The scancode is simply the 32 bits."
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:450
msgid "xbox-dvd (RC_PROTO_XBOX_DVD)"
msgstr ""

#: ../../../userspace-api/media/rc/rc-protos.rst:452
msgid ""
"This protocol is used by Xbox DVD Remote, which was made for the original "
"Xbox. There is no in-kernel decoder or encoder for this protocol. The usb "
"device decodes the protocol. There is a BPF decoder available in v4l-utils."
msgstr ""
