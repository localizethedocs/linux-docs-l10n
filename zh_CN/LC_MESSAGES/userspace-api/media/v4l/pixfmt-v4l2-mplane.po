# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:5
msgid "Multi-planar format structures"
msgstr ""

#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:7
msgid ""
"The struct :c:type:`v4l2_plane_pix_format` structures define size and layout "
"for each of the planes in a multi-planar format. The struct :c:type:"
"`v4l2_pix_format_mplane` structure contains information common to all planes "
"(such as image width and height) and an array of struct :c:type:"
"`v4l2_plane_pix_format` structures, describing all planes of that format."
msgstr ""

#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:20
msgid "struct v4l2_plane_pix_format"
msgstr ""

#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:25
#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:41
#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:64
#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:68
#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:72
#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:76
#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:80
msgid "__u32"
msgstr ""

#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:26
msgid "``sizeimage``"
msgstr ""

#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:27
msgid ""
"Maximum size in bytes required for image data in this plane, set by the "
"driver. When the image consists of variable length compressed data this is "
"the number of bytes required by the codec to support the worst-case "
"compression scenario."
msgstr ""

#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:32
msgid "The driver will set the value for uncompressed images."
msgstr ""

#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:34
msgid ""
"Clients are allowed to set the sizeimage field for variable length "
"compressed data flagged with ``V4L2_FMT_FLAG_COMPRESSED`` at :ref:"
"`VIDIOC_ENUM_FMT`, but the driver may ignore it and set the value itself, or "
"it may modify the provided value based on alignment requirements or minimum/"
"maximum size requirements. If the client wants to leave this to the driver, "
"then it should set sizeimage to 0."
msgstr ""

#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:42
msgid "``bytesperline``"
msgstr ""

#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:43
msgid ""
"Distance in bytes between the leftmost pixels in two adjacent lines. See "
"struct :c:type:`v4l2_pix_format`."
msgstr ""

#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:45
msgid "__u16"
msgstr ""

#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:46
msgid "``reserved[6]``"
msgstr ""

#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:47
#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:118
msgid ""
"Reserved for future extensions. Should be zeroed by drivers and applications."
msgstr ""

#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:51
msgid "\\small"
msgstr ""

#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:59
msgid "struct v4l2_pix_format_mplane"
msgstr ""

#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:65
msgid "``width``"
msgstr ""

#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:66
msgid "Image width in pixels. See struct :c:type:`v4l2_pix_format`."
msgstr ""

#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:69
msgid "``height``"
msgstr ""

#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:70
msgid "Image height in pixels. See struct :c:type:`v4l2_pix_format`."
msgstr ""

#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:73
msgid "``pixelformat``"
msgstr ""

#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:74
msgid ""
"The pixel format. Both single- and multi-planar four character codes can be "
"used."
msgstr ""

#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:77
msgid "``field``"
msgstr ""

#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:78
msgid ""
"Field order, from enum :c:type:`v4l2_field`. See struct :c:type:"
"`v4l2_pix_format`."
msgstr ""

#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:81
msgid "``colorspace``"
msgstr ""

#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:82
msgid ""
"Colorspace encoding, from enum :c:type:`v4l2_colorspace`. See struct :c:type:"
"`v4l2_pix_format`."
msgstr ""

#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:84
msgid "struct :c:type:`v4l2_plane_pix_format`"
msgstr ""

#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:85
msgid "``plane_fmt[VIDEO_MAX_PLANES]``"
msgstr ""

#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:86
msgid ""
"An array of structures describing format of each plane this pixel format "
"consists of. The number of valid entries in this array has to be put in the "
"``num_planes`` field."
msgstr ""

#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:89
#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:93
#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:98
#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:102
#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:108
#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:112
#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:116
msgid "__u8"
msgstr ""

#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:90
msgid "``num_planes``"
msgstr ""

#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:91
msgid ""
"Number of planes (i.e. separate memory buffers) for this format and the "
"number of valid entries in the ``plane_fmt`` array."
msgstr ""

#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:94
msgid "``flags``"
msgstr ""

#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:95
msgid "Flags set by the application or driver, see :ref:`format-flags`."
msgstr ""

#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:96
msgid "union {"
msgstr ""

#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:97
msgid "(anonymous)"
msgstr ""

#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:99
msgid "``ycbcr_enc``"
msgstr ""

#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:100
msgid ""
"Y'CbCr encoding, from enum :c:type:`v4l2_ycbcr_encoding`. See struct :c:type:"
"`v4l2_pix_format`."
msgstr ""

#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:103
msgid "``hsv_enc``"
msgstr ""

#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:104
msgid ""
"HSV encoding, from enum :c:type:`v4l2_hsv_encoding`. See struct :c:type:"
"`v4l2_pix_format`."
msgstr ""

#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:106
msgid "}"
msgstr ""

#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:109
msgid "``quantization``"
msgstr ""

#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:110
msgid ""
"Quantization range, from enum :c:type:`v4l2_quantization`. See struct :c:"
"type:`v4l2_pix_format`."
msgstr ""

#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:113
msgid "``xfer_func``"
msgstr ""

#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:114
msgid ""
"Transfer function, from enum :c:type:`v4l2_xfer_func`. See struct :c:type:"
"`v4l2_pix_format`."
msgstr ""

#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:117
msgid "``reserved[7]``"
msgstr ""

#: ../../../userspace-api/media/v4l/pixfmt-v4l2-mplane.rst:121
msgid "\\normalsize"
msgstr ""
