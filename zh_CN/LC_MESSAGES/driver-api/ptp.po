# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../driver-api/ptp.rst:5
msgid "PTP hardware clock infrastructure for Linux"
msgstr ""

#: ../../../driver-api/ptp.rst:7
msgid ""
"This patch set introduces support for IEEE 1588 PTP clocks in Linux. "
"Together with the SO_TIMESTAMPING socket options, this presents a "
"standardized method for developing PTP user space programs, synchronizing "
"Linux with external clocks, and using the ancillary features of PTP hardware "
"clocks."
msgstr ""

#: ../../../driver-api/ptp.rst:13
msgid ""
"A new class driver exports a kernel interface for specific clock drivers and "
"a user space interface. The infrastructure supports a complete set of PTP "
"hardware clock functionality."
msgstr ""

#: ../../../driver-api/ptp.rst:17
msgid ""
"Basic clock operations - Set time - Get time - Shift the clock by a given "
"offset atomically - Adjust clock frequency"
msgstr ""

#: ../../../driver-api/ptp.rst:23
msgid ""
"Ancillary clock features - Time stamp external events - Period output "
"signals configurable from user space - Low Pass Filter (LPF) access from "
"user space - Synchronization of the Linux system time via the PPS subsystem"
msgstr ""

#: ../../../driver-api/ptp.rst:30
msgid "PTP hardware clock kernel API"
msgstr ""

#: ../../../driver-api/ptp.rst:32
msgid ""
"A PTP clock driver registers itself with the class driver. The class driver "
"handles all of the dealings with user space. The author of a clock driver "
"need only implement the details of programming the clock hardware. The clock "
"driver notifies the class driver of asynchronous events (alarms and external "
"time stamps) via a simple message passing interface."
msgstr ""

#: ../../../driver-api/ptp.rst:39
msgid ""
"The class driver supports multiple PTP clock drivers. In normal use cases, "
"only one PTP clock is needed. However, for testing and development, it can "
"be useful to have more than one clock in a single system, in order to allow "
"performance comparisons."
msgstr ""

#: ../../../driver-api/ptp.rst:45
msgid "PTP hardware clock user space API"
msgstr ""

#: ../../../driver-api/ptp.rst:47
msgid ""
"The class driver also creates a character device for each registered clock. "
"User space can use an open file descriptor from the character device as a "
"POSIX clock id and may call clock_gettime, clock_settime, and "
"clock_adjtime.  These calls implement the basic clock operations."
msgstr ""

#: ../../../driver-api/ptp.rst:53
msgid ""
"User space programs may control the clock using standardized ioctls. A "
"program may query, enable, configure, and disable the ancillary clock "
"features. User space can receive time stamped events via blocking read() and "
"poll()."
msgstr ""

#: ../../../driver-api/ptp.rst:59
msgid "Writing clock drivers"
msgstr ""

#: ../../../driver-api/ptp.rst:61
msgid ""
"Clock drivers include include/linux/ptp_clock_kernel.h and register "
"themselves by presenting a 'struct ptp_clock_info' to the registration "
"method. Clock drivers must implement all of the functions in the interface. "
"If a clock does not offer a particular ancillary feature, then the driver "
"should just return -EOPNOTSUPP from those functions."
msgstr ""

#: ../../../driver-api/ptp.rst:68
msgid ""
"Drivers must ensure that all of the methods in interface are reentrant. "
"Since most hardware implementations treat the time value as a 64 bit integer "
"accessed as two 32 bit registers, drivers should use spin_lock_irqsave/"
"spin_unlock_irqrestore to protect against concurrent access. This locking "
"cannot be accomplished in class driver, since the lock may also be needed by "
"the clock driver's interrupt service routine."
msgstr ""

#: ../../../driver-api/ptp.rst:77
msgid "PTP hardware clock requirements for '.adjphase'"
msgstr ""

#: ../../../driver-api/ptp.rst:79
msgid ""
"The 'struct ptp_clock_info' interface has a '.adjphase' function. This "
"function has a set of requirements from the PHC in order to be implemented."
msgstr ""

#: ../../../driver-api/ptp.rst:83
msgid ""
"The PHC implements a servo algorithm internally that is used to correct the "
"offset passed in the '.adjphase' call."
msgstr ""

#: ../../../driver-api/ptp.rst:85
msgid ""
"When other PTP adjustment functions are called, the PHC servo algorithm is "
"disabled."
msgstr ""

#: ../../../driver-api/ptp.rst:88
msgid ""
"**NOTE:** '.adjphase' is not a simple time adjustment functionality that "
"'jumps' the PHC clock time based on the provided offset. It should correct "
"the offset provided using an internal algorithm."
msgstr ""

#: ../../../driver-api/ptp.rst:93
msgid "Supported hardware"
msgstr ""

#: ../../../driver-api/ptp.rst:95
msgid "Freescale eTSEC gianfar"
msgstr ""

#: ../../../driver-api/ptp.rst:97
msgid "2 Time stamp external triggers, programmable polarity (opt. interrupt)"
msgstr ""

#: ../../../driver-api/ptp.rst:98
msgid "2 Alarm registers (optional interrupt)"
msgstr ""

#: ../../../driver-api/ptp.rst:99
msgid "3 Periodic signals (optional interrupt)"
msgstr ""

#: ../../../driver-api/ptp.rst:101
msgid "National DP83640"
msgstr ""

#: ../../../driver-api/ptp.rst:103
msgid "6 GPIOs programmable as inputs or outputs"
msgstr ""

#: ../../../driver-api/ptp.rst:104
msgid ""
"6 GPIOs with dedicated functions (LED/JTAG/clock) can also be used as "
"general inputs or outputs"
msgstr ""

#: ../../../driver-api/ptp.rst:106
msgid "GPIO inputs can time stamp external triggers"
msgstr ""

#: ../../../driver-api/ptp.rst:107
msgid "GPIO outputs can produce periodic signals"
msgstr ""

#: ../../../driver-api/ptp.rst:108
msgid "1 interrupt pin"
msgstr ""

#: ../../../driver-api/ptp.rst:110
msgid "Intel IXP465"
msgstr ""

#: ../../../driver-api/ptp.rst:112
msgid "Auxiliary Slave/Master Mode Snapshot (optional interrupt)"
msgstr ""

#: ../../../driver-api/ptp.rst:113
msgid "Target Time (optional interrupt)"
msgstr ""

#: ../../../driver-api/ptp.rst:115
msgid "Renesas (IDT) ClockMatrixâ„¢"
msgstr ""

#: ../../../driver-api/ptp.rst:117
msgid "Up to 4 independent PHC channels"
msgstr ""

#: ../../../driver-api/ptp.rst:118
msgid ""
"Integrated low pass filter (LPF), access via .adjPhase (compliant to ITU-T "
"G.8273.2)"
msgstr ""

#: ../../../driver-api/ptp.rst:119
msgid "Programmable output periodic signals"
msgstr ""

#: ../../../driver-api/ptp.rst:120
msgid "Programmable inputs can time stamp external triggers"
msgstr ""

#: ../../../driver-api/ptp.rst:121
msgid "Driver and/or hardware configuration through firmware (idtcm.bin)"
msgstr ""

#: ../../../driver-api/ptp.rst:122
msgid ""
"LPF settings (bandwidth, phase limiting, automatic holdover, physical layer "
"assist (per ITU-T G.8273.2))"
msgstr ""

#: ../../../driver-api/ptp.rst:123
msgid ""
"Programmable output PTP clocks, any frequency up to 1GHz (to other PHY/MAC "
"time stampers, refclk to ASSPs/SoCs/FPGAs)"
msgstr ""

#: ../../../driver-api/ptp.rst:124
msgid ""
"Lock to GNSS input, automatic switching between GNSS and user-space PHC "
"control (optional)"
msgstr ""

#: ../../../driver-api/ptp.rst:126
msgid "NVIDIA Mellanox"
msgstr ""

#: ../../../driver-api/ptp.rst:128
msgid "GPIO"
msgstr ""

#: ../../../driver-api/ptp.rst:129
msgid ""
"Certain variants of ConnectX-6 Dx and later products support one GPIO which "
"can time stamp external triggers and one GPIO to produce periodic signals."
msgstr ""

#: ../../../driver-api/ptp.rst:132
msgid ""
"Certain variants of ConnectX-5 and older products support one GPIO, "
"configured to either time stamp external triggers or produce periodic "
"signals."
msgstr ""

#: ../../../driver-api/ptp.rst:135
msgid "PHC instances"
msgstr ""

#: ../../../driver-api/ptp.rst:136
msgid "All ConnectX devices have a free-running counter"
msgstr ""

#: ../../../driver-api/ptp.rst:137
msgid "ConnectX-6 Dx and later devices have a UTC format counter"
msgstr ""
