# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-21 08:55+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../driver-api/tty/tty_struct.rst:5
msgid "TTY Struct"
msgstr ""

#: ../../../driver-api/tty/tty_struct.rst:9
msgid ""
"struct tty_struct is allocated by the TTY layer upon the first open of the "
"TTY device and released after the last close. The TTY layer passes this "
"structure to most of struct tty_operation's hooks. Members of tty_struct are "
"documented in `TTY Struct Reference`_ at the bottom."
msgstr ""

#: ../../../driver-api/tty/tty_struct.rst:15
msgid "Initialization"
msgstr ""

#: ../../../driver-api/tty/tty_struct:17: drivers/tty/tty_io.c:1235
msgid "helper for termios setup"
msgstr ""

#: ../../../driver-api/tty/tty_struct:17: drivers/tty/tty_io.c:1239
#: ../../../driver-api/tty/tty_struct:23: drivers/tty/tty_io.c:240
#: ../../../driver-api/tty/tty_struct:29: include/linux/tty.h:391
#: ../../../driver-api/tty/tty_struct:32: drivers/tty/tty_io.c:1552
#: ../../../driver-api/tty/tty_struct:38: drivers/tty/tty_io.c:1268
#: ../../../driver-api/tty/tty_struct:44: drivers/tty/tty_io.c:3142
#: ../../../driver-api/tty/tty_struct:50: drivers/tty/tty_io.c:754
#: drivers/tty/tty_io.c:785 ../../../driver-api/tty/tty_struct:56:
#: drivers/tty/tty_io.c:504 ../../../driver-api/tty/tty_struct:62:
#: drivers/tty/tty_io.c:671 drivers/tty/tty_io.c:685 drivers/tty/tty_io.c:733
#: ../../../driver-api/tty/tty_struct:68: drivers/tty/tty_io.c:2321
msgid "**Parameters**"
msgstr ""

#: ../../../driver-api/tty/tty_struct:17: drivers/tty/tty_io.c:1241
#: ../../../driver-api/tty/tty_struct:29: include/linux/tty.h:393
#: ../../../driver-api/tty/tty_struct:32: drivers/tty/tty_io.c:1554
#: ../../../driver-api/tty/tty_struct:38: drivers/tty/tty_io.c:1267
#: ../../../driver-api/tty/tty_struct:44: drivers/tty/tty_io.c:3144
#: ../../../driver-api/tty/tty_struct:50: drivers/tty/tty_io.c:756
#: drivers/tty/tty_io.c:787 ../../../driver-api/tty/tty_struct:56:
#: drivers/tty/tty_io.c:506 ../../../driver-api/tty/tty_struct:62:
#: drivers/tty/tty_io.c:673 drivers/tty/tty_io.c:687
#: ../../../driver-api/tty/tty_struct:68: drivers/tty/tty_io.c:2323
msgid "``struct tty_struct *tty``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:17: drivers/tty/tty_io.c:1236
msgid "the tty to set up"
msgstr ""

#: ../../../driver-api/tty/tty_struct:17: drivers/tty/tty_io.c:1238
#: ../../../driver-api/tty/tty_struct:23: drivers/tty/tty_io.c:239
#: ../../../driver-api/tty/tty_struct:29: include/linux/tty.h:392
#: ../../../driver-api/tty/tty_struct:32: drivers/tty/tty_io.c:1551
#: ../../../driver-api/tty/tty_struct:38: drivers/tty/tty_io.c:1268
#: ../../../driver-api/tty/tty_struct:44: drivers/tty/tty_io.c:3142
#: ../../../driver-api/tty/tty_struct:50: drivers/tty/tty_io.c:753
#: drivers/tty/tty_io.c:784 ../../../driver-api/tty/tty_struct:56:
#: drivers/tty/tty_io.c:503 ../../../driver-api/tty/tty_struct:62:
#: drivers/tty/tty_io.c:670 drivers/tty/tty_io.c:684
#: ../../../driver-api/tty/tty_struct:68: drivers/tty/tty_io.c:2321
#: ../../../driver-api/tty/tty_struct:74: include/linux/tty.h:303
#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:185
msgid "**Description**"
msgstr ""

#: ../../../driver-api/tty/tty_struct:17: drivers/tty/tty_io.c:1237
msgid ""
"Initialise the termios structure for this tty. This runs under the "
"``tty_mutex`` currently so we can be relaxed about ordering."
msgstr ""

#: ../../../driver-api/tty/tty_struct.rst:21
msgid "Name"
msgstr ""

#: ../../../driver-api/tty/tty_struct:23: drivers/tty/tty_io.c:236
msgid "return tty naming"
msgstr ""

#: ../../../driver-api/tty/tty_struct:23: drivers/tty/tty_io.c:242
msgid "``const struct tty_struct *tty``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:23: drivers/tty/tty_io.c:237
msgid "tty structure"
msgstr ""

#: ../../../driver-api/tty/tty_struct:23: drivers/tty/tty_io.c:238
msgid ""
"Convert a tty structure into a name. The name reflects the kernel naming "
"policy and if udev is in use may not reflect user space"
msgstr ""

#: ../../../driver-api/tty/tty_struct:23: drivers/tty/tty_io.c:241
msgid "Locking: none"
msgstr ""

#: ../../../driver-api/tty/tty_struct.rst:27
msgid "Reference counting"
msgstr ""

#: ../../../driver-api/tty/tty_struct:29: include/linux/tty.h:387
msgid "get a tty reference"
msgstr ""

#: ../../../driver-api/tty/tty_struct:29: include/linux/tty.h:388
#: ../../../driver-api/tty/tty_struct:32: drivers/tty/tty_io.c:1549
msgid "tty device"
msgstr ""

#: ../../../driver-api/tty/tty_struct:29: include/linux/tty.h:390
#: ../../../driver-api/tty/tty_struct:44: drivers/tty/tty_io.c:3148
#: ../../../driver-api/tty/tty_struct:62: drivers/tty/tty_io.c:732
msgid "**Return**"
msgstr ""

#: ../../../driver-api/tty/tty_struct:29: include/linux/tty.h:390
msgid "a new reference to a tty object"
msgstr ""

#: ../../../driver-api/tty/tty_struct:29: include/linux/tty.h:391
msgid ""
"Locking: The caller must hold sufficient locks/counts to ensure that their "
"existing reference cannot go away."
msgstr ""

#: ../../../driver-api/tty/tty_struct:32: drivers/tty/tty_io.c:1548
msgid "release a tty kref"
msgstr ""

#: ../../../driver-api/tty/tty_struct:32: drivers/tty/tty_io.c:1550
msgid ""
"Release a reference to the **tty** device and if need be let the kref layer "
"destruct the object for us."
msgstr ""

#: ../../../driver-api/tty/tty_struct.rst:36
msgid "Install"
msgstr ""

#: ../../../driver-api/tty/tty_struct:38: drivers/tty/tty_io.c:1264
msgid "usual tty->ops->install"
msgstr ""

#: ../../../driver-api/tty/tty_struct:38: drivers/tty/tty_io.c:1270
msgid "``struct tty_driver *driver``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:38: drivers/tty/tty_io.c:1265
msgid "the driver for the tty"
msgstr ""

#: ../../../driver-api/tty/tty_struct:38: drivers/tty/tty_io.c:1266
msgid "the tty"
msgstr ""

#: ../../../driver-api/tty/tty_struct:38: drivers/tty/tty_io.c:1267
msgid ""
"If the **driver** overrides **tty->ops->install**, it still can call this "
"function to perform the standard install operations."
msgstr ""

#: ../../../driver-api/tty/tty_struct.rst:42
msgid "Read & Write"
msgstr ""

#: ../../../driver-api/tty/tty_struct:44: drivers/tty/tty_io.c:3138
msgid "write one character to a tty"
msgstr ""

#: ../../../driver-api/tty/tty_struct:44: drivers/tty/tty_io.c:3139
msgid "tty"
msgstr ""

#: ../../../driver-api/tty/tty_struct:44: drivers/tty/tty_io.c:3141
msgid "``u8 ch``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:44: drivers/tty/tty_io.c:3140
msgid "character to write"
msgstr ""

#: ../../../driver-api/tty/tty_struct:44: drivers/tty/tty_io.c:3141
msgid ""
"Write one byte to the **tty** using the provided **tty->ops-"
">put_char\\(\\)** method if present."
msgstr ""

#: ../../../driver-api/tty/tty_struct:44: drivers/tty/tty_io.c:3144
msgid "**Note**"
msgstr ""

#: ../../../driver-api/tty/tty_struct:44: drivers/tty/tty_io.c:3145
msgid ""
"the specific put_char operation in the driver layer may go away soon. Don't "
"call it directly, use this method"
msgstr ""

#: ../../../driver-api/tty/tty_struct:44: drivers/tty/tty_io.c:3148
msgid "the number of characters successfully output."
msgstr ""

#: ../../../driver-api/tty/tty_struct.rst:48
msgid "Start & Stop"
msgstr ""

#: ../../../driver-api/tty/tty_struct:50: drivers/tty/tty_io.c:750
#: drivers/tty/tty_io.c:781
msgid "propagate flow control"
msgstr ""

#: ../../../driver-api/tty/tty_struct:50: drivers/tty/tty_io.c:751
msgid "tty to stop"
msgstr ""

#: ../../../driver-api/tty/tty_struct:50: drivers/tty/tty_io.c:752
msgid ""
"Perform flow control to the driver. May be called on an already stopped "
"device and will not re-call the :c:type:`tty_driver->stop\\(\\) "
"<tty_driver>` method."
msgstr ""

#: ../../../driver-api/tty/tty_struct:50: drivers/tty/tty_io.c:755
msgid ""
"This functionality is used by both the line disciplines for halting incoming "
"flow and by the driver. It may therefore be called from any context, may be "
"under the tty ``atomic_write_lock`` but not always."
msgstr ""

#: ../../../driver-api/tty/tty_struct:50: drivers/tty/tty_io.c:759
#: drivers/tty/tty_io.c:787
msgid "Locking:"
msgstr ""

#: ../../../driver-api/tty/tty_struct:50: drivers/tty/tty_io.c:760
#: drivers/tty/tty_io.c:788
msgid "flow.lock"
msgstr ""

#: ../../../driver-api/tty/tty_struct:50: drivers/tty/tty_io.c:782
msgid "tty to start"
msgstr ""

#: ../../../driver-api/tty/tty_struct:50: drivers/tty/tty_io.c:783
msgid ""
"Start a tty that has been stopped if at all possible. If **tty** was "
"previously stopped and is now being started, the :c:type:`tty_driver-"
">start\\(\\) <tty_driver>` method is invoked and the line discipline woken."
msgstr ""

#: ../../../driver-api/tty/tty_struct.rst:54
msgid "Wakeup"
msgstr ""

#: ../../../driver-api/tty/tty_struct:56: drivers/tty/tty_io.c:500
msgid "request more data"
msgstr ""

#: ../../../driver-api/tty/tty_struct:56: drivers/tty/tty_io.c:501
msgid "terminal"
msgstr ""

#: ../../../driver-api/tty/tty_struct:56: drivers/tty/tty_io.c:502
msgid ""
"Internal and external helper for wakeups of tty. This function informs the "
"line discipline if present that the driver is ready to receive more output "
"data."
msgstr ""

#: ../../../driver-api/tty/tty_struct.rst:60
msgid "Hangup"
msgstr ""

#: ../../../driver-api/tty/tty_struct:62: drivers/tty/tty_io.c:667
msgid "trigger a hangup event"
msgstr ""

#: ../../../driver-api/tty/tty_struct:62: drivers/tty/tty_io.c:668
#: drivers/tty/tty_io.c:682
msgid "tty to hangup"
msgstr ""

#: ../../../driver-api/tty/tty_struct:62: drivers/tty/tty_io.c:669
msgid ""
"A carrier loss (virtual or otherwise) has occurred on **tty**. Schedule a "
"hangup sequence to run after this event."
msgstr ""

#: ../../../driver-api/tty/tty_struct:62: drivers/tty/tty_io.c:681
msgid "process vhangup"
msgstr ""

#: ../../../driver-api/tty/tty_struct:62: drivers/tty/tty_io.c:683
msgid ""
"The user has asked via system call for the terminal to be hung up. We do "
"this synchronously so that when the syscall returns the process is complete. "
"That guarantee is necessary for security reasons."
msgstr ""

#: ../../../driver-api/tty/tty_struct:62: drivers/tty/tty_io.c:729
msgid "was tty hung up"
msgstr ""

#: ../../../driver-api/tty/tty_struct:62: drivers/tty/tty_io.c:735
msgid "``struct file *filp``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:62: drivers/tty/tty_io.c:730
msgid "file pointer of tty"
msgstr ""

#: ../../../driver-api/tty/tty_struct:62: drivers/tty/tty_io.c:732
msgid "true if the tty has been subject to a vhangup or a carrier loss"
msgstr ""

#: ../../../driver-api/tty/tty_struct.rst:66
msgid "Misc"
msgstr ""

#: ../../../driver-api/tty/tty_struct:68: drivers/tty/tty_io.c:2317
msgid "resize event"
msgstr ""

#: ../../../driver-api/tty/tty_struct:68: drivers/tty/tty_io.c:2318
msgid "tty being resized"
msgstr ""

#: ../../../driver-api/tty/tty_struct:68: drivers/tty/tty_io.c:2320
msgid "``struct winsize *ws``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:68: drivers/tty/tty_io.c:2319
msgid "new dimensions"
msgstr ""

#: ../../../driver-api/tty/tty_struct:68: drivers/tty/tty_io.c:2320
msgid ""
"Update the termios variables and send the necessary signals to peform a "
"terminal resize correctly."
msgstr ""

#: ../../../driver-api/tty/tty_struct.rst:72
#: ../../../driver-api/tty/tty_struct:74: include/linux/tty.h:253
msgid "TTY Struct Flags"
msgstr ""

#: ../../../driver-api/tty/tty_struct:74: include/linux/tty.h:257
msgid "**Constants**"
msgstr ""

#: ../../../driver-api/tty/tty_struct:74: include/linux/tty.h:259
msgid "``TTY_THROTTLED``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:74: include/linux/tty.h:260
msgid ""
"Driver input is throttled. The ldisc should call :c:member:`tty_driver."
"unthrottle()` in order to resume reception when it is ready to process more "
"data (at threshold min)."
msgstr ""

#: ../../../driver-api/tty/tty_struct:74: include/linux/tty.h:264
msgid "``TTY_IO_ERROR``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:74: include/linux/tty.h:265
msgid ""
"If set, causes all subsequent userspace read/write calls on the tty to fail, "
"returning -``EIO``. (May be no ldisc too.)"
msgstr ""

#: ../../../driver-api/tty/tty_struct:74: include/linux/tty.h:268
msgid "``TTY_OTHER_CLOSED``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:74: include/linux/tty.h:269
msgid "Device is a pty and the other side has closed."
msgstr ""

#: ../../../driver-api/tty/tty_struct:74: include/linux/tty.h:271
msgid "``TTY_EXCLUSIVE``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:74: include/linux/tty.h:272
msgid "Exclusive open mode (a single opener)."
msgstr ""

#: ../../../driver-api/tty/tty_struct:74: include/linux/tty.h:274
msgid "``TTY_DO_WRITE_WAKEUP``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:74: include/linux/tty.h:275
msgid ""
"If set, causes the driver to call the :c:member:`tty_ldisc_ops."
"write_wakeup()` method in order to resume transmission when it can accept "
"more data to transmit."
msgstr ""

#: ../../../driver-api/tty/tty_struct:74: include/linux/tty.h:279
msgid "``TTY_LDISC_OPEN``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:74: include/linux/tty.h:280
msgid "Indicates that a line discipline is open. For debugging purposes only."
msgstr ""

#: ../../../driver-api/tty/tty_struct:74: include/linux/tty.h:282
msgid "``TTY_PTY_LOCK``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:74: include/linux/tty.h:283
msgid ""
"A flag private to pty code to implement ``TIOCSPTLCK``/``TIOCGPTLCK`` logic."
msgstr ""

#: ../../../driver-api/tty/tty_struct:74: include/linux/tty.h:285
msgid "``TTY_NO_WRITE_SPLIT``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:74: include/linux/tty.h:286
msgid ""
"Prevent driver from splitting up writes into smaller chunks (preserve write "
"boundaries to driver)."
msgstr ""

#: ../../../driver-api/tty/tty_struct:74: include/linux/tty.h:289
msgid "``TTY_HUPPED``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:74: include/linux/tty.h:290
msgid "The TTY was hung up. This is set post :c:member:`tty_driver.hangup()`."
msgstr ""

#: ../../../driver-api/tty/tty_struct:74: include/linux/tty.h:292
msgid "``TTY_HUPPING``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:74: include/linux/tty.h:293
msgid "The TTY is in the process of hanging up to abort potential readers."
msgstr ""

#: ../../../driver-api/tty/tty_struct:74: include/linux/tty.h:295
msgid "``TTY_LDISC_CHANGING``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:74: include/linux/tty.h:296
msgid ""
"Line discipline for this TTY is being changed. I/O should not block when "
"this is set. Use tty_io_nonblock() to check."
msgstr ""

#: ../../../driver-api/tty/tty_struct:74: include/linux/tty.h:299
msgid "``TTY_LDISC_HALTED``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:74: include/linux/tty.h:300
msgid ""
"Line discipline for this TTY was stopped. No work should be queued to this "
"ldisc."
msgstr ""

#: ../../../driver-api/tty/tty_struct:74: include/linux/tty.h:254
msgid "These bits are used in the :c:member:`tty_struct.flags` field."
msgstr ""

#: ../../../driver-api/tty/tty_struct:74: include/linux/tty.h:256
msgid ""
"So that interrupts won't be able to mess up the queues, copy_to_cooked must "
"be atomic with respect to itself, as must tty->write.  Thus, you must use "
"the inline functions set_bit() and clear_bit() to make things atomic."
msgstr ""

#: ../../../driver-api/tty/tty_struct.rst:78
msgid "TTY Struct Reference"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:122
msgid "state associated with a tty while open"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:126
msgid "**Definition**::"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:177
msgid "**Members**"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:124
msgid "``kref``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:125
msgid ""
"reference counting by tty_kref_get() and tty_kref_put(), reaching zero frees "
"the structure"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:129
msgid "``index``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:130
msgid "index of this tty (e.g. to construct **name** like tty12)"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:126
msgid "``dev``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:127
msgid "class device or ``NULL`` (e.g. ptys, serdev)"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:127
msgid "``driver``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:128
msgid ":c:type:`struct tty_driver <tty_driver>` operating this tty"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:182
msgid "``port``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:183
msgid ""
"persistent storage for this device (i.e. :c:type:`struct tty_port "
"<tty_port>`)"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:128
msgid "``ops``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:129
msgid ""
":c:type:`struct tty_operations <tty_operations>` of **driver** for this tty "
"(open, close, etc.)"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:131
msgid "``ldisc``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:132
msgid "the current line discipline for this tty (n_tty by default)"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:130
msgid "``ldisc_sem``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:131
msgid "protects line discipline changes (**ldisc**) -- lock tty not pty"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:132
msgid "``atomic_write_lock``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:133
msgid ""
"protects against concurrent writers, i.e. locks **write_cnt**, **write_buf** "
"and similar"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:134
msgid "``legacy_mutex``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:135
msgid ""
"leftover from history (BKL -> BTM -> **legacy_mutex**), protecting several "
"operations on this tty"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:136
msgid "``throttle_mutex``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:137
msgid ""
"protects against concurrent tty_throttle_safe() and tty_unthrottle_safe() "
"(but not tty_unthrottle())"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:138
msgid "``termios_rwsem``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:139
msgid "protects **termios** and **termios_locked**"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:139
msgid "``winsize_mutex``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:140
msgid "protects **winsize**"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:140
msgid "``termios``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:141
msgid "termios for the current tty, copied from/to **driver.termios**"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:141
msgid "``termios_locked``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:142
msgid "locked termios (by ``TIOCGLCKTRMIOS`` and ``TIOCSLCKTRMIOS`` ioctls)"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:143
msgid "``name``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:144
msgid "name of the tty constructed by tty_line_name() (e.g. ttyS3)"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:144
msgid "``flags``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:145
msgid "bitwise OR of ``TTY_THROTTLED``, ``TTY_IO_ERROR``, ..."
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:145
msgid "``count``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:146
msgid ""
"count of open processes, reaching zero cancels all the work for this tty and "
"drops a **kref** too (but does not free this tty)"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:163
msgid "``receive_room``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:164
msgid "bytes permitted to feed to **ldisc** without any being lost"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:147
msgid "``winsize``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:148
msgid "size of the terminal \"window\" (cf. **winsize_mutex**)"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:148
msgid "``flow``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:149
msgid "flow settings grouped together"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:149
msgid "``flow.lock``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:150
msgid "lock for **flow** members"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:150
msgid "``flow.stopped``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:151
msgid "tty stopped/started by stop_tty()/start_tty()"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:151
msgid "``flow.tco_stopped``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:152
msgid ""
"tty stopped/started by ``TCOOFF``/``TCOON`` ioctls (it has precedence over "
"**flow.stopped**)"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:153
msgid "``ctrl``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:154
msgid "control settings grouped together"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:155
msgid "``ctrl.pgrp``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:156
msgid "process group of this tty (setpgrp(2))"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:156
msgid "``ctrl.session``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:157
msgid ""
"session of this tty (setsid(2)). Writes are protected by both **ctrl.lock** "
"and **legacy_mutex**, readers must use at least one of them."
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:154
msgid "``ctrl.lock``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:155
msgid "lock for **ctrl** members"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:159
msgid "``ctrl.pktstatus``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:160
msgid "packet mode status (bitwise OR of ``TIOCPKT_`` constants)"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:160
msgid "``ctrl.packet``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:161
msgid "packet mode enabled"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:161
msgid "``hw_stopped``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:162
msgid ""
"not controlled by the tty layer, under **driver**'s control for CTS handling"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:178
msgid "``closing``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:179
msgid "when set during close, n_tty processes only START & STOP chars"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:164
msgid "``flow_change``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:165
msgid ""
"controls behavior of throttling, see tty_throttle_safe() and "
"tty_unthrottle_safe()"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:166
msgid "``link``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:167
msgid "link to another pty (master -> slave and vice versa)"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:167
msgid "``fasync``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:168
msgid "state for ``O_ASYNC`` (for ``SIGIO``); managed by fasync_helper()"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:168
msgid "``write_wait``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:169
msgid ""
"concurrent writers are waiting in this queue until they are allowed to write"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:170
msgid "``read_wait``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:171
msgid "readers wait for data in this queue"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:171
msgid "``hangup_work``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:172
msgid ""
"normally a work to perform a hangup (do_tty_hangup()); while freeing the "
"tty, (re)used to release_one_tty()"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:173
msgid "``disc_data``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:174
msgid ""
"pointer to **ldisc**'s private data (e.g. to :c:type:`struct n_tty_data "
"<n_tty_data>`)"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:174
msgid "``driver_data``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:175
msgid ""
"pointer to **driver**'s private data (e.g. :c:type:`struct uart_state "
"<uart_state>`)"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:175
msgid "``files_lock``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:176
msgid "protects **tty_files** list"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:180
msgid "``write_cnt``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:181
msgid "count of bytes written in tty_write() to **write_buf**"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:179
msgid "``write_buf``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:180
msgid "temporary buffer used during tty_write() to copy user data to"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:176
msgid "``tty_files``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:177
msgid ""
"list of (re)openers of this tty (i.e. linked :c:type:`struct "
"tty_file_private <tty_file_private>`)"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:181
msgid "``SAK_work``"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:182
msgid "if the tty has a pending do_SAK, it is queued here"
msgstr ""

#: ../../../driver-api/tty/tty_struct:80: include/linux/tty.h:183
msgid ""
"All of the state associated with a tty while the tty is open. Persistent "
"storage for tty devices is referenced here as **port** and is documented in :"
"c:type:`struct tty_port <tty_port>`."
msgstr ""
