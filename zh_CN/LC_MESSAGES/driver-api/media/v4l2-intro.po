# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../driver-api/media/v4l2-intro.rst:4
msgid "Introduction"
msgstr ""

#: ../../../driver-api/media/v4l2-intro.rst:6
msgid ""
"The V4L2 drivers tend to be very complex due to the complexity of the "
"hardware: most devices have multiple ICs, export multiple device nodes in /"
"dev, and create also non-V4L2 devices such as DVB, ALSA, FB, I2C and input "
"(IR) devices."
msgstr ""

#: ../../../driver-api/media/v4l2-intro.rst:11
msgid ""
"Especially the fact that V4L2 drivers have to setup supporting ICs to do "
"audio/video muxing/encoding/decoding makes it more complex than most. "
"Usually these ICs are connected to the main bridge driver through one or "
"more I2C buses, but other buses can also be used. Such devices are called "
"'sub-devices'."
msgstr ""

#: ../../../driver-api/media/v4l2-intro.rst:17
msgid ""
"For a long time the framework was limited to the video_device struct for "
"creating V4L device nodes and video_buf for handling the video buffers (note "
"that this document does not discuss the video_buf framework)."
msgstr ""

#: ../../../driver-api/media/v4l2-intro.rst:21
msgid ""
"This meant that all drivers had to do the setup of device instances and "
"connecting to sub-devices themselves. Some of this is quite complicated to "
"do right and many drivers never did do it correctly."
msgstr ""

#: ../../../driver-api/media/v4l2-intro.rst:25
msgid ""
"There is also a lot of common code that could never be refactored due to the "
"lack of a framework."
msgstr ""

#: ../../../driver-api/media/v4l2-intro.rst:28
msgid ""
"So this framework sets up the basic building blocks that all drivers need "
"and this same framework should make it much easier to refactor common code "
"into utility functions shared by all drivers."
msgstr ""

#: ../../../driver-api/media/v4l2-intro.rst:32
msgid ""
"A good example to look at as a reference is the v4l2-pci-skeleton.c source "
"that is available in samples/v4l/. It is a skeleton driver for a PCI capture "
"card, and demonstrates how to use the V4L2 driver framework. It can be used "
"as a template for real PCI video capture driver."
msgstr ""

#: ../../../driver-api/media/v4l2-intro.rst:38
msgid "Structure of a V4L driver"
msgstr ""

#: ../../../driver-api/media/v4l2-intro.rst:40
msgid "All drivers have the following structure:"
msgstr ""

#: ../../../driver-api/media/v4l2-intro.rst:42
msgid "A struct for each device instance containing the device state."
msgstr ""

#: ../../../driver-api/media/v4l2-intro.rst:44
msgid "A way of initializing and commanding sub-devices (if any)."
msgstr ""

#: ../../../driver-api/media/v4l2-intro.rst:46
msgid ""
"Creating V4L2 device nodes (/dev/videoX, /dev/vbiX and /dev/radioX) and "
"keeping track of device-node specific data."
msgstr ""

#: ../../../driver-api/media/v4l2-intro.rst:49
msgid "Filehandle-specific structs containing per-filehandle data;"
msgstr ""

#: ../../../driver-api/media/v4l2-intro.rst:51
msgid "video buffer handling."
msgstr ""

#: ../../../driver-api/media/v4l2-intro.rst:53
msgid "This is a rough schematic of how it all relates:"
msgstr ""

#: ../../../driver-api/media/v4l2-intro.rst:67
msgid "Structure of the V4L2 framework"
msgstr ""

#: ../../../driver-api/media/v4l2-intro.rst:69
msgid ""
"The framework closely resembles the driver structure: it has a v4l2_device "
"struct for the device instance data, a v4l2_subdev struct to refer to sub-"
"device instances, the video_device struct stores V4L2 device node data and "
"the v4l2_fh struct keeps track of filehandle instances."
msgstr ""

#: ../../../driver-api/media/v4l2-intro.rst:74
msgid ""
"The V4L2 framework also optionally integrates with the media framework. If a "
"driver sets the struct v4l2_device mdev field, sub-devices and video nodes "
"will automatically appear in the media framework as entities."
msgstr ""
