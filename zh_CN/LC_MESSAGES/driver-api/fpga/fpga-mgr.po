# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-20 11:24+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../driver-api/fpga/fpga-mgr.rst:2
msgid "FPGA Manager"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr.rst:5
msgid "Overview"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr.rst:7
msgid ""
"The FPGA manager core exports a set of functions for programming an FPGA "
"with an image.  The API is manufacturer agnostic.  All manufacturer "
"specifics are hidden away in a low level driver which registers a set of ops "
"with the core. The FPGA image data itself is very manufacturer specific, but "
"for our purposes it's just binary data.  The FPGA manager core won't parse "
"it."
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr.rst:13
msgid ""
"The FPGA image to be programmed can be in a scatter gather list, a single "
"contiguous buffer, or a firmware file.  Because allocating contiguous kernel "
"memory for the buffer should be avoided, users are encouraged to use a "
"scatter gather list instead if possible."
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr.rst:18
msgid ""
"The particulars for programming the image are presented in a structure "
"(struct fpga_image_info).  This struct contains parameters such as pointers "
"to the FPGA image as well as image-specific particulars such as whether the "
"image was built for full or partial reconfiguration."
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr.rst:24
msgid "How to support a new FPGA device"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr.rst:26
msgid ""
"To add another FPGA manager, write a driver that implements a set of ops.  "
"The probe function calls ``fpga_mgr_register()`` or "
"``fpga_mgr_register_full()``, such as::"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr.rst:72
msgid ""
"Alternatively, the probe function could call one of the resource managed "
"register functions, ``devm_fpga_mgr_register()`` or "
"``devm_fpga_mgr_register_full()``.  When these functions are used, the "
"parameter syntax is the same, but the call to ``fpga_mgr_unregister()`` "
"should be removed. In the above example, the ``socfpga_fpga_remove()`` "
"function would not be required."
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr.rst:79
msgid ""
"The ops will implement whatever device specific register writes are needed "
"to do the programming sequence for this particular FPGA.  These ops return 0 "
"for success or negative error codes otherwise."
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr.rst:83
msgid "The programming sequence is::"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr.rst:84
msgid ".parse_header (optional, may be called once or multiple times)"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr.rst:85
msgid ".write_init"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr.rst:86
msgid ".write or .write_sg (may be called once or multiple times)"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr.rst:87
msgid ".write_complete"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr.rst:89
msgid ""
"The .parse_header function will set header_size and data_size to struct "
"fpga_image_info. Before parse_header call, header_size is initialized with "
"initial_header_size. If flag skip_header of fpga_manager_ops is true, .write "
"function will get image buffer starting at header_size offset from the "
"beginning. If data_size is set, .write function will get data_size bytes of "
"the image buffer, otherwise .write will get data up to the end of image "
"buffer. This will not affect .write_sg, .write_sg will still get whole image "
"in sg_table form. If FPGA image is already mapped as a single contiguous "
"buffer, whole buffer will be passed into .parse_header. If image is in "
"scatter-gather form, core code will buffer up at least .initial_header_size "
"before the first call of .parse_header, if it is not enough, .parse_header "
"should set desired size into info->header_size and return -EAGAIN, then it "
"will be called again with greater part of image buffer on the input."
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr.rst:103
msgid ""
"The .write_init function will prepare the FPGA to receive the image data. "
"The buffer passed into .write_init will be at least info->header_size bytes "
"long; if the whole bitstream is not immediately available then the core code "
"will buffer up at least this much before starting."
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr.rst:108
msgid ""
"The .write function writes a buffer to the FPGA. The buffer may be contain "
"the whole FPGA image or may be a smaller chunk of an FPGA image.  In the "
"latter case, this function is called multiple times for successive chunks. "
"This interface is suitable for drivers which use PIO."
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr.rst:113
msgid ""
"The .write_sg version behaves the same as .write except the input is a "
"sg_table scatter list. This interface is suitable for drivers which use DMA."
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr.rst:116
msgid ""
"The .write_complete function is called after all the image has been written "
"to put the FPGA into operating mode."
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr.rst:119
msgid ""
"The ops include a .state function which will determine the state the FPGA is "
"in and return a code of type enum fpga_mgr_states.  It doesn't result in a "
"change in state."
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr.rst:124
msgid "API for implementing a new FPGA Manager driver"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr.rst:126
msgid "``fpga_mgr_states`` -  Values for :c:expr:`fpga_manager->state`."
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr.rst:127
msgid "struct fpga_manager -  the FPGA manager struct"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr.rst:128
msgid "struct fpga_manager_ops -  Low level FPGA manager driver ops"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr.rst:129
msgid ""
"struct fpga_manager_info -  Parameter structure for fpga_mgr_register_full()"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr.rst:130
msgid ""
"__fpga_mgr_register_full() -  Create and register an FPGA manager using the "
"fpga_mgr_info structure to provide the full flexibility of options"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr.rst:132
msgid ""
"__fpga_mgr_register() -  Create and register an FPGA manager using standard "
"arguments"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr.rst:134
msgid ""
"__devm_fpga_mgr_register_full() -  Resource managed version of "
"__fpga_mgr_register_full()"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr.rst:136
msgid ""
"__devm_fpga_mgr_register() -  Resource managed version of "
"__fpga_mgr_register()"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr.rst:137
msgid "fpga_mgr_unregister() -  Unregister an FPGA manager"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr.rst:139
msgid ""
"Helper macros ``fpga_mgr_register_full()``, ``fpga_mgr_register()``, "
"``devm_fpga_mgr_register_full()``, and ``devm_fpga_mgr_register()`` are "
"available to ease the registration."
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:143: include/linux/fpga/fpga-mgr.h:18
msgid "fpga framework states"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:143: include/linux/fpga/fpga-mgr.h:22
msgid "**Constants**"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:143: include/linux/fpga/fpga-mgr.h:24
msgid "``FPGA_MGR_STATE_UNKNOWN``"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:143: include/linux/fpga/fpga-mgr.h:25
msgid "can't determine state"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:143: include/linux/fpga/fpga-mgr.h:27
msgid "``FPGA_MGR_STATE_POWER_OFF``"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:143: include/linux/fpga/fpga-mgr.h:28
msgid "FPGA power is off"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:143: include/linux/fpga/fpga-mgr.h:30
msgid "``FPGA_MGR_STATE_POWER_UP``"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:143: include/linux/fpga/fpga-mgr.h:31
msgid "FPGA reports power is up"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:143: include/linux/fpga/fpga-mgr.h:33
msgid "``FPGA_MGR_STATE_RESET``"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:143: include/linux/fpga/fpga-mgr.h:34
msgid "FPGA in reset state"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:143: include/linux/fpga/fpga-mgr.h:36
msgid "``FPGA_MGR_STATE_FIRMWARE_REQ``"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:143: include/linux/fpga/fpga-mgr.h:37
msgid "firmware request in progress"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:143: include/linux/fpga/fpga-mgr.h:39
msgid "``FPGA_MGR_STATE_FIRMWARE_REQ_ERR``"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:143: include/linux/fpga/fpga-mgr.h:40
msgid "firmware request failed"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:143: include/linux/fpga/fpga-mgr.h:42
msgid "``FPGA_MGR_STATE_PARSE_HEADER``"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:143: include/linux/fpga/fpga-mgr.h:43
msgid "parse FPGA image header"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:143: include/linux/fpga/fpga-mgr.h:45
msgid "``FPGA_MGR_STATE_PARSE_HEADER_ERR``"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:143: include/linux/fpga/fpga-mgr.h:46
msgid "Error during PARSE_HEADER stage"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:143: include/linux/fpga/fpga-mgr.h:48
msgid "``FPGA_MGR_STATE_WRITE_INIT``"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:143: include/linux/fpga/fpga-mgr.h:49
msgid "preparing FPGA for programming"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:143: include/linux/fpga/fpga-mgr.h:51
msgid "``FPGA_MGR_STATE_WRITE_INIT_ERR``"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:143: include/linux/fpga/fpga-mgr.h:52
msgid "Error during WRITE_INIT stage"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:143: include/linux/fpga/fpga-mgr.h:54
msgid "``FPGA_MGR_STATE_WRITE``"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:143: include/linux/fpga/fpga-mgr.h:55
msgid "writing image to FPGA"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:143: include/linux/fpga/fpga-mgr.h:57
msgid "``FPGA_MGR_STATE_WRITE_ERR``"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:143: include/linux/fpga/fpga-mgr.h:58
msgid "Error while writing FPGA"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:143: include/linux/fpga/fpga-mgr.h:60
msgid "``FPGA_MGR_STATE_WRITE_COMPLETE``"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:143: include/linux/fpga/fpga-mgr.h:61
msgid "Doing post programming steps"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:143: include/linux/fpga/fpga-mgr.h:63
msgid "``FPGA_MGR_STATE_WRITE_COMPLETE_ERR``"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:143: include/linux/fpga/fpga-mgr.h:64
msgid "Error during WRITE_COMPLETE"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:143: include/linux/fpga/fpga-mgr.h:66
msgid "``FPGA_MGR_STATE_OPERATING``"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:143: include/linux/fpga/fpga-mgr.h:67
msgid "FPGA is programmed and operating"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:146: include/linux/fpga/fpga-mgr.h:197
msgid "fpga manager structure"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:146: include/linux/fpga/fpga-mgr.h:201
#: ../../../driver-api/fpga/fpga-mgr:149: include/linux/fpga/fpga-mgr.h:152
#: ../../../driver-api/fpga/fpga-mgr:152: include/linux/fpga/fpga-mgr.h:133
msgid "**Definition**::"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:146: include/linux/fpga/fpga-mgr.h:214
#: ../../../driver-api/fpga/fpga-mgr:149: include/linux/fpga/fpga-mgr.h:168
#: ../../../driver-api/fpga/fpga-mgr:152: include/linux/fpga/fpga-mgr.h:142
msgid "**Members**"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:146: include/linux/fpga/fpga-mgr.h:198
#: ../../../driver-api/fpga/fpga-mgr:152: include/linux/fpga/fpga-mgr.h:130
msgid "``name``"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:146: include/linux/fpga/fpga-mgr.h:199
msgid "name of low level fpga manager"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:146: include/linux/fpga/fpga-mgr.h:199
msgid "``dev``"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:146: include/linux/fpga/fpga-mgr.h:200
msgid "fpga manager device"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:146: include/linux/fpga/fpga-mgr.h:200
msgid "``ref_mutex``"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:146: include/linux/fpga/fpga-mgr.h:201
msgid "only allows one reference to fpga manager"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:146: include/linux/fpga/fpga-mgr.h:201
#: ../../../driver-api/fpga/fpga-mgr:149: include/linux/fpga/fpga-mgr.h:154
msgid "``state``"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:146: include/linux/fpga/fpga-mgr.h:202
msgid "state of fpga manager"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:146: include/linux/fpga/fpga-mgr.h:202
#: ../../../driver-api/fpga/fpga-mgr:152: include/linux/fpga/fpga-mgr.h:131
msgid "``compat_id``"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:146: include/linux/fpga/fpga-mgr.h:203
#: ../../../driver-api/fpga/fpga-mgr:152: include/linux/fpga/fpga-mgr.h:132
msgid "FPGA manager id for compatibility check."
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:146: include/linux/fpga/fpga-mgr.h:203
#: ../../../driver-api/fpga/fpga-mgr:152: include/linux/fpga/fpga-mgr.h:132
msgid "``mops``"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:146: include/linux/fpga/fpga-mgr.h:204
msgid "pointer to struct of fpga manager ops"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:146: include/linux/fpga/fpga-mgr.h:204
msgid "``mops_owner``"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:146: include/linux/fpga/fpga-mgr.h:205
msgid "module containing the mops"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:146: include/linux/fpga/fpga-mgr.h:205
#: ../../../driver-api/fpga/fpga-mgr:152: include/linux/fpga/fpga-mgr.h:133
msgid "``priv``"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:146: include/linux/fpga/fpga-mgr.h:206
msgid "low level driver private date"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:149: include/linux/fpga/fpga-mgr.h:148
msgid "ops for low level fpga manager drivers"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:149: include/linux/fpga/fpga-mgr.h:149
msgid "``initial_header_size``"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:149: include/linux/fpga/fpga-mgr.h:150
msgid ""
"minimum number of bytes that should be passed into parse_header and "
"write_init."
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:149: include/linux/fpga/fpga-mgr.h:151
msgid "``skip_header``"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:149: include/linux/fpga/fpga-mgr.h:152
msgid ""
"bool flag to tell fpga-mgr core whether it should skip info->header_size "
"part at the beginning of the image when invoking write callback."
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:149: include/linux/fpga/fpga-mgr.h:155
msgid "returns an enum value of the FPGA's state"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:149: include/linux/fpga/fpga-mgr.h:155
msgid "``status``"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:149: include/linux/fpga/fpga-mgr.h:156
msgid "returns status of the FPGA, including reconfiguration error code"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:149: include/linux/fpga/fpga-mgr.h:156
msgid "``parse_header``"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:149: include/linux/fpga/fpga-mgr.h:157
msgid ""
"parse FPGA image header to set info->header_size and info->data_size. In "
"case the input buffer is not large enough, set required size to info-"
">header_size and return -EAGAIN."
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:149: include/linux/fpga/fpga-mgr.h:159
msgid "``write_init``"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:149: include/linux/fpga/fpga-mgr.h:160
msgid "prepare the FPGA to receive configuration data"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:149: include/linux/fpga/fpga-mgr.h:160
msgid "``write``"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:149: include/linux/fpga/fpga-mgr.h:161
msgid "write count bytes of configuration data to the FPGA"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:149: include/linux/fpga/fpga-mgr.h:161
msgid "``write_sg``"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:149: include/linux/fpga/fpga-mgr.h:162
msgid "write the scatter list of configuration data to the FPGA"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:149: include/linux/fpga/fpga-mgr.h:162
msgid "``write_complete``"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:149: include/linux/fpga/fpga-mgr.h:163
msgid "set FPGA to operating state after writing is done"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:149: include/linux/fpga/fpga-mgr.h:163
msgid "``fpga_remove``"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:149: include/linux/fpga/fpga-mgr.h:164
msgid "optional: Set FPGA into a specific state during driver remove"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:149: include/linux/fpga/fpga-mgr.h:164
msgid "``groups``"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:149: include/linux/fpga/fpga-mgr.h:165
msgid "optional attribute groups."
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:149: include/linux/fpga/fpga-mgr.h:168
#: ../../../driver-api/fpga/fpga-mgr:152: include/linux/fpga/fpga-mgr.h:137
#: ../../../driver-api/fpga/fpga-mgr:155: drivers/fpga/fpga-mgr.c:781
#: ../../../driver-api/fpga/fpga-mgr:158: drivers/fpga/fpga-mgr.c:865
#: ../../../driver-api/fpga/fpga-mgr:161: drivers/fpga/fpga-mgr.c:922
#: ../../../driver-api/fpga/fpga-mgr:164: drivers/fpga/fpga-mgr.c:959
#: ../../../driver-api/fpga/fpga-mgr:167: drivers/fpga/fpga-mgr.c:891
msgid "**Description**"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:149: include/linux/fpga/fpga-mgr.h:165
msgid ""
"fpga_manager_ops are the low level functions implemented by a specific fpga "
"manager driver.  The optional ones are tested for NULL before being called, "
"so leaving them out is fine."
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:152: include/linux/fpga/fpga-mgr.h:129
msgid "collection of parameters for an FPGA Manager"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:152: include/linux/fpga/fpga-mgr.h:131
#: ../../../driver-api/fpga/fpga-mgr:158: drivers/fpga/fpga-mgr.c:860
#: ../../../driver-api/fpga/fpga-mgr:164: drivers/fpga/fpga-mgr.c:952
msgid "fpga manager name"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:152: include/linux/fpga/fpga-mgr.h:133
#: ../../../driver-api/fpga/fpga-mgr:158: drivers/fpga/fpga-mgr.c:861
#: ../../../driver-api/fpga/fpga-mgr:164: drivers/fpga/fpga-mgr.c:953
msgid "pointer to structure of fpga manager ops"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:152: include/linux/fpga/fpga-mgr.h:134
#: ../../../driver-api/fpga/fpga-mgr:158: drivers/fpga/fpga-mgr.c:862
#: ../../../driver-api/fpga/fpga-mgr:164: drivers/fpga/fpga-mgr.c:954
msgid "fpga manager private data"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:152: include/linux/fpga/fpga-mgr.h:134
msgid ""
"fpga_manager_info contains parameters for the register_full function. These "
"are separated into an info structure because they some are optional others "
"could be added to in the future. The info structure facilitates maintaining "
"a stable API."
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:155: drivers/fpga/fpga-mgr.c:776
#: ../../../driver-api/fpga/fpga-mgr:158: drivers/fpga/fpga-mgr.c:858
msgid "create and register an FPGA Manager device"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:155: drivers/fpga/fpga-mgr.c:780
#: ../../../driver-api/fpga/fpga-mgr:158: drivers/fpga/fpga-mgr.c:862
#: ../../../driver-api/fpga/fpga-mgr:161: drivers/fpga/fpga-mgr.c:919
#: ../../../driver-api/fpga/fpga-mgr:164: drivers/fpga/fpga-mgr.c:954
#: ../../../driver-api/fpga/fpga-mgr:167: drivers/fpga/fpga-mgr.c:892
msgid "**Parameters**"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:155: drivers/fpga/fpga-mgr.c:782
#: ../../../driver-api/fpga/fpga-mgr:158: drivers/fpga/fpga-mgr.c:864
#: ../../../driver-api/fpga/fpga-mgr:161: drivers/fpga/fpga-mgr.c:921
#: ../../../driver-api/fpga/fpga-mgr:164: drivers/fpga/fpga-mgr.c:956
msgid "``struct device *parent``"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:155: drivers/fpga/fpga-mgr.c:777
#: ../../../driver-api/fpga/fpga-mgr:158: drivers/fpga/fpga-mgr.c:859
#: ../../../driver-api/fpga/fpga-mgr:161: drivers/fpga/fpga-mgr.c:916
#: ../../../driver-api/fpga/fpga-mgr:164: drivers/fpga/fpga-mgr.c:951
msgid "fpga manager device from pdev"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:155: drivers/fpga/fpga-mgr.c:779
#: ../../../driver-api/fpga/fpga-mgr:161: drivers/fpga/fpga-mgr.c:918
msgid "``const struct fpga_manager_info *info``"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:155: drivers/fpga/fpga-mgr.c:778
#: ../../../driver-api/fpga/fpga-mgr:161: drivers/fpga/fpga-mgr.c:917
msgid "parameters for fpga manager"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:155: drivers/fpga/fpga-mgr.c:780
#: ../../../driver-api/fpga/fpga-mgr:158: drivers/fpga/fpga-mgr.c:864
#: ../../../driver-api/fpga/fpga-mgr:161: drivers/fpga/fpga-mgr.c:919
#: ../../../driver-api/fpga/fpga-mgr:164: drivers/fpga/fpga-mgr.c:956
msgid "``struct module *owner``"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:155: drivers/fpga/fpga-mgr.c:779
#: ../../../driver-api/fpga/fpga-mgr:158: drivers/fpga/fpga-mgr.c:863
#: ../../../driver-api/fpga/fpga-mgr:161: drivers/fpga/fpga-mgr.c:918
#: ../../../driver-api/fpga/fpga-mgr:164: drivers/fpga/fpga-mgr.c:955
msgid "owner module containing the ops"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:155: drivers/fpga/fpga-mgr.c:780
msgid ""
"The caller of this function is responsible for calling "
"fpga_mgr_unregister(). Using devm_fpga_mgr_register_full() instead is "
"recommended."
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:155: drivers/fpga/fpga-mgr.c:783
#: ../../../driver-api/fpga/fpga-mgr:158: drivers/fpga/fpga-mgr.c:870
#: ../../../driver-api/fpga/fpga-mgr:161: drivers/fpga/fpga-mgr.c:920
#: ../../../driver-api/fpga/fpga-mgr:164: drivers/fpga/fpga-mgr.c:957
msgid "**Return**"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:155: drivers/fpga/fpga-mgr.c:784
#: ../../../driver-api/fpga/fpga-mgr:158: drivers/fpga/fpga-mgr.c:871
msgid "pointer to struct fpga_manager pointer or ERR_PTR()"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:158: drivers/fpga/fpga-mgr.c:861
#: ../../../driver-api/fpga/fpga-mgr:164: drivers/fpga/fpga-mgr.c:953
msgid "``const char *name``"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:158: drivers/fpga/fpga-mgr.c:862
#: ../../../driver-api/fpga/fpga-mgr:164: drivers/fpga/fpga-mgr.c:954
msgid "``const struct fpga_manager_ops *mops``"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:158: drivers/fpga/fpga-mgr.c:863
#: ../../../driver-api/fpga/fpga-mgr:164: drivers/fpga/fpga-mgr.c:955
msgid "``void *priv``"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:158: drivers/fpga/fpga-mgr.c:864
msgid ""
"The caller of this function is responsible for calling "
"fpga_mgr_unregister(). Using devm_fpga_mgr_register() instead is "
"recommended. This simple version of the register function should be "
"sufficient for most users. The fpga_mgr_register_full() function is "
"available for users that need to pass additional, optional parameters."
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:161: drivers/fpga/fpga-mgr.c:915
#: ../../../driver-api/fpga/fpga-mgr:164: drivers/fpga/fpga-mgr.c:950
msgid "resource managed variant of fpga_mgr_register()"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:161: drivers/fpga/fpga-mgr.c:920
#: ../../../driver-api/fpga/fpga-mgr:164: drivers/fpga/fpga-mgr.c:957
msgid "fpga manager pointer on success, negative error code otherwise."
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:161: drivers/fpga/fpga-mgr.c:921
msgid ""
"This is the devres variant of fpga_mgr_register_full() for which the "
"unregister function will be called automatically when the managing device is "
"detached."
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:164: drivers/fpga/fpga-mgr.c:958
msgid ""
"This is the devres variant of fpga_mgr_register() for which the unregister "
"function will be called automatically when the managing device is detached."
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:167: drivers/fpga/fpga-mgr.c:888
msgid "unregister an FPGA manager"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:167: drivers/fpga/fpga-mgr.c:894
msgid "``struct fpga_manager *mgr``"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:167: drivers/fpga/fpga-mgr.c:889
msgid "fpga manager struct"
msgstr ""

#: ../../../driver-api/fpga/fpga-mgr:167: drivers/fpga/fpga-mgr.c:890
msgid ""
"This function is intended for use in an FPGA manager driver's remove "
"function."
msgstr ""
