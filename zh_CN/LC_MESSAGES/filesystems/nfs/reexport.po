# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../filesystems/nfs/reexport.rst:2
msgid "Reexporting NFS filesystems"
msgstr ""

#: ../../../filesystems/nfs/reexport.rst:5
msgid "Overview"
msgstr ""

#: ../../../filesystems/nfs/reexport.rst:7
msgid ""
"It is possible to reexport an NFS filesystem over NFS.  However, this "
"feature comes with a number of limitations.  Before trying it, we recommend "
"some careful research to determine whether it will work for your purposes."
msgstr ""

#: ../../../filesystems/nfs/reexport.rst:12
msgid "A discussion of current known limitations follows."
msgstr ""

#: ../../../filesystems/nfs/reexport.rst:15
msgid "\"fsid=\" required, crossmnt broken"
msgstr ""

#: ../../../filesystems/nfs/reexport.rst:17
msgid ""
"We require the \"fsid=\" export option on any reexport of an NFS "
"filesystem.  You can use \"uuidgen -r\" to generate a unique argument."
msgstr ""

#: ../../../filesystems/nfs/reexport.rst:20
msgid ""
"The \"crossmnt\" export does not propagate \"fsid=\", so it will not allow "
"traversing into further nfs filesystems; if you wish to export nfs "
"filesystems mounted under the exported filesystem, you'll need to export "
"them explicitly, assigning each its own unique \"fsid= option."
msgstr ""

#: ../../../filesystems/nfs/reexport.rst:26
msgid "Reboot recovery"
msgstr ""

#: ../../../filesystems/nfs/reexport.rst:28
msgid ""
"The NFS protocol's normal reboot recovery mechanisms don't work for the case "
"when the reexport server reboots because the source server has not rebooted, "
"and so it is not in grace.  Since the source server is not in grace, it "
"cannot offer any guarantees that the file won't have been changed between "
"the locks getting lost and any attempt to recover them. The same applies to "
"delegations and any associated locks.  Clients are not allowed to get file "
"locks or delegations from a reexport server, any attempts will fail with "
"operation not supported."
msgstr ""

#: ../../../filesystems/nfs/reexport.rst:38
msgid "Filehandle limits"
msgstr ""

#: ../../../filesystems/nfs/reexport.rst:40
msgid ""
"If the original server uses an X byte filehandle for a given object, the "
"reexport server's filehandle for the reexported object will be X+22 bytes, "
"rounded up to the nearest multiple of four bytes."
msgstr ""

#: ../../../filesystems/nfs/reexport.rst:44
msgid "The result must fit into the RFC-mandated filehandle size limits:"
msgstr ""

#: ../../../filesystems/nfs/reexport.rst:47
msgid "NFSv2"
msgstr ""

#: ../../../filesystems/nfs/reexport.rst:47
#: ../../../filesystems/nfs/reexport.rst:71
msgid "32 bytes"
msgstr ""

#: ../../../filesystems/nfs/reexport.rst:49
msgid "NFSv3"
msgstr ""

#: ../../../filesystems/nfs/reexport.rst:49
#: ../../../filesystems/nfs/reexport.rst:73
msgid "64 bytes"
msgstr ""

#: ../../../filesystems/nfs/reexport.rst:51
msgid "NFSv4"
msgstr ""

#: ../../../filesystems/nfs/reexport.rst:51
msgid "128 bytes"
msgstr ""

#: ../../../filesystems/nfs/reexport.rst:54
msgid ""
"So, for example, you will only be able to reexport a filesystem over NFSv2 "
"if the original server gives you filehandles that fit in 10 bytes--which is "
"unlikely."
msgstr ""

#: ../../../filesystems/nfs/reexport.rst:58
msgid ""
"In general there's no way to know the maximum filehandle size given out by "
"an NFS server without asking the server vendor."
msgstr ""

#: ../../../filesystems/nfs/reexport.rst:61
msgid ""
"But the following table gives a few examples.  The first column is the "
"typical length of the filehandle from a Linux server exporting the given "
"filesystem, the second is the length after that nfs export is reexported by "
"another Linux host:"
msgstr ""

#: ../../../filesystems/nfs/reexport.rst:67
msgid "filehandle length"
msgstr ""

#: ../../../filesystems/nfs/reexport.rst:67
msgid "after reexport"
msgstr ""

#: ../../../filesystems/nfs/reexport.rst:69
msgid "ext4:"
msgstr ""

#: ../../../filesystems/nfs/reexport.rst:69
msgid "28 bytes"
msgstr ""

#: ../../../filesystems/nfs/reexport.rst:69
msgid "52 bytes"
msgstr ""

#: ../../../filesystems/nfs/reexport.rst:71
msgid "xfs:"
msgstr ""

#: ../../../filesystems/nfs/reexport.rst:71
msgid "56 bytes"
msgstr ""

#: ../../../filesystems/nfs/reexport.rst:73
msgid "btrfs:"
msgstr ""

#: ../../../filesystems/nfs/reexport.rst:73
msgid "40 bytes"
msgstr ""

#: ../../../filesystems/nfs/reexport.rst:76
msgid ""
"All will therefore fit in an NFSv3 or NFSv4 filehandle after reexport, but "
"none are reexportable over NFSv2."
msgstr ""

#: ../../../filesystems/nfs/reexport.rst:79
msgid ""
"Linux server filehandles are a bit more complicated than this, though; for "
"example:"
msgstr ""

#: ../../../filesystems/nfs/reexport.rst:82
msgid ""
"The (non-default) \"subtreecheck\" export option generally requires another "
"4 to 8 bytes in the filehandle."
msgstr ""

#: ../../../filesystems/nfs/reexport.rst:84
msgid ""
"If you export a subdirectory of a filesystem (instead of exporting the "
"filesystem root), that also usually adds 4 to 8 bytes."
msgstr ""

#: ../../../filesystems/nfs/reexport.rst:87
msgid ""
"If you export over NFSv2, knfsd usually uses a shorter filesystem identifier "
"that saves 8 bytes."
msgstr ""

#: ../../../filesystems/nfs/reexport.rst:89
msgid "The root directory of an export uses a filehandle that is shorter."
msgstr ""

#: ../../../filesystems/nfs/reexport.rst:92
msgid ""
"As you can see, the 128-byte NFSv4 filehandle is large enough that you're "
"unlikely to have trouble using NFSv4 to reexport any filesystem exported "
"from a Linux server.  In general, if the original server is something that "
"also supports NFSv3, you're *probably* OK.  Re-exporting over NFSv3 may be "
"dicier, and reexporting over NFSv2 will probably never work."
msgstr ""

#: ../../../filesystems/nfs/reexport.rst:99
msgid ""
"For more details of Linux filehandle structure, the best reference is the "
"source code and comments; see in particular:"
msgstr ""

#: ../../../filesystems/nfs/reexport.rst:102
msgid "include/linux/exportfs.h:enum fid_type"
msgstr ""

#: ../../../filesystems/nfs/reexport.rst:103
msgid "include/uapi/linux/nfsd/nfsfh.h:struct nfs_fhbase_new"
msgstr ""

#: ../../../filesystems/nfs/reexport.rst:104
msgid "fs/nfsd/nfsfh.c:set_version_and_fsid_type"
msgstr ""

#: ../../../filesystems/nfs/reexport.rst:105
msgid "fs/nfs/export.c:nfs_encode_fh"
msgstr ""

#: ../../../filesystems/nfs/reexport.rst:108
msgid "Open DENY bits ignored"
msgstr ""

#: ../../../filesystems/nfs/reexport.rst:110
msgid ""
"NFS since NFSv4 supports ALLOW and DENY bits taken from Windows, which allow "
"you, for example, to open a file in a mode which forbids other read opens or "
"write opens. The Linux client doesn't use them, and the server's support has "
"always been incomplete: they are enforced only against other NFS users, not "
"against processes accessing the exported filesystem locally. A reexport "
"server will also not pass them along to the original server, so they will "
"not be enforced between clients of different reexport servers."
msgstr ""
