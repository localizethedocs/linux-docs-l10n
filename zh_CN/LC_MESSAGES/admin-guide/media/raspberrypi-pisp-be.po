# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-30 08:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../admin-guide/media/raspberrypi-pisp-be.rst:5
msgid "Raspberry Pi PiSP Back End Memory-to-Memory ISP (pisp-be)"
msgstr ""

#: ../../../admin-guide/media/raspberrypi-pisp-be.rst:8
msgid "The PiSP Back End"
msgstr ""

#: ../../../admin-guide/media/raspberrypi-pisp-be.rst:10
msgid ""
"The PiSP Back End is a memory-to-memory Image Signal Processor (ISP) which "
"reads image data from DRAM memory and performs image processing as specified "
"by the application through the parameters in a configuration buffer, before "
"writing pixel data back to memory through two distinct output channels."
msgstr ""

#: ../../../admin-guide/media/raspberrypi-pisp-be.rst:15
msgid ""
"The ISP registers and programming model are documented in the `Raspberry Pi "
"Image Signal Processor (PiSP) Specification document`_"
msgstr ""

#: ../../../admin-guide/media/raspberrypi-pisp-be.rst:18
msgid ""
"The PiSP Back End ISP processes images in tiles. The handling of image "
"tessellation and the computation of low-level configuration parameters is "
"realized by a free software library called `libpisp <https://github.com/"
"raspberrypi/libpisp>`_."
msgstr ""

#: ../../../admin-guide/media/raspberrypi-pisp-be.rst:23
msgid ""
"The full image processing pipeline, which involves capturing RAW Bayer data "
"from an image sensor through a MIPI CSI-2 compatible capture interface, "
"storing them in DRAM memory and processing them in the PiSP Back End to "
"obtain images usable by an application is implemented in `libcamera <https://"
"libcamera.org>`_ as part of the Raspberry Pi platform support."
msgstr ""

#: ../../../admin-guide/media/raspberrypi-pisp-be.rst:30
msgid "The pisp-be driver"
msgstr ""

#: ../../../admin-guide/media/raspberrypi-pisp-be.rst:32
msgid ""
"The Raspberry Pi PiSP Back End (pisp-be) driver is located under drivers/"
"media/platform/raspberrypi/pisp-be. It uses the `V4L2 API` to register a "
"number of video capture and output devices, the `V4L2 subdev API` to "
"register a subdevice for the ISP that connects the video devices in a single "
"media graph realized using the `Media Controller (MC) API`."
msgstr ""

#: ../../../admin-guide/media/raspberrypi-pisp-be.rst:38
msgid ""
"The media topology registered by the `pisp-be` driver is represented below:"
msgstr ""

#: ../../../admin-guide/media/raspberrypi-pisp-be.rst:42
msgid "Diagram of the default media pipeline topology"
msgstr ""

#: ../../../admin-guide/media/raspberrypi-pisp-be.rst:47
msgid "The media graph registers the following video device nodes:"
msgstr ""

#: ../../../admin-guide/media/raspberrypi-pisp-be.rst:49
msgid ""
"pispbe-input: output device for images to be submitted to the ISP for "
"processing."
msgstr ""

#: ../../../admin-guide/media/raspberrypi-pisp-be.rst:51
msgid "pispbe-tdn_input: output device for temporal denoise."
msgstr ""

#: ../../../admin-guide/media/raspberrypi-pisp-be.rst:52
msgid "pispbe-stitch_input: output device for image stitching (HDR)."
msgstr ""

#: ../../../admin-guide/media/raspberrypi-pisp-be.rst:53
msgid "pispbe-output0: first capture device for processed images."
msgstr ""

#: ../../../admin-guide/media/raspberrypi-pisp-be.rst:54
msgid "pispbe-output1: second capture device for processed images."
msgstr ""

#: ../../../admin-guide/media/raspberrypi-pisp-be.rst:55
msgid "pispbe-tdn_output: capture device for temporal denoise."
msgstr ""

#: ../../../admin-guide/media/raspberrypi-pisp-be.rst:56
msgid "pispbe-stitch_output: capture device for image stitching (HDR)."
msgstr ""

#: ../../../admin-guide/media/raspberrypi-pisp-be.rst:57
msgid "pispbe-config: output device for ISP configuration parameters."
msgstr ""

#: ../../../admin-guide/media/raspberrypi-pisp-be.rst:60
msgid "pispbe-input"
msgstr ""

#: ../../../admin-guide/media/raspberrypi-pisp-be.rst:62
msgid ""
"Images to be processed by the ISP are queued to the `pispbe-input` output "
"device node. For a list of image formats supported as input to the ISP refer "
"to the `Raspberry Pi Image Signal Processor (PiSP) Specification document`_."
msgstr ""

#: ../../../admin-guide/media/raspberrypi-pisp-be.rst:67
msgid "pispbe-tdn_input, pispbe-tdn_output"
msgstr ""

#: ../../../admin-guide/media/raspberrypi-pisp-be.rst:69
msgid ""
"The `pispbe-tdn_input` output video device receives images to be processed "
"by the temporal denoise block which are captured from the `pispbe-"
"tdn_output` capture video device. Userspace is responsible for maintaining "
"queues on both devices, and ensuring that buffers completed on the output "
"are queued to the input."
msgstr ""

#: ../../../admin-guide/media/raspberrypi-pisp-be.rst:76
msgid "pispbe-stitch_input, pispbe-stitch_output"
msgstr ""

#: ../../../admin-guide/media/raspberrypi-pisp-be.rst:78
msgid ""
"To realize HDR (high dynamic range) image processing the image stitching and "
"tonemapping blocks are used. The `pispbe-stitch_output` writes images to "
"memory and the `pispbe-stitch_input` receives the previously written frame "
"to process it along with the current input image. Userspace is responsible "
"for maintaining queues on both devices, and ensuring that buffers completed "
"on the output are queued to the input."
msgstr ""

#: ../../../admin-guide/media/raspberrypi-pisp-be.rst:86
msgid "pispbe-output0, pispbe-output1"
msgstr ""

#: ../../../admin-guide/media/raspberrypi-pisp-be.rst:88
msgid ""
"The two capture devices write to memory the pixel data as processed by the "
"ISP."
msgstr ""

#: ../../../admin-guide/media/raspberrypi-pisp-be.rst:91
msgid "pispbe-config"
msgstr ""

#: ../../../admin-guide/media/raspberrypi-pisp-be.rst:93
msgid ""
"The `pispbe-config` output video devices receives a buffer of configuration "
"parameters that define the desired image processing to be performed by the "
"ISP."
msgstr ""

#: ../../../admin-guide/media/raspberrypi-pisp-be.rst:96
msgid ""
"The format of the ISP configuration parameter is defined by :c:type:"
"`pisp_be_tiles_config` C structure and the meaning of each parameter is "
"described in the `Raspberry Pi Image Signal Processor (PiSP) Specification "
"document`_."
msgstr ""

#: ../../../admin-guide/media/raspberrypi-pisp-be.rst:102
msgid "ISP configuration"
msgstr ""

#: ../../../admin-guide/media/raspberrypi-pisp-be.rst:104
msgid ""
"The ISP configuration is described solely by the content of the parameters "
"buffer. The only parameter that userspace needs to configure using the V4L2 "
"API is the image format on the output and capture video devices for "
"validation of the content of the parameters buffer."
msgstr ""
