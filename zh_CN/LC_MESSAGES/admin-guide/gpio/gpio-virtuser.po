# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../admin-guide/gpio/gpio-virtuser.rst:4
msgid "Virtual GPIO Consumer"
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:6
msgid ""
"The virtual GPIO Consumer module allows users to instantiate virtual devices "
"that request GPIOs and then control their behavior over debugfs. Virtual "
"consumer devices can be instantiated from device-tree or over configfs."
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:10
msgid ""
"A virtual consumer uses the driver-facing GPIO APIs and allows to cover it "
"with automated tests driven by user-space. The GPIOs are requested using "
"``gpiod_get_array()`` and so we support multiple GPIOs per connector ID."
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:15
msgid "Creating GPIO consumers"
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:17
msgid ""
"The gpio-consumer module registers a configfs subsystem called ``'gpio-"
"virtuser'``. For details of the configfs filesystem, please refer to the "
"configfs documentation."
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:21
msgid ""
"The user can create a hierarchy of configfs groups and items as well as "
"modify values of exposed attributes. Once the consumer is instantiated, this "
"hierarchy will be translated to appropriate device properties. The general "
"structure is:"
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:25
msgid "**Group:** ``/config/gpio-virtuser``"
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:27
msgid "This is the top directory of the gpio-consumer configfs tree."
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:29
msgid "**Group:** ``/config/gpio-consumer/example-name``"
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:31
msgid "**Attribute:** ``/config/gpio-consumer/example-name/live``"
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:33
msgid "**Attribute:** ``/config/gpio-consumer/example-name/dev_name``"
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:35
msgid "This is a directory representing a GPIO consumer device."
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:37
msgid ""
"The read-only ``dev_name`` attribute exposes the name of the device as it "
"will appear in the system on the platform bus. This is useful for locating "
"the associated debugfs directory under ``/sys/kernel/debug/gpio-virtuser/"
"$dev_name``."
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:42
msgid ""
"The ``'live'`` attribute allows to trigger the actual creation of the device "
"once it's fully configured. The accepted values are: ``'1'`` to enable the "
"virtual device and ``'0'`` to disable and tear it down."
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:47
msgid "Creating GPIO lookup tables"
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:49
msgid "Users can create a number of configfs groups under the device group:"
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:51
msgid "**Group:** ``/config/gpio-consumer/example-name/con_id``"
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:53
msgid ""
"The ``'con_id'`` directory represents a single GPIO lookup and its value "
"maps to the ``'con_id'`` argument of the ``gpiod_get()`` function. For "
"example: ``con_id`` == ``'reset'`` maps to the ``reset-gpios`` device "
"property."
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:57
msgid ""
"Users can assign a number of GPIOs to each lookup. Each GPIO is a sub-"
"directory with a user-defined name under the ``'con_id'`` group."
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:60
msgid "**Attribute:** ``/config/gpio-consumer/example-name/con_id/0/key``"
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:62
msgid "**Attribute:** ``/config/gpio-consumer/example-name/con_id/0/offset``"
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:64
msgid "**Attribute:** ``/config/gpio-consumer/example-name/con_id/0/drive``"
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:66
msgid "**Attribute:** ``/config/gpio-consumer/example-name/con_id/0/pull``"
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:68
msgid ""
"**Attribute:** ``/config/gpio-consumer/example-name/con_id/0/active_low``"
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:70
msgid ""
"**Attribute:** ``/config/gpio-consumer/example-name/con_id/0/transitory``"
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:72
msgid ""
"This is a group describing a single GPIO in the ``con_id-gpios`` property."
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:74
msgid ""
"For virtual consumers created using configfs we use machine lookup tables so "
"this group can be considered as a mapping between the filesystem and the "
"fields of a single entry in ``'struct gpiod_lookup'``."
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:78
msgid ""
"The ``'key'`` attribute represents either the name of the chip this GPIO "
"belongs to or the GPIO line name. This depends on the value of the "
"``'offset'`` attribute: if its value is >= 0, then ``'key'`` represents the "
"label of the chip to lookup while ``'offset'`` represents the offset of the "
"line in that chip. If ``'offset'`` is < 0, then ``'key'`` represents the "
"name of the line."
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:84
msgid ""
"The remaining attributes map to the ``'flags'`` field of the GPIO lookup "
"struct. The first two take string values as arguments:"
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:87
msgid ""
"**``'drive'``:** ``'push-pull'``, ``'open-drain'``, ``'open-source'`` "
"**``'pull'``:** ``'pull-up'``, ``'pull-down'``, ``'pull-disabled'``, ``'as-"
"is'``"
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:90
msgid "``'active_low'`` and ``'transitory'`` are boolean attributes."
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:93
msgid "Activating GPIO consumers"
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:95
msgid ""
"Once the configuration is complete, the ``'live'`` attribute must be set to "
"1 in order to instantiate the consumer. It can be set back to 0 to destroy "
"the virtual device. The module will synchronously wait for the new simulated "
"device to be successfully probed and if this doesn't happen, writing to "
"``'live'`` will result in an error."
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:102
msgid "Device-tree"
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:104
msgid ""
"Virtual GPIO consumers can also be defined in device-tree. The compatible "
"string must be: ``\"gpio-virtuser\"`` with at least one property following "
"the standardized GPIO pattern."
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:108
msgid "An example device-tree code defining a virtual GPIO consumer:"
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:120
msgid "Controlling virtual GPIO consumers"
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:122
msgid ""
"Once active, the device will export debugfs attributes for controlling GPIO "
"arrays as well as each requested GPIO line separately. Let's consider the "
"following device property: ``foo-gpios = <&gpio0 0 0>, <&gpio0 4 0>;``."
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:126
msgid "The following debugfs attribute groups will be created:"
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:128
msgid "**Group:** ``/sys/kernel/debug/gpio-virtuser/$dev_name/gpiod:foo/``"
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:130
msgid ""
"This is the group that will contain the attributes for the entire GPIO array."
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:132
msgid ""
"**Attribute:** ``/sys/kernel/debug/gpio-virtuser/$dev_name/gpiod:foo/values``"
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:134
msgid ""
"**Attribute:** ``/sys/kernel/debug/gpio-virtuser/$dev_name/gpiod:foo/"
"values_atomic``"
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:136
msgid ""
"Both attributes allow to read and set arrays of GPIO values. User must pass "
"exactly the number of values that the array contains in the form of a string "
"containing zeroes and ones representing inactive and active GPIO states "
"respectively. In this example: ``echo 11 > values``."
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:141
msgid ""
"The ``values_atomic`` attribute works the same as ``values`` but the kernel "
"will execute the GPIO driver callbacks in interrupt context."
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:144
msgid ""
"**Group:** ``/sys/kernel/debug/gpio-virtuser/$dev_name/gpiod:foo:$index/``"
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:146
msgid ""
"This is a group that represents a single GPIO with ``$index`` being its "
"offset in the array."
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:149
msgid ""
"**Attribute:** ``/sys/kernel/debug/gpio-virtuser/$dev_name/gpiod:foo:$index/"
"consumer``"
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:151
msgid "Allows to set and read the consumer label of the GPIO line."
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:153
msgid ""
"**Attribute:** ``/sys/kernel/debug/gpio-virtuser/$dev_name/gpiod:foo:$index/"
"debounce``"
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:155
msgid "Allows to set and read the debounce period of the GPIO line."
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:157
msgid ""
"**Attribute:** ``/sys/kernel/debug/gpio-virtuser/$dev_name/gpiod:foo:$index/"
"direction``"
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:159
msgid ""
"**Attribute:** ``/sys/kernel/debug/gpio-virtuser/$dev_name/gpiod:foo:$index/"
"direction_atomic``"
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:161
msgid ""
"These two attributes allow to set the direction of the GPIO line. They "
"accept \"input\" and \"output\" as values. The atomic variant executes the "
"driver callback in interrupt context."
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:165
msgid ""
"**Attribute:** ``/sys/kernel/debug/gpio-virtuser/$dev_name/gpiod:foo:$index/"
"interrupts``"
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:167
msgid ""
"If the line is requested in input mode, writing ``1`` to this attribute will "
"make the module listen for edge interrupts on the GPIO. Writing ``0`` "
"disables the monitoring. Reading this attribute returns the current number "
"of registered interrupts (both edges)."
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:172
msgid ""
"**Attribute:** ``/sys/kernel/debug/gpio-virtuser/$dev_name/gpiod:foo:$index/"
"value``"
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:174
msgid ""
"**Attribute:** ``/sys/kernel/debug/gpio-virtuser/$dev_name/gpiod:foo:$index/"
"value_atomic``"
msgstr ""

#: ../../../admin-guide/gpio/gpio-virtuser.rst:176
msgid ""
"Both attributes allow to read and set values of individual requested GPIO "
"lines. They accept the following values: ``1`` and ``0``."
msgstr ""
