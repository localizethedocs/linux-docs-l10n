# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../admin-guide/cgroup-v1/cpuacct.rst:3
msgid "CPU Accounting Controller"
msgstr ""

#: ../../../admin-guide/cgroup-v1/cpuacct.rst:5
msgid ""
"The CPU accounting controller is used to group tasks using cgroups and "
"account the CPU usage of these groups of tasks."
msgstr ""

#: ../../../admin-guide/cgroup-v1/cpuacct.rst:8
msgid ""
"The CPU accounting controller supports multi-hierarchy groups. An accounting "
"group accumulates the CPU usage of all of its child groups and the tasks "
"directly present in its group."
msgstr ""

#: ../../../admin-guide/cgroup-v1/cpuacct.rst:12
msgid ""
"Accounting groups can be created by first mounting the cgroup filesystem::"
msgstr ""

#: ../../../admin-guide/cgroup-v1/cpuacct.rst:16
msgid ""
"With the above step, the initial or the parent accounting group becomes "
"visible at /sys/fs/cgroup. At bootup, this group includes all the tasks in "
"the system. /sys/fs/cgroup/tasks lists the tasks in this cgroup. /sys/fs/"
"cgroup/cpuacct.usage gives the CPU time (in nanoseconds) obtained by this "
"group which is essentially the CPU time obtained by all the tasks in the "
"system."
msgstr ""

#: ../../../admin-guide/cgroup-v1/cpuacct.rst:23
msgid ""
"New accounting groups can be created under the parent group /sys/fs/cgroup::"
msgstr ""

#: ../../../admin-guide/cgroup-v1/cpuacct.rst:29
msgid ""
"The above steps create a new group g1 and move the current shell process "
"(bash) into it. CPU time consumed by this bash and its children can be "
"obtained from g1/cpuacct.usage and the same is accumulated in /sys/fs/cgroup/"
"cpuacct.usage also."
msgstr ""

#: ../../../admin-guide/cgroup-v1/cpuacct.rst:34
msgid ""
"cpuacct.stat file lists a few statistics which further divide the CPU time "
"obtained by the cgroup into user and system times. Currently the following "
"statistics are supported:"
msgstr ""

#: ../../../admin-guide/cgroup-v1/cpuacct.rst:38
msgid ""
"user: Time spent by tasks of the cgroup in user mode. system: Time spent by "
"tasks of the cgroup in kernel mode."
msgstr ""

#: ../../../admin-guide/cgroup-v1/cpuacct.rst:41
msgid "user and system are in USER_HZ unit."
msgstr ""

#: ../../../admin-guide/cgroup-v1/cpuacct.rst:43
msgid ""
"cpuacct controller uses percpu_counter interface to collect user and system "
"times. This has two side effects:"
msgstr ""

#: ../../../admin-guide/cgroup-v1/cpuacct.rst:46
msgid ""
"It is theoretically possible to see wrong values for user and system times. "
"This is because percpu_counter_read() on 32bit systems isn't safe against "
"concurrent writes."
msgstr ""

#: ../../../admin-guide/cgroup-v1/cpuacct.rst:49
msgid ""
"It is possible to see slightly outdated values for user and system times due "
"to the batch processing nature of percpu_counter."
msgstr ""
