# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../admin-guide/device-mapper/dm-io.rst:3
msgid "dm-io"
msgstr ""

#: ../../../admin-guide/device-mapper/dm-io.rst:5
msgid ""
"Dm-io provides synchronous and asynchronous I/O services. There are three "
"types of I/O services available, and each type has a sync and an async "
"version."
msgstr ""

#: ../../../admin-guide/device-mapper/dm-io.rst:9
msgid ""
"The user must set up an io_region structure to describe the desired location "
"of the I/O. Each io_region indicates a block-device along with the starting "
"sector and size of the region::"
msgstr ""

#: ../../../admin-guide/device-mapper/dm-io.rst:19
msgid ""
"Dm-io can read from one io_region or write to one or more io_regions. Writes "
"to multiple regions are specified by an array of io_region structures."
msgstr ""

#: ../../../admin-guide/device-mapper/dm-io.rst:22
msgid ""
"The first I/O service type takes a list of memory pages as the data buffer "
"for the I/O, along with an offset into the first page::"
msgstr ""

#: ../../../admin-guide/device-mapper/dm-io.rst:37
msgid ""
"The second I/O service type takes an array of bio vectors as the data buffer "
"for the I/O. This service can be handy if the caller has a pre-assembled "
"bio, but wants to direct different portions of the bio to different devices::"
msgstr ""

#: ../../../admin-guide/device-mapper/dm-io.rst:48
msgid ""
"The third I/O service type takes a pointer to a vmalloc'd memory buffer as "
"the data buffer for the I/O. This service can be handy if the caller needs "
"to do I/O to a large region but doesn't want to allocate a large number of "
"individual memory pages::"
msgstr ""

#: ../../../admin-guide/device-mapper/dm-io.rst:58
msgid ""
"Callers of the asynchronous I/O services must include the name of a "
"completion callback routine and a pointer to some context data for the I/O::"
msgstr ""

#: ../../../admin-guide/device-mapper/dm-io.rst:63
msgid ""
"The \"error\" parameter in this callback, as well as the `*error` parameter "
"in all of the synchronous versions, is a bitset (instead of a simple error "
"value). In the case of an write-I/O to multiple regions, this bitset allows "
"dm-io to indicate success or failure on each individual region."
msgstr ""

#: ../../../admin-guide/device-mapper/dm-io.rst:68
msgid ""
"Before using any of the dm-io services, the user should call dm_io_get() and "
"specify the number of pages they expect to perform I/O on concurrently. Dm-"
"io will attempt to resize its mempool to make sure enough pages are always "
"available in order to avoid unnecessary waiting while performing I/O."
msgstr ""

#: ../../../admin-guide/device-mapper/dm-io.rst:73
msgid ""
"When the user is finished using the dm-io services, they should call "
"dm_io_put() and specify the same number of pages that were given on the "
"dm_io_get() call."
msgstr ""
