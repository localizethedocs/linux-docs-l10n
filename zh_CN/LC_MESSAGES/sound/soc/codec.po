# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-14 08:59+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../sound/soc/codec.rst:3
msgid "ASoC Codec Class Driver"
msgstr ""

#: ../../../sound/soc/codec.rst:5
msgid ""
"The codec class driver is generic and hardware independent code that "
"configures the codec, FM, MODEM, BT or external DSP to provide audio capture "
"and playback. It should contain no code that is specific to the target "
"platform or machine. All platform and machine specific code should be added "
"to the platform and machine drivers respectively."
msgstr ""

#: ../../../sound/soc/codec.rst:11
msgid "Each codec class driver *must* provide the following features:-"
msgstr ""

#: ../../../sound/soc/codec.rst:13 ../../../sound/soc/codec.rst:31
msgid "Codec DAI and PCM configuration"
msgstr ""

#: ../../../sound/soc/codec.rst:14
msgid "Codec control IO - using RegMap API"
msgstr ""

#: ../../../sound/soc/codec.rst:15 ../../../sound/soc/codec.rst:76
msgid "Mixers and audio controls"
msgstr ""

#: ../../../sound/soc/codec.rst:16
msgid "Codec audio operations"
msgstr ""

#: ../../../sound/soc/codec.rst:17
msgid "DAPM description."
msgstr ""

#: ../../../sound/soc/codec.rst:18
msgid "DAPM event handler."
msgstr ""

#: ../../../sound/soc/codec.rst:20
msgid "Optionally, codec drivers can also provide:-"
msgstr ""

#: ../../../sound/soc/codec.rst:22
msgid "DAC Digital mute control."
msgstr ""

#: ../../../sound/soc/codec.rst:24
msgid ""
"Its probably best to use this guide in conjunction with the existing codec "
"driver code in sound/soc/codecs/"
msgstr ""

#: ../../../sound/soc/codec.rst:28
msgid "ASoC Codec driver breakdown"
msgstr ""

#: ../../../sound/soc/codec.rst:32
msgid ""
"Each codec driver must have a struct snd_soc_dai_driver to define its DAI "
"and PCM capabilities and operations. This struct is exported so that it can "
"be registered with the core by your machine driver."
msgstr ""

#: ../../../sound/soc/codec.rst:36
msgid "e.g. ::"
msgstr ""

#: ../../../sound/soc/codec.rst:68
msgid "Codec control IO"
msgstr ""

#: ../../../sound/soc/codec.rst:69
msgid ""
"The codec can usually be controlled via an I2C or SPI style interface (AC97 "
"combines control with data in the DAI). The codec driver should use the "
"Regmap API for all codec IO. Please see include/linux/regmap.h and existing "
"codec drivers for example regmap usage."
msgstr ""

#: ../../../sound/soc/codec.rst:77
msgid ""
"All the codec mixers and audio controls can be defined using the convenience "
"macros defined in soc.h. ::"
msgstr ""

#: ../../../sound/soc/codec.rst:83
msgid "Defines a single control as follows:- ::"
msgstr ""

#: ../../../sound/soc/codec.rst:92
msgid "Other macros include:- ::"
msgstr ""

#: ../../../sound/soc/codec.rst:97
msgid "A stereo control ::"
msgstr ""

#: ../../../sound/soc/codec.rst:102
msgid "A stereo control spanning 2 registers ::"
msgstr ""

#: ../../../sound/soc/codec.rst:107
msgid "Defines an single enumerated control as follows:- ::"
msgstr ""

#: ../../../sound/soc/codec.rst:117
msgid "Defines a stereo enumerated control"
msgstr ""

#: ../../../sound/soc/codec.rst:121
msgid "Codec Audio Operations"
msgstr ""

#: ../../../sound/soc/codec.rst:122
msgid "The codec driver also supports the following ALSA PCM operations:- ::"
msgstr ""

#: ../../../sound/soc/codec.rst:134
msgid ""
"Please refer to the :doc:`ALSA driver PCM documentation <../kernel-api/"
"writing-an-alsa-driver>` for details."
msgstr ""

#: ../../../sound/soc/codec.rst:139
msgid "DAPM description"
msgstr ""

#: ../../../sound/soc/codec.rst:140
msgid ""
"The Dynamic Audio Power Management description describes the codec power "
"components and their relationships and registers to the ASoC core. Please "
"read dapm.rst for details of building the description."
msgstr ""

#: ../../../sound/soc/codec.rst:144
msgid "Please also see the examples in other codec drivers."
msgstr ""

#: ../../../sound/soc/codec.rst:148
msgid "DAPM event handler"
msgstr ""

#: ../../../sound/soc/codec.rst:149
msgid ""
"This function is a callback that handles codec domain PM calls and system "
"domain PM calls (e.g. suspend and resume). It is used to put the codec to "
"sleep when not in use."
msgstr ""

#: ../../../sound/soc/codec.rst:153
msgid "Power states:- ::"
msgstr ""

#: ../../../sound/soc/codec.rst:169
msgid "Codec DAC digital mute control"
msgstr ""

#: ../../../sound/soc/codec.rst:170
msgid ""
"Most codecs have a digital mute before the DACs that can be used to minimise "
"any system noise.  The mute stops any digital data from entering the DAC."
msgstr ""

#: ../../../sound/soc/codec.rst:174
msgid ""
"A callback can be created that is called by the core for each codec DAI when "
"the mute is applied or freed."
msgstr ""

#: ../../../sound/soc/codec.rst:177
msgid "i.e. ::"
msgstr ""
