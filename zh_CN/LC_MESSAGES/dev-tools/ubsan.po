# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../dev-tools/ubsan.rst:4
msgid "Undefined Behavior Sanitizer - UBSAN"
msgstr ""

#: ../../../dev-tools/ubsan.rst:6
msgid "UBSAN is a runtime undefined behaviour checker."
msgstr ""

#: ../../../dev-tools/ubsan.rst:8
msgid ""
"UBSAN uses compile-time instrumentation to catch undefined behavior (UB). "
"Compiler inserts code that perform certain kinds of checks before operations "
"that may cause UB. If check fails (i.e. UB detected) __ubsan_handle_* "
"function called to print error message."
msgstr ""

#: ../../../dev-tools/ubsan.rst:13
msgid ""
"GCC has that feature since 4.9.x [1_] (see ``-fsanitize=undefined`` option "
"and its suboptions). GCC 5.x has more checkers implemented [2_]."
msgstr ""

#: ../../../dev-tools/ubsan.rst:17
msgid "Report example"
msgstr ""

#: ../../../dev-tools/ubsan.rst:50
msgid "Usage"
msgstr ""

#: ../../../dev-tools/ubsan.rst:52
msgid "To enable UBSAN, configure the kernel with::"
msgstr ""

#: ../../../dev-tools/ubsan.rst:56
msgid "To exclude files from being instrumented use::"
msgstr ""

#: ../../../dev-tools/ubsan.rst:60
msgid "and to exclude all targets in one directory use::"
msgstr ""

#: ../../../dev-tools/ubsan.rst:64
msgid "When disabled for all targets, specific files can be enabled using::"
msgstr ""

#: ../../../dev-tools/ubsan.rst:68
msgid ""
"Detection of unaligned accesses controlled through the separate option - "
"CONFIG_UBSAN_ALIGNMENT. It's off by default on architectures that support "
"unaligned accesses (CONFIG_HAVE_EFFICIENT_UNALIGNED_ACCESS=y). One could "
"still enable it in config, just note that it will produce a lot of UBSAN "
"reports."
msgstr ""

#: ../../../dev-tools/ubsan.rst:75
msgid "References"
msgstr ""
