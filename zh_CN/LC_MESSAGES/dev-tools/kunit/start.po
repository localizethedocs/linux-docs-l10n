# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-30 08:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../dev-tools/kunit/start.rst:5
msgid "Getting Started"
msgstr ""

#: ../../../dev-tools/kunit/start.rst:7
msgid ""
"This page contains an overview of the kunit_tool and KUnit framework, "
"teaching how to run existing tests and then how to write a simple test case, "
"and covers common problems users face when using KUnit for the first time."
msgstr ""

#: ../../../dev-tools/kunit/start.rst:12
msgid "Installing Dependencies"
msgstr ""

#: ../../../dev-tools/kunit/start.rst:13
msgid ""
"KUnit has the same dependencies as the Linux kernel. As long as you can "
"build the kernel, you can run KUnit."
msgstr ""

#: ../../../dev-tools/kunit/start.rst:17
msgid "Running tests with kunit_tool"
msgstr ""

#: ../../../dev-tools/kunit/start.rst:18
msgid ""
"kunit_tool is a Python script, which configures and builds a kernel, runs "
"tests, and formats the test results. From the kernel repository, you can run "
"kunit_tool:"
msgstr ""

#: ../../../dev-tools/kunit/start.rst:27
msgid ""
"You may see the following error: \"The source tree is not clean, please run "
"'make ARCH=um mrproper'\""
msgstr ""

#: ../../../dev-tools/kunit/start.rst:30
msgid ""
"This happens because internally kunit.py specifies ``.kunit`` (default "
"option) as the build directory in the command ``make O=output/dir`` through "
"the argument ``--build_dir``.  Hence, before starting an out-of-tree build, "
"the source tree must be clean."
msgstr ""

#: ../../../dev-tools/kunit/start.rst:35
msgid ""
"There is also the same caveat mentioned in the \"Build directory for the "
"kernel\" section of the :doc:`admin-guide </admin-guide/README>`, that is, "
"its use, it must be used for all invocations of ``make``. The good news is "
"that it can indeed be solved by running ``make ARCH=um mrproper``, just be "
"aware that this will delete the current configuration and all generated "
"files."
msgstr ""

#: ../../../dev-tools/kunit/start.rst:42
msgid "If everything worked correctly, you should see the following:"
msgstr ""

#: ../../../dev-tools/kunit/start.rst:50
msgid "The tests will pass or fail."
msgstr ""

#: ../../../dev-tools/kunit/start.rst:53
msgid ""
"Because it is building a lot of sources for the first time, the ``Building "
"KUnit Kernel`` step may take a while."
msgstr ""

#: ../../../dev-tools/kunit/start.rst:56
msgid ""
"For detailed information on this wrapper, see: Documentation/dev-tools/kunit/"
"run_wrapper.rst."
msgstr ""

#: ../../../dev-tools/kunit/start.rst:60
msgid "Selecting which tests to run"
msgstr ""

#: ../../../dev-tools/kunit/start.rst:62
msgid ""
"By default, kunit_tool runs all tests reachable with minimal configuration, "
"that is, using default values for most of the kconfig options.  However, you "
"can select which tests to run by:"
msgstr ""

#: ../../../dev-tools/kunit/start.rst:66
msgid "`Customizing Kconfig`_ used to compile the kernel, or"
msgstr ""

#: ../../../dev-tools/kunit/start.rst:67
msgid ""
"`Filtering tests by name`_ to select specifically which compiled tests to "
"run."
msgstr ""

#: ../../../dev-tools/kunit/start.rst:70
msgid "Customizing Kconfig"
msgstr ""

#: ../../../dev-tools/kunit/start.rst:71
msgid ""
"A good starting point for the ``.kunitconfig`` is the KUnit default config. "
"If you didn't run ``kunit.py run`` yet, you can generate it by running:"
msgstr ""

#: ../../../dev-tools/kunit/start.rst:81
msgid ""
"``.kunitconfig`` lives in the ``--build_dir`` used by kunit.py, which is ``."
"kunit`` by default."
msgstr ""

#: ../../../dev-tools/kunit/start.rst:84
msgid ""
"Before running the tests, kunit_tool ensures that all config options set in "
"``.kunitconfig`` are set in the kernel ``.config``. It will warn you if you "
"have not included dependencies for the options used."
msgstr ""

#: ../../../dev-tools/kunit/start.rst:88
msgid "There are many ways to customize the configurations:"
msgstr ""

#: ../../../dev-tools/kunit/start.rst:90
msgid ""
"Edit ``.kunit/.kunitconfig``. The file should contain the list of kconfig "
"options required to run the desired tests, including their dependencies. You "
"may want to remove CONFIG_KUNIT_ALL_TESTS from the ``.kunitconfig`` as it "
"will enable a number of additional tests that you may not want. If you need "
"to run on an architecture other than UML see :ref:`kunit-on-qemu`."
msgstr ""

#: ../../../dev-tools/kunit/start.rst:96
msgid ""
"Enable additional kconfig options on top of ``.kunit/.kunitconfig``. For "
"example, to include the kernel's linked-list test you can run::"
msgstr ""

#: ../../../dev-tools/kunit/start.rst:102
msgid ""
"Provide the path of one or more .kunitconfig files from the tree. For "
"example, to run only ``FAT_FS`` and ``EXT4`` tests you can run::"
msgstr ""

#: ../../../dev-tools/kunit/start.rst:109
msgid ""
"If you change the ``.kunitconfig``, kunit.py will trigger a rebuild of the "
"``.config`` file. But you can edit the ``.config`` file directly or with "
"tools like ``make menuconfig O=.kunit``. As long as its a superset of ``."
"kunitconfig``, kunit.py won't overwrite your changes."
msgstr ""

#: ../../../dev-tools/kunit/start.rst:117
msgid "To save a .kunitconfig after finding a satisfactory configuration::"
msgstr ""

#: ../../../dev-tools/kunit/start.rst:123
msgid "Filtering tests by name"
msgstr ""

#: ../../../dev-tools/kunit/start.rst:124
msgid ""
"If you want to be more specific than Kconfig can provide, it is also "
"possible to select which tests to execute at boot-time by passing a glob "
"filter (read instructions regarding the pattern in the manpage :manpage:"
"`glob(7)`). If there is a ``\".\"`` (period) in the filter, it will be "
"interpreted as a separator between the name of the test suite and the test "
"case, otherwise, it will be interpreted as the name of the test suite. For "
"example, let's assume we are using the default config:"
msgstr ""

#: ../../../dev-tools/kunit/start.rst:132
msgid ""
"inform the name of a test suite, like ``\"kunit_executor_test\"``, to run "
"every test case it contains::"
msgstr ""

#: ../../../dev-tools/kunit/start.rst:137
msgid ""
"inform the name of a test case prefixed by its test suite, like ``\"example."
"example_simple_test\"``, to run specifically that test case::"
msgstr ""

#: ../../../dev-tools/kunit/start.rst:142
msgid ""
"use wildcard characters (``*?[``) to run any test case that matches the "
"pattern, like ``\"*.*64*\"`` to run test cases containing ``\"64\"`` in the "
"name inside any test suite::"
msgstr ""

#: ../../../dev-tools/kunit/start.rst:149
msgid "Running Tests without the KUnit Wrapper"
msgstr ""

#: ../../../dev-tools/kunit/start.rst:150
msgid ""
"If you do not want to use the KUnit Wrapper (for example: you want code "
"under test to integrate with other systems, or use a different/ unsupported "
"architecture or configuration), KUnit can be included in any kernel, and the "
"results are read out and parsed manually."
msgstr ""

#: ../../../dev-tools/kunit/start.rst:156
msgid ""
"``CONFIG_KUNIT`` should not be enabled in a production environment. Enabling "
"KUnit disables Kernel Address-Space Layout Randomization (KASLR), and tests "
"may affect the state of the kernel in ways not suitable for production."
msgstr ""

#: ../../../dev-tools/kunit/start.rst:162
msgid "Configuring the Kernel"
msgstr ""

#: ../../../dev-tools/kunit/start.rst:163
msgid ""
"To enable KUnit itself, you need to enable the ``CONFIG_KUNIT`` Kconfig "
"option (under Kernel Hacking/Kernel Testing and Coverage in ``menuconfig``). "
"From there, you can enable any KUnit tests. They usually have config options "
"ending in ``_KUNIT_TEST``."
msgstr ""

#: ../../../dev-tools/kunit/start.rst:168
msgid ""
"KUnit and KUnit tests can be compiled as modules. The tests in a module will "
"run when the module is loaded."
msgstr ""

#: ../../../dev-tools/kunit/start.rst:172
msgid "Running Tests (without KUnit Wrapper)"
msgstr ""

#: ../../../dev-tools/kunit/start.rst:173
msgid ""
"Build and run your kernel. In the kernel log, the test output is printed out "
"in the TAP format. This will only happen by default if KUnit/tests are built-"
"in. Otherwise the module will need to be loaded."
msgstr ""

#: ../../../dev-tools/kunit/start.rst:178
msgid "Some lines and/or data may get interspersed in the TAP output."
msgstr ""

#: ../../../dev-tools/kunit/start.rst:181
msgid "Writing Your First Test"
msgstr ""

#: ../../../dev-tools/kunit/start.rst:182
msgid "In your kernel repository, let's add some code that we can test."
msgstr ""

#: ../../../dev-tools/kunit/start.rst:184
msgid "Create a file ``drivers/misc/example.h``, which includes:"
msgstr ""

#: ../../../dev-tools/kunit/start.rst:190
msgid "Create a file ``drivers/misc/example.c``, which includes:"
msgstr ""

#: ../../../dev-tools/kunit/start.rst:203
#: ../../../dev-tools/kunit/start.rst:255
msgid "Add the following lines to ``drivers/misc/Kconfig``:"
msgstr ""

#: ../../../dev-tools/kunit/start.rst:210
#: ../../../dev-tools/kunit/start.rst:267
msgid "Add the following lines to ``drivers/misc/Makefile``:"
msgstr ""

#: ../../../dev-tools/kunit/start.rst:216
msgid "Now we are ready to write the test cases."
msgstr ""

#: ../../../dev-tools/kunit/start.rst:218
msgid "Add the below test case in ``drivers/misc/example_test.c``:"
msgstr ""

#: ../../../dev-tools/kunit/start.rst:264
msgid ""
"Note: If your test does not support being built as a loadable module (which "
"is discouraged), replace tristate by bool, and depend on KUNIT=y instead of "
"KUNIT."
msgstr ""

#: ../../../dev-tools/kunit/start.rst:273
msgid "Add the following lines to ``.kunit/.kunitconfig``:"
msgstr ""

#: ../../../dev-tools/kunit/start.rst:280
msgid "Run the test:"
msgstr ""

#: ../../../dev-tools/kunit/start.rst:286
msgid "You should see the following failure:"
msgstr ""

#: ../../../dev-tools/kunit/start.rst:297
msgid "Congrats! You just wrote your first KUnit test."
msgstr ""

#: ../../../dev-tools/kunit/start.rst:300
msgid "Next Steps"
msgstr ""

#: ../../../dev-tools/kunit/start.rst:302
msgid ""
"If you're interested in using some of the more advanced features of kunit."
"py, take a look at Documentation/dev-tools/kunit/run_wrapper.rst"
msgstr ""

#: ../../../dev-tools/kunit/start.rst:305
msgid ""
"If you'd like to run tests without using kunit.py, check out Documentation/"
"dev-tools/kunit/run_manual.rst"
msgstr ""

#: ../../../dev-tools/kunit/start.rst:308
msgid ""
"For more information on writing KUnit tests (including some common "
"techniques for testing different things), see Documentation/dev-tools/kunit/"
"usage.rst"
msgstr ""
