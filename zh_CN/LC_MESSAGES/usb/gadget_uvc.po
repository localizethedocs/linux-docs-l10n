# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../usb/gadget_uvc.rst:3
msgid "Linux UVC Gadget Driver"
msgstr ""

#: ../../../usb/gadget_uvc.rst:6
msgid "Overview"
msgstr ""

#: ../../../usb/gadget_uvc.rst:7
msgid ""
"The UVC Gadget driver is a driver for hardware on the *device* side of a USB "
"connection. It is intended to run on a Linux system that has USB device-side "
"hardware such as boards with an OTG port."
msgstr ""

#: ../../../usb/gadget_uvc.rst:11
msgid ""
"On the device system, once the driver is bound it appears as a V4L2 device "
"with the output capability."
msgstr ""

#: ../../../usb/gadget_uvc.rst:14
msgid ""
"On the host side (once connected via USB cable), a device running the UVC "
"Gadget driver *and controlled by an appropriate userspace program* should "
"appear as a UVC specification compliant camera, and function appropriately "
"with any program designed to handle them. The userspace program running on "
"the device system can queue image buffers from a variety of sources to be "
"transmitted via the USB connection. Typically this would mean forwarding the "
"buffers from a camera sensor peripheral, but the source of the buffer is "
"entirely dependent on the userspace companion program."
msgstr ""

#: ../../../usb/gadget_uvc.rst:24
msgid "Configuring the device kernel"
msgstr ""

#: ../../../usb/gadget_uvc.rst:25
msgid ""
"The Kconfig options USB_CONFIGFS, USB_LIBCOMPOSITE, USB_CONFIGFS_F_UVC and "
"USB_F_UVC must be selected to enable support for the UVC gadget."
msgstr ""

#: ../../../usb/gadget_uvc.rst:29
msgid "Configuring the gadget through configfs"
msgstr ""

#: ../../../usb/gadget_uvc.rst:30
msgid ""
"The UVC Gadget expects to be configured through configfs using the UVC "
"function. This allows a significant degree of flexibility, as many of a UVC "
"device's settings can be controlled this way."
msgstr ""

#: ../../../usb/gadget_uvc.rst:34
msgid ""
"Not all of the available attributes are described here. For a complete "
"enumeration see Documentation/ABI/testing/configfs-usb-gadget-uvc"
msgstr ""

#: ../../../usb/gadget_uvc.rst:38
msgid "Assumptions"
msgstr ""

#: ../../../usb/gadget_uvc.rst:39
msgid ""
"This section assumes that you have mounted configfs at `/sys/kernel/config` "
"and created a gadget as `/sys/kernel/config/usb_gadget/g1`."
msgstr ""

#: ../../../usb/gadget_uvc.rst:43
msgid "The UVC Function"
msgstr ""

#: ../../../usb/gadget_uvc.rst:45
msgid "The first step is to create the UVC function:"
msgstr ""

#: ../../../usb/gadget_uvc.rst:57
msgid "Formats and Frames"
msgstr ""

#: ../../../usb/gadget_uvc.rst:59
msgid ""
"You must configure the gadget by telling it which formats you support, as "
"well as the frame sizes and frame intervals that are supported for each "
"format. In the current implementation there is no way for the gadget to "
"refuse to set a format that the host instructs it to set, so it is important "
"that this step is completed *accurately* to ensure that the host never asks "
"for a format that can't be provided."
msgstr ""

#: ../../../usb/gadget_uvc.rst:66
msgid ""
"Formats are created under the streaming/uncompressed and streaming/mjpeg "
"configfs groups, with the framesizes created under the formats in the "
"following structure:"
msgstr ""

#: ../../../usb/gadget_uvc.rst:92
msgid ""
"Each frame can then be configured with a width and height, plus the maximum "
"buffer size required to store a single frame, and finally with the supported "
"frame intervals for that format and framesize. Width and height are "
"enumerated in units of pixels, frame interval in units of 100ns. To create "
"the structure above with 2, 15 and 100 fps frameintervals for each framesize "
"for example you might do:"
msgstr ""

#: ../../../usb/gadget_uvc.rst:128
msgid ""
"The only uncompressed format currently supported is YUYV, which is detailed "
"at Documentation/userspace-api/media/v4l/pixfmt-packed-yuv.rst."
msgstr ""

#: ../../../usb/gadget_uvc.rst:132
msgid "Color Matching Descriptors"
msgstr ""

#: ../../../usb/gadget_uvc.rst:133
msgid ""
"It's possible to specify some colometry information for each format you "
"create. This step is optional, and default information will be included if "
"this step is skipped; those default values follow those defined in the Color "
"Matching Descriptor section of the UVC specification."
msgstr ""

#: ../../../usb/gadget_uvc.rst:138
msgid ""
"To create a Color Matching Descriptor, create a configfs item and set its "
"three attributes to your desired settings and then link to it from the "
"format you wish it to be associated with:"
msgstr ""

#: ../../../usb/gadget_uvc.rst:158
msgid ""
"For details about the valid values, consult the UVC specification. Note that "
"a default color matching descriptor exists and is used by any format which "
"does not have a link to a different Color Matching Descriptor. It's possible "
"to change the attribute settings for the default descriptor, so bear in mind "
"that if you do that you are altering the defaults for any format that does "
"not link to a different one."
msgstr ""

#: ../../../usb/gadget_uvc.rst:167
msgid "Header linking"
msgstr ""

#: ../../../usb/gadget_uvc.rst:169
msgid ""
"The UVC specification requires that Format and Frame descriptors be preceded "
"by Headers detailing things such as the number and cumulative size of the "
"different Format descriptors that follow. This and similar operations are "
"achieved in configfs by linking between the configfs item representing the "
"header and the config items representing those other descriptors, in this "
"manner:"
msgstr ""

#: ../../../usb/gadget_uvc.rst:201
msgid "Extension Unit Support"
msgstr ""

#: ../../../usb/gadget_uvc.rst:203
msgid ""
"A UVC Extension Unit (XU) basically provides a distinct unit to which "
"control set and get requests can be addressed. The meaning of those control "
"requests is entirely implementation dependent, but may be used to control "
"settings outside of the UVC specification (for example enabling or disabling "
"video effects). An XU can be inserted into the UVC unit chain or left free-"
"hanging."
msgstr ""

#: ../../../usb/gadget_uvc.rst:209
msgid ""
"Configuring an extension unit involves creating an entry in the appropriate "
"directory and setting its attributes appropriately, like so:"
msgstr ""

#: ../../../usb/gadget_uvc.rst:236
msgid ""
"The bmControls attribute and the baSourceID attribute are multi-value "
"attributes. This means that you may write multiple newline separated values "
"to them. For example to flag the 1st, 2nd, 9th and 10th controls as being "
"available you would need to write two values to bmControls, like so:"
msgstr ""

#: ../../../usb/gadget_uvc.rst:248
msgid ""
"The multi-value nature of the baSourceID attribute belies the fact that XUs "
"can be multiple-input, though note that this currently has no significant "
"effect."
msgstr ""

#: ../../../usb/gadget_uvc.rst:251
msgid ""
"The bControlSize attribute reflects the size of the bmControls attribute, "
"and similarly bNrInPins reflects the size of the baSourceID attributes. Both "
"attributes are automatically increased / decreased as you set bmControls and "
"baSourceID. It is also possible to manually increase or decrease "
"bControlSize which has the effect of truncating entries to the new size, or "
"padding entries out with 0x00, for example:"
msgstr ""

#: ../../../usb/gadget_uvc.rst:276
msgid "bNrInPins and baSourceID function in the same way."
msgstr ""

#: ../../../usb/gadget_uvc.rst:279
msgid "Configuring Supported Controls for Camera Terminal and Processing Unit"
msgstr ""

#: ../../../usb/gadget_uvc.rst:281
msgid ""
"The Camera Terminal and Processing Units in the UVC chain also have "
"bmControls attributes which function similarly to the same field in an "
"Extension Unit. Unlike XUs however, the meaning of the bitflag for these "
"units is defined in the UVC specification; you should consult the \"Camera "
"Terminal Descriptor\" and \"Processing Unit Descriptor\" sections for an "
"enumeration of the flags."
msgstr ""

#: ../../../usb/gadget_uvc.rst:297
msgid ""
"If you do not set these fields then by default the Auto-Exposure Mode "
"control for the Camera Terminal and the Brightness control for the "
"Processing Unit will be flagged as available; if they are not supported you "
"should set the field to 0x00."
msgstr ""

#: ../../../usb/gadget_uvc.rst:302
msgid ""
"Note that the size of the bmControls field for a Camera Terminal or "
"Processing Unit is fixed by the UVC specification, and so the bControlSize "
"attribute is read-only here."
msgstr ""

#: ../../../usb/gadget_uvc.rst:307
msgid "Custom Strings Support"
msgstr ""

#: ../../../usb/gadget_uvc.rst:309
msgid ""
"String descriptors that provide a textual description for various parts of a "
"USB device can be defined in the usual place within USB configfs, and may "
"then be linked to from the UVC function root or from Extension Unit "
"directories to assign those strings as descriptors:"
msgstr ""

#: ../../../usb/gadget_uvc.rst:335
msgid "The interrupt endpoint"
msgstr ""

#: ../../../usb/gadget_uvc.rst:337
msgid ""
"The VideoControl interface has an optional interrupt endpoint which is by "
"default disabled. This is intended to support delayed response control set "
"requests for UVC (which should respond through the interrupt endpoint rather "
"than tying up endpoint 0). At present support for sending data through this "
"endpoint is missing and so it is left disabled to avoid confusion. If you "
"wish to enable it you can do so through the configfs attribute:"
msgstr ""

#: ../../../usb/gadget_uvc.rst:349
msgid "Bandwidth configuration"
msgstr ""

#: ../../../usb/gadget_uvc.rst:351
msgid ""
"There are three attributes which control the bandwidth of the USB "
"connection. These live in the function root and can be set within limits:"
msgstr ""

#: ../../../usb/gadget_uvc.rst:366
msgid ""
"The values passed here will be clamped to valid values according to the UVC "
"specification (which depend on the speed of the USB connection). To "
"understand how the settings influence bandwidth you should consult the UVC "
"specifications, but a rule of thumb is that increasing the "
"streaming_maxpacket setting will improve bandwidth (and thus the maximum "
"possible framerate), whilst the same is true for streaming_maxburst provided "
"the USB connection is running at SuperSpeed. Increasing streaming_interval "
"will reduce bandwidth and framerate."
msgstr ""

#: ../../../usb/gadget_uvc.rst:375
msgid "The userspace application"
msgstr ""

#: ../../../usb/gadget_uvc.rst:376
msgid ""
"By itself, the UVC Gadget driver cannot do anything particularly "
"interesting. It must be paired with a userspace program that responds to UVC "
"control requests and fills buffers to be queued to the V4L2 device that the "
"driver creates. How those things are achieved is implementation dependent "
"and beyond the scope of this document, but a reference application can be "
"found at https://gitlab.freedesktop.org/camera/uvc-gadget"
msgstr ""
