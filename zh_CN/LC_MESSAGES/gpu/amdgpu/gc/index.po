# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../gpu/amdgpu/gc/index.rst:5
msgid "drm/amdgpu - Graphics and Compute (GC)"
msgstr ""

#: ../../../gpu/amdgpu/gc/index.rst:7
msgid ""
"The relationship between the CPU and GPU can be described as the producer-"
"consumer problem, where the CPU fills out a buffer with operations "
"(producer) to be executed by the GPU (consumer). The requested operations in "
"the buffer are called Command Packets, which can be summarized as a "
"compressed way of transmitting command information to the graphics "
"controller."
msgstr ""

#: ../../../gpu/amdgpu/gc/index.rst:13
msgid ""
"The component that acts as the front end between the CPU and the GPU is "
"called the Command Processor (CP). This component is responsible for "
"providing greater flexibility to the GC since CP makes it possible to "
"program various aspects of the GPU pipeline. CP also coordinates the "
"communication between the CPU and GPU via a mechanism named **Ring "
"Buffers**, where the CPU appends information to the buffer while the GPU "
"removes operations. It is relevant to highlight that a CPU can add a pointer "
"to the Ring Buffer that points to another region of memory outside the Ring "
"Buffer, and CP can handle it; this mechanism is called **Indirect Buffer "
"(IB)**. CP receives and parses the Command Streams (CS), and writes the "
"operations to the correct hardware blocks."
msgstr ""

#: ../../../gpu/amdgpu/gc/index.rst:25
msgid "Graphics (GFX) and Compute Microcontrollers"
msgstr ""

#: ../../../gpu/amdgpu/gc/index.rst:27
msgid ""
"GC is a large block, and as a result, it has multiple firmware associated "
"with it. Some of them are:"
msgstr ""

#: ../../../gpu/amdgpu/gc/index.rst:30
msgid "CP (Command Processor)"
msgstr ""

#: ../../../gpu/amdgpu/gc/index.rst:31
msgid ""
"The name for the hardware block that encompasses the front end of the GFX/"
"Compute pipeline. Consists mainly of a bunch of microcontrollers (PFP, ME, "
"CE, MEC). The firmware that runs on these microcontrollers provides the "
"driver interface to interact with the GFX/Compute engine."
msgstr ""

#: ../../../gpu/amdgpu/gc/index.rst:36
msgid "MEC (MicroEngine Compute)"
msgstr ""

#: ../../../gpu/amdgpu/gc/index.rst:37
msgid ""
"This is the microcontroller that controls the compute queues on the GFX/"
"compute engine."
msgstr ""

#: ../../../gpu/amdgpu/gc/index.rst:40
msgid "MES (MicroEngine Scheduler)"
msgstr ""

#: ../../../gpu/amdgpu/gc/index.rst:41
msgid ""
"This is the engine for managing queues. For more details check :ref:"
"`MicroEngine Scheduler (MES) <amdgpu-mes>`."
msgstr ""

#: ../../../gpu/amdgpu/gc/index.rst:44
msgid "RLC (RunList Controller)"
msgstr ""

#: ../../../gpu/amdgpu/gc/index.rst:45
msgid ""
"This is another microcontroller in the GFX/Compute engine. It handles power "
"management related functionality within the GFX/Compute engine. The name is "
"a vestige of old hardware where it was originally added and doesn't really "
"have much relation to what the engine does now."
msgstr ""
