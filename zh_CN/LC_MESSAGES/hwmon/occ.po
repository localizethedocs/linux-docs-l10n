# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-29 08:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../hwmon/occ.rst:2
msgid "Kernel driver occ-hwmon"
msgstr ""

#: ../../../hwmon/occ.rst:4
msgid "Supported chips:"
msgstr ""

#: ../../../hwmon/occ.rst:6
msgid "POWER8"
msgstr ""

#: ../../../hwmon/occ.rst:7
msgid "POWER9"
msgstr ""

#: ../../../hwmon/occ.rst:9
msgid "Author: Eddie James <eajames@linux.ibm.com>"
msgstr ""

#: ../../../hwmon/occ.rst:12
msgid "Description"
msgstr ""

#: ../../../hwmon/occ.rst:14
msgid ""
"This driver supports hardware monitoring for the On-Chip Controller (OCC) "
"embedded on POWER processors. The OCC is a device that collects and "
"aggregates sensor data from the processor and the system. The OCC can "
"provide the raw sensor data as well as perform thermal and power management "
"on the system."
msgstr ""

#: ../../../hwmon/occ.rst:19
msgid ""
"The P8 version of this driver is a client driver of I2C. It may be probed "
"manually if an \"ibm,p8-occ-hwmon\" compatible device is found under the "
"appropriate I2C bus node in the device-tree."
msgstr ""

#: ../../../hwmon/occ.rst:23
msgid ""
"The P9 version of this driver is a client driver of the FSI-based OCC "
"driver. It will be probed automatically by the FSI-based OCC driver."
msgstr ""

#: ../../../hwmon/occ.rst:27
msgid "Sysfs entries"
msgstr ""

#: ../../../hwmon/occ.rst:29
msgid ""
"The following attributes are supported. All attributes are read-only unless "
"specified."
msgstr ""

#: ../../../hwmon/occ.rst:32
msgid ""
"The OCC sensor ID is an integer that represents the unique identifier of the "
"sensor with respect to the OCC. For example, a temperature sensor for the "
"third DIMM slot in the system may have a sensor ID of 7. This mapping is "
"unavailable to the device driver, which must therefore export the sensor ID "
"as-is."
msgstr ""

#: ../../../hwmon/occ.rst:37
msgid ""
"Some entries are only present with certain OCC sensor versions or only on "
"certain OCCs in the system. The version number is not exported to the user "
"but can be inferred."
msgstr ""

#: ../../../hwmon/occ.rst:41
msgid "temp[1-n]_label"
msgstr ""

#: ../../../hwmon/occ.rst:42 ../../../hwmon/occ.rst:74
#: ../../../hwmon/occ.rst:89
msgid "OCC sensor ID."
msgstr ""

#: ../../../hwmon/occ.rst:44
msgid "[with temperature sensor version 1]"
msgstr ""

#: ../../../hwmon/occ.rst:46 ../../../hwmon/occ.rst:69
msgid "temp[1-n]_input"
msgstr ""

#: ../../../hwmon/occ.rst:47 ../../../hwmon/occ.rst:70
msgid "Measured temperature of the component in millidegrees Celsius."
msgstr ""

#: ../../../hwmon/occ.rst:50
msgid "[with temperature sensor version >= 2]"
msgstr ""

#: ../../../hwmon/occ.rst:52
msgid "temp[1-n]_type"
msgstr ""

#: ../../../hwmon/occ.rst:53
msgid ""
"The FRU (Field Replaceable Unit) type (represented by an integer) for the "
"component that this sensor measures."
msgstr ""

#: ../../../hwmon/occ.rst:56
msgid "temp[1-n]_fault"
msgstr ""

#: ../../../hwmon/occ.rst:57
msgid ""
"Temperature sensor fault boolean; 1 to indicate that a fault is present or 0 "
"to indicate that no fault is present."
msgstr ""

#: ../../../hwmon/occ.rst:61
msgid "[with type == 3 (FRU type is VRM)]"
msgstr ""

#: ../../../hwmon/occ.rst:63
msgid "temp[1-n]_alarm"
msgstr ""

#: ../../../hwmon/occ.rst:64
msgid ""
"VRM temperature alarm boolean; 1 to indicate alarm, 0 to indicate no alarm"
msgstr ""

#: ../../../hwmon/occ.rst:67
msgid "[else]"
msgstr ""

#: ../../../hwmon/occ.rst:73
msgid "freq[1-n]_label"
msgstr ""

#: ../../../hwmon/occ.rst:75
msgid "freq[1-n]_input"
msgstr ""

#: ../../../hwmon/occ.rst:76
msgid "Measured frequency of the component in MHz."
msgstr ""

#: ../../../hwmon/occ.rst:77 ../../../hwmon/occ.rst:113
msgid "power[1-n]_input"
msgstr ""

#: ../../../hwmon/occ.rst:78
msgid "Latest measured power reading of the component in microwatts."
msgstr ""

#: ../../../hwmon/occ.rst:80
msgid "power[1-n]_average"
msgstr ""

#: ../../../hwmon/occ.rst:81
msgid "Average power of the component in microwatts."
msgstr ""

#: ../../../hwmon/occ.rst:82
msgid "power[1-n]_average_interval"
msgstr ""

#: ../../../hwmon/occ.rst:83
msgid ""
"The amount of time over which the power average was taken in microseconds."
msgstr ""

#: ../../../hwmon/occ.rst:86
msgid "[with power sensor version < 2]"
msgstr ""

#: ../../../hwmon/occ.rst:88 ../../../hwmon/occ.rst:93
#: ../../../hwmon/occ.rst:101 ../../../hwmon/occ.rst:111
msgid "power[1-n]_label"
msgstr ""

#: ../../../hwmon/occ.rst:91
msgid "[with power sensor version >= 2]"
msgstr ""

#: ../../../hwmon/occ.rst:94
msgid ""
"OCC sensor ID + function ID + channel in the form of a string, delimited by "
"underscores, i.e. \"0_15_1\". Both the function ID and channel are integers "
"that further identify the power sensor."
msgstr ""

#: ../../../hwmon/occ.rst:99
msgid "[with power sensor version 0xa0]"
msgstr ""

#: ../../../hwmon/occ.rst:102
msgid ""
"OCC sensor ID + sensor type in the form of a string, delimited by an "
"underscore, i.e. \"0_system\". Sensor type will be one of \"system\", "
"\"proc\", \"vdd\" or \"vdn\". For this sensor version, OCC sensor ID will be "
"the same for all power sensors."
msgstr ""

#: ../../../hwmon/occ.rst:108
msgid ""
"[present only on \"master\" OCC; represents the whole system power; only one "
"of this type of power sensor will be present]"
msgstr ""

#: ../../../hwmon/occ.rst:112
msgid "\"system\""
msgstr ""

#: ../../../hwmon/occ.rst:114
msgid "Latest system output power in microwatts."
msgstr ""

#: ../../../hwmon/occ.rst:115
msgid "power[1-n]_cap"
msgstr ""

#: ../../../hwmon/occ.rst:116
msgid "Current system power cap in microwatts."
msgstr ""

#: ../../../hwmon/occ.rst:117
msgid "power[1-n]_cap_not_redundant"
msgstr ""

#: ../../../hwmon/occ.rst:118
msgid "System power cap in microwatts when there is not redundant power."
msgstr ""

#: ../../../hwmon/occ.rst:120
msgid "power[1-n]_cap_max"
msgstr ""

#: ../../../hwmon/occ.rst:121
msgid "Maximum power cap that the OCC can enforce in microwatts."
msgstr ""

#: ../../../hwmon/occ.rst:123
msgid ""
"power[1-n]_cap_min          Minimum power cap that the OCC can enforce in"
msgstr ""

#: ../../../hwmon/occ.rst:124
msgid "microwatts."
msgstr ""

#: ../../../hwmon/occ.rst:125
msgid ""
"power[1-n]_cap_user         The power cap set by the user, in microwatts."
msgstr ""

#: ../../../hwmon/occ.rst:126
msgid ""
"This attribute will return 0 if no user power cap has been set. This "
"attribute is read-write, but writing any precision below watts will be "
"ignored, i.e. requesting a power cap of 500900000 microwatts will result in "
"a power cap request of 500 watts."
msgstr ""

#: ../../../hwmon/occ.rst:133
msgid "[with caps sensor version > 1]"
msgstr ""

#: ../../../hwmon/occ.rst:135
msgid "power[1-n]_cap_user_source"
msgstr ""

#: ../../../hwmon/occ.rst:136
msgid ""
"Indicates how the user power cap was set. This is an integer that maps to "
"system or firmware components that can set the user power cap."
msgstr ""

#: ../../../hwmon/occ.rst:141
msgid ""
"The following \"extn\" sensors are exported as a way for the OCC to provide "
"data that doesn't fit anywhere else. The meaning of these sensors is "
"entirely dependent on their data, and cannot be statically defined."
msgstr ""

#: ../../../hwmon/occ.rst:145
msgid "extn[1-n]_label"
msgstr ""

#: ../../../hwmon/occ.rst:146
msgid "ASCII ID or OCC sensor ID."
msgstr ""

#: ../../../hwmon/occ.rst:147
msgid "extn[1-n]_flags"
msgstr ""

#: ../../../hwmon/occ.rst:148
msgid ""
"This is one byte hexadecimal value. Bit 7 indicates the type of the label "
"attribute; 1 for sensor ID, 0 for ASCII ID. Other bits are reserved."
msgstr ""

#: ../../../hwmon/occ.rst:151
msgid "extn[1-n]_input"
msgstr ""

#: ../../../hwmon/occ.rst:152
msgid "6 bytes of hexadecimal data, with a meaning defined by the sensor ID."
msgstr ""
