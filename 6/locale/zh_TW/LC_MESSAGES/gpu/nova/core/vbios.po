# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../gpu/nova/core/vbios.rst:5
msgid "VBIOS"
msgstr ""

#: ../../../gpu/nova/core/vbios.rst:6
msgid ""
"This document describes the layout of the VBIOS image which is a series of "
"concatenated images in the ROM of the GPU. The VBIOS is mirrored onto the "
"BAR 0 space and is read by both Boot ROM firmware (also known as IFR or init-"
"from-rom firmware) on the GPU to bootstrap various microcontrollers (PMU, "
"SEC, GSP) with critical initialization before the driver loads, as well as "
"by the nova-core driver in the kernel to boot the GSP."
msgstr ""

#: ../../../gpu/nova/core/vbios.rst:12
msgid ""
"The format of the images in the ROM follow the \"BIOS Specification\" part "
"of the PCI specification, with Nvidia-specific extensions. The ROM images of "
"type FwSec are the ones that contain Falcon ucode and what we are mainly "
"looking for."
msgstr ""

#: ../../../gpu/nova/core/vbios.rst:16
msgid ""
"As an example, the following are the different image types that can be found "
"in the VBIOS of an Ampere GA102 GPU which is supported by the nova-core "
"driver."
msgstr ""

#: ../../../gpu/nova/core/vbios.rst:19
msgid ""
"PciAt Image (Type 0x00) - This is the standard PCI BIOS image, whose name "
"likely comes from the \"IBM PC/AT\" architecture."
msgstr ""

#: ../../../gpu/nova/core/vbios.rst:22
msgid ""
"EFI Image (Type 0x03) - This is the EFI BIOS image. It contains the UEFI GOP "
"driver that is used to display UEFI graphics output."
msgstr ""

#: ../../../gpu/nova/core/vbios.rst:25
msgid "First FwSec Image (Type 0xE0) - The first FwSec image (Secure Firmware)"
msgstr ""

#: ../../../gpu/nova/core/vbios.rst:27
msgid ""
"Second FwSec Image (Type 0xE0) - The second FwSec image (Secure Firmware) "
"contains various  microcodes (also known as an applications) that do a range "
"of different functions. The FWSEC ucode is run in heavy-secure mode and "
"typically runs directly on the GSP (it could be running on a different "
"designated processor in future generations but as of Ampere, it is the GSP). "
"This firmware then loads other firmware ucodes onto the PMU and SEC2 "
"microcontrollers for gfw initialization after GPU reset and before the "
"driver loads (see devinit.rst). The DEVINIT ucode is itself another ucode "
"that is stored in this ROM partition."
msgstr ""

#: ../../../gpu/nova/core/vbios.rst:37
msgid ""
"Once located, the Falcon ucodes have \"Application Interfaces\" in their "
"data memory (DMEM). For FWSEC, the application interface we use for FWSEC is "
"the \"DMEM mapper\" interface which is configured to run the \"FRTS\" "
"command. This command carves out the WPR2 (Write-Protected Region) in VRAM. "
"It then places important power-management data, called 'FRTS', into this "
"region. The WPR2 region is only accessible to heavy-secure ucode."
msgstr ""

#: ../../../gpu/nova/core/vbios.rst:45
msgid ""
"It is not clear why FwSec has 2 different partitions in the ROM, but they "
"both are of type 0xE0 and can be identified as such. This could be subject "
"to change in future generations."
msgstr ""

#: ../../../gpu/nova/core/vbios.rst:50
msgid "VBIOS ROM Layout"
msgstr ""

#: ../../../gpu/nova/core/vbios.rst:51
msgid ""
"The VBIOS layout is roughly a series of concatenated images laid out as "
"follows::"
msgstr ""

#: ../../../gpu/nova/core/vbios.rst:163
msgid ""
"This diagram is created based on an GA-102 Ampere GPU as an example and "
"could vary for future or other GPUs."
msgstr ""

#: ../../../gpu/nova/core/vbios.rst:167
msgid ""
"For more explanations of acronyms, see the detailed descriptions in `vbios."
"rs`."
msgstr ""

#: ../../../gpu/nova/core/vbios.rst:170
msgid "Falcon data Lookup"
msgstr ""

#: ../../../gpu/nova/core/vbios.rst:171
msgid ""
"A key part of the VBIOS extraction code (vbios.rs) is to find the location "
"of the Falcon data in the VBIOS which contains the PMU lookup table. This "
"lookup table is used to find the required Falcon ucode based on an "
"application ID."
msgstr ""

#: ../../../gpu/nova/core/vbios.rst:175
msgid ""
"The location of the PMU lookup table is found by scanning the BIT (`BIOS "
"Information Table`_) tokens for a token with the id "
"`BIT_TOKEN_ID_FALCON_DATA` (0x70) which indicates the offset of the same "
"from the start of the VBIOS image. Unfortunately, the offset does not "
"account for the EFI image located between the PciAt and FwSec images. The "
"`vbios.rs` code compensates for this with appropriate arithmetic."
msgstr ""
