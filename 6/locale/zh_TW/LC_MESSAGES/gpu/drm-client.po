# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-30 08:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../gpu/drm-client.rst:3
msgid "Kernel clients"
msgstr ""

#: ../../../gpu/drm-client:5: drivers/gpu/drm/drm_client.c:27
msgid ""
"This library provides support for clients running in the kernel like fbdev "
"and bootsplash."
msgstr ""

#: ../../../gpu/drm-client:5: drivers/gpu/drm/drm_client.c:29
msgid ""
"GEM drivers which provide a GEM based dumb buffer with a virtual address are "
"supported."
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:23
msgid "DRM client callbacks"
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:27
#: include/drm/drm_client.h:101 include/drm/drm_client.h:172
msgid "**Definition**::"
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:38
#: include/drm/drm_client.h:116 include/drm/drm_client.h:182
msgid "**Members**"
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:27
msgid "``owner``"
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:28
msgid "The module owner"
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:32
msgid "``unregister``"
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:33
msgid ""
"Called when :c:type:`drm_device` is unregistered. The client should respond "
"by releasing its resources using drm_client_release()."
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:36
#: include/drm/drm_client.h:52 include/drm/drm_client.h:62
#: include/drm/drm_client.h:71 include/drm/drm_client.h:85
msgid "This callback is optional."
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:42
msgid "``restore``"
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:43
msgid ""
"Called on drm_lastclose(). The first client instance in the list that "
"returns zero gets the privilege to restore and no more clients are called. "
"This callback is not called after **unregister** has been called."
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:47
msgid ""
"Note that the core does not guarantee exclusion against concurrent "
"drm_open(). Clients need to ensure this themselves, for example by using "
"drm_master_internal_acquire() and drm_master_internal_release()."
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:58
msgid "``hotplug``"
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:59
msgid ""
"Called on drm_kms_helper_hotplug_event(). This callback is not called after "
"**unregister** has been called."
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:68
msgid "``suspend``"
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:69
msgid "Called when suspending the device."
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:73
#: include/drm/drm_client.h:87
msgid "FIXME: Some callers hold the console lock when invoking this"
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:74
#: include/drm/drm_client.h:88
msgid ""
"function. This interferes with fbdev emulation, which also tries to acquire "
"the lock. Push the console lock into the callback and remove "
"'holds_console_lock'."
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:82
msgid "``resume``"
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:83
msgid "Called when resuming the device from suspend."
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:97
msgid "DRM client instance"
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:101
msgid "``dev``"
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:65
#: ../../../gpu/drm-client:17: drivers/gpu/drm/drm_client_event.c:22
#: drivers/gpu/drm/drm_client_event.c:78 ../../../gpu/drm-client:8:
#: include/drm/drm_client.h:102
msgid "DRM device"
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:106
msgid "``name``"
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:107
msgid "Name of the client."
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:111
msgid "``list``"
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:112
msgid ""
"List of all clients of a DRM device, linked into :c:type:`drm_device."
"clientlist <drm_device>`. Protected by :c:type:`drm_device.clientlist_mutex "
"<drm_device>`."
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:119
msgid "``funcs``"
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:68
#: ../../../gpu/drm-client:8: include/drm/drm_client.h:120
msgid "DRM client functions (optional)"
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:124
msgid "``file``"
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:125
msgid "DRM file"
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:129
msgid "``modeset_mutex``"
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:130
msgid "Protects **modesets**."
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:134
msgid "``modesets``"
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:135
msgid "CRTC configurations"
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:139
msgid "``suspended``"
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:140
msgid "The client has been suspended."
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:146
msgid "``hotplug_pending``"
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:147
msgid ""
"A hotplug event has been received while the client was suspended. Try again "
"on resume."
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:154
msgid "``hotplug_failed``"
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:155
msgid ""
"Set by client hotplug helpers if the hotplugging failed before. It is "
"usually not tried again."
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:229
#: drivers/gpu/drm/drm_client.c:271 drivers/gpu/drm/drm_client.c:289
#: drivers/gpu/drm/drm_client.c:323 ../../../gpu/drm-client:8:
#: include/drm/drm_client.h:168
msgid "DRM client buffer"
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:172
#: include/drm/drm_client.h:228
msgid "``client``"
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:66
#: drivers/gpu/drm/drm_client.c:110 drivers/gpu/drm/drm_client.c:151
#: drivers/gpu/drm/drm_client.c:382 ../../../gpu/drm-client:14:
#: drivers/gpu/drm/drm_client_modeset.c:807
#: drivers/gpu/drm/drm_client_modeset.c:1166
#: drivers/gpu/drm/drm_client_modeset.c:1190
#: drivers/gpu/drm/drm_client_modeset.c:1217
#: drivers/gpu/drm/drm_client_modeset.c:1267 ../../../gpu/drm-client:8:
#: include/drm/drm_client.h:173 include/drm/drm_client.h:227
msgid "DRM client"
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:177
msgid "``pitch``"
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:178
msgid "Buffer pitch"
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:182
msgid "``gem``"
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:183
msgid "GEM object backing this buffer"
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:185
msgid ""
"FIXME: The dependency on GEM here isn't required, we could convert the "
"driver handle to a dma-buf instead and use the backend-agnostic dma-buf vmap "
"support instead. This would require that the handle2fd prime ioctl is "
"reworked to pull the fd_install step out of the driver backend hooks, to "
"make that final step optional for internal users."
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:194
msgid "``map``"
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:195
msgid "Virtual address for the buffer"
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:199
msgid "``fb``"
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:200
msgid "DRM framebuffer"
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:227
msgid "``drm_client_for_each_modeset (modeset, client)``"
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:225
msgid "Iterate over client modesets"
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:68
#: drivers/gpu/drm/drm_client.c:113 drivers/gpu/drm/drm_client.c:154
#: drivers/gpu/drm/drm_client.c:232 drivers/gpu/drm/drm_client.c:274
#: drivers/gpu/drm/drm_client.c:292 drivers/gpu/drm/drm_client.c:326
#: drivers/gpu/drm/drm_client.c:385 drivers/gpu/drm/drm_client.c:430
#: drivers/gpu/drm/drm_client.c:444 ../../../gpu/drm-client:14:
#: drivers/gpu/drm/drm_client_modeset.c:810
#: drivers/gpu/drm/drm_client_modeset.c:951
#: drivers/gpu/drm/drm_client_modeset.c:1169
#: drivers/gpu/drm/drm_client_modeset.c:1193
#: drivers/gpu/drm/drm_client_modeset.c:1220
#: drivers/gpu/drm/drm_client_modeset.c:1270 ../../../gpu/drm-client:17:
#: drivers/gpu/drm/drm_client_event.c:25 drivers/gpu/drm/drm_client_event.c:81
#: ../../../gpu/drm-client:8: include/drm/drm_client.h:229
#: include/drm/drm_client.h:238
msgid "**Parameters**"
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:231
msgid "``modeset``"
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:226
msgid ":c:type:`drm_mode_set` loop cursor"
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:236
msgid "``drm_client_for_each_connector_iter (connector, iter)``"
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:234
msgid "connector_list iterator macro"
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:240
msgid "``connector``"
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:235
msgid ":c:type:`struct drm_connector <drm_connector>` pointer used as cursor"
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:237
msgid "``iter``"
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:236
msgid ":c:type:`struct drm_connector_list_iter <drm_connector_list_iter>`"
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:70
#: drivers/gpu/drm/drm_client.c:112 drivers/gpu/drm/drm_client.c:153
#: drivers/gpu/drm/drm_client.c:232 drivers/gpu/drm/drm_client.c:273
#: drivers/gpu/drm/drm_client.c:292 drivers/gpu/drm/drm_client.c:325
#: drivers/gpu/drm/drm_client.c:387 drivers/gpu/drm/drm_client.c:444
#: ../../../gpu/drm-client:14: drivers/gpu/drm/drm_client_modeset.c:811
#: drivers/gpu/drm/drm_client_modeset.c:951
#: drivers/gpu/drm/drm_client_modeset.c:1168
#: drivers/gpu/drm/drm_client_modeset.c:1192
#: drivers/gpu/drm/drm_client_modeset.c:1219 ../../../gpu/drm-client:17:
#: drivers/gpu/drm/drm_client_event.c:24 drivers/gpu/drm/drm_client_event.c:80
#: ../../../gpu/drm-client:8: include/drm/drm_client.h:238
msgid "**Description**"
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:237
msgid ""
"This iterates the connectors that are useable for internal clients (excludes "
"writeback connectors)."
msgstr ""

#: ../../../gpu/drm-client:8: include/drm/drm_client.h:240
msgid "For more info see drm_for_each_connector_iter()."
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:64
msgid "Initialise a DRM client"
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:70
#: ../../../gpu/drm-client:17: drivers/gpu/drm/drm_client_event.c:27
#: drivers/gpu/drm/drm_client_event.c:83
msgid "``struct drm_device *dev``"
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:67
#: drivers/gpu/drm/drm_client.c:115 drivers/gpu/drm/drm_client.c:156
#: drivers/gpu/drm/drm_client.c:387 ../../../gpu/drm-client:14:
#: drivers/gpu/drm/drm_client_modeset.c:812
#: drivers/gpu/drm/drm_client_modeset.c:1171
#: drivers/gpu/drm/drm_client_modeset.c:1195
#: drivers/gpu/drm/drm_client_modeset.c:1222
#: drivers/gpu/drm/drm_client_modeset.c:1272
msgid "``struct drm_client_dev *client``"
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:68
msgid "``const char *name``"
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:67
msgid "Client name"
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:69
msgid "``const struct drm_client_funcs *funcs``"
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:69
msgid ""
"This initialises the client and opens a :c:type:`drm_file`. Use "
"drm_client_register() to complete the process. The caller needs to hold a "
"reference on **dev** before calling this function. The client is freed when "
"the :c:type:`drm_device` is unregistered. See drm_client_release()."
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:74
#: drivers/gpu/drm/drm_client.c:243 drivers/gpu/drm/drm_client.c:303
#: drivers/gpu/drm/drm_client.c:390 drivers/gpu/drm/drm_client.c:446
#: ../../../gpu/drm-client:14: drivers/gpu/drm/drm_client_modeset.c:813
#: drivers/gpu/drm/drm_client_modeset.c:956
#: drivers/gpu/drm/drm_client_modeset.c:1169
#: drivers/gpu/drm/drm_client_modeset.c:1195
#: drivers/gpu/drm/drm_client_modeset.c:1220
#: drivers/gpu/drm/drm_client_modeset.c:1272
msgid "**Return**"
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:75
#: drivers/gpu/drm/drm_client.c:447 ../../../gpu/drm-client:14:
#: drivers/gpu/drm/drm_client_modeset.c:814
#: drivers/gpu/drm/drm_client_modeset.c:1170
#: drivers/gpu/drm/drm_client_modeset.c:1196
#: drivers/gpu/drm/drm_client_modeset.c:1221
#: drivers/gpu/drm/drm_client_modeset.c:1272
msgid "Zero on success or negative error code on failure."
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:109
msgid "Register client"
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:111
msgid ""
"Add the client to the :c:type:`drm_device` client list to activate its "
"callbacks. **client** must be initialized by a call to drm_client_init(). "
"After drm_client_register() it is no longer permissible to call "
"drm_client_release() directly (outside the unregister callback), instead "
"cleanup will happen automatically on driver unload."
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:117
msgid ""
"Registering a client generates a hotplug event that allows the client to set "
"up its display from pre-existing outputs. The client must have initialized "
"its state to able to handle the hotplug event successfully."
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:150
msgid "Release DRM client resources"
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:152
msgid ""
"Releases resources by closing the :c:type:`drm_file` that was opened by "
"drm_client_init(). It is called automatically if the :c:type:"
"`drm_client_funcs.unregister <drm_client_funcs>` callback is _not_ set."
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:155
msgid ""
"This function should only be called from the unregister callback. An "
"exception is fbdev which cannot free the buffer if userspace has open file "
"descriptors."
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:158
#: ../../../gpu/drm-client:14: drivers/gpu/drm/drm_client_modeset.c:953
#: drivers/gpu/drm/drm_client_modeset.c:1270
msgid "**Note**"
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:159
msgid ""
"Clients cannot initiate a release by themselves. This is done to keep the "
"code simple. The driver has to be unloaded before the client can be unloaded."
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:228
#: drivers/gpu/drm/drm_client.c:288
msgid "Map DRM client buffer into address space"
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:234
#: drivers/gpu/drm/drm_client.c:276 drivers/gpu/drm/drm_client.c:294
#: drivers/gpu/drm/drm_client.c:328 drivers/gpu/drm/drm_client.c:432
#: drivers/gpu/drm/drm_client.c:446
msgid "``struct drm_client_buffer *buffer``"
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:231
#: drivers/gpu/drm/drm_client.c:291
msgid "``struct iosys_map *map_copy``"
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:230
#: drivers/gpu/drm/drm_client.c:290
msgid "Returns the mapped memory's address"
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:231
#: drivers/gpu/drm/drm_client.c:291
msgid ""
"This function maps a client buffer into kernel address space. If the buffer "
"is already mapped, it returns the existing mapping's address."
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:234
msgid ""
"Client buffer mappings are not ref'counted. Each call to "
"drm_client_buffer_vmap_local() should be closely followed by a call to "
"drm_client_buffer_vunmap_local(). See drm_client_buffer_vmap() for long-term "
"mappings."
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:239
#: drivers/gpu/drm/drm_client.c:299
msgid ""
"The returned address is a copy of the internal value. In contrast to other "
"vmap interfaces, you don't need it for the client's vunmap function. So you "
"can modify it at will during blit and draw operations."
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:244
#: drivers/gpu/drm/drm_client.c:304
msgid "0 on success, or a negative errno code otherwise."
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:270
#: drivers/gpu/drm/drm_client.c:322
msgid "Unmap DRM client buffer"
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:272
msgid ""
"This function removes a client buffer's memory mapping established with "
"drm_client_buffer_vunmap_local(). Calling this function is only required by "
"clients that manage their buffer mappings by themselves."
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:294
msgid ""
"Client buffer mappings are not ref'counted. Each call to "
"drm_client_buffer_vmap() should be followed by a call to "
"drm_client_buffer_vunmap(); or the client buffer should be mapped throughout "
"its lifetime."
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:324
msgid ""
"This function removes a client buffer's memory mapping. Calling this "
"function is only required by clients that manage their buffer mappings by "
"themselves."
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:381
msgid "Create a client framebuffer"
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:384
msgid "``u32 width``"
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:383
msgid "Framebuffer width"
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:385
msgid "``u32 height``"
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:384
msgid "Framebuffer height"
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:386
msgid "``u32 format``"
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:385
msgid "Buffer format"
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:386
msgid ""
"This function creates a :c:type:`drm_client_buffer` which consists of a :c:"
"type:`drm_framebuffer` backed by a dumb buffer. Call "
"drm_client_framebuffer_delete() to free the buffer."
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:391
msgid "Pointer to a client buffer or an error pointer on failure."
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:426
msgid "Delete a client framebuffer"
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:427
#: drivers/gpu/drm/drm_client.c:441
msgid "DRM client buffer (can be NULL)"
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:440
msgid "Manually flush client framebuffer"
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:443
msgid "``struct drm_rect *rect``"
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:442
msgid "Damage rectangle (if NULL flushes all)"
msgstr ""

#: ../../../gpu/drm-client:11: drivers/gpu/drm/drm_client.c:443
msgid ""
"This calls :c:type:`drm_framebuffer_funcs->dirty <drm_framebuffer_funcs>` "
"(if present) to flush buffer changes for drivers that need it."
msgstr ""

#: ../../../gpu/drm-client:14: drivers/gpu/drm/drm_client_modeset.c:806
msgid "Probe for displays"
msgstr ""

#: ../../../gpu/drm-client:14: drivers/gpu/drm/drm_client_modeset.c:809
msgid "``unsigned int width``"
msgstr ""

#: ../../../gpu/drm-client:14: drivers/gpu/drm/drm_client_modeset.c:808
msgid "Maximum display mode width (optional)"
msgstr ""

#: ../../../gpu/drm-client:14: drivers/gpu/drm/drm_client_modeset.c:810
msgid "``unsigned int height``"
msgstr ""

#: ../../../gpu/drm-client:14: drivers/gpu/drm/drm_client_modeset.c:809
msgid "Maximum display mode height (optional)"
msgstr ""

#: ../../../gpu/drm-client:14: drivers/gpu/drm/drm_client_modeset.c:810
msgid ""
"This function sets up display pipelines for enabled connectors and stores "
"the config in the client's modeset array."
msgstr ""

#: ../../../gpu/drm-client:14: drivers/gpu/drm/drm_client_modeset.c:947
msgid "Check the initial rotation value"
msgstr ""

#: ../../../gpu/drm-client:14: drivers/gpu/drm/drm_client_modeset.c:953
msgid "``struct drm_mode_set *modeset``"
msgstr ""

#: ../../../gpu/drm-client:14: drivers/gpu/drm/drm_client_modeset.c:948
msgid "DRM modeset"
msgstr ""

#: ../../../gpu/drm-client:14: drivers/gpu/drm/drm_client_modeset.c:950
msgid "``unsigned int *rotation``"
msgstr ""

#: ../../../gpu/drm-client:14: drivers/gpu/drm/drm_client_modeset.c:949
msgid "Returned rotation value"
msgstr ""

#: ../../../gpu/drm-client:14: drivers/gpu/drm/drm_client_modeset.c:950
msgid ""
"This function checks if the primary plane in **modeset** can hw rotate to "
"match the rotation needed on its connector."
msgstr ""

#: ../../../gpu/drm-client:14: drivers/gpu/drm/drm_client_modeset.c:954
msgid "Currently only 0 and 180 degrees are supported."
msgstr ""

#: ../../../gpu/drm-client:14: drivers/gpu/drm/drm_client_modeset.c:956
msgid "True if the plane can do the rotation, false otherwise."
msgstr ""

#: ../../../gpu/drm-client:14: drivers/gpu/drm/drm_client_modeset.c:1165
msgid "Check modeset configuration"
msgstr ""

#: ../../../gpu/drm-client:14: drivers/gpu/drm/drm_client_modeset.c:1167
msgid "Check modeset configuration."
msgstr ""

#: ../../../gpu/drm-client:14: drivers/gpu/drm/drm_client_modeset.c:1189
msgid "Force commit CRTC configuration"
msgstr ""

#: ../../../gpu/drm-client:14: drivers/gpu/drm/drm_client_modeset.c:1191
msgid ""
"Commit modeset configuration to crtcs without checking if there is a DRM "
"master. The assumption is that the caller already holds an internal DRM "
"master reference acquired with drm_master_internal_acquire()."
msgstr ""

#: ../../../gpu/drm-client:14: drivers/gpu/drm/drm_client_modeset.c:1216
msgid "Commit CRTC configuration"
msgstr ""

#: ../../../gpu/drm-client:14: drivers/gpu/drm/drm_client_modeset.c:1218
msgid "Commit modeset configuration to crtcs."
msgstr ""

#: ../../../gpu/drm-client:14: drivers/gpu/drm/drm_client_modeset.c:1266
msgid "Set DPMS mode"
msgstr ""

#: ../../../gpu/drm-client:14: drivers/gpu/drm/drm_client_modeset.c:1269
msgid "``int mode``"
msgstr ""

#: ../../../gpu/drm-client:14: drivers/gpu/drm/drm_client_modeset.c:1268
msgid "DPMS mode"
msgstr ""

#: ../../../gpu/drm-client:14: drivers/gpu/drm/drm_client_modeset.c:1270
msgid "For atomic drivers **mode** is reduced to on/off."
msgstr ""

#: ../../../gpu/drm-client:17: drivers/gpu/drm/drm_client_event.c:21
msgid "Unregister clients"
msgstr ""

#: ../../../gpu/drm-client:17: drivers/gpu/drm/drm_client_event.c:23
msgid ""
"This function releases all clients by calling each client's :c:type:"
"`drm_client_funcs.unregister <drm_client_funcs>` callback. The callback "
"function is responsibe for releaseing all resources including the client "
"itself."
msgstr ""

#: ../../../gpu/drm-client:17: drivers/gpu/drm/drm_client_event.c:28
msgid ""
"The helper drm_dev_unregister() calls this function. Drivers that use it "
"don't need to call this function themselves."
msgstr ""

#: ../../../gpu/drm-client:17: drivers/gpu/drm/drm_client_event.c:77
msgid "Send hotplug event to clients"
msgstr ""

#: ../../../gpu/drm-client:17: drivers/gpu/drm/drm_client_event.c:79
msgid ""
"This function calls the :c:type:`drm_client_funcs.hotplug "
"<drm_client_funcs>` callback on the attached clients."
msgstr ""

#: ../../../gpu/drm-client:17: drivers/gpu/drm/drm_client_event.c:81
msgid ""
"drm_kms_helper_hotplug_event() calls this function, so drivers that use it "
"don't need to call this function themselves."
msgstr ""
