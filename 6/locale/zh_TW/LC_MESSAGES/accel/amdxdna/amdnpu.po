# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-30 08:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../accel/amdxdna/amdnpu.rst:7
msgid "AMD NPU"
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:0
msgid "Copyright"
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:9
msgid "|copy| 2024 Advanced Micro Devices, Inc."
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:0
msgid "Author"
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:10
msgid "Sonal Santan <sonal.santan@amd.com>"
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:13
msgid "Overview"
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:15
msgid ""
"AMD NPU (Neural Processing Unit) is a multi-user AI inference accelerator "
"integrated into AMD client APU. NPU enables efficient execution of Machine "
"Learning applications like CNN, LLM, etc. NPU is based on `AMD XDNA "
"Architecture`_. NPU is managed by **amdxdna** driver."
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:22
msgid "Hardware Description"
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:24
msgid "AMD NPU consists of the following hardware components:"
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:27
msgid "AMD XDNA Array"
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:29
msgid ""
"AMD XDNA Array comprises of 2D array of compute and memory tiles built with "
"`AMD AI Engine Technology`_. Each column has 4 rows of compute tiles and 1 "
"row of memory tile. Each compute tile contains a VLIW processor with its own "
"dedicated program and data memory. The memory tile acts as L2 memory. The 2D "
"array can be partitioned at a column boundary creating a spatially isolated "
"partition which can be bound to a workload context."
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:36
msgid ""
"Each column also has dedicated DMA engines to move data between host DDR and "
"memory tile."
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:39
msgid ""
"AMD Phoenix and AMD Hawk Point client NPU have a 4x5 topology, i.e., 4 rows "
"of compute tiles arranged into 5 columns. AMD Strix Point client APU have "
"4x8 topology, i.e., 4 rows of compute tiles arranged into 8 columns."
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:44
msgid "Shared L2 Memory"
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:46
msgid ""
"The single row of memory tiles create a pool of software managed on chip L2 "
"memory. DMA engines are used to move data between host DDR and memory tiles. "
"AMD Phoenix and AMD Hawk Point NPUs have a total of 2560 KB of L2 memory. "
"AMD Strix Point NPU has a total of 4096 KB of L2 memory."
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:52
msgid "Microcontroller"
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:54
msgid ""
"A microcontroller runs NPU Firmware which is responsible for command "
"processing, XDNA Array partition setup, XDNA Array configuration, workload "
"context management and workload orchestration."
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:58
msgid ""
"NPU Firmware uses a dedicated instance of an isolated non-privileged context "
"called ERT to service each workload context. ERT is also used to execute "
"user provided ``ctrlcode`` associated with the workload context."
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:62
msgid ""
"NPU Firmware uses a single isolated privileged context called MERT to "
"service management commands from the amdxdna driver."
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:66
msgid "Mailboxes"
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:68
msgid ""
"The microcontroller and amdxdna driver use a privileged channel for "
"management tasks like setting up of contexts, telemetry, query, error "
"handling, setting up user channel, etc. As mentioned before, privileged "
"channel requests are serviced by MERT. The privileged channel is bound to a "
"single mailbox."
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:73
msgid ""
"The microcontroller and amdxdna driver use a dedicated user channel per "
"workload context. The user channel is primarily used for submitting work to "
"the NPU. As mentioned before, a user channel requests are serviced by an "
"instance of ERT. Each user channel is bound to its own dedicated mailbox."
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:79
msgid "PCIe EP"
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:81
msgid ""
"NPU is visible to the x86 host CPU as a PCIe device with multiple BARs and "
"some MSI-X interrupt vectors. NPU uses a dedicated high bandwidth SoC level "
"fabric for reading or writing into host memory. Each instance of ERT gets "
"its own dedicated MSI-X interrupt. MERT gets a single instance of MSI-X "
"interrupt."
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:86
msgid ""
"The number of PCIe BARs varies depending on the specific device. Based on "
"their functions, PCIe BARs can generally be categorized into the following "
"types."
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:89
msgid "PSP BAR: Expose the AMD PSP (Platform Security Processor) function"
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:90
msgid "SMU BAR: Expose the AMD SMU (System Management Unit) function"
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:91
msgid "SRAM BAR: Expose ring buffers for the mailbox"
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:92
msgid ""
"Mailbox BAR: Expose the mailbox control registers (head, tail and ISR "
"registers etc.)"
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:94
msgid "Public Register BAR: Expose public registers"
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:96
msgid ""
"On specific devices, the above-mentioned BAR type might be combined into a "
"single physical PCIe BAR. Or a module might require two physical PCIe BARs "
"to be fully functional. For example,"
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:100
msgid ""
"On AMD Phoenix device, PSP, SMU, Public Register BARs are on PCIe BAR index "
"0."
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:101
msgid ""
"On AMD Strix Point device, Mailbox and Public Register BARs are on PCIe BAR "
"index 0. The PSP has some registers in PCIe BAR index 0 (Public Register "
"BAR) and PCIe BAR index 4 (PSP BAR)."
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:106
msgid "Process Isolation Hardware"
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:108
msgid ""
"As explained before, XDNA Array can be dynamically divided into isolated "
"spatial partitions, each of which may have one or more columns. The spatial "
"partition is setup by programming the column isolation registers by the "
"microcontroller. Each spatial partition is associated with a PASID which is "
"also programmed by the microcontroller. Hence multiple spatial partitions in "
"the NPU can make concurrent host access protected by PASID."
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:115
msgid ""
"The NPU FW itself uses microcontroller MMU enforced isolated contexts for "
"servicing user and privileged channel requests."
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:120
msgid "Mixed Spatial and Temporal Scheduling"
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:122
msgid ""
"AMD XDNA architecture supports mixed spatial and temporal (time sharing) "
"scheduling of 2D array. This means that spatial partitions may be setup and "
"torn down dynamically to accommodate various workloads. A *spatial* "
"partition may be *exclusively* bound to one workload context while another "
"partition may be *temporarily* bound to more than one workload contexts. The "
"microcontroller updates the PASID for a temporarily shared partition to "
"match the context that has been bound to the partition at any moment."
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:131
msgid "Resource Solver"
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:133
msgid ""
"The Resource Solver component of the amdxdna driver manages the allocation "
"of 2D array among various workloads. Every workload describes the number of "
"columns required to run the NPU binary in its metadata. The Resource Solver "
"component uses hints passed by the workload and its own heuristics to decide "
"2D array (re)partition strategy and mapping of workloads for spatial and "
"temporal sharing of columns. The FW enforces the context-to-column(s) "
"resource binding decisions made by the Resource Solver."
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:141
msgid ""
"AMD Phoenix and AMD Hawk Point client NPU can support 6 concurrent workload "
"contexts. AMD Strix Point can support 16 concurrent workload contexts."
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:146
msgid "Application Binaries"
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:148
msgid ""
"A NPU application workload is comprised of two separate binaries which are "
"generated by the NPU compiler."
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:151
msgid ""
"AMD XDNA Array overlay, which is used to configure a NPU spatial partition. "
"The overlay contains instructions for setting up the stream switch "
"configuration and ELF for the compute tiles. The overlay is loaded on the "
"spatial partition bound to the workload by the associated ERT instance. "
"Refer to the `Versal Adaptive SoC AIE-ML Architecture Manual (AM020)`_ for "
"more details."
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:158
msgid ""
"``ctrlcode``, used for orchestrating the overlay loaded on the spatial "
"partition. ``ctrlcode`` is executed by the ERT running in protected mode on "
"the microcontroller in the context of the workload. ``ctrlcode`` is made up "
"of a sequence of opcodes named ``XAie_TxnOpcode``. Refer to the `AI Engine "
"Run Time`_ for more details."
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:166
msgid "Special Host Buffers"
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:169
msgid "Per-context Instruction Buffer"
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:171
msgid ""
"Every workload context uses a host resident 64 MB buffer which is memory "
"mapped into the ERT instance created to service the workload. The "
"``ctrlcode`` used by the workload is copied into this special memory. This "
"buffer is protected by PASID like all other input/output buffers used by "
"that workload. Instruction buffer is also mapped into the user space of the "
"workload."
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:178
msgid "Global Privileged Buffer"
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:180
msgid ""
"In addition, the driver also allocates a single buffer for maintenance tasks "
"like recording errors from MERT. This global buffer uses the global IOMMU "
"domain and is only accessible by MERT."
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:186
msgid "High-level Use Flow"
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:188
msgid "Here are the steps to run a workload on AMD NPU:"
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:190
msgid "Compile the workload into an overlay and a ``ctrlcode`` binary."
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:191
msgid "Userspace opens a context in the driver and provides the overlay."
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:192
msgid ""
"The driver checks with the Resource Solver for provisioning a set of columns "
"for the workload."
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:194
msgid ""
"The driver then asks MERT to create a context on the device with the desired "
"columns."
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:196
msgid ""
"MERT then creates an instance of ERT. MERT also maps the Instruction Buffer "
"into ERT memory."
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:198
msgid "The userspace then copies the ``ctrlcode`` to the Instruction Buffer."
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:199
msgid ""
"Userspace then creates a command buffer with pointers to input, output, and "
"instruction buffer; it then submits command buffer with the driver and goes "
"to sleep waiting for completion."
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:202
msgid "The driver sends the command over the Mailbox to ERT."
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:203
msgid "ERT *executes* the ``ctrlcode`` in the instruction buffer."
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:204
msgid ""
"Execution of the ``ctrlcode`` kicks off DMAs to and from the host DDR while "
"AMD XDNA Array is running."
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:206
msgid ""
"When ERT reaches end of ``ctrlcode``, it raises an MSI-X to send completion "
"signal to the driver which then wakes up the waiting workload."
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:211
msgid "Boot Flow"
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:213
msgid ""
"amdxdna driver uses PSP to securely load signed NPU FW and kick off the boot "
"of the NPU microcontroller. amdxdna driver then waits for the alive signal "
"in a special location on BAR 0. The NPU is switched off during SoC suspend "
"and turned on after resume where the NPU FW is reloaded, and the handshake "
"is performed again."
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:221
msgid "Userspace components"
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:224
msgid "Compiler"
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:226
msgid ""
"Peano is an LLVM based open-source compiler for AMD XDNA Array compute tile "
"available at: https://github.com/Xilinx/llvm-aie"
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:230
msgid ""
"The open-source IREE compiler supports graph compilation of ML models for "
"AMD NPU and uses Peano underneath. It is available at: https://github.com/"
"nod-ai/iree-amd-aie"
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:235
msgid "Usermode Driver (UMD)"
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:237
msgid ""
"The open-source XRT runtime stack interfaces with amdxdna kernel driver. XRT "
"can be found at: https://github.com/Xilinx/XRT"
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:241
msgid ""
"The open-source XRT shim for NPU is can be found at: https://github.com/amd/"
"xdna-driver"
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:246
msgid "DMA Operation"
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:248
msgid ""
"DMA operation instructions are encoded in the ``ctrlcode`` as "
"``XAIE_IO_BLOCKWRITE`` opcode. When ERT executes ``XAIE_IO_BLOCKWRITE``, DMA "
"operations between host DDR and L2 memory are effected."
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:254
msgid "Error Handling"
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:256
msgid ""
"When MERT detects an error in AMD XDNA Array, it pauses execution for that "
"workload context and sends an asynchronous message to the driver over the "
"privileged channel. The driver then sends a buffer pointer to MERT to "
"capture the register states for the partition bound to faulting workload "
"context. The driver then decodes the error by reading the contents of the "
"buffer pointer."
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:264
msgid "Telemetry"
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:266
msgid ""
"MERT can report various kinds of telemetry information like the following:"
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:268
msgid "L1 interrupt counter"
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:269
msgid "DMA counter"
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:270
msgid "Deep Sleep counter"
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:271
msgid "etc."
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:275
msgid "References"
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:277
msgid ""
"`AMD XDNA Architecture <https://www.amd.com/en/technologies/xdna.html>`_"
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:278
msgid ""
"`AMD AI Engine Technology <https://www.xilinx.com/products/technology/ai-"
"engine.html>`_"
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:279
msgid "`Peano <https://github.com/Xilinx/llvm-aie>`_"
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:280
msgid ""
"`Versal Adaptive SoC AIE-ML Architecture Manual (AM020) <https://docs.amd."
"com/r/en-US/am020-versal-aie-ml>`_"
msgstr ""

#: ../../../accel/amdxdna/amdnpu.rst:281
msgid ""
"`AI Engine Run Time <https://github.com/Xilinx/aie-rt/tree/release/"
"main_aig>`_"
msgstr ""
