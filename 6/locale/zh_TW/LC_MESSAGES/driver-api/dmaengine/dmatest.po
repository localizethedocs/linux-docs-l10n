# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../driver-api/dmaengine/dmatest.rst:3
msgid "DMA Test Guide"
msgstr ""

#: ../../../driver-api/dmaengine/dmatest.rst:5
msgid "Andy Shevchenko <andriy.shevchenko@linux.intel.com>"
msgstr ""

#: ../../../driver-api/dmaengine/dmatest.rst:7
msgid ""
"This small document introduces how to test DMA drivers using dmatest module."
msgstr ""

#: ../../../driver-api/dmaengine/dmatest.rst:9
msgid ""
"The dmatest module tests DMA memcpy, memset, XOR and RAID6 P+Q operations "
"using various lengths and various offsets into the source and destination "
"buffers. It will initialize both buffers with a repeatable pattern and "
"verify that the DMA engine copies the requested region and nothing more. It "
"will also verify that the bytes aren't swapped around, and that the source "
"buffer isn't modified."
msgstr ""

#: ../../../driver-api/dmaengine/dmatest.rst:15
msgid ""
"The dmatest module can be configured to test a specific channel. It can also "
"test multiple channels at the same time, and it can start multiple threads "
"competing for the same channel."
msgstr ""

#: ../../../driver-api/dmaengine/dmatest.rst:20
msgid ""
"The test suite works only on the channels that have at least one capability "
"of the following: DMA_MEMCPY (memory-to-memory), DMA_MEMSET (const-to-memory "
"or memory-to-memory, when emulated), DMA_XOR, DMA_PQ."
msgstr ""

#: ../../../driver-api/dmaengine/dmatest.rst:25
msgid ""
"In case of any related questions use the official mailing list "
"dmaengine@vger.kernel.org."
msgstr ""

#: ../../../driver-api/dmaengine/dmatest.rst:29
msgid "Part 1 - How to build the test module"
msgstr ""

#: ../../../driver-api/dmaengine/dmatest.rst:31
msgid ""
"The menuconfig contains an option that could be found by following path:"
msgstr ""

#: ../../../driver-api/dmaengine/dmatest.rst:33
msgid "Device Drivers -> DMA Engine support -> DMA Test client"
msgstr ""

#: ../../../driver-api/dmaengine/dmatest.rst:35
msgid ""
"In the configuration file the option called CONFIG_DMATEST. The dmatest "
"could be built as module or inside kernel. Let's consider those cases."
msgstr ""

#: ../../../driver-api/dmaengine/dmatest.rst:39
msgid "Part 2 - When dmatest is built as a module"
msgstr ""

#: ../../../driver-api/dmaengine/dmatest.rst:41
msgid "Example of usage::"
msgstr ""

#: ../../../driver-api/dmaengine/dmatest.rst:45
#: ../../../driver-api/dmaengine/dmatest.rst:105
msgid "...or::"
msgstr ""

#: ../../../driver-api/dmaengine/dmatest.rst:53
msgid "...or on the kernel command line::"
msgstr ""

#: ../../../driver-api/dmaengine/dmatest.rst:57
msgid "Example of multi-channel test usage (new in the 5.0 kernel)::"
msgstr ""

#: ../../../driver-api/dmaengine/dmatest.rst:68
msgid ""
"For all tests, starting in the 5.0 kernel, either single- or multi-channel, "
"the channel parameter(s) must be set after all other parameters. It is at "
"that time that the existing parameter values are acquired for use by the "
"thread(s). All other parameters are shared. Therefore, if changes are made "
"to any of the other parameters, and an additional channel specified, the "
"(shared) parameters used for all threads will use the new values. After the "
"channels are specified, each thread is set as pending. All threads begin "
"execution when the run parameter is set to 1."
msgstr ""

#: ../../../driver-api/dmaengine/dmatest.rst:78
msgid ""
"A list of available channels can be found by running the following command::"
msgstr ""

#: ../../../driver-api/dmaengine/dmatest.rst:82
msgid ""
"Once started a message like \" dmatest: Added 1 threads using dma0chan0\" is "
"emitted. A thread for that specific channel is created and is now pending, "
"the pending thread is started once run is to 1."
msgstr ""

#: ../../../driver-api/dmaengine/dmatest.rst:86
msgid "Note that running a new test will not stop any in progress test."
msgstr ""

#: ../../../driver-api/dmaengine/dmatest.rst:88
msgid "The following command returns the state of the test. ::"
msgstr ""

#: ../../../driver-api/dmaengine/dmatest.rst:92
msgid ""
"To wait for test completion userspace can poll 'run' until it is false, or "
"use the wait parameter. Specifying 'wait=1' when loading the module causes "
"module initialization to pause until a test run has completed, while "
"reading /sys/module/dmatest/parameters/wait waits for any running test to "
"complete before returning. For example, the following scripts wait for 42 "
"tests to complete before exiting. Note that if 'iterations' is set to "
"'infinite' then waiting is disabled."
msgstr ""

#: ../../../driver-api/dmaengine/dmatest.rst:100
#: ../../../driver-api/dmaengine/dmatest.rst:142
#: ../../../driver-api/dmaengine/dmatest.rst:160
#: ../../../driver-api/dmaengine/dmatest.rst:168
#: ../../../driver-api/dmaengine/dmatest.rst:176
#: ../../../driver-api/dmaengine/dmatest.rst:188
#: ../../../driver-api/dmaengine/dmatest.rst:202
#: ../../../driver-api/dmaengine/dmatest.rst:221
msgid "Example::"
msgstr ""

#: ../../../driver-api/dmaengine/dmatest.rst:112
msgid "Part 3 - When built-in in the kernel"
msgstr ""

#: ../../../driver-api/dmaengine/dmatest.rst:114
msgid ""
"The module parameters that is supplied to the kernel command line will be "
"used for the first performed test. After user gets a control, the test could "
"be re-run with the same or different parameters. For the details see the "
"above section `Part 2 - When dmatest is built as a module`_."
msgstr ""

#: ../../../driver-api/dmaengine/dmatest.rst:119
msgid ""
"In both cases the module parameters are used as the actual values for the "
"test case. You always could check them at run-time by running ::"
msgstr ""

#: ../../../driver-api/dmaengine/dmatest.rst:125
msgid "Part 4 - Gathering the test results"
msgstr ""

#: ../../../driver-api/dmaengine/dmatest.rst:127
msgid "Test results are printed to the kernel log buffer with the format::"
msgstr ""

#: ../../../driver-api/dmaengine/dmatest.rst:131
msgid "Example of output::"
msgstr ""

#: ../../../driver-api/dmaengine/dmatest.rst:136
msgid ""
"The message format is unified across the different types of errors. A number "
"in the parentheses represents additional information, e.g. error code, error "
"counter, or status. A test thread also emits a summary line at completion "
"listing the number of tests executed, number that failed, and a result code."
msgstr ""

#: ../../../driver-api/dmaengine/dmatest.rst:147
msgid ""
"The details of a data miscompare error are also emitted, but do not follow "
"the above format."
msgstr ""

#: ../../../driver-api/dmaengine/dmatest.rst:151
msgid "Part 5 - Handling channel allocation"
msgstr ""

#: ../../../driver-api/dmaengine/dmatest.rst:154
msgid "Allocating Channels"
msgstr ""

#: ../../../driver-api/dmaengine/dmatest.rst:156
msgid ""
"Channels do not need to be configured prior to starting a test run. "
"Attempting to run the test without configuring the channels will result in "
"testing any channels that are available."
msgstr ""

#: ../../../driver-api/dmaengine/dmatest.rst:165
msgid ""
"Channels are registered using the \"channel\" parameter. Channels can be "
"requested by their name, once requested, the channel is registered and a "
"pending thread is added to the test list."
msgstr ""

#: ../../../driver-api/dmaengine/dmatest.rst:173
msgid ""
"More channels can be added by repeating the example above. Reading back the "
"channel parameter will return the name of last channel that was added "
"successfully."
msgstr ""

#: ../../../driver-api/dmaengine/dmatest.rst:185
msgid ""
"Another method of requesting channels is to request a channel with an empty "
"string, Doing so will request all channels available to be tested:"
msgstr ""

#: ../../../driver-api/dmaengine/dmatest.rst:199
msgid ""
"At any point during the test configuration, reading the \"test_list\" "
"parameter will print the list of currently pending tests."
msgstr ""

#: ../../../driver-api/dmaengine/dmatest.rst:213
msgid ""
"Note: Channels will have to be configured for each test run as channel "
"configurations do not carry across to the next test run."
msgstr ""

#: ../../../driver-api/dmaengine/dmatest.rst:217
msgid "Releasing Channels"
msgstr ""

#: ../../../driver-api/dmaengine/dmatest.rst:219
msgid "Channels can be freed by setting run to 0."
msgstr ""

#: ../../../driver-api/dmaengine/dmatest.rst:231
msgid ""
"Channels allocated by previous test runs are automatically freed when a new "
"channel is requested after completing a successful test run."
msgstr ""
