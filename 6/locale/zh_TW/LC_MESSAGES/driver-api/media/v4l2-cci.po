# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-30 08:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../driver-api/media/v4l2-cci.rst:4
msgid "V4L2 CCI kAPI"
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:18
msgid "An individual write from a sequence of CCI writes"
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:22
msgid "**Definition**::"
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:29
msgid "**Members**"
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:20
msgid "``reg``"
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:21
msgid "Register address, use CCI_REG#() macros to encode reg width"
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:21
msgid "``val``"
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:22
msgid "Register value"
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:25
#: include/media/v4l2-cci.h:95 include/media/v4l2-cci.h:112
#: include/media/v4l2-cci.h:133
msgid "**Description**"
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:22
msgid "Register/value pairs for sequences of writes."
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:59
msgid "Read a value from a single CCI register"
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:63
#: include/media/v4l2-cci.h:76 include/media/v4l2-cci.h:89
#: include/media/v4l2-cci.h:107 include/media/v4l2-cci.h:131
msgid "**Parameters**"
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:65
#: include/media/v4l2-cci.h:78 include/media/v4l2-cci.h:91
#: include/media/v4l2-cci.h:109
msgid "``struct regmap *map``"
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:61
msgid "Register map to read from"
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:63
#: include/media/v4l2-cci.h:76 include/media/v4l2-cci.h:90
msgid "``u32 reg``"
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:62
msgid "Register address to read, use CCI_REG#() macros to encode reg width"
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:64
msgid "``u64 *val``"
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:63
msgid "Pointer to store read value"
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:65
#: include/media/v4l2-cci.h:78 include/media/v4l2-cci.h:93
#: include/media/v4l2-cci.h:110
msgid "``int *err``"
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:64
msgid ""
"Optional pointer to store errors, if a previous error is set then the read "
"will be skipped"
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:67
#: include/media/v4l2-cci.h:80 include/media/v4l2-cci.h:97
#: include/media/v4l2-cci.h:119 include/media/v4l2-cci.h:134
msgid "**Return**"
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:67
#: include/media/v4l2-cci.h:80 include/media/v4l2-cci.h:98
#: include/media/v4l2-cci.h:120 include/media/v4l2-cci.h:135
msgid "``0`` on success or a negative error code on failure."
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:72
msgid "Write a value to a single CCI register"
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:74
#: include/media/v4l2-cci.h:105
msgid "Register map to write to"
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:75
msgid "Register address to write, use CCI_REG#() macros to encode reg width"
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:77
#: include/media/v4l2-cci.h:92
msgid "``u64 val``"
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:76
msgid "Value to be written"
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:77
#: include/media/v4l2-cci.h:109
msgid ""
"Optional pointer to store errors, if a previous error is set then the write "
"will be skipped"
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:85
msgid "Perform a read/modify/write cycle on a single CCI register"
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:88
msgid "Register map to update"
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:89
msgid "Register address to update, use CCI_REG#() macros to encode reg width"
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:91
msgid "``u64 mask``"
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:90
msgid "Bitmask to change"
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:91
msgid "New value for bitmask"
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:92
msgid ""
"Optional pointer to store errors, if a previous error is set then the update "
"will be skipped"
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:94
msgid ""
"Note this uses read-modify-write to update the bits, atomicity with regards "
"to other cci_*() register access functions is NOT guaranteed."
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:103
msgid "Write multiple registers to the device"
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:107
msgid "``const struct cci_reg_sequence *regs``"
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:106
msgid ""
"Array of structures containing register-address, -value pairs to be written, "
"register-addresses use CCI_REG#() macros to encode reg width"
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:109
msgid "``unsigned int num_regs``"
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:108
msgid "Number of registers to write"
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:111
msgid ""
"Write multiple registers to the device where the set of register, value "
"pairs are supplied in any order, possibly not all in a single range."
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:114
msgid "Use of the CCI_REG#() macros to encode reg width is mandatory."
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:116
msgid ""
"For raw lists of register-address, -value pairs with only 8 bit wide writes "
"regmap_multi_reg_write() can be used instead."
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:127
msgid "Create regmap to use with cci_*() register access functions"
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:133
msgid "``struct i2c_client *client``"
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:130
msgid "i2c_client to create the regmap for"
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:132
msgid "``int reg_addr_bits``"
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:131
msgid "register address width to use (8 or 16)"
msgstr ""

#: ../../../driver-api/media/v4l2-cci:5: include/media/v4l2-cci.h:132
msgid ""
"Note the memory for the created regmap is devm() managed, tied to the client."
msgstr ""
