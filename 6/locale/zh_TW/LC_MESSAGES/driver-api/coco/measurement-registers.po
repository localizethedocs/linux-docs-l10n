# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-30 08:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../driver-api/coco/measurement-registers.rst:6
msgid "Measurement Registers"
msgstr ""

#: ../../../driver-api/coco/measurement-registers:94: include/linux/tsm-mr.h:9
msgid "describes an architectural measurement register (MR)"
msgstr ""

#: ../../../driver-api/coco/measurement-registers:94: include/linux/tsm-mr.h:13
#: include/linux/tsm-mr.h:59
msgid "**Definition**::"
msgstr ""

#: ../../../driver-api/coco/measurement-registers:94: include/linux/tsm-mr.h:23
#: include/linux/tsm-mr.h:68
msgid "**Members**"
msgstr ""

#: ../../../driver-api/coco/measurement-registers:94: include/linux/tsm-mr.h:11
msgid "``mr_name``"
msgstr ""

#: ../../../driver-api/coco/measurement-registers:94: include/linux/tsm-mr.h:12
msgid "name of the MR"
msgstr ""

#: ../../../driver-api/coco/measurement-registers:94: include/linux/tsm-mr.h:12
msgid "``mr_value``"
msgstr ""

#: ../../../driver-api/coco/measurement-registers:94: include/linux/tsm-mr.h:13
msgid "buffer containing the current value of the MR"
msgstr ""

#: ../../../driver-api/coco/measurement-registers:94: include/linux/tsm-mr.h:13
msgid "``mr_size``"
msgstr ""

#: ../../../driver-api/coco/measurement-registers:94: include/linux/tsm-mr.h:14
msgid "size of the MR - typically the digest size of **mr_hash**"
msgstr ""

#: ../../../driver-api/coco/measurement-registers:94: include/linux/tsm-mr.h:14
msgid "``mr_flags``"
msgstr ""

#: ../../../driver-api/coco/measurement-registers:94: include/linux/tsm-mr.h:15
msgid "bitwise OR of one or more flags, detailed below"
msgstr ""

#: ../../../driver-api/coco/measurement-registers:94: include/linux/tsm-mr.h:15
msgid "``mr_hash``"
msgstr ""

#: ../../../driver-api/coco/measurement-registers:94: include/linux/tsm-mr.h:16
msgid "optional hash identifier defined in include/uapi/linux/hash_info.h."
msgstr ""

#: ../../../driver-api/coco/measurement-registers:94: include/linux/tsm-mr.h:19
#: include/linux/tsm-mr.h:66 ../../../driver-api/coco/measurement-registers:97:
#: drivers/virt/coco/guest/tsm-mr.c:127
msgid "**Description**"
msgstr ""

#: ../../../driver-api/coco/measurement-registers:94: include/linux/tsm-mr.h:16
msgid ""
"A CC guest driver encloses an array of this structure in struct "
"tsm_measurements to detail the measurement facility supported by the "
"underlying CC hardware."
msgstr ""

#: ../../../driver-api/coco/measurement-registers:94: include/linux/tsm-mr.h:20
msgid ""
"**mr_name** and **mr_value** must stay valid until this structure is no "
"longer in use."
msgstr ""

#: ../../../driver-api/coco/measurement-registers:94: include/linux/tsm-mr.h:23
msgid "**mr_flags** is the bitwise-OR of zero or more of the flags below."
msgstr ""

#: ../../../driver-api/coco/measurement-registers:94: include/linux/tsm-mr.h:25
msgid ""
"``TSM_MR_F_READABLE`` - the sysfs attribute corresponding to this MR is "
"readable."
msgstr ""

#: ../../../driver-api/coco/measurement-registers:94: include/linux/tsm-mr.h:26
msgid ""
"``TSM_MR_F_WRITABLE`` - the sysfs attribute corresponding to this MR is "
"writable. The semantics is typically to extend the MR but could vary "
"depending on the architecture and the MR."
msgstr ""

#: ../../../driver-api/coco/measurement-registers:94: include/linux/tsm-mr.h:29
msgid ""
"``TSM_MR_F_LIVE`` - this MR's value may differ from the last value written, "
"so must be read back from the underlying CC hardware/firmware."
msgstr ""

#: ../../../driver-api/coco/measurement-registers:94: include/linux/tsm-mr.h:31
msgid ""
"``TSM_MR_F_RTMR`` - bitwise-OR of ``TSM_MR_F_LIVE`` and "
"``TSM_MR_F_WRITABLE``."
msgstr ""

#: ../../../driver-api/coco/measurement-registers:94: include/linux/tsm-mr.h:32
msgid ""
"``TSM_MR_F_NOHASH`` - this MR does NOT have an associated hash algorithm. "
"**mr_hash** will be ignored when this flag is set."
msgstr ""

#: ../../../driver-api/coco/measurement-registers:94: include/linux/tsm-mr.h:55
msgid ""
"defines the CC architecture specific measurement facility and methods for "
"updating measurement registers (MRs)"
msgstr ""

#: ../../../driver-api/coco/measurement-registers:94: include/linux/tsm-mr.h:57
msgid "``mrs``"
msgstr ""

#: ../../../driver-api/coco/measurement-registers:94: include/linux/tsm-mr.h:58
msgid "Array of MR definitions."
msgstr ""

#: ../../../driver-api/coco/measurement-registers:94: include/linux/tsm-mr.h:58
msgid "``nr_mrs``"
msgstr ""

#: ../../../driver-api/coco/measurement-registers:94: include/linux/tsm-mr.h:59
msgid "Number of elements in **mrs**."
msgstr ""

#: ../../../driver-api/coco/measurement-registers:94: include/linux/tsm-mr.h:59
msgid "``refresh``"
msgstr ""

#: ../../../driver-api/coco/measurement-registers:94: include/linux/tsm-mr.h:60
msgid ""
"Callback function to load/sync all MRs from TVM hardware/firmware into the "
"kernel cache."
msgstr ""

#: ../../../driver-api/coco/measurement-registers:94: include/linux/tsm-mr.h:61
msgid "``write``"
msgstr ""

#: ../../../driver-api/coco/measurement-registers:94: include/linux/tsm-mr.h:62
msgid ""
"Callback function to write to the MR specified by the parameter **mr**. "
"Typically, writing to an MR extends the input buffer to that MR."
msgstr ""

#: ../../../driver-api/coco/measurement-registers:94: include/linux/tsm-mr.h:63
msgid ""
"The **refresh** callback is invoked when an MR with ``TSM_MR_F_LIVE`` set is "
"being read and the cache is stale. It must reload all MRs with "
"``TSM_MR_F_LIVE`` set. The function parameter **tm** is a pointer pointing "
"back to this structure."
msgstr ""

#: ../../../driver-api/coco/measurement-registers:94: include/linux/tsm-mr.h:67
msgid ""
"The **write** callback is invoked whenever an MR is being written. It takes "
"two additional parameters besides **tm**:"
msgstr ""

#: ../../../driver-api/coco/measurement-registers:94: include/linux/tsm-mr.h:70
msgid "**mr** - points to the MR (an element of **tm->mrs**) being written."
msgstr ""

#: ../../../driver-api/coco/measurement-registers:94: include/linux/tsm-mr.h:71
msgid ""
"**data** - contains the bytes to write and whose size is **mr->mr_size**."
msgstr ""

#: ../../../driver-api/coco/measurement-registers:94: include/linux/tsm-mr.h:73
msgid ""
"Both **refresh** and **write** should return 0 on success and an appropriate "
"error code on failure."
msgstr ""

#: ../../../driver-api/coco/measurement-registers:97:
#: drivers/virt/coco/guest/tsm-mr.c:123
msgid "creates an attribute group for measurement registers (MRs)"
msgstr ""

#: ../../../driver-api/coco/measurement-registers:97:
#: drivers/virt/coco/guest/tsm-mr.c:127 drivers/virt/coco/guest/tsm-mr.c:242
msgid "**Parameters**"
msgstr ""

#: ../../../driver-api/coco/measurement-registers:97:
#: drivers/virt/coco/guest/tsm-mr.c:129
msgid "``const struct tsm_measurements *tm``"
msgstr ""

#: ../../../driver-api/coco/measurement-registers:97:
#: drivers/virt/coco/guest/tsm-mr.c:125
msgid ""
"pointer to :c:type:`struct tsm_measurements <tsm_measurements>` containing "
"the MR definitions."
msgstr ""

#: ../../../driver-api/coco/measurement-registers:97:
#: drivers/virt/coco/guest/tsm-mr.c:126
msgid ""
"This function creates attributes corresponding to the MR definitions "
"provided by **tm->mrs**."
msgstr ""

#: ../../../driver-api/coco/measurement-registers:97:
#: drivers/virt/coco/guest/tsm-mr.c:129
msgid ""
"The created attributes will reference **tm** and its members. The caller "
"must not free **tm** until after tsm_mr_free_attribute_group() is called."
msgstr ""

#: ../../../driver-api/coco/measurement-registers:97:
#: drivers/virt/coco/guest/tsm-mr.c:132 drivers/virt/coco/guest/tsm-mr.c:242
msgid "**Context**"
msgstr ""

#: ../../../driver-api/coco/measurement-registers:97:
#: drivers/virt/coco/guest/tsm-mr.c:133
msgid "Process context. May sleep due to memory allocation."
msgstr ""

#: ../../../driver-api/coco/measurement-registers:97:
#: drivers/virt/coco/guest/tsm-mr.c:135
msgid "**Return**"
msgstr ""

#: ../../../driver-api/coco/measurement-registers:97:
#: drivers/virt/coco/guest/tsm-mr.c:135
msgid "On success, the pointer to a an attribute group is returned; otherwise"
msgstr ""

#: ../../../driver-api/coco/measurement-registers:97:
#: drivers/virt/coco/guest/tsm-mr.c:136
msgid "``-EINVAL`` - Invalid MR definitions."
msgstr ""

#: ../../../driver-api/coco/measurement-registers:97:
#: drivers/virt/coco/guest/tsm-mr.c:137
msgid "``-ENOMEM`` - Out of memory."
msgstr ""

#: ../../../driver-api/coco/measurement-registers:97:
#: drivers/virt/coco/guest/tsm-mr.c:238
msgid "frees the attribute group returned by tsm_mr_create_attribute_group()"
msgstr ""

#: ../../../driver-api/coco/measurement-registers:97:
#: drivers/virt/coco/guest/tsm-mr.c:244
msgid "``const struct attribute_group *attr_grp``"
msgstr ""

#: ../../../driver-api/coco/measurement-registers:97:
#: drivers/virt/coco/guest/tsm-mr.c:240
msgid "attribute group returned by tsm_mr_create_attribute_group()"
msgstr ""

#: ../../../driver-api/coco/measurement-registers:97:
#: drivers/virt/coco/guest/tsm-mr.c:242
msgid "Process context."
msgstr ""
