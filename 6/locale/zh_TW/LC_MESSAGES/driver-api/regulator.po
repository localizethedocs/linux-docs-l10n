# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-30 08:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../driver-api/regulator.rst:9
msgid "Voltage and current regulator API"
msgstr ""

#: ../../../driver-api/regulator.rst:0
msgid "Author"
msgstr ""

#: ../../../driver-api/regulator.rst:11
msgid "Liam Girdwood"
msgstr ""

#: ../../../driver-api/regulator.rst:12
msgid "Mark Brown"
msgstr ""

#: ../../../driver-api/regulator.rst:15
msgid "Introduction"
msgstr ""

#: ../../../driver-api/regulator.rst:17
msgid ""
"This framework is designed to provide a standard kernel interface to control "
"voltage and current regulators."
msgstr ""

#: ../../../driver-api/regulator.rst:20
msgid ""
"The intention is to allow systems to dynamically control regulator power "
"output in order to save power and prolong battery life. This applies to both "
"voltage regulators (where voltage output is controllable) and current sinks "
"(where current limit is controllable)."
msgstr ""

#: ../../../driver-api/regulator.rst:25
msgid ""
"Note that additional (and currently more complete) documentation is "
"available in the Linux kernel source under ``Documentation/power/regulator``."
msgstr ""

#: ../../../driver-api/regulator.rst:30
msgid "Glossary"
msgstr ""

#: ../../../driver-api/regulator.rst:32
msgid "The regulator API uses a number of terms which may not be familiar:"
msgstr ""

#: ../../../driver-api/regulator.rst:34
msgid "Regulator"
msgstr ""

#: ../../../driver-api/regulator.rst:36
msgid ""
"Electronic device that supplies power to other devices. Most regulators can "
"enable and disable their output and some can also control their output "
"voltage or current."
msgstr ""

#: ../../../driver-api/regulator.rst:40
msgid "Consumer"
msgstr ""

#: ../../../driver-api/regulator.rst:42
msgid ""
"Electronic device which consumes power provided by a regulator. These may "
"either be static, requiring only a fixed supply, or dynamic, requiring "
"active management of the regulator at runtime."
msgstr ""

#: ../../../driver-api/regulator.rst:46
msgid "Power Domain"
msgstr ""

#: ../../../driver-api/regulator.rst:48
msgid ""
"The electronic circuit supplied by a given regulator, including the "
"regulator and all consumer devices. The configuration of the regulator is "
"shared between all the components in the circuit."
msgstr ""

#: ../../../driver-api/regulator.rst:52
msgid "Power Management Integrated Circuit (PMIC)"
msgstr ""

#: ../../../driver-api/regulator.rst:54
msgid ""
"An IC which contains numerous regulators and often also other subsystems. In "
"an embedded system the primary PMIC is often equivalent to a combination of "
"the PSU and southbridge in a desktop system."
msgstr ""

#: ../../../driver-api/regulator.rst:59
msgid "Consumer driver interface"
msgstr ""

#: ../../../driver-api/regulator.rst:61
msgid ""
"This offers a similar API to the kernel clock framework. Consumer drivers "
"use `get <#API-regulator-get>`__ and `put <#API-regulator-put>`__ operations "
"to acquire and release regulators. Functions are provided to `enable <#API-"
"regulator-enable>`__ and `disable <#API-regulator-disable>`__ the regulator "
"and to get and set the runtime parameters of the regulator."
msgstr ""

#: ../../../driver-api/regulator.rst:68
msgid ""
"When requesting regulators consumers use symbolic names for their supplies, "
"such as \"Vcc\", which are mapped into actual regulator devices by the "
"machine interface."
msgstr ""

#: ../../../driver-api/regulator.rst:72
msgid ""
"A stub version of this API is provided when the regulator framework is not "
"in use in order to minimise the need to use ifdefs."
msgstr ""

#: ../../../driver-api/regulator.rst:76
msgid "Enabling and disabling"
msgstr ""

#: ../../../driver-api/regulator.rst:78
msgid ""
"The regulator API provides reference counted enabling and disabling of "
"regulators. Consumer devices use the :c:func:`regulator_enable()` and :c:"
"func:`regulator_disable()` functions to enable and disable regulators. Calls "
"to the two functions must be balanced."
msgstr ""

#: ../../../driver-api/regulator.rst:83
msgid ""
"Note that since multiple consumers may be using a regulator and machine "
"constraints may not allow the regulator to be disabled there is no guarantee "
"that calling :c:func:`regulator_disable()` will actually cause the supply "
"provided by the regulator to be disabled. Consumer drivers should assume "
"that the regulator may be enabled at all times."
msgstr ""

#: ../../../driver-api/regulator.rst:90
msgid "Configuration"
msgstr ""

#: ../../../driver-api/regulator.rst:92
msgid ""
"Some consumer devices may need to be able to dynamically configure their "
"supplies. For example, MMC drivers may need to select the correct operating "
"voltage for their cards. This may be done while the regulator is enabled or "
"disabled."
msgstr ""

#: ../../../driver-api/regulator.rst:97
msgid ""
"The :c:func:`regulator_set_voltage()` and :c:func:"
"`regulator_set_current_limit()` functions provide the primary interface for "
"this. Both take ranges of voltages and currents, supporting drivers that do "
"not require a specific value (eg, CPU frequency scaling normally permits the "
"CPU to use a wider range of supply voltages at lower frequencies but does "
"not require that the supply voltage be lowered). Where an exact value is "
"required both minimum and maximum values should be identical."
msgstr ""

#: ../../../driver-api/regulator.rst:107
msgid "Callbacks"
msgstr ""

#: ../../../driver-api/regulator.rst:109
msgid ""
"Callbacks may also be registered for events such as regulation failures."
msgstr ""

#: ../../../driver-api/regulator.rst:112
msgid "Regulator driver interface"
msgstr ""

#: ../../../driver-api/regulator.rst:114
msgid ""
"Drivers for regulator chips register the regulators with the regulator core, "
"providing operations structures to the core. A notifier interface allows "
"error conditions to be reported to the core."
msgstr ""

#: ../../../driver-api/regulator.rst:118
msgid ""
"Registration should be triggered by explicit setup done by the platform, "
"supplying a struct regulator_init_data for the regulator containing "
"constraint and supply information."
msgstr ""

#: ../../../driver-api/regulator.rst:123
msgid "Machine interface"
msgstr ""

#: ../../../driver-api/regulator.rst:125
msgid ""
"This interface provides a way to define how regulators are connected to "
"consumers on a given system and what the valid operating parameters are for "
"the system."
msgstr ""

#: ../../../driver-api/regulator.rst:130
msgid "Supplies"
msgstr ""

#: ../../../driver-api/regulator.rst:132
msgid ""
"Regulator supplies are specified using struct :c:type:"
"`regulator_consumer_supply`. This is done at driver registration time as "
"part of the machine constraints."
msgstr ""

#: ../../../driver-api/regulator.rst:137
msgid "Constraints"
msgstr ""

#: ../../../driver-api/regulator.rst:139
msgid ""
"As well as defining the connections the machine interface also provides "
"constraints defining the operations that clients are allowed to perform and "
"the parameters that may be set. This is required since generally regulator "
"devices will offer more flexibility than it is safe to use on a given "
"system, for example supporting higher supply voltages than the consumers are "
"rated for."
msgstr ""

#: ../../../driver-api/regulator.rst:146
msgid ""
"This is done at driver registration time` by providing a struct "
"regulation_constraints."
msgstr ""

#: ../../../driver-api/regulator.rst:149
msgid ""
"The constraints may also specify an initial configuration for the regulator "
"in the constraints, which is particularly useful for use with static "
"consumers."
msgstr ""

#: ../../../driver-api/regulator.rst:154
msgid "API reference"
msgstr ""

#: ../../../driver-api/regulator.rst:156
msgid ""
"Due to limitations of the kernel documentation framework and the existing "
"layout of the source code the entire regulator API is documented here."
msgstr ""

#: ../../../driver-api/regulator:160: include/linux/regulator/consumer.h:112
msgid "Data sent with PRE_VOLTAGE_CHANGE event"
msgstr ""

#: ../../../driver-api/regulator:160: include/linux/regulator/consumer.h:116
#: include/linux/regulator/consumer.h:131 ../../../driver-api/regulator:163:
#: include/linux/regulator/machine.h:71 include/linux/regulator/machine.h:106
#: include/linux/regulator/machine.h:249 include/linux/regulator/machine.h:270
#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:61
#: include/linux/regulator/driver.h:254 include/linux/regulator/driver.h:447
#: include/linux/regulator/driver.h:473 include/linux/regulator/driver.h:488
#: include/linux/regulator/driver.h:512
msgid "**Definition**::"
msgstr ""

#: ../../../driver-api/regulator:160: include/linux/regulator/consumer.h:124
#: include/linux/regulator/consumer.h:139 ../../../driver-api/regulator:163:
#: include/linux/regulator/machine.h:82 include/linux/regulator/machine.h:153
#: include/linux/regulator/machine.h:256 include/linux/regulator/machine.h:280
#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:102
#: include/linux/regulator/driver.h:322 include/linux/regulator/driver.h:458
#: include/linux/regulator/driver.h:482 include/linux/regulator/driver.h:497
#: include/linux/regulator/driver.h:527
msgid "**Members**"
msgstr ""

#: ../../../driver-api/regulator:160: include/linux/regulator/consumer.h:114
msgid "``old_uV``"
msgstr ""

#: ../../../driver-api/regulator:160: include/linux/regulator/consumer.h:115
msgid "Current voltage before change."
msgstr ""

#: ../../../driver-api/regulator:160: include/linux/regulator/consumer.h:115
#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:75
#: include/linux/regulator/machine.h:108 ../../../driver-api/regulator:166:
#: include/linux/regulator/driver.h:288
msgid "``min_uV``"
msgstr ""

#: ../../../driver-api/regulator:160: include/linux/regulator/consumer.h:116
msgid "Min voltage we'll change to."
msgstr ""

#: ../../../driver-api/regulator:160: include/linux/regulator/consumer.h:116
#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:76
#: include/linux/regulator/machine.h:109
msgid "``max_uV``"
msgstr ""

#: ../../../driver-api/regulator:160: include/linux/regulator/consumer.h:117
msgid "Max voltage we'll change to."
msgstr ""

#: ../../../driver-api/regulator:160: include/linux/regulator/consumer.h:127
msgid "Data used for bulk regulator operations."
msgstr ""

#: ../../../driver-api/regulator:160: include/linux/regulator/consumer.h:129
#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:251
msgid "``supply``"
msgstr ""

#: ../../../driver-api/regulator:160: include/linux/regulator/consumer.h:130
msgid ""
"The name of the supply.  Initialised by the user before using the bulk "
"regulator APIs."
msgstr ""

#: ../../../driver-api/regulator:160: include/linux/regulator/consumer.h:131
msgid "``consumer``"
msgstr ""

#: ../../../driver-api/regulator:160: include/linux/regulator/consumer.h:132
msgid ""
"The regulator consumer for the supply.  This will be managed by the bulk API."
msgstr ""

#: ../../../driver-api/regulator:160: include/linux/regulator/consumer.h:133
msgid "``init_load_uA``"
msgstr ""

#: ../../../driver-api/regulator:160: include/linux/regulator/consumer.h:134
msgid ""
"After getting the regulator, regulator_set_load() will be called with this "
"load.  Initialised by the user before using the bulk regulator APIs."
msgstr ""

#: ../../../driver-api/regulator:160: include/linux/regulator/consumer.h:139
#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:86
#: include/linux/regulator/machine.h:149 include/linux/regulator/machine.h:255
#: include/linux/regulator/machine.h:282 ../../../driver-api/regulator:166:
#: include/linux/regulator/driver.h:153 include/linux/regulator/driver.h:366
#: include/linux/regulator/driver.h:460 include/linux/regulator/driver.h:499
#: include/linux/regulator/driver.h:568 ../../../driver-api/regulator:169:
#: drivers/regulator/core.c:3 drivers/regulator/core.c:2346
#: drivers/regulator/core.c:2365 drivers/regulator/core.c:2393
#: drivers/regulator/core.c:2485 drivers/regulator/core.c:2524
#: drivers/regulator/core.c:2548 drivers/regulator/core.c:2592
#: drivers/regulator/core.c:2957 drivers/regulator/core.c:3068
#: drivers/regulator/core.c:3122 drivers/regulator/core.c:3204
#: drivers/regulator/core.c:3283 drivers/regulator/core.c:3312
#: drivers/regulator/core.c:3366 drivers/regulator/core.c:3399
#: drivers/regulator/core.c:3429 drivers/regulator/core.c:4258
#: drivers/regulator/core.c:4378 drivers/regulator/core.c:4435
#: drivers/regulator/core.c:4491 drivers/regulator/core.c:4618
#: drivers/regulator/core.c:4778 drivers/regulator/core.c:4845
#: drivers/regulator/core.c:4894 drivers/regulator/core.c:4910
#: drivers/regulator/core.c:4965 drivers/regulator/core.c:5028
#: drivers/regulator/core.c:5045 drivers/regulator/core.c:5129
#: drivers/regulator/core.c:5156 drivers/regulator/core.c:5206
#: drivers/regulator/core.c:5246 drivers/regulator/core.c:5280
#: drivers/regulator/core.c:5336 drivers/regulator/core.c:5357
#: drivers/regulator/core.c:5760 drivers/regulator/core.c:6026
#: drivers/regulator/core.c:6149 drivers/regulator/core.c:6164
msgid "**Description**"
msgstr ""

#: ../../../driver-api/regulator:160: include/linux/regulator/consumer.h:136
msgid ""
"The regulator APIs provide a series of regulator_bulk_() API calls as a "
"convenience to consumers which require multiple supplies.  This structure is "
"used to manage data for these calls."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:67
msgid "regulator state during low power system states"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:73
msgid "``uV``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:74
msgid ""
"Default operating voltage during suspend, it can be adjusted among <min_uV, "
"max_uV>."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:76
msgid "Minimum suspend voltage may be set."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:77
msgid "Maximum suspend voltage may be set."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:77
msgid "``mode``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:78
msgid "Operating mode during suspend."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:78
msgid "``enabled``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:79
msgid ""
"operations during suspend. - DO_NOTHING_IN_SUSPEND - DISABLE_IN_SUSPEND - "
"ENABLE_IN_SUSPEND"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:82
msgid "``changeable``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:83
msgid "Is this state can be switched between enabled/disabled,"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:68
msgid ""
"This describes a regulators state during a system wide low power state.  One "
"of enabled or disabled must be set for the configuration to be applied."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:102
msgid "regulator operating constraints."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:106
#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:257
#: include/linux/regulator/driver.h:510
msgid "``name``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:107
msgid "Descriptive name for the constraints, used for display purposes."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:109
msgid "Smallest voltage consumers may set."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:110
msgid "Largest voltage consumers may set."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:110
msgid "``uV_offset``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:111
msgid ""
"Offset applied to voltages from consumer to compensate for voltage drops."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:113
msgid "``min_uA``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:114
msgid "Smallest current consumers may set."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:114
msgid "``max_uA``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:115
msgid "Largest current consumers may set."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:115
msgid "``ilim_uA``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:116
msgid "Maximum input current."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:116
msgid "``pw_budget_mW``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:117
msgid "Power budget for the regulator in mW."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:117
msgid "``system_load``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:118
msgid "Load that isn't captured by any consumer requests."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:124
msgid "``max_spread``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:125
msgid "Max possible spread between coupled regulators"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:125
msgid "``max_uV_step``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:126
msgid "Max possible step change in voltage"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:126
msgid "``valid_modes_mask``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:127
msgid "Mask of modes which may be configured by consumers."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:127
msgid "``valid_ops_mask``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:128
msgid "Operations which may be performed by consumers."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:147
msgid "``input_uV``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:148
msgid "Input voltage for regulator when supplied by another regulator."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:149
msgid "``state_disk``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:150
msgid "State for regulator when system is suspended in disk mode."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:150
msgid "``state_mem``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:151
msgid "State for regulator when system is suspended in mem mode."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:151
msgid "``state_standby``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:152
msgid "State for regulator when system is suspended in standby mode."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:119
msgid "``over_curr_limits``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:120
msgid "Limits for acting on over current."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:120
msgid "``over_voltage_limits``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:121
msgid "Limits for acting on over voltage."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:121
msgid "``under_voltage_limits``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:122
msgid "Limits for acting on under voltage."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:122
msgid "``temp_limits``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:123
msgid "Limits for acting on over temperature."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:153
msgid "``initial_state``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:154
msgid "Suspend state to set by default."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:154
msgid "``initial_mode``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:155
msgid "Mode to set at startup."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:155
#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:292
msgid "``ramp_delay``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:156
#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:293
msgid "Time to settle down after voltage change (unit: uV/us)"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:156
msgid "``settling_time``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:157
msgid ""
"Time to settle down after voltage change when voltage change is non-linear "
"(unit: microseconds)."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:158
msgid "``settling_time_up``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:159
msgid ""
"Time to settle down after voltage increase when voltage change is non-linear "
"(unit: microseconds)."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:160
msgid "``settling_time_down``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:161
msgid ""
"Time to settle down after voltage decrease when voltage change is non-linear "
"(unit: microseconds)."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:165
#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:125
#: include/linux/regulator/driver.h:356
msgid "``enable_time``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:166
msgid "Turn-on time of the rails (unit: microseconds)"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:166
msgid "``uv_less_critical_window_ms``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:167
msgid ""
"Specifies the time window (in milliseconds) following a critical under-"
"voltage (UV) event during which less critical actions can be safely carried "
"out by the system (for example logging). After this time window more "
"critical actions should be done (for example prevent HW damage)."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:162
msgid "``active_discharge``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:163
msgid ""
"Enable/disable active discharge. The enum regulator_active_discharge values "
"are used for initialisation."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:129
msgid "``always_on``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:130
msgid "Set if the regulator should never be disabled."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:130
msgid "``boot_on``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:131
msgid ""
"Set if the regulator is enabled when the system is initially started.  If "
"the regulator is not enabled by the hardware or bootloader then it will be "
"enabled when the constraints are applied."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:134
msgid "``apply_uV``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:135
msgid "Apply the voltage constraint when initialising."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:135
msgid "``ramp_disable``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:136
msgid "Disable ramp delay when initialising or when setting voltage."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:136
msgid "``soft_start``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:137
msgid "Enable soft start so that voltage ramps slowly."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:137
msgid "``pull_down``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:138
msgid "Enable pull down when regulator is disabled."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:138
msgid "``system_critical``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:139
msgid "Set if the regulator is critical to system stability or functionality."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:140
msgid "``over_current_protection``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:141
msgid "Auto disable on over current event."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:142
msgid "``over_current_detection``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:143
msgid "Configure over current limits."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:143
msgid "``over_voltage_detection``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:144
msgid "Configure over voltage limits."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:144
msgid "``under_voltage_detection``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:145
msgid "Configure under voltage limits."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:145
msgid "``over_temp_detection``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:146
msgid "Configure over temperature limits."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:103
msgid "This struct describes regulator and board/machine specific constraints."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:245
msgid "supply -> device mapping"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:250
msgid "``dev_name``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:251
msgid "Result of dev_name() for the consumer."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:252
msgid "Name for the supply."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:246
msgid ""
"This maps a supply name to a device. Use of dev_name allows support for "
"buses which make struct device available late such as I2C."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:266
msgid "regulator platform initialisation data."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:270
msgid "``supply_regulator``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:271
msgid ""
"Parent regulator.  Specified using the regulator name as it appears in the "
"name field in sysfs, which can be explicitly set using the constraints field "
"'name'."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:274
msgid "``constraints``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:275
msgid "Constraints.  These must be specified for the regulator to be usable."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:276
msgid "``num_consumer_supplies``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:277
msgid "Number of consumer device supplies."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:277
msgid "``consumer_supplies``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:278
msgid "Consumer device supply configuration."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:278
#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:451
msgid "``driver_data``"
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:279
msgid "Data passed to regulator_init."
msgstr ""

#: ../../../driver-api/regulator:163: include/linux/regulator/machine.h:267
msgid "Initialisation constraints, our supply and consumers supplies."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:57
msgid "regulator operations."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:75
msgid "``list_voltage``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:76
msgid ""
"Return one of the supported voltages, in microvolts; zero if the selector "
"indicates a voltage that is unusable on this system; or negative errno.  "
"Selectors range from zero to one less than regulator_desc.n_voltages.  "
"Voltages may be reported in any order."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:64
msgid "``set_voltage``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:65
msgid ""
"Set the voltage for the regulator within the range specified. The driver "
"should select the voltage closest to min_uV."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:68
msgid "``map_voltage``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:69
msgid "Convert a voltage into a selector"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:66
msgid "``set_voltage_sel``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:67
msgid "Set the voltage for the regulator using the specified selector."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:69
msgid "``get_voltage``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:70
msgid ""
"Return the currently configured voltage for the regulator; return -"
"ENOTRECOVERABLE if regulator can't be read at bootup and hasn't been set yet."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:72
msgid "``get_voltage_sel``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:73
msgid ""
"Return the currently configured voltage selector for the regulator; return -"
"ENOTRECOVERABLE if regulator can't be read at bootup and hasn't been set yet."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:80
msgid "``set_current_limit``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:81
msgid ""
"Configure a limit for a current-limited regulator. The driver should select "
"the current closest to max_uA."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:82
msgid "``get_current_limit``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:83
msgid "Get the configured limit for a current-limited regulator."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:83
msgid "``set_input_current_limit``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:84
msgid "Configure an input limit."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:85
msgid "``set_over_current_protection``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:86
msgid ""
"Support enabling of and setting limits for over current situation detection. "
"Detection can be configured for three levels of severity."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:101
msgid "``set_over_voltage_protection``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:102
msgid ""
"Support enabling of and setting limits for over voltage situation detection. "
"Detection can be configured for same severities as over current protection. "
"Units of uV."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:104
msgid "``set_under_voltage_protection``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:105
msgid ""
"Support enabling of and setting limits for under voltage situation "
"detection. Detection can be configured for same severities as over current "
"protection. Units of uV."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:107
msgid "``set_thermal_protection``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:108
msgid ""
"Support enabling of and setting limits for over temperature situation "
"detection.Detection can be configured for same severities as over current "
"protection. Units of degree Kelvin."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:111
msgid "``set_active_discharge``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:112
msgid "Set active discharge enable/disable of regulators."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:59
msgid "``enable``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:60
msgid "Configure the regulator as enabled."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:60
msgid "``disable``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:61
msgid "Configure the regulator as disabled."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:61
msgid "``is_enabled``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:62
msgid ""
"Return 1 if the regulator is enabled, 0 if not. May also return negative "
"errno."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:113
msgid "``set_mode``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:114
msgid "Set the configured operating mode for the regulator."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:114
msgid "``get_mode``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:115
msgid "Get the configured operating mode for the regulator."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:115
msgid "``get_error_flags``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:116
msgid "Get the current error(s) for the regulator."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:126
msgid ""
"Time taken for the regulator voltage output voltage to stabilise after being "
"enabled, in microseconds."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:127
msgid "``set_ramp_delay``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:128
msgid ""
"Set the ramp delay for the regulator. The driver should select ramp delay "
"equal to or less than(closest) ramp_delay."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:129
msgid "``set_voltage_time``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:130
msgid ""
"Time taken for the regulator voltage output voltage to stabilise after being "
"set to a new value, in microseconds. The function receives the from and to "
"voltage as input, it should return the worst case."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:133
msgid "``set_voltage_time_sel``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:134
msgid ""
"Time taken for the regulator voltage output voltage to stabilise after being "
"set to a new value, in microseconds. The function receives the from and to "
"voltage selector as input, it should return the worst case."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:137
msgid "``set_soft_start``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:138
msgid "Enable soft start for the regulator."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:116
msgid "``get_status``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:117
msgid ""
"Return actual (not as-configured) status of regulator, as a REGULATOR_STATUS "
"value (or negative errno)"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:118
msgid "``get_optimum_mode``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:119
msgid ""
"Get the most efficient operating mode for the regulator when running with "
"the specified parameters."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:120
msgid "``set_load``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:121
msgid "Set the load for the regulator."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:122
msgid "``set_bypass``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:123
msgid "Set the regulator in bypass mode."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:123
msgid "``get_bypass``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:124
msgid "Get the regulator bypass mode state."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:139
msgid "``set_suspend_voltage``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:140
msgid "Set the voltage for the regulator when the system is suspended."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:141
msgid "``set_suspend_enable``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:142
msgid "Mark the regulator as enabled when the system is suspended."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:143
msgid "``set_suspend_disable``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:144
msgid "Mark the regulator as disabled when the system is suspended."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:145
msgid "``set_suspend_mode``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:146
msgid "Set the operating mode for the regulator when the system is suspended."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:147
msgid "``resume``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:148
msgid "Resume operation of suspended regulator."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:148
msgid "``set_pull_down``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:149
msgid "Configure the regulator to pull down when the regulator is disabled."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:88
msgid ""
"REGULATOR_SEVERITY_PROT should automatically shut down the regulator(s)."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:90
msgid "REGULATOR_SEVERITY_ERR should indicate that over-current situation is"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:91
msgid ""
"caused by an unrecoverable error but HW does not perform automatic shut down."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:94
msgid "REGULATOR_SEVERITY_WARN should indicate situation where hardware is"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:95
msgid ""
"still believed to not be damaged but that a board sepcific recovery action "
"is needed. If lim_uA is 0 the limit should not be changed but the detection "
"should just be enabled/disabled as is requested."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:101
msgid ""
"This struct describes regulator operations which can be implemented by "
"regulator chip drivers."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:250
msgid "Static regulator descriptor"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:258
msgid "Identifying name for the regulator."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:258
msgid "``supply_name``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:259
msgid "Identifying the regulator supply"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:259
msgid "``of_match``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:260
msgid "Name used to identify regulator in DT."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:260
msgid "``of_match_full_name``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:261
msgid ""
"A flag to indicate that the of_match string, if present, should be matched "
"against the node full_name."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:262
msgid "``regulators_node``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:263
msgid "Name of node containing regulator definitions in DT."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:263
msgid "``of_parse_cb``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:264
msgid ""
"Optional callback called only if of_match is present. Will be called for "
"each regulator parsed from DT, during init_data parsing. The "
"regulator_config passed as argument to the callback will be a copy of config "
"passed to regulator_register, valid only for this particular call. Callback "
"may freely change the config but it cannot store it for later usage. "
"Callback should return 0 on success or negative ERRNO indicating failure."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:272
msgid "``init_cb``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:273
msgid ""
"Optional callback called after the parsing of init_data. Allows the "
"regulator to perform runtime init if necessary, such as synching the "
"regulator and the parsed constraints. Callback should return 0 on success or "
"negative ERRNO indicating failure."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:277
msgid "``id``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:278
msgid "Numerical identifier for the regulator."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:283
msgid "``continuous_voltage_range``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:284
msgid "Indicates if the regulator can set any voltage within constrains range."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:285
msgid "``n_voltages``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:286
msgid "Number of selectors available for ops.list_voltage()."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:286
msgid "``n_current_limits``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:287
msgid "Number of selectors available for current limits"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:278
msgid "``ops``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:279
msgid "Regulator operations table."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:279
msgid "``irq``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:280
msgid "Interrupt number for the regulator."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:280
msgid "``type``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:281
msgid "Indicates if the regulator is a voltage or current regulator."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:281
msgid "``owner``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:282
msgid "Module providing the regulator, used for refcounting."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:289
msgid "Voltage given by the lowest selector (if linear mapping)"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:289
msgid "``uV_step``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:290
msgid "Voltage increase with each selector (if linear mapping)"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:290
msgid "``linear_min_sel``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:291
msgid "Minimal selector for starting linear mapping"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:291
msgid "``fixed_uV``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:292
msgid "Fixed voltage of rails."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:293
msgid "``min_dropout_uV``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:294
msgid "The minimum dropout voltage this regulator can handle"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:294
msgid "``linear_ranges``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:295
msgid "A constant table of possible voltage ranges."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:295
msgid "``linear_range_selectors_bitfield``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:296
msgid ""
"A constant table of voltage range selectors as bitfield values. If pickable "
"ranges are used each range must have corresponding selector here."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:299
msgid "``n_linear_ranges``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:300
msgid ""
"Number of entries in the **linear_ranges** (and in "
"linear_range_selectors_bitfield if used) table(s)."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:301
msgid "``volt_table``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:302
msgid "Voltage mapping table (if table based mapping)"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:302
msgid "``curr_table``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:303
msgid "Current limit mapping table (if table based mapping)"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:304
msgid "``vsel_range_reg``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:305
msgid ""
"Register for range selector when using pickable ranges and "
"``regulator_map_*_voltage_*_pickable`` functions."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:306
msgid "``vsel_range_mask``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:307
msgid "Mask for register bitfield used for range selector"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:307
msgid "``range_applied_by_vsel``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:308
msgid ""
"A flag to indicate that changes to vsel_range_reg are only effective after "
"vsel_reg is written"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:309
msgid "``vsel_reg``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:310
msgid "Register for selector when using ``regulator_map_*_voltage_*``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:310
msgid "``vsel_mask``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:311
msgid "Mask for register bitfield used for selector"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:311
msgid "``vsel_step``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:312
msgid ""
"Specify the resolution of selector stepping when setting voltage. If 0, then "
"no stepping is done (requested selector is set directly), if >0 then the "
"regulator API will ramp the voltage up/down gradually each time increasing/"
"decreasing the selector by the specified step value."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:316
msgid "``csel_reg``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:317
msgid "Register for current limit selector using regmap set_current_limit"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:317
msgid "``csel_mask``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:318
msgid "Mask for register bitfield used for current limit selector"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:318
msgid "``apply_reg``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:319
msgid ""
"Register for initiate voltage change on the output when using "
"regulator_set_voltage_sel_regmap"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:320
msgid "``apply_bit``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:321
msgid ""
"Register bitfield used for initiate voltage change on the output when using "
"regulator_set_voltage_sel_regmap"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:322
msgid "``enable_reg``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:323
msgid "Register for control when using regmap enable/disable ops"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:323
msgid "``enable_mask``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:324
msgid "Mask for control when using regmap enable/disable ops"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:324
msgid "``enable_val``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:325
msgid "Enabling value for control when using regmap enable/disable ops"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:325
msgid "``disable_val``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:326
msgid "Disabling value for control when using regmap enable/disable ops"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:326
msgid "``enable_is_inverted``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:327
msgid ""
"A flag to indicate set enable_mask bits to disable when using "
"regulator_enable_regmap and friends APIs."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:328
msgid "``bypass_reg``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:329
msgid "Register for control when using regmap set_bypass"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:329
msgid "``bypass_mask``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:330
msgid "Mask for control when using regmap set_bypass"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:330
msgid "``bypass_val_on``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:331
msgid "Enabling value for control when using regmap set_bypass"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:331
msgid "``bypass_val_off``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:332
msgid "Disabling value for control when using regmap set_bypass"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:334
msgid "``active_discharge_on``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:335
msgid "Disabling value for control when using regmap set_active_discharge"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:332
msgid "``active_discharge_off``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:333
msgid "Enabling value for control when using regmap set_active_discharge"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:336
msgid "``active_discharge_mask``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:337
msgid "Mask for control when using regmap set_active_discharge"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:338
msgid "``active_discharge_reg``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:339
msgid "Register for control when using regmap set_active_discharge"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:340
msgid "``soft_start_reg``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:341
msgid "Register for control when using regmap set_soft_start"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:341
msgid "``soft_start_mask``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:342
msgid "Mask for control when using regmap set_soft_start"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:342
msgid "``soft_start_val_on``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:343
msgid "Enabling value for control when using regmap set_soft_start"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:344
msgid "``pull_down_reg``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:345
msgid "Register for control when using regmap set_pull_down"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:345
msgid "``pull_down_mask``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:346
msgid "Mask for control when using regmap set_pull_down"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:346
msgid "``pull_down_val_on``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:347
msgid "Enabling value for control when using regmap set_pull_down"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:349
msgid "``ramp_reg``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:350
msgid "Register for controlling the regulator ramp-rate."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:350
msgid "``ramp_mask``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:351
msgid "Bitmask for the ramp-rate control register."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:351
msgid "``ramp_delay_table``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:352
msgid ""
"Table for mapping the regulator ramp-rate values. Values should be given in "
"units of V/S (uV/uS). See the regulator_set_ramp_delay_regmap()."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:354
msgid "``n_ramp_values``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:355
msgid "number of elements at **ramp_delay_table**."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:357
msgid "Time taken for initial enable of regulator (in uS)."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:357
msgid "``off_on_delay``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:358
msgid "guard time (in uS), before re-enabling a regulator"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:359
msgid "``poll_enabled_time``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:360
msgid ""
"The polling interval (in uS) to use while checking that the regulator was "
"actually enabled. Max upto enable_time."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:362
msgid "``of_map_mode``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:363
msgid "Maps a hardware mode defined in a DeviceTree to a standard mode"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:251
msgid ""
"Each regulator registered with the core is described with a structure of "
"this type and a struct regulator_config.  This structure contains the non-"
"varying parts of the regulator description."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:443
msgid "Dynamic regulator descriptor"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:449
msgid "``dev``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:450
msgid "struct device for the regulator"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:450
msgid "``init_data``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:451
msgid "platform provided init data, passed through by driver"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:452
msgid "private regulator data"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:452
msgid "``of_node``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:453
msgid "OpenFirmware node to parse for device tree bindings (may be NULL)."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:454
msgid "``regmap``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:455
msgid ""
"regmap to use for core regmap helpers if dev_get_regmap() is insufficient."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:456
msgid "``ena_gpiod``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:457
msgid "GPIO controlling regulator enable."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:444
msgid ""
"Each regulator registered with the core is described with a structure of "
"this type and a struct regulator_desc.  This structure contains the runtime "
"variable parts of the regulator description."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:469
msgid "regulator error/notification status"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:471
msgid "``rdev``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:472
msgid "Regulator which status the struct indicates."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:472
msgid "``notifs``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:473
msgid "Events which have occurred on the regulator."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:473
msgid "``errors``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:474
msgid "Errors which are active on the regulator."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:474
msgid "``possible_errs``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:475
msgid "Errors which can be signaled (by given IRQ)."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:484
msgid "regulator error/notification status data"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:486
msgid "``states``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:487
msgid "Status structs for each of the associated regulators."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:487
msgid "``num_states``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:488
msgid "Amount of associated regulators."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:488
#: include/linux/regulator/driver.h:530
msgid "``data``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:489
msgid "Driver data pointer given at regulator_irq_desc."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:489
msgid "``opaque``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:490
msgid ""
"Value storage for IC driver. Core does not update this. ICs may want to "
"store status register value here at map_event and compare contents at "
"'renable' callback to see if new problems have been added to status. If that "
"is the case it may be desirable to return REGULATOR_ERROR_CLEARED and not "
"REGULATOR_ERROR_ON to allow IRQ fire again and to generate notifications "
"also for the new issues."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:496
msgid ""
"This structure is passed to 'map_event' and 'renable' callbacks for "
"reporting regulator status to core."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:508
msgid "notification sender for IRQ based events."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:511
msgid "The visible name for the IRQ"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:511
msgid "``fatal_cnt``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:512
msgid ""
"If this IRQ is used to signal HW damaging condition it may be best to shut-"
"down regulator(s) or reboot the SOC if error handling is repeatedly failing. "
"If fatal_cnt is given the IRQ handling is aborted if it fails for fatal_cnt "
"times and die() callback (if populated) is called. If die() is not populated "
"poweroff for the system is attempted in order to prevent any further damage."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:518
msgid "``reread_ms``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:519
msgid ""
"The time which is waited before attempting to re-read status at the worker "
"if IC reading fails. Immediate re-read is done if time is not specified."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:521
msgid "``irq_off_ms``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:522
msgid ""
"The time which IRQ is kept disabled before re-evaluating the status for "
"devices which keep IRQ disabled for duration of the error. If this is not "
"given the IRQ is left enabled and renable is not called."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:525
msgid "``skip_off``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:526
msgid ""
"If set to true the IRQ handler will attempt to check if any of the "
"associated regulators are enabled prior to taking other actions. If no "
"regulators are enabled and this is set to true a spurious IRQ is assumed and "
"IRQ_NONE is returned."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:529
msgid "``high_prio``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:530
msgid "Boolean to indicate that high priority WQ should be used."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:531
msgid ""
"Driver private data pointer which will be passed as such to the renable, "
"map_event and die callbacks in regulator_irq_data."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:532
msgid "``die``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:533
msgid ""
"Protection callback. If IC status reading or recovery actions fail fatal_cnt "
"times this callback is called or system is powered off. This callback should "
"implement a final protection attempt like disabling the regulator. If "
"protection succeeded die() may return 0. If anything else is returned the "
"core assumes final protection failed and attempts to perform a poweroff as a "
"last resort."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:539
msgid "``map_event``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:540
msgid ""
"Driver callback to map IRQ status into regulator devices with events / "
"errors. NOTE: callback MUST initialize both the errors and notifs for all "
"rdevs which it signals having active events as core does not clean the map "
"data. REGULATOR_FAILED_RETRY can be returned to indicate that the status "
"reading from IC failed. If this is repeated for fatal_cnt times the core "
"will call die() callback or power-off the system as a last resort to protect "
"the HW."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:547
msgid "``renable``"
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:548
msgid ""
"Optional callback to check status (if HW supports that) before re-enabling "
"IRQ. If implemented this should clear the error flags so that errors fetched "
"by regulator_get_error_flags() are updated. If callback is not implemented "
"then errors are assumed to be cleared and IRQ is re-enabled. "
"REGULATOR_FAILED_RETRY can be returned to indicate that the status reading "
"from IC failed. If this is repeated for 'fatal_cnt' times the core will call "
"die() callback or if die() is not populated then attempt to power-off the "
"system as a last resort to protect the HW. Returning zero indicates that the "
"problem in HW has been solved and IRQ will be re-enabled. Returning "
"REGULATOR_ERROR_ON indicates the error condition is still active and keeps "
"IRQ disabled. Please note that returning REGULATOR_ERROR_ON does not "
"retrigger evaluating what events are active or resending notifications. If "
"this is needed you probably want to return zero and allow IRQ to retrigger "
"causing events to be re-evaluated and re-sent."
msgstr ""

#: ../../../driver-api/regulator:166: include/linux/regulator/driver.h:565
msgid ""
"This structure is used for registering regulator IRQ notification helper."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:2342
msgid "lookup and obtain a reference to a regulator."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:2346
#: drivers/regulator/core.c:2365 drivers/regulator/core.c:2393
#: drivers/regulator/core.c:2465 drivers/regulator/core.c:2481
#: drivers/regulator/core.c:2523 drivers/regulator/core.c:2543
#: drivers/regulator/core.c:2590 drivers/regulator/core.c:2958
#: drivers/regulator/core.c:3069 drivers/regulator/core.c:3123
#: drivers/regulator/core.c:3204 drivers/regulator/core.c:3284
#: drivers/regulator/core.c:3311 drivers/regulator/core.c:3334
#: drivers/regulator/core.c:3350 drivers/regulator/core.c:3365
#: drivers/regulator/core.c:3399 drivers/regulator/core.c:3429
#: drivers/regulator/core.c:3457 drivers/regulator/core.c:3472
#: drivers/regulator/core.c:4257 drivers/regulator/core.c:4377
#: drivers/regulator/core.c:4434 drivers/regulator/core.c:4492
#: drivers/regulator/core.c:4595 drivers/regulator/core.c:4617
#: drivers/regulator/core.c:4681 drivers/regulator/core.c:4697
#: drivers/regulator/core.c:4710 drivers/regulator/core.c:4749
#: drivers/regulator/core.c:4778 drivers/regulator/core.c:4846
#: drivers/regulator/core.c:4894 drivers/regulator/core.c:4910
#: drivers/regulator/core.c:4964 drivers/regulator/core.c:5028
#: drivers/regulator/core.c:5045 drivers/regulator/core.c:5127
#: drivers/regulator/core.c:5155 drivers/regulator/core.c:5205
#: drivers/regulator/core.c:5245 drivers/regulator/core.c:5279
#: drivers/regulator/core.c:5335 drivers/regulator/core.c:5357
#: drivers/regulator/core.c:5759 drivers/regulator/core.c:6027
#: drivers/regulator/core.c:6133 drivers/regulator/core.c:6150
#: drivers/regulator/core.c:6165 drivers/regulator/core.c:6180
#: drivers/regulator/core.c:6191
msgid "**Parameters**"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:2348
#: drivers/regulator/core.c:2367 drivers/regulator/core.c:2395
#: drivers/regulator/core.c:2483 drivers/regulator/core.c:2525
#: drivers/regulator/core.c:2545 drivers/regulator/core.c:2592
#: drivers/regulator/core.c:5129 drivers/regulator/core.c:5761
msgid "``struct device *dev``"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:2343
#: drivers/regulator/core.c:2362 drivers/regulator/core.c:2390
msgid "device for regulator \"consumer\""
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:2345
#: drivers/regulator/core.c:2364 drivers/regulator/core.c:2392
#: drivers/regulator/core.c:2481 drivers/regulator/core.c:2523
msgid "``const char *id``"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:2344
#: drivers/regulator/core.c:2363 drivers/regulator/core.c:2391
msgid "Supply name or regulator ID."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:2345
#: drivers/regulator/core.c:2373 drivers/regulator/core.c:2399
msgid ""
"Use of supply names configured via set_consumer_device_supply() is strongly "
"encouraged.  It is recommended that the supply name used should match the "
"name used for the supply and/or the relevant device pins in the datasheet."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:2350
#: drivers/regulator/core.c:2378 drivers/regulator/core.c:2404
#: drivers/regulator/core.c:2487 drivers/regulator/core.c:2552
#: drivers/regulator/core.c:2964 drivers/regulator/core.c:3076
#: drivers/regulator/core.c:3127 drivers/regulator/core.c:3211
#: drivers/regulator/core.c:3286 drivers/regulator/core.c:3310
#: drivers/regulator/core.c:3335 drivers/regulator/core.c:3349
#: drivers/regulator/core.c:3374 drivers/regulator/core.c:3402
#: drivers/regulator/core.c:3431 drivers/regulator/core.c:3456
#: drivers/regulator/core.c:3474 drivers/regulator/core.c:4270
#: drivers/regulator/core.c:4381 drivers/regulator/core.c:4440
#: drivers/regulator/core.c:4494 drivers/regulator/core.c:4594
#: drivers/regulator/core.c:4628 drivers/regulator/core.c:4680
#: drivers/regulator/core.c:4696 drivers/regulator/core.c:4710
#: drivers/regulator/core.c:4749 drivers/regulator/core.c:4784
#: drivers/regulator/core.c:4846 drivers/regulator/core.c:4895
#: drivers/regulator/core.c:4937 drivers/regulator/core.c:4969
#: drivers/regulator/core.c:5029 drivers/regulator/core.c:5046
#: drivers/regulator/core.c:5133 drivers/regulator/core.c:5160
#: drivers/regulator/core.c:5210 drivers/regulator/core.c:5253
#: drivers/regulator/core.c:5338 drivers/regulator/core.c:5358
#: drivers/regulator/core.c:5761 drivers/regulator/core.c:6151
#: drivers/regulator/core.c:6166 drivers/regulator/core.c:6190
msgid "**Return**"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:2351
#: drivers/regulator/core.c:2379 drivers/regulator/core.c:2405
msgid ""
"Pointer to a :c:type:`struct regulator <regulator>` corresponding to the "
"regulator producer, or an ERR_PTR() encoded negative error number."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:2361
msgid "obtain exclusive access to a regulator."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:2364
msgid ""
"Other consumers will be unable to obtain this regulator while this reference "
"is held and the use count for the regulator will be initialised to reflect "
"the current state of the regulator."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:2368
msgid ""
"This is intended for use by consumers which cannot tolerate shared use of "
"the regulator such as those which need to force the regulator off for "
"correct operation of the hardware they are controlling."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:2389
msgid "obtain optional access to a regulator."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:2392
msgid ""
"This is intended for use by consumers for devices which can have some "
"supplies unconnected in normal use, such as some MMC devices. It can allow "
"the regulator core to provide stub supplies for other supplies requested "
"using normal regulator_get() calls without disrupting the operation of "
"drivers that can handle absent supplies."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:2461
msgid "\"free\" the regulator source"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:2467
#: drivers/regulator/core.c:2960 drivers/regulator/core.c:3071
#: drivers/regulator/core.c:3125 drivers/regulator/core.c:3206
#: drivers/regulator/core.c:3286 drivers/regulator/core.c:3313
#: drivers/regulator/core.c:3336 drivers/regulator/core.c:3352
#: drivers/regulator/core.c:3367 drivers/regulator/core.c:3401
#: drivers/regulator/core.c:3431 drivers/regulator/core.c:3459
#: drivers/regulator/core.c:3474 drivers/regulator/core.c:4259
#: drivers/regulator/core.c:4379 drivers/regulator/core.c:4494
#: drivers/regulator/core.c:4597 drivers/regulator/core.c:4619
#: drivers/regulator/core.c:4683 drivers/regulator/core.c:4699
#: drivers/regulator/core.c:4712 drivers/regulator/core.c:4751
#: drivers/regulator/core.c:4780 drivers/regulator/core.c:4848
#: drivers/regulator/core.c:4896 drivers/regulator/core.c:4912
#: drivers/regulator/core.c:4966 drivers/regulator/core.c:5030
#: drivers/regulator/core.c:5047 drivers/regulator/core.c:6167
#: drivers/regulator/core.c:6182
msgid "``struct regulator *regulator``"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:2462
#: drivers/regulator/core.c:2955 drivers/regulator/core.c:3066
#: drivers/regulator/core.c:3120 drivers/regulator/core.c:3201
#: drivers/regulator/core.c:3281 drivers/regulator/core.c:3308
#: drivers/regulator/core.c:3331 drivers/regulator/core.c:3347
#: drivers/regulator/core.c:3362 drivers/regulator/core.c:3396
#: drivers/regulator/core.c:3426 drivers/regulator/core.c:3454
#: drivers/regulator/core.c:4254 drivers/regulator/core.c:4374
#: drivers/regulator/core.c:4489 drivers/regulator/core.c:4592
#: drivers/regulator/core.c:4614 drivers/regulator/core.c:4678
#: drivers/regulator/core.c:4694 drivers/regulator/core.c:4707
#: drivers/regulator/core.c:4746 drivers/regulator/core.c:4775
#: drivers/regulator/core.c:4843 drivers/regulator/core.c:4891
#: drivers/regulator/core.c:4907 drivers/regulator/core.c:5025
#: drivers/regulator/core.c:5042 drivers/regulator/core.c:5332
msgid "regulator source"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:2464
msgid "**Note**"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:2464
msgid ""
"drivers must ensure that all regulator_enable calls made on this regulator "
"source are balanced by regulator_disable calls prior to calling this "
"function."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:2477
msgid "Provide device alias for supply lookup"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:2479
#: drivers/regulator/core.c:2521 drivers/regulator/core.c:2541
#: drivers/regulator/core.c:2588
msgid "device that will be given as the regulator \"consumer\""
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:2480
#: drivers/regulator/core.c:2522
msgid "Supply name or regulator ID"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:2482
#: drivers/regulator/core.c:2544
msgid "``struct device *alias_dev``"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:2481
#: drivers/regulator/core.c:2543
msgid "device that should be used to lookup the supply"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:2483
msgid "``const char *alias_id``"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:2482
msgid "Supply name or regulator ID that should be used to lookup the supply"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:2484
msgid ""
"All lookups for id on dev will instead be conducted for alias_id on "
"alias_dev."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:2488
#: drivers/regulator/core.c:2553 drivers/regulator/core.c:2964
#: drivers/regulator/core.c:3076 drivers/regulator/core.c:3127
#: drivers/regulator/core.c:3211 drivers/regulator/core.c:3432
#: drivers/regulator/core.c:4270 drivers/regulator/core.c:4495
#: drivers/regulator/core.c:4628 drivers/regulator/core.c:4710
#: drivers/regulator/core.c:4784 drivers/regulator/core.c:4896
#: drivers/regulator/core.c:4937 drivers/regulator/core.c:5030
#: drivers/regulator/core.c:5047 drivers/regulator/core.c:5134
#: drivers/regulator/core.c:5161 drivers/regulator/core.c:5211
#: drivers/regulator/core.c:5253
msgid "0 on success or a negative error number on failure."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:2519
msgid "Remove device alias"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:2523
msgid "Remove a lookup alias if one exists for id on dev."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:2539
msgid "register multiple aliases"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:2543
#: drivers/regulator/core.c:2590
msgid "``const char *const *id``"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:2542
#: drivers/regulator/core.c:2589
msgid "List of supply names or regulator IDs"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:2545
msgid "``const char *const *alias_id``"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:2544
msgid ""
"List of supply names or regulator IDs that should be used to lookup the "
"supply"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:2547
#: drivers/regulator/core.c:2591
msgid "``int num_id``"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:2546
msgid "Number of aliases to register"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:2547
msgid ""
"This helper function allows drivers to register several supply aliases in "
"one operation.  If any of the aliases cannot be registered any aliases that "
"were registered will be removed before returning to the caller."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:2586
msgid "unregister multiple aliases"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:2590
msgid "Number of aliases to unregister"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:2591
msgid ""
"This helper function allows drivers to unregister several supply aliases in "
"one operation."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:2954
msgid "enable regulator output"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:2956
msgid ""
"Request that the regulator be enabled with the regulator output at the "
"predefined voltage or current value.  Calls to regulator_enable() must be "
"balanced with calls to regulator_disable()."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:2960
#: drivers/regulator/core.c:3071 drivers/regulator/core.c:3123
#: drivers/regulator/core.c:3206 drivers/regulator/core.c:4264
#: drivers/regulator/core.c:4596 drivers/regulator/core.c:4624
#: drivers/regulator/core.c:4683 drivers/regulator/core.c:4780
#: drivers/regulator/core.c:4928 drivers/regulator/core.c:5248
msgid "**NOTE**"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:2961
msgid ""
"the output value can be set by other drivers, boot loader or may be "
"hardwired in the regulator."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:3065
msgid "disable regulator output"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:3067
msgid ""
"Disable the regulator output voltage or current.  Calls to "
"regulator_enable() must be balanced with calls to regulator_disable()."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:3072
#: drivers/regulator/core.c:3207
msgid ""
"this will only disable the regulator output if no other consumer devices "
"have it enabled, the regulator device supports disabling and machine "
"constraints permit this operation."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:3119
msgid "force disable regulator output"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:3121
msgid "Forcibly disable the regulator output voltage or current."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:3123
msgid ""
"this *will* disable the regulator output even if other consumer devices have "
"it enabled. This should be used for situations when device damage will "
"likely occur if the regulator is not disabled (e.g. over temp)."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:3200
msgid "disable regulator output with delay"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:3203
msgid "``int ms``"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:3202
msgid "milliseconds until the regulator is disabled"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:3203
msgid ""
"Execute regulator_disable() on the regulator after a delay.  This is "
"intended for use with devices that require some time to quiesce."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:3280
msgid "is the regulator output enabled"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:3282
msgid ""
"Note that the device backing this regulator handle can have multiple users, "
"so it might be enabled even if regulator_enable() was never called for this "
"particular source."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:3287
msgid ""
"Positive if the regulator driver backing the source/client has requested "
"that the device be enabled, zero if it hasn't, else a negative error number."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:3307
msgid "count regulator_list_voltage() selectors"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:3310
msgid "Number of selectors for **regulator**, or negative error number."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:3311
msgid ""
"Selectors are numbered starting at zero, and typically correspond to "
"bitfields in hardware registers."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:3330
msgid "enumerate supported voltages"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:3333
#: drivers/regulator/core.c:3398
msgid "``unsigned selector``"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:3332
#: drivers/regulator/core.c:3397
msgid "identify voltage to list"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:3334
msgid "**Context**"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:3333
msgid "can sleep"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:3335
msgid ""
"Voltage for **selector** that can be passed to regulator_set_voltage(), 0 if "
"**selector** can't be used on this system, or a negative error number on "
"failure."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:3346
msgid "get the regulator's register map"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:3349
msgid ""
"Pointer to the :c:type:`struct regmap <regmap>` for **regulator**, or "
"ERR_PTR() encoded -``EOPNOTSUPP`` if **regulator** doesn't use regmap."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:3361
msgid "get the HW voltage selector register"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:3364
msgid "``unsigned *vsel_reg``"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:3363
msgid "voltage selector register, output parameter"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:3365
msgid "``unsigned *vsel_mask``"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:3364
msgid "mask for voltage selector bitfield, output parameter"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:3365
msgid ""
"Returns the hardware register offset and bitmask used for setting the "
"regulator voltage. This might be useful when configuring voltage-scaling "
"hardware or firmware that can make I2C requests behind the kernel's back, "
"for example."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:3371
msgid ""
"On success, the output parameters **vsel_reg** and **vsel_mask** are filled "
"in and 0 is returned, otherwise a negative error number is returned."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:3371
msgid ""
"0 on success, or -``EOPNOTSUPP`` if the regulator does not support voltage "
"selectors."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:3395
msgid "get the HW-specific register value for a selector"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:3398
msgid ""
"Converts the selector to a hardware-specific voltage selector that can be "
"directly written to the regulator registers. The address of the voltage "
"register can be determined by calling "
"**regulator_get_hardware_vsel_register**."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:3403
msgid ""
"0 on success, -``EINVAL`` if the selector is outside the supported range, or "
"-``EOPNOTSUPP`` if the regulator does not support voltage selectors."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:3425
msgid "access the HW for enable/disable regulator"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:3428
#: drivers/regulator/core.c:4964
msgid "``bool enable``"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:3427
msgid "true for enable, false for disable"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:3428
msgid ""
"Request that the regulator be enabled/disabled with the regulator output at "
"the predefined voltage or current value."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:3453
msgid "return the voltage step size between VSEL values"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:3456
msgid ""
"The voltage step size between VSEL values for linear regulators, or 0 if the "
"regulator isn't a linear regulator."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:3468
msgid "check if a voltage range can be supported"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:3470
msgid "Regulator to check."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:3472
#: drivers/regulator/core.c:4256
msgid "``int min_uV``"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:3471
msgid "Minimum required voltage in uV."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:3473
#: drivers/regulator/core.c:4257
msgid "``int max_uV``"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:3472
msgid "Maximum required voltage in uV."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:3474
msgid ""
"1 if the voltage range is supported, 0 if not, or a negative error number if "
"**regulator**'s voltage can't be changed and voltage readback failed."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4253
msgid "set regulator output voltage"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4255
msgid "Minimum required voltage in uV"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4256
msgid "Maximum acceptable voltage in uV"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4257
msgid ""
"Sets a voltage regulator to the desired output voltage. This can be set "
"during any regulator state. IOW, regulator can be disabled or enabled."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4260
msgid ""
"If the regulator is enabled then the voltage will change to the new value "
"immediately otherwise if the regulator is disabled the regulator will output "
"at the new voltage when enabled."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4265
msgid ""
"If the regulator is shared between several devices then the lowest request "
"voltage that meets the system constraints will be used. Regulator system "
"constraints must be set for this regulator before calling this function "
"otherwise this call will fail."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4373
#: drivers/regulator/core.c:4430
msgid "get raise/fall time"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4376
msgid "``int old_uV``"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4375
msgid "starting voltage in microvolts"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4377
msgid "``int new_uV``"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4376
msgid "target voltage in microvolts"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4377
msgid ""
"Provided with the starting and ending voltage, this function attempts to "
"calculate the time in microseconds required to rise or fall to this new "
"voltage."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4382
#: drivers/regulator/core.c:4441
msgid ""
"ramp time in microseconds, or a negative error number if calculation failed."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4436
#: drivers/regulator/core.c:5337 drivers/regulator/core.c:6029
#: drivers/regulator/core.c:6152 drivers/regulator/core.c:6193
msgid "``struct regulator_dev *rdev``"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4431
msgid "regulator source device"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4433
msgid "``unsigned int old_selector``"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4432
msgid "selector for starting voltage"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4434
msgid "``unsigned int new_selector``"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4433
msgid "selector for target voltage"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4434
msgid ""
"Provided with the starting and target voltage selectors, this function "
"returns time in microseconds required to rise or fall to this new voltage"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4437
msgid ""
"Drivers providing ramp_delay in regulation_constraints can use this as their "
"set_voltage_time_sel() operation."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4488
msgid "re-apply last regulator output voltage"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4490
msgid ""
"Re-apply the last configured voltage.  This is intended to be used where "
"some external control source the consumer is cooperating with has caused the "
"configured voltage to change."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4591
msgid "get regulator output voltage"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4594
msgid "Current regulator voltage in uV, or a negative error number on failure."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4596
msgid ""
"If the regulator is disabled it will return the voltage value. This function "
"should not be used to determine regulator state."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4613
msgid "set regulator output current limit"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4616
msgid "``int min_uA``"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4615
msgid "Minimum supported current in uA"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4617
msgid "``int max_uA``"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4616
msgid "Maximum supported current in uA"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4617
msgid ""
"Sets current sink to the desired output current. This can be set during any "
"regulator state. IOW, regulator can be disabled or enabled."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4620
msgid ""
"If the regulator is enabled then the current will change to the new value "
"immediately otherwise if the regulator is disabled the regulator will output "
"at the new current when enabled."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4625
#: drivers/regulator/core.c:4781
msgid ""
"Regulator system constraints must be set for this regulator before calling "
"this function otherwise this call will fail."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4677
msgid "get regulator output current"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4680
msgid ""
"Current supplied by the specified current sink in uA, or a negative error "
"number on failure."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4683
msgid ""
"If the regulator is disabled it will return the current value. This function "
"should not be used to determine regulator state."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4693
msgid "get regulator unclaimed power budget"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4696
msgid "Unclaimed power budget of the regulator in mW."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4706
msgid "request power budget on a regulator"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4709
msgid "``unsigned int pw_req``"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4708
msgid "Power requested"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4745
msgid "free power budget on a regulator"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4748
msgid "``unsigned int pw``"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4747
msgid "Power to be released."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4749
msgid "Power budget of the regulator in mW."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4774
msgid "set regulator operating mode"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4777
#: drivers/regulator/core.c:5359
msgid "``unsigned int mode``"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4776
msgid "operating mode - one of the REGULATOR_MODE constants"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4777
msgid ""
"Set regulator operating mode to increase regulator efficiency or improve "
"regulation performance."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4842
msgid "get regulator operating mode"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4844
msgid "Get the current regulator operating mode."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4847
msgid ""
"Current operating mode as ``REGULATOR_MODE_*`` values, or a negative error "
"number on failure."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4890
msgid "get regulator error information"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4893
msgid "``unsigned int *flags``"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4892
msgid "pointer to store error flags"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4893
msgid "Get the current regulator error information."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4906
msgid "set regulator load"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4909
msgid "``int uA_load``"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4908
msgid "load current"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4909
msgid ""
"Notifies the regulator core of a new device load. This is then used by DRMS "
"(if enabled by constraints) to set the most efficient regulator operating "
"mode for the new regulator loading."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4913
msgid ""
"Consumer devices notify their supply regulator of the maximum power they "
"will require (can be taken from device datasheet in the power consumption "
"tables) when they change operational status and hence power state. Examples "
"of operational state changes that can affect power consumption are :-"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4919
msgid ""
"o Device is opened / closed. o Device I/O is about to begin or has just "
"finished. o Device is idling in between work."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4923
msgid "This information is also exported via sysfs to userspace."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4925
msgid ""
"DRMS will sum the total requested load on the regulator and change to the "
"most efficient operating mode if platform constraints allow."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4929
msgid ""
"when a regulator consumer requests to have a regulator disabled then any "
"load that consumer requested no longer counts toward the total requested "
"load.  If the regulator is re-enabled then the previously requested load "
"will start counting again."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4934
msgid ""
"If a regulator is an always-on regulator then an individual consumer's load "
"will still be removed if that consumer is fully disabled."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4960
msgid "allow the regulator to go into bypass mode"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4962
msgid "Regulator to configure"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4963
msgid "enable or disable bypass mode"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4964
msgid ""
"Allow the regulator to go into bypass mode if all other consumers for the "
"regulator also enable bypass mode and the machine constraints allow this.  "
"Bypass mode means that the regulator is simply passing the input directly to "
"the output with no regulation."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:4970
msgid ""
"0 on success or if changing bypass is not possible, or a negative error "
"number on failure."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:5024
msgid "register regulator event notifier"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:5027
#: drivers/regulator/core.c:5044
msgid "``struct notifier_block *nb``"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:5026
#: drivers/regulator/core.c:5043 drivers/regulator/core.c:5333
msgid "notifier block"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:5027
msgid "Register notifier block to receive regulator events."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:5041
msgid "unregister regulator event notifier"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:5044
msgid "Unregister regulator event notifier block."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:5123
msgid "get multiple regulator consumers"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:5125
msgid "Device to supply"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:5127
#: drivers/regulator/core.c:5157 drivers/regulator/core.c:5207
#: drivers/regulator/core.c:5247 drivers/regulator/core.c:5281
msgid "``int num_consumers``"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:5126
msgid "Number of consumers to register"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:5128
#: drivers/regulator/core.c:5155 drivers/regulator/core.c:5205
#: drivers/regulator/core.c:5245 drivers/regulator/core.c:5279
msgid "``struct regulator_bulk_data *consumers``"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:5127
msgid "Configuration of consumers; clients are stored here."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:5128
msgid ""
"This helper function allows drivers to get several regulator consumers in "
"one operation.  If any of the regulators cannot be acquired then any "
"regulators that were allocated will be freed before returning to the caller."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:5151
msgid "enable multiple regulator consumers"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:5153
#: drivers/regulator/core.c:5203 drivers/regulator/core.c:5243
#: drivers/regulator/core.c:5277
msgid "Number of consumers"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:5154
#: drivers/regulator/core.c:5204 drivers/regulator/core.c:5244
#: drivers/regulator/core.c:5278
msgid "Consumer data; clients are stored here."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:5155
msgid ""
"This convenience API allows consumers to enable multiple regulator clients "
"in a single API call.  If any consumers cannot be enabled then any others "
"that were enabled will be disabled again prior to return."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:5201
msgid "disable multiple regulator consumers"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:5205
msgid ""
"This convenience API allows consumers to disable multiple regulator clients "
"in a single API call.  If any consumers cannot be disabled then any others "
"that were disabled will be enabled again prior to return."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:5241
msgid "force disable multiple regulator consumers"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:5245
msgid ""
"This convenience API allows consumers to forcibly disable multiple regulator "
"clients in a single API call."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:5248
msgid ""
"This should be used for situations when device damage will likely occur if "
"the regulators are not disabled (e.g. over temp). Although "
"regulator_force_disable function call for some consumers can return error "
"numbers, the function is called for all consumers."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:5275
msgid "free multiple regulator consumers"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:5279
msgid ""
"This convenience API allows consumers to free multiple regulator clients in "
"a single API call."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:5331
msgid "call regulator event notifier"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:5334
msgid "``unsigned long event``"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:5335
#: drivers/regulator/core.c:6179
msgid "``void *data``"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:5334
msgid "callback-specific data."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:5335
msgid ""
"Called by regulator drivers to notify clients a regulator event has occurred."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:5339
msgid "``NOTIFY_DONE``."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:5353
msgid "convert a regulator mode into a status"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:5355
msgid "Mode to convert"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:5356
msgid "Convert a regulator mode into a status."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:5359
msgid "``REGULATOR_STATUS_*`` value corresponding to given mode."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:5755
msgid "register regulator"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:5756
msgid "the device that drive the regulator"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:5758
msgid "``const struct regulator_desc *regulator_desc``"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:5757
msgid "regulator to register"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:5759
msgid "``const struct regulator_config *cfg``"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:5758
msgid "runtime configuration for regulator"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:5759
msgid "Called by regulator drivers to register a regulator."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:5762
msgid ""
"Pointer to a valid :c:type:`struct regulator_dev <regulator_dev>` on success "
"or an ERR_PTR() encoded negative error number on failure."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:6023
msgid "unregister regulator"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:6024
msgid "regulator to unregister"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:6025
msgid "Called by regulator drivers to unregister a regulator."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:6129
msgid "the system has fully specified constraints"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:6135
msgid "``void``"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:1
msgid "no arguments"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:6130
msgid ""
"Calling this function will cause the regulator API to disable all regulators "
"which have a zero use count and don't have an always_on constraint in a "
"late_initcall."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:6134
msgid ""
"The intention is that this will become the default behaviour in a future "
"kernel release so users are encouraged to use this facility now."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:6146
msgid "get rdev regulator driver data"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:6147
#: drivers/regulator/core.c:6162 drivers/regulator/core.c:6177
#: drivers/regulator/core.c:6188
msgid "regulator"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:6148
msgid ""
"Get rdev regulator driver private data. This call can be used in the "
"regulator driver context."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:6152
#: drivers/regulator/core.c:6167
msgid "Pointer to regulator driver private data."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:6161
msgid "get regulator driver data"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:6163
msgid ""
"Get regulator driver private data. This call can be used in the consumer "
"driver context when non API regulator specific functions need to be called."
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:6176
msgid "set regulator driver data"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:6178
msgid "data"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:6187
msgid "get regulator ID"
msgstr ""

#: ../../../driver-api/regulator:169: drivers/regulator/core.c:6190
msgid "Regulator ID for **rdev**."
msgstr ""
