# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../userspace-api/media/dvb/dvbproperty.rst:7
msgid "Property types"
msgstr ""

#: ../../../userspace-api/media/dvb/dvbproperty.rst:9
msgid ""
"Tuning into a Digital TV physical channel and starting decoding it requires "
"changing a set of parameters, in order to control the tuner, the "
"demodulator, the Linear Low-noise Amplifier (LNA) and to set the antenna "
"subsystem via Satellite Equipment Control - SEC (on satellite systems). The "
"actual parameters are specific to each particular digital TV standards, and "
"may change as the digital TV specs evolves."
msgstr ""

#: ../../../userspace-api/media/dvb/dvbproperty.rst:16
msgid ""
"In the past (up to DVB API version 3 - DVBv3), the strategy used was to have "
"a union with the parameters needed to tune for DVB-S, DVB-C, DVB-T and ATSC "
"delivery systems grouped there. The problem is that, as the second "
"generation standards appeared, the size of such union was not big enough to "
"group the structs that would be required for those new standards. Also, "
"extending it would break userspace."
msgstr ""

#: ../../../userspace-api/media/dvb/dvbproperty.rst:23
msgid ""
"So, the legacy union/struct based approach was deprecated, in favor of a "
"properties set approach. On such approach, :ref:`FE_GET_PROPERTY and "
"FE_SET_PROPERTY <FE_GET_PROPERTY>` are used to setup the frontend and read "
"its status."
msgstr ""

#: ../../../userspace-api/media/dvb/dvbproperty.rst:28
msgid ""
"The actual action is determined by a set of dtv_property cmd/data pairs. "
"With one single ioctl, is possible to get/set up to 64 properties."
msgstr ""

#: ../../../userspace-api/media/dvb/dvbproperty.rst:31
msgid ""
"This section describes the new and recommended way to set the frontend, with "
"supports all digital TV delivery systems."
msgstr ""

#: ../../../userspace-api/media/dvb/dvbproperty.rst:36
msgid ""
"On Linux DVB API version 3, setting a frontend was done via struct :c:type:"
"`dvb_frontend_parameters`."
msgstr ""

#: ../../../userspace-api/media/dvb/dvbproperty.rst:39
msgid ""
"Don't use DVB API version 3 calls on hardware with supports newer standards. "
"Such API provides no support or a very limited support to new standards and/"
"or new hardware."
msgstr ""

#: ../../../userspace-api/media/dvb/dvbproperty.rst:43
msgid ""
"Nowadays, most frontends support multiple delivery systems. Only with DVB "
"API version 5 calls it is possible to switch between the multiple delivery "
"systems supported by a frontend."
msgstr ""

#: ../../../userspace-api/media/dvb/dvbproperty.rst:47
msgid ""
"DVB API version 5 is also called *S2API*, as the first new standard added to "
"it was DVB-S2."
msgstr ""

#: ../../../userspace-api/media/dvb/dvbproperty.rst:50
msgid ""
"**Example**: in order to set the hardware to tune into a DVB-C channel at "
"651 kHz, modulated with 256-QAM, FEC 3/4 and symbol rate of 5.217 Mbauds, "
"those properties should be sent to :ref:`FE_SET_PROPERTY <FE_GET_PROPERTY>` "
"ioctl:"
msgstr ""

#: ../../../userspace-api/media/dvb/dvbproperty.rst:55
msgid ":ref:`DTV_DELIVERY_SYSTEM <DTV-DELIVERY-SYSTEM>` = SYS_DVBC_ANNEX_A"
msgstr ""

#: ../../../userspace-api/media/dvb/dvbproperty.rst:57
msgid ":ref:`DTV_FREQUENCY <DTV-FREQUENCY>` = 651000000"
msgstr ""

#: ../../../userspace-api/media/dvb/dvbproperty.rst:59
msgid ":ref:`DTV_MODULATION <DTV-MODULATION>` = QAM_256"
msgstr ""

#: ../../../userspace-api/media/dvb/dvbproperty.rst:61
msgid ":ref:`DTV_INVERSION <DTV-INVERSION>` = INVERSION_AUTO"
msgstr ""

#: ../../../userspace-api/media/dvb/dvbproperty.rst:63
msgid ":ref:`DTV_SYMBOL_RATE <DTV-SYMBOL-RATE>` = 5217000"
msgstr ""

#: ../../../userspace-api/media/dvb/dvbproperty.rst:65
msgid ":ref:`DTV_INNER_FEC <DTV-INNER-FEC>` = FEC_3_4"
msgstr ""

#: ../../../userspace-api/media/dvb/dvbproperty.rst:67
msgid ":ref:`DTV_TUNE <DTV-TUNE>`"
msgstr ""

#: ../../../userspace-api/media/dvb/dvbproperty.rst:69
msgid ""
"The code that would that would do the above is show in :ref:`dtv-prop-"
"example`."
msgstr ""

#: ../../../userspace-api/media/dvb/dvbproperty.rst:72
msgid "Example: Setting digital TV frontend properties"
msgstr ""

#: ../../../userspace-api/media/dvb/dvbproperty.rst:111
msgid ""
"While it is possible to directly call the Kernel code like the above "
"example, it is strongly recommended to use `libdvbv5 <https://linuxtv.org/"
"docs/libdvbv5/index.html>`__, as it provides abstraction to work with the "
"supported digital TV standards and provides methods for usual operations "
"like program scanning and to read/write channel descriptor files."
msgstr ""
