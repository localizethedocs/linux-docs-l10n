# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-30 08:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../userspace-api/media/rc/lirc-set-transmitter-mask.rst:8
msgid "ioctl LIRC_SET_TRANSMITTER_MASK"
msgstr ""

#: ../../../userspace-api/media/rc/lirc-set-transmitter-mask.rst:11
msgid "Name"
msgstr ""

#: ../../../userspace-api/media/rc/lirc-set-transmitter-mask.rst:13
msgid ""
"LIRC_SET_TRANSMITTER_MASK - Enables send codes on a given set of transmitters"
msgstr ""

#: ../../../userspace-api/media/rc/lirc-set-transmitter-mask.rst:16
msgid "Synopsis"
msgstr ""

#: ../../../userspace-api/media/rc/lirc-set-transmitter-mask.rst:20
msgid "``int ioctl(int fd, LIRC_SET_TRANSMITTER_MASK, __u32 *mask)``"
msgstr ""

#: ../../../userspace-api/media/rc/lirc-set-transmitter-mask.rst:23
msgid "Arguments"
msgstr ""

#: ../../../userspace-api/media/rc/lirc-set-transmitter-mask.rst:25
msgid "``fd``"
msgstr "``fd``"

#: ../../../userspace-api/media/rc/lirc-set-transmitter-mask.rst:26
msgid "File descriptor returned by open()."
msgstr ""

#: ../../../userspace-api/media/rc/lirc-set-transmitter-mask.rst:28
msgid "``mask``"
msgstr ""

#: ../../../userspace-api/media/rc/lirc-set-transmitter-mask.rst:29
msgid ""
"Mask with channels to enable tx. Channel 0 is the least significant bit."
msgstr ""

#: ../../../userspace-api/media/rc/lirc-set-transmitter-mask.rst:32
msgid "Description"
msgstr "描述"

#: ../../../userspace-api/media/rc/lirc-set-transmitter-mask.rst:34
msgid ""
"Some IR TX devices have multiple output channels, in such case, :ref:"
"`LIRC_CAN_SET_TRANSMITTER_MASK <LIRC-CAN-SET-TRANSMITTER-MASK>` is returned "
"via :ref:`LIRC_GET_FEATURES` and this ioctl sets what channels will send IR "
"codes."
msgstr ""

#: ../../../userspace-api/media/rc/lirc-set-transmitter-mask.rst:39
msgid ""
"This ioctl enables the given set of transmitters. The first transmitter is "
"encoded by the least significant bit and so on."
msgstr ""

#: ../../../userspace-api/media/rc/lirc-set-transmitter-mask.rst:42
msgid ""
"When an invalid bit mask is given, i.e. a bit is set, even though the device "
"does not have so many transitters, then this ioctl returns the number of "
"available transitters and does nothing otherwise."
msgstr ""

#: ../../../userspace-api/media/rc/lirc-set-transmitter-mask.rst:47
msgid "Return Value"
msgstr ""

#: ../../../userspace-api/media/rc/lirc-set-transmitter-mask.rst:49
msgid ""
"On success 0 is returned, on error -1 and the ``errno`` variable is set "
"appropriately. The generic error codes are described at the :ref:`Generic "
"Error Codes <gen-errors>` chapter."
msgstr ""
