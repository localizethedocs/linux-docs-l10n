# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-30 08:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../userspace-api/media/rc/lirc-get-timeout.rst:9
msgid "ioctls LIRC_GET_MIN_TIMEOUT and LIRC_GET_MAX_TIMEOUT"
msgstr ""

#: ../../../userspace-api/media/rc/lirc-get-timeout.rst:12
msgid "Name"
msgstr ""

#: ../../../userspace-api/media/rc/lirc-get-timeout.rst:14
msgid ""
"LIRC_GET_MIN_TIMEOUT / LIRC_GET_MAX_TIMEOUT - Obtain the possible timeout "
"range for IR receive."
msgstr ""

#: ../../../userspace-api/media/rc/lirc-get-timeout.rst:18
msgid "Synopsis"
msgstr ""

#: ../../../userspace-api/media/rc/lirc-get-timeout.rst:22
msgid "``int ioctl(int fd, LIRC_GET_MIN_TIMEOUT, __u32 *timeout)``"
msgstr ""

#: ../../../userspace-api/media/rc/lirc-get-timeout.rst:26
msgid "``int ioctl(int fd, LIRC_GET_MAX_TIMEOUT, __u32 *timeout)``"
msgstr ""

#: ../../../userspace-api/media/rc/lirc-get-timeout.rst:29
msgid "Arguments"
msgstr ""

#: ../../../userspace-api/media/rc/lirc-get-timeout.rst:31
msgid "``fd``"
msgstr "``fd``"

#: ../../../userspace-api/media/rc/lirc-get-timeout.rst:32
msgid "File descriptor returned by open()."
msgstr ""

#: ../../../userspace-api/media/rc/lirc-get-timeout.rst:34
msgid "``timeout``"
msgstr ""

#: ../../../userspace-api/media/rc/lirc-get-timeout.rst:35
msgid "Timeout, in microseconds."
msgstr ""

#: ../../../userspace-api/media/rc/lirc-get-timeout.rst:38
msgid "Description"
msgstr "描述"

#: ../../../userspace-api/media/rc/lirc-get-timeout.rst:40
msgid ""
"Some devices have internal timers that can be used to detect when there's no "
"IR activity for a long time. This can help lircd in detecting that a IR "
"signal is finished and can speed up the decoding process. Returns an integer "
"value with the minimum/maximum timeout that can be set."
msgstr ""

#: ../../../userspace-api/media/rc/lirc-get-timeout.rst:48
msgid ""
"Some devices have a fixed timeout, in that case both ioctls will return the "
"same value even though the timeout cannot be changed via :ref:"
"`LIRC_SET_REC_TIMEOUT`."
msgstr ""

#: ../../../userspace-api/media/rc/lirc-get-timeout.rst:53
msgid "Return Value"
msgstr ""

#: ../../../userspace-api/media/rc/lirc-get-timeout.rst:55
msgid ""
"On success 0 is returned, on error -1 and the ``errno`` variable is set "
"appropriately. The generic error codes are described at the :ref:`Generic "
"Error Codes <gen-errors>` chapter."
msgstr ""
