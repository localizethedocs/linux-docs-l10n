# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../userspace-api/media/mediactl/media-types.rst:6
msgid "Types and flags used to represent the media graph elements"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:50
msgid "Media entity functions"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:54
msgid "``MEDIA_ENT_F_UNKNOWN`` and ``MEDIA_ENT_F_V4L2_SUBDEV_UNKNOWN``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:56
msgid ""
"Unknown entity. That generally indicates that a driver didn't initialize "
"properly the entity, which is a Kernel bug"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:59
msgid "``MEDIA_ENT_F_IO_V4L``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:60
msgid "Data streaming input and/or output entity."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:62
msgid "``MEDIA_ENT_F_IO_VBI``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:63
msgid "V4L VBI streaming input or output entity"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:65
msgid "``MEDIA_ENT_F_IO_SWRADIO``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:66
msgid "V4L Software Digital Radio (SDR) streaming input or output entity"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:68
msgid "``MEDIA_ENT_F_IO_DTV``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:69
msgid "DVB Digital TV streaming input or output entity"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:71
msgid "``MEDIA_ENT_F_DTV_DEMOD``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:72
msgid "Digital TV demodulator entity."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:74
msgid "``MEDIA_ENT_F_TS_DEMUX``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:75
msgid ""
"MPEG Transport stream demux entity. Could be implemented on hardware or in "
"Kernelspace by the Linux DVB subsystem."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:78
msgid "``MEDIA_ENT_F_DTV_CA``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:79
msgid "Digital TV Conditional Access module (CAM) entity"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:81
msgid "``MEDIA_ENT_F_DTV_NET_DECAP``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:82
msgid ""
"Digital TV network ULE/MLE desencapsulation entity. Could be implemented on "
"hardware or in Kernelspace"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:85
msgid "``MEDIA_ENT_F_CONN_RF``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:86
msgid "Connector for a Radio Frequency (RF) signal."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:88
msgid "``MEDIA_ENT_F_CONN_SVIDEO``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:89
msgid "Connector for a S-Video signal."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:91
msgid "``MEDIA_ENT_F_CONN_COMPOSITE``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:92
msgid "Connector for a RGB composite signal."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:94
msgid "``MEDIA_ENT_F_CAM_SENSOR``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:95
msgid "Camera video sensor entity."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:97
msgid "``MEDIA_ENT_F_FLASH``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:98
msgid "Flash controller entity."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:100
msgid "``MEDIA_ENT_F_LENS``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:101
msgid "Lens controller entity."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:103
msgid "``MEDIA_ENT_F_ATV_DECODER``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:104
msgid ""
"Analog video decoder, the basic function of the video decoder is to accept "
"analogue video from a wide variety of sources such as broadcast, DVD "
"players, cameras and video cassette recorders, in either NTSC, PAL, SECAM or "
"HD format, separating the stream into its component parts, luminance and "
"chrominance, and output it in some digital video standard, with appropriate "
"timing signals."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:111
msgid "``MEDIA_ENT_F_TUNER``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:112
msgid ""
"Digital TV, analog TV, radio and/or software radio tuner, with consists on a "
"PLL tuning stage that converts radio frequency (RF) signal into an "
"Intermediate Frequency (IF). Modern tuners have internally IF-PLL decoders "
"for audio and video, but older models have those stages implemented on "
"separate entities."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:118
msgid "``MEDIA_ENT_F_IF_VID_DECODER``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:119
msgid ""
"IF-PLL video decoder. It receives the IF from a PLL and decodes the analog "
"TV video signal. This is commonly found on some very old analog tuners, like "
"Philips MK3 designs. They all contain a tda9887 (or some software compatible "
"similar chip, like tda9885). Those devices use a different I2C address than "
"the tuner PLL."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:125
msgid "``MEDIA_ENT_F_IF_AUD_DECODER``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:126
msgid ""
"IF-PLL sound decoder. It receives the IF from a PLL and decodes the analog "
"TV audio signal. This is commonly found on some very old analog hardware, "
"like Micronas msp3400, Philips tda9840, tda985x, etc. Those devices use a "
"different I2C address than the tuner PLL and should be controlled together "
"with the IF-PLL video decoder."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:133
msgid "``MEDIA_ENT_F_AUDIO_CAPTURE``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:134
msgid "Audio Capture Function Entity."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:136
msgid "``MEDIA_ENT_F_AUDIO_PLAYBACK``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:137
msgid "Audio Playback Function Entity."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:139
msgid "``MEDIA_ENT_F_AUDIO_MIXER``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:140
msgid "Audio Mixer Function Entity."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:142
msgid "``MEDIA_ENT_F_PROC_VIDEO_COMPOSER``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:143
msgid ""
"Video composer (blender). An entity capable of video composing must have at "
"least two sink pads and one source pad, and composes input video frames onto "
"output video frames. Composition can be performed using alpha blending, "
"color keying, raster operations (ROP), stitching or any other means."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:150
msgid "``MEDIA_ENT_F_PROC_VIDEO_PIXEL_FORMATTER``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:151
msgid ""
"Video pixel formatter. An entity capable of pixel formatting must have at "
"least one sink pad and one source pad. Read pixel formatters read pixels "
"from memory and perform a subset of unpacking, cropping, color keying, alpha "
"multiplication and pixel encoding conversion. Write pixel formatters perform "
"a subset of dithering, pixel encoding conversion and packing and write "
"pixels to memory."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:159
msgid "``MEDIA_ENT_F_PROC_VIDEO_PIXEL_ENC_CONV``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:160
msgid ""
"Video pixel encoding converter. An entity capable of pixel encoding "
"conversion must have at least one sink pad and one source pad, and convert "
"the encoding of pixels received on its sink pad(s) to a different encoding "
"output on its source pad(s). Pixel encoding conversion includes but isn't "
"limited to RGB to/from HSV, RGB to/from YUV and CFA (Bayer) to RGB "
"conversions."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:168
msgid "``MEDIA_ENT_F_PROC_VIDEO_LUT``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:169
msgid ""
"Video look-up table. An entity capable of video lookup table processing must "
"have one sink pad and one source pad. It uses the values of the pixels "
"received on its sink pad to look up entries in internal tables and output "
"them on its source pad. The lookup processing can be performed on all "
"components separately or combine them for multi-dimensional table lookups."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:177
msgid "``MEDIA_ENT_F_PROC_VIDEO_SCALER``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:178
msgid ""
"Video scaler. An entity capable of video scaling must have at least one sink "
"pad and one source pad, and scale the video frame(s) received on its sink "
"pad(s) to a different resolution output on its source pad(s). The range of "
"supported scaling ratios is entity-specific and can differ between the "
"horizontal and vertical directions (in particular scaling can be supported "
"in one direction only). Binning and sub-sampling (occasionally also referred "
"to as skipping) are considered as scaling."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:188
msgid "``MEDIA_ENT_F_PROC_VIDEO_STATISTICS``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:189
msgid ""
"Video statistics computation (histogram, 3A, etc.). An entity capable of "
"statistics computation must have one sink pad and one source pad. It "
"computes statistics over the frames received on its sink pad and outputs the "
"statistics data on its source pad."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:195
msgid "``MEDIA_ENT_F_PROC_VIDEO_ENCODER``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:196
msgid ""
"Video (MPEG, HEVC, VPx, etc.) encoder. An entity capable of compressing "
"video frames. Must have one sink pad and at least one source pad."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:200
msgid "``MEDIA_ENT_F_PROC_VIDEO_DECODER``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:201
msgid ""
"Video (MPEG, HEVC, VPx, etc.) decoder. An entity capable of decompressing a "
"compressed video stream into uncompressed video frames. Must have one sink "
"pad and at least one source pad."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:205
msgid "``MEDIA_ENT_F_PROC_VIDEO_ISP``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:206
msgid ""
"An Image Signal Processor (ISP) device. ISPs generally are one of a kind "
"devices that have their specific control interfaces using a combination of "
"custom V4L2 controls and IOCTLs, and parameters supplied in a metadata "
"buffer."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:211
msgid "``MEDIA_ENT_F_VID_MUX``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:212
msgid ""
"Video multiplexer. An entity capable of multiplexing must have at least two "
"sink pads and one source pad, and must pass the video frame(s) received from "
"the active sink pad to the source pad."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:216
msgid "``MEDIA_ENT_F_VID_IF_BRIDGE``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:217
msgid ""
"Video interface bridge. A video interface bridge entity must have at least "
"one sink pad and at least one source pad. It receives video frames on its "
"sink pad from an input video bus of one type (HDMI, eDP, MIPI CSI-2, etc.), "
"and outputs them on its source pad to an output video bus of another type "
"(eDP, MIPI CSI-2, parallel, etc.)."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:223
msgid "``MEDIA_ENT_F_DV_DECODER``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:224
msgid ""
"Digital video decoder. The basic function of the video decoder is to accept "
"digital video from a wide variety of sources and output it in some digital "
"video standard, with appropriate timing signals."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:229
msgid "``MEDIA_ENT_F_DV_ENCODER``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:230
msgid ""
"Digital video encoder. The basic function of the video encoder is to accept "
"digital video from some digital video standard with appropriate timing "
"signals (usually a parallel video bus with sync signals) and output this to "
"a digital video output connector such as HDMI or DisplayPort."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:242
msgid "Media entity flags"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:246
msgid "``MEDIA_ENT_FL_DEFAULT``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:247
msgid ""
"Default entity for its type. Used to discover the default audio, VBI and "
"video devices, the default camera sensor, etc."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:250
msgid "``MEDIA_ENT_FL_CONNECTOR``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:251
msgid "The entity represents a connector."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:277
msgid "Media interface types"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:281
msgid "``MEDIA_INTF_T_DVB_FE``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:282
msgid "Device node interface for the Digital TV frontend"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:283
msgid "typically, /dev/dvb/adapter?/frontend?"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:285
msgid "``MEDIA_INTF_T_DVB_DEMUX``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:286
msgid "Device node interface for the Digital TV demux"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:287
msgid "typically, /dev/dvb/adapter?/demux?"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:289
msgid "``MEDIA_INTF_T_DVB_DVR``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:290
msgid "Device node interface for the Digital TV DVR"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:291
msgid "typically, /dev/dvb/adapter?/dvr?"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:293
msgid "``MEDIA_INTF_T_DVB_CA``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:294
msgid "Device node interface for the Digital TV Conditional Access"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:295
msgid "typically, /dev/dvb/adapter?/ca?"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:297
msgid "``MEDIA_INTF_T_DVB_NET``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:298
msgid "Device node interface for the Digital TV network control"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:299
msgid "typically, /dev/dvb/adapter?/net?"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:301
msgid "``MEDIA_INTF_T_V4L_VIDEO``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:302
msgid "Device node interface for video (V4L)"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:303
msgid "typically, /dev/video?"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:305
msgid "``MEDIA_INTF_T_V4L_VBI``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:306
msgid "Device node interface for VBI (V4L)"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:307
msgid "typically, /dev/vbi?"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:309
msgid "``MEDIA_INTF_T_V4L_RADIO``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:310
msgid "Device node interface for radio (V4L)"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:311
msgid "typically, /dev/radio?"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:313
msgid "``MEDIA_INTF_T_V4L_SUBDEV``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:314
msgid "Device node interface for a V4L subdevice"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:315
msgid "typically, /dev/v4l-subdev?"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:317
msgid "``MEDIA_INTF_T_V4L_SWRADIO``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:318
msgid "Device node interface for Software Defined Radio (V4L)"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:319
msgid "typically, /dev/swradio?"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:321
msgid "``MEDIA_INTF_T_V4L_TOUCH``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:322
msgid "Device node interface for Touch device (V4L)"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:323
msgid "typically, /dev/v4l-touch?"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:325
msgid "``MEDIA_INTF_T_ALSA_PCM_CAPTURE``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:326
msgid "Device node interface for ALSA PCM Capture"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:327
msgid "typically, /dev/snd/pcmC?D?c"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:329
msgid "``MEDIA_INTF_T_ALSA_PCM_PLAYBACK``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:330
msgid "Device node interface for ALSA PCM Playback"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:331
msgid "typically, /dev/snd/pcmC?D?p"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:333
msgid "``MEDIA_INTF_T_ALSA_CONTROL``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:334
msgid "Device node interface for ALSA Control"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:335
msgid "typically, /dev/snd/controlC?"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:337
msgid "``MEDIA_INTF_T_ALSA_COMPRESS``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:338
msgid "Device node interface for ALSA Compress"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:339
msgid "typically, /dev/snd/compr?"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:341
msgid "``MEDIA_INTF_T_ALSA_RAWMIDI``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:342
msgid "Device node interface for ALSA Raw MIDI"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:343
msgid "typically, /dev/snd/midi?"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:345
msgid "``MEDIA_INTF_T_ALSA_HWDEP``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:346
msgid "Device node interface for ALSA Hardware Dependent"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:347
msgid "typically, /dev/snd/hwC?D?"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:349
msgid "``MEDIA_INTF_T_ALSA_SEQUENCER``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:350
msgid "Device node interface for ALSA Sequencer"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:351
msgid "typically, /dev/snd/seq"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:353
msgid "``MEDIA_INTF_T_ALSA_TIMER``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:354
msgid "Device node interface for ALSA Timer"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:355
msgid "typically, /dev/snd/timer"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:365
msgid "Media pad flags"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:369
msgid "``MEDIA_PAD_FL_SINK``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:370
msgid ""
"Input pad, relative to the entity. Input pads sink data and are targets of "
"links."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:373
msgid "``MEDIA_PAD_FL_SOURCE``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:374
msgid ""
"Output pad, relative to the entity. Output pads source data and are origins "
"of links."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:377
msgid "``MEDIA_PAD_FL_MUST_CONNECT``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:378
msgid ""
"If this flag is set, then for this pad to be able to stream, it must be "
"connected by at least one enabled link. There could be temporary reasons (e."
"g. device configuration dependent) for the pad to need enabled links even "
"when this flag isn't set; the absence of the flag doesn't imply there is "
"none."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:385
msgid ""
"One and only one of ``MEDIA_PAD_FL_SINK`` and ``MEDIA_PAD_FL_SOURCE`` must "
"be set for every pad."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:396
msgid "Media link flags"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:400
msgid "``MEDIA_LNK_FL_ENABLED``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:401
msgid ""
"The link is enabled and can be used to transfer media data. When two or more "
"links target a sink pad, only one of them can be enabled at a time."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:405
msgid "``MEDIA_LNK_FL_IMMUTABLE``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:406
msgid ""
"The link enabled state can't be modified at runtime. An immutable link is "
"always enabled."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:409
msgid "``MEDIA_LNK_FL_DYNAMIC``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:410
msgid ""
"The link enabled state can be modified during streaming. This flag is set by "
"drivers and is read-only for applications."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:413
msgid "``MEDIA_LNK_FL_LINK_TYPE``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:414
msgid ""
"This is a bitmask that defines the type of the link. The following link "
"types are currently supported:"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:419
msgid ""
"``MEDIA_LNK_FL_DATA_LINK`` for links that represent a data connection "
"between two pads."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:424
msgid ""
"``MEDIA_LNK_FL_INTERFACE_LINK`` for links that associate an entity to its "
"interface."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-types.rst:429
msgid ""
"``MEDIA_LNK_FL_ANCILLARY_LINK`` for links that represent a physical "
"relationship between two entities. The link may or may not be immutable, so "
"applications must not assume either case."
msgstr ""
