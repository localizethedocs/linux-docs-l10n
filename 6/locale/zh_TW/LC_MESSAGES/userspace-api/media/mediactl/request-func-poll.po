# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-30 08:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../userspace-api/media/mediactl/request-func-poll.rst:8
msgid "request poll()"
msgstr ""

#: ../../../userspace-api/media/mediactl/request-func-poll.rst:11
msgid "Name"
msgstr ""

#: ../../../userspace-api/media/mediactl/request-func-poll.rst:13
msgid "request-poll - Wait for some event on a file descriptor"
msgstr ""

#: ../../../userspace-api/media/mediactl/request-func-poll.rst:16
msgid "Synopsis"
msgstr ""

#: ../../../userspace-api/media/mediactl/request-func-poll.rst:25
msgid "Arguments"
msgstr ""

#: ../../../userspace-api/media/mediactl/request-func-poll.rst:27
msgid "``ufds``"
msgstr ""

#: ../../../userspace-api/media/mediactl/request-func-poll.rst:28
msgid "List of file descriptor events to be watched"
msgstr ""

#: ../../../userspace-api/media/mediactl/request-func-poll.rst:30
msgid "``nfds``"
msgstr ""

#: ../../../userspace-api/media/mediactl/request-func-poll.rst:31
msgid "Number of file descriptor events at the \\*ufds array"
msgstr ""

#: ../../../userspace-api/media/mediactl/request-func-poll.rst:33
msgid "``timeout``"
msgstr ""

#: ../../../userspace-api/media/mediactl/request-func-poll.rst:34
msgid "Timeout to wait for events"
msgstr ""

#: ../../../userspace-api/media/mediactl/request-func-poll.rst:37
msgid "Description"
msgstr "描述"

#: ../../../userspace-api/media/mediactl/request-func-poll.rst:39
msgid ""
"With the :c:func:`poll()` function applications can wait for a request to "
"complete."
msgstr ""

#: ../../../userspace-api/media/mediactl/request-func-poll.rst:42
msgid ""
"On success :c:func:`poll()` returns the number of file descriptors that have "
"been selected (that is, file descriptors for which the ``revents`` field of "
"the respective struct :c:type:`pollfd` is non-zero). Request file descriptor "
"set the ``POLLPRI`` flag in ``revents`` when the request was completed.  "
"When the function times out it returns a value of zero, on failure it "
"returns -1 and the ``errno`` variable is set appropriately."
msgstr ""

#: ../../../userspace-api/media/mediactl/request-func-poll.rst:50
msgid ""
"Attempting to poll for a request that is not yet queued will set the "
"``POLLERR`` flag in ``revents``."
msgstr ""

#: ../../../userspace-api/media/mediactl/request-func-poll.rst:54
msgid "Return Value"
msgstr ""

#: ../../../userspace-api/media/mediactl/request-func-poll.rst:56
msgid ""
"On success, :c:func:`poll()` returns the number of structures which have non-"
"zero ``revents`` fields, or zero if the call timed out. On error -1 is "
"returned, and the ``errno`` variable is set appropriately:"
msgstr ""

#: ../../../userspace-api/media/mediactl/request-func-poll.rst:61
msgid "``EBADF``"
msgstr ""

#: ../../../userspace-api/media/mediactl/request-func-poll.rst:62
msgid "One or more of the ``ufds`` members specify an invalid file descriptor."
msgstr ""

#: ../../../userspace-api/media/mediactl/request-func-poll.rst:65
msgid "``EFAULT``"
msgstr ""

#: ../../../userspace-api/media/mediactl/request-func-poll.rst:66
msgid "``ufds`` references an inaccessible memory area."
msgstr ""

#: ../../../userspace-api/media/mediactl/request-func-poll.rst:68
msgid "``EINTR``"
msgstr ""

#: ../../../userspace-api/media/mediactl/request-func-poll.rst:69
msgid "The call was interrupted by a signal."
msgstr ""

#: ../../../userspace-api/media/mediactl/request-func-poll.rst:71
msgid "``EINVAL``"
msgstr ""

#: ../../../userspace-api/media/mediactl/request-func-poll.rst:72
msgid ""
"The ``nfds`` value exceeds the ``RLIMIT_NOFILE`` value. Use ``getrlimit()`` "
"to obtain this value."
msgstr ""
