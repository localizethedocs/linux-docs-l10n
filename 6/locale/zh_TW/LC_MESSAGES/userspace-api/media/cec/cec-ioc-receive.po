# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:9
msgid "ioctls CEC_RECEIVE and CEC_TRANSMIT"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:12
msgid "Name"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:14
msgid "CEC_RECEIVE, CEC_TRANSMIT - Receive or transmit a CEC message"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:17
msgid "Synopsis"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:21
msgid "``int ioctl(int fd, CEC_RECEIVE, struct cec_msg *argp)``"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:25
msgid "``int ioctl(int fd, CEC_TRANSMIT, struct cec_msg *argp)``"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:28
msgid "Arguments"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:30
msgid "``fd``"
msgstr "``fd``"

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:31
msgid "File descriptor returned by :c:func:`open()`."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:33
msgid "``argp``"
msgstr "``argp``"

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:34
msgid "Pointer to struct cec_msg."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:37
msgid "Description"
msgstr "描述"

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:39
msgid ""
"To receive a CEC message the application has to fill in the ``timeout`` "
"field of struct :c:type:`cec_msg` and pass it to :ref:`ioctl CEC_RECEIVE "
"<CEC_RECEIVE>`. If the file descriptor is in non-blocking mode and there are "
"no received messages pending, then it will return -1 and set errno to the "
"``EAGAIN`` error code. If the file descriptor is in blocking mode and "
"``timeout`` is non-zero and no message arrived within ``timeout`` "
"milliseconds, then it will return -1 and set errno to the ``ETIMEDOUT`` "
"error code."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:48
msgid "A received message can be:"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:50
msgid ""
"a message received from another CEC device (the ``sequence`` field will be "
"0, ``tx_status`` will be 0 and ``rx_status`` will be non-zero)."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:52
msgid ""
"the transmit result of an earlier non-blocking transmit (the ``sequence`` "
"field will be non-zero, ``tx_status`` will be non-zero and ``rx_status`` "
"will be 0)."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:55
msgid ""
"the reply to an earlier non-blocking transmit (the ``sequence`` field will "
"be non-zero, ``tx_status`` will be 0 and ``rx_status`` will be non-zero)."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:58
msgid ""
"To send a CEC message the application has to fill in the struct :c:type:"
"`cec_msg` and pass it to :ref:`ioctl CEC_TRANSMIT <CEC_TRANSMIT>`. The :ref:"
"`ioctl CEC_TRANSMIT <CEC_TRANSMIT>` is only available if "
"``CEC_CAP_TRANSMIT`` is set. If there is no more room in the transmit queue, "
"then it will return -1 and set errno to the ``EBUSY`` error code. The "
"transmit queue has enough room for 18 messages (about 1 second worth of 2-"
"byte messages). Note that the CEC kernel framework will also reply to core "
"messages (see :ref:`cec-core-processing`), so it is not a good idea to fully "
"fill up the transmit queue."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:68
msgid ""
"If the file descriptor is in non-blocking mode then the transmit will return "
"0 and the result of the transmit will be available via :ref:`ioctl "
"CEC_RECEIVE <CEC_RECEIVE>` once the transmit has finished. If a non-blocking "
"transmit also specified waiting for a reply, then the reply will arrive in a "
"later message. The ``sequence`` field can be used to associate both transmit "
"results and replies with the original transmit."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:76
msgid ""
"Normally calling :ref:`ioctl CEC_TRANSMIT <CEC_TRANSMIT>` when the physical "
"address is invalid (due to e.g. a disconnect) will return ``ENONET``."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:79
msgid ""
"However, the CEC specification allows sending messages from 'Unregistered' "
"to 'TV' when the physical address is invalid since some TVs pull the hotplug "
"detect pin of the HDMI connector low when they go into standby, or when "
"switching to another input."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:84
msgid ""
"When the hotplug detect pin goes low the EDID disappears, and thus the "
"physical address, but the cable is still connected and CEC still works. In "
"order to detect/wake up the device it is allowed to send poll and 'Image/"
"Text View On' messages from initiator 0xf ('Unregistered') to destination 0 "
"('TV')."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:95
msgid "struct cec_msg"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:100
#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:105
msgid "__u64"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:101
msgid "``tx_ts``"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:102
msgid ""
"Timestamp in ns of when the last byte of the message was transmitted. The "
"timestamp has been taken from the ``CLOCK_MONOTONIC`` clock. To access the "
"same clock from userspace use :c:func:`clock_gettime`."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:106
msgid "``rx_ts``"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:107
msgid ""
"Timestamp in ns of when the last byte of the message was received. The "
"timestamp has been taken from the ``CLOCK_MONOTONIC`` clock. To access the "
"same clock from userspace use :c:func:`clock_gettime`."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:110
#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:116
#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:124
#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:135
msgid "__u32"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:111
msgid "``len``"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:112
msgid ""
"The length of the message. For :ref:`ioctl CEC_TRANSMIT <CEC_TRANSMIT>` this "
"is filled in by the application. The driver will fill this in for :ref:"
"`ioctl CEC_RECEIVE <CEC_RECEIVE>`. For :ref:`ioctl CEC_TRANSMIT "
"<CEC_TRANSMIT>` it will be filled in by the driver with the length of the "
"reply message if ``reply`` was set."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:117
msgid "``timeout``"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:118
msgid ""
"The timeout in milliseconds. This is the time the device will wait for a "
"message to be received before timing out. If it is set to 0, then it will "
"wait indefinitely when it is called by :ref:`ioctl CEC_RECEIVE "
"<CEC_RECEIVE>`. If it is 0 and it is called by :ref:`ioctl CEC_TRANSMIT "
"<CEC_TRANSMIT>`, then it will be replaced by 1000 if the ``reply`` is non-"
"zero or ignored if ``reply`` is 0."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:125
msgid "``sequence``"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:126
msgid ""
"A non-zero sequence number is automatically assigned by the CEC framework "
"for all transmitted messages. It is used by the CEC framework when it queues "
"the transmit result for a non-blocking transmit. This allows the application "
"to associate the received message with the original transmit."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:131
msgid ""
"In addition, if a non-blocking transmit will wait for a reply (ii.e. "
"``timeout`` was not 0), then the ``sequence`` field of the reply will be set "
"to the sequence value of the original transmit. This allows the application "
"to associate the received message with the original transmit."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:136
msgid "``flags``"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:137
msgid "Flags. See :ref:`cec-msg-flags` for a list of available flags."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:138
#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:144
#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:163
#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:167
#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:177
#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:183
#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:189
#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:195
msgid "__u8"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:139
msgid "``msg[16]``"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:140
msgid ""
"The message payload. For :ref:`ioctl CEC_TRANSMIT <CEC_TRANSMIT>` this is "
"filled in by the application. The driver will fill this in for :ref:`ioctl "
"CEC_RECEIVE <CEC_RECEIVE>`. For :ref:`ioctl CEC_TRANSMIT <CEC_TRANSMIT>` it "
"will be filled in by the driver with the payload of the reply message if "
"``timeout`` was set."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:145
msgid "``reply``"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:146
msgid ""
"Wait until this message is replied. If ``reply`` is 0 and the ``timeout`` is "
"0, then don't wait for a reply but return after transmitting the message. "
"Ignored by :ref:`ioctl CEC_RECEIVE <CEC_RECEIVE>`. The case where ``reply`` "
"is 0 (this is the opcode for the Feature Abort message) and ``timeout`` is "
"non-zero is specifically allowed to make it possible to send a message and "
"wait up to ``timeout`` milliseconds for a Feature Abort reply. In this case "
"``rx_status`` will either be set to :ref:`CEC_RX_STATUS_TIMEOUT <CEC-RX-"
"STATUS-TIMEOUT>` or :ref:`CEC_RX_STATUS_FEATURE_ABORT <CEC-RX-STATUS-FEATURE-"
"ABORT>`."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:156
msgid ""
"If the transmitter message is ``CEC_MSG_INITIATE_ARC`` then the ``reply`` "
"values ``CEC_MSG_REPORT_ARC_INITIATED`` and "
"``CEC_MSG_REPORT_ARC_TERMINATED`` are processed differently: either value "
"will match both possible replies. The reason is that the "
"``CEC_MSG_INITIATE_ARC`` message is the only CEC message that has two "
"possible replies other than Feature Abort. The ``reply`` field will be "
"updated with the actual reply so that it is synchronized with the contents "
"of the received message."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:164
msgid "``rx_status``"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:165
msgid ""
"The status bits of the received message. See :ref:`cec-rx-status` for the "
"possible status values."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:168
msgid "``tx_status``"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:169
msgid ""
"The status bits of the transmitted message. See :ref:`cec-tx-status` for the "
"possible status values. When calling :ref:`ioctl CEC_TRANSMIT "
"<CEC_TRANSMIT>` in non-blocking mode, this field will be 0 if the transmit "
"started, or non-0 if the transmit result is known immediately. The latter "
"would be the case when attempting to transmit a Poll message to yourself. "
"That results in a :ref:`CEC_TX_STATUS_NACK <CEC-TX-STATUS-NACK>` without "
"ever actually transmitting the Poll message."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:178
msgid "``tx_arb_lost_cnt``"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:179
msgid ""
"A counter of the number of transmit attempts that resulted in the "
"Arbitration Lost error. This is only set if the hardware supports this, "
"otherwise it is always 0. This counter is only valid if the :ref:"
"`CEC_TX_STATUS_ARB_LOST <CEC-TX-STATUS-ARB-LOST>` status bit is set."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:184
msgid "``tx_nack_cnt``"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:185
msgid ""
"A counter of the number of transmit attempts that resulted in the Not "
"Acknowledged error. This is only set if the hardware supports this, "
"otherwise it is always 0. This counter is only valid if the :ref:"
"`CEC_TX_STATUS_NACK <CEC-TX-STATUS-NACK>` status bit is set."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:190
msgid "``tx_low_drive_cnt``"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:191
msgid ""
"A counter of the number of transmit attempts that resulted in the "
"Arbitration Lost error. This is only set if the hardware supports this, "
"otherwise it is always 0. This counter is only valid if the :ref:"
"`CEC_TX_STATUS_LOW_DRIVE <CEC-TX-STATUS-LOW-DRIVE>` status bit is set."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:196
msgid "``tx_error_cnt``"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:197
msgid ""
"A counter of the number of transmit errors other than Arbitration Lost or "
"Not Acknowledged. This is only set if the hardware supports this, otherwise "
"it is always 0. This counter is only valid if the :ref:`CEC_TX_STATUS_ERROR "
"<CEC-TX-STATUS-ERROR>` status bit is set."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:206
msgid "Flags for struct cec_msg"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:213
msgid "``CEC_MSG_FL_REPLY_TO_FOLLOWERS``"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:214
msgid "1"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:215
msgid ""
"If a CEC transmit expects a reply, then by default that reply is only sent "
"to the filehandle that called :ref:`ioctl CEC_TRANSMIT <CEC_TRANSMIT>`. If "
"this flag is set, then the reply is also sent to all followers, if any. If "
"the filehandle that called :ref:`ioctl CEC_TRANSMIT <CEC_TRANSMIT>` is also "
"a follower, then that filehandle will receive the reply twice: once as the "
"result of the :ref:`ioctl CEC_TRANSMIT <CEC_TRANSMIT>`, and once via :ref:"
"`ioctl CEC_RECEIVE <CEC_RECEIVE>`."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:225
msgid "``CEC_MSG_FL_RAW``"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:226
msgid "2"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:227
msgid ""
"Normally CEC messages are validated before transmitting them. If this flag "
"is set when :ref:`ioctl CEC_TRANSMIT <CEC_TRANSMIT>` is called, then no "
"validation takes place and the message is transmitted as-is. This is useful "
"when debugging CEC issues. This flag is only allowed if the process has the "
"``CAP_SYS_RAWIO`` capability. If that is not set, then the ``EPERM`` error "
"code is returned."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:237
msgid "``CEC_MSG_FL_REPLY_VENDOR_ID``"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:238
msgid "4"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:239
msgid ""
"This flag is only available if the ``CEC_CAP_REPLY_VENDOR_ID`` capability is "
"set. If this flag is set, then the reply is expected to consist of the "
"``CEC_MSG_VENDOR_COMMAND_WITH_ID`` opcode followed by the Vendor ID (in "
"bytes 1-4 of the message), followed by the ``struct cec_msg`` ``reply`` "
"field."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:245
msgid ""
"Note that this assumes that the byte after the Vendor ID is a vendor-"
"specific opcode."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:248
msgid "This flag makes it easier to wait for replies to vendor commands."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:254
msgid "CEC Transmit Status"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:261
msgid "``CEC_TX_STATUS_OK``"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:262
#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:331
msgid "0x01"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:263
msgid ""
"The message was transmitted successfully. This is mutually exclusive with :"
"ref:`CEC_TX_STATUS_MAX_RETRIES <CEC-TX-STATUS-MAX-RETRIES>`. Other bits can "
"still be set if earlier attempts met with failure before the transmit was "
"eventually successful."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:269
msgid "``CEC_TX_STATUS_ARB_LOST``"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:270
#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:336
msgid "0x02"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:271
msgid ""
"CEC line arbitration was lost, i.e. another transmit started at the same "
"time with a higher priority. Optional status, not all hardware can detect "
"this error condition."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:276
msgid "``CEC_TX_STATUS_NACK``"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:277
#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:341
msgid "0x04"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:278
msgid ""
"Message was not acknowledged. Note that some hardware cannot tell apart a "
"'Not Acknowledged' status from other error conditions, i.e. the result of a "
"transmit is just OK or FAIL. In that case this status will be returned when "
"the transmit failed."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:284
msgid "``CEC_TX_STATUS_LOW_DRIVE``"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:285
#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:348
msgid "0x08"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:286
msgid ""
"Low drive was detected on the CEC bus. This indicates that a follower "
"detected an error on the bus and requests a retransmission. Optional status, "
"not all hardware can detect this error condition."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:292
msgid "``CEC_TX_STATUS_ERROR``"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:293
msgid "0x10"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:294
msgid ""
"Some error occurred. This is used for any errors that do not fit "
"``CEC_TX_STATUS_ARB_LOST`` or ``CEC_TX_STATUS_LOW_DRIVE``, either because "
"the hardware could not tell which error occurred, or because the hardware "
"tested for other conditions besides those two. Optional status."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:300
msgid "``CEC_TX_STATUS_MAX_RETRIES``"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:301
msgid "0x20"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:302
msgid ""
"The transmit failed after one or more retries. This status bit is mutually "
"exclusive with :ref:`CEC_TX_STATUS_OK <CEC-TX-STATUS-OK>`. Other bits can "
"still be set to explain which failures were seen."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:307
msgid "``CEC_TX_STATUS_ABORTED``"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:308
msgid "0x40"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:309
msgid ""
"The transmit was aborted due to an HDMI disconnect, or the adapter was "
"unconfigured, or a transmit was interrupted, or the driver returned an error "
"when attempting to start a transmit."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:314
msgid "``CEC_TX_STATUS_TIMEOUT``"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:315
msgid "0x80"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:316
msgid ""
"The transmit timed out. This should not normally happen and this indicates a "
"driver problem."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:323
msgid "CEC Receive Status"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:330
msgid "``CEC_RX_STATUS_OK``"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:332
msgid "The message was received successfully."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:335
msgid "``CEC_RX_STATUS_TIMEOUT``"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:337
msgid "The reply to an earlier transmitted message timed out."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:340
msgid "``CEC_RX_STATUS_FEATURE_ABORT``"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:342
msgid ""
"The message was received successfully but the reply was "
"``CEC_MSG_FEATURE_ABORT``. This status is only set if this message was the "
"reply to an earlier transmitted message."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:347
msgid "``CEC_RX_STATUS_ABORTED``"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:349
msgid ""
"The wait for a reply to an earlier transmitted message was aborted because "
"the HDMI cable was disconnected, the adapter was unconfigured or the :ref:"
"`CEC_TRANSMIT <CEC_RECEIVE>` that waited for a reply was interrupted."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:356
msgid "Return Value"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:358
msgid ""
"On success 0 is returned, on error -1 and the ``errno`` variable is set "
"appropriately. The generic error codes are described at the :ref:`Generic "
"Error Codes <gen-errors>` chapter."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:362
msgid ""
"The :ref:`ioctl CEC_RECEIVE <CEC_RECEIVE>` can return the following error "
"codes:"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:365
msgid "EAGAIN"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:366
msgid ""
"No messages are in the receive queue, and the filehandle is in non-blocking "
"mode."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:368
msgid "ETIMEDOUT"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:369
msgid "The ``timeout`` was reached while waiting for a message."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:371
#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:399
msgid "ERESTARTSYS"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:372
msgid "The wait for a message was interrupted (e.g. by Ctrl-C)."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:374
msgid ""
"The :ref:`ioctl CEC_TRANSMIT <CEC_TRANSMIT>` can return the following error "
"codes:"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:377
msgid "ENOTTY"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:378
msgid ""
"The ``CEC_CAP_TRANSMIT`` capability wasn't set, so this ioctl is not "
"supported."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:380
msgid "EPERM"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:381
msgid ""
"The CEC adapter is not configured, i.e. :ref:`ioctl CEC_ADAP_S_LOG_ADDRS "
"<CEC_ADAP_S_LOG_ADDRS>` has never been called, or ``CEC_MSG_FL_RAW`` was "
"used from a process that did not have the ``CAP_SYS_RAWIO`` capability."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:385
msgid "ENONET"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:386
msgid ""
"The CEC adapter is not configured, i.e. :ref:`ioctl CEC_ADAP_S_LOG_ADDRS "
"<CEC_ADAP_S_LOG_ADDRS>` was called, but the physical address is invalid so "
"no logical address was claimed. An exception is made in this case for "
"transmits from initiator 0xf ('Unregistered') to destination 0 ('TV'). In "
"that case the transmit will proceed as usual."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:391
msgid "EBUSY"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:392
msgid ""
"Another filehandle is in exclusive follower or initiator mode, or the "
"filehandle is in mode ``CEC_MODE_NO_INITIATOR``. This is also returned if "
"the transmit queue is full."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:396
msgid "EINVAL"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:397
msgid "The contents of struct :c:type:`cec_msg` is invalid."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-receive.rst:400
msgid "The wait for a successful transmit was interrupted (e.g. by Ctrl-C)."
msgstr ""
