# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../userspace-api/media/cec/cec-ioc-adap-g-phys-addr.rst:10
msgid "ioctls CEC_ADAP_G_PHYS_ADDR and CEC_ADAP_S_PHYS_ADDR"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-adap-g-phys-addr.rst:13
msgid "Name"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-adap-g-phys-addr.rst:15
msgid ""
"CEC_ADAP_G_PHYS_ADDR, CEC_ADAP_S_PHYS_ADDR - Get or set the physical address"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-adap-g-phys-addr.rst:18
msgid "Synopsis"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-adap-g-phys-addr.rst:22
msgid "``int ioctl(int fd, CEC_ADAP_G_PHYS_ADDR, __u16 *argp)``"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-adap-g-phys-addr.rst:26
msgid "``int ioctl(int fd, CEC_ADAP_S_PHYS_ADDR, __u16 *argp)``"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-adap-g-phys-addr.rst:29
msgid "Arguments"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-adap-g-phys-addr.rst:31
msgid "``fd``"
msgstr "``fd``"

#: ../../../userspace-api/media/cec/cec-ioc-adap-g-phys-addr.rst:32
msgid "File descriptor returned by :c:func:`open()`."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-adap-g-phys-addr.rst:34
msgid "``argp``"
msgstr "``argp``"

#: ../../../userspace-api/media/cec/cec-ioc-adap-g-phys-addr.rst:35
msgid "Pointer to the CEC address."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-adap-g-phys-addr.rst:38
msgid "Description"
msgstr "描述"

#: ../../../userspace-api/media/cec/cec-ioc-adap-g-phys-addr.rst:40
msgid ""
"To query the current physical address applications call :ref:`ioctl "
"CEC_ADAP_G_PHYS_ADDR <CEC_ADAP_G_PHYS_ADDR>` with a pointer to a __u16 where "
"the driver stores the physical address."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-adap-g-phys-addr.rst:44
msgid ""
"To set a new physical address applications store the physical address in a "
"__u16 and call :ref:`ioctl CEC_ADAP_S_PHYS_ADDR <CEC_ADAP_S_PHYS_ADDR>` with "
"a pointer to this integer. The :ref:`ioctl CEC_ADAP_S_PHYS_ADDR "
"<CEC_ADAP_S_PHYS_ADDR>` is only available if ``CEC_CAP_PHYS_ADDR`` is set "
"(the ``ENOTTY`` error code will be returned otherwise). The :ref:`ioctl "
"CEC_ADAP_S_PHYS_ADDR <CEC_ADAP_S_PHYS_ADDR>` can only be called by a file "
"descriptor in initiator mode (see :ref:`CEC_S_MODE`), if not the ``EBUSY`` "
"error code will be returned."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-adap-g-phys-addr.rst:52
msgid ""
"To clear an existing physical address use ``CEC_PHYS_ADDR_INVALID``. The "
"adapter will go to the unconfigured state."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-adap-g-phys-addr.rst:55
msgid ""
"If logical address types have been defined (see :ref:`ioctl "
"CEC_ADAP_S_LOG_ADDRS <CEC_ADAP_S_LOG_ADDRS>`), then this ioctl will block "
"until all requested logical addresses have been claimed. If the file "
"descriptor is in non-blocking mode then it will not wait for the logical "
"addresses to be claimed, instead it just returns 0."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-adap-g-phys-addr.rst:60
msgid ""
"A :ref:`CEC_EVENT_STATE_CHANGE <CEC-EVENT-STATE-CHANGE>` event is sent when "
"the physical address changes."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-adap-g-phys-addr.rst:63
msgid ""
"The physical address is a 16-bit number where each group of 4 bits represent "
"a digit of the physical address a.b.c.d where the most significant 4 bits "
"represent 'a'. The CEC root device (usually the TV) has address 0.0.0.0. "
"Every device that is hooked up to an input of the TV has address a.0.0.0 "
"(where 'a' is ≥ 1), devices hooked up to those in turn have addresses a."
"b.0.0, etc. So a topology of up to 5 devices deep is supported. The physical "
"address a device shall use is stored in the EDID of the sink."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-adap-g-phys-addr.rst:72
msgid ""
"For example, the EDID for each HDMI input of the TV will have a different "
"physical address of the form a.0.0.0 that the sources will read out and use "
"as their physical address."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-adap-g-phys-addr.rst:77
msgid "Return Value"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-adap-g-phys-addr.rst:79
msgid ""
"On success 0 is returned, on error -1 and the ``errno`` variable is set "
"appropriately. The generic error codes are described at the :ref:`Generic "
"Error Codes <gen-errors>` chapter."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-adap-g-phys-addr.rst:83
msgid ""
"The :ref:`ioctl CEC_ADAP_S_PHYS_ADDR <CEC_ADAP_S_PHYS_ADDR>` can return the "
"following error codes:"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-adap-g-phys-addr.rst:86
msgid "ENOTTY"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-adap-g-phys-addr.rst:87
msgid ""
"The ``CEC_CAP_PHYS_ADDR`` capability wasn't set, so this ioctl is not "
"supported."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-adap-g-phys-addr.rst:89
msgid "EBUSY"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-adap-g-phys-addr.rst:90
msgid ""
"Another filehandle is in exclusive follower or initiator mode, or the "
"filehandle is in mode ``CEC_MODE_NO_INITIATOR``."
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-adap-g-phys-addr.rst:93
msgid "EINVAL"
msgstr ""

#: ../../../userspace-api/media/cec/cec-ioc-adap-g-phys-addr.rst:94
msgid "The physical address is malformed."
msgstr ""
