# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../userspace-api/media/v4l/vidioc-querystd.rst:8
msgid "ioctl VIDIOC_QUERYSTD, VIDIOC_SUBDEV_QUERYSTD"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-querystd.rst:11
msgid "Name"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-querystd.rst:13
msgid ""
"VIDIOC_QUERYSTD - VIDIOC_SUBDEV_QUERYSTD - Sense the video standard received "
"by the current input"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-querystd.rst:16
msgid "Synopsis"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-querystd.rst:20
msgid "``int ioctl(int fd, VIDIOC_QUERYSTD, v4l2_std_id *argp)``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-querystd.rst:24
msgid "``int ioctl(int fd, VIDIOC_SUBDEV_QUERYSTD, v4l2_std_id *argp)``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-querystd.rst:27
msgid "Arguments"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-querystd.rst:29
msgid "``fd``"
msgstr "``fd``"

#: ../../../userspace-api/media/v4l/vidioc-querystd.rst:30
msgid "File descriptor returned by :c:func:`open()`."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-querystd.rst:32
msgid "``argp``"
msgstr "``argp``"

#: ../../../userspace-api/media/v4l/vidioc-querystd.rst:33
msgid "Pointer to :c:type:`v4l2_std_id`."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-querystd.rst:36
msgid "Description"
msgstr "描述"

#: ../../../userspace-api/media/v4l/vidioc-querystd.rst:38
msgid ""
"The hardware may be able to detect the current video standard automatically. "
"To do so, applications call :ref:`VIDIOC_QUERYSTD` with a pointer to a :ref:"
"`v4l2_std_id <v4l2-std-id>` type. The driver stores here a set of "
"candidates, this can be a single flag or a set of supported standards if for "
"example the hardware can only distinguish between 50 and 60 Hz systems. If "
"no signal was detected, then the driver will return V4L2_STD_UNKNOWN. When "
"detection is not possible or fails, the set must contain all standards "
"supported by the current video input or output."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-querystd.rst:50
msgid ""
"Drivers shall *not* switch the video standard automatically if a new video "
"standard is detected. Instead, drivers should send the "
"``V4L2_EVENT_SOURCE_CHANGE`` event (if they support this) and expect that "
"userspace will take action by calling :ref:`VIDIOC_QUERYSTD`. The reason is "
"that a new video standard can mean different buffer sizes as well, and you "
"cannot change buffer sizes on the fly. In general, applications that receive "
"the Source Change event will have to call :ref:`VIDIOC_QUERYSTD`, and if the "
"detected video standard is valid they will have to stop streaming, set the "
"new standard, allocate new buffers and start streaming again."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-querystd.rst:62
msgid "Return Value"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-querystd.rst:64
msgid ""
"On success 0 is returned, on error -1 and the ``errno`` variable is set "
"appropriately. The generic error codes are described at the :ref:`Generic "
"Error Codes <gen-errors>` chapter."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-querystd.rst:68
msgid "ENODATA"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-querystd.rst:69
msgid "Standard video timings are not supported for this input or output."
msgstr ""
