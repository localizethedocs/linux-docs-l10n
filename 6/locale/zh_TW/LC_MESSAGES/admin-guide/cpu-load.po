# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-30 08:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../admin-guide/cpu-load.rst:3
msgid "CPU load"
msgstr ""

#: ../../../admin-guide/cpu-load.rst:5
msgid ""
"Linux exports various bits of information via ``/proc/stat`` and ``/proc/"
"uptime`` that userland tools, such as top(1), use to calculate the average "
"time system spent in a particular state, for example::"
msgstr ""

#: ../../../admin-guide/cpu-load.rst:17
msgid ""
"Here the system thinks that over the default sampling period the system "
"spent 10.01% of the time doing work in user space, 2.92% in the kernel, and "
"was overall 81.63% of the time idle."
msgstr ""

#: ../../../admin-guide/cpu-load.rst:21
msgid ""
"In most cases the ``/proc/stat``         information reflects the reality "
"quite closely, however due to the nature of how/when the kernel collects "
"this data sometimes it can not be trusted at all."
msgstr ""

#: ../../../admin-guide/cpu-load.rst:25
msgid ""
"So how is this information collected?  Whenever timer interrupt is signalled "
"the kernel looks what kind of task was running at this moment and increments "
"the counter that corresponds to this tasks kind/state.  The problem with "
"this is that the system could have switched between various states multiple "
"times between two timer interrupts yet the counter is incremented only for "
"the last state."
msgstr ""

#: ../../../admin-guide/cpu-load.rst:34
msgid "Example"
msgstr ""

#: ../../../admin-guide/cpu-load.rst:36
msgid ""
"If we imagine the system with one task that periodically burns cycles in the "
"following manner::"
msgstr ""

#: ../../../admin-guide/cpu-load.rst:46
msgid ""
"In the above situation the system will be 0% loaded according to the ``/proc/"
"stat`` (since the timer interrupt will always happen when the system is "
"executing the idle handler), but in reality the load is closer to 99%."
msgstr ""

#: ../../../admin-guide/cpu-load.rst:51
msgid ""
"One can imagine many more situations where this behavior of the kernel will "
"lead to quite erratic information inside ``/proc/stat``::"
msgstr ""

#: ../../../admin-guide/cpu-load.rst:108
msgid "References"
msgstr ""

#: ../../../admin-guide/cpu-load.rst:110
msgid "https://lore.kernel.org/r/loom.20070212T063225-663@post.gmane.org"
msgstr ""

#: ../../../admin-guide/cpu-load.rst:111
msgid "Documentation/filesystems/proc.rst (1.8)"
msgstr ""

#: ../../../admin-guide/cpu-load.rst:115
msgid "Thanks"
msgstr ""

#: ../../../admin-guide/cpu-load.rst:117
msgid "Con Kolivas, Pavel Machek"
msgstr ""
