# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../admin-guide/kdump/vmcoreinfo.rst:3
msgid "VMCOREINFO"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:6
msgid "What is it?"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:8
msgid ""
"VMCOREINFO is a special ELF note section. It contains various information "
"from the kernel like structure size, page size, symbol values, field "
"offsets, etc. These data are packed into an ELF note section and used by "
"user-space tools like crash and makedumpfile to analyze a kernel's memory "
"layout."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:15
msgid "Common variables"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:18
msgid "init_uts_ns.name.release"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:20
msgid ""
"The version of the Linux kernel. Used to find the corresponding source code "
"from which the kernel has been built. For example, crash uses it to find the "
"corresponding vmlinux in order to process vmcore."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:25
msgid "PAGE_SIZE"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:27
msgid ""
"The size of a page. It is the smallest unit of data used by the memory "
"management facilities. It is usually 4096 bytes of size and a page is "
"aligned on 4096 bytes. Used for computing page addresses."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:32
msgid "init_uts_ns"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:34
msgid ""
"The UTS namespace which is used to isolate two specific elements of the "
"system that relate to the uname(2) system call. It is named after the data "
"structure used to store information returned by the uname(2) system call."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:39
msgid ""
"User-space tools can get the kernel name, host name, kernel release number, "
"kernel version, architecture name and OS type from it."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:43
msgid "(uts_namespace, name)"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:45
msgid ""
"Offset of the name's member. Crash Utility and Makedumpfile get the start "
"address of the init_uts_ns.name from this."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:49
msgid "node_online_map"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:51
msgid ""
"An array node_states[N_ONLINE] which represents the set of online nodes in a "
"system, one bit position per node number. Used to keep track of which nodes "
"are in the system and online."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:56
msgid "swapper_pg_dir"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:58
msgid ""
"The global page directory pointer of the kernel. Used to translate virtual "
"to physical addresses."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:62
msgid "_stext"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:64
msgid ""
"Defines the beginning of the text section. In general, _stext indicates the "
"kernel start address. Used to convert a virtual address from the direct "
"kernel map to a physical address."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:69
msgid "VMALLOC_START"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:71
msgid ""
"Stores the base address of vmalloc area. makedumpfile gets this value since "
"is necessary for vmalloc translation."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:75
msgid "mem_map"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:77
msgid ""
"Physical addresses are translated to struct pages by treating them as an "
"index into the mem_map array. Right-shifting a physical address PAGE_SHIFT "
"bits converts it into a page frame number which is an index into that "
"mem_map array."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:82
msgid "Used to map an address to the corresponding struct page."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:85
#: ../../../admin-guide/kdump/vmcoreinfo.rst:507
msgid "contig_page_data"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:87
msgid ""
"Makedumpfile gets the pglist_data structure from this symbol, which is used "
"to describe the memory layout."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:90
msgid "User-space tools use this to exclude free pages when dumping memory."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:93
msgid ""
"mem_section|(mem_section, NR_SECTION_ROOTS)|(mem_section, section_mem_map)"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:95
msgid ""
"The address of the mem_section array, its length, structure size, and the "
"section_mem_map offset."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:98
msgid ""
"It exists in the sparse memory mapping model, and it is also somewhat "
"similar to the mem_map variable, both of them are used to translate an "
"address."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:103
msgid "MAX_PHYSMEM_BITS"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:105
msgid "Defines the maximum supported physical address space memory."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:108
msgid "page"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:110
msgid ""
"The size of a page structure. struct page is an important data structure and "
"it is widely used to compute contiguous memory."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:114
msgid "pglist_data"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:116
msgid ""
"The size of a pglist_data structure. This value is used to check if the "
"pglist_data structure is valid. It is also used for checking the memory type."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:121
msgid "zone"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:123
msgid ""
"The size of a zone structure. This value is used to check if the zone "
"structure has been found. It is also used for excluding free pages."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:127
msgid "free_area"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:129
msgid ""
"The size of a free_area structure. It indicates whether the free_area "
"structure is valid or not. Useful when excluding free pages."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:133
msgid "list_head"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:135
msgid ""
"The size of a list_head structure. Used when iterating lists in a post-"
"mortem analysis session."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:139
msgid "nodemask_t"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:141
msgid ""
"The size of a nodemask_t type. Used to compute the number of online nodes."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:145
msgid ""
"(page, flags|_refcount|mapping|lru|_mapcount|private|compound_order|"
"compound_head)"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:147
msgid ""
"User-space tools compute their values based on the offset of these "
"variables. The variables are used when excluding unnecessary pages."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:151
msgid ""
"(pglist_data, node_zones|nr_zones|node_mem_map|node_start_pfn|"
"node_spanned_pages|node_id)"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:153
msgid ""
"On NUMA machines, each NUMA node has a pg_data_t to describe its memory "
"layout. On UMA machines there is a single pglist_data which describes the "
"whole memory."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:157
msgid ""
"These values are used to check the memory type and to compute the virtual "
"address for memory map."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:161
msgid "(zone, free_area|vm_stat|spanned_pages)"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:163
msgid ""
"Each node is divided into a number of blocks called zones which represent "
"ranges within memory. A zone is described by a structure zone."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:166
msgid ""
"User-space tools compute required values based on the offset of these "
"variables."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:170
msgid "(free_area, free_list)"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:172
msgid ""
"Offset of the free_list's member. This value is used to compute the number "
"of free pages."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:175
msgid ""
"Each zone has a free_area structure array called free_area[NR_PAGE_ORDERS]. "
"The free_list represents a linked list of free page blocks."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:179
msgid "(list_head, next|prev)"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:181
msgid ""
"Offsets of the list_head's members. list_head is used to define a circular "
"linked list. User-space tools need these in order to traverse lists."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:186
msgid "(vmap_area, va_start|list)"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:188
msgid ""
"Offsets of the vmap_area's members. They carry vmalloc-specific information. "
"Makedumpfile gets the start address of the vmalloc region from this."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:193
msgid "(zone.free_area, NR_PAGE_ORDERS)"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:195
msgid ""
"Free areas descriptor. User-space tools use this value to iterate the "
"free_area ranges. NR_PAGE_ORDERS is used by the zone buddy allocator."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:199
msgid "prb"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:201
msgid ""
"A pointer to the printk ringbuffer (struct printk_ringbuffer). This may be "
"pointing to the static boot ringbuffer or the dynamically allocated "
"ringbuffer, depending on when the core dump occurred. Used by user-space "
"tools to read the active kernel log buffer."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:207
msgid "printk_rb_static"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:209
msgid ""
"A pointer to the static boot printk ringbuffer. If @prb has a different "
"value, this is useful for viewing the initial boot messages, which may have "
"been overwritten in the dynamically allocated ringbuffer."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:215
msgid "clear_seq"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:217
msgid ""
"The sequence number of the printk() record after the last clear command. It "
"indicates the first record after the last SYSLOG_ACTION_CLEAR, like issued "
"by 'dmesg -c'. Used by user-space tools to dump a subset of the dmesg log."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:223
msgid "printk_ringbuffer"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:225
msgid ""
"The size of a printk_ringbuffer structure. This structure contains all "
"information required for accessing the various components of the kernel log "
"buffer."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:230
msgid "(printk_ringbuffer, desc_ring|text_data_ring|dict_data_ring|fail)"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:232
msgid ""
"Offsets for the various components of the printk ringbuffer. Used by user-"
"space tools to view the kernel log buffer without requiring the declaration "
"of the structure."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:237
msgid "prb_desc_ring"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:239
msgid ""
"The size of the prb_desc_ring structure. This structure contains information "
"about the set of record descriptors."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:243
msgid "(prb_desc_ring, count_bits|descs|head_id|tail_id)"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:245
msgid ""
"Offsets for the fields describing the set of record descriptors. Used by "
"user-space tools to be able to traverse the descriptors without requiring "
"the declaration of the structure."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:250
msgid "prb_desc"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:252
msgid ""
"The size of the prb_desc structure. This structure contains information "
"about a single record descriptor."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:256
msgid "(prb_desc, info|state_var|text_blk_lpos|dict_blk_lpos)"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:258
msgid ""
"Offsets for the fields describing a record descriptors. Used by user-space "
"tools to be able to read descriptors without requiring the declaration of "
"the structure."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:263
msgid "prb_data_blk_lpos"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:265
msgid ""
"The size of the prb_data_blk_lpos structure. This structure contains "
"information about where the text or dictionary data (data block) is located "
"within the respective data ring."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:270
msgid "(prb_data_blk_lpos, begin|next)"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:272
msgid ""
"Offsets for the fields describing the location of a data block. Used by user-"
"space tools to be able to locate data blocks without requiring the "
"declaration of the structure."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:277
msgid "printk_info"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:279
msgid ""
"The size of the printk_info structure. This structure contains all the meta-"
"data for a record."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:283
msgid "(printk_info, seq|ts_nsec|text_len|dict_len|caller_id)"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:285
msgid ""
"Offsets for the fields providing the meta-data for a record. Used by user-"
"space tools to be able to read the information without requiring the "
"declaration of the structure."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:290
msgid "prb_data_ring"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:292
msgid ""
"The size of the prb_data_ring structure. This structure contains information "
"about a set of data blocks."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:296
msgid "(prb_data_ring, size_bits|data|head_lpos|tail_lpos)"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:298
msgid ""
"Offsets for the fields describing a set of data blocks. Used by user-space "
"tools to be able to access the data blocks without requiring the declaration "
"of the structure."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:303
msgid "atomic_long_t"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:305
msgid ""
"The size of the atomic_long_t structure. Used by user-space tools to be able "
"to copy the full structure, regardless of its architecture-specific "
"implementation."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:310
msgid "(atomic_long_t, counter)"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:312
msgid ""
"Offset for the long value of an atomic_long_t variable. Used by user-space "
"tools to access the long value without requiring the architecture-specific "
"declaration."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:317
msgid "(free_area.free_list, MIGRATE_TYPES)"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:319
msgid ""
"The number of migrate types for pages. The free_list is described by the "
"array. Used by tools to compute the number of free pages."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:323
msgid "NR_FREE_PAGES"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:325
msgid ""
"On linux-2.6.21 or later, the number of free pages is in "
"vm_stat[NR_FREE_PAGES]. Used to get the number of free pages."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:329
msgid "PG_lru|PG_private|PG_swapcache|PG_swapbacked|PG_hwpoison|PG_head_mask"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:331
msgid ""
"Page attributes. These flags are used to filter various unnecessary for "
"dumping pages."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:335
msgid ""
"PAGE_SLAB_MAPCOUNT_VALUE|PAGE_BUDDY_MAPCOUNT_VALUE|"
"PAGE_OFFLINE_MAPCOUNT_VALUE|PAGE_HUGETLB_MAPCOUNT_VALUE|"
"PAGE_UNACCEPTED_MAPCOUNT_VALUE"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:337
msgid ""
"More page attributes. These flags are used to filter various unnecessary for "
"dumping pages."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:342
msgid "x86_64"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:345
msgid "phys_base"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:347
msgid ""
"Used to convert the virtual address of an exported kernel symbol to its "
"corresponding physical address."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:351
msgid "init_top_pgt"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:353
msgid ""
"Used to walk through the whole page table and convert virtual addresses to "
"physical addresses. The init_top_pgt is somewhat similar to swapper_pg_dir, "
"but it is only used in x86_64."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:358
msgid "pgtable_l5_enabled"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:360
msgid ""
"User-space tools need to know whether the crash kernel was in 5-level paging "
"mode."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:364
msgid "node_data"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:366
msgid ""
"This is a struct pglist_data array and stores all NUMA nodes information. "
"Makedumpfile gets the pglist_data structure from it."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:370
msgid "(node_data, MAX_NUMNODES)"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:372
msgid "The maximum number of nodes in system."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:375
#: ../../../admin-guide/kdump/vmcoreinfo.rst:439
msgid "KERNELOFFSET"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:377
#: ../../../admin-guide/kdump/vmcoreinfo.rst:441
msgid ""
"The kernel randomization offset. Used to compute the page offset. If KASLR "
"is disabled, this value is zero."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:381
msgid "KERNEL_IMAGE_SIZE"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:383
msgid ""
"Currently unused by Makedumpfile. Used to compute the module virtual address "
"by Crash."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:387
msgid "sme_mask"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:389
msgid ""
"AMD-specific with SME support: it indicates the secure memory encryption "
"mask. Makedumpfile tools need to know whether the crash kernel was "
"encrypted. If SME is enabled in the first kernel, the crash kernel's page "
"table entries (pgd/pud/pmd/pte) contain the memory encryption mask. This is "
"used to remove the SME mask and obtain the true physical address."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:396
msgid ""
"Currently, sme_mask stores the value of the C-bit position. If needed, "
"additional SME-relevant info can be placed in that variable."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:399
msgid "For example::"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:406
msgid "x86_32"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:409
msgid "X86_PAE"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:411
msgid ""
"Denotes whether physical address extensions are enabled. It has the cost of "
"a higher page table lookup overhead, and also consumes more page table space "
"per process. Used to check whether PAE was enabled in the crash kernel when "
"converting virtual addresses to physical addresses."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:417
msgid "ARM64"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:420
#: ../../../admin-guide/kdump/vmcoreinfo.rst:567
msgid "VA_BITS"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:422
#: ../../../admin-guide/kdump/vmcoreinfo.rst:569
msgid ""
"The maximum number of bits for virtual addresses. Used to compute the "
"virtual memory ranges."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:426
msgid "kimage_voffset"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:428
msgid ""
"The offset between the kernel virtual and physical mappings. Used to "
"translate virtual to physical addresses."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:432
msgid "PHYS_OFFSET"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:434
msgid ""
"Indicates the physical address of the start of memory. Similar to "
"kimage_voffset, which is used to translate virtual to physical addresses."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:445
msgid "KERNELPACMASK"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:447
msgid ""
"The mask to extract the Pointer Authentication Code from a kernel virtual "
"address."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:451
msgid "TCR_EL1.T1SZ"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:453
msgid ""
"Indicates the size offset of the memory region addressed by TTBR1_EL1. The "
"region size is 2^(64-T1SZ) bytes."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:456
msgid ""
"TTBR1_EL1 is the table base address register specified by ARMv8-A "
"architecture which is used to lookup the page-tables for the Virtual "
"addresses in the higher VA range (refer to ARMv8 ARM document for more "
"details)."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:462
msgid ""
"MODULES_VADDR|MODULES_END|VMALLOC_START|VMALLOC_END|VMEMMAP_START|VMEMMAP_END"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:464
#: ../../../admin-guide/kdump/vmcoreinfo.rst:585
msgid "Used to get the correct ranges:"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:465
msgid ""
"MODULES_VADDR ~ MODULES_END-1 : Kernel module space. VMALLOC_START ~ "
"VMALLOC_END-1 : vmalloc() / ioremap() space. VMEMMAP_START ~ VMEMMAP_END-1 : "
"vmemmap region, used for struct page array."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:470
msgid "arm"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:473
msgid "ARM_LPAE"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:475
msgid ""
"It indicates whether the crash kernel supports large physical address "
"extensions. Used to translate virtual to physical addresses."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:479
msgid "s390"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:482
msgid "lowcore_ptr"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:484
msgid ""
"An array with a pointer to the lowcore of every CPU. Used to print the psw "
"and all registers information."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:488
msgid "high_memory"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:490
msgid "Used to get the vmalloc_start address from the high_memory symbol."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:493
msgid "(lowcore_ptr, NR_CPUS)"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:495
msgid "The maximum number of CPUs."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:498
msgid "powerpc"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:502
#: ../../../admin-guide/kdump/vmcoreinfo.rst:554
msgid "node_data|(node_data, MAX_NUMNODES)"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:504
#: ../../../admin-guide/kdump/vmcoreinfo.rst:509
#: ../../../admin-guide/kdump/vmcoreinfo.rst:556
msgid "See above."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:512
msgid "vmemmap_list"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:514
msgid ""
"The vmemmap_list maintains the entire vmemmap physical mapping. Used to get "
"vmemmap list count and populated vmemmap regions info. If the vmemmap "
"address translation information is stored in the crash kernel, it is used to "
"translate vmemmap kernel virtual addresses."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:520
msgid "mmu_vmemmap_psize"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:522
msgid "The size of a page. Used to translate virtual to physical addresses."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:525
msgid "mmu_psize_defs"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:527
msgid "Page size definitions, i.e. 4k, 64k, or 16M."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:529
msgid "Used to make vtop translations."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:532
msgid ""
"vmemmap_backing|(vmemmap_backing, list)|(vmemmap_backing, phys)|"
"(vmemmap_backing, virt_addr)"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:534
msgid ""
"The vmemmap virtual address space management does not have a traditional "
"page table to track which virtual struct pages are backed by a physical "
"mapping. The virtual to physical mappings are tracked in a simple linked "
"list format."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:539
msgid ""
"User-space tools need to know the offset of list, phys and virt_addr when "
"computing the count of vmemmap regions."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:543
msgid "mmu_psize_def|(mmu_psize_def, shift)"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:545
msgid ""
"The size of a struct mmu_psize_def and the offset of mmu_psize_def's member."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:548
msgid "Used in vtop translations."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:551
msgid "sh"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:559
msgid "X2TLB"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:561
msgid "Indicates whether the crashed kernel enabled SH extended mode."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:564
msgid "RISCV64"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:573
msgid "PAGE_OFFSET"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:575
msgid ""
"Indicates the virtual kernel start address of the direct-mapped RAM region."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:578
msgid "phys_ram_base"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:580
msgid "Indicates the start physical RAM address."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:583
msgid ""
"MODULES_VADDR|MODULES_END|VMALLOC_START|VMALLOC_END|VMEMMAP_START|"
"VMEMMAP_END|KERNEL_LINK_ADDR"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:587
msgid "MODULES_VADDR ~ MODULES_END : Kernel module space."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:588
msgid "VMALLOC_START ~ VMALLOC_END : vmalloc() / ioremap() space."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:589
msgid ""
"VMEMMAP_START ~ VMEMMAP_END : vmemmap space, used for struct page array."
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:590
msgid "KERNEL_LINK_ADDR : start address of Kernel link and BPF"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:593
msgid "va_kernel_pa_offset"
msgstr ""

#: ../../../admin-guide/kdump/vmcoreinfo.rst:595
msgid ""
"Indicates the offset between the kernel virtual and physical mappings. Used "
"to translate virtual to physical addresses."
msgstr ""
