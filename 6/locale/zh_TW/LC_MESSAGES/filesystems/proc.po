# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../filesystems/proc.rst:5
msgid "The /proc Filesystem"
msgstr ""

#: ../../../filesystems/proc.rst:8
msgid "/proc/sys"
msgstr ""

#: ../../../filesystems/proc.rst:8
msgid "Terrehon Bowden <terrehon@pacbell.net>, Bodo Bauer <bb@ricochet.net>"
msgstr ""

#: ../../../filesystems/proc.rst:8
msgid "October 7 1999"
msgstr ""

#: ../../../filesystems/proc.rst:10
msgid "2.4.x update"
msgstr ""

#: ../../../filesystems/proc.rst:10
msgid "Jorge Nerin <comandante@zaralinux.com>"
msgstr ""

#: ../../../filesystems/proc.rst:10
msgid "November 14 2000"
msgstr ""

#: ../../../filesystems/proc.rst:11
msgid "move /proc/sys"
msgstr ""

#: ../../../filesystems/proc.rst:11
msgid "Shen Feng <shen@cn.fujitsu.com>"
msgstr ""

#: ../../../filesystems/proc.rst:11
msgid "April 1 2009"
msgstr ""

#: ../../../filesystems/proc.rst:12
msgid "fixes/update part 1.1"
msgstr ""

#: ../../../filesystems/proc.rst:12
msgid "Stefani Seibold <stefani@seibold.net>"
msgstr ""

#: ../../../filesystems/proc.rst:12
msgid "June 9 2009"
msgstr ""

#: ../../../filesystems/proc.rst:59
msgid "Preface"
msgstr ""

#: ../../../filesystems/proc.rst:62
msgid "0.1 Introduction/Credits"
msgstr ""

#: ../../../filesystems/proc.rst:64
msgid ""
"This documentation is  part of a soon (or  so we hope) to be  released book "
"on the SuSE  Linux distribution. As  there is  no complete documentation  "
"for the /proc file system and we've used  many freely available sources to "
"write these chapters, it  seems only fair  to give the work  back to the  "
"Linux community. This work is  based on the 2.2.*  kernel version and the  "
"upcoming 2.4.*. I'm afraid it's still far from complete, but we  hope it "
"will be useful. As far as we know, it is the first 'all-in-one' document "
"about the /proc file system. It is focused  on the Intel  x86 hardware,  so "
"if you  are looking for  PPC, ARM, SPARC, AXP, etc., features, you probably  "
"won't find what you are looking for. It also only covers IPv4 networking, "
"not IPv6 nor other protocols - sorry. But additions and patches  are welcome "
"and will  be added to this  document if you mail them to Bodo."
msgstr ""

#: ../../../filesystems/proc.rst:77
msgid ""
"We'd like  to  thank Alan Cox, Rik van Riel, and Alexey Kuznetsov and a lot "
"of other people for help compiling this documentation. We'd also like to "
"extend a special thank  you to Andi Kleen for documentation, which we relied "
"on heavily to create  this  document,  as well as the additional information "
"he provided. Thanks to  everybody  else  who contributed source or docs to "
"the Linux kernel and helped create a great piece of software... :)"
msgstr ""

#: ../../../filesystems/proc.rst:84
msgid ""
"If you  have  any comments, corrections or additions, please don't hesitate "
"to contact Bodo  Bauer  at  bb@ricochet.net.  We'll  be happy to add them to "
"this document."
msgstr ""

#: ../../../filesystems/proc.rst:88
msgid ""
"The   latest   version    of   this   document   is    available   online   "
"at https://www.kernel.org/doc/html/latest/filesystems/proc.html"
msgstr ""

#: ../../../filesystems/proc.rst:91
msgid ""
"If  the above  direction does  not works  for you,  you could  try the  "
"kernel mailing  list  at  linux-kernel@vger.kernel.org  and/or try  to  "
"reach  me  at comandante@zaralinux.com."
msgstr ""

#: ../../../filesystems/proc.rst:96
msgid "0.2 Legal Stuff"
msgstr ""

#: ../../../filesystems/proc.rst:98
msgid ""
"We don't  guarantee  the  correctness  of this document, and if you come to "
"us complaining about  how  you  screwed  up  your  system  because  of  "
"incorrect documentation, we won't feel responsible..."
msgstr ""

#: ../../../filesystems/proc.rst:103
msgid "Chapter 1: Collecting System Information"
msgstr ""

#: ../../../filesystems/proc.rst:106 ../../../filesystems/proc.rst:1690
msgid "In This Chapter"
msgstr ""

#: ../../../filesystems/proc.rst:107
msgid ""
"Investigating  the  properties  of  the  pseudo  file  system  /proc and its "
"ability to provide information on the running Linux system"
msgstr ""

#: ../../../filesystems/proc.rst:109
msgid "Examining /proc's structure"
msgstr ""

#: ../../../filesystems/proc.rst:110
msgid ""
"Uncovering  various  information  about the kernel and the processes running "
"on the system"
msgstr ""

#: ../../../filesystems/proc.rst:115
msgid ""
"The proc  file  system acts as an interface to internal data structures in "
"the kernel. It  can  be  used to obtain information about the system and to "
"change certain kernel parameters at runtime (sysctl)."
msgstr ""

#: ../../../filesystems/proc.rst:119
msgid ""
"First, we'll  take  a  look  at the read-only parts of /proc. In Chapter 2, "
"we show you how you can use /proc/sys to change settings."
msgstr ""

#: ../../../filesystems/proc.rst:123
msgid "1.1 Process-Specific Subdirectories"
msgstr ""

#: ../../../filesystems/proc.rst:125
msgid ""
"The directory  /proc  contains  (among other things) one subdirectory for "
"each process running on the system, which is named after the process ID "
"(PID)."
msgstr ""

#: ../../../filesystems/proc.rst:128
msgid ""
"The link  'self'  points to  the process reading the file system. Each "
"process subdirectory has the entries listed in Table 1-1."
msgstr ""

#: ../../../filesystems/proc.rst:131
msgid ""
"A process can read its own information from /proc/PID/* with no extra "
"permissions. When reading /proc/PID/* information for other processes, "
"reading process is required to have either CAP_SYS_PTRACE capability with "
"PTRACE_MODE_READ access permissions, or, alternatively, CAP_PERFMON "
"capability. This applies to all read-only information like `maps`, "
"`environ`, `pagemap`, etc. The only exception is `mem` file due to its read-"
"write nature, which requires CAP_SYS_PTRACE capabilities with more elevated "
"PTRACE_MODE_ATTACH permissions; CAP_PERFMON capability does not grant access "
"to /proc/PID/mem for other processes."
msgstr ""

#: ../../../filesystems/proc.rst:141
msgid ""
"Note that an open file descriptor to /proc/<pid> or to any of its contained "
"files or subdirectories does not prevent <pid> being reused for some other "
"process in the event that <pid> exits. Operations on open /proc/<pid> file "
"descriptors corresponding to dead processes never act on any new process "
"that the kernel may, through chance, have also assigned the process ID "
"<pid>. Instead, operations on these FDs usually fail with ESRCH."
msgstr ""

#: ../../../filesystems/proc.rst:149
msgid "Table 1-1: Process specific entries in /proc"
msgstr ""

#: ../../../filesystems/proc.rst:152 ../../../filesystems/proc.rst:734
#: ../../../filesystems/proc.rst:1362 ../../../filesystems/proc.rst:1378
#: ../../../filesystems/proc.rst:1507 ../../../filesystems/proc.rst:1530
#: ../../../filesystems/proc.rst:1641
msgid "File"
msgstr ""

#: ../../../filesystems/proc.rst:152 ../../../filesystems/proc.rst:250
#: ../../../filesystems/proc.rst:324 ../../../filesystems/proc.rst:342
#: ../../../filesystems/proc.rst:734 ../../../filesystems/proc.rst:1362
#: ../../../filesystems/proc.rst:1378 ../../../filesystems/proc.rst:1507
#: ../../../filesystems/proc.rst:1530 ../../../filesystems/proc.rst:1641
msgid "Content"
msgstr ""

#: ../../../filesystems/proc.rst:154
msgid "clear_refs"
msgstr ""

#: ../../../filesystems/proc.rst:154
msgid "Clears page referenced bits shown in smaps output"
msgstr ""

#: ../../../filesystems/proc.rst:155 ../../../filesystems/proc.rst:745
msgid "cmdline"
msgstr ""

#: ../../../filesystems/proc.rst:155
msgid "Command line arguments"
msgstr ""

#: ../../../filesystems/proc.rst:156
msgid "cpu"
msgstr ""

#: ../../../filesystems/proc.rst:156
msgid "Current and last cpu in which it was executed   (2.4)(smp)"
msgstr ""

#: ../../../filesystems/proc.rst:157
msgid "cwd"
msgstr ""

#: ../../../filesystems/proc.rst:157
msgid "Link to the current working directory"
msgstr ""

#: ../../../filesystems/proc.rst:158
msgid "environ"
msgstr ""

#: ../../../filesystems/proc.rst:158
msgid "Values of environment variables"
msgstr ""

#: ../../../filesystems/proc.rst:159
msgid "exe"
msgstr ""

#: ../../../filesystems/proc.rst:159
msgid "Link to the executable of this process"
msgstr ""

#: ../../../filesystems/proc.rst:160
msgid "fd"
msgstr ""

#: ../../../filesystems/proc.rst:160
msgid "Directory, which contains all file descriptors"
msgstr ""

#: ../../../filesystems/proc.rst:161
msgid "maps"
msgstr ""

#: ../../../filesystems/proc.rst:161
msgid "Memory maps to executables and library files    (2.4)"
msgstr ""

#: ../../../filesystems/proc.rst:162
msgid "mem"
msgstr ""

#: ../../../filesystems/proc.rst:162
msgid "Memory held by this process"
msgstr ""

#: ../../../filesystems/proc.rst:163
msgid "root"
msgstr ""

#: ../../../filesystems/proc.rst:163
msgid "Link to the root directory of this process"
msgstr ""

#: ../../../filesystems/proc.rst:164 ../../../filesystems/proc.rst:786
msgid "stat"
msgstr ""

#: ../../../filesystems/proc.rst:164
msgid "Process status"
msgstr ""

#: ../../../filesystems/proc.rst:165
msgid "statm"
msgstr ""

#: ../../../filesystems/proc.rst:165
msgid "Process memory status information"
msgstr ""

#: ../../../filesystems/proc.rst:166
msgid "status"
msgstr ""

#: ../../../filesystems/proc.rst:166
msgid "Process status in human readable form"
msgstr ""

#: ../../../filesystems/proc.rst:167
msgid "wchan"
msgstr ""

#: ../../../filesystems/proc.rst:167
msgid ""
"Present with CONFIG_KALLSYMS=y: it shows the kernel function symbol the task "
"is blocked in - or \"0\" if not blocked."
msgstr ""

#: ../../../filesystems/proc.rst:169
msgid "pagemap"
msgstr ""

#: ../../../filesystems/proc.rst:169
msgid "Page table"
msgstr ""

#: ../../../filesystems/proc.rst:170
msgid "stack"
msgstr ""

#: ../../../filesystems/proc.rst:170
msgid "Report full stack trace, enable via CONFIG_STACKTRACE"
msgstr ""

#: ../../../filesystems/proc.rst:171
msgid "smaps"
msgstr ""

#: ../../../filesystems/proc.rst:171
msgid ""
"An extension based on maps, showing the memory consumption of each mapping "
"and flags associated with it"
msgstr ""

#: ../../../filesystems/proc.rst:173
msgid "smaps_rollup"
msgstr ""

#: ../../../filesystems/proc.rst:173
msgid ""
"Accumulated smaps stats for all mappings of the process.  This can be "
"derived from smaps, but is faster and more convenient"
msgstr ""

#: ../../../filesystems/proc.rst:175
msgid "numa_maps"
msgstr ""

#: ../../../filesystems/proc.rst:175
msgid ""
"An extension based on maps, showing the memory locality and binding policy "
"as well as mem usage (in pages) of each mapping."
msgstr ""

#: ../../../filesystems/proc.rst:179
msgid ""
"For example, to get the status information of a process, all you have to do "
"is read the file /proc/PID/status::"
msgstr ""

#: ../../../filesystems/proc.rst:230
msgid ""
"This shows you nearly the same information you would get if you viewed it "
"with the ps  command.  In  fact,  ps  uses  the  proc  file  system  to  "
"obtain its information.  But you get a more detailed  view of the  process "
"by reading the file /proc/PID/status. It fields are described in table 1-2."
msgstr ""

#: ../../../filesystems/proc.rst:235
msgid ""
"The  statm  file  contains  more  detailed  information about the process "
"memory usage. Its seven fields are explained in Table 1-3.  The stat file "
"contains detailed information about the process itself.  Its fields are "
"explained in Table 1-4."
msgstr ""

#: ../../../filesystems/proc.rst:240
msgid "(for SMP CONFIG users)"
msgstr ""

#: ../../../filesystems/proc.rst:242
msgid ""
"For making accounting scalable, RSS related information are handled in an "
"asynchronous manner and the value may not be very precise. To see a precise "
"snapshot of a moment, you can see /proc/<pid>/smaps file and scan page "
"table. It's slow but very precise."
msgstr ""

#: ../../../filesystems/proc.rst:247
msgid "Table 1-2: Contents of the status fields (as of 4.19)"
msgstr ""

#: ../../../filesystems/proc.rst:250 ../../../filesystems/proc.rst:324
#: ../../../filesystems/proc.rst:342
msgid "Field"
msgstr ""

#: ../../../filesystems/proc.rst:252
msgid "Name"
msgstr ""

#: ../../../filesystems/proc.rst:252 ../../../filesystems/proc.rst:345
msgid "filename of the executable"
msgstr ""

#: ../../../filesystems/proc.rst:253
msgid "Umask"
msgstr ""

#: ../../../filesystems/proc.rst:253
msgid "file mode creation mask"
msgstr ""

#: ../../../filesystems/proc.rst:254
msgid "State"
msgstr ""

#: ../../../filesystems/proc.rst:254 ../../../filesystems/proc.rst:346
msgid ""
"state (R is running, S is sleeping, D is sleeping in an uninterruptible "
"wait, Z is zombie, T is traced or stopped)"
msgstr ""

#: ../../../filesystems/proc.rst:257
msgid "Tgid"
msgstr ""

#: ../../../filesystems/proc.rst:257
msgid "thread group ID"
msgstr ""

#: ../../../filesystems/proc.rst:258
msgid "Ngid"
msgstr ""

#: ../../../filesystems/proc.rst:258
msgid "NUMA group ID (0 if none)"
msgstr ""

#: ../../../filesystems/proc.rst:259
msgid "Pid"
msgstr ""

#: ../../../filesystems/proc.rst:259 ../../../filesystems/proc.rst:344
msgid "process id"
msgstr ""

#: ../../../filesystems/proc.rst:260
msgid "PPid"
msgstr ""

#: ../../../filesystems/proc.rst:260 ../../../filesystems/proc.rst:348
msgid "process id of the parent process"
msgstr ""

#: ../../../filesystems/proc.rst:261
msgid "TracerPid"
msgstr ""

#: ../../../filesystems/proc.rst:261
msgid ""
"PID of process tracing this process (0 if not, or the tracer is outside of "
"the current pid namespace)"
msgstr ""

#: ../../../filesystems/proc.rst:263
msgid "Uid"
msgstr ""

#: ../../../filesystems/proc.rst:263
msgid "Real, effective, saved set, and  file system UIDs"
msgstr ""

#: ../../../filesystems/proc.rst:264
msgid "Gid"
msgstr ""

#: ../../../filesystems/proc.rst:264
msgid "Real, effective, saved set, and  file system GIDs"
msgstr ""

#: ../../../filesystems/proc.rst:265
msgid "FDSize"
msgstr ""

#: ../../../filesystems/proc.rst:265
msgid "number of file descriptor slots currently allocated"
msgstr ""

#: ../../../filesystems/proc.rst:266
msgid "Groups"
msgstr ""

#: ../../../filesystems/proc.rst:266
msgid "supplementary group list"
msgstr ""

#: ../../../filesystems/proc.rst:267
msgid "NStgid"
msgstr ""

#: ../../../filesystems/proc.rst:267
msgid "descendant namespace thread group ID hierarchy"
msgstr ""

#: ../../../filesystems/proc.rst:268
msgid "NSpid"
msgstr ""

#: ../../../filesystems/proc.rst:268
msgid "descendant namespace process ID hierarchy"
msgstr ""

#: ../../../filesystems/proc.rst:269
msgid "NSpgid"
msgstr ""

#: ../../../filesystems/proc.rst:269
msgid "descendant namespace process group ID hierarchy"
msgstr ""

#: ../../../filesystems/proc.rst:270
msgid "NSsid"
msgstr ""

#: ../../../filesystems/proc.rst:270
msgid "descendant namespace session ID hierarchy"
msgstr ""

#: ../../../filesystems/proc.rst:271
msgid "Kthread"
msgstr ""

#: ../../../filesystems/proc.rst:271
msgid "kernel thread flag, 1 is yes, 0 is no"
msgstr ""

#: ../../../filesystems/proc.rst:272
msgid "VmPeak"
msgstr ""

#: ../../../filesystems/proc.rst:272
msgid "peak virtual memory size"
msgstr ""

#: ../../../filesystems/proc.rst:273
msgid "VmSize"
msgstr ""

#: ../../../filesystems/proc.rst:273
msgid "total program size"
msgstr ""

#: ../../../filesystems/proc.rst:274
msgid "VmLck"
msgstr ""

#: ../../../filesystems/proc.rst:274
msgid "locked memory size"
msgstr ""

#: ../../../filesystems/proc.rst:275
msgid "VmPin"
msgstr ""

#: ../../../filesystems/proc.rst:275
msgid "pinned memory size"
msgstr ""

#: ../../../filesystems/proc.rst:276
msgid "VmHWM"
msgstr ""

#: ../../../filesystems/proc.rst:276
msgid "peak resident set size (\"high water mark\")"
msgstr ""

#: ../../../filesystems/proc.rst:277
msgid "VmRSS"
msgstr ""

#: ../../../filesystems/proc.rst:277
msgid ""
"size of memory portions. It contains the three following parts (VmRSS = "
"RssAnon + RssFile + RssShmem)"
msgstr ""

#: ../../../filesystems/proc.rst:280
msgid "RssAnon"
msgstr ""

#: ../../../filesystems/proc.rst:280
msgid "size of resident anonymous memory"
msgstr ""

#: ../../../filesystems/proc.rst:281
msgid "RssFile"
msgstr ""

#: ../../../filesystems/proc.rst:281
msgid "size of resident file mappings"
msgstr ""

#: ../../../filesystems/proc.rst:282
msgid "RssShmem"
msgstr ""

#: ../../../filesystems/proc.rst:282
msgid ""
"size of resident shmem memory (includes SysV shm, mapping of tmpfs and "
"shared anonymous mappings)"
msgstr ""

#: ../../../filesystems/proc.rst:284
msgid "VmData"
msgstr ""

#: ../../../filesystems/proc.rst:284
msgid "size of private data segments"
msgstr ""

#: ../../../filesystems/proc.rst:285
msgid "VmStk"
msgstr ""

#: ../../../filesystems/proc.rst:285
msgid "size of stack segments"
msgstr ""

#: ../../../filesystems/proc.rst:286
msgid "VmExe"
msgstr ""

#: ../../../filesystems/proc.rst:286
msgid "size of text segment"
msgstr ""

#: ../../../filesystems/proc.rst:287
msgid "VmLib"
msgstr ""

#: ../../../filesystems/proc.rst:287
msgid "size of shared library code"
msgstr ""

#: ../../../filesystems/proc.rst:288
msgid "VmPTE"
msgstr ""

#: ../../../filesystems/proc.rst:288
msgid "size of page table entries"
msgstr ""

#: ../../../filesystems/proc.rst:289
msgid "VmSwap"
msgstr ""

#: ../../../filesystems/proc.rst:289
msgid ""
"amount of swap used by anonymous private data (shmem swap usage is not "
"included)"
msgstr ""

#: ../../../filesystems/proc.rst:291
msgid "HugetlbPages"
msgstr ""

#: ../../../filesystems/proc.rst:291
msgid "size of hugetlb memory portions"
msgstr ""

#: ../../../filesystems/proc.rst:292
msgid "CoreDumping"
msgstr ""

#: ../../../filesystems/proc.rst:292
msgid ""
"process's memory is currently being dumped (killing the process may lead to "
"a corrupted core)"
msgstr ""

#: ../../../filesystems/proc.rst:294
msgid "THP_enabled"
msgstr ""

#: ../../../filesystems/proc.rst:294
msgid ""
"process is allowed to use THP (returns 0 when PR_SET_THP_DISABLE is set on "
"the process"
msgstr ""

#: ../../../filesystems/proc.rst:296
msgid "Threads"
msgstr ""

#: ../../../filesystems/proc.rst:296 ../../../filesystems/proc.rst:364
msgid "number of threads"
msgstr ""

#: ../../../filesystems/proc.rst:297
msgid "SigQ"
msgstr ""

#: ../../../filesystems/proc.rst:297
msgid "number of signals queued/max. number for queue"
msgstr ""

#: ../../../filesystems/proc.rst:298
msgid "SigPnd"
msgstr ""

#: ../../../filesystems/proc.rst:298
msgid "bitmap of pending signals for the thread"
msgstr ""

#: ../../../filesystems/proc.rst:299
msgid "ShdPnd"
msgstr ""

#: ../../../filesystems/proc.rst:299
msgid "bitmap of shared pending signals for the process"
msgstr ""

#: ../../../filesystems/proc.rst:300
msgid "SigBlk"
msgstr ""

#: ../../../filesystems/proc.rst:300 ../../../filesystems/proc.rst:376
msgid "bitmap of blocked signals"
msgstr ""

#: ../../../filesystems/proc.rst:301
msgid "SigIgn"
msgstr ""

#: ../../../filesystems/proc.rst:301 ../../../filesystems/proc.rst:377
msgid "bitmap of ignored signals"
msgstr ""

#: ../../../filesystems/proc.rst:302
msgid "SigCgt"
msgstr ""

#: ../../../filesystems/proc.rst:302 ../../../filesystems/proc.rst:378
msgid "bitmap of caught signals"
msgstr ""

#: ../../../filesystems/proc.rst:303
msgid "CapInh"
msgstr ""

#: ../../../filesystems/proc.rst:303
msgid "bitmap of inheritable capabilities"
msgstr ""

#: ../../../filesystems/proc.rst:304
msgid "CapPrm"
msgstr ""

#: ../../../filesystems/proc.rst:304
msgid "bitmap of permitted capabilities"
msgstr ""

#: ../../../filesystems/proc.rst:305
msgid "CapEff"
msgstr ""

#: ../../../filesystems/proc.rst:305
msgid "bitmap of effective capabilities"
msgstr ""

#: ../../../filesystems/proc.rst:306
msgid "CapBnd"
msgstr ""

#: ../../../filesystems/proc.rst:306
msgid "bitmap of capabilities bounding set"
msgstr ""

#: ../../../filesystems/proc.rst:307
msgid "CapAmb"
msgstr ""

#: ../../../filesystems/proc.rst:307
msgid "bitmap of ambient capabilities"
msgstr ""

#: ../../../filesystems/proc.rst:308
msgid "NoNewPrivs"
msgstr ""

#: ../../../filesystems/proc.rst:308
msgid "no_new_privs, like prctl(PR_GET_NO_NEW_PRIV, ...)"
msgstr ""

#: ../../../filesystems/proc.rst:309
msgid "Seccomp"
msgstr ""

#: ../../../filesystems/proc.rst:309
msgid "seccomp mode, like prctl(PR_GET_SECCOMP, ...)"
msgstr ""

#: ../../../filesystems/proc.rst:310
msgid "Speculation_Store_Bypass"
msgstr ""

#: ../../../filesystems/proc.rst:310
msgid "speculative store bypass mitigation status"
msgstr ""

#: ../../../filesystems/proc.rst:311
msgid "SpeculationIndirectBranch"
msgstr ""

#: ../../../filesystems/proc.rst:311
msgid "indirect branch speculation mode"
msgstr ""

#: ../../../filesystems/proc.rst:312
msgid "Cpus_allowed"
msgstr ""

#: ../../../filesystems/proc.rst:312
msgid "mask of CPUs on which this process may run"
msgstr ""

#: ../../../filesystems/proc.rst:313
msgid "Cpus_allowed_list"
msgstr ""

#: ../../../filesystems/proc.rst:313 ../../../filesystems/proc.rst:315
msgid "Same as previous, but in \"list format\""
msgstr ""

#: ../../../filesystems/proc.rst:314
msgid "Mems_allowed"
msgstr ""

#: ../../../filesystems/proc.rst:314
msgid "mask of memory nodes allowed to this process"
msgstr ""

#: ../../../filesystems/proc.rst:315
msgid "Mems_allowed_list"
msgstr ""

#: ../../../filesystems/proc.rst:316
msgid "voluntary_ctxt_switches"
msgstr ""

#: ../../../filesystems/proc.rst:316
msgid "number of voluntary context switches"
msgstr ""

#: ../../../filesystems/proc.rst:317
msgid "nonvoluntary_ctxt_switches"
msgstr ""

#: ../../../filesystems/proc.rst:317
msgid "number of non voluntary context switches"
msgstr ""

#: ../../../filesystems/proc.rst:321
msgid "Table 1-3: Contents of the statm fields (as of 2.6.8-rc3)"
msgstr ""

#: ../../../filesystems/proc.rst:326
msgid "size"
msgstr ""

#: ../../../filesystems/proc.rst:326
msgid "total program size (pages)"
msgstr ""

#: ../../../filesystems/proc.rst:326
msgid "(same as VmSize in status)"
msgstr ""

#: ../../../filesystems/proc.rst:327
msgid "resident"
msgstr ""

#: ../../../filesystems/proc.rst:327
msgid "size of memory portions (pages)"
msgstr ""

#: ../../../filesystems/proc.rst:327
msgid "(same as VmRSS in status)"
msgstr ""

#: ../../../filesystems/proc.rst:328 ../../../filesystems/proc.rst:580
msgid "shared"
msgstr ""

#: ../../../filesystems/proc.rst:328
msgid "number of pages that are shared"
msgstr ""

#: ../../../filesystems/proc.rst:328
msgid "(i.e. backed by a file, same as RssFile+RssShmem in status)"
msgstr ""

#: ../../../filesystems/proc.rst:330
msgid "trs"
msgstr ""

#: ../../../filesystems/proc.rst:330
msgid "number of pages that are 'code'"
msgstr ""

#: ../../../filesystems/proc.rst:330
msgid "(not including libs; broken, includes data segment)"
msgstr ""

#: ../../../filesystems/proc.rst:332
msgid "lrs"
msgstr ""

#: ../../../filesystems/proc.rst:332
msgid "number of pages of library"
msgstr ""

#: ../../../filesystems/proc.rst:332 ../../../filesystems/proc.rst:335
msgid "(always 0 on 2.6)"
msgstr ""

#: ../../../filesystems/proc.rst:333
msgid "drs"
msgstr ""

#: ../../../filesystems/proc.rst:333
msgid "number of pages of data/stack"
msgstr ""

#: ../../../filesystems/proc.rst:333
msgid "(including libs; broken, includes library text)"
msgstr ""

#: ../../../filesystems/proc.rst:335
msgid "dt"
msgstr ""

#: ../../../filesystems/proc.rst:335
msgid "number of dirty pages"
msgstr ""

#: ../../../filesystems/proc.rst:339
msgid "Table 1-4: Contents of the stat fields (as of 2.6.30-rc7)"
msgstr ""

#: ../../../filesystems/proc.rst:344
msgid "pid"
msgstr ""

#: ../../../filesystems/proc.rst:345
msgid "tcomm"
msgstr ""

#: ../../../filesystems/proc.rst:346
msgid "state"
msgstr ""

#: ../../../filesystems/proc.rst:348
msgid "ppid"
msgstr ""

#: ../../../filesystems/proc.rst:349
msgid "pgrp"
msgstr ""

#: ../../../filesystems/proc.rst:349
msgid "pgrp of the process"
msgstr ""

#: ../../../filesystems/proc.rst:350
msgid "sid"
msgstr ""

#: ../../../filesystems/proc.rst:350
msgid "session id"
msgstr ""

#: ../../../filesystems/proc.rst:351
msgid "tty_nr"
msgstr ""

#: ../../../filesystems/proc.rst:351
msgid "tty the process uses"
msgstr ""

#: ../../../filesystems/proc.rst:352
msgid "tty_pgrp"
msgstr ""

#: ../../../filesystems/proc.rst:352
msgid "pgrp of the tty"
msgstr ""

#: ../../../filesystems/proc.rst:353 ../../../filesystems/proc.rst:1665
msgid "flags"
msgstr ""

#: ../../../filesystems/proc.rst:353
msgid "task flags"
msgstr ""

#: ../../../filesystems/proc.rst:354
msgid "min_flt"
msgstr ""

#: ../../../filesystems/proc.rst:354
msgid "number of minor faults"
msgstr ""

#: ../../../filesystems/proc.rst:355
msgid "cmin_flt"
msgstr ""

#: ../../../filesystems/proc.rst:355
msgid "number of minor faults with child's"
msgstr ""

#: ../../../filesystems/proc.rst:356
msgid "maj_flt"
msgstr ""

#: ../../../filesystems/proc.rst:356
msgid "number of major faults"
msgstr ""

#: ../../../filesystems/proc.rst:357
msgid "cmaj_flt"
msgstr ""

#: ../../../filesystems/proc.rst:357
msgid "number of major faults with child's"
msgstr ""

#: ../../../filesystems/proc.rst:358
msgid "utime"
msgstr ""

#: ../../../filesystems/proc.rst:358
msgid "user mode jiffies"
msgstr ""

#: ../../../filesystems/proc.rst:359
msgid "stime"
msgstr ""

#: ../../../filesystems/proc.rst:359
msgid "kernel mode jiffies"
msgstr ""

#: ../../../filesystems/proc.rst:360
msgid "cutime"
msgstr ""

#: ../../../filesystems/proc.rst:360
msgid "user mode jiffies with child's"
msgstr ""

#: ../../../filesystems/proc.rst:361
msgid "cstime"
msgstr ""

#: ../../../filesystems/proc.rst:361
msgid "kernel mode jiffies with child's"
msgstr ""

#: ../../../filesystems/proc.rst:362
msgid "priority"
msgstr ""

#: ../../../filesystems/proc.rst:362
msgid "priority level"
msgstr ""

#: ../../../filesystems/proc.rst:363
msgid "nice"
msgstr ""

#: ../../../filesystems/proc.rst:363
msgid "nice level"
msgstr ""

#: ../../../filesystems/proc.rst:364
msgid "num_threads"
msgstr ""

#: ../../../filesystems/proc.rst:365
msgid "it_real_value"
msgstr ""

#: ../../../filesystems/proc.rst:365
msgid "(obsolete, always 0)"
msgstr ""

#: ../../../filesystems/proc.rst:366
msgid "start_time"
msgstr ""

#: ../../../filesystems/proc.rst:366
msgid "time the process started after system boot"
msgstr ""

#: ../../../filesystems/proc.rst:367
msgid "vsize"
msgstr ""

#: ../../../filesystems/proc.rst:367
msgid "virtual memory size"
msgstr ""

#: ../../../filesystems/proc.rst:368
msgid "rss"
msgstr ""

#: ../../../filesystems/proc.rst:368
msgid "resident set memory size"
msgstr ""

#: ../../../filesystems/proc.rst:369
msgid "rsslim"
msgstr ""

#: ../../../filesystems/proc.rst:369
msgid "current limit in bytes on the rss"
msgstr ""

#: ../../../filesystems/proc.rst:370
msgid "start_code"
msgstr ""

#: ../../../filesystems/proc.rst:370
msgid "address above which program text can run"
msgstr ""

#: ../../../filesystems/proc.rst:371
msgid "end_code"
msgstr ""

#: ../../../filesystems/proc.rst:371
msgid "address below which program text can run"
msgstr ""

#: ../../../filesystems/proc.rst:372
msgid "start_stack"
msgstr ""

#: ../../../filesystems/proc.rst:372
msgid "address of the start of the main process stack"
msgstr ""

#: ../../../filesystems/proc.rst:373
msgid "esp"
msgstr ""

#: ../../../filesystems/proc.rst:373
msgid "current value of ESP"
msgstr ""

#: ../../../filesystems/proc.rst:374
msgid "eip"
msgstr ""

#: ../../../filesystems/proc.rst:374
msgid "current value of EIP"
msgstr ""

#: ../../../filesystems/proc.rst:375
msgid "pending"
msgstr ""

#: ../../../filesystems/proc.rst:375
msgid "bitmap of pending signals"
msgstr ""

#: ../../../filesystems/proc.rst:376
msgid "blocked"
msgstr ""

#: ../../../filesystems/proc.rst:377
msgid "sigign"
msgstr ""

#: ../../../filesystems/proc.rst:378
msgid "sigcatch"
msgstr ""

#: ../../../filesystems/proc.rst:379 ../../../filesystems/proc.rst:381
#: ../../../filesystems/proc.rst:382
msgid "0"
msgstr ""

#: ../../../filesystems/proc.rst:379
msgid ""
"(place holder, used to be the wchan address, use /proc/PID/wchan instead)"
msgstr ""

#: ../../../filesystems/proc.rst:381 ../../../filesystems/proc.rst:382
msgid "(place holder)"
msgstr ""

#: ../../../filesystems/proc.rst:383
msgid "exit_signal"
msgstr ""

#: ../../../filesystems/proc.rst:383
msgid "signal to send to parent thread on exit"
msgstr ""

#: ../../../filesystems/proc.rst:384
msgid "task_cpu"
msgstr ""

#: ../../../filesystems/proc.rst:384
msgid "which CPU the task is scheduled on"
msgstr ""

#: ../../../filesystems/proc.rst:385
msgid "rt_priority"
msgstr ""

#: ../../../filesystems/proc.rst:385
msgid "realtime priority"
msgstr ""

#: ../../../filesystems/proc.rst:386
msgid "policy"
msgstr ""

#: ../../../filesystems/proc.rst:386
msgid "scheduling policy (man sched_setscheduler)"
msgstr ""

#: ../../../filesystems/proc.rst:387
msgid "blkio_ticks"
msgstr ""

#: ../../../filesystems/proc.rst:387
msgid "time spent waiting for block IO"
msgstr ""

#: ../../../filesystems/proc.rst:388
msgid "gtime"
msgstr ""

#: ../../../filesystems/proc.rst:388
msgid "guest time of the task in jiffies"
msgstr ""

#: ../../../filesystems/proc.rst:389
msgid "cgtime"
msgstr ""

#: ../../../filesystems/proc.rst:389
msgid "guest time of the task children in jiffies"
msgstr ""

#: ../../../filesystems/proc.rst:390
msgid "start_data"
msgstr ""

#: ../../../filesystems/proc.rst:390
msgid "address above which program data+bss is placed"
msgstr ""

#: ../../../filesystems/proc.rst:391
msgid "end_data"
msgstr ""

#: ../../../filesystems/proc.rst:391
msgid "address below which program data+bss is placed"
msgstr ""

#: ../../../filesystems/proc.rst:392
msgid "start_brk"
msgstr ""

#: ../../../filesystems/proc.rst:392
msgid "address above which program heap can be expanded with brk()"
msgstr ""

#: ../../../filesystems/proc.rst:393
msgid "arg_start"
msgstr ""

#: ../../../filesystems/proc.rst:393
msgid "address above which program command line is placed"
msgstr ""

#: ../../../filesystems/proc.rst:394
msgid "arg_end"
msgstr ""

#: ../../../filesystems/proc.rst:394
msgid "address below which program command line is placed"
msgstr ""

#: ../../../filesystems/proc.rst:395
msgid "env_start"
msgstr ""

#: ../../../filesystems/proc.rst:395
msgid "address above which program environment is placed"
msgstr ""

#: ../../../filesystems/proc.rst:396
msgid "env_end"
msgstr ""

#: ../../../filesystems/proc.rst:396
msgid "address below which program environment is placed"
msgstr ""

#: ../../../filesystems/proc.rst:397
msgid "exit_code"
msgstr ""

#: ../../../filesystems/proc.rst:397
msgid "the thread's exit_code in the form reported by the waitpid system call"
msgstr ""

#: ../../../filesystems/proc.rst:401
msgid ""
"The /proc/PID/maps file contains the currently mapped memory regions and "
"their access permissions."
msgstr ""

#: ../../../filesystems/proc.rst:404
msgid "The format is::"
msgstr ""

#: ../../../filesystems/proc.rst:429
msgid ""
"where \"address\" is the address space in the process that it occupies, "
"\"perms\" is a set of permissions::"
msgstr ""

#: ../../../filesystems/proc.rst:438
msgid ""
"\"offset\" is the offset into the mapping, \"dev\" is the device (major:"
"minor), and \"inode\" is the inode  on that device.  0 indicates that  no "
"inode is associated with the memory region, as the case would be with BSS "
"(uninitialized data). The \"pathname\" shows the name associated file for "
"this mapping.  If the mapping is not associated with a file:"
msgstr ""

#: ../../../filesystems/proc.rst:445
msgid "[heap]"
msgstr ""

#: ../../../filesystems/proc.rst:445
msgid "the heap of the program"
msgstr ""

#: ../../../filesystems/proc.rst:446
msgid "[stack]"
msgstr ""

#: ../../../filesystems/proc.rst:446
msgid "the stack of the main process"
msgstr ""

#: ../../../filesystems/proc.rst:447
msgid "[vdso]"
msgstr ""

#: ../../../filesystems/proc.rst:447
msgid "the \"virtual dynamic shared object\", the kernel system call handler"
msgstr ""

#: ../../../filesystems/proc.rst:449
msgid "[anon:<name>]"
msgstr ""

#: ../../../filesystems/proc.rst:449
msgid "a private anonymous mapping that has been named by userspace"
msgstr ""

#: ../../../filesystems/proc.rst:451
msgid "[anon_shmem:<name>]"
msgstr ""

#: ../../../filesystems/proc.rst:451
msgid "an anonymous shared memory mapping that has been named by userspace"
msgstr ""

#: ../../../filesystems/proc.rst:455
msgid "or if empty, the mapping is anonymous."
msgstr ""

#: ../../../filesystems/proc.rst:457
msgid ""
"Starting with 6.11 kernel, /proc/PID/maps provides an alternative ioctl()-"
"based API that gives ability to flexibly and efficiently query and filter "
"individual VMAs. This interface is binary and is meant for more efficient "
"and easy programmatic use. `struct procmap_query`, defined in linux/fs.h "
"UAPI header, serves as an input/output argument to the `PROCMAP_QUERY` "
"ioctl() command. See comments in linus/fs.h UAPI header for details on query "
"semantics, supported flags, data returned, and general API usage information."
msgstr ""

#: ../../../filesystems/proc.rst:466
msgid ""
"The /proc/PID/smaps is an extension based on maps, showing the memory "
"consumption for each of the process's mappings. For each mapping (aka "
"Virtual Memory Area, or VMA) there is a series of lines such as the "
"following::"
msgstr ""

#: ../../../filesystems/proc.rst:498
msgid ""
"The first of these lines shows the same information as is displayed for the "
"mapping in /proc/PID/maps.  Following lines show the size of the mapping "
"(size); the size of each page allocated when backing a VMA (KernelPageSize), "
"which is usually the same as the size in the page table entries; the page "
"size used by the MMU when backing a VMA (in most cases, the same as "
"KernelPageSize); the amount of the mapping that is currently resident in RAM "
"(RSS); the process's proportional share of this mapping (PSS); and the "
"number of clean and dirty shared and private pages in the mapping."
msgstr ""

#: ../../../filesystems/proc.rst:508
msgid ""
"The \"proportional set size\" (PSS) of a process is the count of pages it "
"has in memory, where each page is divided by the number of processes sharing "
"it. So if a process has 1000 pages all to itself, and 1000 shared with one "
"other process, its PSS will be 1500.  \"Pss_Dirty\" is the portion of PSS "
"which consists of dirty pages.  (\"Pss_Clean\" is not included, but it can "
"be calculated by subtracting \"Pss_Dirty\" from \"Pss\".)"
msgstr ""

#: ../../../filesystems/proc.rst:515
msgid ""
"Traditionally, a page is accounted as \"private\" if it is mapped exactly "
"once, and a page is accounted as \"shared\" when mapped multiple times, even "
"when mapped in the same process multiple times. Note that this accounting is "
"independent of MAP_SHARED."
msgstr ""

#: ../../../filesystems/proc.rst:520
msgid ""
"In some kernel configurations, the semantics of pages part of a larger "
"allocation (e.g., THP) can differ: a page is accounted as \"private\" if all "
"pages part of the corresponding large allocation are *certainly* mapped in "
"the same process, even if the page is mapped multiple times in that process. "
"A page is accounted as \"shared\" if any page page of the larger allocation "
"is *maybe* mapped in a different process. In some cases, a large allocation "
"might be treated as \"maybe mapped by multiple processes\" even though this "
"is no longer the case."
msgstr ""

#: ../../../filesystems/proc.rst:529
msgid ""
"Some kernel configurations do not track the precise number of times a page "
"part of a larger allocation is mapped. In this case, when calculating the "
"PSS, the average number of mappings per page in this larger allocation might "
"be used as an approximation for the number of mappings of a page. The PSS "
"calculation will be imprecise in this case."
msgstr ""

#: ../../../filesystems/proc.rst:535
msgid ""
"\"Referenced\" indicates the amount of memory currently marked as referenced "
"or accessed."
msgstr ""

#: ../../../filesystems/proc.rst:538
msgid ""
"\"Anonymous\" shows the amount of memory that does not belong to any file.  "
"Even a mapping associated with a file may contain anonymous pages: when "
"MAP_PRIVATE and a page is modified, the file page is replaced by a private "
"anonymous copy."
msgstr ""

#: ../../../filesystems/proc.rst:542
msgid ""
"\"KSM\" reports how many of the pages are KSM pages. Note that KSM-placed "
"zeropages are not included, only actual KSM pages."
msgstr ""

#: ../../../filesystems/proc.rst:545
msgid ""
"\"LazyFree\" shows the amount of memory which is marked by "
"madvise(MADV_FREE). The memory isn't freed immediately with madvise(). It's "
"freed in memory pressure if the memory is clean. Please note that the "
"printed value might be lower than the real value due to optimizations used "
"in the current implementation. If this is not desirable please file a bug "
"report."
msgstr ""

#: ../../../filesystems/proc.rst:551
msgid ""
"\"AnonHugePages\" shows the amount of memory backed by transparent hugepage."
msgstr ""

#: ../../../filesystems/proc.rst:553
msgid ""
"\"ShmemPmdMapped\" shows the amount of shared (shmem/tmpfs) memory backed by "
"huge pages."
msgstr ""

#: ../../../filesystems/proc.rst:556
msgid ""
"\"Shared_Hugetlb\" and \"Private_Hugetlb\" show the amounts of memory backed "
"by hugetlbfs page which is *not* counted in \"RSS\" or \"PSS\" field for "
"historical reasons. And these are not included in {Shared,Private}_{Clean,"
"Dirty} field."
msgstr ""

#: ../../../filesystems/proc.rst:560
msgid ""
"\"Swap\" shows how much would-be-anonymous memory is also used, but out on "
"swap."
msgstr ""

#: ../../../filesystems/proc.rst:562
msgid ""
"For shmem mappings, \"Swap\" includes also the size of the mapped (and not "
"replaced by copy-on-write) part of the underlying shmem object out on swap. "
"\"SwapPss\" shows proportional swap share of this mapping. Unlike \"Swap\", "
"this does not take into account swapped out page of underlying shmem "
"objects. \"Locked\" indicates whether the mapping is locked in memory or not."
msgstr ""

#: ../../../filesystems/proc.rst:568
msgid ""
"\"THPeligible\" indicates whether the mapping is eligible for allocating "
"naturally aligned THP pages of any currently enabled size. 1 if true, 0 "
"otherwise."
msgstr ""

#: ../../../filesystems/proc.rst:572
msgid ""
"\"VmFlags\" field deserves a separate description. This member represents "
"the kernel flags associated with the particular virtual memory area in two "
"letter encoded manner. The codes are the following:"
msgstr ""

#: ../../../filesystems/proc.rst:577
msgid "rd"
msgstr ""

#: ../../../filesystems/proc.rst:577
msgid "readable"
msgstr ""

#: ../../../filesystems/proc.rst:578
msgid "wr"
msgstr ""

#: ../../../filesystems/proc.rst:578
msgid "writeable"
msgstr ""

#: ../../../filesystems/proc.rst:579
msgid "ex"
msgstr ""

#: ../../../filesystems/proc.rst:579
msgid "executable"
msgstr ""

#: ../../../filesystems/proc.rst:580
msgid "sh"
msgstr ""

#: ../../../filesystems/proc.rst:581
msgid "mr"
msgstr ""

#: ../../../filesystems/proc.rst:581
msgid "may read"
msgstr ""

#: ../../../filesystems/proc.rst:582
msgid "mw"
msgstr ""

#: ../../../filesystems/proc.rst:582
msgid "may write"
msgstr ""

#: ../../../filesystems/proc.rst:583
msgid "me"
msgstr ""

#: ../../../filesystems/proc.rst:583
msgid "may execute"
msgstr ""

#: ../../../filesystems/proc.rst:584
msgid "ms"
msgstr ""

#: ../../../filesystems/proc.rst:584
msgid "may share"
msgstr ""

#: ../../../filesystems/proc.rst:585
msgid "gd"
msgstr ""

#: ../../../filesystems/proc.rst:585
msgid "stack segment growns down"
msgstr ""

#: ../../../filesystems/proc.rst:586
msgid "pf"
msgstr ""

#: ../../../filesystems/proc.rst:586
msgid "pure PFN range"
msgstr ""

#: ../../../filesystems/proc.rst:587
msgid "lo"
msgstr ""

#: ../../../filesystems/proc.rst:587
msgid "pages are locked in memory"
msgstr ""

#: ../../../filesystems/proc.rst:588
msgid "io"
msgstr ""

#: ../../../filesystems/proc.rst:588
msgid "memory mapped I/O area"
msgstr ""

#: ../../../filesystems/proc.rst:589
msgid "sr"
msgstr ""

#: ../../../filesystems/proc.rst:589
msgid "sequential read advise provided"
msgstr ""

#: ../../../filesystems/proc.rst:590
msgid "rr"
msgstr ""

#: ../../../filesystems/proc.rst:590
msgid "random read advise provided"
msgstr ""

#: ../../../filesystems/proc.rst:591
msgid "dc"
msgstr ""

#: ../../../filesystems/proc.rst:591
msgid "do not copy area on fork"
msgstr ""

#: ../../../filesystems/proc.rst:592
msgid "de"
msgstr ""

#: ../../../filesystems/proc.rst:592
msgid "do not expand area on remapping"
msgstr ""

#: ../../../filesystems/proc.rst:593
msgid "ac"
msgstr ""

#: ../../../filesystems/proc.rst:593
msgid "area is accountable"
msgstr ""

#: ../../../filesystems/proc.rst:594
msgid "nr"
msgstr ""

#: ../../../filesystems/proc.rst:594
msgid "swap space is not reserved for the area"
msgstr ""

#: ../../../filesystems/proc.rst:595
msgid "ht"
msgstr ""

#: ../../../filesystems/proc.rst:595
msgid "area uses huge tlb pages"
msgstr ""

#: ../../../filesystems/proc.rst:596
msgid "sf"
msgstr ""

#: ../../../filesystems/proc.rst:596
msgid "synchronous page fault"
msgstr ""

#: ../../../filesystems/proc.rst:597
msgid "ar"
msgstr ""

#: ../../../filesystems/proc.rst:597
msgid "architecture specific flag"
msgstr ""

#: ../../../filesystems/proc.rst:598
msgid "wf"
msgstr ""

#: ../../../filesystems/proc.rst:598
msgid "wipe on fork"
msgstr ""

#: ../../../filesystems/proc.rst:599
msgid "dd"
msgstr ""

#: ../../../filesystems/proc.rst:599
msgid "do not include area into core dump"
msgstr ""

#: ../../../filesystems/proc.rst:600
msgid "sd"
msgstr ""

#: ../../../filesystems/proc.rst:600
msgid "soft dirty flag"
msgstr ""

#: ../../../filesystems/proc.rst:601
msgid "mm"
msgstr ""

#: ../../../filesystems/proc.rst:601
msgid "mixed map area"
msgstr ""

#: ../../../filesystems/proc.rst:602
msgid "hg"
msgstr ""

#: ../../../filesystems/proc.rst:602
msgid "huge page advise flag"
msgstr ""

#: ../../../filesystems/proc.rst:603
msgid "nh"
msgstr ""

#: ../../../filesystems/proc.rst:603
msgid "no huge page advise flag"
msgstr ""

#: ../../../filesystems/proc.rst:604
msgid "mg"
msgstr ""

#: ../../../filesystems/proc.rst:604
msgid "mergeable advise flag"
msgstr ""

#: ../../../filesystems/proc.rst:605
msgid "bt"
msgstr ""

#: ../../../filesystems/proc.rst:605
msgid "arm64 BTI guarded page"
msgstr ""

#: ../../../filesystems/proc.rst:606
msgid "mt"
msgstr ""

#: ../../../filesystems/proc.rst:606
msgid "arm64 MTE allocation tags are enabled"
msgstr ""

#: ../../../filesystems/proc.rst:607
msgid "um"
msgstr ""

#: ../../../filesystems/proc.rst:607
msgid "userfaultfd missing tracking"
msgstr ""

#: ../../../filesystems/proc.rst:608
msgid "uw"
msgstr ""

#: ../../../filesystems/proc.rst:608
msgid "userfaultfd wr-protect tracking"
msgstr ""

#: ../../../filesystems/proc.rst:609
msgid "ui"
msgstr ""

#: ../../../filesystems/proc.rst:609
msgid "userfaultfd minor fault"
msgstr ""

#: ../../../filesystems/proc.rst:610
msgid "ss"
msgstr ""

#: ../../../filesystems/proc.rst:610
msgid "shadow/guarded control stack page"
msgstr ""

#: ../../../filesystems/proc.rst:611
msgid "sl"
msgstr ""

#: ../../../filesystems/proc.rst:611
msgid "sealed"
msgstr ""

#: ../../../filesystems/proc.rst:612
msgid "lf"
msgstr ""

#: ../../../filesystems/proc.rst:612
msgid "lock on fault pages"
msgstr ""

#: ../../../filesystems/proc.rst:613
msgid "dp"
msgstr ""

#: ../../../filesystems/proc.rst:613
msgid "always lazily freeable mapping"
msgstr ""

#: ../../../filesystems/proc.rst:616
msgid ""
"Note that there is no guarantee that every flag and associated mnemonic will "
"be present in all further kernel releases. Things get changed, the flags may "
"be vanished or the reverse -- new added. Interpretation of their meaning "
"might change in future as well. So each consumer of these flags has to "
"follow each specific kernel version for the exact semantic."
msgstr ""

#: ../../../filesystems/proc.rst:622
msgid ""
"This file is only present if the CONFIG_MMU kernel configuration option is "
"enabled."
msgstr ""

#: ../../../filesystems/proc.rst:625
msgid ""
"Note: reading /proc/PID/maps or /proc/PID/smaps is inherently racy "
"(consistent output can be achieved only in the single read call)."
msgstr ""

#: ../../../filesystems/proc.rst:628
msgid ""
"This typically manifests when doing partial reads of these files while the "
"memory map is being modified.  Despite the races, we do provide the "
"following guarantees:"
msgstr ""

#: ../../../filesystems/proc.rst:632
msgid ""
"The mapped addresses never go backwards, which implies no two regions will "
"ever overlap."
msgstr ""

#: ../../../filesystems/proc.rst:634
msgid ""
"If there is something at a given vaddr during the entirety of the life of "
"the smaps/maps walk, there will be some output for it."
msgstr ""

#: ../../../filesystems/proc.rst:637
msgid ""
"The /proc/PID/smaps_rollup file includes the same fields as /proc/PID/smaps, "
"but their values are the sums of the corresponding values for all mappings "
"of the process.  Additionally, it contains these fields:"
msgstr ""

#: ../../../filesystems/proc.rst:641
msgid "Pss_Anon"
msgstr ""

#: ../../../filesystems/proc.rst:642
msgid "Pss_File"
msgstr ""

#: ../../../filesystems/proc.rst:643
msgid "Pss_Shmem"
msgstr ""

#: ../../../filesystems/proc.rst:645
msgid ""
"They represent the proportional shares of anonymous, file, and shmem pages, "
"as described for smaps above.  These fields are omitted in smaps since each "
"mapping identifies the type (anon, file, or shmem) of all pages it contains. "
"Thus all information in smaps_rollup can be derived from smaps, but at a "
"significantly higher cost."
msgstr ""

#: ../../../filesystems/proc.rst:651
msgid ""
"The /proc/PID/clear_refs is used to reset the PG_Referenced and ACCESSED/"
"YOUNG bits on both physical and virtual pages associated with a process, and "
"the soft-dirty bit on pte (see Documentation/admin-guide/mm/soft-dirty.rst "
"for details). To clear the bits for all the pages associated with the "
"process::"
msgstr ""

#: ../../../filesystems/proc.rst:659
msgid "To clear the bits for the anonymous pages associated with the process::"
msgstr ""

#: ../../../filesystems/proc.rst:663
msgid ""
"To clear the bits for the file mapped pages associated with the process::"
msgstr ""

#: ../../../filesystems/proc.rst:667
msgid "To clear the soft-dirty bit::"
msgstr ""

#: ../../../filesystems/proc.rst:671
msgid ""
"To reset the peak resident set size (\"high water mark\") to the process's "
"current value::"
msgstr ""

#: ../../../filesystems/proc.rst:676
msgid "Any other value written to /proc/PID/clear_refs will have no effect."
msgstr ""

#: ../../../filesystems/proc.rst:678
msgid ""
"The /proc/pid/pagemap gives the PFN, which can be used to find the pageflags "
"using /proc/kpageflags and number of times a page is mapped using /proc/"
"kpagecount. For detailed explanation, see Documentation/admin-guide/mm/"
"pagemap.rst."
msgstr ""

#: ../../../filesystems/proc.rst:683
msgid ""
"The /proc/pid/numa_maps is an extension based on maps, showing the memory "
"locality and binding policy, as well as the memory usage (in pages) of each "
"mapping. The output follows a general format where mapping details get "
"summarized separated by blank spaces, one mapping per each file line::"
msgstr ""

#: ../../../filesystems/proc.rst:707
msgid "Where:"
msgstr ""

#: ../../../filesystems/proc.rst:709
msgid "\"address\" is the starting address for the mapping;"
msgstr ""

#: ../../../filesystems/proc.rst:711
msgid ""
"\"policy\" reports the NUMA memory policy set for the mapping (see "
"Documentation/admin-guide/mm/numa_memory_policy.rst);"
msgstr ""

#: ../../../filesystems/proc.rst:713
msgid ""
"\"mapping details\" summarizes mapping data such as mapping type, page usage "
"counters, node locality page counters (N0 == node0, N1 == node1, ...) and "
"the kernel page size, in KB, that is backing the mapping up."
msgstr ""

#: ../../../filesystems/proc.rst:717
msgid ""
"Note that some kernel configurations do not track the precise number of "
"times a page part of a larger allocation (e.g., THP) is mapped. In these "
"configurations, \"mapmax\" might corresponds to the average number of "
"mappings per page in such a larger allocation instead."
msgstr ""

#: ../../../filesystems/proc.rst:723
msgid "1.2 Kernel data"
msgstr ""

#: ../../../filesystems/proc.rst:725
msgid ""
"Similar to  the  process entries, the kernel data files give information "
"about the running kernel. The files used to obtain this information are "
"contained in /proc and  are  listed  in Table 1-5. Not all of these will be "
"present in your system. It  depends  on the kernel configuration and the "
"loaded modules, which files are there, and which are missing."
msgstr ""

#: ../../../filesystems/proc.rst:731
msgid "Table 1-5: Kernel info in /proc"
msgstr ""

#: ../../../filesystems/proc.rst:736 ../../../filesystems/proc.rst:1003
msgid "allocinfo"
msgstr ""

#: ../../../filesystems/proc.rst:736
msgid "Memory allocations profiling information"
msgstr ""

#: ../../../filesystems/proc.rst:737
msgid "apm"
msgstr ""

#: ../../../filesystems/proc.rst:737
msgid "Advanced power management info"
msgstr ""

#: ../../../filesystems/proc.rst:738
msgid "bootconfig"
msgstr ""

#: ../../../filesystems/proc.rst:738
msgid ""
"Kernel command line obtained from boot config, and, if there were kernel "
"parameters from the boot loader, a \"# Parameters from bootloader:\" line "
"followed by a line containing those parameters prefixed by \"# "
"\".                      (5.5)"
msgstr ""

#: ../../../filesystems/proc.rst:743
msgid "buddyinfo"
msgstr ""

#: ../../../filesystems/proc.rst:743
msgid "Kernel memory allocator information (see text)    (2.5)"
msgstr ""

#: ../../../filesystems/proc.rst:744
msgid "bus"
msgstr ""

#: ../../../filesystems/proc.rst:744
msgid "Directory containing bus specific information"
msgstr ""

#: ../../../filesystems/proc.rst:745
msgid ""
"Kernel command line, both from bootloader and embedded in the kernel image"
msgstr ""

#: ../../../filesystems/proc.rst:747
msgid "cpuinfo"
msgstr ""

#: ../../../filesystems/proc.rst:747
msgid "Info about the CPU"
msgstr ""

#: ../../../filesystems/proc.rst:748 ../../../filesystems/proc.rst:1510
msgid "devices"
msgstr ""

#: ../../../filesystems/proc.rst:748
msgid "Available devices (block and character)"
msgstr ""

#: ../../../filesystems/proc.rst:749
msgid "dma"
msgstr ""

#: ../../../filesystems/proc.rst:749
msgid "Used DMS channels"
msgstr ""

#: ../../../filesystems/proc.rst:750
msgid "filesystems"
msgstr ""

#: ../../../filesystems/proc.rst:750
msgid "Supported filesystems"
msgstr ""

#: ../../../filesystems/proc.rst:751
msgid "driver"
msgstr ""

#: ../../../filesystems/proc.rst:751
msgid "Various drivers grouped here, currently rtc       (2.4)"
msgstr ""

#: ../../../filesystems/proc.rst:752
msgid "execdomains"
msgstr ""

#: ../../../filesystems/proc.rst:752
msgid "Execdomains, related to security                  (2.4)"
msgstr ""

#: ../../../filesystems/proc.rst:753
msgid "fb"
msgstr ""

#: ../../../filesystems/proc.rst:753
msgid "Frame Buffer devices                              (2.4)"
msgstr ""

#: ../../../filesystems/proc.rst:754
msgid "fs"
msgstr ""

#: ../../../filesystems/proc.rst:754
msgid "File system parameters, currently nfs/exports     (2.4)"
msgstr ""

#: ../../../filesystems/proc.rst:755
msgid "ide"
msgstr ""

#: ../../../filesystems/proc.rst:755
msgid "Directory containing info about the IDE subsystem"
msgstr ""

#: ../../../filesystems/proc.rst:756
msgid "interrupts"
msgstr ""

#: ../../../filesystems/proc.rst:756
msgid "Interrupt usage"
msgstr ""

#: ../../../filesystems/proc.rst:757
msgid "iomem"
msgstr ""

#: ../../../filesystems/proc.rst:757
msgid "Memory map                                        (2.4)"
msgstr ""

#: ../../../filesystems/proc.rst:758
msgid "ioports"
msgstr ""

#: ../../../filesystems/proc.rst:758
msgid "I/O port usage"
msgstr ""

#: ../../../filesystems/proc.rst:759 ../../../filesystems/proc.rst:1514
msgid "irq"
msgstr ""

#: ../../../filesystems/proc.rst:759
msgid "Masks for irq to cpu affinity                     (2.4)(smp?)"
msgstr ""

#: ../../../filesystems/proc.rst:760
msgid "isapnp"
msgstr ""

#: ../../../filesystems/proc.rst:760
msgid "ISA PnP (Plug&Play) Info                          (2.4)"
msgstr ""

#: ../../../filesystems/proc.rst:761
msgid "kcore"
msgstr ""

#: ../../../filesystems/proc.rst:761
msgid "Kernel core image (can be ELF or A.OUT(deprecated in 2.4))"
msgstr ""

#: ../../../filesystems/proc.rst:762
msgid "kmsg"
msgstr ""

#: ../../../filesystems/proc.rst:762
msgid "Kernel messages"
msgstr ""

#: ../../../filesystems/proc.rst:763
msgid "ksyms"
msgstr ""

#: ../../../filesystems/proc.rst:763
msgid "Kernel symbol table"
msgstr ""

#: ../../../filesystems/proc.rst:764
msgid "loadavg"
msgstr ""

#: ../../../filesystems/proc.rst:764
msgid "Load average of last 1, 5 & 15 minutes;"
msgstr ""

#: ../../../filesystems/proc.rst:765
msgid ""
"number of processes currently runnable (running or on ready queue); total "
"number of processes in system; last pid created. All fields are separated by "
"one space except \"number of processes currently runnable\" and \"total "
"number of processes in system\", which are separated by a slash ('/'). "
"Example: 0.61 0.61 0.55 3/828 22084"
msgstr ""

#: ../../../filesystems/proc.rst:772
msgid "locks"
msgstr ""

#: ../../../filesystems/proc.rst:772
msgid "Kernel locks"
msgstr ""

#: ../../../filesystems/proc.rst:773 ../../../filesystems/proc.rst:1032
msgid "meminfo"
msgstr ""

#: ../../../filesystems/proc.rst:773
msgid "Memory info"
msgstr ""

#: ../../../filesystems/proc.rst:774
msgid "misc"
msgstr ""

#: ../../../filesystems/proc.rst:774
msgid "Miscellaneous"
msgstr ""

#: ../../../filesystems/proc.rst:775
msgid "modules"
msgstr ""

#: ../../../filesystems/proc.rst:775
msgid "List of loaded modules"
msgstr ""

#: ../../../filesystems/proc.rst:776
msgid "mounts"
msgstr ""

#: ../../../filesystems/proc.rst:776
msgid "Mounted filesystems"
msgstr ""

#: ../../../filesystems/proc.rst:777
msgid "net"
msgstr ""

#: ../../../filesystems/proc.rst:777
msgid "Networking info (see text)"
msgstr ""

#: ../../../filesystems/proc.rst:778
msgid "pagetypeinfo"
msgstr ""

#: ../../../filesystems/proc.rst:778
msgid "Additional page allocator information (see text)  (2.5)"
msgstr ""

#: ../../../filesystems/proc.rst:779
msgid "partitions"
msgstr ""

#: ../../../filesystems/proc.rst:779
msgid "Table of partitions known to the system"
msgstr ""

#: ../../../filesystems/proc.rst:780
msgid "pci"
msgstr ""

#: ../../../filesystems/proc.rst:780
msgid ""
"Deprecated info of PCI bus (new way -> /proc/bus/pci/, decoupled by "
"lspci                                (2.4)"
msgstr ""

#: ../../../filesystems/proc.rst:782
msgid "rtc"
msgstr ""

#: ../../../filesystems/proc.rst:782
msgid "Real time clock"
msgstr ""

#: ../../../filesystems/proc.rst:783
msgid "scsi"
msgstr ""

#: ../../../filesystems/proc.rst:783
msgid "SCSI info (see text)"
msgstr ""

#: ../../../filesystems/proc.rst:784
msgid "slabinfo"
msgstr ""

#: ../../../filesystems/proc.rst:784
msgid "Slab pool info"
msgstr ""

#: ../../../filesystems/proc.rst:785 ../../../filesystems/proc.rst:1333
msgid "softirqs"
msgstr ""

#: ../../../filesystems/proc.rst:785
msgid "softirq usage"
msgstr ""

#: ../../../filesystems/proc.rst:786
msgid "Overall statistics"
msgstr ""

#: ../../../filesystems/proc.rst:787
msgid "swaps"
msgstr ""

#: ../../../filesystems/proc.rst:787
msgid "Swap space utilization"
msgstr ""

#: ../../../filesystems/proc.rst:788
msgid "sys"
msgstr ""

#: ../../../filesystems/proc.rst:788
msgid "See chapter 2"
msgstr ""

#: ../../../filesystems/proc.rst:789
msgid "sysvipc"
msgstr ""

#: ../../../filesystems/proc.rst:789
msgid "Info of SysVIPC Resources (msg, sem, shm)         (2.4)"
msgstr ""

#: ../../../filesystems/proc.rst:790
msgid "tty"
msgstr ""

#: ../../../filesystems/proc.rst:790
msgid "Info of tty drivers"
msgstr ""

#: ../../../filesystems/proc.rst:791
msgid "uptime"
msgstr ""

#: ../../../filesystems/proc.rst:791
msgid "Wall clock since boot, combined idle time of all cpus"
msgstr ""

#: ../../../filesystems/proc.rst:792
msgid "version"
msgstr ""

#: ../../../filesystems/proc.rst:792
msgid "Kernel version"
msgstr ""

#: ../../../filesystems/proc.rst:793
msgid "video"
msgstr ""

#: ../../../filesystems/proc.rst:793
msgid "bttv info of video resources                      (2.4)"
msgstr ""

#: ../../../filesystems/proc.rst:794 ../../../filesystems/proc.rst:1285
msgid "vmallocinfo"
msgstr ""

#: ../../../filesystems/proc.rst:794
msgid "Show vmalloced areas"
msgstr ""

#: ../../../filesystems/proc.rst:797
msgid ""
"You can,  for  example,  check  which interrupts are currently in use and "
"what they are used for by looking in the file /proc/interrupts::"
msgstr ""

#: ../../../filesystems/proc.rst:816
msgid ""
"In 2.4.* a couple of lines where added to this file LOC & ERR (this time is "
"the output of a SMP machine)::"
msgstr ""

#: ../../../filesystems/proc.rst:838
msgid ""
"NMI is incremented in this case because every timer interrupt generates a "
"NMI (Non Maskable Interrupt) which is used by the NMI Watchdog to detect "
"lockups."
msgstr ""

#: ../../../filesystems/proc.rst:841
msgid "LOC is the local interrupt counter of the internal APIC of every CPU."
msgstr ""

#: ../../../filesystems/proc.rst:843
msgid ""
"ERR is incremented in the case of errors in the IO-APIC bus (the bus that "
"connects the CPUs in a SMP system. This means that an error has been "
"detected, the IO-APIC automatically retry the transmission, so it should not "
"be a big problem, but you should read the SMP-FAQ."
msgstr ""

#: ../../../filesystems/proc.rst:848
msgid ""
"In 2.6.2* /proc/interrupts was expanded again.  This time the goal was for /"
"proc/interrupts to display every IRQ vector in use by the system, not just "
"those considered 'most important'.  The new vectors are:"
msgstr ""

#: ../../../filesystems/proc.rst:852
msgid "THR"
msgstr ""

#: ../../../filesystems/proc.rst:853
msgid ""
"interrupt raised when a machine check threshold counter (typically counting "
"ECC corrected errors of memory or cache) exceeds a configurable threshold.  "
"Only available on some systems."
msgstr ""

#: ../../../filesystems/proc.rst:857
msgid "TRM"
msgstr ""

#: ../../../filesystems/proc.rst:858
msgid ""
"a thermal event interrupt occurs when a temperature threshold has been "
"exceeded for the CPU.  This interrupt may also be generated when the "
"temperature drops back to normal."
msgstr ""

#: ../../../filesystems/proc.rst:862
msgid "SPU"
msgstr ""

#: ../../../filesystems/proc.rst:863
msgid ""
"a spurious interrupt is some interrupt that was raised then lowered by some "
"IO device before it could be fully processed by the APIC.  Hence the APIC "
"sees the interrupt but does not know what device it came from. For this case "
"the APIC will generate the interrupt with a IRQ vector of 0xff. This might "
"also be generated by chipset bugs."
msgstr ""

#: ../../../filesystems/proc.rst:869
msgid "RES, CAL, TLB"
msgstr ""

#: ../../../filesystems/proc.rst:870
msgid ""
"rescheduling, call and TLB flush interrupts are sent from one CPU to another "
"per the needs of the OS.  Typically, their statistics are used by kernel "
"developers and interested users to determine the occurrence of interrupts of "
"the given type."
msgstr ""

#: ../../../filesystems/proc.rst:875
msgid ""
"The above IRQ vectors are displayed only when relevant.  For example, the "
"threshold vector does not exist on x86_64 platforms.  Others are suppressed "
"when the system is a uniprocessor.  As of this writing, only i386 and x86_64 "
"platforms support the new IRQ vector displays."
msgstr ""

#: ../../../filesystems/proc.rst:880
msgid ""
"Of some interest is the introduction of the /proc/irq directory to 2.4. It "
"could be used to set IRQ to CPU affinity. This means that you can \"hook\" "
"an IRQ to only one CPU, or to exclude a CPU of handling IRQs. The contents "
"of the irq subdir is one subdir for each IRQ, and two files; "
"default_smp_affinity and prof_cpu_mask."
msgstr ""

#: ../../../filesystems/proc.rst:886
msgid "For example::"
msgstr ""

#: ../../../filesystems/proc.rst:894
msgid ""
"smp_affinity is a bitmask, in which you can specify which CPUs can handle "
"the IRQ. You can set it by doing::"
msgstr ""

#: ../../../filesystems/proc.rst:899
msgid ""
"This means that only the first CPU will handle the IRQ, but you can also "
"echo 5 which means that only the first and third CPU can handle the IRQ."
msgstr ""

#: ../../../filesystems/proc.rst:902
msgid "The contents of each smp_affinity file is the same by default::"
msgstr ""

#: ../../../filesystems/proc.rst:907
msgid ""
"There is an alternate interface, smp_affinity_list which allows specifying a "
"CPU range instead of a bitmask::"
msgstr ""

#: ../../../filesystems/proc.rst:913
msgid ""
"The default_smp_affinity mask applies to all non-active IRQs, which are the "
"IRQs which have not yet been allocated/activated, and hence which lack a /"
"proc/irq/[0-9]* directory."
msgstr ""

#: ../../../filesystems/proc.rst:917
msgid ""
"The node file on an SMP system shows the node to which the device using the "
"IRQ reports itself as being attached. This hardware locality information "
"does not include information about any possible driver locality preference."
msgstr ""

#: ../../../filesystems/proc.rst:921
msgid ""
"prof_cpu_mask specifies which CPUs are to be profiled by the system wide "
"profiler. Default value is ffffffff (all CPUs if there are only 32 of them)."
msgstr ""

#: ../../../filesystems/proc.rst:924
msgid ""
"The way IRQs are routed is handled by the IO-APIC, and it's Round Robin "
"between all the CPUs which are allowed to handle it. As usual the kernel has "
"more info than you and does a better job than you, so the defaults are the "
"best choice for almost everyone.  [Note this applies only to those IO-APIC's "
"that support \"Round Robin\" interrupt distribution.]"
msgstr ""

#: ../../../filesystems/proc.rst:930
msgid ""
"There are  three  more  important subdirectories in /proc: net, scsi, and "
"sys. The general  rule  is  that  the  contents,  or  even  the  existence "
"of these directories, depend  on your kernel configuration. If SCSI is not "
"enabled, the directory scsi  may  not  exist. The same is true with the net, "
"which is there only when networking support is present in the running kernel."
msgstr ""

#: ../../../filesystems/proc.rst:936
msgid ""
"The slabinfo  file  gives  information  about  memory usage at the slab "
"level. Linux uses  slab  pools for memory management above page level in "
"version 2.2. Commonly used  objects  have  their  own  slab  pool (such as "
"network buffers, directory cache, and so on)."
msgstr ""

#: ../../../filesystems/proc.rst:949
msgid ""
"External fragmentation is a problem under some workloads, and buddyinfo is a "
"useful tool for helping diagnose these problems.  Buddyinfo will give you a "
"clue as to how big an area you can safely allocate, or why a previous "
"allocation failed."
msgstr ""

#: ../../../filesystems/proc.rst:954
msgid ""
"Each column represents the number of pages of a certain order which are "
"available.  In this case, there are 0 chunks of 2^0*PAGE_SIZE available in "
"ZONE_DMA, 4 chunks of 2^1*PAGE_SIZE in ZONE_DMA, 101 chunks of 2^4*PAGE_SIZE "
"available in ZONE_NORMAL, etc..."
msgstr ""

#: ../../../filesystems/proc.rst:959
msgid ""
"More information relevant to external fragmentation can be found in "
"pagetypeinfo::"
msgstr ""

#: ../../../filesystems/proc.rst:982
msgid ""
"Fragmentation avoidance in the kernel works by grouping pages of different "
"migrate types into the same contiguous regions of memory called page blocks. "
"A page block is typically the size of the default hugepage size, e.g. 2MB on "
"X86-64. By keeping pages grouped based on their ability to move, the kernel "
"can reclaim pages within a page block to satisfy a high-order allocation."
msgstr ""

#: ../../../filesystems/proc.rst:988
msgid ""
"The pagetypinfo begins with information on the size of a page block. It then "
"gives the same type of information as buddyinfo except broken down by "
"migrate-type and finishes with details on how many page blocks of each type "
"exist."
msgstr ""

#: ../../../filesystems/proc.rst:993
msgid ""
"If min_free_kbytes has been tuned correctly (recommendations made by hugeadm "
"from libhugetlbfs https://github.com/libhugetlbfs/libhugetlbfs/), one can "
"make an estimate of the likely number of huge pages that can be allocated at "
"a given point in time. All the \"Movable\" blocks should be allocatable "
"unless memory has been mlock()'d. Some of the Reclaimable blocks should also "
"be allocatable although a lot of filesystem metadata may have to be "
"reclaimed to achieve this."
msgstr ""

#: ../../../filesystems/proc.rst:1005
msgid ""
"Provides information about memory allocations at all locations in the code "
"base. Each allocation in the code is identified by its source file, line "
"number, module (if originates from a loadable module) and the function "
"calling the allocation. The number of bytes allocated and number of calls at "
"each location are reported. The first line indicates the version of the "
"file, the second line is the header listing fields in the file."
msgstr ""

#: ../../../filesystems/proc.rst:1012
msgid "Example output."
msgstr ""

#: ../../../filesystems/proc.rst:1034
msgid ""
"Provides information about distribution and utilization of memory.  This "
"varies by architecture and compile options.  Some of the counters reported "
"here overlap.  The memory reported by the non overlapping counters may not "
"add up to the overall memory usage and the difference for some workloads can "
"be substantial.  In many cases there are other means to find out additional "
"memory using subsystem specific interfaces, for instance /proc/net/sockstat "
"for TCP memory allocations."
msgstr ""

#: ../../../filesystems/proc.rst:1042
msgid "Example output. You may not have all of these fields."
msgstr ""

#: ../../../filesystems/proc.rst:1108
msgid "MemTotal"
msgstr ""

#: ../../../filesystems/proc.rst:1109
msgid ""
"Total usable RAM (i.e. physical RAM minus a few reserved bits and the kernel "
"binary code)"
msgstr ""

#: ../../../filesystems/proc.rst:1111
msgid "MemFree"
msgstr ""

#: ../../../filesystems/proc.rst:1112
msgid "Total free RAM. On highmem systems, the sum of LowFree+HighFree"
msgstr ""

#: ../../../filesystems/proc.rst:1113
msgid "MemAvailable"
msgstr ""

#: ../../../filesystems/proc.rst:1114
msgid ""
"An estimate of how much memory is available for starting new applications, "
"without swapping. Calculated from MemFree, SReclaimable, the size of the "
"file LRU lists, and the low watermarks in each zone. The estimate takes into "
"account that the system needs some page cache to function well, and that not "
"all reclaimable slab will be reclaimable, due to items being in use. The "
"impact of those factors will vary from system to system."
msgstr ""

#: ../../../filesystems/proc.rst:1122
msgid "Buffers"
msgstr ""

#: ../../../filesystems/proc.rst:1123
msgid ""
"Relatively temporary storage for raw disk blocks shouldn't get tremendously "
"large (20MB or so)"
msgstr ""

#: ../../../filesystems/proc.rst:1125
msgid "Cached"
msgstr ""

#: ../../../filesystems/proc.rst:1126
msgid ""
"In-memory cache for files read from the disk (the pagecache) as well as "
"tmpfs & shmem. Doesn't include SwapCached."
msgstr ""

#: ../../../filesystems/proc.rst:1129
msgid "SwapCached"
msgstr ""

#: ../../../filesystems/proc.rst:1130
msgid ""
"Memory that once was swapped out, is swapped back in but still also is in "
"the swapfile (if memory is needed it doesn't need to be swapped out AGAIN "
"because it is already in the swapfile. This saves I/O)"
msgstr ""

#: ../../../filesystems/proc.rst:1134
msgid "Active"
msgstr ""

#: ../../../filesystems/proc.rst:1135
msgid ""
"Memory that has been used more recently and usually not reclaimed unless "
"absolutely necessary."
msgstr ""

#: ../../../filesystems/proc.rst:1137
msgid "Inactive"
msgstr ""

#: ../../../filesystems/proc.rst:1138
msgid ""
"Memory which has been less recently used.  It is more eligible to be "
"reclaimed for other purposes"
msgstr ""

#: ../../../filesystems/proc.rst:1140
msgid "Unevictable"
msgstr ""

#: ../../../filesystems/proc.rst:1141
msgid ""
"Memory allocated for userspace which cannot be reclaimed, such as mlocked "
"pages, ramfs backing pages, secret memfd pages etc."
msgstr ""

#: ../../../filesystems/proc.rst:1143
msgid "Mlocked"
msgstr ""

#: ../../../filesystems/proc.rst:1144
msgid "Memory locked with mlock()."
msgstr ""

#: ../../../filesystems/proc.rst:1145
msgid "HighTotal, HighFree"
msgstr ""

#: ../../../filesystems/proc.rst:1146
msgid ""
"Highmem is all memory above ~860MB of physical memory. Highmem areas are for "
"use by userspace programs, or for the pagecache.  The kernel must use tricks "
"to access this memory, making it slower to access than lowmem."
msgstr ""

#: ../../../filesystems/proc.rst:1150
msgid "LowTotal, LowFree"
msgstr ""

#: ../../../filesystems/proc.rst:1151
msgid ""
"Lowmem is memory which can be used for everything that highmem can be used "
"for, but it is also available for the kernel's use for its own data "
"structures.  Among many other things, it is where everything from the Slab "
"is allocated.  Bad things happen when you're out of lowmem."
msgstr ""

#: ../../../filesystems/proc.rst:1156
msgid "SwapTotal"
msgstr ""

#: ../../../filesystems/proc.rst:1157
msgid "total amount of swap space available"
msgstr ""

#: ../../../filesystems/proc.rst:1158
msgid "SwapFree"
msgstr ""

#: ../../../filesystems/proc.rst:1159
msgid "Memory which has been evicted from RAM, and is temporarily on the disk"
msgstr ""

#: ../../../filesystems/proc.rst:1161
msgid "Zswap"
msgstr ""

#: ../../../filesystems/proc.rst:1162
msgid "Memory consumed by the zswap backend (compressed size)"
msgstr ""

#: ../../../filesystems/proc.rst:1163
msgid "Zswapped"
msgstr ""

#: ../../../filesystems/proc.rst:1164
msgid "Amount of anonymous memory stored in zswap (original size)"
msgstr ""

#: ../../../filesystems/proc.rst:1165
msgid "Dirty"
msgstr ""

#: ../../../filesystems/proc.rst:1166
msgid "Memory which is waiting to get written back to the disk"
msgstr ""

#: ../../../filesystems/proc.rst:1167
msgid "Writeback"
msgstr ""

#: ../../../filesystems/proc.rst:1168
msgid "Memory which is actively being written back to the disk"
msgstr ""

#: ../../../filesystems/proc.rst:1169
msgid "AnonPages"
msgstr ""

#: ../../../filesystems/proc.rst:1170
msgid ""
"Non-file backed pages mapped into userspace page tables. Note that some "
"kernel configurations might consider all pages part of a larger allocation "
"(e.g., THP) as \"mapped\", as soon as a single page is mapped."
msgstr ""

#: ../../../filesystems/proc.rst:1174
msgid "Mapped"
msgstr ""

#: ../../../filesystems/proc.rst:1175
msgid ""
"files which have been mmapped, such as libraries. Note that some kernel "
"configurations might consider all pages part of a larger allocation (e.g., "
"THP) as \"mapped\", as soon as a single page is mapped."
msgstr ""

#: ../../../filesystems/proc.rst:1179
msgid "Shmem"
msgstr ""

#: ../../../filesystems/proc.rst:1180
msgid "Total memory used by shared memory (shmem) and tmpfs"
msgstr ""

#: ../../../filesystems/proc.rst:1181
msgid "KReclaimable"
msgstr ""

#: ../../../filesystems/proc.rst:1182
msgid ""
"Kernel allocations that the kernel will attempt to reclaim under memory "
"pressure. Includes SReclaimable (below), and other direct allocations with a "
"shrinker."
msgstr ""

#: ../../../filesystems/proc.rst:1185
msgid "Slab"
msgstr ""

#: ../../../filesystems/proc.rst:1186
msgid "in-kernel data structures cache"
msgstr ""

#: ../../../filesystems/proc.rst:1187
msgid "SReclaimable"
msgstr ""

#: ../../../filesystems/proc.rst:1188
msgid "Part of Slab, that might be reclaimed, such as caches"
msgstr ""

#: ../../../filesystems/proc.rst:1189
msgid "SUnreclaim"
msgstr ""

#: ../../../filesystems/proc.rst:1190
msgid "Part of Slab, that cannot be reclaimed on memory pressure"
msgstr ""

#: ../../../filesystems/proc.rst:1191
msgid "KernelStack"
msgstr ""

#: ../../../filesystems/proc.rst:1192
msgid "Memory consumed by the kernel stacks of all tasks"
msgstr ""

#: ../../../filesystems/proc.rst:1193
msgid "PageTables"
msgstr ""

#: ../../../filesystems/proc.rst:1194
msgid "Memory consumed by userspace page tables"
msgstr ""

#: ../../../filesystems/proc.rst:1195
msgid "SecPageTables"
msgstr ""

#: ../../../filesystems/proc.rst:1196
msgid ""
"Memory consumed by secondary page tables, this currently includes KVM mmu "
"and IOMMU allocations on x86 and arm64."
msgstr ""

#: ../../../filesystems/proc.rst:1198
msgid "NFS_Unstable"
msgstr ""

#: ../../../filesystems/proc.rst:1199
msgid ""
"Always zero. Previously counted pages which had been written to the server, "
"but has not been committed to stable storage."
msgstr ""

#: ../../../filesystems/proc.rst:1201
msgid "Bounce"
msgstr ""

#: ../../../filesystems/proc.rst:1202
msgid ""
"Always zero. Previously memory used for block device \"bounce buffers\"."
msgstr ""

#: ../../../filesystems/proc.rst:1204
msgid "WritebackTmp"
msgstr ""

#: ../../../filesystems/proc.rst:1205
msgid ""
"Always zero. Previously memory used by FUSE for temporary writeback buffers."
msgstr ""

#: ../../../filesystems/proc.rst:1207
msgid "CommitLimit"
msgstr ""

#: ../../../filesystems/proc.rst:1208
msgid ""
"Based on the overcommit ratio ('vm.overcommit_ratio'), this is the total "
"amount of  memory currently available to be allocated on the system. This "
"limit is only adhered to if strict overcommit accounting is enabled (mode 2 "
"in 'vm.overcommit_memory')."
msgstr ""

#: ../../../filesystems/proc.rst:1214
msgid "The CommitLimit is calculated with the following formula::"
msgstr ""

#: ../../../filesystems/proc.rst:1219
msgid ""
"For example, on a system with 1G of physical RAM and 7G of swap with a `vm."
"overcommit_ratio` of 30 it would yield a CommitLimit of 7.3G."
msgstr ""

#: ../../../filesystems/proc.rst:1223
msgid ""
"For more details, see the memory overcommit documentation in mm/overcommit-"
"accounting."
msgstr ""

#: ../../../filesystems/proc.rst:1225
msgid "Committed_AS"
msgstr ""

#: ../../../filesystems/proc.rst:1226
msgid ""
"The amount of memory presently allocated on the system. The committed memory "
"is a sum of all of the memory which has been allocated by processes, even if "
"it has not been \"used\" by them as of yet. A process which malloc()'s 1G of "
"memory, but only touches 300M of it will show up as using 1G. This 1G is "
"memory which has been \"committed\" to by the VM and can be used at any time "
"by the allocating application. With strict overcommit enabled on the system "
"(mode 2 in 'vm.overcommit_memory'), allocations which would exceed the "
"CommitLimit (detailed above) will not be permitted. This is useful if one "
"needs to guarantee that processes will not fail due to lack of memory once "
"that memory has been successfully allocated."
msgstr ""

#: ../../../filesystems/proc.rst:1239
msgid "VmallocTotal"
msgstr ""

#: ../../../filesystems/proc.rst:1240
msgid "total size of vmalloc virtual address space"
msgstr ""

#: ../../../filesystems/proc.rst:1241
msgid "VmallocUsed"
msgstr ""

#: ../../../filesystems/proc.rst:1242
msgid "amount of vmalloc area which is used"
msgstr ""

#: ../../../filesystems/proc.rst:1243
msgid "VmallocChunk"
msgstr ""

#: ../../../filesystems/proc.rst:1244
msgid "largest contiguous block of vmalloc area which is free"
msgstr ""

#: ../../../filesystems/proc.rst:1245
msgid "Percpu"
msgstr ""

#: ../../../filesystems/proc.rst:1246
msgid ""
"Memory allocated to the percpu allocator used to back percpu allocations. "
"This stat excludes the cost of metadata."
msgstr ""

#: ../../../filesystems/proc.rst:1248
msgid "EarlyMemtestBad"
msgstr ""

#: ../../../filesystems/proc.rst:1249
msgid ""
"The amount of RAM/memory in kB, that was identified as corrupted by early "
"memtest. If memtest was not run, this field will not be displayed at all. "
"Size is never rounded down to 0 kB. That means if 0 kB is reported, you can "
"safely assume there was at least one pass of memtest and none of the passes "
"found a single faulty byte of RAM."
msgstr ""

#: ../../../filesystems/proc.rst:1255
msgid "HardwareCorrupted"
msgstr ""

#: ../../../filesystems/proc.rst:1256
msgid "The amount of RAM/memory in KB, the kernel identifies as corrupted."
msgstr ""

#: ../../../filesystems/proc.rst:1258
msgid "AnonHugePages"
msgstr ""

#: ../../../filesystems/proc.rst:1259
msgid "Non-file backed huge pages mapped into userspace page tables"
msgstr ""

#: ../../../filesystems/proc.rst:1260
msgid "ShmemHugePages"
msgstr ""

#: ../../../filesystems/proc.rst:1261
msgid ""
"Memory used by shared memory (shmem) and tmpfs allocated with huge pages"
msgstr ""

#: ../../../filesystems/proc.rst:1263
msgid "ShmemPmdMapped"
msgstr ""

#: ../../../filesystems/proc.rst:1264
msgid "Shared memory mapped into userspace with huge pages"
msgstr ""

#: ../../../filesystems/proc.rst:1265
msgid "FileHugePages"
msgstr ""

#: ../../../filesystems/proc.rst:1266
msgid "Memory used for filesystem data (page cache) allocated with huge pages"
msgstr ""

#: ../../../filesystems/proc.rst:1268
msgid "FilePmdMapped"
msgstr ""

#: ../../../filesystems/proc.rst:1269
msgid "Page cache mapped into userspace with huge pages"
msgstr ""

#: ../../../filesystems/proc.rst:1270
msgid "CmaTotal"
msgstr ""

#: ../../../filesystems/proc.rst:1271
msgid "Memory reserved for the Contiguous Memory Allocator (CMA)"
msgstr ""

#: ../../../filesystems/proc.rst:1272
msgid "CmaFree"
msgstr ""

#: ../../../filesystems/proc.rst:1273
msgid "Free remaining memory in the CMA reserves"
msgstr ""

#: ../../../filesystems/proc.rst:1274
msgid "Unaccepted"
msgstr ""

#: ../../../filesystems/proc.rst:1275
msgid "Memory that has not been accepted by the guest"
msgstr ""

#: ../../../filesystems/proc.rst:1276
msgid "Balloon"
msgstr ""

#: ../../../filesystems/proc.rst:1277
msgid "Memory returned to Host by VM Balloon Drivers"
msgstr ""

#: ../../../filesystems/proc.rst:1278
msgid ""
"HugePages_Total, HugePages_Free, HugePages_Rsvd, HugePages_Surp, "
"Hugepagesize, Hugetlb"
msgstr ""

#: ../../../filesystems/proc.rst:1279
msgid "See Documentation/admin-guide/mm/hugetlbpage.rst."
msgstr ""

#: ../../../filesystems/proc.rst:1280
msgid "DirectMap4k, DirectMap2M, DirectMap1G"
msgstr ""

#: ../../../filesystems/proc.rst:1281
msgid ""
"Breakdown of page table sizes used in the kernel's identity mapping of RAM"
msgstr ""

#: ../../../filesystems/proc.rst:1287
msgid ""
"Provides information about vmalloced/vmaped areas. One line per area, "
"containing the virtual address range of the area, size in bytes, caller "
"information of the creator, and optional information depending on the kind "
"of area:"
msgstr ""

#: ../../../filesystems/proc.rst:1293
msgid "pages=nr"
msgstr ""

#: ../../../filesystems/proc.rst:1293
msgid "number of pages"
msgstr ""

#: ../../../filesystems/proc.rst:1294
msgid "phys=addr"
msgstr ""

#: ../../../filesystems/proc.rst:1294
msgid "if a physical address was specified"
msgstr ""

#: ../../../filesystems/proc.rst:1295
msgid "ioremap"
msgstr ""

#: ../../../filesystems/proc.rst:1295
msgid "I/O mapping (ioremap() and friends)"
msgstr ""

#: ../../../filesystems/proc.rst:1296
msgid "vmalloc"
msgstr ""

#: ../../../filesystems/proc.rst:1296
msgid "vmalloc() area"
msgstr ""

#: ../../../filesystems/proc.rst:1297
msgid "vmap"
msgstr ""

#: ../../../filesystems/proc.rst:1297
msgid "vmap()ed pages"
msgstr ""

#: ../../../filesystems/proc.rst:1298
msgid "user"
msgstr ""

#: ../../../filesystems/proc.rst:1298
msgid "VM_USERMAP area"
msgstr ""

#: ../../../filesystems/proc.rst:1299
msgid "vpages"
msgstr ""

#: ../../../filesystems/proc.rst:1299
msgid "buffer for pages pointers was vmalloced (huge area)"
msgstr ""

#: ../../../filesystems/proc.rst:1300
msgid "N<node>=nr"
msgstr ""

#: ../../../filesystems/proc.rst:1300
msgid "(Only on NUMA kernels) Number of pages allocated on memory node <node>"
msgstr ""

#: ../../../filesystems/proc.rst:1335
msgid ""
"Provides counts of softirq handlers serviced since boot time, for each CPU."
msgstr ""

#: ../../../filesystems/proc.rst:1352
msgid "1.3 Networking info in /proc/net"
msgstr ""

#: ../../../filesystems/proc.rst:1354
msgid ""
"The subdirectory  /proc/net  follows  the  usual  pattern. Table 1-8 shows "
"the additional values  you  get  for  IP  version 6 if you configure the "
"kernel to support this. Table 1-9 lists the files and their meaning."
msgstr ""

#: ../../../filesystems/proc.rst:1359
msgid "Table 1-8: IPv6 info in /proc/net"
msgstr ""

#: ../../../filesystems/proc.rst:1364
msgid "udp6"
msgstr ""

#: ../../../filesystems/proc.rst:1364
msgid "UDP sockets (IPv6)"
msgstr ""

#: ../../../filesystems/proc.rst:1365
msgid "tcp6"
msgstr ""

#: ../../../filesystems/proc.rst:1365
msgid "TCP sockets (IPv6)"
msgstr ""

#: ../../../filesystems/proc.rst:1366
msgid "raw6"
msgstr ""

#: ../../../filesystems/proc.rst:1366
msgid "Raw device statistics (IPv6)"
msgstr ""

#: ../../../filesystems/proc.rst:1367
msgid "igmp6"
msgstr ""

#: ../../../filesystems/proc.rst:1367
msgid "IP multicast addresses, which this host joined (IPv6)"
msgstr ""

#: ../../../filesystems/proc.rst:1368
msgid "if_inet6"
msgstr ""

#: ../../../filesystems/proc.rst:1368
msgid "List of IPv6 interface addresses"
msgstr ""

#: ../../../filesystems/proc.rst:1369
msgid "ipv6_route"
msgstr ""

#: ../../../filesystems/proc.rst:1369
msgid "Kernel routing table for IPv6"
msgstr ""

#: ../../../filesystems/proc.rst:1370
msgid "rt6_stats"
msgstr ""

#: ../../../filesystems/proc.rst:1370
msgid "Global IPv6 routing tables statistics"
msgstr ""

#: ../../../filesystems/proc.rst:1371
msgid "sockstat6"
msgstr ""

#: ../../../filesystems/proc.rst:1371
msgid "Socket statistics (IPv6)"
msgstr ""

#: ../../../filesystems/proc.rst:1372
msgid "snmp6"
msgstr ""

#: ../../../filesystems/proc.rst:1372
msgid "Snmp data (IPv6)"
msgstr ""

#: ../../../filesystems/proc.rst:1375
msgid "Table 1-9: Network info in /proc/net"
msgstr ""

#: ../../../filesystems/proc.rst:1380
msgid "arp"
msgstr ""

#: ../../../filesystems/proc.rst:1380
msgid "Kernel  ARP table"
msgstr ""

#: ../../../filesystems/proc.rst:1381
msgid "dev"
msgstr ""

#: ../../../filesystems/proc.rst:1381
msgid "network devices with statistics"
msgstr ""

#: ../../../filesystems/proc.rst:1382
msgid "dev_mcast"
msgstr ""

#: ../../../filesystems/proc.rst:1382
msgid ""
"the Layer2 multicast groups a device is listening too (interface index, "
"label, number of references, number of bound addresses)."
msgstr ""

#: ../../../filesystems/proc.rst:1385
msgid "dev_stat"
msgstr ""

#: ../../../filesystems/proc.rst:1385
msgid "network device status"
msgstr ""

#: ../../../filesystems/proc.rst:1386
msgid "ip_fwchains"
msgstr ""

#: ../../../filesystems/proc.rst:1386
msgid "Firewall chain linkage"
msgstr ""

#: ../../../filesystems/proc.rst:1387
msgid "ip_fwnames"
msgstr ""

#: ../../../filesystems/proc.rst:1387
msgid "Firewall chain names"
msgstr ""

#: ../../../filesystems/proc.rst:1388
msgid "ip_masq"
msgstr ""

#: ../../../filesystems/proc.rst:1388
msgid "Directory containing the masquerading tables"
msgstr ""

#: ../../../filesystems/proc.rst:1389
msgid "ip_masquerade"
msgstr ""

#: ../../../filesystems/proc.rst:1389
msgid "Major masquerading table"
msgstr ""

#: ../../../filesystems/proc.rst:1390
msgid "netstat"
msgstr ""

#: ../../../filesystems/proc.rst:1390
msgid "Network statistics"
msgstr ""

#: ../../../filesystems/proc.rst:1391
msgid "raw"
msgstr ""

#: ../../../filesystems/proc.rst:1391
msgid "raw device statistics"
msgstr ""

#: ../../../filesystems/proc.rst:1392
msgid "route"
msgstr ""

#: ../../../filesystems/proc.rst:1392
msgid "Kernel routing table"
msgstr ""

#: ../../../filesystems/proc.rst:1393
msgid "rpc"
msgstr ""

#: ../../../filesystems/proc.rst:1393
msgid "Directory containing rpc info"
msgstr ""

#: ../../../filesystems/proc.rst:1394
msgid "rt_cache"
msgstr ""

#: ../../../filesystems/proc.rst:1394
msgid "Routing cache"
msgstr ""

#: ../../../filesystems/proc.rst:1395
msgid "snmp"
msgstr ""

#: ../../../filesystems/proc.rst:1395
msgid "SNMP data"
msgstr ""

#: ../../../filesystems/proc.rst:1396
msgid "sockstat"
msgstr ""

#: ../../../filesystems/proc.rst:1396
msgid "Socket statistics"
msgstr ""

#: ../../../filesystems/proc.rst:1397
msgid "softnet_stat"
msgstr ""

#: ../../../filesystems/proc.rst:1397
msgid "Per-CPU incoming packets queues statistics of online CPUs"
msgstr ""

#: ../../../filesystems/proc.rst:1398
msgid "tcp"
msgstr ""

#: ../../../filesystems/proc.rst:1398
msgid "TCP  sockets"
msgstr ""

#: ../../../filesystems/proc.rst:1399
msgid "udp"
msgstr ""

#: ../../../filesystems/proc.rst:1399
msgid "UDP sockets"
msgstr ""

#: ../../../filesystems/proc.rst:1400
msgid "unix"
msgstr ""

#: ../../../filesystems/proc.rst:1400
msgid "UNIX domain sockets"
msgstr ""

#: ../../../filesystems/proc.rst:1401
msgid "wireless"
msgstr ""

#: ../../../filesystems/proc.rst:1401
msgid "Wireless interface data (Wavelan etc)"
msgstr ""

#: ../../../filesystems/proc.rst:1402
msgid "igmp"
msgstr ""

#: ../../../filesystems/proc.rst:1402
msgid "IP multicast addresses, which this host joined"
msgstr ""

#: ../../../filesystems/proc.rst:1403
msgid "psched"
msgstr ""

#: ../../../filesystems/proc.rst:1403
msgid "Global packet scheduler parameters."
msgstr ""

#: ../../../filesystems/proc.rst:1404
msgid "netlink"
msgstr ""

#: ../../../filesystems/proc.rst:1404
msgid "List of PF_NETLINK sockets"
msgstr ""

#: ../../../filesystems/proc.rst:1405
msgid "ip_mr_vifs"
msgstr ""

#: ../../../filesystems/proc.rst:1405
msgid "List of multicast virtual interfaces"
msgstr ""

#: ../../../filesystems/proc.rst:1406
msgid "ip_mr_cache"
msgstr ""

#: ../../../filesystems/proc.rst:1406
msgid "List of multicast routing cache"
msgstr ""

#: ../../../filesystems/proc.rst:1409
msgid ""
"You can  use  this  information  to see which network devices are available "
"in your system and how much traffic was routed over those devices::"
msgstr ""

#: ../../../filesystems/proc.rst:1425
msgid ""
"In addition, each Channel Bond interface has its own directory.  For "
"example, the bond0 device will have a directory called /proc/net/bond0/. It "
"will contain information that is specific to that bond, such as the current "
"slaves of the bond, the link status of the slaves, and how many times the "
"slaves link has failed."
msgstr ""

#: ../../../filesystems/proc.rst:1432
msgid "1.4 SCSI info"
msgstr ""

#: ../../../filesystems/proc.rst:1434
msgid ""
"If you have a SCSI or ATA host adapter in your system, you'll find a "
"subdirectory named after the driver for this adapter in /proc/scsi. You'll "
"also see a list of all recognized SCSI devices in /proc/scsi::"
msgstr ""

#: ../../../filesystems/proc.rst:1448
msgid ""
"The directory  named  after  the driver has one file for each adapter found "
"in the system.  These  files  contain information about the controller, "
"including the used  IRQ  and  the  IO  address range. The amount of "
"information shown is dependent on  the adapter you use. The example shows "
"the output for an Adaptec AHA-2940 SCSI adapter::"
msgstr ""

#: ../../../filesystems/proc.rst:1495
msgid "1.5 Parallel port info in /proc/parport"
msgstr ""

#: ../../../filesystems/proc.rst:1497
msgid ""
"The directory  /proc/parport  contains information about the parallel ports "
"of your system.  It  has  one  subdirectory  for  each port, named after the "
"port number (0,1,2,...)."
msgstr ""

#: ../../../filesystems/proc.rst:1501
msgid "These directories contain the four files shown in Table 1-10."
msgstr ""

#: ../../../filesystems/proc.rst:1504
msgid "Table 1-10: Files in /proc/parport"
msgstr ""

#: ../../../filesystems/proc.rst:1509
msgid "autoprobe"
msgstr ""

#: ../../../filesystems/proc.rst:1509
msgid "Any IEEE-1284 device ID information that has been acquired."
msgstr ""

#: ../../../filesystems/proc.rst:1510
msgid ""
"list of the device drivers using that port. A + will appear by the name of "
"the device currently using the port (it might not appear against any)."
msgstr ""

#: ../../../filesystems/proc.rst:1513
msgid "hardware"
msgstr ""

#: ../../../filesystems/proc.rst:1513
msgid "Parallel port's base address, IRQ line and DMA channel."
msgstr ""

#: ../../../filesystems/proc.rst:1514
msgid ""
"IRQ that parport is using for that port. This is in a separate file to allow "
"you to alter it by writing a new value in (IRQ number or none)."
msgstr ""

#: ../../../filesystems/proc.rst:1520
msgid "1.6 TTY info in /proc/tty"
msgstr ""

#: ../../../filesystems/proc.rst:1522
msgid ""
"Information about  the  available  and actually used tty's can be found in "
"the directory /proc/tty. You'll find  entries  for drivers and line "
"disciplines in this directory, as shown in Table 1-11."
msgstr ""

#: ../../../filesystems/proc.rst:1527
msgid "Table 1-11: Files in /proc/tty"
msgstr ""

#: ../../../filesystems/proc.rst:1532
msgid "drivers"
msgstr ""

#: ../../../filesystems/proc.rst:1532
msgid "list of drivers and their usage"
msgstr ""

#: ../../../filesystems/proc.rst:1533
msgid "ldiscs"
msgstr ""

#: ../../../filesystems/proc.rst:1533
msgid "registered line disciplines"
msgstr ""

#: ../../../filesystems/proc.rst:1534
msgid "driver/serial"
msgstr ""

#: ../../../filesystems/proc.rst:1534
msgid "usage statistic and status of single tty lines"
msgstr ""

#: ../../../filesystems/proc.rst:1537
msgid ""
"To see  which  tty's  are  currently in use, you can simply look into the "
"file /proc/tty/drivers::"
msgstr ""

#: ../../../filesystems/proc.rst:1555
msgid "1.7 Miscellaneous kernel statistics in /proc/stat"
msgstr ""

#: ../../../filesystems/proc.rst:1557
msgid ""
"Various pieces   of  information about  kernel activity  are  available in "
"the /proc/stat file.  All  of  the numbers reported  in  this file are  "
"aggregates since the system first booted.  For a quick look, simply cat the "
"file::"
msgstr ""

#: ../../../filesystems/proc.rst:1575
msgid ""
"The very first  \"cpu\" line aggregates the  numbers in all  of the other "
"\"cpuN\" lines.  These numbers identify the amount of time the CPU has spent "
"performing different kinds of work.  Time units are in USER_HZ (typically "
"hundredths of a second).  The meanings of the columns are as follows, from "
"left to right:"
msgstr ""

#: ../../../filesystems/proc.rst:1580
msgid "user: normal processes executing in user mode"
msgstr ""

#: ../../../filesystems/proc.rst:1581
msgid "nice: niced processes executing in user mode"
msgstr ""

#: ../../../filesystems/proc.rst:1582
msgid "system: processes executing in kernel mode"
msgstr ""

#: ../../../filesystems/proc.rst:1583
msgid "idle: twiddling thumbs"
msgstr ""

#: ../../../filesystems/proc.rst:1584
msgid ""
"iowait: In a word, iowait stands for waiting for I/O to complete. But there "
"are several problems:"
msgstr ""

#: ../../../filesystems/proc.rst:1587
msgid ""
"CPU will not wait for I/O to complete, iowait is the time that a task is "
"waiting for I/O to complete. When CPU goes into idle state for outstanding "
"task I/O, another task will be scheduled on this CPU."
msgstr ""

#: ../../../filesystems/proc.rst:1590
msgid ""
"In a multi-core CPU, the task waiting for I/O to complete is not running on "
"any CPU, so the iowait of each CPU is difficult to calculate."
msgstr ""

#: ../../../filesystems/proc.rst:1592
msgid ""
"The value of iowait field in /proc/stat will decrease in certain conditions."
msgstr ""

#: ../../../filesystems/proc.rst:1595
msgid "So, the iowait is not reliable by reading from /proc/stat."
msgstr ""

#: ../../../filesystems/proc.rst:1596
msgid "irq: servicing interrupts"
msgstr ""

#: ../../../filesystems/proc.rst:1597
msgid "softirq: servicing softirqs"
msgstr ""

#: ../../../filesystems/proc.rst:1598
msgid "steal: involuntary wait"
msgstr ""

#: ../../../filesystems/proc.rst:1599
msgid "guest: running a normal guest"
msgstr ""

#: ../../../filesystems/proc.rst:1600
msgid "guest_nice: running a niced guest"
msgstr ""

#: ../../../filesystems/proc.rst:1602
msgid ""
"The \"intr\" line gives counts of interrupts  serviced since boot time, for "
"each of the  possible system interrupts.   The first  column  is the  total "
"of  all interrupts serviced  including  unnumbered  architecture specific  "
"interrupts; each  subsequent column is the  total for that particular "
"numbered interrupt. Unnumbered interrupts are not shown, only summed into "
"the total."
msgstr ""

#: ../../../filesystems/proc.rst:1608
msgid ""
"The \"ctxt\" line gives the total number of context switches across all CPUs."
msgstr ""

#: ../../../filesystems/proc.rst:1610
msgid ""
"The \"btime\" line gives  the time at which the  system booted, in seconds "
"since the Unix epoch."
msgstr ""

#: ../../../filesystems/proc.rst:1613
msgid ""
"The \"processes\" line gives the number  of processes and threads created, "
"which includes (but  is not limited  to) those  created by  calls to the  "
"fork() and clone() system calls."
msgstr ""

#: ../../../filesystems/proc.rst:1617
msgid ""
"The \"procs_running\" line gives the total number of threads that are "
"running or ready to run (i.e., the total number of runnable threads)."
msgstr ""

#: ../../../filesystems/proc.rst:1620
msgid ""
"The   \"procs_blocked\" line gives  the  number of  processes currently "
"blocked, waiting for I/O to complete."
msgstr ""

#: ../../../filesystems/proc.rst:1623
msgid ""
"The \"softirq\" line gives counts of softirqs serviced since boot time, for "
"each of the possible system softirqs. The first column is the total of all "
"softirqs serviced; each subsequent column is the total for that particular "
"softirq."
msgstr ""

#: ../../../filesystems/proc.rst:1630
msgid "1.8 Ext4 file system parameters"
msgstr ""

#: ../../../filesystems/proc.rst:1632
msgid ""
"Information about mounted ext4 file systems can be found in /proc/fs/ext4.  "
"Each mounted filesystem will have a directory in /proc/fs/ext4 based on its "
"device name (i.e., /proc/fs/ext4/hdc or /proc/fs/ext4/sda9 or /proc/fs/ext4/"
"dm-0).   The files in each per-device directory are shown in Table 1-12, "
"below."
msgstr ""

#: ../../../filesystems/proc.rst:1638
msgid "Table 1-12: Files in /proc/fs/ext4/<devname>"
msgstr ""

#: ../../../filesystems/proc.rst:1642
msgid "mb_groups"
msgstr ""

#: ../../../filesystems/proc.rst:1642
msgid "details of multiblock allocator buddy cache of free blocks"
msgstr ""

#: ../../../filesystems/proc.rst:1646
msgid "1.9 /proc/consoles"
msgstr ""

#: ../../../filesystems/proc.rst:1647
msgid "Shows registered system console lines."
msgstr ""

#: ../../../filesystems/proc.rst:1649
msgid ""
"To see which character device lines are currently used for the system "
"console /dev/console, you may simply look into the file /proc/consoles::"
msgstr ""

#: ../../../filesystems/proc.rst:1656
msgid "The columns are:"
msgstr ""

#: ../../../filesystems/proc.rst:1659
msgid "device"
msgstr ""

#: ../../../filesystems/proc.rst:1659
msgid "name of the device"
msgstr ""

#: ../../../filesystems/proc.rst:1661
msgid "operations"
msgstr ""

#: ../../../filesystems/proc.rst:1661
msgid "R = can do read operations"
msgstr ""

#: ../../../filesystems/proc.rst:1662
msgid "W = can do write operations"
msgstr ""

#: ../../../filesystems/proc.rst:1663
msgid "U = can do unblank"
msgstr ""

#: ../../../filesystems/proc.rst:1665
msgid "E = it is enabled"
msgstr ""

#: ../../../filesystems/proc.rst:1666
msgid "C = it is preferred console"
msgstr ""

#: ../../../filesystems/proc.rst:1667
msgid "B = it is primary boot console"
msgstr ""

#: ../../../filesystems/proc.rst:1668
msgid "p = it is used for printk buffer"
msgstr ""

#: ../../../filesystems/proc.rst:1669
msgid "b = it is not a TTY but a Braille device"
msgstr ""

#: ../../../filesystems/proc.rst:1670
msgid "a = it is safe to use when cpu is offline"
msgstr ""

#: ../../../filesystems/proc.rst:1672
msgid "major:minor"
msgstr ""

#: ../../../filesystems/proc.rst:1672
msgid "major and minor number of the device separated by a colon"
msgstr ""

#: ../../../filesystems/proc.rst:1677 ../../../filesystems/proc.rst:1724
msgid "Summary"
msgstr ""

#: ../../../filesystems/proc.rst:1679
msgid ""
"The /proc file system serves information about the running system. It not "
"only allows access to process data but also allows you to request the kernel "
"status by reading files in the hierarchy."
msgstr ""

#: ../../../filesystems/proc.rst:1683
msgid ""
"The directory  structure  of /proc reflects the types of information and "
"makes it easy, if not obvious, where to look for specific data."
msgstr ""

#: ../../../filesystems/proc.rst:1687
msgid "Chapter 2: Modifying System Parameters"
msgstr ""

#: ../../../filesystems/proc.rst:1692
msgid "Modifying kernel parameters by writing into files found in /proc/sys"
msgstr ""

#: ../../../filesystems/proc.rst:1693
msgid "Exploring the files which modify certain parameters"
msgstr ""

#: ../../../filesystems/proc.rst:1694
msgid "Review of the /proc/sys file tree"
msgstr ""

#: ../../../filesystems/proc.rst:1698
msgid ""
"A very  interesting part of /proc is the directory /proc/sys. This is not "
"only a source  of  information,  it also allows you to change parameters "
"within the kernel. Be  very  careful  when attempting this. You can optimize "
"your system, but you  can  also  cause  it  to  crash.  Never  alter kernel "
"parameters on a production system.  Set  up  a  development machine and test "
"to make sure that everything works  the  way  you want it to. You may have "
"no alternative but to reboot the machine once an error has been made."
msgstr ""

#: ../../../filesystems/proc.rst:1706
msgid ""
"To change  a  value,  simply  echo  the new value into the file. You need to "
"be root to do this. You  can  create  your  own  boot script to perform this "
"every time your system boots."
msgstr ""

#: ../../../filesystems/proc.rst:1710
msgid ""
"The files  in /proc/sys can be used to fine tune and monitor miscellaneous "
"and general things  in  the operation of the Linux kernel. Since some of the "
"files can inadvertently  disrupt  your  system,  it  is  advisable  to  "
"read  both documentation and  source  before actually making adjustments. In "
"any case, be very careful  when  writing  to  any  of these files. The "
"entries in /proc may change slightly between the 2.1.* and the 2.2 kernel, "
"so if there is any doubt review the kernel documentation in the directory "
"linux/Documentation. This chapter  is  heavily  based  on the documentation "
"included in the pre 2.2 kernels, and became part of it in version 2.2.1 of "
"the Linux kernel."
msgstr ""

#: ../../../filesystems/proc.rst:1720
msgid ""
"Please see: Documentation/admin-guide/sysctl/ directory for descriptions of "
"these entries."
msgstr ""

#: ../../../filesystems/proc.rst:1726
msgid ""
"Certain aspects  of  kernel  behavior  can be modified at runtime, without "
"the need to  recompile  the kernel, or even to reboot the system. The files "
"in the /proc/sys tree  can  not only be read, but also modified. You can use "
"the echo command to write value into these files, thereby changing the "
"default settings of the kernel."
msgstr ""

#: ../../../filesystems/proc.rst:1734
msgid "Chapter 3: Per-process Parameters"
msgstr ""

#: ../../../filesystems/proc.rst:1737
msgid ""
"3.1 /proc/<pid>/oom_adj & /proc/<pid>/oom_score_adj- Adjust the oom-killer "
"score"
msgstr ""

#: ../../../filesystems/proc.rst:1739
msgid ""
"These files can be used to adjust the badness heuristic used to select which "
"process gets killed in out of memory (oom) conditions."
msgstr ""

#: ../../../filesystems/proc.rst:1742
msgid ""
"The badness heuristic assigns a value to each candidate task ranging from 0 "
"(never kill) to 1000 (always kill) to determine which process is targeted.  "
"The units are roughly a proportion along that range of allowed memory the "
"process may allocate from based on an estimation of its current memory and "
"swap use. For example, if a task is using all allowed memory, its badness "
"score will be 1000.  If it is using half of its allowed memory, its score "
"will be 500."
msgstr ""

#: ../../../filesystems/proc.rst:1749
msgid ""
"The amount of \"allowed\" memory depends on the context in which the oom "
"killer was called.  If it is due to the memory assigned to the allocating "
"task's cpuset being exhausted, the allowed memory represents the set of mems "
"assigned to that cpuset.  If it is due to a mempolicy's node(s) being "
"exhausted, the allowed memory represents the set of mempolicy nodes.  If it "
"is due to a memory limit (or swap limit) being reached, the allowed memory "
"is that configured limit.  Finally, if it is due to the entire system being "
"out of memory, the allowed memory represents all allocatable resources."
msgstr ""

#: ../../../filesystems/proc.rst:1758
msgid ""
"The value of /proc/<pid>/oom_score_adj is added to the badness score before "
"it is used to determine which task to kill.  Acceptable values range from "
"-1000 (OOM_SCORE_ADJ_MIN) to +1000 (OOM_SCORE_ADJ_MAX).  This allows "
"userspace to polarize the preference for oom killing either by always "
"preferring a certain task or completely disabling it.  The lowest possible "
"value, -1000, is equivalent to disabling oom killing entirely for that task "
"since it will always report a badness score of 0."
msgstr ""

#: ../../../filesystems/proc.rst:1766
msgid ""
"Consequently, it is very simple for userspace to define the amount of memory "
"to consider for each task.  Setting a /proc/<pid>/oom_score_adj value of "
"+500, for example, is roughly equivalent to allowing the remainder of tasks "
"sharing the same system, cpuset, mempolicy, or memory controller resources "
"to use at least 50% more memory.  A value of -500, on the other hand, would "
"be roughly equivalent to discounting 50% of the task's allowed memory from "
"being considered as scoring against the task."
msgstr ""

#: ../../../filesystems/proc.rst:1774
msgid ""
"For backwards compatibility with previous kernels, /proc/<pid>/oom_adj may "
"also be used to tune the badness score.  Its acceptable values range from "
"-16 (OOM_ADJUST_MIN) to +15 (OOM_ADJUST_MAX) and a special value of -17 "
"(OOM_DISABLE) to disable oom killing entirely for that task.  Its value is "
"scaled linearly with /proc/<pid>/oom_score_adj."
msgstr ""

#: ../../../filesystems/proc.rst:1780
msgid ""
"The value of /proc/<pid>/oom_score_adj may be reduced no lower than the last "
"value set by a CAP_SYS_RESOURCE process. To reduce the value any lower "
"requires CAP_SYS_RESOURCE."
msgstr ""

#: ../../../filesystems/proc.rst:1786
msgid "3.2 /proc/<pid>/oom_score - Display current oom-killer score"
msgstr ""

#: ../../../filesystems/proc.rst:1788
msgid ""
"This file can be used to check the current score used by the oom-killer for "
"any given <pid>. Use it together with /proc/<pid>/oom_score_adj to tune "
"which process should be killed in an out-of-memory situation."
msgstr ""

#: ../../../filesystems/proc.rst:1792
msgid ""
"Please note that the exported value includes oom_score_adj so it is "
"effectively in range [0,2000]."
msgstr ""

#: ../../../filesystems/proc.rst:1797
msgid "3.3  /proc/<pid>/io - Display the IO accounting fields"
msgstr ""

#: ../../../filesystems/proc.rst:1799
msgid "This file contains IO statistics for each running process."
msgstr ""

#: ../../../filesystems/proc.rst:1802 ../../../filesystems/proc.rst:2230
#: ../../../filesystems/proc.rst:2290
msgid "Example"
msgstr ""

#: ../../../filesystems/proc.rst:1820 ../../../filesystems/proc.rst:2238
#: ../../../filesystems/proc.rst:2303
msgid "Description"
msgstr "描述"

#: ../../../filesystems/proc.rst:1823
msgid "rchar"
msgstr ""

#: ../../../filesystems/proc.rst:1825
msgid ""
"I/O counter: chars read The number of bytes which this task has caused to be "
"read from storage. This is simply the sum of bytes which this process passed "
"to read() and pread(). It includes things like tty IO and it is unaffected "
"by whether or not actual physical disk IO was required (the read might have "
"been satisfied from pagecache)."
msgstr ""

#: ../../../filesystems/proc.rst:1834
msgid "wchar"
msgstr ""

#: ../../../filesystems/proc.rst:1836
msgid ""
"I/O counter: chars written The number of bytes which this task has caused, "
"or shall cause to be written to disk. Similar caveats apply here as with "
"rchar."
msgstr ""

#: ../../../filesystems/proc.rst:1842
msgid "syscr"
msgstr ""

#: ../../../filesystems/proc.rst:1844
msgid ""
"I/O counter: read syscalls Attempt to count the number of read I/O "
"operations, i.e. syscalls like read() and pread()."
msgstr ""

#: ../../../filesystems/proc.rst:1850
msgid "syscw"
msgstr ""

#: ../../../filesystems/proc.rst:1852
msgid ""
"I/O counter: write syscalls Attempt to count the number of write I/O "
"operations, i.e. syscalls like write() and pwrite()."
msgstr ""

#: ../../../filesystems/proc.rst:1858
msgid "read_bytes"
msgstr ""

#: ../../../filesystems/proc.rst:1860
msgid ""
"I/O counter: bytes read Attempt to count the number of bytes which this "
"process really did cause to be fetched from the storage layer. Done at the "
"submit_bio() level, so it is accurate for block-backed filesystems. <please "
"add status regarding NFS and CIFS at a later time>"
msgstr ""

#: ../../../filesystems/proc.rst:1868
msgid "write_bytes"
msgstr ""

#: ../../../filesystems/proc.rst:1870
msgid ""
"I/O counter: bytes written Attempt to count the number of bytes which this "
"process caused to be sent to the storage layer. This is done at page-"
"dirtying time."
msgstr ""

#: ../../../filesystems/proc.rst:1876
msgid "cancelled_write_bytes"
msgstr ""

#: ../../../filesystems/proc.rst:1878
msgid ""
"The big inaccuracy here is truncate. If a process writes 1MB to a file and "
"then deletes the file, it will in fact perform no writeout. But it will have "
"been accounted as having caused 1MB of write. In other words: The number of "
"bytes which this process caused to not happen, by truncating pagecache. A "
"task can cause \"negative\" IO too. If this task truncates some dirty "
"pagecache, some IO which another task has been accounted for (in its "
"write_bytes) will not be happening. We _could_ just subtract that from the "
"truncating task's write_bytes, but there is information loss in doing that."
msgstr ""

#: ../../../filesystems/proc.rst:1891
msgid ""
"At its current implementation state, this is a bit racy on 32-bit machines: "
"if process A reads process B's /proc/pid/io while process B is updating one "
"of those 64-bit counters, process A could see an intermediate result."
msgstr ""

#: ../../../filesystems/proc.rst:1896
msgid ""
"More information about this can be found within the taskstats documentation "
"in Documentation/accounting."
msgstr ""

#: ../../../filesystems/proc.rst:1900
msgid "3.4 /proc/<pid>/coredump_filter - Core dump filtering settings"
msgstr ""

#: ../../../filesystems/proc.rst:1901
msgid ""
"When a process is dumped, all anonymous memory is written to a core file as "
"long as the size of the core file isn't limited. But sometimes we don't want "
"to dump some memory segments, for example, huge shared memory or DAX. "
"Conversely, sometimes we want to save file-backed memory segments into a "
"core file, not only the individual files."
msgstr ""

#: ../../../filesystems/proc.rst:1907
msgid ""
"/proc/<pid>/coredump_filter allows you to customize which memory segments "
"will be dumped when the <pid> process is dumped. coredump_filter is a "
"bitmask of memory types. If a bit of the bitmask is set, memory segments of "
"the corresponding memory type are dumped, otherwise they are not dumped."
msgstr ""

#: ../../../filesystems/proc.rst:1912
msgid "The following 9 memory types are supported:"
msgstr ""

#: ../../../filesystems/proc.rst:1914
msgid "(bit 0) anonymous private memory"
msgstr ""

#: ../../../filesystems/proc.rst:1915
msgid "(bit 1) anonymous shared memory"
msgstr ""

#: ../../../filesystems/proc.rst:1916
msgid "(bit 2) file-backed private memory"
msgstr ""

#: ../../../filesystems/proc.rst:1917
msgid "(bit 3) file-backed shared memory"
msgstr ""

#: ../../../filesystems/proc.rst:1918
msgid ""
"(bit 4) ELF header pages in file-backed private memory areas (it is "
"effective only if the bit 2 is cleared)"
msgstr ""

#: ../../../filesystems/proc.rst:1920
msgid "(bit 5) hugetlb private memory"
msgstr ""

#: ../../../filesystems/proc.rst:1921
msgid "(bit 6) hugetlb shared memory"
msgstr ""

#: ../../../filesystems/proc.rst:1922
msgid "(bit 7) DAX private memory"
msgstr ""

#: ../../../filesystems/proc.rst:1923
msgid "(bit 8) DAX shared memory"
msgstr ""

#: ../../../filesystems/proc.rst:1925
msgid ""
"Note that MMIO pages such as frame buffer are never dumped and vDSO pages "
"are always dumped regardless of the bitmask status."
msgstr ""

#: ../../../filesystems/proc.rst:1928
msgid ""
"Note that bits 0-4 don't affect hugetlb or DAX memory. hugetlb memory is "
"only affected by bit 5-6, and DAX is only affected by bits 7-8."
msgstr ""

#: ../../../filesystems/proc.rst:1931
msgid ""
"The default value of coredump_filter is 0x33; this means all anonymous "
"memory segments, ELF header pages and hugetlb private memory are dumped."
msgstr ""

#: ../../../filesystems/proc.rst:1934
msgid ""
"If you don't want to dump all shared memory segments attached to pid 1234, "
"write 0x31 to the process's proc file::"
msgstr ""

#: ../../../filesystems/proc.rst:1939
msgid ""
"When a new process is created, the process inherits the bitmask status from "
"its parent. It is useful to set up coredump_filter before the program runs. "
"For example::"
msgstr ""

#: ../../../filesystems/proc.rst:1947
msgid "3.5     /proc/<pid>/mountinfo - Information about mounts"
msgstr ""

#: ../../../filesystems/proc.rst:1949
msgid "This file contains lines of the form::"
msgstr ""

#: ../../../filesystems/proc.rst:1966
msgid ""
"Parsers should ignore all unrecognised optional fields.  Currently the "
"possible optional fields are:"
msgstr ""

#: ../../../filesystems/proc.rst:1970
msgid "shared:X"
msgstr ""

#: ../../../filesystems/proc.rst:1970
msgid "mount is shared in peer group X"
msgstr ""

#: ../../../filesystems/proc.rst:1971
msgid "master:X"
msgstr ""

#: ../../../filesystems/proc.rst:1971
msgid "mount is slave to peer group X"
msgstr ""

#: ../../../filesystems/proc.rst:1972
msgid "propagate_from:X"
msgstr ""

#: ../../../filesystems/proc.rst:1972
msgid "mount is slave and receives propagation from peer group X [#]_"
msgstr ""

#: ../../../filesystems/proc.rst:1973
msgid "unbindable"
msgstr ""

#: ../../../filesystems/proc.rst:1973
msgid "mount is unbindable"
msgstr ""

#: ../../../filesystems/proc.rst:1976
msgid ""
"X is the closest dominant peer group under the process's root.  If X is the "
"immediate master of the mount, or if there's no dominant peer group under "
"the same root, then only the \"master:X\" field is present and not the "
"\"propagate_from:X\" field."
msgstr ""

#: ../../../filesystems/proc.rst:1981
msgid "For more information on mount propagation see:"
msgstr ""

#: ../../../filesystems/proc.rst:1983
msgid "Documentation/filesystems/sharedsubtree.rst"
msgstr ""

#: ../../../filesystems/proc.rst:1987
msgid "3.6     /proc/<pid>/comm  & /proc/<pid>/task/<tid>/comm"
msgstr ""

#: ../../../filesystems/proc.rst:1988
msgid ""
"These files provide a method to access a task's comm value. It also allows "
"for a task to set its own or one of its thread siblings comm value. The comm "
"value is limited in size compared to the cmdline value, so writing anything "
"longer then the kernel's TASK_COMM_LEN (currently 16 chars, including the "
"NUL terminator) will result in a truncated comm value."
msgstr ""

#: ../../../filesystems/proc.rst:1996
msgid ""
"3.7     /proc/<pid>/task/<tid>/children - Information about task children"
msgstr ""

#: ../../../filesystems/proc.rst:1997
msgid ""
"This file provides a fast way to retrieve first level children pids of a "
"task pointed by <pid>/<tid> pair. The format is a space separated stream of "
"pids."
msgstr ""

#: ../../../filesystems/proc.rst:2001
msgid ""
"Note the \"first level\" here -- if a child has its own children they will "
"not be listed here; one needs to read /proc/<children-pid>/task/<tid>/"
"children to obtain the descendants."
msgstr ""

#: ../../../filesystems/proc.rst:2005
msgid ""
"Since this interface is intended to be fast and cheap it doesn't guarantee "
"to provide precise results and some children might be skipped, especially if "
"they've exited right after we printed their pids, so one needs to either "
"stop or freeze processes being inspected if precise results are needed."
msgstr ""

#: ../../../filesystems/proc.rst:2013
msgid "3.8     /proc/<pid>/fdinfo/<fd> - Information about opened file"
msgstr ""

#: ../../../filesystems/proc.rst:2014
msgid ""
"This file provides information associated with an opened file. The regular "
"files have at least four fields -- 'pos', 'flags', 'mnt_id' and 'ino'. The "
"'pos' represents the current offset of the opened file in decimal form [see "
"lseek(2) for details], 'flags' denotes the octal O_xxx mask the file has "
"been created with [see open(2) for details] and 'mnt_id' represents mount ID "
"of the file system containing the opened file [see 3.5 /proc/<pid>/mountinfo "
"for details]. 'ino' represents the inode number of the file."
msgstr ""

#: ../../../filesystems/proc.rst:2023
msgid "A typical output is::"
msgstr ""

#: ../../../filesystems/proc.rst:2030
msgid ""
"All locks associated with a file descriptor are shown in its fdinfo too::"
msgstr ""

#: ../../../filesystems/proc.rst:2034
msgid ""
"The files such as eventfd, fsnotify, signalfd, epoll among the regular pos/"
"flags pair provide additional information particular to the objects they "
"represent."
msgstr ""

#: ../../../filesystems/proc.rst:2038
msgid "Eventfd files"
msgstr ""

#: ../../../filesystems/proc.rst:2048
msgid "where 'eventfd-count' is hex value of a counter."
msgstr ""

#: ../../../filesystems/proc.rst:2051
msgid "Signalfd files"
msgstr ""

#: ../../../filesystems/proc.rst:2061
msgid "where 'sigmask' is hex value of the signal mask associated with a file."
msgstr ""

#: ../../../filesystems/proc.rst:2065
msgid "Epoll files"
msgstr ""

#: ../../../filesystems/proc.rst:2075
msgid ""
"where 'tfd' is a target file descriptor number in decimal form, 'events' is "
"events mask being watched and the 'data' is data associated with a target "
"[see epoll(7) for more details]."
msgstr ""

#: ../../../filesystems/proc.rst:2079
msgid ""
"The 'pos' is current offset of the target file in decimal form [see "
"lseek(2)], 'ino' and 'sdev' are inode and device numbers where target file "
"resides, all in hex format."
msgstr ""

#: ../../../filesystems/proc.rst:2084
msgid "Fsnotify files"
msgstr ""

#: ../../../filesystems/proc.rst:2085
msgid "For inotify files the format is the following::"
msgstr ""

#: ../../../filesystems/proc.rst:2093
msgid ""
"where 'wd' is a watch descriptor in decimal form, i.e. a target file "
"descriptor number, 'ino' and 'sdev' are inode and device where the target "
"file resides and the 'mask' is the mask of events, all in hex form [see "
"inotify(7) for more details]."
msgstr ""

#: ../../../filesystems/proc.rst:2098
msgid ""
"If the kernel was built with exportfs support, the path to the target file "
"is encoded as a file handle.  The file handle is provided by three fields "
"'fhandle-bytes', 'fhandle-type' and 'f_handle', all in hex format."
msgstr ""

#: ../../../filesystems/proc.rst:2103
msgid ""
"If the kernel is built without exportfs support the file handle won't be "
"printed out."
msgstr ""

#: ../../../filesystems/proc.rst:2106
msgid ""
"If there is no inotify mark attached yet the 'inotify' line will be omitted."
msgstr ""

#: ../../../filesystems/proc.rst:2108
msgid "For fanotify files the format is::"
msgstr ""

#: ../../../filesystems/proc.rst:2118
msgid ""
"where fanotify 'flags' and 'event-flags' are values used in fanotify_init "
"call, 'mnt_id' is the mount point identifier, 'mflags' is the value of flags "
"associated with mark which are tracked separately from events mask. 'ino' "
"and 'sdev' are target inode and device, 'mask' is the events mask and "
"'ignored_mask' is the mask of events which are to be ignored. All are in hex "
"format. Incorporation of 'mflags', 'mask' and 'ignored_mask' provide "
"information about flags and mask used in fanotify_mark call [see fsnotify "
"manpage for details]."
msgstr ""

#: ../../../filesystems/proc.rst:2127
msgid ""
"While the first three lines are mandatory and always printed, the rest is "
"optional and may be omitted if no marks created yet."
msgstr ""

#: ../../../filesystems/proc.rst:2131
msgid "Timerfd files"
msgstr ""

#: ../../../filesystems/proc.rst:2145
msgid ""
"where 'clockid' is the clock type and 'ticks' is the number of the timer "
"expirations that have occurred [see timerfd_create(2) for details]. 'settime "
"flags' are flags in octal form been used to setup the timer [see "
"timerfd_settime(2) for details]. 'it_value' is remaining time until the "
"timer expiration. 'it_interval' is the interval for the timer. Note the "
"timer might be set up with TIMER_ABSTIME option which will be shown in "
"'settime flags', but 'it_value' still exhibits timer's remaining time."
msgstr ""

#: ../../../filesystems/proc.rst:2154
msgid "DMA Buffer files"
msgstr ""

#: ../../../filesystems/proc.rst:2166
msgid ""
"where 'size' is the size of the DMA buffer in bytes. 'count' is the file "
"count of the DMA buffer file. 'exp_name' is the name of the DMA buffer "
"exporter."
msgstr ""

#: ../../../filesystems/proc.rst:2170
msgid "3.9     /proc/<pid>/map_files - Information about memory mapped files"
msgstr ""

#: ../../../filesystems/proc.rst:2171
msgid ""
"This directory contains symbolic links which represent memory mapped files "
"the process is maintaining.  Example output::"
msgstr ""

#: ../../../filesystems/proc.rst:2181
msgid ""
"The name of a link represents the virtual memory bounds of a mapping, i.e. "
"vm_area_struct::vm_start-vm_area_struct::vm_end."
msgstr ""

#: ../../../filesystems/proc.rst:2184
msgid ""
"The main purpose of the map_files is to retrieve a set of memory mapped "
"files in a fast way instead of parsing /proc/<pid>/maps or /proc/<pid>/"
"smaps, both of which contain many more records.  At the same time one can "
"open(2) mappings from the listings of two processes and comparing their "
"inode numbers to figure out which anonymous memory areas are actually shared."
msgstr ""

#: ../../../filesystems/proc.rst:2192
msgid "3.10    /proc/<pid>/timerslack_ns - Task timerslack value"
msgstr ""

#: ../../../filesystems/proc.rst:2193
msgid ""
"This file provides the value of the task's timerslack value in nanoseconds. "
"This value specifies an amount of time that normal timers may be deferred in "
"order to coalesce timers and avoid unnecessary wakeups."
msgstr ""

#: ../../../filesystems/proc.rst:2197
msgid ""
"This allows a task's interactivity vs power consumption tradeoff to be "
"adjusted."
msgstr ""

#: ../../../filesystems/proc.rst:2200
msgid ""
"Writing 0 to the file will set the task's timerslack to the default value."
msgstr ""

#: ../../../filesystems/proc.rst:2202
msgid "Valid values are from 0 - ULLONG_MAX"
msgstr ""

#: ../../../filesystems/proc.rst:2204
msgid ""
"An application setting the value must have PTRACE_MODE_ATTACH_FSCREDS level "
"permissions on the task specified to change its timerslack_ns value."
msgstr ""

#: ../../../filesystems/proc.rst:2208
msgid "3.11    /proc/<pid>/patch_state - Livepatch patch operation state"
msgstr ""

#: ../../../filesystems/proc.rst:2209
msgid ""
"When CONFIG_LIVEPATCH is enabled, this file displays the value of the patch "
"state for the task."
msgstr ""

#: ../../../filesystems/proc.rst:2212
msgid "A value of '-1' indicates that no patch is in transition."
msgstr ""

#: ../../../filesystems/proc.rst:2214
msgid ""
"A value of '0' indicates that a patch is in transition and the task is "
"unpatched.  If the patch is being enabled, then the task hasn't been patched "
"yet.  If the patch is being disabled, then the task has already been "
"unpatched."
msgstr ""

#: ../../../filesystems/proc.rst:2219
msgid ""
"A value of '1' indicates that a patch is in transition and the task is "
"patched.  If the patch is being enabled, then the task has already been "
"patched.  If the patch is being disabled, then the task hasn't been "
"unpatched yet."
msgstr ""

#: ../../../filesystems/proc.rst:2225
msgid "3.12 /proc/<pid>/arch_status - task architecture specific status"
msgstr ""

#: ../../../filesystems/proc.rst:2226
msgid ""
"When CONFIG_PROC_PID_ARCH_STATUS is enabled, this file displays the "
"architecture specific status of the task."
msgstr ""

#: ../../../filesystems/proc.rst:2241
msgid "x86 specific entries"
msgstr ""

#: ../../../filesystems/proc.rst:2244
msgid "AVX512_elapsed_ms"
msgstr ""

#: ../../../filesystems/proc.rst:2246
msgid ""
"If AVX512 is supported on the machine, this entry shows the milliseconds "
"elapsed since the last time AVX512 usage was recorded. The recording happens "
"on a best effort basis when a task is scheduled out. This means that the "
"value depends on two factors:"
msgstr ""

#: ../../../filesystems/proc.rst:2251
msgid ""
"The time which the task spent on the CPU without being scheduled out. With "
"CPU isolation and a single runnable task this can take several seconds."
msgstr ""

#: ../../../filesystems/proc.rst:2255
msgid ""
"The time since the task was scheduled out last. Depending on the reason for "
"being scheduled out (time slice exhausted, syscall ...) this can be "
"arbitrary long time."
msgstr ""

#: ../../../filesystems/proc.rst:2259
msgid ""
"As a consequence the value cannot be considered precise and authoritative "
"information. The application which uses this information has to be aware of "
"the overall scenario on the system in order to determine whether a task is a "
"real AVX512 user or not. Precise information can be obtained with "
"performance counters."
msgstr ""

#: ../../../filesystems/proc.rst:2265
msgid ""
"A special value of '-1' indicates that no AVX512 usage was recorded, thus "
"the task is unlikely an AVX512 user, but depends on the workload and the "
"scheduling scenario, it also could be a false negative mentioned above."
msgstr ""

#: ../../../filesystems/proc.rst:2270
msgid "3.13 /proc/<pid>/fd - List of symlinks to open files"
msgstr ""

#: ../../../filesystems/proc.rst:2271
msgid ""
"This directory contains symbolic links which represent open files the "
"process is maintaining.  Example output::"
msgstr ""

#: ../../../filesystems/proc.rst:2280
msgid ""
"The number of open files for the process is stored in 'size' member of "
"stat() output for /proc/<pid>/fd for fast access. "
"-------------------------------------------------------"
msgstr ""

#: ../../../filesystems/proc.rst:2285
msgid "3.14 /proc/<pid/ksm_stat - Information about the process's ksm status"
msgstr ""

#: ../../../filesystems/proc.rst:2286
msgid ""
"When CONFIG_KSM is enabled, each process has this file which displays the "
"information of ksm merging status."
msgstr ""

#: ../../../filesystems/proc.rst:2306
msgid "ksm_rmap_items"
msgstr ""

#: ../../../filesystems/proc.rst:2308
msgid ""
"The number of ksm_rmap_item structures in use.  The structure ksm_rmap_item "
"stores the reverse mapping information for virtual addresses.  KSM will "
"generate a ksm_rmap_item for each ksm-scanned page of the process."
msgstr ""

#: ../../../filesystems/proc.rst:2314
msgid "ksm_zero_pages"
msgstr ""

#: ../../../filesystems/proc.rst:2316
msgid ""
"When /sys/kernel/mm/ksm/use_zero_pages is enabled, it represent how many "
"empty pages are merged with kernel zero pages by KSM."
msgstr ""

#: ../../../filesystems/proc.rst:2320
msgid "ksm_merging_pages"
msgstr ""

#: ../../../filesystems/proc.rst:2322
msgid ""
"It represents how many pages of this process are involved in KSM merging "
"(not including ksm_zero_pages). It is the same with what /proc/<pid>/"
"ksm_merging_pages shows."
msgstr ""

#: ../../../filesystems/proc.rst:2327
msgid "ksm_process_profit"
msgstr ""

#: ../../../filesystems/proc.rst:2329
msgid ""
"The profit that KSM brings (Saved bytes). KSM can save memory by merging "
"identical pages, but also can consume additional memory, because it needs to "
"generate a number of rmap_items to save each scanned page's brief rmap "
"information. Some of these pages may be merged, but some may not be abled to "
"be merged after being checked several times, which are unprofitable memory "
"consumed."
msgstr ""

#: ../../../filesystems/proc.rst:2337
msgid "ksm_merge_any"
msgstr ""

#: ../../../filesystems/proc.rst:2339
msgid ""
"It specifies whether the process's 'mm is added by prctl() into the "
"candidate list of KSM or not, and if KSM scanning is fully enabled at "
"process level."
msgstr ""

#: ../../../filesystems/proc.rst:2344
msgid "ksm_mergeable"
msgstr ""

#: ../../../filesystems/proc.rst:2346
msgid ""
"It specifies whether any VMAs of the process''s mms are currently applicable "
"to KSM."
msgstr ""

#: ../../../filesystems/proc.rst:2349
msgid ""
"More information about KSM can be found in Documentation/admin-guide/mm/ksm."
"rst."
msgstr ""

#: ../../../filesystems/proc.rst:2354
msgid "Chapter 4: Configuring procfs"
msgstr ""

#: ../../../filesystems/proc.rst:2357
msgid "4.1     Mount options"
msgstr ""

#: ../../../filesystems/proc.rst:2359
msgid "The following mount options are supported:"
msgstr ""

#: ../../../filesystems/proc.rst:2362
msgid "hidepid="
msgstr ""

#: ../../../filesystems/proc.rst:2362
msgid "Set /proc/<pid>/ access mode."
msgstr ""

#: ../../../filesystems/proc.rst:2363
msgid "gid="
msgstr ""

#: ../../../filesystems/proc.rst:2363
msgid "Set the group authorized to learn processes information."
msgstr ""

#: ../../../filesystems/proc.rst:2364
msgid "subset="
msgstr ""

#: ../../../filesystems/proc.rst:2364
msgid "Show only the specified subset of procfs."
msgstr ""

#: ../../../filesystems/proc.rst:2367
msgid ""
"hidepid=off or hidepid=0 means classic mode - everybody may access all /proc/"
"<pid>/ directories (default)."
msgstr ""

#: ../../../filesystems/proc.rst:2370
msgid ""
"hidepid=noaccess or hidepid=1 means users may not access any /proc/<pid>/ "
"directories but their own.  Sensitive files like cmdline, sched*, status are "
"now protected against other users.  This makes it impossible to learn "
"whether any user runs specific program (given the program doesn't reveal "
"itself by its behaviour).  As an additional bonus, as /proc/<pid>/cmdline is "
"unaccessible for other users, poorly written programs passing sensitive "
"information via program arguments are now protected against local "
"eavesdroppers."
msgstr ""

#: ../../../filesystems/proc.rst:2378
msgid ""
"hidepid=invisible or hidepid=2 means hidepid=1 plus all /proc/<pid>/ will be "
"fully invisible to other users.  It doesn't mean that it hides a fact "
"whether a process with a specific pid value exists (it can be learned by "
"other means, e.g. by \"kill -0 $PID\"), but it hides process's uid and gid, "
"which may be learned by stat()'ing /proc/<pid>/ otherwise.  It greatly "
"complicates an intruder's task of gathering information about running "
"processes, whether some daemon runs with elevated privileges, whether other "
"user runs some sensitive program, whether other users run any program at "
"all, etc."
msgstr ""

#: ../../../filesystems/proc.rst:2387
msgid ""
"hidepid=ptraceable or hidepid=4 means that procfs should only contain /proc/"
"<pid>/ directories that the caller can ptrace."
msgstr ""

#: ../../../filesystems/proc.rst:2390
msgid ""
"gid= defines a group authorized to learn processes information otherwise "
"prohibited by hidepid=.  If you use some daemon like identd which needs to "
"learn information about processes information, just add identd to this group."
msgstr ""

#: ../../../filesystems/proc.rst:2394
msgid ""
"subset=pid hides all top level files and directories in the procfs that are "
"not related to tasks."
msgstr ""

#: ../../../filesystems/proc.rst:2398
msgid "Chapter 5: Filesystem behavior"
msgstr ""

#: ../../../filesystems/proc.rst:2400
msgid ""
"Originally, before the advent of pid namespace, procfs was a global file "
"system. It means that there was only one procfs instance in the system."
msgstr ""

#: ../../../filesystems/proc.rst:2403
msgid ""
"When pid namespace was added, a separate procfs instance was mounted in each "
"pid namespace. So, procfs mount options are global among all mountpoints "
"within the same namespace::"
msgstr ""

#: ../../../filesystems/proc.rst:2418
msgid ""
"and only after remounting procfs mount options will change at all "
"mountpoints::"
msgstr ""

#: ../../../filesystems/proc.rst:2427
msgid "This behavior is different from the behavior of other filesystems."
msgstr ""

#: ../../../filesystems/proc.rst:2429
msgid ""
"The new procfs behavior is more like other filesystems. Each procfs mount "
"creates a new procfs instance. Mount options affect own procfs instance. It "
"means that it became possible to have several procfs instances displaying "
"tasks with different filtering options in one pid namespace::"
msgstr ""
