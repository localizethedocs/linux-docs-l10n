# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../filesystems/ext4/journal.rst:4
msgid "Journal (jbd2)"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:6
msgid ""
"Introduced in ext3, the ext4 filesystem employs a journal to protect the "
"filesystem against metadata inconsistencies in the case of a system crash. "
"Up to 10,240,000 file system blocks (see man mke2fs(8) for more details on "
"journal size limits) can be reserved inside the filesystem as a place to "
"land “important” data writes on-disk as quickly as possible. Once the "
"important data transaction is fully written to the disk and flushed from the "
"disk write cache, a record of the data being committed is also written to "
"the journal. At some later point in time, the journal code writes the "
"transactions to their final locations on disk (this could involve a lot of "
"seeking or a lot of small read-write-erases) before erasing the commit "
"record. Should the system crash during the second slow write, the journal "
"can be replayed all the way to the latest commit record, guaranteeing the "
"atomicity of whatever gets written through the journal to the disk. The "
"effect of this is to guarantee that the filesystem does not become stuck "
"midway through a metadata update."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:22
msgid ""
"For performance reasons, ext4 by default only writes filesystem metadata "
"through the journal. This means that file data blocks are /not/ guaranteed "
"to be in any consistent state after a crash. If this default guarantee level "
"(``data=ordered``) is not satisfactory, there is a mount option to control "
"journal behavior. If ``data=journal``, all data and metadata are written to "
"disk through the journal. This is slower but safest. If ``data=writeback``, "
"dirty data blocks are not flushed to the disk before the metadata are "
"written to disk through the journal."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:31
msgid ""
"In case of ``data=ordered`` mode, Ext4 also supports fast commits which help "
"reduce commit latency significantly. The default ``data=ordered`` mode works "
"by logging metadata blocks to the journal. In fast commit mode, Ext4 only "
"stores the minimal delta needed to recreate the affected metadata in fast "
"commit space that is shared with JBD2. Once the fast commit area fills in or "
"if fast commit is not possible or if JBD2 commit timer goes off, Ext4 "
"performs a traditional full commit. A full commit invalidates all the fast "
"commits that happened before it and thus it makes the fast commit area empty "
"for further fast commits. This feature needs to be enabled at mkfs time."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:42
msgid ""
"The journal inode is typically inode 8. The first 68 bytes of the journal "
"inode are replicated in the ext4 superblock. The journal itself is normal "
"(but hidden) file within the filesystem. The file usually consumes an entire "
"block group, though mke2fs tries to put it in the middle of the disk."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:48
msgid ""
"All fields in jbd2 are written to disk in big-endian order. This is the "
"opposite of ext4."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:51
msgid "NOTE: Both ext4 and ocfs2 use jbd2."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:53
msgid ""
"The maximum size of a journal embedded in an ext4 filesystem is 2^32 blocks. "
"jbd2 itself does not seem to care."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:57
msgid "Layout"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:59
msgid "Generally speaking, the journal has this format:"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:65
msgid "Superblock"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:66
#: ../../../filesystems/ext4/journal.rst:96
msgid ""
"descriptor_block (data_blocks or revocation_block) [more data or "
"revocations] commmit_block"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:68
#: ../../../filesystems/ext4/journal.rst:98
msgid "[more transactions...]"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:70
#: ../../../filesystems/ext4/journal.rst:102
msgid "One transaction"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:73
msgid ""
"Notice that a transaction begins with either a descriptor and some data, or "
"a block revocation list. A finished transaction always ends with a commit. "
"If there is no commit record (or the checksums don't match), the transaction "
"will be discarded during replay."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:79
msgid "External Journal"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:81
msgid ""
"Optionally, an ext4 filesystem can be created with an external journal "
"device (as opposed to an internal journal, which uses a reserved inode). In "
"this case, on the filesystem device, ``s_journal_inum`` should be zero and "
"``s_journal_uuid`` should be set. On the journal device there will be an "
"ext4 super block in the usual place, with a matching UUID. The journal "
"superblock will be in the next full block after the superblock."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:93
msgid "1024 bytes of padding"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:94
msgid "ext4 Superblock"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:95
msgid "Journal Superblock"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:106
msgid "Block Header"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:108
msgid ""
"Every block in the journal starts with a common 12-byte header ``struct "
"journal_header_s``:"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:115
#: ../../../filesystems/ext4/journal.rst:171
#: ../../../filesystems/ext4/journal.rst:358
#: ../../../filesystems/ext4/journal.rst:383
#: ../../../filesystems/ext4/journal.rst:449
#: ../../../filesystems/ext4/journal.rst:499
#: ../../../filesystems/ext4/journal.rst:541
#: ../../../filesystems/ext4/journal.rst:571
#: ../../../filesystems/ext4/journal.rst:595
msgid "Offset"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:116
#: ../../../filesystems/ext4/journal.rst:172
#: ../../../filesystems/ext4/journal.rst:359
#: ../../../filesystems/ext4/journal.rst:384
#: ../../../filesystems/ext4/journal.rst:450
#: ../../../filesystems/ext4/journal.rst:500
#: ../../../filesystems/ext4/journal.rst:542
#: ../../../filesystems/ext4/journal.rst:572
#: ../../../filesystems/ext4/journal.rst:596
msgid "Type"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:117
#: ../../../filesystems/ext4/journal.rst:173
#: ../../../filesystems/ext4/journal.rst:360
#: ../../../filesystems/ext4/journal.rst:385
#: ../../../filesystems/ext4/journal.rst:451
#: ../../../filesystems/ext4/journal.rst:501
#: ../../../filesystems/ext4/journal.rst:543
#: ../../../filesystems/ext4/journal.rst:573
#: ../../../filesystems/ext4/journal.rst:597
msgid "Name"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:118
#: ../../../filesystems/ext4/journal.rst:142
#: ../../../filesystems/ext4/journal.rst:174
#: ../../../filesystems/ext4/journal.rst:291
#: ../../../filesystems/ext4/journal.rst:305
#: ../../../filesystems/ext4/journal.rst:335
#: ../../../filesystems/ext4/journal.rst:429
#: ../../../filesystems/ext4/journal.rst:544
#: ../../../filesystems/ext4/journal.rst:574
#: ../../../filesystems/ext4/journal.rst:649
msgid "Description"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:119
#: ../../../filesystems/ext4/journal.rst:179
#: ../../../filesystems/ext4/journal.rst:362
#: ../../../filesystems/ext4/journal.rst:387
#: ../../../filesystems/ext4/journal.rst:453
#: ../../../filesystems/ext4/journal.rst:503
#: ../../../filesystems/ext4/journal.rst:545
#: ../../../filesystems/ext4/journal.rst:575
#: ../../../filesystems/ext4/journal.rst:599
msgid "0x0"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:120
#: ../../../filesystems/ext4/journal.rst:124
#: ../../../filesystems/ext4/journal.rst:129
#: ../../../filesystems/ext4/journal.rst:184
#: ../../../filesystems/ext4/journal.rst:188
#: ../../../filesystems/ext4/journal.rst:192
#: ../../../filesystems/ext4/journal.rst:200
#: ../../../filesystems/ext4/journal.rst:204
#: ../../../filesystems/ext4/journal.rst:209
#: ../../../filesystems/ext4/journal.rst:217
#: ../../../filesystems/ext4/journal.rst:221
#: ../../../filesystems/ext4/journal.rst:225
#: ../../../filesystems/ext4/journal.rst:234
#: ../../../filesystems/ext4/journal.rst:238
#: ../../../filesystems/ext4/journal.rst:242
#: ../../../filesystems/ext4/journal.rst:246
#: ../../../filesystems/ext4/journal.rst:259
#: ../../../filesystems/ext4/journal.rst:263
#: ../../../filesystems/ext4/journal.rst:272
#: ../../../filesystems/ext4/journal.rst:388
#: ../../../filesystems/ext4/journal.rst:393
#: ../../../filesystems/ext4/journal.rst:398
#: ../../../filesystems/ext4/journal.rst:404
#: ../../../filesystems/ext4/journal.rst:454
#: ../../../filesystems/ext4/journal.rst:474
#: ../../../filesystems/ext4/journal.rst:504
#: ../../../filesystems/ext4/journal.rst:550
#: ../../../filesystems/ext4/journal.rst:576
#: ../../../filesystems/ext4/journal.rst:617
#: ../../../filesystems/ext4/journal.rst:630
msgid "__be32"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:121
msgid "h_magic"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:122
msgid "jbd2 magic number, 0xC03B3998."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:123
#: ../../../filesystems/ext4/journal.rst:311
#: ../../../filesystems/ext4/journal.rst:392
#: ../../../filesystems/ext4/journal.rst:436
#: ../../../filesystems/ext4/journal.rst:458
msgid "0x4"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:125
msgid "h_blocktype"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:126
msgid ""
"Description of what this block contains. See the jbd2_blocktype_ table below."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:128
#: ../../../filesystems/ext4/journal.rst:313
#: ../../../filesystems/ext4/journal.rst:397
#: ../../../filesystems/ext4/journal.rst:438
#: ../../../filesystems/ext4/journal.rst:473
msgid "0x8"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:130
msgid "h_sequence"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:131
msgid "The transaction ID that goes with this block."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:135
msgid "The journal block type can be any one of:"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:141
#: ../../../filesystems/ext4/journal.rst:290
#: ../../../filesystems/ext4/journal.rst:304
#: ../../../filesystems/ext4/journal.rst:334
#: ../../../filesystems/ext4/journal.rst:428
msgid "Value"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:143
#: ../../../filesystems/ext4/journal.rst:336
msgid "1"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:144
msgid ""
"Descriptor. This block precedes a series of data blocks that were written "
"through the journal during a transaction."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:146
#: ../../../filesystems/ext4/journal.rst:338
msgid "2"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:147
msgid ""
"Block commit record. This block signifies the completion of a transaction."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:149
#: ../../../filesystems/ext4/journal.rst:340
msgid "3"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:150
msgid "Journal superblock, v1."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:151
#: ../../../filesystems/ext4/journal.rst:342
msgid "4"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:152
msgid "Journal superblock, v2."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:153
msgid "5"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:154
msgid ""
"Block revocation records. This speeds up recovery by enabling the journal to "
"skip writing blocks that were subsequently rewritten."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:158
msgid "Super Block"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:160
msgid ""
"The super block for the journal is much simpler as compared to ext4's. The "
"key data kept within are size of the journal, and where to find the start of "
"the log of transactions."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:164
msgid ""
"The journal superblock is recorded as ``struct journal_superblock_s``, which "
"is 1024 bytes long:"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:178
msgid "Static information describing the journal."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:180
msgid "journal_header_t (12 bytes)"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:181
msgid "s_header"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:182
msgid "Common header identifying this as a superblock."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:183
#: ../../../filesystems/ext4/journal.rst:366
#: ../../../filesystems/ext4/journal.rst:403
#: ../../../filesystems/ext4/journal.rst:549
#: ../../../filesystems/ext4/journal.rst:603
msgid "0xC"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:185
msgid "s_blocksize"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:186
msgid "Journal device block size."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:187
#: ../../../filesystems/ext4/journal.rst:318
#: ../../../filesystems/ext4/journal.rst:553
#: ../../../filesystems/ext4/journal.rst:616
msgid "0x10"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:189
msgid "s_maxlen"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:190
msgid "Total number of blocks in this journal."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:191
msgid "0x14"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:193
msgid "s_first"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:194
msgid "First block of log information."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:198
msgid "Dynamic information describing the current state of the log."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:199
msgid "0x18"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:201
msgid "s_sequence"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:202
msgid "First commit ID expected in log."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:203
msgid "0x1C"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:205
msgid "s_start"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:206
msgid ""
"Block number of the start of log. Contrary to the comments, this field being "
"zero does not imply that the journal is clean!"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:208
#: ../../../filesystems/ext4/journal.rst:322
msgid "0x20"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:210
msgid "s_errno"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:211
msgid "Error value, as set by jbd2_journal_abort()."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:215
msgid "The remaining fields are only valid in a v2 superblock."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:216
msgid "0x24"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:218
msgid "s_feature_compat;"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:219
msgid "Compatible feature set. See the table jbd2_compat_ below."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:220
msgid "0x28"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:222
msgid "s_feature_incompat"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:223
msgid "Incompatible feature set. See the table jbd2_incompat_ below."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:224
msgid "0x2C"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:226
msgid "s_feature_ro_compat"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:227
msgid "Read-only compatible feature set. There aren't any of these currently."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:228
#: ../../../filesystems/ext4/journal.rst:625
msgid "0x30"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:229
#: ../../../filesystems/ext4/journal.rst:250
#: ../../../filesystems/ext4/journal.rst:276
msgid "__u8"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:230
msgid "s_uuid[16]"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:231
msgid ""
"128-bit uuid for journal. This is compared against the copy in the ext4 "
"super block at mount time."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:233
msgid "0x40"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:235
msgid "s_nr_users"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:236
msgid "Number of file systems sharing this journal."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:237
msgid "0x44"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:239
msgid "s_dynsuper"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:240
msgid "Location of dynamic super block copy. (Not used?)"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:241
msgid "0x48"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:243
msgid "s_max_transaction"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:244
msgid "Limit of journal blocks per transaction. (Not used?)"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:245
msgid "0x4C"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:247
msgid "s_max_trans_data"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:248
msgid "Limit of data blocks per transaction. (Not used?)"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:249
msgid "0x50"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:251
msgid "s_checksum_type"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:252
msgid ""
"Checksum algorithm used for the journal.  See jbd2_checksum_type_ for more "
"info."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:254
msgid "0x51"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:255
msgid "__u8[3]"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:256
msgid "s_padding2"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:258
msgid "0x54"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:260
msgid "s_num_fc_blocks"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:261
msgid "Number of fast commit blocks in the journal."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:262
msgid "0x58"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:264
msgid "s_head"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:265
msgid ""
"Block number of the head (first unused block) of the journal, only up-to-"
"date when the journal is empty."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:267
msgid "0x5C"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:268
msgid "__u32"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:269
msgid "s_padding[40]"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:271
msgid "0xFC"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:273
msgid "s_checksum"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:274
msgid "Checksum of the entire superblock, with this field set to zero."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:275
msgid "0x100"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:277
msgid "s_users[16*48]"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:278
msgid ""
"ids of all file systems sharing the log. e2fsprogs/Linux don't allow shared "
"external journals, but I imagine Lustre (or ocfs2?), which use the jbd2 "
"code, might."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:284
msgid "The journal compat features are any combination of the following:"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:292
#: ../../../filesystems/ext4/journal.rst:306
#: ../../../filesystems/ext4/journal.rst:430
msgid "0x1"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:293
msgid ""
"Journal maintains checksums on the data blocks. "
"(JBD2_FEATURE_COMPAT_CHECKSUM)"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:298
msgid "The journal incompat features are any combination of the following:"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:307
msgid "Journal has block revocation records. (JBD2_FEATURE_INCOMPAT_REVOKE)"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:308
#: ../../../filesystems/ext4/journal.rst:433
msgid "0x2"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:309
msgid ""
"Journal can deal with 64-bit block numbers. (JBD2_FEATURE_INCOMPAT_64BIT)"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:312
msgid "Journal commits asynchronously. (JBD2_FEATURE_INCOMPAT_ASYNC_COMMIT)"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:314
msgid ""
"This journal uses v2 of the checksum on-disk format. Each journal metadata "
"block gets its own checksum, and the block tags in the descriptor table "
"contain checksums for each of the data blocks in the journal. "
"(JBD2_FEATURE_INCOMPAT_CSUM_V2)"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:319
msgid ""
"This journal uses v3 of the checksum on-disk format. This is the same as v2, "
"but the journal block tag size is fixed regardless of the size of block "
"numbers. (JBD2_FEATURE_INCOMPAT_CSUM_V3)"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:323
msgid "Journal has fast commit blocks. (JBD2_FEATURE_INCOMPAT_FAST_COMMIT)"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:327
msgid ""
"Journal checksum type codes are one of the following.  crc32 or crc32c are "
"the most likely choices."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:337
msgid "CRC32"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:339
msgid "MD5"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:341
msgid "SHA1"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:343
msgid "CRC32C"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:346
msgid "Descriptor Block"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:348
msgid ""
"The descriptor block contains an array of journal block tags that describe "
"the final locations of the data blocks that follow in the journal. "
"Descriptor blocks are open-coded instead of being completely described by a "
"data structure, but here is the block structure anyway. Descriptor blocks "
"consume at least 36 bytes, but use a full block:"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:361
#: ../../../filesystems/ext4/journal.rst:386
#: ../../../filesystems/ext4/journal.rst:452
#: ../../../filesystems/ext4/journal.rst:502
#: ../../../filesystems/ext4/journal.rst:598
msgid "Descriptor"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:363
#: ../../../filesystems/ext4/journal.rst:546
msgid "journal_header_t"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:364
#: ../../../filesystems/ext4/journal.rst:601
msgid "(open coded)"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:365
#: ../../../filesystems/ext4/journal.rst:548
#: ../../../filesystems/ext4/journal.rst:602
msgid "Common block header."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:367
msgid "struct journal_block_tag_s"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:368
msgid "open coded array[]"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:369
msgid ""
"Enough tags either to fill up the block or to describe all the data blocks "
"that follow this descriptor block."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:372
msgid ""
"Journal block tags have any of the following formats, depending on which "
"journal feature and block tag flags are set."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:375
msgid ""
"If JBD2_FEATURE_INCOMPAT_CSUM_V3 is set, the journal block tag is defined as "
"``struct journal_block_tag3_s``, which looks like the following. The size is "
"16 or 32 bytes."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:389
#: ../../../filesystems/ext4/journal.rst:455
msgid "t_blocknr"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:390
#: ../../../filesystems/ext4/journal.rst:456
msgid ""
"Lower 32-bits of the location of where the corresponding data block should "
"end up on disk."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:394
#: ../../../filesystems/ext4/journal.rst:465
msgid "t_flags"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:395
#: ../../../filesystems/ext4/journal.rst:466
msgid ""
"Flags that go with the descriptor. See the table jbd2_tag_flags_ for more "
"info."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:399
#: ../../../filesystems/ext4/journal.rst:475
msgid "t_blocknr_high"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:400
msgid ""
"Upper 32-bits of the location of where the corresponding data block should "
"end up on disk. This is zero if JBD2_FEATURE_INCOMPAT_64BIT is not enabled."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:405
#: ../../../filesystems/ext4/journal.rst:460
#: ../../../filesystems/ext4/journal.rst:505
msgid "t_checksum"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:406
msgid "Checksum of the journal UUID, the sequence number, and the data block."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:410
msgid ""
"This field appears to be open coded. It always comes at the end of the tag, "
"after t_checksum. This field is not present if the \"same UUID\" flag is set."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:413
#: ../../../filesystems/ext4/journal.rst:484
msgid "0x8 or 0xC"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:414
#: ../../../filesystems/ext4/journal.rst:485
msgid "char"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:415
#: ../../../filesystems/ext4/journal.rst:486
msgid "uuid[16]"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:416
#: ../../../filesystems/ext4/journal.rst:487
msgid ""
"A UUID to go with this tag. This field appears to be copied from the "
"``j_uuid`` field in ``struct journal_s``, but only tune2fs touches that "
"field."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:422
msgid "The journal tag flags are any combination of the following:"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:431
msgid ""
"On-disk block is escaped. The first four bytes of the data block just "
"happened to match the jbd2 magic number."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:434
msgid ""
"This block has the same UUID as previous, therefore the UUID field is "
"omitted."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:437
msgid "The data block was deleted by the transaction. (Not used?)"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:439
msgid "This is the last tag in this descriptor block."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:441
msgid ""
"If JBD2_FEATURE_INCOMPAT_CSUM_V3 is NOT set, the journal block tag is "
"defined as ``struct journal_block_tag_s``, which looks like the following. "
"The size is 8, 12, 24, or 28 bytes:"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:459
#: ../../../filesystems/ext4/journal.rst:464
msgid "__be16"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:461
msgid ""
"Checksum of the journal UUID, the sequence number, and the data block. Note "
"that only the lower 16 bits are stored."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:463
msgid "0x6"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:471
msgid ""
"This next field is only present if the super block indicates support for 64-"
"bit block numbers."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:476
msgid ""
"Upper 32-bits of the location of where the corresponding data block should "
"end up on disk."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:481
msgid ""
"This field appears to be open coded. It always comes at the end of the tag, "
"after t_flags or t_blocknr_high. This field is not present if the \"same "
"UUID\" flag is set."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:491
msgid ""
"If JBD2_FEATURE_INCOMPAT_CSUM_V2 or JBD2_FEATURE_INCOMPAT_CSUM_V3 are set, "
"the end of the block is a ``struct jbd2_journal_block_tail``, which looks "
"like this:"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:506
msgid ""
"Checksum of the journal UUID + the descriptor block, with this field set to "
"zero."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:510
msgid "Data Block"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:512
msgid ""
"In general, the data blocks being written to disk through the journal are "
"written verbatim into the journal file after the descriptor block. However, "
"if the first four bytes of the block match the jbd2 magic number then those "
"four bytes are replaced with zeroes and the “escaped” flag is set in the "
"descriptor block tag."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:519
msgid "Revocation Block"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:521
msgid ""
"A revocation block is used to prevent replay of a block in an earlier "
"transaction. This is used to mark blocks that were journalled at one time "
"but are no longer journalled. Typically this happens if a metadata block is "
"freed and re-allocated as a file data block; in this case, a journal replay "
"after the file block was written to disk will cause corruption."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:528
msgid ""
"**NOTE**: This mechanism is NOT used to express “this journal block is "
"superseded by this other journal block”, as the author (djwong) mistakenly "
"thought. Any block being added to a transaction will cause the removal of "
"all existing revocation records for that block."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:533
msgid ""
"Revocation blocks are described in ``struct jbd2_journal_revoke_header_s``, "
"are at least 16 bytes in length, but use a full block:"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:547
msgid "r_header"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:551
msgid "r_count"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:552
msgid "Number of bytes used in this block."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:554
msgid "__be32 or __be64"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:555
msgid "blocks[0]"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:556
msgid "Blocks to revoke."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:558
msgid ""
"After r_count is a linear array of block numbers that are effectively "
"revoked by this transaction. The size of each block number is 8 bytes if the "
"superblock advertises 64-bit block number support, or 4 bytes otherwise."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:563
msgid ""
"If JBD2_FEATURE_INCOMPAT_CSUM_V2 or JBD2_FEATURE_INCOMPAT_CSUM_V3 are set, "
"the end of the revocation block is a ``struct jbd2_journal_revoke_tail``, "
"which has this format:"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:577
msgid "r_checksum"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:578
msgid "Checksum of the journal UUID + revocation block"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:581
msgid "Commit Block"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:583
msgid ""
"The commit block is a sentry that indicates that a transaction has been "
"completely written to the journal. Once this commit block reaches the "
"journal, the data stored with this transaction can be written to their final "
"locations on disk."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:588
msgid ""
"The commit block is described by ``struct commit_header``, which is 32 bytes "
"long (but uses a full block):"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:600
msgid "journal_header_s"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:604
#: ../../../filesystems/ext4/journal.rst:609
#: ../../../filesystems/ext4/journal.rst:613
msgid "unsigned char"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:605
msgid "h_chksum_type"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:606
msgid ""
"The type of checksum to use to verify the integrity of the data blocks in "
"the transaction. See jbd2_checksum_type_ for more info."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:608
msgid "0xD"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:610
msgid "h_chksum_size"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:611
msgid "The number of bytes used by the checksum. Most likely 4."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:612
msgid "0xE"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:614
msgid "h_padding[2]"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:618
msgid "h_chksum[JBD2_CHECKSUM_BYTES]"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:619
msgid ""
"32 bytes of space to store checksums. If JBD2_FEATURE_INCOMPAT_CSUM_V2 or "
"JBD2_FEATURE_INCOMPAT_CSUM_V3 are set, the first ``__be32`` is the checksum "
"of the journal UUID and the entire commit block, with this field zeroed. If "
"JBD2_FEATURE_COMPAT_CHECKSUM is set, the first ``__be32`` is the crc32 of "
"all the blocks already written to the transaction."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:626
msgid "__be64"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:627
msgid "h_commit_sec"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:628
msgid ""
"The time that the transaction was committed, in seconds since the epoch."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:629
msgid "0x38"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:631
msgid "h_commit_nsec"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:632
msgid "Nanoseconds component of the above timestamp."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:635
msgid "Fast commits"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:637
msgid ""
"Fast commit area is organized as a log of tag length values. Each TLV has a "
"``struct ext4_fc_tl`` in the beginning which stores the tag and the length "
"of the entire field. It is followed by variable length tag specific value. "
"Here is the list of supported tags and their meanings:"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:646
msgid "Tag"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:647
msgid "Meaning"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:648
msgid "Value struct"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:650
msgid "EXT4_FC_TAG_HEAD"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:651
msgid "Fast commit area header"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:652
msgid "``struct ext4_fc_head``"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:653
msgid ""
"Stores the TID of the transaction after which these fast commits should be "
"applied."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:655
msgid "EXT4_FC_TAG_ADD_RANGE"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:656
msgid "Add extent to inode"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:657
msgid "``struct ext4_fc_add_range``"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:658
msgid "Stores the inode number and extent to be added in this inode"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:659
msgid "EXT4_FC_TAG_DEL_RANGE"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:660
msgid "Remove logical offsets to inode"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:661
msgid "``struct ext4_fc_del_range``"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:662
msgid ""
"Stores the inode number and the logical offset range that needs to be removed"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:664
msgid "EXT4_FC_TAG_CREAT"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:665
msgid "Create directory entry for a newly created file"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:666
#: ../../../filesystems/ext4/journal.rst:671
#: ../../../filesystems/ext4/journal.rst:675
msgid "``struct ext4_fc_dentry_info``"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:667
msgid ""
"Stores the parent inode number, inode number and directory entry of the "
"newly created file"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:669
msgid "EXT4_FC_TAG_LINK"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:670
msgid "Link a directory entry to an inode"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:672
#: ../../../filesystems/ext4/journal.rst:676
msgid "Stores the parent inode number, inode number and directory entry"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:673
msgid "EXT4_FC_TAG_UNLINK"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:674
msgid "Unlink a directory entry of an inode"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:678
msgid "EXT4_FC_TAG_PAD"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:679
msgid "Padding (unused area)"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:680
msgid "None"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:681
msgid "Unused bytes in the fast commit area."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:683
msgid "EXT4_FC_TAG_TAIL"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:684
msgid "Mark the end of a fast commit"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:685
msgid "``struct ext4_fc_tail``"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:686
msgid ""
"Stores the TID of the commit, CRC of the fast commit of which this tag "
"represents the end of"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:690
msgid "Fast Commit Replay Idempotence"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:692
msgid ""
"Fast commits tags are idempotent in nature provided the recovery code "
"follows certain rules. The guiding principle that the commit path follows "
"while committing is that it stores the result of a particular operation "
"instead of storing the procedure."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:697
msgid ""
"Let's consider this rename operation: 'mv /a /b'. Let's assume dirent '/a' "
"was associated with inode 10. During fast commit, instead of storing this "
"operation as a procedure \"rename a to b\", we store the resulting file "
"system state as a \"series\" of outcomes:"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:702
msgid "Link dirent b to inode 10"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:703
msgid "Unlink dirent a"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:704
msgid "Inode 10 with valid refcount"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:706
msgid ""
"Now when recovery code runs, it needs \"enforce\" this state on the file "
"system. This is what guarantees idempotence of fast commit replay."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:709
msgid ""
"Let's take an example of a procedure that is not idempotent and see how fast "
"commits make it idempotent. Consider following sequence of operations:"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:712
msgid "rm A"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:713
msgid "mv B A"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:714
msgid "read A"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:716
msgid ""
"If we store this sequence of operations as is then the replay is not "
"idempotent. Let's say while in replay, we crash after (2). During the second "
"replay, file A (which was actually created as a result of \"mv B A\" "
"operation) would get deleted. Thus, file named A would be absent when we try "
"to read A. So, this sequence of operations is not idempotent. However, as "
"mentioned above, instead of storing the procedure fast commits store the "
"outcome of each procedure. Thus the fast commit log for above procedure "
"would be as follows:"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:724
msgid ""
"(Let's assume dirent A was linked to inode 10 and dirent B was linked to "
"inode 11 before the replay)"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:727
msgid "Unlink A"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:728
msgid "Link A to inode 11"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:729
msgid "Unlink B"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:730
msgid "Inode 11"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:732
msgid ""
"If we crash after (3) we will have file A linked to inode 11. During the "
"second replay, we will remove file A (inode 11). But we will create it back "
"and make it point to inode 11. We won't find B, so we'll just skip that "
"step. At this point, the refcount for inode 11 is not reliable, but that "
"gets fixed by the replay of last inode 11 tag. Thus, by converting a non-"
"idempotent procedure into a series of idempotent outcomes, fast commits "
"ensured idempotence during the replay."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:741
msgid "Journal Checkpoint"
msgstr ""

#: ../../../filesystems/ext4/journal.rst:743
msgid ""
"Checkpointing the journal ensures all transactions and their associated "
"buffers are submitted to the disk. In-progress transactions are waited upon "
"and included in the checkpoint. Checkpointing is used internally during "
"critical updates to the filesystem including journal recovery, filesystem "
"resizing, and freeing of the journal_t structure."
msgstr ""

#: ../../../filesystems/ext4/journal.rst:749
msgid ""
"A journal checkpoint can be triggered from userspace via the ioctl "
"EXT4_IOC_CHECKPOINT. This ioctl takes a single, u64 argument for flags. "
"Currently, three flags are supported. First, "
"EXT4_IOC_CHECKPOINT_FLAG_DRY_RUN can be used to verify input to the ioctl. "
"It returns error if there is any invalid input, otherwise it returns success "
"without performing any checkpointing. This can be used to check whether the "
"ioctl exists on a system and to verify there are no issues with arguments or "
"flags. The other two flags are EXT4_IOC_CHECKPOINT_FLAG_DISCARD and "
"EXT4_IOC_CHECKPOINT_FLAG_ZEROOUT. These flags cause the journal blocks to be "
"discarded or zero-filled, respectively, after the journal checkpoint is "
"complete. EXT4_IOC_CHECKPOINT_FLAG_DISCARD and "
"EXT4_IOC_CHECKPOINT_FLAG_ZEROOUT cannot both be set. The ioctl may be useful "
"when snapshotting a system or for complying with content deletion SLOs."
msgstr ""
