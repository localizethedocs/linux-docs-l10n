# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../networking/dsa/configuration.rst:5
msgid "DSA switch configuration from userspace"
msgstr ""

#: ../../../networking/dsa/configuration.rst:7
msgid ""
"The DSA switch configuration is not integrated into the main userspace "
"network configuration suites by now and has to be performed manually."
msgstr ""

#: ../../../networking/dsa/configuration.rst:13
msgid "Configuration showcases"
msgstr ""

#: ../../../networking/dsa/configuration.rst:15
msgid ""
"To configure a DSA switch a couple of commands need to be executed. In this "
"documentation some common configuration scenarios are handled as showcases:"
msgstr ""

#: ../../../networking/dsa/configuration.rst:18
#: ../../../networking/dsa/configuration.rst:70
#: ../../../networking/dsa/configuration.rst:91
#: ../../../networking/dsa/configuration.rst:171
msgid "*single port*"
msgstr ""

#: ../../../networking/dsa/configuration.rst:19
msgid "Every switch port acts as a different configurable Ethernet port"
msgstr ""

#: ../../../networking/dsa/configuration.rst:21
#: ../../../networking/dsa/configuration.rst:75
#: ../../../networking/dsa/configuration.rst:108
#: ../../../networking/dsa/configuration.rst:218
msgid "*bridge*"
msgstr ""

#: ../../../networking/dsa/configuration.rst:22
msgid "Every switch port is part of one configurable Ethernet bridge"
msgstr ""

#: ../../../networking/dsa/configuration.rst:24
#: ../../../networking/dsa/configuration.rst:78
#: ../../../networking/dsa/configuration.rst:134
#: ../../../networking/dsa/configuration.rst:257
msgid "*gateway*"
msgstr ""

#: ../../../networking/dsa/configuration.rst:25
msgid ""
"Every switch port except one upstream port is part of a configurable "
"Ethernet bridge. The upstream port acts as different configurable Ethernet "
"port."
msgstr ""

#: ../../../networking/dsa/configuration.rst:29
msgid ""
"All configurations are performed with tools from iproute2, which is "
"available at https://www.kernel.org/pub/linux/utils/net/iproute2/"
msgstr ""

#: ../../../networking/dsa/configuration.rst:32
msgid ""
"Through DSA every port of a switch is handled like a normal linux Ethernet "
"interface. The CPU port is the switch port connected to an Ethernet MAC "
"chip. The corresponding linux Ethernet interface is called the conduit "
"interface. All other corresponding linux interfaces are called user "
"interfaces."
msgstr ""

#: ../../../networking/dsa/configuration.rst:37
msgid ""
"The user interfaces depend on the conduit interface being up in order for "
"them to send or receive traffic. Prior to kernel v5.12, the state of the "
"conduit interface had to be managed explicitly by the user. Starting with "
"kernel v5.12, the behavior is as follows:"
msgstr ""

#: ../../../networking/dsa/configuration.rst:42
msgid ""
"when a DSA user interface is brought up, the conduit interface is "
"automatically brought up."
msgstr ""

#: ../../../networking/dsa/configuration.rst:44
msgid ""
"when the conduit interface is brought down, all DSA user interfaces are "
"automatically brought down."
msgstr ""

#: ../../../networking/dsa/configuration.rst:47
msgid "In this documentation the following Ethernet interfaces are used:"
msgstr ""

#: ../../../networking/dsa/configuration.rst:49
msgid "*eth0*"
msgstr ""

#: ../../../networking/dsa/configuration.rst:50
msgid "the conduit interface"
msgstr ""

#: ../../../networking/dsa/configuration.rst:52
msgid "*eth1*"
msgstr ""

#: ../../../networking/dsa/configuration.rst:53
msgid "another conduit interface"
msgstr ""

#: ../../../networking/dsa/configuration.rst:55
msgid "*lan1*"
msgstr ""

#: ../../../networking/dsa/configuration.rst:56
msgid "a user interface"
msgstr ""

#: ../../../networking/dsa/configuration.rst:58
msgid "*lan2*"
msgstr ""

#: ../../../networking/dsa/configuration.rst:59
msgid "another user interface"
msgstr ""

#: ../../../networking/dsa/configuration.rst:61
msgid "*lan3*"
msgstr ""

#: ../../../networking/dsa/configuration.rst:62
msgid "a third user interface"
msgstr ""

#: ../../../networking/dsa/configuration.rst:64
msgid "*wan*"
msgstr ""

#: ../../../networking/dsa/configuration.rst:65
msgid "A user interface dedicated for upstream traffic"
msgstr ""

#: ../../../networking/dsa/configuration.rst:67
msgid ""
"Further Ethernet interfaces can be configured similar. The configured IPs "
"and networks are:"
msgstr ""

#: ../../../networking/dsa/configuration.rst:71
msgid "lan1: 192.0.2.1/30 (192.0.2.0 - 192.0.2.3)"
msgstr ""

#: ../../../networking/dsa/configuration.rst:72
msgid "lan2: 192.0.2.5/30 (192.0.2.4 - 192.0.2.7)"
msgstr ""

#: ../../../networking/dsa/configuration.rst:73
msgid "lan3: 192.0.2.9/30 (192.0.2.8 - 192.0.2.11)"
msgstr ""

#: ../../../networking/dsa/configuration.rst:76
#: ../../../networking/dsa/configuration.rst:79
msgid "br0: 192.0.2.129/25 (192.0.2.128 - 192.0.2.255)"
msgstr ""

#: ../../../networking/dsa/configuration.rst:80
msgid "wan: 192.0.2.1/30 (192.0.2.0 - 192.0.2.3)"
msgstr ""

#: ../../../networking/dsa/configuration.rst:85
msgid "Configuration with tagging support"
msgstr ""

#: ../../../networking/dsa/configuration.rst:87
msgid ""
"The tagging based configuration is desired and supported by the majority of "
"DSA switches. These switches are capable to tag incoming and outgoing "
"traffic without using a VLAN based configuration."
msgstr ""

#: ../../../networking/dsa/configuration.rst:165
msgid "Configuration without tagging support"
msgstr ""

#: ../../../networking/dsa/configuration.rst:167
msgid ""
"A minority of switches are not capable to use a taging protocol "
"(DSA_TAG_PROTO_NONE). These switches can be configured by a VLAN based "
"configuration."
msgstr ""

#: ../../../networking/dsa/configuration.rst:172
msgid "The configuration can only be set up via VLAN tagging and bridge setup."
msgstr ""

#: ../../../networking/dsa/configuration.rst:300
msgid "Forwarding database (FDB) management"
msgstr ""

#: ../../../networking/dsa/configuration.rst:302
msgid ""
"The existing DSA switches do not have the necessary hardware support to keep "
"the software FDB of the bridge in sync with the hardware tables, so the two "
"tables are managed separately (``bridge fdb show`` queries both, and "
"depending on whether the ``self`` or ``master`` flags are being used, a "
"``bridge fdb add`` or ``bridge fdb del`` command acts upon entries from one "
"or both tables)."
msgstr ""

#: ../../../networking/dsa/configuration.rst:308
msgid ""
"Up until kernel v4.14, DSA only supported user space management of bridge "
"FDB entries using the bridge bypass operations (which do not update the "
"software FDB, just the hardware one) using the ``self`` flag (which is "
"optional and can be omitted)."
msgstr ""

#: ../../../networking/dsa/configuration.rst:319
msgid ""
"Due to a bug, the bridge bypass FDB implementation provided by DSA did not "
"distinguish between ``static`` and ``local`` FDB entries (``static`` are "
"meant to be forwarded, while ``local`` are meant to be locally terminated, i."
"e. sent to the host port). Instead, all FDB entries with the ``self`` flag "
"(implicit or explicit) are treated by DSA as ``static`` even if they are "
"``local``."
msgstr ""

#: ../../../networking/dsa/configuration.rst:335
msgid ""
"The last command is an incorrect way of adding a static bridge FDB entry to "
"a DSA switch using the bridge bypass operations, and works by mistake. Other "
"drivers will treat an FDB entry added by the same command as ``local`` and "
"as such, will not forward it, as opposed to DSA."
msgstr ""

#: ../../../networking/dsa/configuration.rst:340
msgid ""
"Between kernel v4.14 and v5.14, DSA has supported in parallel two modes of "
"adding a bridge FDB entry to the switch: the bridge bypass discussed above, "
"as well as a new mode using the ``master`` flag which installs FDB entries "
"in the software bridge too."
msgstr ""

#: ../../../networking/dsa/configuration.rst:349
msgid ""
"Since kernel v5.14, DSA has gained stronger integration with the bridge's "
"software FDB, and the support for its bridge bypass FDB implementation "
"(using the ``self`` flag) has been removed. This results in the following "
"changes:"
msgstr ""

#: ../../../networking/dsa/configuration.rst:364
msgid ""
"Script writers are therefore encouraged to use the ``master static`` set of "
"flags when working with bridge FDB entries on DSA switch interfaces."
msgstr ""

#: ../../../networking/dsa/configuration.rst:368
msgid "Affinity of user ports to CPU ports"
msgstr ""

#: ../../../networking/dsa/configuration.rst:370
msgid ""
"Typically, DSA switches are attached to the host via a single Ethernet "
"interface, but in cases where the switch chip is discrete, the hardware "
"design may permit the use of 2 or more ports connected to the host, for an "
"increase in termination throughput."
msgstr ""

#: ../../../networking/dsa/configuration.rst:375
msgid ""
"DSA can make use of multiple CPU ports in two ways. First, it is possible to "
"statically assign the termination traffic associated with a certain user "
"port to be processed by a certain CPU port. This way, user space can "
"implement custom policies of static load balancing between user ports, by "
"spreading the affinities according to the available CPU ports."
msgstr ""

#: ../../../networking/dsa/configuration.rst:381
msgid ""
"Secondly, it is possible to perform load balancing between CPU ports on a "
"per packet basis, rather than statically assigning user ports to CPU ports. "
"This can be achieved by placing the DSA conduits under a LAG interface "
"(bonding or team). DSA monitors this operation and creates a mirror of this "
"software LAG on the CPU ports facing the physical DSA conduits that "
"constitute the LAG slave devices."
msgstr ""

#: ../../../networking/dsa/configuration.rst:388
msgid ""
"To make use of multiple CPU ports, the firmware (device tree) description of "
"the switch must mark all the links between CPU ports and their DSA conduits "
"using the ``ethernet`` reference/phandle. At startup, only a single CPU port "
"and DSA conduit will be used - the numerically first port from the firmware "
"description which has an ``ethernet`` property. It is up to the user to "
"configure the system for the switch to use other conduits."
msgstr ""

#: ../../../networking/dsa/configuration.rst:395
msgid ""
"DSA uses the ``rtnl_link_ops`` mechanism (with a \"dsa\" ``kind``) to allow "
"changing the DSA conduit of a user port. The ``IFLA_DSA_CONDUIT`` u32 "
"netlink attribute contains the ifindex of the conduit device that handles "
"each user device. The DSA conduit must be a valid candidate based on "
"firmware node information, or a LAG interface which contains only slaves "
"which are valid candidates."
msgstr ""

#: ../../../networking/dsa/configuration.rst:402
msgid "Using iproute2, the following manipulations are possible:"
msgstr ""

#: ../../../networking/dsa/configuration.rst:437
msgid ""
"Notice that in the case of CPU ports under a LAG, the use of the "
"``IFLA_DSA_CONDUIT`` netlink attribute is not strictly needed, but rather, "
"DSA reacts to the ``IFLA_MASTER`` attribute change of its present conduit "
"(``eth0``) and migrates all user ports to the new upper of ``eth0``, "
"``bond0``. Similarly, when ``bond0`` is destroyed using ``RTM_DELLINK``, DSA "
"migrates the user ports that were assigned to this interface to the first "
"physical DSA conduit which is eligible, based on the firmware description "
"(it effectively reverts to the startup configuration)."
msgstr ""

#: ../../../networking/dsa/configuration.rst:446
msgid ""
"In a setup with more than 2 physical CPU ports, it is therefore possible to "
"mix static user to CPU port assignment with LAG between DSA conduits. It is "
"not possible to statically assign a user port towards a DSA conduit that has "
"any upper interfaces (this includes LAG devices - the conduit must always be "
"the LAG in this case)."
msgstr ""

#: ../../../networking/dsa/configuration.rst:452
msgid ""
"Live changing of the DSA conduit (and thus CPU port) affinity of a user port "
"is permitted, in order to allow dynamic redistribution in response to "
"traffic."
msgstr ""

#: ../../../networking/dsa/configuration.rst:455
msgid ""
"Physical DSA conduits are allowed to join and leave at any time a LAG "
"interface used as a DSA conduit; however, DSA will reject a LAG interface as "
"a valid candidate for being a DSA conduit unless it has at least one "
"physical DSA conduit as a slave device."
msgstr ""
