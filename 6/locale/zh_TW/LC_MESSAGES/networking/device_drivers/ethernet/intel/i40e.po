# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-30 08:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:5
msgid "Linux Base Driver for the Intel(R) Ethernet Controller 700 Series"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:7
msgid ""
"Intel 40 Gigabit Linux driver. Copyright(c) 1999-2018 Intel Corporation."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:11
msgid "Contents"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:13
msgid "Overview"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:14
#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:31
msgid "Identifying Your Adapter"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:15
#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:124
msgid "Intel(R) Ethernet Flow Director"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:16
msgid "Additional Configurations"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:17
msgid "Known Issues"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:18
#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:772
msgid "Support"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:21
msgid ""
"Driver information can be obtained using ethtool, lspci, and ifconfig. "
"Instructions on updating ethtool can be found in the section Additional "
"Configurations later in this document."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:25
msgid ""
"For questions related to hardware requirements, refer to the documentation "
"supplied with your Intel adapter. All hardware requirements listed apply to "
"use with Linux."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:32
msgid "The driver is compatible with devices based on the following:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:34
msgid "Intel(R) Ethernet Controller X710"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:35
msgid "Intel(R) Ethernet Controller XL710"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:36
msgid "Intel(R) Ethernet Network Connection X722"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:37
msgid "Intel(R) Ethernet Controller XXV710"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:39
msgid ""
"For the best performance, make sure the latest NVM/FW is installed on your "
"device."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:42
msgid ""
"For information on how to identify your adapter, and for the latest NVM/FW "
"images and Intel network drivers, refer to the Intel Support website: "
"https://www.intel.com/support"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:47
msgid "SFP+ and QSFP+ Devices"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:48
msgid ""
"For information about supported media, refer to this document: https://www."
"intel.com/content/dam/www/public/us/en/documents/release-notes/xl710-"
"ethernet-controller-feature-matrix.pdf"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:51
msgid ""
"NOTE: Some adapters based on the Intel(R) Ethernet Controller 700 Series "
"only support Intel Ethernet Optics modules. On these adapters, other modules "
"are not supported and will not function.  In all cases Intel recommends "
"using Intel Ethernet Optics; other modules may function but are not "
"validated by Intel. Contact Intel for supported media types."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:57
msgid ""
"NOTE: For connections based on Intel(R) Ethernet Controller 700 Series, "
"support is dependent on your system board. Please see your vendor for "
"details."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:60
msgid ""
"NOTE: In systems that do not have adequate airflow to cool the adapter and "
"optical modules, you must use high temperature optical modules."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:64
msgid "Virtual Functions (VFs)"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:65
msgid "Use sysfs to enable VFs. For example::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:70
msgid ""
"For example, the following instructions will configure PF eth0 and the first "
"VF on VLAN 10::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:76
msgid "VLAN Tag Packet Steering"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:77
msgid ""
"Allows you to send all packets with a specific VLAN tag to a particular SR-"
"IOV virtual function (VF). Further, this feature allows you to designate a "
"particular VF as trusted, and allows that trusted VF to request selective "
"promiscuous mode on the Physical Function (PF)."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:82
msgid ""
"To set a VF as trusted or untrusted, enter the following command in the "
"Hypervisor::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:87
msgid ""
"Once the VF is designated as trusted, use the following commands in the VM "
"to set the VF to promiscuous mode."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:100
msgid ""
"NOTE: By default, the ethtool priv-flag vf-true-promisc-support is set to "
"\"off\",meaning that promiscuous mode for the VF will be limited. To set the "
"promiscuous mode for the VF to true promiscuous and allow the VF to see all "
"ingress traffic, use the following command::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:107
msgid ""
"The vf-true-promisc-support priv-flag does not enable promiscuous mode; "
"rather, it designates which type of promiscuous mode (limited or true) you "
"will get when you enable promiscuous mode using the ip link commands above. "
"Note that this is a global setting that affects the entire device. However,"
"the vf-true-promisc-support priv-flag is only exposed to the first PF of the "
"device. The PF remains in limited promiscuous mode (unless it is in MFP "
"mode) regardless of the vf-true-promisc-support setting."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:115
msgid "Now add a VLAN interface on the VF interface::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:119
msgid ""
"Note that the order in which you set the VF to promiscuous mode and add the "
"VLAN interface does not matter (you can do either first). The end result in "
"this example is that the VF will get all traffic that is tagged with VLAN "
"100."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:125
msgid "The Intel Ethernet Flow Director performs the following tasks:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:127
msgid "Directs receive packets according to their flows to different queues."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:128
msgid "Enables tight control on routing a flow in the platform."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:129
msgid "Matches flows and CPU cores for flow affinity."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:130
msgid ""
"Supports multiple parameters for flexible flow classification and load "
"balancing (in SFP mode only)."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:133
msgid ""
"NOTE: The Linux i40e driver supports the following flow types: IPv4, TCPv4, "
"and UDPv4. For a given flow type, it supports valid combinations of IP "
"addresses (source or destination) and UDP/TCP ports (source and "
"destination). For example, you can supply only a source IP address, a source "
"IP address and a destination port, or any combination of one or more of "
"these four parameters."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:139
msgid ""
"NOTE: The Linux i40e driver allows you to filter traffic based on a user-"
"defined flexible two-byte pattern and offset by using the ethtool user-def "
"and mask fields. Only L3 and L4 flow types are supported for user-defined "
"flexible filters. For a given flow type, you must clear all Intel Ethernet "
"Flow Director filters before changing the input set (for that flow type)."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:145
msgid "To enable or disable the Intel Ethernet Flow Director::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:149
msgid ""
"When disabling ntuple filters, all the user programmed filters are flushed "
"from the driver cache and hardware. All needed filters must be re-added when "
"ntuple is re-enabled."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:153
msgid "To add a filter that directs packet to queue 2, use -U or -N switch::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:158
msgid "To set a filter using only the source and destination IP address::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:163
msgid "To see the list of filters currently present::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:168
msgid "Application Targeted Routing (ATR) Perfect Filters"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:169
msgid ""
"ATR is enabled by default when the kernel is in multiple transmit queue "
"mode. An ATR Intel Ethernet Flow Director filter rule is added when a TCP-IP "
"flow starts and is deleted when the flow ends. When a TCP-IP Intel Ethernet "
"Flow Director rule is added from ethtool (Sideband filter), ATR is turned "
"off by the driver. To re-enable ATR, the sideband can be disabled with the "
"ethtool -K option. For example::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:178
msgid ""
"If sideband is re-enabled after ATR is re-enabled, ATR remains enabled until "
"a TCP-IP flow is added. When all TCP-IP sideband rules are deleted, ATR is "
"automatically re-enabled."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:182
msgid ""
"Packets that match the ATR rules are counted in fdir_atr_match stats in "
"ethtool, which also can be used to verify whether ATR rules still exist."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:186
msgid "Sideband Perfect Filters"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:187
msgid ""
"Sideband Perfect Filters are used to direct traffic that matches specified "
"characteristics. They are enabled through ethtool's ntuple interface. To add "
"a new filter use the following command::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:194
msgid "Where:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:195
msgid ""
"<device> - the ethernet device to program <type> - can be ip4, tcp4, udp4, "
"or sctp4 <ip> - the ip address to match on <port> - the port number to match "
"on <queue> - the queue to direct traffic towards (-1 discards matching "
"traffic)"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:201
msgid "Use the following command to display all of the active filters::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:205
msgid "Use the following command to delete a filter::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:209
msgid ""
"Where <N> is the filter id displayed when printing all the active filters, "
"and may also have been specified using \"loc <N>\" when adding the filter."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:212
msgid ""
"The following example matches TCP traffic sent from 192.168.0.1, port 5300, "
"directed to 192.168.0.5, port 80, and sends it to queue 7::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:218
msgid ""
"For each flow-type, the programmed filters must all have the same matching "
"input set. For example, issuing the following two commands is acceptable::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:224
msgid ""
"Issuing the next two commands, however, is not acceptable, since the first "
"specifies src-ip and the second specifies dst-ip::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:230
msgid ""
"The second command will fail with an error. You may program multiple filters "
"with the same fields, using different values, but, on one device, you may "
"not program two tcp4 filters with different matching fields."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:234
msgid ""
"Matching on a sub-portion of a field is not supported by the i40e driver, "
"thus partial mask fields are not supported."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:237
msgid ""
"The driver also supports matching user-defined data within the packet "
"payload. This flexible data is specified using the \"user-def\" field of the "
"ethtool command in the following way:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:242
msgid "31    28    24    20    16"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:242
msgid "15    12    8    4    0"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:244
msgid "offset into packet payload"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:244
msgid "2 bytes of flexible data"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:247
msgid "For example,"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:253
msgid ""
"tells the filter to look 4 bytes into the payload and match that value "
"against 0xFFFF. The offset is based on the beginning of the payload, and not "
"the beginning of the packet. Thus"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:261
msgid ""
"would match TCP/IPv4 packets which have the value 0xBEAF 8 bytes into the "
"TCP/IPv4 payload."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:264
msgid ""
"Note that ICMP headers are parsed as 4 bytes of header and 4 bytes of "
"payload. Thus to match the first byte of the payload, you must actually add "
"4 bytes to the offset. Also note that ip4 filters match both ICMP frames as "
"well as raw (unknown) ip4 frames, where the payload will be the L3 payload "
"of the IP4 frame."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:269
msgid ""
"The maximum offset is 64. The hardware will only read up to 64 bytes of data "
"from the payload. The offset must be even because the flexible data is 2 "
"bytes long and must be aligned to byte 0 of the packet payload."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:273
msgid ""
"The user-defined flexible offset is also considered part of the input set "
"and cannot be programmed separately for multiple filters of the same type. "
"However, the flexible data is not part of the input set and multiple filters "
"may use the same offset but match against different data."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:278
msgid ""
"To create filters that direct traffic to a specific Virtual Function, use "
"the \"action\" parameter. Specify the action as a 64 bit value, where the "
"lower 32 bits represents the queue number, while the next 8 bits represent "
"which VF. Note that 0 is the PF, so the VF identifier is offset by 1. For "
"example::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:285
msgid ""
"specifies to direct traffic to Virtual Function 7 (8 minus 1) into queue 2 "
"of that VF."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:288
msgid ""
"Note that these filters will not break internal routing rules, and will not "
"route traffic that otherwise would not have been sent to the specified "
"Virtual Function."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:293
msgid "Setting the link-down-on-close Private Flag"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:294
msgid ""
"When the link-down-on-close private flag is set to \"on\", the port's link "
"will go down when the interface is brought down using the ifconfig ethX down "
"command."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:297
msgid "Use ethtool to view and set link-down-on-close, as follows::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:303
msgid "Setting the mdd-auto-reset-vf Private Flag"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:305
msgid ""
"When the mdd-auto-reset-vf private flag is set to \"on\", the problematic VF "
"will be automatically reset if a malformed descriptor is detected. If the "
"flag is set to \"off\", the problematic VF will be disabled."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:309
msgid "Use ethtool to view and set mdd-auto-reset-vf, as follows::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:315
msgid "Viewing Link Messages"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:316
msgid ""
"Link messages will not be displayed to the console if the distribution is "
"restricting system messages. In order to see network driver link messages on "
"your console, set dmesg to eight by entering the following::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:322
msgid "NOTE: This setting is not saved across reboots."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:325
msgid "Jumbo Frames"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:326
msgid ""
"Jumbo Frames support is enabled by changing the Maximum Transmission Unit "
"(MTU) to a value larger than the default value of 1500."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:329
msgid ""
"Use the ifconfig command to increase the MTU size. For example, enter the "
"following where <x> is the interface number::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:334
msgid "Alternatively, you can use the ip command as follows::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:339
msgid ""
"This setting is not saved across reboots. The setting change can be made "
"permanent by adding 'MTU=9000' to the file::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:345
msgid ""
"NOTE: The maximum MTU setting for Jumbo Frames is 9702. This value coincides "
"with the maximum Jumbo Frames size of 9728 bytes."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:348
msgid ""
"NOTE: This driver will attempt to use multiple page sized buffers to receive "
"each jumbo packet. This should help to avoid buffer starvation issues when "
"allocating receive packets."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:353
msgid "ethtool"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:354
msgid ""
"The driver utilizes the ethtool interface for driver configuration and "
"diagnostics, as well as displaying statistical information. The latest "
"ethtool version is required for this functionality. Download it at: https://"
"www.kernel.org/pub/software/network/ethtool/"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:360
msgid "Supported ethtool Commands and Options for Filtering"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:361
msgid "-n --show-nfc"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:362
msgid "Retrieves the receive network flow classification configurations."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:364
msgid "rx-flow-hash tcp4|udp4|ah4|esp4|sctp4|tcp6|udp6|ah6|esp6|sctp6"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:365
msgid "Retrieves the hash options for the specified network traffic type."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:367
msgid "-N --config-nfc"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:368
msgid "Configures the receive network flow classification."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:370
msgid ""
"rx-flow-hash tcp4|udp4|ah4|esp4|sctp4|tcp6|udp6|ah6|esp6|sctp6 m|v|t|s|d|f|n|"
"r..."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:371
msgid "Configures the hash options for the specified network traffic type."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:373
msgid "udp4 UDP over IPv4 udp6 UDP over IPv6"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:376
msgid ""
"f Hash on bytes 0 and 1 of the Layer 4 header of the Rx packet. n Hash on "
"bytes 2 and 3 of the Layer 4 header of the Rx packet."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:380
msgid "Speed and Duplex Configuration"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:381
msgid ""
"In addressing speed and duplex configuration issues, you need to distinguish "
"between copper-based adapters and fiber-based adapters."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:384
msgid ""
"In the default mode, an Intel(R) Ethernet Network Adapter using copper "
"connections will attempt to auto-negotiate with its link partner to "
"determine the best setting. If the adapter cannot establish link with the "
"link partner using auto-negotiation, you may need to manually configure the "
"adapter and link partner to identical settings to establish link and pass "
"packets. This should only be needed when attempting to link with an older "
"switch that does not support auto-negotiation or one that has been forced to "
"a specific speed or duplex mode. Your link partner must match the setting "
"you choose. 1 Gbps speeds and higher cannot be forced. Use the "
"autonegotiation advertising setting to manually set devices for 1 Gbps and "
"higher."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:395
msgid ""
"NOTE: You cannot set the speed for devices based on the Intel(R) Ethernet "
"Network Adapter XXV710 based devices."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:398
msgid ""
"Speed, duplex, and autonegotiation advertising are configured through the "
"ethtool utility."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:401
msgid ""
"Caution: Only experienced network administrators should force speed and "
"duplex or change autonegotiation advertising manually. The settings at the "
"switch must always match the adapter settings. Adapter performance may "
"suffer or your adapter may not operate if you configure the adapter "
"differently from your switch."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:407
msgid ""
"An Intel(R) Ethernet Network Adapter using fiber-based connections, however, "
"will not attempt to auto-negotiate with its link partner since those "
"adapters operate only in full duplex and only at their native speed."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:412
msgid "NAPI"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:413
msgid "NAPI (Rx polling mode) is supported in the i40e driver."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:415
msgid ""
"See :ref:`Documentation/networking/napi.rst <napi>` for more information."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:418
msgid "Flow Control"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:419
msgid ""
"Ethernet Flow Control (IEEE 802.3x) can be configured with ethtool to enable "
"receiving and transmitting pause frames for i40e. When transmit is enabled, "
"pause frames are generated when the receive packet buffer crosses a "
"predefined threshold. When receive is enabled, the transmit unit will halt "
"for the time delay specified when a pause frame is received."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:425
msgid "NOTE: You must have a flow control capable link partner."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:427
msgid "Flow Control is on by default."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:429
msgid "Use ethtool to change the flow control settings."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:431
msgid "To enable or disable Rx or Tx Flow Control::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:435
msgid ""
"Note: This command only enables or disables Flow Control if auto-negotiation "
"is disabled. If auto-negotiation is enabled, this command changes the "
"parameters used for auto-negotiation with the link partner."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:439
msgid "To enable or disable auto-negotiation::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:443
msgid ""
"Note: Flow Control auto-negotiation is part of link auto-negotiation. "
"Depending on your device, you may not be able to change the auto-negotiation "
"setting."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:447
msgid "RSS Hash Flow"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:448
msgid ""
"Allows you to set the hash bytes per flow type and any combination of one or "
"more options for Receive Side Scaling (RSS) hash byte configuration."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:455
msgid "Where <type> is:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:456
msgid ""
"tcp4  signifying TCP over IPv4 udp4  signifying UDP over IPv4 tcp6  "
"signifying TCP over IPv6 udp6  signifying UDP over IPv6"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:460
msgid "And <option> is one or more of:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:461
msgid ""
"s     Hash on the IP source address of the Rx packet. d     Hash on the IP "
"destination address of the Rx packet. f     Hash on bytes 0 and 1 of the "
"Layer 4 header of the Rx packet. n     Hash on bytes 2 and 3 of the Layer 4 "
"header of the Rx packet."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:467
msgid "MAC and VLAN anti-spoofing feature"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:468
msgid ""
"When a malicious driver attempts to send a spoofed packet, it is dropped by "
"the hardware and not transmitted. NOTE: This feature can be disabled for a "
"specific Virtual Function (VF)::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:475
msgid "IEEE 1588 Precision Time Protocol (PTP) Hardware Clock (PHC)"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:476
msgid ""
"Precision Time Protocol (PTP) is used to synchronize clocks in a computer "
"network. PTP support varies among Intel devices that support this driver. "
"Use \"ethtool -T <netdev name>\" to get a definitive list of PTP "
"capabilities supported by the device."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:482
msgid "IEEE 802.1ad (QinQ) Support"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:483
msgid ""
"The IEEE 802.1ad standard, informally known as QinQ, allows for multiple "
"VLAN IDs within a single Ethernet frame. VLAN IDs are sometimes referred to "
"as \"tags,\" and multiple VLAN IDs are thus referred to as a \"tag stack.\" "
"Tag stacks allow L2 tunneling and the ability to segregate traffic within a "
"particular VLAN ID, among other uses."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:489
msgid "The following are examples of how to configure 802.1ad (QinQ)::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:494
msgid "Where \"24\" and \"371\" are example VLAN IDs."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:496
#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:713
msgid "NOTES:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:497
msgid ""
"Receive checksum offloads, cloud filters, and VLAN acceleration are not "
"supported for 802.1ad (QinQ) packets."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:501
msgid "VXLAN and GENEVE Overlay HW Offloading"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:502
msgid ""
"Virtual Extensible LAN (VXLAN) allows you to extend an L2 network over an L3 "
"network, which may be useful in a virtualized or cloud environment. Some "
"Intel(R) Ethernet Network devices perform VXLAN processing, offloading it "
"from the operating system. This reduces CPU utilization."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:507
msgid ""
"VXLAN offloading is controlled by the Tx and Rx checksum offload options "
"provided by ethtool. That is, if Tx checksum offload is enabled, and the "
"adapter has the capability, VXLAN offloading is also enabled."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:511
msgid ""
"Support for VXLAN and GENEVE HW offloading is dependent on kernel support of "
"the HW offloading features."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:515
msgid "Multiple Functions per Port"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:516
msgid ""
"Some adapters based on the Intel Ethernet Controller X710/XL710 support "
"multiple functions on a single physical port. Configure these functions "
"through the System Setup/BIOS."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:520
msgid ""
"Minimum TX Bandwidth is the guaranteed minimum data transmission bandwidth, "
"as a percentage of the full physical port link speed, that the partition "
"will receive. The bandwidth the partition is awarded will never fall below "
"the level you specify."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:525
msgid ""
"The range for the minimum bandwidth values is: 1 to ((100 minus # of "
"partitions on the physical port) plus 1) For example, if a physical port has "
"4 partitions, the range would be: 1 to ((100 - 4) + 1 = 97)"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:530
msgid ""
"The Maximum Bandwidth percentage represents the maximum transmit bandwidth "
"allocated to the partition as a percentage of the full physical port link "
"speed. The accepted range of values is 1-100. The value is used as a "
"limiter, should you chose that any one particular function not be able to "
"consume 100% of a port's bandwidth (should it be available). The sum of all "
"the values for Maximum Bandwidth is not restricted, because no more than "
"100% of a port's bandwidth can ever be used."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:538
msgid ""
"NOTE: X710/XXV710 devices fail to enable Max VFs (64) when Multiple "
"Functions per Port (MFP) and SR-IOV are enabled. An error from i40e is "
"logged that says \"add vsi failed for VF N, aq_err 16\". To workaround the "
"issue, enable less than 64 virtual functions (VFs)."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:544
#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:746
msgid "Data Center Bridging (DCB)"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:545
msgid ""
"DCB is a configuration Quality of Service implementation in hardware. It "
"uses the VLAN priority tag (802.1p) to filter traffic. That means that there "
"are 8 different priorities that traffic can be filtered into. It also "
"enables priority flow control (802.1Qbb) which can limit or eliminate the "
"number of dropped packets during network stress. Bandwidth can be allocated "
"to each of these priorities, which is enforced at the hardware level "
"(802.1Qaz)."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:552
msgid ""
"Adapter firmware implements LLDP and DCBX protocol agents as per 802.1AB and "
"802.1Qaz respectively. The firmware based DCBX agent runs in willing mode "
"only and can accept settings from a DCBX capable peer. Software "
"configuration of DCBX parameters via dcbtool/lldptool are not supported."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:557
msgid ""
"NOTE: Firmware LLDP can be disabled by setting the private flag disable-fw-"
"lldp."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:559
msgid ""
"The i40e driver implements the DCB netlink interface layer to allow user-"
"space to communicate with the driver and query DCB configuration for the "
"port."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:562
msgid ""
"NOTE: The kernel assumes that TC0 is available, and will disable Priority "
"Flow Control (PFC) on the device if TC0 is not available. To fix this, "
"ensure TC0 is enabled when setting up DCB on your switch."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:568
msgid "Interrupt Rate Limiting"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:0
msgid "Valid Range"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:569
msgid "0-235 (0=no limit)"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:571
msgid ""
"The Intel(R) Ethernet Controller XL710 family supports an interrupt rate "
"limiting mechanism. The user can control, via ethtool, the number of "
"microseconds between interrupts."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:575
msgid "Syntax::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:579
msgid ""
"The range of 0-235 microseconds provides an effective range of 4,310 to "
"250,000 interrupts per second. The value of rx-usecs-high can be set "
"independently of rx-usecs and tx-usecs in the same ethtool command, and is "
"also independent of the adaptive interrupt moderation algorithm. The "
"underlying hardware supports granularity in 4-microsecond intervals, so "
"adjacent values may result in the same interrupt rate."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:586
msgid "One possible use case is the following::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:591
msgid ""
"The above command would disable adaptive interrupt moderation, and allow a "
"maximum of 5 microseconds before indicating a receive or transmit was "
"complete. However, instead of resulting in as many as 200,000 interrupts per "
"second, it limits total interrupts per second to 50,000 via the rx-usecs-"
"high parameter."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:597
msgid "Performance Optimization"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:598
msgid ""
"Driver defaults are meant to fit a wide variety of workloads, but if further "
"optimization is required we recommend experimenting with the following "
"settings."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:601
msgid ""
"NOTE: For better performance when processing small (64B) frame sizes, try "
"enabling Hyper threading in the BIOS in order to increase the number of "
"logical cores in the system and subsequently increase the number of queues "
"available to the adapter."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:607
msgid "Virtualized Environments"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:608
msgid ""
"1. Disable XPS on both ends by using the included virt_perf_default script "
"or by running the following command as root::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:614
msgid ""
"2. Using the appropriate mechanism (vcpupin) in the vm, pin the cpu's to "
"individual lcpu's, making sure to use a set of cpu's included in the "
"device's local_cpulist: /sys/class/net/<ethX>/device/local_cpulist."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:618
msgid ""
"3. Configure as many Rx/Tx queues in the VM as available. Do not rely on the "
"default setting of 1."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:623
msgid "Non-virtualized Environments"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:624
msgid ""
"Pin the adapter's IRQs to specific cores by disabling the irqbalance service "
"and using the included set_irq_affinity script. Please see the script's help "
"text for further options."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:628
msgid ""
"The following settings will distribute the IRQs across all the cores evenly::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:632
msgid ""
"The following settings will distribute the IRQs across all the cores that "
"are local to the adapter (same NUMA node)::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:637
msgid ""
"For very CPU intensive workloads, we recommend pinning the IRQs to all cores."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:639
msgid ""
"For IP Forwarding: Disable Adaptive ITR and lower Rx and Tx interrupts per "
"queue using ethtool."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:642
msgid ""
"Setting rx-usecs and tx-usecs to 125 will limit interrupts to about 8000 "
"interrupts per second per queue."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:650
msgid ""
"For lower CPU utilization: Disable Adaptive ITR and lower Rx and Tx "
"interrupts per queue using ethtool."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:653
msgid ""
"Setting rx-usecs and tx-usecs to 250 will limit interrupts to about 4000 "
"interrupts per second per queue."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:661
msgid ""
"For lower latency: Disable Adaptive ITR and ITR by setting Rx and Tx to 0 "
"using ethtool."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:670
msgid "Application Device Queues (ADq)"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:671
msgid ""
"Application Device Queues (ADq) allows you to dedicate one or more queues to "
"a specific application. This can reduce latency for the specified "
"application, and allow Tx traffic to be rate limited per application. Follow "
"the steps below to set ADq."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:676
msgid ""
"1. Create traffic classes (TCs). Maximum of 8 TCs can be created per "
"interface. The shaper bw_rlimit parameter is optional."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:679
msgid ""
"Example: Sets up two tcs, tc0 and tc1, with 16 queues each and max tx rate "
"set to 1Gbit for tc0 and 3Gbit for tc1."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:688
msgid ""
"map: priority mapping for up to 16 priorities to tcs (e.g. map 0 0 0 0 1 1 1 "
"1 sets priorities 0-3 to use tc0 and 4-7 to use tc1)"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:691
msgid ""
"queues: for each tc, <num queues>@<offset> (e.g. queues 16@0 16@16 assigns "
"16 queues to tc0 at offset 0 and 16 queues to tc1 at offset 16. Max total "
"number of queues for all tcs is 64 or number of cores, whichever is lower.)"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:695
msgid ""
"hw 1 mode channel: ‘channel’ with ‘hw’ set to 1 is a new new hardware "
"offload mode in mqprio that makes full use of the mqprio options, the TCs, "
"the queue configurations, and the QoS parameters."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:699
msgid ""
"shaper bw_rlimit: for each tc, sets minimum and maximum bandwidth rates. "
"Totals must be equal or less than port speed."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:702
msgid ""
"For example: min_rate 1Gbit 3Gbit: Verify bandwidth limit using network "
"monitoring tools such as `ifstat` or `sar -n DEV [interval] [number of "
"samples]`"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:705
msgid "Enable HW TC offload on interface::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:709
msgid "Apply TCs to ingress (RX) flow of interface::"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:714
msgid "Run all tc commands from the iproute2 <pathtoiproute2>/tc/ directory."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:715
msgid "ADq is not compatible with cloud filters."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:716
msgid ""
"Setting up channels via ethtool (ethtool -L) is not supported when the TCs "
"are configured using mqprio."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:718
msgid "You must have iproute2 latest version"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:719
msgid "NVM version 6.01 or later is required."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:720
msgid ""
"ADq cannot be enabled when any the following features are enabled: Data "
"Center Bridging (DCB), Multiple Functions per Port (MFP), or Sideband "
"Filters."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:723
msgid ""
"If another driver (for example, DPDK) has set cloud filters, you cannot "
"enable ADq."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:725
msgid ""
"Tunnel filters are not supported in ADq. If encapsulated packets do arrive "
"in non-tunnel mode, filtering will be done on the inner headers. For "
"example, for VXLAN traffic in non-tunnel mode, PCTYPE is identified as a "
"VXLAN encapsulated packet, outer headers are ignored. Therefore, inner "
"headers are matched."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:730
msgid ""
"If a TC filter on a PF matches traffic over a VF (on the PF), that traffic "
"will be routed to the appropriate queue of the PF, and will not be passed on "
"the VF. Such traffic will end up getting dropped higher up in the TCP/IP "
"stack as it does not match PF address data."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:734
msgid ""
"If traffic matches multiple TC filters that point to different TCs, that "
"traffic will be duplicated and sent to all matching TC queues. The hardware "
"switch mirrors the packet to a VSI list when multiple filters are matched."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:741
msgid "Known Issues/Troubleshooting"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:743
msgid ""
"NOTE: 1 Gb devices based on the Intel(R) Ethernet Network Connection X722 do "
"not support the following features:"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:747
msgid "QOS"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:748
msgid "VMQ"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:749
msgid "SR-IOV"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:750
msgid "Task Encapsulation offload (VXLAN, NVGRE)"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:751
msgid "Energy Efficient Ethernet (EEE)"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:752
msgid "Auto-media detect"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:755
msgid "Unexpected Issues when the device driver and DPDK share a device"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:756
msgid ""
"Unexpected issues may result when an i40e device is in multi driver mode and "
"the kernel driver and DPDK driver are sharing the device. This is because "
"access to the global NIC resources is not synchronized between multiple "
"drivers. Any change to the global NIC configuration (writing to a global "
"register, setting global configuration by AQ, or changing switch modes) will "
"affect all ports and drivers on the device. Loading DPDK with the \"multi-"
"driver\" module parameter may mitigate some of the issues."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:765
msgid "TC0 must be enabled when setting up DCB on a switch"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:766
msgid ""
"The kernel assumes that TC0 is available, and will disable Priority Flow "
"Control (PFC) on the device if TC0 is not available. To fix this, ensure TC0 "
"is enabled when setting up DCB on your switch."
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:773
msgid ""
"For general information, go to the Intel support website at: https://www."
"intel.com/support/"
msgstr ""

#: ../../../networking/device_drivers/ethernet/intel/i40e.rst:776
msgid ""
"If an issue is identified with the released source code on a supported "
"kernel with a supported adapter, email the specific information related to "
"the issue to intel-wired-lan@lists.osuosl.org."
msgstr ""
