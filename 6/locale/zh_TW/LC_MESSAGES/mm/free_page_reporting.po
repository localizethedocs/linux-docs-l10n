# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-30 08:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../mm/free_page_reporting.rst:3
msgid "Free Page Reporting"
msgstr ""

#: ../../../mm/free_page_reporting.rst:5
msgid ""
"Free page reporting is an API by which a device can register to receive "
"lists of pages that are currently unused by the system. This is useful in "
"the case of virtualization where a guest is then able to use this data to "
"notify the hypervisor that it is no longer using certain pages in memory."
msgstr ""

#: ../../../mm/free_page_reporting.rst:10
msgid ""
"For the driver, typically a balloon driver, to use of this functionality it "
"will allocate and initialize a page_reporting_dev_info structure. The field "
"within the structure it will populate is the \"report\" function pointer "
"used to process the scatterlist. It must also guarantee that it can handle "
"at least PAGE_REPORTING_CAPACITY worth of scatterlist entries per call to "
"the function. A call to page_reporting_register will register the page "
"reporting interface with the reporting framework assuming no other page "
"reporting devices are already registered."
msgstr ""

#: ../../../mm/free_page_reporting.rst:19
msgid ""
"Once registered the page reporting API will begin reporting batches of pages "
"to the driver. The API will start reporting pages 2 seconds after the "
"interface is registered and will continue to do so 2 seconds after any page "
"of a sufficiently high order is freed."
msgstr ""

#: ../../../mm/free_page_reporting.rst:24
msgid ""
"Pages reported will be stored in the scatterlist passed to the reporting "
"function with the final entry having the end bit set in entry nent - 1. "
"While pages are being processed by the report function they will not be "
"accessible to the allocator. Once the report function has been completed the "
"pages will be returned to the free area from which they were obtained."
msgstr ""

#: ../../../mm/free_page_reporting.rst:30
msgid ""
"Prior to removing a driver that is making use of free page reporting it is "
"necessary to call page_reporting_unregister to have the "
"page_reporting_dev_info structure that is currently in use by free page "
"reporting removed. Doing this will prevent further reports from being issued "
"via the interface. If another driver or the same driver is registered it is "
"possible for it to resume where the previous driver had left off in terms of "
"reporting free pages."
msgstr ""

#: ../../../mm/free_page_reporting.rst:38
msgid "Alexander Duyck, Dec 04, 2019"
msgstr ""
