# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../arch/arm/arm.rst:3
msgid "ARM Linux 2.6 and upper"
msgstr ""

#: ../../../arch/arm/arm.rst:5
msgid "Please check <ftp://ftp.arm.linux.org.uk/pub/armlinux> for updates."
msgstr ""

#: ../../../arch/arm/arm.rst:9
msgid "Compilation of kernel"
msgstr ""

#: ../../../arch/arm/arm.rst:11
msgid ""
"In order to compile ARM Linux, you will need a compiler capable of "
"generating ARM ELF code with GNU extensions.  GCC 3.3 is known to be a good "
"compiler.  Fortunately, you needn't guess.  The kernel will report an error "
"if your compiler is a recognized offender."
msgstr ""

#: ../../../arch/arm/arm.rst:16
msgid ""
"To build ARM Linux natively, you shouldn't have to alter the ARCH = line in "
"the top level Makefile.  However, if you don't have the ARM Linux ELF tools "
"installed as default, then you should change the CROSS_COMPILE line as "
"detailed below."
msgstr ""

#: ../../../arch/arm/arm.rst:21
msgid ""
"If you wish to cross-compile, then alter the following lines in the top "
"level make file::"
msgstr ""

#: ../../../arch/arm/arm.rst:26
msgid "with::"
msgstr ""

#: ../../../arch/arm/arm.rst:30
msgid "and::"
msgstr ""

#: ../../../arch/arm/arm.rst:34
msgid "to::"
msgstr ""

#: ../../../arch/arm/arm.rst:38
msgid "eg.::"
msgstr ""

#: ../../../arch/arm/arm.rst:42
msgid ""
"Do a 'make config', followed by 'make Image' to build the kernel (arch/arm/"
"boot/Image).  A compressed image can be built by doing a 'make zImage' "
"instead of 'make Image'."
msgstr ""

#: ../../../arch/arm/arm.rst:48
msgid "Bug reports etc"
msgstr ""

#: ../../../arch/arm/arm.rst:50
msgid ""
"Please send patches to the patch system.  For more information, see http://"
"www.arm.linux.org.uk/developer/patches/info.php Always include some "
"explanation as to what the patch does and why it is needed."
msgstr ""

#: ../../../arch/arm/arm.rst:54
msgid ""
"Bug reports should be sent to linux-arm-kernel@lists.arm.linux.org.uk, or "
"submitted through the web form at http://www.arm.linux.org.uk/developer/"
msgstr ""

#: ../../../arch/arm/arm.rst:58
msgid ""
"When sending bug reports, please ensure that they contain all relevant "
"information, eg. the kernel messages that were printed before/during the "
"problem, what you were doing, etc."
msgstr ""

#: ../../../arch/arm/arm.rst:64
msgid "Include files"
msgstr ""

#: ../../../arch/arm/arm.rst:66
msgid ""
"Several new include directories have been created under include/asm-arm, "
"which are there to reduce the clutter in the top-level directory.  These "
"directories, and their purpose is listed below:"
msgstr ""

#: ../../../arch/arm/arm.rst:71
msgid "`arch-*`"
msgstr ""

#: ../../../arch/arm/arm.rst:71
msgid "machine/platform specific header files"
msgstr ""

#: ../../../arch/arm/arm.rst:72
msgid "`hardware`"
msgstr ""

#: ../../../arch/arm/arm.rst:72
msgid "driver-internal ARM specific data structures/definitions"
msgstr ""

#: ../../../arch/arm/arm.rst:73
msgid "`mach`"
msgstr ""

#: ../../../arch/arm/arm.rst:73
msgid "descriptions of generic ARM to specific machine interfaces"
msgstr ""

#: ../../../arch/arm/arm.rst:74
msgid "`proc-*`"
msgstr ""

#: ../../../arch/arm/arm.rst:74
msgid "processor dependent header files (currently only two categories)"
msgstr ""

#: ../../../arch/arm/arm.rst:80
msgid "Machine/Platform support"
msgstr ""

#: ../../../arch/arm/arm.rst:82
msgid ""
"The ARM tree contains support for a lot of different machine types.  To "
"continue supporting these differences, it has become necessary to split "
"machine-specific parts by directory.  For this, the machine category is used "
"to select which directories and files get included (we will use $(MACHINE) "
"to refer to the category)"
msgstr ""

#: ../../../arch/arm/arm.rst:88
msgid ""
"To this end, we now have arch/arm/mach-$(MACHINE) directories which are "
"designed to house the non-driver files for a particular machine (eg, PCI, "
"memory management, architecture definitions etc).  For all future machines, "
"there should be a corresponding arch/arm/mach-$(MACHINE)/include/mach "
"directory."
msgstr ""

#: ../../../arch/arm/arm.rst:96
msgid "Modules"
msgstr ""

#: ../../../arch/arm/arm.rst:98
msgid ""
"Although modularisation is supported (and required for the FP emulator), "
"each module on an ARM2/ARM250/ARM3 machine when is loaded will take memory "
"up to the next 32k boundary due to the size of the pages. Therefore, is "
"modularisation on these machines really worth it?"
msgstr ""

#: ../../../arch/arm/arm.rst:103
msgid ""
"However, ARM6 and up machines allow modules to take multiples of 4k, and as "
"such Acorn RiscPCs and other architectures using these processors can make "
"good use of modularisation."
msgstr ""

#: ../../../arch/arm/arm.rst:109
msgid "ADFS Image files"
msgstr ""

#: ../../../arch/arm/arm.rst:111
msgid ""
"You can access image files on your ADFS partitions by mounting the ADFS "
"partition, and then using the loopback device driver.  You must have losetup "
"installed."
msgstr ""

#: ../../../arch/arm/arm.rst:115
msgid ""
"Please note that the PCEmulator DOS partitions have a partition table at the "
"start, and as such, you will have to give '-o offset' to losetup."
msgstr ""

#: ../../../arch/arm/arm.rst:120
msgid "Request to developers"
msgstr ""

#: ../../../arch/arm/arm.rst:122
msgid ""
"When writing device drivers which include a separate assembler file, please "
"include it in with the C file, and not the arch/arm/lib directory.  This "
"allows the driver to be compiled as a loadable module without requiring half "
"the code to be compiled into the kernel image."
msgstr ""

#: ../../../arch/arm/arm.rst:127
msgid ""
"In general, try to avoid using assembler unless it is really necessary.  It "
"makes drivers far less easy to port to other hardware."
msgstr ""

#: ../../../arch/arm/arm.rst:132
msgid "ST506 hard drives"
msgstr ""

#: ../../../arch/arm/arm.rst:134
msgid ""
"The ST506 hard drive controllers seem to be working fine (if a little "
"slowly).  At the moment they will only work off the controllers on an A4x0's "
"motherboard, but for it to work off a Podule just requires someone with a "
"podule to add the addresses for the IRQ mask and the HDC base to the source."
msgstr ""

#: ../../../arch/arm/arm.rst:140
msgid ""
"As of 31/3/96 it works with two drives (you should get the ADFS `*configure` "
"harddrive set to 2). I've got an internal 20MB and a great big external "
"5.25\" FH 64MB drive (who could ever want more :-) )."
msgstr ""

#: ../../../arch/arm/arm.rst:144
msgid ""
"I've just got 240K/s off it (a dd with bs=128k); that's about half of what "
"RiscOS gets; but it's a heck of a lot better than the 50K/s I was getting "
"last week :-)"
msgstr ""

#: ../../../arch/arm/arm.rst:148
msgid ""
"Known bug: Drive data errors can cause a hang; including cases where the "
"controller has fixed the error using ECC. (Possibly ONLY in that case...hmm)."
msgstr ""

#: ../../../arch/arm/arm.rst:154
msgid "1772 Floppy"
msgstr ""

#: ../../../arch/arm/arm.rst:155
msgid ""
"This also seems to work OK, but hasn't been stressed much lately.  It hasn't "
"got any code for disc change detection in there at the moment which could be "
"a bit of a problem!  Suggestions on the correct way to do this are welcome."
msgstr ""

#: ../../../arch/arm/arm.rst:162
msgid "`CONFIG_MACH_` and `CONFIG_ARCH_`"
msgstr ""

#: ../../../arch/arm/arm.rst:163
msgid ""
"A change was made in 2003 to the macro names for new machines. Historically, "
"`CONFIG_ARCH_` was used for the bonafide architecture, e.g. SA1100, as well "
"as implementations of the architecture, e.g. Assabet.  It was decided to "
"change the implementation macros to read `CONFIG_MACH_` for clarity.  "
"Moreover, a retroactive fixup has not been made because it would complicate "
"patching."
msgstr ""

#: ../../../arch/arm/arm.rst:170
msgid "Previous registrations may be found online."
msgstr ""

#: ../../../arch/arm/arm.rst:172 ../../../arch/arm/arm.rst:205
msgid "<http://www.arm.linux.org.uk/developer/machines/>"
msgstr ""

#: ../../../arch/arm/arm.rst:175
msgid "Kernel entry (head.S)"
msgstr ""

#: ../../../arch/arm/arm.rst:176
msgid ""
"The initial entry into the kernel is via head.S, which uses machine "
"independent code.  The machine is selected by the value of 'r1' on entry, "
"which must be kept unique."
msgstr ""

#: ../../../arch/arm/arm.rst:180
msgid ""
"Due to the large number of machines which the ARM port of Linux provides "
"for, we have a method to manage this which ensures that we don't end up "
"duplicating large amounts of code."
msgstr ""

#: ../../../arch/arm/arm.rst:184
msgid ""
"We group machine (or platform) support code into machine classes.  A class "
"typically based around one or more system on a chip devices, and acts as a "
"natural container around the actual implementations.  These classes are "
"given directories - arch/arm/mach-<class> - which contain the source files "
"and include/mach/ to support the machine class."
msgstr ""

#: ../../../arch/arm/arm.rst:190
msgid ""
"For example, the SA1100 class is based upon the SA1100 and SA1110 SoC "
"devices, and contains the code to support the way the on-board and off- "
"board devices are used, or the device is setup, and provides that machine "
"specific \"personality.\""
msgstr ""

#: ../../../arch/arm/arm.rst:195
msgid ""
"For platforms that support device tree (DT), the machine selection is "
"controlled at runtime by passing the device tree blob to the kernel.  At "
"compile-time, support for the machine type must be selected.  This allows "
"for a single multiplatform kernel build to be used for several machine types."
msgstr ""

#: ../../../arch/arm/arm.rst:200
msgid ""
"For platforms that do not use device tree, this machine selection is "
"controlled by the machine type ID, which acts both as a run-time and a "
"compile-time code selection method.  You can register a new machine via the "
"web site at:"
msgstr ""

#: ../../../arch/arm/arm.rst:207
msgid ""
"Note: Please do not register a machine type for DT-only platforms.  If your "
"platform is DT-only, you do not need a registered machine type."
msgstr ""

#: ../../../arch/arm/arm.rst:210
msgid "---"
msgstr ""

#: ../../../arch/arm/arm.rst:212
msgid "Russell King (15/03/2004)"
msgstr ""
