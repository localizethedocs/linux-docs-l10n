# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../arch/powerpc/vas-api.rst:6
msgid "Virtual Accelerator Switchboard (VAS) userspace API"
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:9
msgid "Introduction"
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:11
msgid ""
"Power9 processor introduced Virtual Accelerator Switchboard (VAS) which "
"allows both userspace and kernel communicate to co-processor (hardware "
"accelerator) referred to as the Nest Accelerator (NX). The NX unit comprises "
"of one or more hardware engines or co-processor types such as 842 "
"compression, GZIP compression and encryption. On power9, userspace "
"applications will have access to only GZIP Compression engine which supports "
"ZLIB and GZIP compression algorithms in the hardware."
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:19
msgid ""
"To communicate with NX, kernel has to establish a channel or window and then "
"requests can be submitted directly without kernel involvement. Requests to "
"the GZIP engine must be formatted as a co-processor Request Block (CRB) and "
"these CRBs must be submitted to the NX using COPY/PASTE instructions to "
"paste the CRB to hardware address that is associated with the engine's "
"request queue."
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:26
msgid ""
"The GZIP engine provides two priority levels of requests: Normal and High. "
"Only Normal requests are supported from userspace right now."
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:29
msgid ""
"This document explains userspace API that is used to interact with kernel to "
"setup channel / window which can be used to send compression requests "
"directly to NX accelerator."
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:35
msgid "Overview"
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:37
msgid ""
"Application access to the GZIP engine is provided through /dev/crypto/nx-"
"gzip device node implemented by the VAS/NX device driver. An application "
"must open the /dev/crypto/nx-gzip device to obtain a file descriptor (fd). "
"Then should issue VAS_TX_WIN_OPEN ioctl with this fd to establish connection "
"to the engine. It means send window is opened on GZIP engine for this "
"process. Once a connection is established, the application should use the "
"mmap() system call to map the hardware address of engine's request queue "
"into the application's virtual address space."
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:46
msgid ""
"The application can then submit one or more requests to the engine by using "
"copy/paste instructions and pasting the CRBs to the virtual address (aka "
"paste_address) returned by mmap(). User space can close the established "
"connection or send window by closing the file descriptor (close(fd)) or upon "
"the process exit."
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:52
msgid ""
"Note that applications can send several requests with the same window or can "
"establish multiple windows, but one window for each file descriptor."
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:55
msgid ""
"Following sections provide additional details and references about the "
"individual steps."
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:59
msgid "NX-GZIP Device Node"
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:61
msgid ""
"There is one /dev/crypto/nx-gzip node in the system and it provides access "
"to all GZIP engines in the system. The only valid operations on /dev/crypto/"
"nx-gzip are:"
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:65
msgid "open() the device for read and write."
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:66
msgid "issue VAS_TX_WIN_OPEN ioctl"
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:67
msgid ""
"mmap() the engine's request queue into application's virtual address space "
"(i.e. get a paste_address for the co-processor engine)."
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:70
msgid "close the device node."
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:72
msgid "Other file operations on this device node are undefined."
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:74
msgid ""
"Note that the copy and paste operations go directly to the hardware and do "
"not go through this device. Refer COPY/PASTE document for more details."
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:78
msgid ""
"Although a system may have several instances of the NX co-processor engines "
"(typically, one per P9 chip) there is just one /dev/crypto/nx-gzip device "
"node in the system. When the nx-gzip device node is opened, Kernel opens "
"send window on a suitable instance of NX accelerator. It finds CPU on which "
"the user process is executing and determine the NX instance for the "
"corresponding chip on which this CPU belongs."
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:86
msgid ""
"Applications may chose a specific instance of the NX co-processor using the "
"vas_id field in the VAS_TX_WIN_OPEN ioctl as detailed below."
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:89
msgid "A userspace library libnxz is available here but still in development:"
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:91
msgid "https://github.com/abalib/power-gzip"
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:93
msgid ""
"Applications that use inflate / deflate calls can link with libnxz instead "
"of libz and use NX GZIP compression without any modification."
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:97
msgid "Open /dev/crypto/nx-gzip"
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:99
msgid ""
"The nx-gzip device should be opened for read and write. No special "
"privileges are needed to open the device. Each window corresponds to one "
"file descriptor. So if the userspace process needs multiple windows, several "
"open calls have to be issued."
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:104
msgid ""
"See open(2) system call man pages for other details such as return values, "
"error codes and restrictions."
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:108
msgid "VAS_TX_WIN_OPEN ioctl"
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:110
msgid ""
"Applications should use the VAS_TX_WIN_OPEN ioctl as follows to establish a "
"connection with NX co-processor engine:"
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:124
msgid "version:"
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:125
msgid "The version field must be currently set to 1."
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:126
msgid "vas_id:"
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:127
msgid ""
"If '-1' is passed, kernel will make a best-effort attempt to assign an "
"optimal instance of NX for the process. To select the specific VAS instance, "
"refer \"Discovery of available VAS engines\" section below."
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:132
msgid ""
"flags, reserved1 and reserved2[6] fields are for future extension and must "
"be set to 0."
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:135
msgid ""
"The attributes attr for the VAS_TX_WIN_OPEN ioctl are defined as follows::"
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:145
msgid ""
"The VAS_TX_WIN_OPEN ioctl returns 0 on success. On errors, it returns -1 and "
"sets the errno variable to indicate the error."
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:148
msgid "Error conditions:"
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:151 ../../../arch/powerpc/vas-api.rst:152
#: ../../../arch/powerpc/vas-api.rst:153 ../../../arch/powerpc/vas-api.rst:158
#: ../../../arch/powerpc/vas-api.rst:184 ../../../arch/powerpc/vas-api.rst:187
msgid "EINVAL"
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:151
msgid "fd does not refer to a valid VAS device."
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:152
msgid "Invalid vas ID"
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:153
msgid "version is not set with proper value"
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:154
msgid "EEXIST"
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:154
msgid "Window is already opened for the given fd"
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:155
msgid "ENOMEM"
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:155
msgid "Memory is not available to allocate window"
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:156
msgid "ENOSPC"
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:156
msgid "System has too many active windows (connections) opened"
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:158
msgid "reserved fields are not set to 0."
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:161
msgid ""
"See the ioctl(2) man page for more details, error codes and restrictions."
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:165
msgid "mmap() NX-GZIP device"
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:167
msgid ""
"The mmap() system call for a NX-GZIP device fd returns a paste_address that "
"the application can use to copy/paste its CRB to the hardware engines."
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:174
msgid "Only restrictions on mmap for a NX-GZIP device fd are:"
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:176
msgid "size should be PAGE_SIZE"
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:177
msgid "offset parameter should be 0ULL"
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:179
msgid ""
"Refer to mmap(2) man page for additional details/restrictions. In addition "
"to the error conditions listed on the mmap(2) man page, can also fail with "
"one of the following error codes:"
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:184
msgid ""
"fd is not associated with an open window (i.e mmap() does not follow a "
"successful call to the VAS_TX_WIN_OPEN ioctl)."
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:187
msgid "offset field is not 0ULL."
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:191
msgid "Discovery of available VAS engines"
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:193
msgid ""
"Each available VAS instance in the system will have a device tree node like /"
"proc/device-tree/vas@* or /proc/device-tree/xscom@*/vas@*. Determine the "
"chip or VAS instance and use the corresponding ibm,vas-id property value in "
"this node to select specific VAS instance."
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:199
msgid "Copy/Paste operations"
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:201
msgid ""
"Applications should use the copy and paste instructions to send CRB to NX. "
"Refer section 4.4 in PowerISA for Copy/Paste instructions: https://"
"openpowerfoundation.org/?resource_lib=power-isa-version-3-0"
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:206
msgid "CRB Specification and use NX"
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:208
msgid ""
"Applications should format requests to the co-processor using the co-"
"processor Request Block (CRBs). Refer NX-GZIP user's manual for the format "
"of CRB and use NX from userspace such as sending requests and checking "
"request status."
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:214
msgid "NX Fault handling"
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:216
msgid ""
"Applications send requests to NX and wait for the status by polling on co-"
"processor Status Block (CSB) flags. NX updates status in CSB after each "
"request is processed. Refer NX-GZIP user's manual for the format of CSB and "
"status flags."
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:221
msgid ""
"In case if NX encounters translation error (called NX page fault) on CSB "
"address or any request buffer, raises an interrupt on the CPU to handle the "
"fault. Page fault can happen if an application passes invalid addresses or "
"request buffers are not in memory. The operating system handles the fault by "
"updating CSB with the following data::"
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:232
msgid ""
"When an application receives translation error, it can touch or access the "
"page that has a fault address so that this page will be in memory. Then the "
"application can resend this request to NX."
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:236
msgid ""
"If the OS can not update CSB due to invalid CSB address, sends SEGV signal "
"to the process who opened the send window on which the original request was "
"issued. This signal returns with the following siginfo struct::"
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:245
msgid ""
"In the case of multi-thread applications, NX send windows can be shared "
"across all threads. For example, a child thread can open a send window, but "
"other threads can send requests to NX using this window. These requests will "
"be successful even in the case of OS handling faults as long as CSB address "
"is valid. If the NX request contains an invalid CSB address, the signal will "
"be sent to the child thread that opened the window. But if the thread is "
"exited without closing the window and the request is issued using this "
"window. the signal will be issued to the thread group leader (tgid). It is "
"up to the application whether to ignore or handle these signals."
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:256
msgid ""
"NX-GZIP User's Manual: https://github.com/libnxz/power-gzip/blob/master/doc/"
"power_nx_gzip_um.pdf"
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:260
msgid "Simple example"
msgstr ""

#: ../../../arch/powerpc/vas-api.rst:304
msgid "Refer https://github.com/libnxz/power-gzip for tests or more use cases."
msgstr ""
