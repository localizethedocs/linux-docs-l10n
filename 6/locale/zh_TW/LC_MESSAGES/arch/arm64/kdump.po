# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../arch/arm64/kdump.rst:3
msgid "crashkernel memory reservation on arm64"
msgstr ""

#: ../../../arch/arm64/kdump.rst:5
msgid "Author: Baoquan He <bhe@redhat.com>"
msgstr ""

#: ../../../arch/arm64/kdump.rst:7
msgid ""
"Kdump mechanism is used to capture a corrupted kernel vmcore so that it can "
"be subsequently analyzed. In order to do this, a preliminarily reserved "
"memory is needed to pre-load the kdump kernel and boot such kernel if "
"corruption happens."
msgstr ""

#: ../../../arch/arm64/kdump.rst:12
msgid ""
"That reserved memory for kdump is adapted to be able to minimally "
"accommodate the kdump kernel and the user space programs needed for the "
"vmcore collection."
msgstr ""

#: ../../../arch/arm64/kdump.rst:17
msgid "Kernel parameter"
msgstr ""

#: ../../../arch/arm64/kdump.rst:19
msgid ""
"Through the kernel parameters below, memory can be reserved accordingly "
"during the early stage of the first kernel booting so that a continuous "
"large chunk of memomy can be found. The low memory reservation needs to be "
"considered if the crashkernel is reserved from the high memory area."
msgstr ""

#: ../../../arch/arm64/kdump.rst:24
msgid "crashkernel=size@offset"
msgstr ""

#: ../../../arch/arm64/kdump.rst:25
msgid "crashkernel=size"
msgstr ""

#: ../../../arch/arm64/kdump.rst:26
msgid "crashkernel=size,high crashkernel=size,low"
msgstr ""

#: ../../../arch/arm64/kdump.rst:29
msgid "Low memory and high memory"
msgstr ""

#: ../../../arch/arm64/kdump.rst:31
msgid ""
"For kdump reservations, low memory is the memory area under a specific "
"limit, usually decided by the accessible address bits of the DMA-capable "
"devices needed by the kdump kernel to run. Those devices not related to "
"vmcore dumping can be ignored. On arm64, the low memory upper bound is not "
"fixed: it is 1G on the RPi4 platform but 4G on most other systems. On "
"special kernels built with CONFIG_ZONE_(DMA|DMA32) disabled, the whole "
"system RAM is low memory. Outside of the low memory described above, the "
"rest of system RAM is considered high memory."
msgstr ""

#: ../../../arch/arm64/kdump.rst:41
msgid "Implementation"
msgstr ""

#: ../../../arch/arm64/kdump.rst:44
msgid "1) crashkernel=size@offset"
msgstr ""

#: ../../../arch/arm64/kdump.rst:46
msgid ""
"The crashkernel memory must be reserved at the user-specified region or fail "
"if already occupied."
msgstr ""

#: ../../../arch/arm64/kdump.rst:51
msgid "2) crashkernel=size"
msgstr ""

#: ../../../arch/arm64/kdump.rst:53
msgid ""
"The crashkernel memory region will be reserved in any available position "
"according to the search order:"
msgstr ""

#: ../../../arch/arm64/kdump.rst:56
msgid ""
"Firstly, the kernel searches the low memory area for an available region "
"with the specified size."
msgstr ""

#: ../../../arch/arm64/kdump.rst:59
msgid ""
"If searching for low memory fails, the kernel falls back to searching the "
"high memory area for an available region of the specified size. If the "
"reservation in high memory succeeds, a default size reservation in the low "
"memory will be done. Currently the default size is 128M, sufficient for the "
"low memory needs of the kdump kernel."
msgstr ""

#: ../../../arch/arm64/kdump.rst:65
msgid ""
"Note: crashkernel=size is the recommended option for crashkernel kernel "
"reservations. The user would not need to know the system memory layout for a "
"specific platform."
msgstr ""

#: ../../../arch/arm64/kdump.rst:70
msgid "3) crashkernel=size,high crashkernel=size,low"
msgstr ""

#: ../../../arch/arm64/kdump.rst:72
msgid ""
"crashkernel=size,(high|low) are an important supplement to crashkernel=size. "
"They allows the user to specify how much memory needs to be allocated from "
"the high memory and low memory respectively. On many systems the low memory "
"is precious and crashkernel reservations from this area should be kept to a "
"minimum."
msgstr ""

#: ../../../arch/arm64/kdump.rst:78
msgid ""
"To reserve memory for crashkernel=size,high, searching is first attempted "
"from the high memory region. If the reservation succeeds, the low memory "
"reservation will be done subsequently."
msgstr ""

#: ../../../arch/arm64/kdump.rst:82
msgid ""
"If reservation from the high memory failed, the kernel falls back to "
"searching the low memory with the specified size in crashkernel=,high. If it "
"succeeds, no further reservation for low memory is needed."
msgstr ""

#: ../../../arch/arm64/kdump.rst:86
msgid "Notes:"
msgstr ""

#: ../../../arch/arm64/kdump.rst:88
msgid ""
"If crashkernel=,low is not specified, the default low memory reservation "
"will be done automatically."
msgstr ""

#: ../../../arch/arm64/kdump.rst:91
msgid ""
"if crashkernel=0,low is specified, it means that the low memory reservation "
"is omitted intentionally."
msgstr ""
