# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../arch/arm64/ptdump.rst:3
msgid "Kernel page table dump"
msgstr ""

#: ../../../arch/arm64/ptdump.rst:5
msgid ""
"ptdump is a debugfs interface that provides a detailed dump of the kernel "
"page tables. It offers a comprehensive overview of the kernel virtual memory "
"layout as well as the attributes associated with the various regions in a "
"human-readable format. It is useful to dump the kernel page tables to verify "
"permissions and memory types. Examining the page table entries and "
"permissions helps identify potential security vulnerabilities such as "
"mappings with overly permissive access rights or improper memory protections."
msgstr ""

#: ../../../arch/arm64/ptdump.rst:14
msgid ""
"Memory hotplug allows dynamic expansion or contraction of available memory "
"without requiring a system reboot. To maintain the consistency and integrity "
"of the memory management data structures, arm64 makes use of the "
"``mem_hotplug_lock`` semaphore in write mode. Additionally, in read mode, "
"``mem_hotplug_lock`` supports an efficient implementation of "
"``get_online_mems()`` and ``put_online_mems()``. These protect the offlining "
"of memory being accessed by the ptdump code."
msgstr ""

#: ../../../arch/arm64/ptdump.rst:22
msgid ""
"In order to dump the kernel page tables, enable the following configurations "
"and mount debugfs::"
msgstr ""

#: ../../../arch/arm64/ptdump.rst:30
msgid ""
"On analysing the output of ``cat /sys/kernel/debug/kernel_page_tables`` one "
"can derive information about the virtual address range of the entry, "
"followed by size of the memory region covered by this entry, the "
"hierarchical structure of the page tables and finally the attributes "
"associated with each page. The page attributes provide information about "
"access permissions, execution capability, type of mapping such as leaf level "
"PTE or block level PGD, PMD and PUD, and access status of a page within the "
"kernel memory. Assessing these attributes can assist in understanding the "
"memory layout, access patterns and security characteristics of the kernel "
"pages."
msgstr ""

#: ../../../arch/arm64/ptdump.rst:41
msgid "Kernel virtual memory layout example::"
msgstr ""

#: ../../../arch/arm64/ptdump.rst:86
msgid "``cat /sys/kernel/debug/kernel_page_tables`` output::"
msgstr ""
