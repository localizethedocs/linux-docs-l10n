# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../devicetree/bindings/writing-bindings.rst:5
msgid "DOs and DON'Ts for designing and writing Devicetree bindings"
msgstr ""

#: ../../../devicetree/bindings/writing-bindings.rst:7
msgid ""
"This is a list of common review feedback items focused on binding design. "
"With every rule, there are exceptions and bindings have many gray areas."
msgstr ""

#: ../../../devicetree/bindings/writing-bindings.rst:10
msgid ""
"For guidelines related to patches, see Documentation/devicetree/bindings/"
"submitting-patches.rst"
msgstr ""

#: ../../../devicetree/bindings/writing-bindings.rst:15
msgid "Overall design"
msgstr ""

#: ../../../devicetree/bindings/writing-bindings.rst:17
msgid ""
"DO attempt to make bindings complete even if a driver doesn't support some "
"features. For example, if a device has an interrupt, then include the "
"'interrupts' property even if the driver is only polled mode."
msgstr ""

#: ../../../devicetree/bindings/writing-bindings.rst:21
msgid ""
"DON'T refer to Linux or \"device driver\" in bindings. Bindings should be "
"based on what the hardware has, not what an OS and driver currently support."
msgstr ""

#: ../../../devicetree/bindings/writing-bindings.rst:24
msgid ""
"DO use node names matching the class of the device. Many standard names are "
"defined in the DT Spec. If there isn't one, consider adding it."
msgstr ""

#: ../../../devicetree/bindings/writing-bindings.rst:27
msgid ""
"DO check that the example matches the documentation especially after making "
"review changes."
msgstr ""

#: ../../../devicetree/bindings/writing-bindings.rst:30
msgid ""
"DON'T create nodes just for the sake of instantiating drivers. Multi-"
"function devices only need child nodes when the child nodes have their own "
"DT resources. A single node can be multiple providers (e.g. clocks and "
"resets)."
msgstr ""

#: ../../../devicetree/bindings/writing-bindings.rst:34
msgid ""
"DON'T use 'syscon' alone without a specific compatible string. A 'syscon' "
"hardware block should have a compatible string unique enough to infer the "
"register layout of the entire block (at a minimum)."
msgstr ""

#: ../../../devicetree/bindings/writing-bindings.rst:40
msgid "Properties"
msgstr ""

#: ../../../devicetree/bindings/writing-bindings.rst:42
msgid "DO make 'compatible' properties specific."
msgstr ""

#: ../../../devicetree/bindings/writing-bindings.rst:44
msgid "DON'T use wildcards or device-family names in compatible strings."
msgstr ""

#: ../../../devicetree/bindings/writing-bindings.rst:46
msgid ""
"DO use fallback compatibles when devices are the same as or a superset of "
"prior implementations."
msgstr ""

#: ../../../devicetree/bindings/writing-bindings.rst:49
msgid "DO add new compatibles in case there are new features or bugs."
msgstr ""

#: ../../../devicetree/bindings/writing-bindings.rst:51
msgid ""
"DO use a SoC-specific compatible for all SoC devices, followed by a fallback "
"if appropriate. SoC-specific compatibles are also preferred for the "
"fallbacks."
msgstr ""

#: ../../../devicetree/bindings/writing-bindings.rst:55
msgid ""
"DON'T use bus suffixes to encode the type of interface device is using. The "
"parent bus node already implies that interface.  DON'T add the type of "
"device, if the device cannot be anything else."
msgstr ""

#: ../../../devicetree/bindings/writing-bindings.rst:59
msgid ""
"DO use a vendor prefix on device-specific property names. Consider if "
"properties could be common among devices of the same class. Check other "
"existing bindings for similar devices."
msgstr ""

#: ../../../devicetree/bindings/writing-bindings.rst:63
msgid ""
"DON'T redefine common properties. Just reference the definition and define "
"constraints specific to the device."
msgstr ""

#: ../../../devicetree/bindings/writing-bindings.rst:66
msgid ""
"DON'T add properties to avoid a specific compatible. DON'T add properties if "
"they are implied by (deducible from) the compatible."
msgstr ""

#: ../../../devicetree/bindings/writing-bindings.rst:69
msgid ""
"DO use common property unit suffixes for properties with scientific units. "
"Recommended suffixes are listed at https://github.com/devicetree-org/dt-"
"schema/blob/main/dtschema/schemas/property-units.yaml"
msgstr ""

#: ../../../devicetree/bindings/writing-bindings.rst:73
msgid ""
"DO define properties in terms of constraints. How many entries? What are "
"possible values? What is the order? All these constraints represent the ABI "
"as well."
msgstr ""

#: ../../../devicetree/bindings/writing-bindings.rst:77
msgid ""
"DON'T make changes that break the ABI without explicit and detailed "
"rationale for why the changes have to be made and their impact. ABI impact "
"goes beyond the Linux kernel, because it also covers other open-source "
"upstream projects."
msgstr ""

#: ../../../devicetree/bindings/writing-bindings.rst:83
msgid "Typical cases and caveats"
msgstr ""

#: ../../../devicetree/bindings/writing-bindings.rst:85
msgid ""
"Phandle entries, like clocks/dmas/interrupts/resets, should always be "
"explicitly ordered. Include the {clock,dma,interrupt,reset}-names if there "
"is more than one phandle. When used, both of these fields need the same "
"constraints (e.g. list of items)."
msgstr ""

#: ../../../devicetree/bindings/writing-bindings.rst:90
msgid ""
"For names used in {clock,dma,interrupt,reset}-names, do not add any suffix, "
"e.g.: \"tx\" instead of \"txirq\" (for interrupt)."
msgstr ""

#: ../../../devicetree/bindings/writing-bindings.rst:93
msgid ""
"Properties without schema types (e.g. without standard suffix or not defined "
"by schema) need the type, even if this is an enum."
msgstr ""

#: ../../../devicetree/bindings/writing-bindings.rst:96
msgid ""
"If schema includes other schema (e.g. /schemas/i2c/i2c-controller.yaml) use "
"\"unevaluatedProperties:false\". In other cases, usually use "
"\"additionalProperties:false\"."
msgstr ""

#: ../../../devicetree/bindings/writing-bindings.rst:100
msgid ""
"For sub-blocks/components of bigger device (e.g. SoC blocks) use rather "
"device-based compatible (e.g. SoC-based compatible), instead of custom "
"versioning of that component. For example use \"vendor,soc1234-i2c\" instead "
"of \"vendor,i2c-v2\"."
msgstr ""

#: ../../../devicetree/bindings/writing-bindings.rst:105
msgid ""
"\"syscon\" is not a generic property. Use vendor and type, e.g. \"vendor,"
"power-manager-syscon\"."
msgstr ""

#: ../../../devicetree/bindings/writing-bindings.rst:108
msgid ""
"Do not add instance index (IDs) properties or custom OF aliases.  If the "
"devices have different programming model, they might need different "
"compatibles.  If such devices use some other device in a different way, e.g. "
"they program the phy differently, use cell/phandle arguments."
msgstr ""

#: ../../../devicetree/bindings/writing-bindings.rst:113
msgid ""
"Bindings files should be named like compatible: vendor,device.yaml. In case "
"of multiple compatibles in the binding, use one of the fallbacks or a more "
"generic name, yet still matching compatible style."
msgstr ""

#: ../../../devicetree/bindings/writing-bindings.rst:118
msgid "Board/SoC .dts Files"
msgstr ""

#: ../../../devicetree/bindings/writing-bindings.rst:120
msgid "DO put all MMIO devices under a bus node and not at the top-level."
msgstr ""

#: ../../../devicetree/bindings/writing-bindings.rst:122
msgid ""
"DO use non-empty 'ranges' to limit the size of child buses/devices. 64-bit "
"platforms don't need all devices to have 64-bit address and size."
msgstr ""
