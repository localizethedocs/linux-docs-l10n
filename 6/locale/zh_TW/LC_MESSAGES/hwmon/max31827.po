# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../hwmon/max31827.rst:4
msgid "Kernel driver max31827"
msgstr ""

#: ../../../hwmon/max31827.rst:6
msgid "Supported chips:"
msgstr ""

#: ../../../hwmon/max31827.rst:8
msgid "Maxim MAX31827"
msgstr ""

#: ../../../hwmon/max31827.rst:10
msgid "Prefix: 'max31827'"
msgstr ""

#: ../../../hwmon/max31827.rst:12 ../../../hwmon/max31827.rst:20
#: ../../../hwmon/max31827.rst:28
msgid "Addresses scanned: I2C 0x40 - 0x5f"
msgstr ""

#: ../../../hwmon/max31827.rst:14 ../../../hwmon/max31827.rst:22
#: ../../../hwmon/max31827.rst:30
msgid "Datasheet: Publicly available at the Analog Devices website"
msgstr ""

#: ../../../hwmon/max31827.rst:16
msgid "Maxim MAX31828"
msgstr ""

#: ../../../hwmon/max31827.rst:18
msgid "Prefix: 'max31828'"
msgstr ""

#: ../../../hwmon/max31827.rst:24
msgid "Maxim MAX31829"
msgstr ""

#: ../../../hwmon/max31827.rst:26
msgid "Prefix: 'max31829'"
msgstr ""

#: ../../../hwmon/max31827.rst:33
msgid "Authors:"
msgstr ""

#: ../../../hwmon/max31827.rst:34
msgid "Daniel Matyas <daniel.matyas@analog.com>"
msgstr ""

#: ../../../hwmon/max31827.rst:37
msgid "Description"
msgstr "描述"

#: ../../../hwmon/max31827.rst:39
msgid ""
"The chips supported by this driver are quite similar. The only difference "
"between them is found in the default power-on behaviour of the chips. While "
"the MAX31827's fault queue is set to 1, the other two chip's fault queue is "
"set to 4. Besides this, the MAX31829's alarm active state is high, while the "
"other two chip's alarms are active on low. It is important to note that the "
"chips can be configured to operate in the same manner with 1 write operation "
"to the configuration register. From here on, we will refer to all these "
"chips as MAX31827."
msgstr ""

#: ../../../hwmon/max31827.rst:48
msgid ""
"MAX31827 implements a temperature sensor with a 6 WLP packaging scheme. This "
"sensor measures the temperature of the chip itself."
msgstr ""

#: ../../../hwmon/max31827.rst:51
msgid ""
"MAX31827 has low and over temperature alarms with an effective value and a "
"hysteresis value: -40 and -30 degrees for under temperature alarm and +100 "
"and +90 degrees for over temperature alarm."
msgstr ""

#: ../../../hwmon/max31827.rst:55
msgid ""
"The alarm can be configured in comparator and interrupt mode from the "
"devicetree. In Comparator mode, the OT/UT status bits have a value of 1 when "
"the temperature rises above the TH value or falls below TL, which is also "
"subject to the Fault Queue selection. OT status returns to 0 when the "
"temperature drops below the TH_HYST value or when shutdown mode is entered. "
"Similarly, UT status returns to 0 when the temperature rises above TL_HYST "
"value or when shutdown mode is entered."
msgstr ""

#: ../../../hwmon/max31827.rst:63
msgid ""
"In interrupt mode exceeding TH also sets OT status to 1, which remains set "
"until a read operation is performed on the configuration/status register "
"(max or min attribute); at this point, it returns to 0. Once OT status is "
"set to 1 from exceeding TH and reset, it is set to 1 again only when the "
"temperature drops below TH_HYST. The output remains asserted until it is "
"reset by a read. It is set again if the temperature rises above TH, and so "
"on. The same logic applies to the operation of the UT status bit."
msgstr ""

#: ../../../hwmon/max31827.rst:71
msgid ""
"Putting the MAX31827 into shutdown mode also resets the OT/UT status bits. "
"Note that if the mode is changed while OT/UT status bits are set, an OT/UT "
"status reset may be required before it begins to behave normally. To prevent "
"this, it is recommended to perform a read of the configuration/status "
"register to clear the status bits before changing the operating mode."
msgstr ""

#: ../../../hwmon/max31827.rst:77
msgid ""
"The conversions can be manual with the one-shot functionality and automatic "
"with a set frequency. When powered on, the chip measures temperatures with 1 "
"conv/s. The conversion rate can be modified with update_interval attribute "
"of the chip. Conversion/second = 1/update_interval. Thus, the available "
"options according to the data sheet are:"
msgstr ""

#: ../../../hwmon/max31827.rst:83
msgid "64000 (ms) = 1 conv/64 sec"
msgstr ""

#: ../../../hwmon/max31827.rst:84
msgid "32000 (ms) = 1 conv/32 sec"
msgstr ""

#: ../../../hwmon/max31827.rst:85
msgid "16000 (ms) = 1 conv/16 sec"
msgstr ""

#: ../../../hwmon/max31827.rst:86
msgid "4000 (ms) = 1 conv/4 sec"
msgstr ""

#: ../../../hwmon/max31827.rst:87
msgid "1000 (ms) = 1 conv/sec (default)"
msgstr ""

#: ../../../hwmon/max31827.rst:88
msgid "250 (ms) = 4 conv/sec"
msgstr ""

#: ../../../hwmon/max31827.rst:89
msgid "125 (ms) = 8 conv/sec"
msgstr ""

#: ../../../hwmon/max31827.rst:91
msgid ""
"Enabling the device when it is already enabled has the side effect of "
"setting the conversion frequency to 1 conv/s. The conversion time varies "
"depending on the resolution."
msgstr ""

#: ../../../hwmon/max31827.rst:95
msgid ""
"The conversion time doubles with every bit of increased resolution. The "
"available resolutions are:"
msgstr ""

#: ../../../hwmon/max31827.rst:98
msgid "8 bit -> 8.75 ms conversion time"
msgstr ""

#: ../../../hwmon/max31827.rst:99
msgid "9 bit -> 17.5 ms conversion time"
msgstr ""

#: ../../../hwmon/max31827.rst:100
msgid "10 bit -> 35 ms conversion time"
msgstr ""

#: ../../../hwmon/max31827.rst:101
msgid "12 bit (default) -> 140 ms conversion time"
msgstr ""

#: ../../../hwmon/max31827.rst:103
msgid ""
"There is a temp1_resolution attribute which indicates the unit change in the "
"input temperature in milli-degrees C."
msgstr ""

#: ../../../hwmon/max31827.rst:106
msgid "1000 mC -> 8 bit"
msgstr ""

#: ../../../hwmon/max31827.rst:107
msgid "500 mC -> 9 bit"
msgstr ""

#: ../../../hwmon/max31827.rst:108
msgid "250 mC -> 10 bit"
msgstr ""

#: ../../../hwmon/max31827.rst:109
msgid ""
"62 mC -> 12 bit (default) - actually this is 62.5, but the fil returns 62"
msgstr ""

#: ../../../hwmon/max31827.rst:111
msgid ""
"When chip is in shutdown mode and a read operation is requested, one-shot is "
"triggered, the device waits for <conversion time> ms, and only after that is "
"the temperature value register read. Note that the conversion times are "
"rounded up to the nearest possible integer."
msgstr ""

#: ../../../hwmon/max31827.rst:116
msgid ""
"The LSB of the temperature values is 0.0625 degrees Celsius, but the values "
"of the temperatures are displayed in milli-degrees. This means, that some "
"data is lost. The step between 2 consecutive values is 62 or 63. This effect "
"can be seen in the writing of alarm values too. For positive numbers the "
"user-input value will always be rounded down to the nearest possible value, "
"for negative numbers the user-input will always be rounded up to the nearest "
"possible value."
msgstr ""

#: ../../../hwmon/max31827.rst:123
msgid ""
"Bus timeout resets the I2C-compatible interface when SCL is low for more "
"than 30ms (nominal)."
msgstr ""

#: ../../../hwmon/max31827.rst:126
msgid ""
"Alarm polarity determines if the active state of the alarm is low or high. "
"The behavior for both settings is dependent on the Fault Queue setting. The "
"ALARM pin is an open-drain output and requires a pullup resistor to operate."
msgstr ""

#: ../../../hwmon/max31827.rst:130
msgid ""
"The Fault Queue bits select how many consecutive temperature faults must "
"occur before overtemperature or undertemperature faults are indicated in the "
"corresponding status bits."
msgstr ""

#: ../../../hwmon/max31827.rst:135
msgid "PEC Support"
msgstr ""

#: ../../../hwmon/max31827.rst:137
msgid ""
"When reading a register value, the PEC byte is computed and sent by the chip."
msgstr ""

#: ../../../hwmon/max31827.rst:139
msgid ""
"PEC on word data transaction represents a significant increase in bandwidth "
"usage (+33% for both write and reads) in normal conditions."
msgstr ""

#: ../../../hwmon/max31827.rst:142
msgid ""
"Since this operation implies there will be an extra delay to each "
"transaction, PEC can be disabled or enabled through sysfs. Just write 1  to "
"the \"pec\" file for enabling PEC and 0 for disabling it."
msgstr ""
