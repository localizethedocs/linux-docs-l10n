# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../networking/bridge.rst:5
msgid "Ethernet Bridging"
msgstr ""

#: ../../../networking/bridge.rst:8
msgid "Introduction"
msgstr ""

#: ../../../networking/bridge.rst:10
msgid ""
"The IEEE 802.1Q-2022 (Bridges and Bridged Networks) standard defines the "
"operation of bridges in computer networks. A bridge, in the context of this "
"standard, is a device that connects two or more network segments and "
"operates at the data link layer (Layer 2) of the OSI (Open Systems "
"Interconnection) model. The purpose of a bridge is to filter and forward "
"frames between different segments based on the destination MAC (Media Access "
"Control) address."
msgstr ""

#: ../../../networking/bridge.rst:18
msgid "Bridge kAPI"
msgstr ""

#: ../../../networking/bridge.rst:20
msgid ""
"Here are some core structures of bridge code. Note that the kAPI is "
"*unstable*, and can be changed at any time."
msgstr ""

#: ../../../networking/bridge:23: net/bridge/br_private.h:188
msgid "per-vlan entry"
msgstr ""

#: ../../../networking/bridge:23: net/bridge/br_private.h:192
msgid "**Definition**::"
msgstr ""

#: ../../../networking/bridge:23: net/bridge/br_private.h:220
msgid "**Members**"
msgstr ""

#: ../../../networking/bridge:23: net/bridge/br_private.h:190
msgid "``vnode``"
msgstr ""

#: ../../../networking/bridge:23: net/bridge/br_private.h:191
#: net/bridge/br_private.h:192
msgid "rhashtable member"
msgstr ""

#: ../../../networking/bridge:23: net/bridge/br_private.h:191
msgid "``tnode``"
msgstr ""

#: ../../../networking/bridge:23: net/bridge/br_private.h:192
msgid "``vid``"
msgstr ""

#: ../../../networking/bridge:23: net/bridge/br_private.h:193
msgid "VLAN id"
msgstr ""

#: ../../../networking/bridge:23: net/bridge/br_private.h:193
msgid "``flags``"
msgstr ""

#: ../../../networking/bridge:23: net/bridge/br_private.h:194
msgid "bridge vlan flags"
msgstr ""

#: ../../../networking/bridge:23: net/bridge/br_private.h:194
msgid "``priv_flags``"
msgstr ""

#: ../../../networking/bridge:23: net/bridge/br_private.h:195
msgid "private (in-kernel) bridge vlan flags"
msgstr ""

#: ../../../networking/bridge:23: net/bridge/br_private.h:195
msgid "``state``"
msgstr ""

#: ../../../networking/bridge:23: net/bridge/br_private.h:196
msgid "STP state (e.g. blocking, learning, forwarding)"
msgstr ""

#: ../../../networking/bridge:23: net/bridge/br_private.h:196
msgid "``stats``"
msgstr ""

#: ../../../networking/bridge:23: net/bridge/br_private.h:197
msgid "per-cpu VLAN statistics"
msgstr ""

#: ../../../networking/bridge:23: net/bridge/br_private.h:1
msgid "``{unnamed_union}``"
msgstr ""

#: ../../../networking/bridge:23: net/bridge/br_private.h:2
msgid "anonymous"
msgstr ""

#: ../../../networking/bridge:23: net/bridge/br_private.h:197
msgid "``br``"
msgstr ""

#: ../../../networking/bridge:23: net/bridge/br_private.h:198
msgid "if MASTER flag set, this points to a bridge struct"
msgstr ""

#: ../../../networking/bridge:23: net/bridge/br_private.h:198
msgid "``port``"
msgstr ""

#: ../../../networking/bridge:23: net/bridge/br_private.h:199
msgid "if MASTER flag unset, this points to a port struct"
msgstr ""

#: ../../../networking/bridge:23: net/bridge/br_private.h:199
msgid "``refcnt``"
msgstr ""

#: ../../../networking/bridge:23: net/bridge/br_private.h:200
msgid "if MASTER flag set, this is bumped for each port referencing it"
msgstr ""

#: ../../../networking/bridge:23: net/bridge/br_private.h:200
msgid "``brvlan``"
msgstr ""

#: ../../../networking/bridge:23: net/bridge/br_private.h:201
msgid ""
"if MASTER flag unset, this points to the global per-VLAN context for this "
"VLAN entry"
msgstr ""

#: ../../../networking/bridge:23: net/bridge/br_private.h:202
msgid "``tinfo``"
msgstr ""

#: ../../../networking/bridge:23: net/bridge/br_private.h:203
msgid "bridge tunnel info"
msgstr ""

#: ../../../networking/bridge:23: net/bridge/br_private.h:203
msgid "``br_mcast_ctx``"
msgstr ""

#: ../../../networking/bridge:23: net/bridge/br_private.h:204
msgid "if MASTER flag set, this is the global vlan multicast context"
msgstr ""

#: ../../../networking/bridge:23: net/bridge/br_private.h:204
msgid "``port_mcast_ctx``"
msgstr ""

#: ../../../networking/bridge:23: net/bridge/br_private.h:205
msgid "if MASTER flag unset, this is the per-port/vlan multicast context"
msgstr ""

#: ../../../networking/bridge:23: net/bridge/br_private.h:206
msgid "``msti``"
msgstr ""

#: ../../../networking/bridge:23: net/bridge/br_private.h:207
msgid "if MASTER flag set, this holds the VLANs MST instance"
msgstr ""

#: ../../../networking/bridge:23: net/bridge/br_private.h:207
msgid "``vlist``"
msgstr ""

#: ../../../networking/bridge:23: net/bridge/br_private.h:208
msgid "sorted list of VLAN entries"
msgstr ""

#: ../../../networking/bridge:23: net/bridge/br_private.h:208
msgid "``rcu``"
msgstr ""

#: ../../../networking/bridge:23: net/bridge/br_private.h:209
msgid "used for entry destruction"
msgstr ""

#: ../../../networking/bridge:23: net/bridge/br_private.h:212
msgid "**Description**"
msgstr ""

#: ../../../networking/bridge:23: net/bridge/br_private.h:209
msgid ""
"This structure is shared between the global per-VLAN entries contained in "
"the bridge rhashtable and the local per-port per-VLAN entries contained in "
"the port's rhashtable. The union entries should be interpreted depending on "
"the entry flags that are set."
msgstr ""

#: ../../../networking/bridge.rst:27
msgid "Bridge uAPI"
msgstr ""

#: ../../../networking/bridge.rst:29
msgid ""
"Modern Linux bridge uAPI is accessed via Netlink interface. You can find "
"below files where the bridge and bridge port netlink attributes are defined."
msgstr ""

#: ../../../networking/bridge.rst:33
msgid "Bridge netlink attributes"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:467
msgid ""
"Please *note* that the timer values in the following section are expected in "
"clock_t format, which is seconds multiplied by USER_HZ (generally defined as "
"100)."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:471
msgid "**IFLA_BR_FORWARD_DELAY**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:472
msgid ""
"The bridge forwarding delay is the time spent in LISTENING state (before "
"moving to LEARNING) and in LEARNING state (before moving to FORWARDING). "
"Only relevant if STP is enabled."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:476
msgid ""
"The valid values are between (2 * USER_HZ) and (30 * USER_HZ). The default "
"value is (15 * USER_HZ)."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:479
msgid "**IFLA_BR_HELLO_TIME**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:480
msgid ""
"The time between hello packets sent by the bridge, when it is a root bridge "
"or a designated bridge. Only relevant if STP is enabled."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:483
msgid ""
"The valid values are between (1 * USER_HZ) and (10 * USER_HZ). The default "
"value is (2 * USER_HZ)."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:486
msgid "**IFLA_BR_MAX_AGE**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:487
msgid ""
"The hello packet timeout is the time until another bridge in the spanning "
"tree is assumed to be dead, after reception of its last hello message. Only "
"relevant if STP is enabled."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:491
msgid ""
"The valid values are between (6 * USER_HZ) and (40 * USER_HZ). The default "
"value is (20 * USER_HZ)."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:494
msgid "**IFLA_BR_AGEING_TIME**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:495
msgid ""
"Configure the bridge's FDB entries aging time. It is the time a MAC address "
"will be kept in the FDB after a packet has been received from that address. "
"After this time has passed, entries are cleaned up. Allow values outside the "
"802.1 standard specification for special cases:"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:500
msgid "0 - entry never ages (all permanent)"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:501
msgid "1 - entry disappears (no persistence)"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:503
msgid "The default value is (300 * USER_HZ)."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:505
msgid "**IFLA_BR_STP_STATE**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:506
msgid ""
"Turn spanning tree protocol on (*IFLA_BR_STP_STATE* > 0) or off "
"(*IFLA_BR_STP_STATE* == 0) for this bridge."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:509
#: include/uapi/linux/if_link.h:522 include/uapi/linux/if_link.h:599
#: include/uapi/linux/if_link.h:606 include/uapi/linux/if_link.h:674
#: include/uapi/linux/if_link.h:680 include/uapi/linux/if_link.h:686
#: include/uapi/linux/if_link.h:702 include/uapi/linux/if_link.h:709
#: include/uapi/linux/if_link.h:726
msgid "The default value is 0 (disabled)."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:511
msgid "**IFLA_BR_PRIORITY**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:512
msgid ""
"Set this bridge's spanning tree priority, used during STP root bridge "
"election."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:515
msgid "The valid values are between 0 and 65535."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:517
msgid "**IFLA_BR_VLAN_FILTERING**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:518
msgid ""
"Turn VLAN filtering on (*IFLA_BR_VLAN_FILTERING* > 0) or off "
"(*IFLA_BR_VLAN_FILTERING* == 0). When disabled, the bridge will not consider "
"the VLAN tag when handling packets."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:524
msgid "**IFLA_BR_VLAN_PROTOCOL**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:525
msgid "Set the protocol used for VLAN filtering."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:527
msgid ""
"The valid values are 0x8100(802.1Q) or 0x88A8(802.1AD). The default value is "
"0x8100(802.1Q)."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:530
msgid "**IFLA_BR_GROUP_FWD_MASK**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:531
msgid ""
"The group forwarding mask. This is the bitmask that is applied to decide "
"whether to forward incoming frames destined to link-local addresses (of the "
"form 01:80:C2:00:00:0X)."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:535
msgid ""
"The default value is 0, which means the bridge does not forward any link-"
"local frames coming on this port."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:538
msgid "**IFLA_BR_ROOT_ID**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:539
msgid "The bridge root id, read only."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:541
msgid "**IFLA_BR_BRIDGE_ID**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:542
msgid "The bridge id, read only."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:544
msgid "**IFLA_BR_ROOT_PORT**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:545
msgid "The bridge root port, read only."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:547
msgid "**IFLA_BR_ROOT_PATH_COST**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:548
msgid "The bridge root path cost, read only."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:550
msgid "**IFLA_BR_TOPOLOGY_CHANGE**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:551
msgid "The bridge topology change, read only."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:553
msgid "**IFLA_BR_TOPOLOGY_CHANGE_DETECTED**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:554
msgid "The bridge topology change detected, read only."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:556
msgid "**IFLA_BR_HELLO_TIMER**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:557
msgid "The bridge hello timer, read only."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:559
msgid "**IFLA_BR_TCN_TIMER**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:560
msgid "The bridge tcn timer, read only."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:562
msgid "**IFLA_BR_TOPOLOGY_CHANGE_TIMER**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:563
msgid "The bridge topology change timer, read only."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:565
msgid "**IFLA_BR_GC_TIMER**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:566
msgid "The bridge gc timer, read only."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:568
msgid "**IFLA_BR_GROUP_ADDR**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:569
msgid ""
"Set the MAC address of the multicast group this bridge uses for STP. The "
"address must be a link-local address in standard Ethernet MAC address "
"format. It is an address of the form 01:80:C2:00:00:0X, with X in [0, 4..f]."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:573
msgid "The default value is 0."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:575
msgid "**IFLA_BR_FDB_FLUSH**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:576
msgid "Flush bridge's fdb dynamic entries."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:578
msgid "**IFLA_BR_MCAST_ROUTER**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:579
msgid ""
"Set bridge's multicast router if IGMP snooping is enabled. The valid values "
"are:"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:582
msgid "0 - disabled."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:583
msgid "1 - automatic (queried)."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:584
msgid "2 - permanently enabled."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:586
#: include/uapi/linux/if_link.h:592
msgid "The default value is 1."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:588
msgid "**IFLA_BR_MCAST_SNOOPING**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:589
msgid ""
"Turn multicast snooping on (*IFLA_BR_MCAST_SNOOPING* > 0) or off "
"(*IFLA_BR_MCAST_SNOOPING* == 0)."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:594
msgid "**IFLA_BR_MCAST_QUERY_USE_IFADDR**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:595
msgid ""
"If enabled use the bridge's own IP address as source address for IGMP "
"queries (*IFLA_BR_MCAST_QUERY_USE_IFADDR* > 0) or the default of 0.0.0.0 "
"(*IFLA_BR_MCAST_QUERY_USE_IFADDR* == 0)."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:601
msgid "**IFLA_BR_MCAST_QUERIER**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:602
msgid ""
"Enable (*IFLA_BR_MULTICAST_QUERIER* > 0) or disable "
"(*IFLA_BR_MULTICAST_QUERIER* == 0) IGMP querier, ie sending of multicast "
"queries by the bridge."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:608
msgid "**IFLA_BR_MCAST_HASH_ELASTICITY**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:609
msgid ""
"Set multicast database hash elasticity, It is the maximum chain length in "
"the multicast hash table. This attribute is *deprecated* and the value is "
"always 16."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:613
msgid "**IFLA_BR_MCAST_HASH_MAX**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:614
msgid "Set maximum size of the multicast hash table"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:616
msgid "The default value is 4096, the value must be a power of 2."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:618
msgid "**IFLA_BR_MCAST_LAST_MEMBER_CNT**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:619
msgid ""
"The Last Member Query Count is the number of Group-Specific Queries sent "
"before the router assumes there are no local members. The Last Member Query "
"Count is also the number of Group-and-Source-Specific Queries sent before "
"the router assumes there are no listeners for a particular source."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:625
#: include/uapi/linux/if_link.h:631
msgid "The default value is 2."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:627
msgid "**IFLA_BR_MCAST_STARTUP_QUERY_CNT**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:628
msgid ""
"The Startup Query Count is the number of Queries sent out on startup, "
"separated by the Startup Query Interval."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:633
msgid "**IFLA_BR_MCAST_LAST_MEMBER_INTVL**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:634
msgid ""
"The Last Member Query Interval is the Max Response Time inserted into Group-"
"Specific Queries sent in response to Leave Group messages, and is also the "
"amount of time between Group-Specific Query messages."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:638
msgid "The default value is (1 * USER_HZ)."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:640
msgid "**IFLA_BR_MCAST_MEMBERSHIP_INTVL**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:641
msgid ""
"The interval after which the bridge will leave a group, if no membership "
"reports for this group are received."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:644
msgid "The default value is (260 * USER_HZ)."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:646
msgid "**IFLA_BR_MCAST_QUERIER_INTVL**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:647
msgid ""
"The interval between queries sent by other routers. if no queries are seen "
"after this delay has passed, the bridge will start to send its own queries "
"(as if *IFLA_BR_MCAST_QUERIER_INTVL* was enabled)."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:651
msgid "The default value is (255 * USER_HZ)."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:653
msgid "**IFLA_BR_MCAST_QUERY_INTVL**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:654
msgid ""
"The Query Interval is the interval between General Queries sent by the "
"Querier."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:657
msgid ""
"The default value is (125 * USER_HZ). The minimum value is (1 * USER_HZ)."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:659
msgid "**IFLA_BR_MCAST_QUERY_RESPONSE_INTVL**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:660
msgid ""
"The Max Response Time used to calculate the Max Resp Code inserted into the "
"periodic General Queries."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:663
msgid "The default value is (10 * USER_HZ)."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:665
msgid "**IFLA_BR_MCAST_STARTUP_QUERY_INTVL**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:666
msgid "The interval between queries in the startup phase."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:668
msgid ""
"The default value is (125 * USER_HZ) / 4. The minimum value is (1 * USER_HZ)."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:670
msgid "**IFLA_BR_NF_CALL_IPTABLES**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:671
msgid ""
"Enable (*NF_CALL_IPTABLES* > 0) or disable (*NF_CALL_IPTABLES* == 0) "
"iptables hooks on the bridge."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:676
msgid "**IFLA_BR_NF_CALL_IP6TABLES**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:677
msgid ""
"Enable (*NF_CALL_IP6TABLES* > 0) or disable (*NF_CALL_IP6TABLES* == 0) "
"ip6tables hooks on the bridge."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:682
msgid "**IFLA_BR_NF_CALL_ARPTABLES**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:683
msgid ""
"Enable (*NF_CALL_ARPTABLES* > 0) or disable (*NF_CALL_ARPTABLES* == 0) "
"arptables hooks on the bridge."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:688
msgid "**IFLA_BR_VLAN_DEFAULT_PVID**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:689
msgid "VLAN ID applied to untagged and priority-tagged incoming packets."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:691
msgid ""
"The default value is 1. Setting to the special value 0 makes all ports of "
"this bridge not have a PVID by default, which means that they will not "
"accept VLAN-untagged traffic."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:695
msgid "**IFLA_BR_PAD**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:696
msgid "Bridge attribute padding type for netlink message."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:698
msgid "**IFLA_BR_VLAN_STATS_ENABLED**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:699
msgid ""
"Enable (*IFLA_BR_VLAN_STATS_ENABLED* == 1) or disable "
"(*IFLA_BR_VLAN_STATS_ENABLED* == 0) per-VLAN stats accounting."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:704
msgid "**IFLA_BR_MCAST_STATS_ENABLED**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:705
msgid ""
"Enable (*IFLA_BR_MCAST_STATS_ENABLED* > 0) or disable "
"(*IFLA_BR_MCAST_STATS_ENABLED* == 0) multicast (IGMP/MLD) stats accounting."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:711
msgid "**IFLA_BR_MCAST_IGMP_VERSION**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:712
msgid "Set the IGMP version."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:714
msgid "The valid values are 2 and 3. The default value is 2."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:716
msgid "**IFLA_BR_MCAST_MLD_VERSION**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:717
msgid "Set the MLD version."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:719
msgid "The valid values are 1 and 2. The default value is 1."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:721
msgid "**IFLA_BR_VLAN_STATS_PER_PORT**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:722
msgid ""
"Enable (*IFLA_BR_VLAN_STATS_PER_PORT* == 1) or disable "
"(*IFLA_BR_VLAN_STATS_PER_PORT* == 0) per-VLAN per-port stats accounting. Can "
"be changed only when there are no port VLANs configured."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:728
msgid "**IFLA_BR_MULTI_BOOLOPT**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:729
msgid ""
"The multi_boolopt is used to control new boolean options to avoid adding new "
"netlink attributes. You can look at ``enum br_boolopt_id`` for those options."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:733
msgid "**IFLA_BR_MCAST_QUERIER_STATE**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:734
msgid "Bridge mcast querier states, read only."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:736
msgid "**IFLA_BR_FDB_N_LEARNED**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:737
msgid ""
"The number of dynamically learned FDB entries for the current bridge, read "
"only."
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:740
msgid "**IFLA_BR_FDB_MAX_LEARNED**"
msgstr ""

#: ../../../networking/bridge:35: include/uapi/linux/if_link.h:741
msgid ""
"Set the number of max dynamically learned FDB entries for the current bridge."
msgstr ""

#: ../../../networking/bridge.rst:39
msgid "Bridge port netlink attributes"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:823
msgid "**IFLA_BRPORT_STATE**"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:824
msgid "The operation state of the port. Here are the valid values."
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:826
msgid ""
"0 - port is in STP *DISABLED* state. Make this port completely inactive for "
"STP. This is also called BPDU filter and could be used to disable STP on an "
"untrusted port, like a leaf virtual device. The traffic forwarding is also "
"stopped on this port."
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:830
msgid ""
"1 - port is in STP *LISTENING* state. Only valid if STP is enabled on the "
"bridge. In this state the port listens for STP BPDUs and drops all other "
"traffic frames."
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:833
msgid ""
"2 - port is in STP *LEARNING* state. Only valid if STP is enabled on the "
"bridge. In this state the port will accept traffic only for the purpose of "
"updating MAC address tables."
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:836
msgid "3 - port is in STP *FORWARDING* state. Port is fully active."
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:837
msgid ""
"4 - port is in STP *BLOCKING* state. Only valid if STP is enabled on the "
"bridge. This state is used during the STP election process. In this state, "
"port will only process STP BPDUs."
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:841
msgid "**IFLA_BRPORT_PRIORITY**"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:842
msgid "The STP port priority. The valid values are between 0 and 255."
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:844
msgid "**IFLA_BRPORT_COST**"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:845
msgid ""
"The STP path cost of the port. The valid values are between 1 and 65535."
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:847
msgid "**IFLA_BRPORT_MODE**"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:848
msgid "Set the bridge port mode. See *BRIDGE_MODE_HAIRPIN* for more details."
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:850
msgid "**IFLA_BRPORT_GUARD**"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:851
msgid ""
"Controls whether STP BPDUs will be processed by the bridge port. By default, "
"the flag is turned off to allow BPDU processing. Turning this flag on will "
"disable the bridge port if a STP BPDU packet is received."
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:855
msgid ""
"If the bridge has Spanning Tree enabled, hostile devices on the network may "
"send BPDU on a port and cause network failure. Setting *guard on* will "
"detect and stop this by disabling the port. The port will be restarted if "
"the link is brought down, or removed and reattached."
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:860
msgid "**IFLA_BRPORT_PROTECT**"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:861
msgid ""
"Controls whether a given port is allowed to become a root port or not. Only "
"used when STP is enabled on the bridge. By default the flag is off."
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:864
msgid ""
"This feature is also called root port guard. If BPDU is received from a leaf "
"(edge) port, it should not be elected as root port. This could be used if "
"using STP on a bridge and the downstream bridges are not fully trusted; this "
"prevents a hostile guest from rerouting traffic."
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:869
msgid "**IFLA_BRPORT_FAST_LEAVE**"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:870
msgid ""
"This flag allows the bridge to immediately stop multicast traffic forwarding "
"on a port that receives an IGMP Leave message. It is only used when IGMP "
"snooping is enabled on the bridge. By default the flag is off."
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:874
msgid "**IFLA_BRPORT_LEARNING**"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:875
msgid ""
"Controls whether a given port will learn *source* MAC addresses from "
"received traffic or not. Also controls whether dynamic FDB entries (which "
"can also be added by software) will be refreshed by incoming traffic. By "
"default this flag is on."
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:880
msgid "**IFLA_BRPORT_UNICAST_FLOOD**"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:881
msgid ""
"Controls whether unicast traffic for which there is no FDB entry will be "
"flooded towards this port. By default this flag is on."
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:884
msgid "**IFLA_BRPORT_PROXYARP**"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:885
msgid "Enable proxy ARP on this port."
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:887
msgid "**IFLA_BRPORT_LEARNING_SYNC**"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:888
msgid ""
"Controls whether a given port will sync MAC addresses learned on device port "
"to bridge FDB."
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:891
msgid "**IFLA_BRPORT_PROXYARP_WIFI**"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:892
msgid ""
"Enable proxy ARP on this port which meets extended requirements by IEEE "
"802.11 and Hotspot 2.0 specifications."
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:895
msgid "**IFLA_BRPORT_ROOT_ID**"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:897
msgid "**IFLA_BRPORT_BRIDGE_ID**"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:899
msgid "**IFLA_BRPORT_DESIGNATED_PORT**"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:901
msgid "**IFLA_BRPORT_DESIGNATED_COST**"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:903
msgid "**IFLA_BRPORT_ID**"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:905
msgid "**IFLA_BRPORT_NO**"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:907
msgid "**IFLA_BRPORT_TOPOLOGY_CHANGE_ACK**"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:909
msgid "**IFLA_BRPORT_CONFIG_PENDING**"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:911
msgid "**IFLA_BRPORT_MESSAGE_AGE_TIMER**"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:913
msgid "**IFLA_BRPORT_FORWARD_DELAY_TIMER**"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:915
msgid "**IFLA_BRPORT_HOLD_TIMER**"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:917
msgid "**IFLA_BRPORT_FLUSH**"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:918
msgid "Flush bridge ports' fdb dynamic entries."
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:920
msgid "**IFLA_BRPORT_MULTICAST_ROUTER**"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:921
msgid ""
"Configure the port's multicast router presence. A port with a multicast "
"router will receive all multicast traffic. The valid values are:"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:925
msgid "0 disable multicast routers on this port"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:926
msgid "1 let the system detect the presence of routers (default)"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:927
msgid "2 permanently enable multicast traffic forwarding on this port"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:928
msgid "3 enable multicast routers temporarily on this port, not depending"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:929
msgid "on incoming queries."
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:931
msgid "**IFLA_BRPORT_PAD**"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:933
msgid "**IFLA_BRPORT_MCAST_FLOOD**"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:934
msgid ""
"Controls whether a given port will flood multicast traffic for which there "
"is no MDB entry. By default this flag is on."
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:937
msgid "**IFLA_BRPORT_MCAST_TO_UCAST**"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:938
msgid ""
"Controls whether a given port will replicate packets using unicast instead "
"of multicast. By default this flag is off."
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:941
msgid ""
"This is done by copying the packet per host and changing the multicast "
"destination MAC to a unicast one accordingly."
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:944
msgid ""
"*mcast_to_unicast* works on top of the multicast snooping feature of the "
"bridge. Which means unicast copies are only delivered to hosts which are "
"interested in unicast and signaled this via IGMP/MLD reports previously."
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:948
msgid ""
"This feature is intended for interface types which have a more reliable and/"
"or efficient way to deliver unicast packets than broadcast ones (e.g. WiFi)."
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:952
msgid ""
"However, it should only be enabled on interfaces where no IGMPv2/MLDv1 "
"report suppression takes place. IGMP/MLD report suppression issue is usually "
"overcome by the network daemon (supplicant) enabling AP isolation and by "
"that separating all STAs."
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:957
msgid ""
"Delivery of STA-to-STA IP multicast is made possible again by enabling and "
"utilizing the bridge hairpin mode, which considers the incoming port as a "
"potential outgoing port, too (see *BRIDGE_MODE_HAIRPIN* option). Hairpin "
"mode is performed after multicast snooping, therefore leading to only "
"deliver reports to STAs running a multicast router."
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:963
msgid "**IFLA_BRPORT_VLAN_TUNNEL**"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:964
msgid ""
"Controls whether vlan to tunnel mapping is enabled on the port. By default "
"this flag is off."
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:967
msgid "**IFLA_BRPORT_BCAST_FLOOD**"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:968
msgid ""
"Controls flooding of broadcast traffic on the given port. By default this "
"flag is on."
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:971
msgid "**IFLA_BRPORT_GROUP_FWD_MASK**"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:972
msgid ""
"Set the group forward mask. This is a bitmask that is applied to decide "
"whether to forward incoming frames destined to link-local addresses. The "
"addresses of the form are 01:80:C2:00:00:0X (defaults to 0, which means the "
"bridge does not forward any link-local frames coming on this port)."
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:978
msgid "**IFLA_BRPORT_NEIGH_SUPPRESS**"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:979
msgid ""
"Controls whether neighbor discovery (arp and nd) proxy and suppression is "
"enabled on the port. By default this flag is off."
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:982
msgid "**IFLA_BRPORT_ISOLATED**"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:983
msgid ""
"Controls whether a given port will be isolated, which means it will be able "
"to communicate with non-isolated ports only. By default this flag is off."
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:987
msgid "**IFLA_BRPORT_BACKUP_PORT**"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:988
msgid ""
"Set a backup port. If the port loses carrier all traffic will be redirected "
"to the configured backup port. Set the value to 0 to disable it."
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:992
msgid "**IFLA_BRPORT_MRP_RING_OPEN**"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:994
msgid "**IFLA_BRPORT_MRP_IN_OPEN**"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:996
msgid "**IFLA_BRPORT_MCAST_EHT_HOSTS_LIMIT**"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:997
msgid ""
"The number of per-port EHT hosts limit. The default value is 512. Setting to "
"0 is not allowed."
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:1000
msgid "**IFLA_BRPORT_MCAST_EHT_HOSTS_CNT**"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:1001
msgid "The current number of tracked hosts, read only."
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:1003
msgid "**IFLA_BRPORT_LOCKED**"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:1004
msgid ""
"Controls whether a port will be locked, meaning that hosts behind the port "
"will not be able to communicate through the port unless an FDB entry with "
"the unit's MAC address is in the FDB. The common use case is that hosts are "
"allowed access through authentication with the IEEE 802.1X protocol or based "
"on whitelists. By default this flag is off."
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:1010
msgid ""
"Please note that secure 802.1X deployments should always use the "
"*BR_BOOLOPT_NO_LL_LEARN* flag, to not permit the bridge to populate its FDB "
"based on link-local (EAPOL) traffic received on the port."
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:1014
msgid "**IFLA_BRPORT_MAB**"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:1015
msgid ""
"Controls whether a port will use MAC Authentication Bypass (MAB), a "
"technique through which select MAC addresses may be allowed on a locked "
"port, without using 802.1X authentication. Packets with an unknown source "
"MAC address generates a \"locked\" FDB entry on the incoming bridge port. "
"The common use case is for user space to react to these bridge FDB "
"notifications and optionally replace the locked FDB entry with a normal one, "
"allowing traffic to pass for whitelisted MAC addresses."
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:1023
msgid ""
"Setting this flag also requires *IFLA_BRPORT_LOCKED* and "
"*IFLA_BRPORT_LEARNING*. *IFLA_BRPORT_LOCKED* ensures that unauthorized data "
"packets are dropped, and *IFLA_BRPORT_LEARNING* allows the dynamic FDB "
"entries installed by user space (as replacements for the locked FDB entries) "
"to be refreshed and/or aged out."
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:1029
msgid "**IFLA_BRPORT_MCAST_N_GROUPS**"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:1031
msgid "**IFLA_BRPORT_MCAST_MAX_GROUPS**"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:1032
msgid ""
"Sets the maximum number of MDB entries that can be registered for a given "
"port. Attempts to register more MDB entries at the port than this limit "
"allows will be rejected, whether they are done through netlink (e.g. the "
"bridge tool), or IGMP or MLD membership reports. Setting a limit of 0 "
"disables the limit. The default value is 0."
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:1038
msgid "**IFLA_BRPORT_NEIGH_VLAN_SUPPRESS**"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:1039
msgid ""
"Controls whether neighbor discovery (arp and nd) proxy and suppression is "
"enabled for a given port. By default this flag is off."
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:1042
msgid ""
"Note that this option only takes effect when *IFLA_BRPORT_NEIGH_SUPPRESS* is "
"enabled for a given port."
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:1045
msgid "**IFLA_BRPORT_BACKUP_NHID**"
msgstr ""

#: ../../../networking/bridge:41: include/uapi/linux/if_link.h:1046
msgid ""
"The FDB nexthop object ID to attach to packets being redirected to a backup "
"port that has VLAN tunnel mapping enabled (via the *IFLA_BRPORT_VLAN_TUNNEL* "
"option). Setting a value of 0 (default) has the effect of not attaching any "
"ID."
msgstr ""

#: ../../../networking/bridge.rst:45
msgid "Bridge sysfs"
msgstr ""

#: ../../../networking/bridge.rst:47
msgid ""
"The sysfs interface is deprecated and should not be extended if new options "
"are added."
msgstr ""

#: ../../../networking/bridge.rst:51
msgid "STP"
msgstr ""

#: ../../../networking/bridge.rst:53
msgid ""
"The STP (Spanning Tree Protocol) implementation in the Linux bridge driver "
"is a critical feature that helps prevent loops and broadcast storms in "
"Ethernet networks by identifying and disabling redundant links. In a Linux "
"bridge context, STP is crucial for network stability and availability."
msgstr ""

#: ../../../networking/bridge.rst:58
msgid ""
"STP is a Layer 2 protocol that operates at the Data Link Layer of the OSI "
"model. It was originally developed as IEEE 802.1D and has since evolved into "
"multiple versions, including Rapid Spanning Tree Protocol (RSTP) and "
"`Multiple Spanning Tree Protocol (MSTP) <https://lore.kernel.org/"
"netdev/20220316150857.2442916-1-tobias@waldekranz.com/>`_."
msgstr ""

#: ../../../networking/bridge.rst:64
msgid ""
"The 802.1D-2004 removed the original Spanning Tree Protocol, instead "
"incorporating the Rapid Spanning Tree Protocol (RSTP). By 2014, all the "
"functionality defined by IEEE 802.1D has been incorporated into either IEEE "
"802.1Q (Bridges and Bridged Networks) or IEEE 802.1AC (MAC Service "
"Definition). 802.1D has been officially withdrawn in 2022."
msgstr ""

#: ../../../networking/bridge.rst:71
msgid "Bridge Ports and STP States"
msgstr ""

#: ../../../networking/bridge.rst:73
msgid ""
"In the context of STP, bridge ports can be in one of the following states:"
msgstr ""

#: ../../../networking/bridge.rst:74
msgid ""
"Blocking: The port is disabled for data traffic and only listens for BPDUs "
"(Bridge Protocol Data Units) from other devices to determine the network "
"topology."
msgstr ""

#: ../../../networking/bridge.rst:77
msgid ""
"Listening: The port begins to participate in the STP process and listens for "
"BPDUs."
msgstr ""

#: ../../../networking/bridge.rst:79
msgid ""
"Learning: The port continues to listen for BPDUs and begins to learn MAC "
"addresses from incoming frames but does not forward data frames."
msgstr ""

#: ../../../networking/bridge.rst:81
msgid ""
"Forwarding: The port is fully operational and forwards both BPDUs and data "
"frames."
msgstr ""

#: ../../../networking/bridge.rst:83
msgid ""
"Disabled: The port is administratively disabled and does not participate in "
"the STP process. The data frames forwarding are also disabled."
msgstr ""

#: ../../../networking/bridge.rst:87
msgid "Root Bridge and Convergence"
msgstr ""

#: ../../../networking/bridge.rst:89
msgid ""
"In the context of networking and Ethernet bridging in Linux, the root bridge "
"is a designated switch in a bridged network that serves as a reference point "
"for the spanning tree algorithm to create a loop-free topology."
msgstr ""

#: ../../../networking/bridge.rst:93
msgid "Here's how the STP works and root bridge is chosen:"
msgstr ""

#: ../../../networking/bridge.rst:94
msgid ""
"Bridge Priority: Each bridge running a spanning tree protocol, has a "
"configurable Bridge Priority value. The lower the value, the higher the "
"priority. By default, the Bridge Priority is set to a standard value (e.g., "
"32768)."
msgstr ""

#: ../../../networking/bridge.rst:98
msgid ""
"Bridge ID: The Bridge ID is composed of two components: Bridge Priority and "
"the MAC address of the bridge. It uniquely identifies each bridge in the "
"network. The Bridge ID is used to compare the priorities of different "
"bridges."
msgstr ""

#: ../../../networking/bridge.rst:102
msgid ""
"Bridge Election: When the network starts, all bridges initially assume that "
"they are the root bridge. They start advertising Bridge Protocol Data Units "
"(BPDU) to their neighbors, containing their Bridge ID and other information."
msgstr ""

#: ../../../networking/bridge.rst:106
msgid ""
"BPDU Comparison: Bridges exchange BPDUs to determine the root bridge. Each "
"bridge examines the received BPDUs, including the Bridge Priority and Bridge "
"ID, to determine if it should adjust its own priorities. The bridge with the "
"lowest Bridge ID will become the root bridge."
msgstr ""

#: ../../../networking/bridge.rst:110
msgid ""
"Root Bridge Announcement: Once the root bridge is determined, it sends BPDUs "
"with information about the root bridge to all other bridges in the network. "
"This information is used by other bridges to calculate the shortest path to "
"the root bridge and, in doing so, create a loop-free topology."
msgstr ""

#: ../../../networking/bridge.rst:115
msgid ""
"Forwarding Ports: After the root bridge is selected and the spanning tree "
"topology is established, each bridge determines which of its ports should be "
"in the forwarding state (used for data traffic) and which should be in the "
"blocking state (used to prevent loops). The root bridge's ports are all in "
"the forwarding state. while other bridges have some ports in the blocking "
"state to avoid loops."
msgstr ""

#: ../../../networking/bridge.rst:121
msgid ""
"Root Ports: After the root bridge is selected and the spanning tree topology "
"is established, each non-root bridge processes incoming BPDUs and determines "
"which of its ports provides the shortest path to the root bridge based on "
"the information in the received BPDUs. This port is designated as the root "
"port. And it is in the Forwarding state, allowing it to actively forward "
"network traffic."
msgstr ""

#: ../../../networking/bridge.rst:127
msgid ""
"Designated ports: A designated port is the port through which the non-root "
"bridge will forward traffic towards the designated segment. Designated ports "
"are placed in the Forwarding state. All other ports on the non-root bridge "
"that are not designated for specific segments are placed in the Blocking "
"state to prevent network loops."
msgstr ""

#: ../../../networking/bridge.rst:133
msgid ""
"STP ensures network convergence by calculating the shortest path and "
"disabling redundant links. When network topology changes occur (e.g., a link "
"failure), STP recalculates the network topology to restore connectivity "
"while avoiding loops."
msgstr ""

#: ../../../networking/bridge.rst:137
msgid ""
"Proper configuration of STP parameters, such as the bridge priority, can "
"influence network performance, path selection and which bridge becomes the "
"Root Bridge."
msgstr ""

#: ../../../networking/bridge.rst:142
msgid "User space STP helper"
msgstr ""

#: ../../../networking/bridge.rst:144
msgid ""
"The user space STP helper *bridge-stp* is a program to control whether to "
"use user mode spanning tree. The ``/sbin/bridge-stp <bridge> <start|stop>`` "
"is called by the kernel when STP is enabled/disabled on a bridge (via "
"``brctl stp <bridge> <on|off>`` or ``ip link set <bridge> type bridge "
"stp_state <0|1>``).  The kernel enables user_stp mode if that command "
"returns 0, or enables kernel_stp mode if that command returns any other "
"value."
msgstr ""

#: ../../../networking/bridge.rst:152
msgid "VLAN"
msgstr ""

#: ../../../networking/bridge.rst:154
msgid ""
"A LAN (Local Area Network) is a network that covers a small geographic area, "
"typically within a single building or a campus. LANs are used to connect "
"computers, servers, printers, and other networked devices within a localized "
"area. LANs can be wired (using Ethernet cables) or wireless (using Wi-Fi)."
msgstr ""

#: ../../../networking/bridge.rst:159
msgid ""
"A VLAN (Virtual Local Area Network) is a logical segmentation of a physical "
"network into multiple isolated broadcast domains. VLANs are used to divide a "
"single physical LAN into multiple virtual LANs, allowing different groups of "
"devices to communicate as if they were on separate physical networks."
msgstr ""

#: ../../../networking/bridge.rst:164
msgid ""
"Typically there are two VLAN implementations, IEEE 802.1Q and IEEE 802.1ad "
"(also known as QinQ). IEEE 802.1Q is a standard for VLAN tagging in Ethernet "
"networks. It allows network administrators to create logical VLANs on a "
"physical network and tag Ethernet frames with VLAN information, which is "
"called *VLAN-tagged frames*. IEEE 802.1ad, commonly known as QinQ or Double "
"VLAN, is an extension of the IEEE 802.1Q standard. QinQ allows for the "
"stacking of multiple VLAN tags within a single Ethernet frame. The Linux "
"bridge supports both the IEEE 802.1Q and `802.1AD <https://lore.kernel.org/"
"netdev/1402401565-15423-1-git-send-email-makita.toshiaki@lab.ntt.co.jp/>`_ "
"protocol for VLAN tagging."
msgstr ""

#: ../../../networking/bridge.rst:175
msgid ""
"`VLAN filtering <https://lore.kernel.org/netdev/1360792820-14116-1-git-send-"
"email-vyasevic@redhat.com/>`_ on a bridge is disabled by default. After "
"enabling VLAN filtering on a bridge, it will start forwarding frames to "
"appropriate destinations based on their destination MAC address and VLAN tag "
"(both must match)."
msgstr ""

#: ../../../networking/bridge.rst:181
msgid "Multicast"
msgstr ""

#: ../../../networking/bridge.rst:183
msgid ""
"The Linux bridge driver has multicast support allowing it to process "
"Internet Group Management Protocol (IGMP) or Multicast Listener Discovery "
"(MLD) messages, and to efficiently forward multicast data packets. The "
"bridge driver supports IGMPv2/IGMPv3 and MLDv1/MLDv2."
msgstr ""

#: ../../../networking/bridge.rst:189
msgid "Multicast snooping"
msgstr ""

#: ../../../networking/bridge.rst:191
msgid ""
"Multicast snooping is a networking technology that allows network switches "
"to intelligently manage multicast traffic within a local area network (LAN)."
msgstr ""

#: ../../../networking/bridge.rst:194
msgid ""
"The switch maintains a multicast group table, which records the association "
"between multicast group addresses and the ports where hosts have joined "
"these groups. The group table is dynamically updated based on the IGMP/MLD "
"messages received. With the multicast group information gathered through "
"snooping, the switch optimizes the forwarding of multicast traffic. Instead "
"of blindly broadcasting the multicast traffic to all ports, it sends the "
"multicast traffic based on the destination MAC address only to ports which "
"have subscribed the respective destination multicast group."
msgstr ""

#: ../../../networking/bridge.rst:203
msgid ""
"When created, the Linux bridge devices have multicast snooping enabled by "
"default. It maintains a Multicast forwarding database (MDB) which keeps "
"track of port and group relationships."
msgstr ""

#: ../../../networking/bridge.rst:208
msgid "IGMPv3/MLDv2 EHT support"
msgstr ""

#: ../../../networking/bridge.rst:210
msgid ""
"The Linux bridge supports IGMPv3/MLDv2 EHT (Explicit Host Tracking), which "
"was added by `474ddb37fa3a (\"net: bridge: multicast: add EHT allow/block "
"handling\") <https://lore.kernel.org/netdev/20210120145203.1109140-1-"
"razor@blackwall.org/>`_"
msgstr ""

#: ../../../networking/bridge.rst:214
msgid ""
"The explicit host tracking enables the device to keep track of each "
"individual host that is joined to a particular group or channel. The main "
"benefit of the explicit host tracking in IGMP is to allow minimal leave "
"latencies when a host leaves a multicast group or channel."
msgstr ""

#: ../../../networking/bridge.rst:219
msgid ""
"The length of time between a host wanting to leave and a device stopping "
"traffic forwarding is called the IGMP leave latency. A device configured "
"with IGMPv3 or MLDv2 and explicit tracking can immediately stop forwarding "
"traffic if the last host to request to receive traffic from the device "
"indicates that it no longer wants to receive traffic. The leave latency is "
"thus bound only by the packet transmission latencies in the multiaccess "
"network and the processing time in the device."
msgstr ""

#: ../../../networking/bridge.rst:228
msgid "Other multicast features"
msgstr ""

#: ../../../networking/bridge.rst:230
msgid ""
"The Linux bridge also supports `per-VLAN multicast snooping <https://lore."
"kernel.org/netdev/20210719170637.435541-1-razor@blackwall.org/>`_, which is "
"disabled by default but can be enabled. And `Multicast Router Discovery "
"<https://lore.kernel.org/netdev/20190121062628.2710-1-linus.luessing@c0d3."
"blue/>`_, which help identify the location of multicast routers."
msgstr ""

#: ../../../networking/bridge.rst:237
msgid "Switchdev"
msgstr ""

#: ../../../networking/bridge.rst:239
msgid ""
"Linux Bridge Switchdev is a feature in the Linux kernel that extends the "
"capabilities of the traditional Linux bridge to work more efficiently with "
"hardware switches that support switchdev. With Linux Bridge Switchdev, "
"certain networking functions like forwarding, filtering, and learning of "
"Ethernet frames can be offloaded to a hardware switch. This offloading "
"reduces the burden on the Linux kernel and CPU, leading to improved network "
"performance and lower latency."
msgstr ""

#: ../../../networking/bridge.rst:247
msgid ""
"To use Linux Bridge Switchdev, you need hardware switches that support the "
"switchdev interface. This means that the switch hardware needs to have the "
"necessary drivers and functionality to work in conjunction with the Linux "
"kernel."
msgstr ""

#: ../../../networking/bridge.rst:252
msgid "Please see the :ref:`switchdev` document for more details."
msgstr ""

#: ../../../networking/bridge.rst:255
msgid "Netfilter"
msgstr ""

#: ../../../networking/bridge.rst:257
msgid ""
"The bridge netfilter module is a legacy feature that allows to filter "
"bridged packets with iptables and ip6tables. Its use is discouraged. Users "
"should consider using nftables for packet filtering."
msgstr ""

#: ../../../networking/bridge.rst:261
msgid ""
"The older ebtables tool is more feature-limited compared to nftables, but "
"just like nftables it doesn't need this module either to function."
msgstr ""

#: ../../../networking/bridge.rst:264
msgid ""
"The br_netfilter module intercepts packets entering the bridge, performs "
"minimal sanity tests on ipv4 and ipv6 packets and then pretends that these "
"packets are being routed, not bridged. br_netfilter then calls the ip and "
"ipv6 netfilter hooks from the bridge layer, i.e. ip(6)tables rulesets will "
"also see these packets."
msgstr ""

#: ../../../networking/bridge.rst:270
msgid ""
"br_netfilter is also the reason for the iptables *physdev* match: This match "
"is the only way to reliably tell routed and bridged packets apart in an "
"iptables ruleset."
msgstr ""

#: ../../../networking/bridge.rst:274
msgid ""
"Note that ebtables and nftables will work fine without the br_netfilter "
"module. iptables/ip6tables/arptables do not work for bridged traffic because "
"they plug in the routing stack. nftables rules in ip/ip6/inet/arp families "
"won't see traffic that is forwarded by a bridge either, but that's very much "
"how it should be."
msgstr ""

#: ../../../networking/bridge.rst:280
msgid ""
"Historically the feature set of ebtables was very limited (it still is), "
"this module was added to pretend packets are routed and invoke the ipv4/ipv6 "
"netfilter hooks from the bridge so users had access to the more feature-rich "
"iptables matching capabilities (including conntrack). nftables doesn't have "
"this limitation, pretty much all features work regardless of the protocol "
"family."
msgstr ""

#: ../../../networking/bridge.rst:286
msgid ""
"So, br_netfilter is only needed if users, for some reason, need to use "
"ip(6)tables to filter packets forwarded by the bridge, or NAT bridged "
"traffic. For pure link layer filtering, this module isn't needed."
msgstr ""

#: ../../../networking/bridge.rst:291
msgid "Other Features"
msgstr ""

#: ../../../networking/bridge.rst:293
msgid ""
"The Linux bridge also supports `IEEE 802.11 Proxy ARP <https://git.kernel."
"org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?"
"id=958501163ddd6ea22a98f94fa0e7ce6d4734e5c4>`_, `Media Redundancy Protocol "
"(MRP) <https://lore.kernel.org/netdev/20200426132208.3232-1-horatiu."
"vultur@microchip.com/>`_, `Media Redundancy Protocol (MRP) LC mode <https://"
"lore.kernel.org/r/20201124082525.273820-1-horatiu.vultur@microchip.com>`_, "
"`IEEE 802.1X port authentication <https://lore.kernel.org/"
"netdev/20220218155148.2329797-1-schultz.hans+netdev@gmail.com/>`_, and `MAC "
"Authentication Bypass (MAB) <https://lore.kernel.org/"
"netdev/20221101193922.2125323-2-idosch@nvidia.com/>`_."
msgstr ""

#: ../../../networking/bridge.rst:305
msgid "FAQ"
msgstr ""

#: ../../../networking/bridge.rst:308
msgid "What does a bridge do?"
msgstr ""

#: ../../../networking/bridge.rst:310
msgid ""
"A bridge transparently forwards traffic between multiple network interfaces. "
"In plain English this means that a bridge connects two or more physical "
"Ethernet networks, to form one larger (logical) Ethernet network."
msgstr ""

#: ../../../networking/bridge.rst:315
msgid "Is it L3 protocol independent?"
msgstr ""

#: ../../../networking/bridge.rst:317
msgid ""
"Yes. The bridge sees all frames, but it *uses* only L2 headers/information. "
"As such, the bridging functionality is protocol independent, and there "
"should be no trouble forwarding IPX, NetBEUI, IP, IPv6, etc."
msgstr ""

#: ../../../networking/bridge.rst:322
msgid "Contact Info"
msgstr ""

#: ../../../networking/bridge.rst:324
msgid ""
"The code is currently maintained by Roopa Prabhu <roopa@nvidia.com> and "
"Nikolay Aleksandrov <razor@blackwall.org>. Bridge bugs and enhancements are "
"discussed on the linux-netdev mailing list netdev@vger.kernel.org and "
"bridge@lists.linux.dev."
msgstr ""

#: ../../../networking/bridge.rst:329
msgid ""
"The list is open to anyone interested: http://vger.kernel.org/vger-lists."
"html#netdev"
msgstr ""

#: ../../../networking/bridge.rst:332
msgid "External Links"
msgstr ""

#: ../../../networking/bridge.rst:334
msgid ""
"The old Documentation for Linux bridging is on: https://wiki.linuxfoundation."
"org/networking/bridge"
msgstr ""
