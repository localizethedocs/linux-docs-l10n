# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../networking/ipsec.rst:5
msgid "IPsec"
msgstr ""

#: ../../../networking/ipsec.rst:8
msgid ""
"Here documents known IPsec corner cases which need to be keep in mind when "
"deploy various IPsec configuration in real world production environment."
msgstr ""

#: ../../../networking/ipsec.rst:11
msgid "IPcomp:"
msgstr ""

#: ../../../networking/ipsec.rst:12
msgid ""
"Small IP packet won't get compressed at sender, and failed on policy check "
"on receiver."
msgstr ""

#: ../../../networking/ipsec.rst:15
msgid "Quote from RFC3173::"
msgstr ""

#: ../../../networking/ipsec.rst:35
msgid ""
"Current IPComp implementation is indeed by the book, while as in practice "
"when sending non-compressed packet to the peer (whether or not packet len is "
"smaller than the threshold or the compressed len is larger than original "
"packet len), the packet is dropped when checking the policy as this packet "
"matches the selector but not coming from any XFRM layer, i.e., with no "
"security path. Such naked packet will not eventually make it to upper layer. "
"The result is much more wired to the user when ping peer with different "
"payload length."
msgstr ""

#: ../../../networking/ipsec.rst:44
msgid ""
"One workaround is try to set \"level use\" for each policy if user observed "
"above scenario. The consequence of doing so is small packet(uncompressed) "
"will skip policy checking on receiver side."
msgstr ""
