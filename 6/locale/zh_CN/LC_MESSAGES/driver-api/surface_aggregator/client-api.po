# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../driver-api/surface_aggregator/client-api.rst:5
msgid "Client Driver API Documentation"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api.rst:9
msgid "Contents"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api.rst:12
msgid "Serial Hub Communication"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:25
msgid "Frame types for SSH frames."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:29
#: include/linux/surface_aggregator/serial_hub.h:80
#: include/linux/surface_aggregator/serial_hub.h:286
#: include/linux/surface_aggregator/serial_hub.h:358
#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:29
#: include/linux/surface_aggregator/controller.h:55
#: include/linux/surface_aggregator/controller.h:752
#: include/linux/surface_aggregator/controller.h:871
#: include/linux/surface_aggregator/controller.h:928
#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:31
#: include/linux/surface_aggregator/device.h:41
msgid "**Constants**"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:31
msgid "``SSH_FRAME_TYPE_DATA_SEQ``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:32
msgid ""
"Indicates a data frame, followed by a payload with the length specified in "
"the ``struct ssh_frame.len`` field. This frame is sequenced, meaning that an "
"ACK is required."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:36
msgid "``SSH_FRAME_TYPE_DATA_NSQ``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:37
msgid ""
"Same as ``SSH_FRAME_TYPE_DATA_SEQ``, but unsequenced, meaning that the "
"message does not have to be ACKed."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:40
msgid "``SSH_FRAME_TYPE_ACK``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:41
msgid "Indicates an ACK message."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:43
msgid "``SSH_FRAME_TYPE_NAK``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:44
msgid ""
"Indicates an error response for previously sent frame. In general, this "
"means that the frame and/or payload is malformed, e.g. a CRC is wrong. For "
"command-type payloads, this can also mean that the command is invalid."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:53
msgid "SSH communication frame."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:57
#: include/linux/surface_aggregator/serial_hub.h:89
#: include/linux/surface_aggregator/serial_hub.h:272
#: include/linux/surface_aggregator/serial_hub.h:456
#: include/linux/surface_aggregator/serial_hub.h:473
#: include/linux/surface_aggregator/serial_hub.h:577
#: include/linux/surface_aggregator/serial_hub.h:608
#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:37
#: include/linux/surface_aggregator/controller.h:74
#: include/linux/surface_aggregator/controller.h:98
#: include/linux/surface_aggregator/controller.h:132
#: include/linux/surface_aggregator/controller.h:294
#: include/linux/surface_aggregator/controller.h:316
#: include/linux/surface_aggregator/controller.h:783
#: include/linux/surface_aggregator/controller.h:838
#: include/linux/surface_aggregator/controller.h:857
#: include/linux/surface_aggregator/controller.h:942
#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:49
#: include/linux/surface_aggregator/device.h:167
#: include/linux/surface_aggregator/device.h:183
msgid "**Definition**::"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:65
#: include/linux/surface_aggregator/serial_hub.h:101
#: include/linux/surface_aggregator/serial_hub.h:279
#: include/linux/surface_aggregator/serial_hub.h:463
#: include/linux/surface_aggregator/serial_hub.h:490
#: include/linux/surface_aggregator/serial_hub.h:584
#: include/linux/surface_aggregator/serial_hub.h:618
#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:48
#: include/linux/surface_aggregator/controller.h:86
#: include/linux/surface_aggregator/controller.h:106
#: include/linux/surface_aggregator/controller.h:141
#: include/linux/surface_aggregator/controller.h:304
#: include/linux/surface_aggregator/controller.h:324
#: include/linux/surface_aggregator/controller.h:791
#: include/linux/surface_aggregator/controller.h:847
#: include/linux/surface_aggregator/controller.h:864
#: include/linux/surface_aggregator/controller.h:955
#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:59
#: include/linux/surface_aggregator/device.h:176
#: include/linux/surface_aggregator/device.h:192
msgid "**Members**"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:54
#: include/linux/surface_aggregator/serial_hub.h:86
msgid "``type``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:55
msgid ""
"The type of the frame. See :c:type:`enum ssh_frame_type <ssh_frame_type>`."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:55
#: include/linux/surface_aggregator/serial_hub.h:270
msgid "``len``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:56
msgid ""
"The length of the frame payload directly following the CRC for this frame. "
"Does not include the final CRC for that payload."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:57
msgid "``seq``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:58
msgid "The sequence number for this message/exchange."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:76
msgid "Type indicator for the SSH payload."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:82
msgid "``SSH_PLD_TYPE_CMD``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:83
msgid "The payload is a command structure with optional command payload."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:85
msgid "Payload of a command-type frame."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:87
msgid ""
"The type of the payload. See :c:type:`enum ssh_payload_type "
"<ssh_payload_type>`. Should be SSH_PLD_TYPE_CMD for this struct."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:88
#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:903
msgid "``tc``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:89
msgid "Command target category."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:89
#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:900
#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:81
#: include/linux/surface_aggregator/device.h:111
#: include/linux/surface_aggregator/device.h:134
msgid "``tid``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:90
msgid "Target ID. Indicates the target of the message."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:90
msgid "``sid``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:91
msgid "Source ID. Indicates the source of the message."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:91
#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:82
#: include/linux/surface_aggregator/device.h:112
#: include/linux/surface_aggregator/device.h:135
msgid "``iid``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:92
msgid "Instance ID."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:92
msgid "``rqid``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:93
msgid ""
"Request ID. Used to match requests with responses and differentiate between "
"responses and events."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:94
msgid "``cid``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:95
msgid "Command ID."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:136
msgid "``SSH_MESSAGE_LENGTH (payload_size)``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:134
msgid "Compute length of SSH message."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:138
#: include/linux/surface_aggregator/serial_hub.h:146
#: include/linux/surface_aggregator/serial_hub.h:156
#: include/linux/surface_aggregator/serial_hub.h:168
#: include/linux/surface_aggregator/serial_hub.h:186
#: include/linux/surface_aggregator/serial_hub.h:214
#: include/linux/surface_aggregator/serial_hub.h:227
#: include/linux/surface_aggregator/serial_hub.h:236
#: include/linux/surface_aggregator/serial_hub.h:245
#: include/linux/surface_aggregator/serial_hub.h:254
#: include/linux/surface_aggregator/serial_hub.h:263
#: include/linux/surface_aggregator/serial_hub.h:378
#: include/linux/surface_aggregator/serial_hub.h:396
#: include/linux/surface_aggregator/serial_hub.h:408
#: include/linux/surface_aggregator/serial_hub.h:519
#: include/linux/surface_aggregator/serial_hub.h:632
#: include/linux/surface_aggregator/serial_hub.h:647
#: include/linux/surface_aggregator/serial_hub.h:663
#: include/linux/surface_aggregator/serial_hub.h:681
#: ../../../driver-api/surface_aggregator/client-api:16:
#: drivers/platform/surface/aggregator/ssh_packet_layer.c:525
#: drivers/platform/surface/aggregator/ssh_packet_layer.c:542
#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:159
#: include/linux/surface_aggregator/controller.h:174
#: include/linux/surface_aggregator/controller.h:192
#: include/linux/surface_aggregator/controller.h:224
#: include/linux/surface_aggregator/controller.h:251
#: include/linux/surface_aggregator/controller.h:276
#: include/linux/surface_aggregator/controller.h:339
#: include/linux/surface_aggregator/controller.h:377
#: include/linux/surface_aggregator/controller.h:418
#: include/linux/surface_aggregator/controller.h:477
#: include/linux/surface_aggregator/controller.h:538
#: include/linux/surface_aggregator/controller.h:578
#: include/linux/surface_aggregator/controller.h:621
#: include/linux/surface_aggregator/controller.h:682
#: include/linux/surface_aggregator/controller.h:804
#: include/linux/surface_aggregator/controller.h:822
#: include/linux/surface_aggregator/controller.h:901
#: include/linux/surface_aggregator/controller.h:971
#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:873
#: drivers/platform/surface/aggregator/controller.c:903
#: drivers/platform/surface/aggregator/controller.c:917
#: drivers/platform/surface/aggregator/controller.c:928
#: drivers/platform/surface/aggregator/controller.c:951
#: drivers/platform/surface/aggregator/controller.c:1492
#: drivers/platform/surface/aggregator/controller.c:1584
#: drivers/platform/surface/aggregator/controller.c:1621
#: drivers/platform/surface/aggregator/controller.c:1642
#: drivers/platform/surface/aggregator/controller.c:1671
#: drivers/platform/surface/aggregator/controller.c:1720
#: drivers/platform/surface/aggregator/controller.c:1771
#: drivers/platform/surface/aggregator/controller.c:2310
#: drivers/platform/surface/aggregator/controller.c:2381
#: drivers/platform/surface/aggregator/controller.c:2451
#: drivers/platform/surface/aggregator/controller.c:2504
#: ../../../driver-api/surface_aggregator/client-api:28:
#: drivers/platform/surface/aggregator/core.c:51
#: drivers/platform/surface/aggregator/core.c:116
#: drivers/platform/surface/aggregator/core.c:176
#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:80
#: include/linux/surface_aggregator/device.h:111
#: include/linux/surface_aggregator/device.h:134
#: include/linux/surface_aggregator/device.h:203
#: include/linux/surface_aggregator/device.h:225
#: include/linux/surface_aggregator/device.h:238
#: include/linux/surface_aggregator/device.h:265
#: include/linux/surface_aggregator/device.h:279
#: include/linux/surface_aggregator/device.h:294
#: include/linux/surface_aggregator/device.h:311
#: include/linux/surface_aggregator/device.h:327
#: include/linux/surface_aggregator/device.h:339
#: include/linux/surface_aggregator/device.h:352
#: include/linux/surface_aggregator/device.h:359
#: include/linux/surface_aggregator/device.h:393
#: include/linux/surface_aggregator/device.h:413
#: include/linux/surface_aggregator/device.h:435
#: include/linux/surface_aggregator/device.h:467
#: include/linux/surface_aggregator/device.h:501
#: include/linux/surface_aggregator/device.h:535
#: include/linux/surface_aggregator/device.h:574
#: include/linux/surface_aggregator/device.h:612
#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:73
#: drivers/platform/surface/aggregator/bus.c:110
#: drivers/platform/surface/aggregator/bus.c:170
#: drivers/platform/surface/aggregator/bus.c:233
#: drivers/platform/surface/aggregator/bus.c:254
#: drivers/platform/surface/aggregator/bus.c:285
#: drivers/platform/surface/aggregator/bus.c:347
#: drivers/platform/surface/aggregator/bus.c:368
#: drivers/platform/surface/aggregator/bus.c:459
#: drivers/platform/surface/aggregator/bus.c:519
msgid "**Parameters**"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:140
#: include/linux/surface_aggregator/serial_hub.h:148
msgid "``payload_size``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:135
msgid "Length of the payload inside the SSH frame."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:137
#: include/linux/surface_aggregator/serial_hub.h:145
#: include/linux/surface_aggregator/serial_hub.h:156
#: include/linux/surface_aggregator/serial_hub.h:168
#: include/linux/surface_aggregator/serial_hub.h:186
#: include/linux/surface_aggregator/serial_hub.h:213
#: include/linux/surface_aggregator/serial_hub.h:384
#: include/linux/surface_aggregator/serial_hub.h:395
#: include/linux/surface_aggregator/serial_hub.h:407
#: include/linux/surface_aggregator/serial_hub.h:634
#: include/linux/surface_aggregator/serial_hub.h:650
#: ../../../driver-api/surface_aggregator/client-api:16:
#: drivers/platform/surface/aggregator/ssh_packet_layer.c:526
#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:200
#: include/linux/surface_aggregator/controller.h:235
#: include/linux/surface_aggregator/controller.h:256
#: include/linux/surface_aggregator/controller.h:283
#: include/linux/surface_aggregator/controller.h:805
#: include/linux/surface_aggregator/controller.h:822
#: include/linux/surface_aggregator/controller.h:903
#: include/linux/surface_aggregator/controller.h:974
#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:873
#: drivers/platform/surface/aggregator/controller.c:902
#: drivers/platform/surface/aggregator/controller.c:1501
#: drivers/platform/surface/aggregator/controller.c:1595
#: drivers/platform/surface/aggregator/controller.c:1646
#: drivers/platform/surface/aggregator/controller.c:1725
#: drivers/platform/surface/aggregator/controller.c:1784
#: drivers/platform/surface/aggregator/controller.c:2319
#: drivers/platform/surface/aggregator/controller.c:2389
#: drivers/platform/surface/aggregator/controller.c:2461
#: drivers/platform/surface/aggregator/controller.c:2514
#: ../../../driver-api/surface_aggregator/client-api:28:
#: drivers/platform/surface/aggregator/core.c:125
#: drivers/platform/surface/aggregator/core.c:201
#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:202
#: include/linux/surface_aggregator/device.h:227
#: include/linux/surface_aggregator/device.h:241
#: include/linux/surface_aggregator/device.h:281
#: include/linux/surface_aggregator/device.h:298
#: include/linux/surface_aggregator/device.h:326
#: include/linux/surface_aggregator/device.h:400
#: include/linux/surface_aggregator/device.h:419
#: include/linux/surface_aggregator/device.h:584
#: include/linux/surface_aggregator/device.h:619
#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:77
#: drivers/platform/surface/aggregator/bus.c:127
#: drivers/platform/surface/aggregator/bus.c:261
#: drivers/platform/surface/aggregator/bus.c:293
#: drivers/platform/surface/aggregator/bus.c:475
msgid "**Return**"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:137
msgid "Returns the length of a SSH message with payload of specified size."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:144
msgid "``SSH_COMMAND_MESSAGE_LENGTH (payload_size)``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:142
msgid "Compute length of SSH command message."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:143
msgid "Length of the command payload."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:145
msgid ""
"Returns the length of a SSH command message with command payload of "
"specified size."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:154
msgid "``SSH_MSGOFFSET_FRAME (field)``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:152
msgid "Compute offset in SSH message to specified field in frame."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:158
#: include/linux/surface_aggregator/serial_hub.h:170
msgid "``field``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:154
#: include/linux/surface_aggregator/serial_hub.h:166
msgid "The field for which the offset should be computed."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:156
msgid ""
"Returns the offset of the specified :c:type:`struct ssh_frame <ssh_frame>` "
"field in the raw SSH message data as. Takes SYN bytes (u16) preceding the "
"frame into account."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:166
msgid "``SSH_MSGOFFSET_COMMAND (field)``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:164
msgid "Compute offset in SSH message to specified field in command."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:168
msgid ""
"Returns the offset of the specified :c:type:`struct ssh_command "
"<ssh_command>` field in the raw SSH message data. Takes SYN bytes (u16) "
"preceding the frame and the frame CRC (u16) between frame and command into "
"account."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:182
msgid "Compute CRC for SSH messages."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:188
msgid "``const u8 *buf``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:183
msgid "The pointer pointing to the data for which the CRC should be computed."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:185
#: include/linux/surface_aggregator/serial_hub.h:519
#: include/linux/surface_aggregator/serial_hub.h:681
#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:159
msgid "``size_t len``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:184
msgid "The length of the data for which the CRC should be computed."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:186
msgid ""
"Returns the CRC computed on the provided data, as used for SSH messages."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:210
msgid "Return the next valid request ID."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:216
#: include/linux/surface_aggregator/serial_hub.h:229
#: include/linux/surface_aggregator/serial_hub.h:238
msgid "``u16 rqid``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:211
msgid "The current request ID."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:213
msgid ""
"Returns the next valid request ID, following the current request ID provided "
"to this function. This function skips any request IDs reserved for events."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:223
msgid "Convert request ID to its corresponding event ID."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:224
msgid "The request ID to convert."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:232
msgid "Check if given request ID is a valid event ID."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:233
msgid "The request ID to check."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:241
msgid "Convert target category to its corresponding request ID."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:247
msgid "``u8 tc``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:242
msgid "The target category to convert."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:250
msgid "Convert target ID to its corresponding target index."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:256
#: include/linux/surface_aggregator/serial_hub.h:265
msgid "``u8 tid``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:251
msgid "The target ID to convert."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:259
msgid "Check if target ID is valid/supported."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:260
msgid "The target ID to check."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:268
msgid "Reference to a buffer region."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:269
msgid "``ptr``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:270
msgid "Pointer to the buffer region."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:271
msgid "Length of the buffer region."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:274
#: include/linux/surface_aggregator/serial_hub.h:380
#: include/linux/surface_aggregator/serial_hub.h:520
#: include/linux/surface_aggregator/serial_hub.h:585
#: include/linux/surface_aggregator/serial_hub.h:631
#: include/linux/surface_aggregator/serial_hub.h:646
#: include/linux/surface_aggregator/serial_hub.h:662
#: include/linux/surface_aggregator/serial_hub.h:682
#: ../../../driver-api/surface_aggregator/client-api:16:
#: drivers/platform/surface/aggregator/ssh_packet_layer.c:524
#: drivers/platform/surface/aggregator/ssh_packet_layer.c:541
#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:81
#: include/linux/surface_aggregator/controller.h:160
#: include/linux/surface_aggregator/controller.h:174
#: include/linux/surface_aggregator/controller.h:191
#: include/linux/surface_aggregator/controller.h:226
#: include/linux/surface_aggregator/controller.h:252
#: include/linux/surface_aggregator/controller.h:277
#: include/linux/surface_aggregator/controller.h:299
#: include/linux/surface_aggregator/controller.h:320
#: include/linux/surface_aggregator/controller.h:340
#: include/linux/surface_aggregator/controller.h:379
#: include/linux/surface_aggregator/controller.h:420
#: include/linux/surface_aggregator/controller.h:480
#: include/linux/surface_aggregator/controller.h:539
#: include/linux/surface_aggregator/controller.h:580
#: include/linux/surface_aggregator/controller.h:623
#: include/linux/surface_aggregator/controller.h:685
#: include/linux/surface_aggregator/controller.h:767
#: include/linux/surface_aggregator/controller.h:842
#: include/linux/surface_aggregator/controller.h:859
#: include/linux/surface_aggregator/controller.h:971
#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:927
#: drivers/platform/surface/aggregator/controller.c:950
#: drivers/platform/surface/aggregator/controller.c:1494
#: drivers/platform/surface/aggregator/controller.c:1587
#: drivers/platform/surface/aggregator/controller.c:1620
#: drivers/platform/surface/aggregator/controller.c:1642
#: drivers/platform/surface/aggregator/controller.c:1671
#: drivers/platform/surface/aggregator/controller.c:1721
#: drivers/platform/surface/aggregator/controller.c:1774
#: drivers/platform/surface/aggregator/controller.c:2310
#: drivers/platform/surface/aggregator/controller.c:2382
#: drivers/platform/surface/aggregator/controller.c:2453
#: drivers/platform/surface/aggregator/controller.c:2506
#: ../../../driver-api/surface_aggregator/client-api:28:
#: drivers/platform/surface/aggregator/core.c:3
#: drivers/platform/surface/aggregator/core.c:116
#: drivers/platform/surface/aggregator/core.c:175
#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:84
#: include/linux/surface_aggregator/device.h:114
#: include/linux/surface_aggregator/device.h:137
#: include/linux/surface_aggregator/device.h:224
#: include/linux/surface_aggregator/device.h:238
#: include/linux/surface_aggregator/device.h:264
#: include/linux/surface_aggregator/device.h:279
#: include/linux/surface_aggregator/device.h:293
#: include/linux/surface_aggregator/device.h:310
#: include/linux/surface_aggregator/device.h:359
#: include/linux/surface_aggregator/device.h:394
#: include/linux/surface_aggregator/device.h:413
#: include/linux/surface_aggregator/device.h:436
#: include/linux/surface_aggregator/device.h:469
#: include/linux/surface_aggregator/device.h:503
#: include/linux/surface_aggregator/device.h:538
#: include/linux/surface_aggregator/device.h:575
#: include/linux/surface_aggregator/device.h:613
#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:73
#: drivers/platform/surface/aggregator/bus.c:109
#: drivers/platform/surface/aggregator/bus.c:169
#: drivers/platform/surface/aggregator/bus.c:233
#: drivers/platform/surface/aggregator/bus.c:254
#: drivers/platform/surface/aggregator/bus.c:285
#: drivers/platform/surface/aggregator/bus.c:347
#: drivers/platform/surface/aggregator/bus.c:461
#: drivers/platform/surface/aggregator/bus.c:519
msgid "**Description**"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:271
msgid ""
"A reference to a (non-owned) buffer segment, consisting of pointer and "
"length. Use of this struct indicates non-owned data, i.e. data of which the "
"life-time is managed (i.e. it is allocated/freed) via another pointer."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:282
msgid "Target/source IDs for Serial Hub messages."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:288
msgid "``SSAM_SSH_TID_HOST``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:289
msgid "We as the kernel Serial Hub driver."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:291
msgid "``SSAM_SSH_TID_SAM``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:292
msgid "The Surface Aggregator EC."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:294
msgid "``SSAM_SSH_TID_KIP``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:295
msgid "Keyboard and perihperal controller."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:297
msgid "``SSAM_SSH_TID_DEBUG``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:298
msgid "Debug connector."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:300
msgid "``SSAM_SSH_TID_SURFLINK``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:301
msgid "SurfLink connector."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:354
msgid "Base priorities for :c:type:`struct ssh_packet <ssh_packet>`."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:360
msgid "``SSH_PACKET_PRIORITY_FLUSH``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:361
msgid "Base priority for flush packets."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:363
msgid "``SSH_PACKET_PRIORITY_DATA``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:364
msgid "Base priority for normal data packets."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:366
msgid "``SSH_PACKET_PRIORITY_NAK``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:367
msgid "Base priority for NAK packets."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:369
msgid "``SSH_PACKET_PRIORITY_ACK``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:370
msgid "Base priority for ACK packets."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:376
msgid "``SSH_PACKET_PRIORITY (base, try)``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:374
msgid "Compute packet priority from base priority and number of tries."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:380
#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:129
#: include/linux/surface_aggregator/controller.h:939
msgid "``base``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:376
msgid ""
"The base priority as suffix of :c:type:`enum ssh_packet_base_priority "
"<ssh_packet_base_priority>`, e.g. ``FLUSH``, ``DATA``, ``ACK``, or ``NAK``."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:379
msgid "``try``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:378
msgid "The number of tries (must be less than 16)."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:379
msgid ""
"Compute the combined packet priority. The combined priority is dominated by "
"the base priority, whereas the number of (re-)tries decides the precedence "
"of packets with the same base priority, giving higher priority to packets "
"that already have more tries."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:385
msgid ""
"Returns the computed priority as value fitting inside a :c:type:`u8`. A "
"higher number means a higher priority."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:392
msgid "Get number of tries from packet priority."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:398
#: include/linux/surface_aggregator/serial_hub.h:410
msgid "``u8 priority``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:393
#: include/linux/surface_aggregator/serial_hub.h:405
msgid "The packet priority."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:395
msgid "Returns the number of tries encoded in the specified packet priority."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:404
msgid "Get base priority from packet priority."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:407
msgid "Returns the base priority encoded in the given packet priority."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:452
msgid "Callback operations for a SSH packet."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:453
#: include/linux/surface_aggregator/serial_hub.h:574
msgid "``release``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:454
msgid ""
"Function called when the packet reference count reaches zero. This callback "
"must be relied upon to ensure that the packet has left the transport "
"system(s)."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:456
#: include/linux/surface_aggregator/serial_hub.h:577
msgid "``complete``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:457
msgid ""
"Function called when the packet is completed, either with success or "
"failure. In case of failure, the reason for the failure is indicated by the "
"value of the provided status code argument. This value will be zero in case "
"of success. Note that a call to this callback does not guarantee that the "
"packet is not in use by the transport system any more."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:469
msgid "SSH transport packet."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:470
msgid "``ptl``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:471
msgid ""
"Pointer to the packet transport layer. May be ``NULL`` if the packet (or "
"enclosing request) has not been submitted yet."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:472
msgid "``refcnt``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:473
msgid "Reference count of the packet."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:473
#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:788
msgid "``priority``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:474
msgid ""
"Priority of the packet. Must be computed via SSH_PACKET_PRIORITY(). Must "
"only be accessed while holding the queue lock after first submission."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:476
#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:39
msgid "``data``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:477
msgid "Raw message data."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:477
msgid "``data.len``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:478
msgid "Length of the raw message data."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:478
msgid "``data.ptr``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:479
msgid "Pointer to the raw message data buffer."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:479
#: include/linux/surface_aggregator/serial_hub.h:607
msgid "``state``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:480
msgid ""
"State and type flags describing current packet state (dynamic) and type "
"(static). See :c:type:`enum ssh_packet_flags <ssh_packet_flags>` for "
"possible options."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:482
#: include/linux/surface_aggregator/serial_hub.h:610
msgid "``timestamp``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:483
msgid ""
"Timestamp specifying when the latest transmission of a currently pending "
"packet has been started. May be ``KTIME_MAX`` before or in-between "
"transmission attempts. Used for the packet timeout implementation. Must only "
"be accessed while holding the pending lock after first submission."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:487
msgid "``queue_node``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:488
msgid "The list node for the packet queue."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:488
msgid "``pending_node``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:489
msgid "The list node for the set of pending packets."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:489
#: include/linux/surface_aggregator/serial_hub.h:615
msgid "``ops``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:490
msgid "Packet operations."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:515
msgid "Set raw message data of packet."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:521
#: include/linux/surface_aggregator/serial_hub.h:634
msgid "``struct ssh_packet *p``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:516
msgid "The packet for which the message data should be set."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:518
#: include/linux/surface_aggregator/serial_hub.h:680
#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:158
msgid "``u8 *ptr``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:517
#: include/linux/surface_aggregator/serial_hub.h:679
msgid "Pointer to the memory holding the message data."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:518
#: include/linux/surface_aggregator/serial_hub.h:680
msgid "Length of the message data."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:519
msgid ""
"Sets the raw message data buffer of the packet to the provided memory. The "
"memory is not copied. Instead, the caller is responsible for management (i."
"e. allocation and deallocation) of the memory. The caller must ensure that "
"the provided memory is valid and contains a valid SSH message, starting from "
"the time of submission of the packet until the ``release`` callback has been "
"called. During this time, the memory may not be altered in any way."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:573
msgid "Callback operations for a SSH request."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:575
msgid ""
"Function called when the request's reference count reaches zero. This "
"callback must be relied upon to ensure that the request has left the "
"transport systems (both, packet an request systems)."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:578
msgid ""
"Function called when the request is completed, either with success or "
"failure. The command data for the request response is provided via the :c:"
"type:`struct ssh_command <ssh_command>` parameter (``cmd``), the command "
"payload of the request response via the :c:type:`struct ssh_span <ssh_span>` "
"parameter (``data``)."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:582
msgid ""
"If the request does not have any response or has not been completed with "
"success, both ``cmd`` and ``data`` parameters will be NULL. If the request "
"response does not have any command payload, the ``data`` span will be an "
"empty (zero-length) span."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:587
msgid ""
"In case of failure, the reason for the failure is indicated by the value of "
"the provided status code argument (``status``). This value will be zero in "
"case of success and a regular errno otherwise."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:592
msgid ""
"Note that a call to this callback does not guarantee that the request is not "
"in use by the transport systems any more."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:604
msgid "SSH transport request."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:605
msgid "``packet``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:606
msgid "The underlying SSH transport packet."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:606
#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:781
msgid "``node``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:607
msgid "List node for the request queue and pending set."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:608
msgid ""
"State and type flags describing current request state (dynamic) and type "
"(static). See :c:type:`enum ssh_request_flags <ssh_request_flags>` for "
"possible options."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:611
msgid ""
"Timestamp specifying when we start waiting on the response of the request. "
"This is set once the underlying packet has been completed and may be "
"``KTIME_MAX`` before that, or when the request does not expect a response. "
"Used for the request timeout implementation."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:616
msgid "Request Operations."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:628
msgid "Cast a SSH packet to its enclosing SSH request."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:629
msgid "The packet to cast."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:630
msgid ""
"Casts the given :c:type:`struct ssh_packet <ssh_packet>` to its enclosing :c:"
"type:`struct ssh_request <ssh_request>`. The caller is responsible for "
"making sure that the packet is actually wrapped in a :c:type:`struct "
"ssh_request <ssh_request>`."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:635
msgid ""
"Returns the :c:type:`struct ssh_request <ssh_request>` wrapping the provided "
"packet."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:643
msgid "Increment reference count of request."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:649
#: include/linux/surface_aggregator/serial_hub.h:665
#: include/linux/surface_aggregator/serial_hub.h:683
msgid "``struct ssh_request *r``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:644
msgid "The request to increment the reference count of."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:645
msgid ""
"Increments the reference count of the given request by incrementing the "
"reference count of the underlying :c:type:`struct ssh_packet <ssh_packet>`, "
"enclosed in it."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:648
msgid "See also ssh_request_put(), ssh_packet_get()."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:651
msgid "Returns the request provided as input."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:659
msgid "Decrement reference count of request."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:660
msgid "The request to decrement the reference count of."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:661
msgid ""
"Decrements the reference count of the given request by decrementing the "
"reference count of the underlying :c:type:`struct ssh_packet <ssh_packet>`, "
"enclosed in it. If the reference count reaches zero, the ``release`` "
"callback specified in the request's :c:type:`struct ssh_request_ops "
"<ssh_request_ops>`, i.e. ``r->ops->release``, will be called."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:667
msgid "See also ssh_request_get(), ssh_packet_put()."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:677
msgid "Set raw message data of request."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:678
msgid "The request for which the message data should be set."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:14:
#: include/linux/surface_aggregator/serial_hub.h:681
msgid ""
"Sets the raw message data buffer of the underlying packet to the specified "
"buffer. Does not copy the actual message data, just sets the buffer pointer "
"and length. Refer to ssh_packet_set_data() for more details."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:16:
#: drivers/platform/surface/aggregator/ssh_packet_layer.c:521
msgid "Increment reference count of packet."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:16:
#: drivers/platform/surface/aggregator/ssh_packet_layer.c:527
#: drivers/platform/surface/aggregator/ssh_packet_layer.c:544
msgid "``struct ssh_packet *packet``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:16:
#: drivers/platform/surface/aggregator/ssh_packet_layer.c:522
msgid "The packet to increment the reference count of."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:16:
#: drivers/platform/surface/aggregator/ssh_packet_layer.c:523
msgid ""
"Increments the reference count of the given packet. See ssh_packet_put() for "
"the counter-part of this function."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:16:
#: drivers/platform/surface/aggregator/ssh_packet_layer.c:527
msgid "Returns the packet provided as input."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:16:
#: drivers/platform/surface/aggregator/ssh_packet_layer.c:538
msgid "Decrement reference count of packet."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:16:
#: drivers/platform/surface/aggregator/ssh_packet_layer.c:539
msgid "The packet to decrement the reference count of."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:16:
#: drivers/platform/surface/aggregator/ssh_packet_layer.c:540
msgid ""
"If the reference count reaches zero, the ``release`` callback specified in "
"the packet's :c:type:`struct ssh_packet_ops <ssh_packet_ops>`, i.e. ``packet-"
">ops->release``, will be called."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:16:
#: drivers/platform/surface/aggregator/ssh_packet_layer.c:544
msgid "See ssh_packet_get() for the counter-part of this function."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api.rst:21
msgid "Controller and Core Interface"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:25
msgid "Flags for enabling/disabling SAM events"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:31
msgid "``SSAM_EVENT_SEQUENCED``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:32
msgid "The event will be sent via a sequenced data frame."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:33
msgid "SAM event sent from the EC to the host."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:34
#: include/linux/surface_aggregator/controller.h:71
#: include/linux/surface_aggregator/controller.h:291
#: include/linux/surface_aggregator/controller.h:314
#: include/linux/surface_aggregator/controller.h:835
#: include/linux/surface_aggregator/controller.h:854
msgid "``target_category``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:35
msgid ""
"Target category of the event source. See :c:type:`enum ssam_ssh_tc "
"<ssam_ssh_tc>`."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:35
#: include/linux/surface_aggregator/controller.h:72
#: include/linux/surface_aggregator/controller.h:292
#: include/linux/surface_aggregator/controller.h:836
msgid "``target_id``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:36
msgid "Target ID of the event source."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:36
#: include/linux/surface_aggregator/controller.h:73
#: include/linux/surface_aggregator/controller.h:293
#: include/linux/surface_aggregator/controller.h:315
msgid "``command_id``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:37
msgid "Command ID of the event."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:37
#: include/linux/surface_aggregator/controller.h:74
#: include/linux/surface_aggregator/controller.h:294
msgid "``instance_id``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:38
#: include/linux/surface_aggregator/controller.h:856
msgid "Instance ID of the event source."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:38
#: include/linux/surface_aggregator/controller.h:76
#: include/linux/surface_aggregator/controller.h:96
msgid "``length``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:39
msgid "Length of the event payload in bytes."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:40
msgid "Event payload data."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:51
msgid "Flags for SAM requests."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:57
msgid "``SSAM_REQUEST_HAS_RESPONSE``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:58
msgid ""
"Specifies that the request expects a response. If not set, the request will "
"be directly completed after its underlying packet has been transmitted. If "
"set, the request transport system waits for a response of the request."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:63
msgid "``SSAM_REQUEST_UNSEQUENCED``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:64
msgid ""
"Specifies that the request should be transmitted via an unsequenced packet. "
"If set, the request must not have a response, meaning that this flag and the "
"``SSAM_REQUEST_HAS_RESPONSE`` flag are mutually exclusive."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:70
msgid "SAM request description."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:72
#: include/linux/surface_aggregator/controller.h:292
#: include/linux/surface_aggregator/controller.h:315
msgid ""
"Category of the request's target. See :c:type:`enum ssam_ssh_tc "
"<ssam_ssh_tc>`."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:73
#: include/linux/surface_aggregator/controller.h:293
msgid "ID of the request's target."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:74
#: include/linux/surface_aggregator/controller.h:294
#: include/linux/surface_aggregator/controller.h:316
msgid "Command ID of the request."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:75
#: include/linux/surface_aggregator/controller.h:295
msgid "Instance ID of the request's target."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:75
#: include/linux/surface_aggregator/controller.h:295
#: include/linux/surface_aggregator/controller.h:316
#: include/linux/surface_aggregator/controller.h:945
#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:167
msgid "``flags``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:76
#: include/linux/surface_aggregator/controller.h:296
#: include/linux/surface_aggregator/controller.h:317
msgid ""
"Flags for the request. See :c:type:`enum ssam_request_flags "
"<ssam_request_flags>`."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:77
msgid "Length of the request payload in bytes."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:77
msgid "``payload``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:78
msgid "Request payload data."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:78
msgid ""
"This struct fully describes a SAM request with payload. It is intended to "
"help set up the actual transport struct, e.g. :c:type:`struct "
"ssam_request_sync <ssam_request_sync>`, and specifically its raw message "
"data via ssam_request_write_data()."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:94
msgid "Response buffer for SAM request."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:95
msgid "``capacity``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:96
msgid "Capacity of the buffer, in bytes."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:97
msgid ""
"Length of the actual data stored in the memory pointed to by **pointer**, in "
"bytes. Set by the transport system."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:98
msgid "``pointer``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:99
msgid "Pointer to the buffer's memory, storing the response payload data."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:128
msgid "Synchronous SAM request struct."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:130
msgid "Underlying SSH request."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:130
msgid "``comp``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:131
msgid ""
"Completion used to signal full completion of the request. After the request "
"has been submitted, this struct may only be modified or deallocated after "
"the completion has been signaled. request has been submitted,"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:134
msgid "``resp``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:135
msgid "Buffer to store the response."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:135
msgid "``status``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:136
msgid ""
"Status of the request, set after the base request has been completed or has "
"failed."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:155
msgid "Set message data of a synchronous request."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:161
#: include/linux/surface_aggregator/controller.h:176
#: include/linux/surface_aggregator/controller.h:194
#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1623
#: drivers/platform/surface/aggregator/controller.c:1644
#: drivers/platform/surface/aggregator/controller.c:1670
msgid "``struct ssam_request_sync *rqst``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:156
#: include/linux/surface_aggregator/controller.h:171
msgid "The request."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:157
msgid "Pointer to the request message data."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:158
msgid "Length of the request message data."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:159
msgid ""
"Set the request message data of a synchronous request. The provided buffer "
"needs to live until the request has been completed."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:170
msgid "Set response buffer of a synchronous request."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:173
msgid "``struct ssam_response *resp``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:172
#: include/linux/surface_aggregator/controller.h:223
#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1719
#: drivers/platform/surface/aggregator/controller.c:1771
msgid "The response buffer."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:173
msgid ""
"Sets the response buffer of a synchronous request. This buffer will store "
"the response of the request after it has been completed. May be ``NULL`` if "
"no response is expected."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:188
msgid "Wait for completion of a synchronous request."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:189
msgid "The request to wait for."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:190
msgid ""
"Wait for completion and release of a synchronous request. After this "
"function terminates, the request is guaranteed to have left the transport "
"system. After successful submission of a request, this function must be "
"called before accessing the response of the request, freeing the request, or "
"freeing any of the buffers associated with the request."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:196
msgid ""
"This function must not be called if the request has not been submitted yet "
"and may lead to a deadlock/infinite wait if a subsequent request submission "
"fails in that case, due to the completion never triggering."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:201
msgid ""
"Returns the status of the given request, which is set on completion of the "
"packet. This value is zero on success and negative on failure."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:222
msgid "``ssam_request_do_sync_onstack (ctrl, rqst, rsp, payload_len)``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:220
msgid "Execute a synchronous request on the stack."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:226
#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:165
msgid "``ctrl``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:221
msgid "The controller via which the request is submitted."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:223
msgid "``rqst``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:222
msgid "The request specification."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:224
msgid "``rsp``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:225
msgid "``payload_len``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:224
msgid "The (maximum) request payload length."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:225
msgid ""
"Allocates a synchronous request with specified payload length on the stack, "
"fully initializes it via the provided request specification, submits it, and "
"finally waits for its completion before returning its status. This helper "
"macro essentially allocates the request message buffer on the stack and then "
"calls ssam_request_do_sync_with_buffer()."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:231
#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:2455
#: drivers/platform/surface/aggregator/controller.c:2508
#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:90
#: include/linux/surface_aggregator/device.h:120
#: include/linux/surface_aggregator/device.h:143
msgid "**Note**"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:232
msgid ""
"The **payload_len** parameter specifies the maximum payload length, used for "
"buffer allocation. The actual payload length may be smaller."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:235
msgid ""
"Returns the status of the request or any failure during setup, i.e. zero on "
"success and a negative value on failure."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:249
msgid "``__ssam_retry (request, n, args...)``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:247
msgid "Retry request in case of I/O errors or timeouts."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:253
#: include/linux/surface_aggregator/controller.h:278
msgid "``request``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:248
#: include/linux/surface_aggregator/controller.h:274
msgid "The request function to execute. Must return an integer."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:250
msgid "``n``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:249
msgid "Number of tries."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:251
#: include/linux/surface_aggregator/controller.h:276
msgid "``args...``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:250
#: include/linux/surface_aggregator/controller.h:275
msgid "Arguments for the request function."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:251
msgid ""
"Executes the given request function, i.e. calls **request**. In case the "
"request returns ``-EREMOTEIO`` (indicates I/O error) or ``-ETIMEDOUT`` "
"(request or underlying packet timed out), **request** will be re-executed "
"again, up to **n** times in total."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:257
#: include/linux/surface_aggregator/controller.h:284
msgid "Returns the return value of the last execution of **request**."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:274
msgid "``ssam_retry (request, args...)``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:272
msgid ""
"Retry request in case of I/O errors or timeouts up to three times in total."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:276
msgid ""
"Executes the given request function, i.e. calls **request**. In case the "
"request returns ``-EREMOTEIO`` (indicates I/O error) or -``ETIMEDOUT`` "
"(request or underlying packet timed out), **request** will be re-executed "
"again, up to three times in total."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:281
msgid "See __ssam_retry() for a more generic macro for this purpose."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:290
msgid "Blue-print specification of SAM request."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:296
msgid ""
"Blue-print specification for a SAM request. This struct describes the unique "
"static parameters of a request (i.e. type) without specifying any of its "
"instance-specific data (e.g. payload). It is intended to be used as base for "
"defining simple request functions via the ``SSAM_DEFINE_SYNC_REQUEST_x()`` "
"family of macros."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:312
msgid "Blue-print specification for multi-device SAM request."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:317
msgid ""
"Blue-print specification for a multi-device SAM request, i.e. a request that "
"is applicable to multiple device instances, described by their individual "
"target and instance IDs. This struct describes the unique static parameters "
"of a request (i.e. type) without specifying any of its instance-specific "
"data (e.g. payload) and without specifying any of its device specific IDs (i."
"e. target and instance ID). It is intended to be used as base for defining "
"simple multi-device request functions via the "
"``SSAM_DEFINE_SYNC_REQUEST_MD_x()`` and ``SSAM_DEFINE_SYNC_REQUEST_CL_x()`` "
"families of macros."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:337
msgid "``SSAM_DEFINE_SYNC_REQUEST_N (name, spec...)``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:335
msgid ""
"Define synchronous SAM request function with neither argument nor return "
"value."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:341
#: include/linux/surface_aggregator/controller.h:379
#: include/linux/surface_aggregator/controller.h:420
#: include/linux/surface_aggregator/controller.h:479
#: include/linux/surface_aggregator/controller.h:540
#: include/linux/surface_aggregator/controller.h:580
#: include/linux/surface_aggregator/controller.h:623
#: include/linux/surface_aggregator/controller.h:684
#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:437
#: include/linux/surface_aggregator/device.h:469
#: include/linux/surface_aggregator/device.h:503
#: include/linux/surface_aggregator/device.h:537
msgid "``name``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:337
#: include/linux/surface_aggregator/controller.h:375
#: include/linux/surface_aggregator/controller.h:416
#: include/linux/surface_aggregator/controller.h:475
#: include/linux/surface_aggregator/controller.h:536
#: include/linux/surface_aggregator/controller.h:576
#: include/linux/surface_aggregator/controller.h:619
#: include/linux/surface_aggregator/controller.h:680
#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:433
#: include/linux/surface_aggregator/device.h:465
#: include/linux/surface_aggregator/device.h:499
#: include/linux/surface_aggregator/device.h:533
msgid "Name of the generated function."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:339
#: include/linux/surface_aggregator/controller.h:378
#: include/linux/surface_aggregator/controller.h:419
#: include/linux/surface_aggregator/controller.h:479
#: include/linux/surface_aggregator/controller.h:538
#: include/linux/surface_aggregator/controller.h:579
#: include/linux/surface_aggregator/controller.h:622
#: include/linux/surface_aggregator/controller.h:684
#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:435
#: include/linux/surface_aggregator/device.h:468
#: include/linux/surface_aggregator/device.h:502
#: include/linux/surface_aggregator/device.h:537
msgid "``spec...``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:338
#: include/linux/surface_aggregator/controller.h:377
#: include/linux/surface_aggregator/controller.h:418
#: include/linux/surface_aggregator/controller.h:478
msgid ""
"Specification (:c:type:`struct ssam_request_spec <ssam_request_spec>`) "
"defining the request."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:339
msgid ""
"Defines a function executing the synchronous SAM request specified by "
"**spec**, with the request having neither argument nor return value. The "
"generated function takes care of setting up the request struct and buffer "
"allocation, as well as execution of the request itself, returning once the "
"request has been fully completed. The required transport buffer will be "
"allocated on the stack."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:346
msgid ""
"The generated function is defined as ``static int name(struct "
"ssam_controller *ctrl)``, returning the status of the request, which is zero "
"on success and negative on failure. The ``ctrl`` parameter is the controller "
"via which the request is being sent."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:351
#: include/linux/surface_aggregator/controller.h:391
#: include/linux/surface_aggregator/controller.h:432
#: include/linux/surface_aggregator/controller.h:493
#: include/linux/surface_aggregator/controller.h:552
#: include/linux/surface_aggregator/controller.h:594
#: include/linux/surface_aggregator/controller.h:637
#: include/linux/surface_aggregator/controller.h:700
#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:450
#: include/linux/surface_aggregator/device.h:484
#: include/linux/surface_aggregator/device.h:518
#: include/linux/surface_aggregator/device.h:554
msgid ""
"Refer to ssam_request_do_sync_onstack() for more details on the behavior of "
"the generated function."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:375
msgid "``SSAM_DEFINE_SYNC_REQUEST_W (name, atype, spec...)``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:373
msgid "Define synchronous SAM request function with argument."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:377
#: include/linux/surface_aggregator/controller.h:477
#: include/linux/surface_aggregator/controller.h:578
#: include/linux/surface_aggregator/controller.h:682
#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:467
#: include/linux/surface_aggregator/device.h:535
msgid "``atype``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:376
#: include/linux/surface_aggregator/controller.h:476
#: include/linux/surface_aggregator/controller.h:577
#: include/linux/surface_aggregator/controller.h:681
#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:466
#: include/linux/surface_aggregator/device.h:534
msgid "Type of the request's argument."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:378
msgid ""
"Defines a function executing the synchronous SAM request specified by "
"**spec**, with the request taking an argument of type **atype** and having "
"no return value. The generated function takes care of setting up the request "
"struct, buffer allocation, as well as execution of the request itself, "
"returning once the request has been fully completed. The required transport "
"buffer will be allocated on the stack."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:385
msgid ""
"The generated function is defined as ``static int name(struct "
"ssam_controller *ctrl, const atype *arg)``, returning the status of the "
"request, which is zero on success and negative on failure. The ``ctrl`` "
"parameter is the controller via which the request is sent. The request "
"argument is specified via the ``arg`` pointer."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:416
msgid "``SSAM_DEFINE_SYNC_REQUEST_R (name, rtype, spec...)``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:414
msgid "Define synchronous SAM request function with return value."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:418
#: include/linux/surface_aggregator/controller.h:478
#: include/linux/surface_aggregator/controller.h:621
#: include/linux/surface_aggregator/controller.h:683
#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:501
#: include/linux/surface_aggregator/device.h:536
msgid "``rtype``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:417
#: include/linux/surface_aggregator/controller.h:477
#: include/linux/surface_aggregator/controller.h:620
#: include/linux/surface_aggregator/controller.h:682
#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:500
#: include/linux/surface_aggregator/device.h:535
msgid "Type of the request's return value."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:419
msgid ""
"Defines a function executing the synchronous SAM request specified by "
"**spec**, with the request taking no argument but having a return value of "
"type **rtype**. The generated function takes care of setting up the request "
"and response structs, buffer allocation, as well as execution of the request "
"itself, returning once the request has been fully completed. The required "
"transport buffer will be allocated on the stack."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:426
msgid ""
"The generated function is defined as ``static int name(struct "
"ssam_controller *ctrl, rtype *ret)``, returning the status of the request, "
"which is zero on success and negative on failure. The ``ctrl`` parameter is "
"the controller via which the request is sent. The request's return value is "
"written to the memory pointed to by the ``ret`` parameter."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:475
msgid "``SSAM_DEFINE_SYNC_REQUEST_WR (name, atype, rtype, spec...)``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:473
msgid ""
"Define synchronous SAM request function with both argument and return value."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:479
msgid ""
"Defines a function executing the synchronous SAM request specified by "
"**spec**, with the request taking an argument of type **atype** and having a "
"return value of type **rtype**. The generated function takes care of setting "
"up the request and response structs, buffer allocation, as well as execution "
"of the request itself, returning once the request has been fully completed. "
"The required transport buffer will be allocated on the stack."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:486
msgid ""
"The generated function is defined as ``static int name(struct "
"ssam_controller *ctrl, const atype *arg, rtype *ret)``, returning the status "
"of the request, which is zero on success and negative on failure. The "
"``ctrl`` parameter is the controller via which the request is sent. The "
"request argument is specified via the ``arg`` pointer. The request's return "
"value is written to the memory pointed to by the ``ret`` parameter."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:536
msgid "``SSAM_DEFINE_SYNC_REQUEST_MD_N (name, spec...)``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:534
msgid ""
"Define synchronous multi-device SAM request function with neither argument "
"nor return value."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:537
#: include/linux/surface_aggregator/controller.h:578
#: include/linux/surface_aggregator/controller.h:621
#: include/linux/surface_aggregator/controller.h:683
#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:434
#: include/linux/surface_aggregator/device.h:467
#: include/linux/surface_aggregator/device.h:501
#: include/linux/surface_aggregator/device.h:536
msgid ""
"Specification (:c:type:`struct ssam_request_spec_md <ssam_request_spec_md>`) "
"defining the request."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:538
msgid ""
"Defines a function executing the synchronous SAM request specified by "
"**spec**, with the request having neither argument nor return value. Device "
"specifying parameters are not hard-coded, but instead must be provided to "
"the function. The generated function takes care of setting up the request "
"struct, buffer allocation, as well as execution of the request itself, "
"returning once the request has been fully completed. The required transport "
"buffer will be allocated on the stack."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:546
msgid ""
"The generated function is defined as ``static int name(struct "
"ssam_controller *ctrl, u8 tid, u8 iid)``, returning the status of the "
"request, which is zero on success and negative on failure. The ``ctrl`` "
"parameter is the controller via which the request is sent, ``tid`` the "
"target ID for the request, and ``iid`` the instance ID."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:576
msgid "``SSAM_DEFINE_SYNC_REQUEST_MD_W (name, atype, spec...)``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:574
msgid "Define synchronous multi-device SAM request function with argument."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:579
msgid ""
"Defines a function executing the synchronous SAM request specified by "
"**spec**, with the request taking an argument of type **atype** and having "
"no return value. Device specifying parameters are not hard-coded, but "
"instead must be provided to the function. The generated function takes care "
"of setting up the request struct, buffer allocation, as well as execution of "
"the request itself, returning once the request has been fully completed. The "
"required transport buffer will be allocated on the stack."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:587
msgid ""
"The generated function is defined as ``static int name(struct "
"ssam_controller *ctrl, u8 tid, u8 iid, const atype *arg)``, returning the "
"status of the request, which is zero on success and negative on failure. The "
"``ctrl`` parameter is the controller via which the request is sent, ``tid`` "
"the target ID for the request, and ``iid`` the instance ID. The request "
"argument is specified via the ``arg`` pointer."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:619
msgid "``SSAM_DEFINE_SYNC_REQUEST_MD_R (name, rtype, spec...)``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:617
msgid "Define synchronous multi-device SAM request function with return value."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:622
msgid ""
"Defines a function executing the synchronous SAM request specified by "
"**spec**, with the request taking no argument but having a return value of "
"type **rtype**. Device specifying parameters are not hard-coded, but instead "
"must be provided to the function. The generated function takes care of "
"setting up the request and response structs, buffer allocation, as well as "
"execution of the request itself, returning once the request has been fully "
"completed. The required transport buffer will be allocated on the stack."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:630
msgid ""
"The generated function is defined as ``static int name(struct "
"ssam_controller *ctrl, u8 tid, u8 iid, rtype *ret)``, returning the status "
"of the request, which is zero on success and negative on failure. The "
"``ctrl`` parameter is the controller via which the request is sent, ``tid`` "
"the target ID for the request, and ``iid`` the instance ID. The request's "
"return value is written to the memory pointed to by the ``ret`` parameter."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:680
msgid "``SSAM_DEFINE_SYNC_REQUEST_MD_WR (name, atype, rtype, spec...)``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:678
msgid ""
"Define synchronous multi-device SAM request function with both argument and "
"return value."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:684
msgid ""
"Defines a function executing the synchronous SAM request specified by "
"**spec**, with the request taking an argument of type **atype** and having a "
"return value of type **rtype**. Device specifying parameters are not hard-"
"coded, but instead must be provided to the function. The generated function "
"takes care of setting up the request and response structs, buffer "
"allocation, as well as execution of the request itself, returning once the "
"request has been fully completed. The required transport buffer will be "
"allocated on the stack."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:692
msgid ""
"The generated function is defined as ``static int name(struct "
"ssam_controller *ctrl, u8 tid, u8 iid, const atype *arg, rtype *ret)``, "
"returning the status of the request, which is zero on success and negative "
"on failure. The ``ctrl`` parameter is the controller via which the request "
"is sent, ``tid`` the target ID for the request, and ``iid`` the instance ID. "
"The request argument is specified via the ``arg`` pointer. The request's "
"return value is written to the memory pointed to by the ``ret`` parameter."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:748
msgid "Flags used in return values from SSAM notifier callback functions."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:754
msgid "``SSAM_NOTIF_HANDLED``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:755
msgid ""
"Indicates that the notification has been handled. This flag should be set by "
"the handler if the handler can act/has acted upon the event provided to it. "
"This flag should not be set if the handler is not a primary handler intended "
"for the provided event."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:760
msgid "``SSAM_NOTIF_STOP``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:761
msgid ""
"Indicates that the notifier traversal should stop. If this flag is returned "
"from a notifier callback, notifier chain traversal will immediately stop and "
"any remaining notifiers will not be called. This flag is automatically set "
"when ssam_notifier_from_errno() is called with a negative error value."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:756
msgid ""
"If this flag has not been set by any handler after the notifier chain has "
"been traversed, a warning will be emitted, stating that the event has not "
"been handled."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:779
msgid "Base notifier block for SSAM event notifications."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:782
msgid "The node for the list of notifiers."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:782
msgid "``fn``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:783
msgid ""
"The callback function of this notifier. This function takes the respective "
"notifier block and event as input and should return a notifier value, which "
"can either be obtained from the flags provided in :c:type:`enum "
"ssam_notif_flags <ssam_notif_flags>`, converted from a standard error value "
"via ssam_notifier_from_errno(), or a combination of both (e.g. "
"``ssam_notifier_from_errno(e) | SSAM_NOTIF_HANDLED``)."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:789
msgid ""
"Priority value determining the order in which notifier callbacks will be "
"called. A higher value means higher priority, i.e. the associated callback "
"will be executed earlier than other (lower priority) callbacks."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:800
msgid "Convert standard error value to notifier return code."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:806
msgid "``int err``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:802
msgid ""
"The error code to convert, must be negative (in case of failure) or zero (in "
"case of success)."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:805
msgid ""
"Returns the notifier return value obtained by converting the specified "
"**err** value. In case **err** is negative, the ``SSAM_NOTIF_STOP`` flag "
"will be set, causing notifier call chain traversal to abort."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:818
msgid "Convert notifier return code to standard error value."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:824
msgid "``u32 ret``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:820
msgid "The notifier return value to convert."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:822
msgid ""
"Returns the negative error value encoded in **ret** or zero if **ret** "
"indicates success."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:834
msgid "Registry specification used for enabling events."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:836
#: include/linux/surface_aggregator/controller.h:898
msgid "Target category for the event registry requests."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:837
#: include/linux/surface_aggregator/controller.h:899
msgid "Target ID for the event registry requests."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:837
msgid "``cid_enable``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:838
#: include/linux/surface_aggregator/controller.h:900
msgid "Command ID for the event-enable request."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:838
msgid "``cid_disable``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:839
#: include/linux/surface_aggregator/controller.h:901
msgid "Command ID for the event-disable request."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:839
msgid ""
"This struct describes a SAM event registry via the minimal collection of SAM "
"IDs specifying the requests to use for enabling and disabling an event. The "
"individual event to be enabled/disabled itself is specified via :c:type:"
"`struct ssam_event_id <ssam_event_id>`."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:853
msgid "Unique event ID used for enabling events."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:855
msgid "Target category of the event source."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:855
#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:49
msgid "``instance``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:856
msgid ""
"This struct specifies the event to be enabled/disabled via an externally "
"provided registry. It does not specify the registry to be used itself, this "
"is done via :c:type:`struct ssam_event_registry <ssam_event_registry>`."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:867
msgid "Flags specifying how events are matched to notifiers."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:873
msgid "``SSAM_EVENT_MASK_TARGET``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:874
msgid ""
"In addition to filtering by target category, only execute the notifier "
"callback for events with a target ID matching to the one of the registry "
"used for enabling/disabling the event."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:878
msgid "``SSAM_EVENT_MASK_INSTANCE``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:879
msgid ""
"In addition to filtering by target category, only execute the notifier "
"callback for events with an instance ID matching to the instance ID used "
"when enabling the event."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:883
msgid "``SSAM_EVENT_MASK_NONE``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:884
msgid ""
"Run the callback for any event with matching target category. Do not do any "
"additional filtering."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:887
msgid "``SSAM_EVENT_MASK_STRICT``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:888
msgid "Do all the filtering above."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:899
msgid "``SSAM_EVENT_REGISTRY (tc, tid, cid_en, cid_dis)``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:897
msgid "Define a new event registry."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:901
msgid "``cid_en``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:902
msgid "``cid_dis``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:903
msgid ""
"Returns the :c:type:`struct ssam_event_registry <ssam_event_registry>` "
"specified by the given parameters."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:924
msgid "Flags for event notifiers."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:930
msgid "``SSAM_EVENT_NOTIFIER_OBSERVER``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:931
msgid ""
"The corresponding notifier acts as observer. Registering a notifier with "
"this flag set will not attempt to enable any event. Equally, unregistering "
"will not attempt to disable any event. Note that a notifier with this flag "
"may not even correspond to a certain event at all, only to a specific event "
"target category. Event matching will not be influenced by this flag."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:938
msgid "Notifier block for SSAM events."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:940
msgid "The base notifier block with callback function and priority."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:940
msgid "``event``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:941
msgid "The event for which this block will receive notifications."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:941
msgid "``event.reg``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:942
msgid "Registry via which the event will be enabled/disabled."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:942
msgid "``event.id``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:943
msgid "ID specifying the event."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:943
msgid "``event.mask``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:944
msgid "Flags determining how events are matched to the notifier."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:944
msgid "``event.flags``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:945
msgid "Flags used for enabling the event."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:946
msgid ""
"Notifier flags (see :c:type:`enum ssam_event_notifier_flags "
"<ssam_event_notifier_flags>`)."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:967
#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:2377
msgid "Unregister an event notifier."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:973
#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1492
#: drivers/platform/surface/aggregator/controller.c:1673
#: drivers/platform/surface/aggregator/controller.c:1722
#: drivers/platform/surface/aggregator/controller.c:1773
#: drivers/platform/surface/aggregator/controller.c:2312
#: drivers/platform/surface/aggregator/controller.c:2383
#: drivers/platform/surface/aggregator/controller.c:2453
#: drivers/platform/surface/aggregator/controller.c:2506
#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:393
#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:75
#: drivers/platform/surface/aggregator/bus.c:459
msgid "``struct ssam_controller *ctrl``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:968
#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:2378
msgid "The controller the notifier has been registered on."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:970
#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:2309
#: drivers/platform/surface/aggregator/controller.c:2380
#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:574
#: include/linux/surface_aggregator/device.h:612
msgid "``struct ssam_event_notifier *n``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:969
#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:2379
#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:611
msgid "The event notifier to unregister."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:970
#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:612
msgid ""
"Unregister an event notifier. Decrement the usage counter of the associated "
"SAM event if the notifier is not marked as an observer. If the usage counter "
"reaches zero, the event will be disabled."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:23:
#: include/linux/surface_aggregator/controller.h:975
#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:2390
#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:620
msgid ""
"Returns zero on success, ``-ENOENT`` if the given notifier block has not "
"been registered on the controller. If the given notifier block was the last "
"one associated with its specific event, returns the status of the event-"
"disable EC-command."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:869
msgid ""
"Get the :c:type:`struct device <device>` associated with this controller."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:875
#: drivers/platform/surface/aggregator/controller.c:905
#: drivers/platform/surface/aggregator/controller.c:919
#: drivers/platform/surface/aggregator/controller.c:930
#: drivers/platform/surface/aggregator/controller.c:953
#: ../../../driver-api/surface_aggregator/client-api:28:
#: drivers/platform/surface/aggregator/core.c:118
msgid "``struct ssam_controller *c``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:871
msgid "The controller for which to get the device."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:873
msgid ""
"Returns the :c:type:`struct device <device>` associated with this "
"controller, providing its lower-level transport."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:899
msgid "Increment reference count of controller."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:900
#: drivers/platform/surface/aggregator/controller.c:914
msgid "The controller."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:902
msgid "Returns the controller provided as input."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:913
msgid "Decrement reference count of controller."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:924
msgid "Lock the controller against state transitions."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:925
msgid "The controller to lock."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:926
msgid ""
"Lock the controller against state transitions. Holding this lock guarantees "
"that the controller will not transition between states, i.e. if the "
"controller is in state \"started\", when this lock has been acquired, it "
"will remain in this state at least until the lock has been released."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:931
msgid ""
"Multiple clients may concurrently hold this lock. In other words: The "
"``statelock`` functions represent the read-lock part of a r/w-semaphore. "
"Actions causing state transitions of the controller must be executed while "
"holding the write-part of this r/w-semaphore (see ssam_controller_lock() and "
"ssam_controller_unlock() for that)."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:937
msgid ""
"See ssam_controller_stateunlock() for the corresponding unlock function."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:947
msgid "Unlock controller state transitions."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:948
msgid "The controller to unlock."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:949
msgid "See ssam_controller_statelock() for the corresponding lock function."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1488
msgid "Construct and write SAM request message to buffer."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1494
#: drivers/platform/surface/aggregator/controller.c:1773
msgid "``struct ssam_span *buf``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1490
msgid "The buffer to write the data to."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1491
msgid "The controller via which the request will be sent."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1493
#: drivers/platform/surface/aggregator/controller.c:1719
#: drivers/platform/surface/aggregator/controller.c:1771
msgid "``const struct ssam_request *spec``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1492
msgid "The request data and specification."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1493
msgid ""
"Constructs a SAM/SSH request message and writes it to the provided buffer. "
"The request and transport counters, specifically RQID and SEQ, will be set "
"in this call. These counters are obtained from the controller. It is thus "
"only valid to send the resulting message via the controller specified here."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1498
msgid ""
"For calculation of the required buffer size, refer to the "
"SSH_COMMAND_MESSAGE_LENGTH() macro."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1502
msgid ""
"Returns the number of bytes used in the buffer on success. Returns ``-"
"EINVAL`` if the payload length provided in the request specification is too "
"large (larger than ``SSH_COMMAND_MAX_PAYLOAD_SIZE``) or if the provided "
"buffer is too small."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1580
msgid "Allocate a synchronous request."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1586
msgid "``size_t payload_len``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1581
msgid "The length of the request payload."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1583
msgid "``gfp_t flags``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1582
msgid "Flags used for allocation."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1584
msgid "``struct ssam_request_sync **rqst``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1583
msgid "Where to store the pointer to the allocated request."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1585
msgid "``struct ssam_span *buffer``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1584
msgid ""
"Where to store the buffer descriptor for the message buffer of the request."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1586
msgid ""
"Allocates a synchronous request with corresponding message buffer. The "
"request still needs to be initialized ssam_request_sync_init() before it can "
"be submitted, and the message buffer data must still be set to the returned "
"buffer via ssam_request_sync_set_data() after it has been filled, if need be "
"with adjusted message length."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1592
msgid ""
"After use, the request and its corresponding message buffer should be freed "
"via ssam_request_sync_free(). The buffer must not be freed separately."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1596
msgid ""
"Returns zero on success, ``-ENOMEM`` if the request could not be allocated."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1617
msgid "Free a synchronous request."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1618
msgid "The request to be freed."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1619
msgid ""
"Free a synchronous request and its corresponding buffer allocated with "
"ssam_request_sync_alloc(). Do not use for requests allocated on the stack or "
"via any other function."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1623
msgid ""
"Warning: The caller must ensure that the request is not in use any more. I."
"e. the caller must ensure that it has the only reference to the request and "
"the request is not currently pending. This means that the caller has either "
"never submitted the request, request submission has failed, or the caller "
"has waited until the submitted request has been completed via "
"ssam_request_sync_wait()."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1638
msgid "Initialize a synchronous request struct."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1639
msgid "The request to initialize."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1641
msgid "``enum ssam_request_flags flags``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1640
msgid "The request flags."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1641
msgid ""
"Initializes the given request struct. Does not initialize the request "
"message data. This has to be done explicitly after this call via "
"ssam_request_sync_set_data() and the actual message data has to be written "
"via ssam_request_write_data()."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1647
msgid "Returns zero on success or ``-EINVAL`` if the given flags are invalid."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1667
msgid "Submit a synchronous request."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1668
msgid "The controller with which to submit the request."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1669
msgid "The request to submit."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1670
msgid ""
"Submit a synchronous request. The request has to be initialized and properly "
"set up, including response buffer (may be ``NULL`` if no response is "
"expected) and command message data. This function does not wait for the "
"request to be completed."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1675
msgid ""
"If this function succeeds, ssam_request_sync_wait() must be used to ensure "
"that the request has been completed before the response data can be accessed "
"and/or the request can be freed. On failure, the request may immediately be "
"freed."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1680
msgid ""
"This function may only be used if the controller is active, i.e. has been "
"initialized and not suspended."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1716
msgid "Execute a synchronous request."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1717
#: drivers/platform/surface/aggregator/controller.c:1769
msgid "The controller via which the request will be submitted."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1718
#: drivers/platform/surface/aggregator/controller.c:1770
msgid "The request specification and payload."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1720
#: drivers/platform/surface/aggregator/controller.c:1772
msgid "``struct ssam_response *rsp``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1720
msgid ""
"Allocates a synchronous request with its message data buffer on the heap via "
"ssam_request_sync_alloc(), fully initializes it via the provided request "
"specification, submits it, and finally waits for its completion before "
"freeing it and returning its status."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1726
#: drivers/platform/surface/aggregator/controller.c:1785
msgid "Returns the status of the request or any failure during setup."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1767
msgid ""
"Execute a synchronous request with the provided buffer as back-end for the "
"message buffer."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1772
msgid "The buffer for the request message data."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1773
msgid ""
"Allocates a synchronous request struct on the stack, fully initializes it "
"using the provided buffer as message data buffer, submits it, and then waits "
"for its completion before returning its status. The "
"SSH_COMMAND_MESSAGE_LENGTH() macro can be used to compute the required "
"message buffer size."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:1779
msgid ""
"This function does essentially the same as ssam_request_do_sync(), but "
"instead of dynamically allocating the request and message data buffer, it "
"uses the provided message data buffer and stores the (small) request struct "
"on the heap."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:2306
msgid "Register an event notifier."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:2307
msgid "The controller to register the notifier on."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:2308
#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:573
msgid "The event notifier to register."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:2309
#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:574
msgid ""
"Register an event notifier. Increment the usage counter of the associated "
"SAM event if the notifier is not marked as an observer. If the event is not "
"marked as an observer and is currently not enabled, it will be enabled "
"during this call. If the notifier is marked as an observer, no attempt will "
"be made at enabling any event and no reference count will be modified."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:2315
#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:580
msgid ""
"Notifiers marked as observers do not need to be associated with one specific "
"event, i.e. as long as no event matching is performed, only the event target "
"category needs to be set."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:2320
msgid ""
"Returns zero on success, ``-ENOSPC`` if there have already been ``INT_MAX`` "
"notifiers for the event ID/type associated with the notifier block "
"registered, ``-ENOMEM`` if the corresponding event entry could not be "
"allocated. If this is the first time that a notifier block is registered for "
"the specific associated event, returns the status of the event-enable EC-"
"command."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:2381
msgid "``bool disable``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:2380
msgid "Whether to disable the corresponding event on the EC."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:2381
msgid ""
"Unregister an event notifier. Decrement the usage counter of the associated "
"SAM event if the notifier is not marked as an observer. If the usage counter "
"reaches zero and ``disable`` equals ``true``, the event will be disabled."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:2385
msgid ""
"Useful for hot-removable devices, where communication may fail once the "
"device has been physically removed. In that case, specifying ``disable`` as "
"``false`` avoids communication with the EC."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:2447
msgid "Enable the specified event."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:2448
msgid "The controller to enable the event for."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:2450
#: drivers/platform/surface/aggregator/controller.c:2503
msgid "``struct ssam_event_registry reg``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:2449
msgid "The event registry to use for enabling the event."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:2451
#: drivers/platform/surface/aggregator/controller.c:2504
msgid "``struct ssam_event_id id``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:2450
msgid "The event ID specifying the event to be enabled."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:2452
#: drivers/platform/surface/aggregator/controller.c:2505
msgid "``u8 flags``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:2451
msgid "The SAM event flags used for enabling the event."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:2452
msgid ""
"Increment the event reference count of the specified event. If the event has "
"not been enabled previously, it will be enabled by this call."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:2456
msgid ""
"In general, ssam_notifier_register() with a non-observer notifier should be "
"preferred for enabling/disabling events, as this will guarantee proper "
"ordering and event forwarding in case of errors during event enabling/"
"disabling."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:2461
msgid ""
"Returns zero on success, ``-ENOSPC`` if the reference count for the "
"specified event has reached its maximum, ``-ENOMEM`` if the corresponding "
"event entry could not be allocated. If this is the first time that this "
"event has been enabled (i.e. the reference count was incremented from zero "
"to one by this call), returns the status of the event-enable EC-command."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:2500
msgid "Disable the specified event."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:2501
msgid "The controller to disable the event for."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:2502
msgid "The event registry to use for disabling the event."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:2503
msgid "The event ID specifying the event to be disabled."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:2504
msgid "The flags used when enabling the event."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:2505
msgid ""
"Decrement the reference count of the specified event. If the reference count "
"reaches zero, the event will be disabled."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:2509
msgid ""
"In general, ssam_notifier_register()/ssam_notifier_unregister() with a non-"
"observer notifier should be preferred for enabling/disabling events, as this "
"will guarantee proper ordering and event forwarding in case of errors during "
"event enabling/disabling."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:25:
#: drivers/platform/surface/aggregator/controller.c:2514
msgid ""
"Returns zero on success, ``-ENOENT`` if the given event has not been enabled "
"on the controller. If the reference count of the event reaches zero during "
"this call, returns the status of the event-disable EC-command."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:28:
#: drivers/platform/surface/aggregator/core.c:47
msgid "Get reference to SSAM controller."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:28:
#: drivers/platform/surface/aggregator/core.c:53
msgid "``void``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:28:
#: drivers/platform/surface/aggregator/core.c:1
msgid "no arguments"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:28:
#: drivers/platform/surface/aggregator/core.c:48
msgid ""
"Returns a reference to the SSAM controller of the system or ``NULL`` if "
"there is none, it hasn't been set up yet, or it has already been "
"unregistered. This function automatically increments the reference count of "
"the controller, thus the calling party must ensure that "
"ssam_controller_put() is called when it doesn't need the controller any more."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:28:
#: drivers/platform/surface/aggregator/core.c:112
msgid "Link an arbitrary client device to the controller."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:28:
#: drivers/platform/surface/aggregator/core.c:113
msgid "The controller to link to."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:28:
#: drivers/platform/surface/aggregator/core.c:115
#: drivers/platform/surface/aggregator/core.c:178
msgid "``struct device *client``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:28:
#: drivers/platform/surface/aggregator/core.c:114
#: drivers/platform/surface/aggregator/core.c:173
msgid "The client device."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:28:
#: drivers/platform/surface/aggregator/core.c:115
msgid ""
"Link an arbitrary client device to the controller by creating a device link "
"between it as consumer and the controller device as provider. This function "
"can be used for non-SSAM devices (or SSAM devices not registered as child "
"under the controller) to guarantee that the controller is valid for as long "
"as the driver of the client device is bound, and that proper suspend and "
"resume ordering is guaranteed."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:28:
#: drivers/platform/surface/aggregator/core.c:122
msgid ""
"The device link does not have to be destructed manually. It is removed "
"automatically once the driver of the client device unbinds."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:28:
#: drivers/platform/surface/aggregator/core.c:126
msgid ""
"Returns zero on success, ``-ENODEV`` if the controller is not ready or going "
"to be removed soon, or ``-ENOMEM`` if the device link could not be created "
"for other reasons."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:28:
#: drivers/platform/surface/aggregator/core.c:172
msgid "Bind an arbitrary client device to the controller."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:28:
#: drivers/platform/surface/aggregator/core.c:174
msgid ""
"Link an arbitrary client device to the controller by creating a device link "
"between it as consumer and the main controller device as provider. This "
"function can be used for non-SSAM devices to guarantee that the controller "
"returned by this function is valid for as long as the driver of the client "
"device is bound, and that proper suspend and resume ordering is guaranteed."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:28:
#: drivers/platform/surface/aggregator/core.c:180
msgid ""
"This function does essentially the same as ssam_client_link(), except that "
"it first fetches the main controller reference, then creates the link, and "
"finally returns this reference. Note that this function does not increment "
"the reference counter of the controller, as, due to the link, the controller "
"lifetime is assured as long as the driver of the client device is bound."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:28:
#: drivers/platform/surface/aggregator/core.c:187
msgid ""
"It is not valid to use the controller reference obtained by this method "
"outside of the driver bound to the client device at the time of calling this "
"function, without first incrementing the reference count of the controller "
"via ssam_controller_get(). Even after doing this, care must be taken that "
"requests are only submitted and notifiers are only (un-)registered when the "
"controller is active and not suspended. In other words: The device link only "
"lives as long as the client driver is bound and any guarantees enforced by "
"this link (e.g. active controller state) can only be relied upon as long as "
"this link exists and may need to be enforced in other ways afterwards."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:28:
#: drivers/platform/surface/aggregator/core.c:198
msgid ""
"The created device link does not have to be destructed manually. It is "
"removed automatically once the driver of the client device unbinds."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:28:
#: drivers/platform/surface/aggregator/core.c:202
msgid ""
"Returns the controller on success, an error pointer with ``-ENODEV`` if the "
"controller is not present, not ready or going to be removed soon, or ``-"
"ENOMEM`` if the device link could not be created for other reasons."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api.rst:33
msgid "Client Bus and Client Device API"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:27
msgid "SAM device domain."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:33
msgid "``SSAM_DOMAIN_VIRTUAL``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:34
msgid "Virtual device."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:36
msgid "``SSAM_DOMAIN_SERIALHUB``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:37
msgid "Physical device connected via Surface Serial Hub."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:37
msgid "Target categories for the virtual SAM domain."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:43
msgid "``SSAM_VIRTUAL_TC_HUB``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:44
msgid "Device hub category."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:45
msgid "Unique identifier for SSAM device."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:46
msgid "``domain``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:47
#: include/linux/surface_aggregator/device.h:78
msgid "Domain of the device."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:47
msgid "``category``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:48
#: include/linux/surface_aggregator/device.h:79
#: include/linux/surface_aggregator/device.h:109
#: include/linux/surface_aggregator/device.h:132
msgid "Target category of the device."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:48
msgid "``target``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:49
#: include/linux/surface_aggregator/device.h:80
#: include/linux/surface_aggregator/device.h:110
#: include/linux/surface_aggregator/device.h:133
msgid "Target ID of the device."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:50
#: include/linux/surface_aggregator/device.h:81
#: include/linux/surface_aggregator/device.h:111
#: include/linux/surface_aggregator/device.h:134
msgid "Instance ID of the device."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:50
msgid "``function``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:51
msgid ""
"Sub-function of the device. This field can be used to split a single SAM "
"device into multiple virtual subdevices to separate different functionality "
"of that device and allow one driver per such functionality."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:78
msgid "``SSAM_DEVICE (d, cat, tid, iid, fun)``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:76
msgid ""
"Initialize a :c:type:`struct ssam_device_id <ssam_device_id>` with the given "
"parameters."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:82
#: include/linux/surface_aggregator/device.h:227
#: include/linux/surface_aggregator/device.h:240
msgid "``d``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:80
#: include/linux/surface_aggregator/device.h:113
#: include/linux/surface_aggregator/device.h:136
msgid "``cat``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:83
#: include/linux/surface_aggregator/device.h:113
#: include/linux/surface_aggregator/device.h:136
msgid "``fun``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:82
#: include/linux/surface_aggregator/device.h:112
#: include/linux/surface_aggregator/device.h:135
msgid "Sub-function of the device."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:83
msgid ""
"Initializes a :c:type:`struct ssam_device_id <ssam_device_id>` with the "
"given parameters. See :c:type:`struct ssam_device_uid <ssam_device_uid>` for "
"details regarding the parameters. The special values ``SSAM_SSH_TID_ANY``, "
"``SSAM_SSH_IID_ANY``, and ``SSAM_SSH_FUN_ANY`` can be used to specify that "
"matching should ignore target ID, instance ID, and/or sub-function, "
"respectively. This macro initializes the ``match_flags`` field based on the "
"given parameters."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:91
msgid ""
"The parameters **d** and **cat** must be valid :c:type:`u8` values, the "
"parameters **tid**, **iid**, and **fun** must be either valid :c:type:`u8` "
"values or ``SSAM_SSH_TID_ANY``, ``SSAM_SSH_IID_ANY``, or "
"``SSAM_SSH_FUN_ANY``, respectively. Other non-:c:type:`u8` values are not "
"allowed."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:109
msgid "``SSAM_VDEV (cat, tid, iid, fun)``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:107
msgid ""
"Initialize a :c:type:`struct ssam_device_id <ssam_device_id>` as virtual "
"device with the given parameters."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:113
msgid ""
"Initializes a :c:type:`struct ssam_device_id <ssam_device_id>` with the "
"given parameters in the virtual domain. See :c:type:`struct ssam_device_uid "
"<ssam_device_uid>` for details regarding the parameters. The special values "
"``SSAM_SSH_TID_ANY``, ``SSAM_SSH_IID_ANY``, and ``SSAM_SSH_FUN_ANY`` can be "
"used to specify that matching should ignore target ID, instance ID, and/or "
"sub-function, respectively. This macro initializes the ``match_flags`` field "
"based on the given parameters."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:121
#: include/linux/surface_aggregator/device.h:144
msgid ""
"The parameter **cat** must be a valid :c:type:`u8` value, the parameters "
"**tid**, **iid**, and **fun** must be either valid :c:type:`u8` values or "
"``SSAM_SSH_TID_ANY``, ``SSAM_SSH_IID_ANY``, or ``SSAM_SSH_FUN_ANY``, "
"respectively. Other non-:c:type:`u8` values are not allowed."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:132
msgid "``SSAM_SDEV (cat, tid, iid, fun)``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:130
msgid ""
"Initialize a :c:type:`struct ssam_device_id <ssam_device_id>` as physical "
"SSH device with the given parameters."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:136
msgid ""
"Initializes a :c:type:`struct ssam_device_id <ssam_device_id>` with the "
"given parameters in the SSH domain. See :c:type:`struct ssam_device_uid "
"<ssam_device_uid>` for details regarding the parameters. The special values "
"``SSAM_SSH_TID_ANY``, ``SSAM_SSH_IID_ANY``, and ``SSAM_SSH_FUN_ANY`` can be "
"used to specify that matching should ignore target ID, instance ID, and/or "
"sub-function, respectively. This macro initializes the ``match_flags`` field "
"based on the given parameters."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:163
msgid "SSAM client device."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:164
msgid "``dev``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:165
msgid "Driver model representation of the device."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:166
msgid "SSAM controller managing this device."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:166
msgid "``uid``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:167
msgid "UID identifying the device."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:168
msgid ""
"Device state flags, see :c:type:`enum ssam_device_flags <ssam_device_flags>`."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:179
msgid "SSAM client device driver."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:180
msgid "``driver``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:181
msgid "Base driver model structure."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:181
msgid "``match_table``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:182
msgid "Match table specifying which devices the driver should bind to."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:182
msgid "``probe``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:183
msgid "Called when the driver is being bound to a device."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:183
msgid "``remove``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:184
msgid "Called when the driver is being unbound from the device."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:199
msgid "Check if the given device is a SSAM client device."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:205
msgid "``struct device *d``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:200
msgid "The device to test the type of."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:202
msgid ""
"Returns ``true`` if the specified device is of type :c:type:`struct "
"ssam_device <ssam_device>`, i.e. the device type points to "
"``ssam_device_type``, and ``false`` otherwise."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:223
msgid "``to_ssam_device (d)``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:221
msgid "Casts the given device to a SSAM client device."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:222
msgid "The device to cast."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:223
msgid ""
"Casts the given :c:type:`struct device <device>` to a :c:type:`struct "
"ssam_device <ssam_device>`. The caller has to ensure that the given device "
"is actually enclosed in a :c:type:`struct ssam_device <ssam_device>`, e.g. "
"by calling is_ssam_device()."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:228
msgid ""
"Returns a pointer to the :c:type:`struct ssam_device <ssam_device>` wrapping "
"the given device **d**."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:236
msgid "``to_ssam_device_driver (d)``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:234
msgid "Casts the given device driver to a SSAM client device driver."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:236
msgid "The driver to cast."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:237
msgid ""
"Casts the given :c:type:`struct device_driver <device_driver>` to a :c:type:"
"`struct ssam_device_driver <ssam_device_driver>`. The caller has to ensure "
"that the given driver is actually enclosed in a :c:type:`struct "
"ssam_device_driver <ssam_device_driver>`."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:242
msgid ""
"Returns the pointer to the :c:type:`struct ssam_device_driver "
"<ssam_device_driver>` wrapping the given device driver **d**."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:261
msgid "Mark the given device as hot-removed."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:267
#: include/linux/surface_aggregator/device.h:281
#: include/linux/surface_aggregator/device.h:296
#: include/linux/surface_aggregator/device.h:313
#: include/linux/surface_aggregator/device.h:329
#: include/linux/surface_aggregator/device.h:341
#: include/linux/surface_aggregator/device.h:415
#: include/linux/surface_aggregator/device.h:576
#: include/linux/surface_aggregator/device.h:614
#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:112
#: drivers/platform/surface/aggregator/bus.c:172
msgid "``struct ssam_device *sdev``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:262
msgid "The device to mark as hot-removed."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:263
msgid ""
"Mark the device as having been hot-removed. This signals drivers using the "
"device that communication with the device should be avoided and may lead to "
"timeouts."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:275
msgid "Check if the given device has been hot-removed."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:277
msgid "The device to check."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:278
msgid ""
"Checks if the given device has been marked as hot-removed. See "
"ssam_device_mark_hot_removed() for more details."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:282
msgid "Returns ``true`` if the device has been marked as hot-removed."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:290
msgid "Increment reference count of SSAM client device."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:291
msgid "The device to increment the reference count of."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:292
msgid ""
"Increments the reference count of the given SSAM client device by "
"incrementing the reference count of the enclosed :c:type:`struct device "
"<device>` via get_device()."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:296
msgid "See ssam_device_put() for the counter-part of this function."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:299
msgid "Returns the device provided as input."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:307
msgid "Decrement reference count of SSAM client device."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:308
msgid "The device to decrement the reference count of."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:309
msgid ""
"Decrements the reference count of the given SSAM client device by "
"decrementing the reference count of the enclosed :c:type:`struct device "
"<device>` via put_device()."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:313
msgid "See ssam_device_get() for the counter-part of this function."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:323
msgid "Get driver-data of SSAM client device."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:324
msgid "The device to get the driver-data from."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:326
msgid ""
"Returns the driver-data of the given device, previously set via "
"ssam_device_set_drvdata()."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:335
msgid "Set driver-data of SSAM client device."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:336
msgid "The device to set the driver-data of."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:338
msgid "``void *data``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:337
msgid "The data to set the device's driver-data pointer to."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:350
msgid "``ssam_device_driver_register (drv)``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:348
#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:343
msgid "Register a SSAM client device driver."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:354
#: include/linux/surface_aggregator/device.h:361
msgid "``drv``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:349
#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:344
msgid "The driver to register."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:357
msgid "``module_ssam_device_driver (drv)``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:355
msgid "Helper macro for SSAM device driver registration."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:357
msgid "The driver managed by this module."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:358
msgid ""
"Helper macro to register a SSAM device driver via module_init() and "
"module_exit(). This macro may only be used once per module and replaces the "
"aforementioned definitions."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:389
msgid "Register all client devices defined under the given parent device."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:395
#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:521
msgid "``struct device *dev``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:391
#: include/linux/surface_aggregator/device.h:411
#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:457
msgid "The parent device under which clients should be registered."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:392
#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:458
msgid "The controller with which client should be registered."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:393
#: include/linux/surface_aggregator/device.h:412
msgid ""
"Register all clients that have via firmware nodes been defined as children "
"of the given (parent) device. The respective child firmware nodes will be "
"associated with the correspondingly created child devices."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:397
#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:465
msgid ""
"The given controller will be used to instantiate the new devices. See "
"ssam_device_add() for details."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:401
#: include/linux/surface_aggregator/device.h:420
#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:476
msgid "Returns zero on success, nonzero on failure."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:409
msgid "Register all client devices defined under the given SSAM parent device."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:416
msgid ""
"The controller used by the parent device will be used to instantiate the new "
"devices. See ssam_device_add() for details."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:433
msgid "``SSAM_DEFINE_SYNC_REQUEST_CL_N (name, spec...)``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:431
msgid ""
"Define synchronous client-device SAM request function with neither argument "
"nor return value."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:435
msgid ""
"Defines a function executing the synchronous SAM request specified by "
"**spec**, with the request having neither argument nor return value. Device "
"specifying parameters are not hard-coded, but instead are provided via the "
"client device, specifically its UID, supplied when calling this function. "
"The generated function takes care of setting up the request struct, buffer "
"allocation, as well as execution of the request itself, returning once the "
"request has been fully completed. The required transport buffer will be "
"allocated on the stack."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:444
msgid ""
"The generated function is defined as ``static int name(struct ssam_device "
"*sdev)``, returning the status of the request, which is zero on success and "
"negative on failure. The ``sdev`` parameter specifies both the target device "
"of the request and by association the controller via which the request is "
"sent."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:465
msgid "``SSAM_DEFINE_SYNC_REQUEST_CL_W (name, atype, spec...)``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:463
msgid "Define synchronous client-device SAM request function with argument."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:468
msgid ""
"Defines a function executing the synchronous SAM request specified by "
"**spec**, with the request taking an argument of type **atype** and having "
"no return value. Device specifying parameters are not hard-coded, but "
"instead are provided via the client device, specifically its UID, supplied "
"when calling this function. The generated function takes care of setting up "
"the request struct, buffer allocation, as well as execution of the request "
"itself, returning once the request has been fully completed. The required "
"transport buffer will be allocated on the stack."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:477
msgid ""
"The generated function is defined as ``static int name(struct ssam_device "
"*sdev, const atype *arg)``, returning the status of the request, which is "
"zero on success and negative on failure. The ``sdev`` parameter specifies "
"both the target device of the request and by association the controller via "
"which the request is sent. The request's argument is specified via the "
"``arg`` pointer."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:499
msgid "``SSAM_DEFINE_SYNC_REQUEST_CL_R (name, rtype, spec...)``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:497
msgid ""
"Define synchronous client-device SAM request function with return value."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:502
msgid ""
"Defines a function executing the synchronous SAM request specified by "
"**spec**, with the request taking no argument but having a return value of "
"type **rtype**. Device specifying parameters are not hard-coded, but instead "
"are provided via the client device, specifically its UID, supplied when "
"calling this function. The generated function takes care of setting up the "
"request struct, buffer allocation, as well as execution of the request "
"itself, returning once the request has been fully completed. The required "
"transport buffer will be allocated on the stack."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:511
msgid ""
"The generated function is defined as ``static int name(struct ssam_device "
"*sdev, rtype *ret)``, returning the status of the request, which is zero on "
"success and negative on failure. The ``sdev`` parameter specifies both the "
"target device of the request and by association the controller via which the "
"request is sent. The request's return value is written to the memory pointed "
"to by the ``ret`` parameter."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:533
msgid "``SSAM_DEFINE_SYNC_REQUEST_CL_WR (name, atype, rtype, spec...)``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:531
msgid ""
"Define synchronous client-device SAM request function with argument and "
"return value."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:537
msgid ""
"Defines a function executing the synchronous SAM request specified by "
"**spec**, with the request taking an argument of type **atype** and having a "
"return value of type **rtype**. Device specifying parameters are not hard-"
"coded, but instead are provided via the client device, specifically its UID, "
"supplied when calling this function. The generated function takes care of "
"setting up the request struct, buffer allocation, as well as execution of "
"the request itself, returning once the request has been fully completed. The "
"required transport buffer will be allocated on the stack."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:546
msgid ""
"The generated function is defined as ``static int name(struct ssam_device "
"*sdev, const atype *arg, rtype *ret)``, returning the status of the request, "
"which is zero on success and negative on failure. The ``sdev`` parameter "
"specifies both the target device of the request and by association the "
"controller via which the request is sent. The request's argument is "
"specified via the ``arg`` pointer. The request's return value is written to "
"the memory pointed to by the ``ret`` parameter."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:570
msgid "Register an event notifier for the specified client device."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:572
msgid "The device the notifier should be registered on."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:585
msgid ""
"Returns zero on success, ``-ENOSPC`` if there have already been ``INT_MAX`` "
"notifiers for the event ID/type associated with the notifier block "
"registered, ``-ENOMEM`` if the corresponding event entry could not be "
"allocated, ``-ENODEV`` if the device is marked as hot-removed. If this is "
"the first time that a notifier block is registered for the specific "
"associated event, returns the status of the event-enable EC-command."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:608
msgid "Unregister an event notifier for the specified client device."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:610
msgid "The device the notifier has been registered on."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:35:
#: include/linux/surface_aggregator/device.h:616
msgid ""
"In case the device has been marked as hot-removed, the event will not be "
"disabled on the EC, as in those cases any attempt at doing so may time out."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:69
msgid "Allocate and initialize a SSAM client device."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:70
msgid "The controller under which the device should be added."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:72
msgid "``struct ssam_device_uid uid``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:71
msgid "The UID of the device to be added."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:72
msgid ""
"Allocates and initializes a new client device. The parent of the device will "
"be set to the controller device and the name will be set based on the UID. "
"Note that the device still has to be added via ssam_device_add(). Refer to "
"that function for more details."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:78
msgid ""
"Returns the newly allocated and initialized SSAM client device, or ``NULL`` "
"if it could not be allocated."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:106
msgid "Add a SSAM client device."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:107
msgid "The SSAM client device to be added."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:108
msgid ""
"Added client devices must be guaranteed to always have a valid and active "
"controller. Thus, this function will fail with ``-ENODEV`` if the controller "
"of the device has not been initialized yet, has been suspended, or has been "
"shut down."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:113
msgid ""
"The caller of this function should ensure that the corresponding call to "
"ssam_device_remove() is issued before the controller is shut down. If the "
"added device is a direct child of the controller device (default), it will "
"be automatically removed when the controller is shut down."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:118
msgid ""
"By default, the controller device will become the parent of the newly "
"created client device. The parent may be changed before ssam_device_add is "
"called, but care must be taken that a) the correct suspend/resume ordering "
"is guaranteed and b) the client device does not outlive the controller, i.e. "
"that the device is removed before the controller is being shut down. In case "
"these guarantees have to be manually enforced, please refer to the "
"ssam_client_link() and ssam_client_bind() functions, which are intended to "
"set up device-links for this purpose."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:128
msgid "Returns zero on success, a negative error code on failure."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:166
msgid "Remove a SSAM client device."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:167
msgid "The device to remove."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:168
msgid "Removes and unregisters the provided SSAM client device."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:229
msgid "Find the matching ID table entry for the given UID."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:235
msgid "``const struct ssam_device_id *table``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:230
msgid "The table to search in."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:232
msgid "``const struct ssam_device_uid uid``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:231
msgid "The UID to matched against the individual table entries."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:232
msgid ""
"Find the first match for the provided device UID in the provided ID table "
"and return it. Returns ``NULL`` if no match could be found."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:250
msgid ""
"Find and return the ID matching the device in the ID table of the bound "
"driver."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:256
#: drivers/platform/surface/aggregator/bus.c:287
msgid "``const struct ssam_device *dev``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:252
msgid "The device for which to get the matching ID table entry."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:253
msgid ""
"Find the fist match for the UID of the device in the ID table of the "
"currently bound driver and return it. Returns ``NULL`` if the device does "
"not have a driver bound to it, the driver does not have match_table (i.e. it "
"is ``NULL``), or there is no match in the driver's match_table."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:258
msgid ""
"This function essentially calls ssam_device_id_match() with the ID table of "
"the bound device driver and the UID of the device."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:262
msgid ""
"Returns the first match for the UID of the device in the device driver's "
"match table, or ``NULL`` if no such match could be found."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:281
msgid ""
"Find the ID matching the device in the ID table of the bound driver and "
"return its ``driver_data`` member."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:283
msgid "The device for which to get the match data."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:284
msgid ""
"Find the fist match for the UID of the device in the ID table of the "
"corresponding driver and return its driver_data. Returns ``NULL`` if the "
"device does not have a driver bound to it, the driver does not have "
"match_table (i.e. it is ``NULL``), there is no match in the driver's "
"match_table, or the match does not have any driver_data."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:290
msgid ""
"This function essentially calls ssam_device_get_match() and, if any match "
"could be found, returns its ``struct ssam_device_id.driver_data`` member."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:294
msgid ""
"Returns the driver data associated with the first match for the UID of the "
"device in the device driver's match table, or ``NULL`` if no such match "
"could be found."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:349
#: drivers/platform/surface/aggregator/bus.c:370
msgid "``struct ssam_device_driver *sdrv``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:346
msgid "``struct module *owner``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:345
msgid "The module owning the provided driver."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:346
msgid ""
"Please refer to the ssam_device_driver_register() macro for the normal way "
"to register a driver from inside its owning module."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:364
msgid "Unregister a SSAM device driver."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:365
msgid "The driver to unregister."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:455
msgid ""
"Register client devices defined under the given firmware node as children of "
"the given device."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:461
msgid "``struct device *parent``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:460
msgid "``struct fwnode_handle *node``"
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:459
msgid "The firmware node holding definitions of the devices to be added."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:460
msgid ""
"Register all clients that have been defined as children of the given root "
"firmware node as children of the given parent device. The respective child "
"firmware nodes will be associated with the correspondingly created child "
"devices."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:468
msgid ""
"Note that, generally, the use of either ssam_device_register_clients() or "
"ssam_register_clients() should be preferred as they directly use the "
"firmware node and/or controller associated with the given device. This "
"function is only intended for use when different device specifications (e.g. "
"ACPI and firmware nodes) need to be combined (as is done in the platform hub "
"of the device registry)."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:515
msgid ""
"Remove SSAM client devices registered as direct children under the given "
"parent device."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:517
msgid "The (parent) device to remove all direct clients for."
msgstr ""

#: ../../../driver-api/surface_aggregator/client-api:37:
#: drivers/platform/surface/aggregator/bus.c:518
msgid ""
"Remove all SSAM client devices registered as direct children under the given "
"device. Note that this only accounts for direct children of the device. "
"Refer to ssam_device_add()/ssam_device_remove() for more details."
msgstr ""
