# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-14 08:59+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../driver-api/surface_aggregator/clients/san.rst:9
msgid "Surface ACPI Notify"
msgstr ""

#: ../../../driver-api/surface_aggregator/clients/san.rst:11
msgid ""
"The Surface ACPI Notify (SAN) device provides the bridge between ACPI and "
"SAM controller. Specifically, ACPI code can execute requests and handle "
"battery and thermal events via this interface. In addition to this, events "
"relating to the discrete GPU (dGPU) of the Surface Book 2 can be sent from "
"ACPI code (note: the Surface Book 3 uses a different method for this). The "
"only currently known event sent via this interface is a dGPU power-on "
"notification. While this driver handles the former part internally, it only "
"relays the dGPU events to any other driver interested via its public API and "
"does not handle them."
msgstr ""

#: ../../../driver-api/surface_aggregator/clients/san.rst:21
msgid ""
"The public interface of this driver is split into two parts: Client "
"registration and notifier-block registration."
msgstr ""

#: ../../../driver-api/surface_aggregator/clients/san.rst:24
msgid ""
"A client to the SAN interface can be linked as consumer to the SAN device "
"via |san_client_link|. This can be used to ensure that the a client "
"receiving dGPU events does not miss any events due to the SAN interface not "
"being set up as this forces the client driver to unbind once the SAN driver "
"is unbound."
msgstr ""

#: ../../../driver-api/surface_aggregator/clients/san.rst:30
msgid ""
"Notifier-blocks can be registered by any device for as long as the module is "
"loaded, regardless of being linked as client or not. Registration is done "
"with |san_dgpu_notifier_register|. If the notifier is not needed any more, "
"it should be unregistered via |san_dgpu_notifier_unregister|."
msgstr ""

#: ../../../driver-api/surface_aggregator/clients/san.rst:35
msgid "Consult the API documentation below for more details."
msgstr ""

#: ../../../driver-api/surface_aggregator/clients/san.rst:39
msgid "API Documentation"
msgstr ""

#: ../../../driver-api/surface_aggregator/clients/san:41:
#: include/linux/surface_acpi_notify.h:18
msgid "Discrete GPU ACPI event."
msgstr ""

#: ../../../driver-api/surface_aggregator/clients/san:41:
#: include/linux/surface_acpi_notify.h:22
msgid "**Definition**::"
msgstr ""

#: ../../../driver-api/surface_aggregator/clients/san:41:
#: include/linux/surface_acpi_notify.h:33
msgid "**Members**"
msgstr ""

#: ../../../driver-api/surface_aggregator/clients/san:41:
#: include/linux/surface_acpi_notify.h:19
msgid "``category``"
msgstr ""

#: ../../../driver-api/surface_aggregator/clients/san:41:
#: include/linux/surface_acpi_notify.h:20
msgid "Category of the event."
msgstr ""

#: ../../../driver-api/surface_aggregator/clients/san:41:
#: include/linux/surface_acpi_notify.h:20
msgid "``target``"
msgstr ""

#: ../../../driver-api/surface_aggregator/clients/san:41:
#: include/linux/surface_acpi_notify.h:21
msgid "Target ID of the event source."
msgstr ""

#: ../../../driver-api/surface_aggregator/clients/san:41:
#: include/linux/surface_acpi_notify.h:21
msgid "``command``"
msgstr ""

#: ../../../driver-api/surface_aggregator/clients/san:41:
#: include/linux/surface_acpi_notify.h:22
msgid "Command ID of the event."
msgstr ""

#: ../../../driver-api/surface_aggregator/clients/san:41:
#: include/linux/surface_acpi_notify.h:22
msgid "``instance``"
msgstr ""

#: ../../../driver-api/surface_aggregator/clients/san:41:
#: include/linux/surface_acpi_notify.h:23
msgid "Instance ID of the event source."
msgstr ""

#: ../../../driver-api/surface_aggregator/clients/san:41:
#: include/linux/surface_acpi_notify.h:23
msgid "``length``"
msgstr ""

#: ../../../driver-api/surface_aggregator/clients/san:41:
#: include/linux/surface_acpi_notify.h:24
msgid "Length of the event's payload data (in bytes)."
msgstr ""

#: ../../../driver-api/surface_aggregator/clients/san:41:
#: include/linux/surface_acpi_notify.h:24
msgid "``payload``"
msgstr ""

#: ../../../driver-api/surface_aggregator/clients/san:41:
#: include/linux/surface_acpi_notify.h:25
msgid "Pointer to the event's payload data."
msgstr ""

#: ../../../driver-api/surface_aggregator/clients/san:43:
#: drivers/platform/surface/surface_acpi_notify.c:71
msgid "Link client as consumer to SAN device."
msgstr ""

#: ../../../driver-api/surface_aggregator/clients/san:43:
#: drivers/platform/surface/surface_acpi_notify.c:75
#: drivers/platform/surface/surface_acpi_notify.c:119
#: drivers/platform/surface/surface_acpi_notify.c:133
msgid "**Parameters**"
msgstr ""

#: ../../../driver-api/surface_aggregator/clients/san:43:
#: drivers/platform/surface/surface_acpi_notify.c:77
msgid "``struct device *client``"
msgstr ""

#: ../../../driver-api/surface_aggregator/clients/san:43:
#: drivers/platform/surface/surface_acpi_notify.c:72
msgid "The client to link."
msgstr ""

#: ../../../driver-api/surface_aggregator/clients/san:43:
#: drivers/platform/surface/surface_acpi_notify.c:74
#: drivers/platform/surface/surface_acpi_notify.c:118
msgid "**Description**"
msgstr ""

#: ../../../driver-api/surface_aggregator/clients/san:43:
#: drivers/platform/surface/surface_acpi_notify.c:73
msgid ""
"Sets up a device link between the provided client device as consumer and the "
"SAN device as provider. This function can be used to ensure that the SAN "
"interface has been set up and will be set up for as long as the driver of "
"the client device is bound. This guarantees that, during that time, all dGPU "
"events will be received by any registered notifier."
msgstr ""

#: ../../../driver-api/surface_aggregator/clients/san:43:
#: drivers/platform/surface/surface_acpi_notify.c:79
msgid ""
"The link will be automatically removed once the client device's driver is "
"unbound."
msgstr ""

#: ../../../driver-api/surface_aggregator/clients/san:43:
#: drivers/platform/surface/surface_acpi_notify.c:82
msgid "**Return**"
msgstr ""

#: ../../../driver-api/surface_aggregator/clients/san:43:
#: drivers/platform/surface/surface_acpi_notify.c:83
msgid ""
"Returns zero on success, ``-ENXIO`` if the SAN interface has not been set up "
"yet, and ``-ENOMEM`` if device link creation failed."
msgstr ""

#: ../../../driver-api/surface_aggregator/clients/san:43:
#: drivers/platform/surface/surface_acpi_notify.c:115
msgid "Register a SAN dGPU notifier."
msgstr ""

#: ../../../driver-api/surface_aggregator/clients/san:43:
#: drivers/platform/surface/surface_acpi_notify.c:121
#: drivers/platform/surface/surface_acpi_notify.c:135
msgid "``struct notifier_block *nb``"
msgstr ""

#: ../../../driver-api/surface_aggregator/clients/san:43:
#: drivers/platform/surface/surface_acpi_notify.c:116
msgid "The notifier-block to register."
msgstr ""

#: ../../../driver-api/surface_aggregator/clients/san:43:
#: drivers/platform/surface/surface_acpi_notify.c:117
msgid ""
"Registers a SAN dGPU notifier, receiving any new SAN dGPU events sent from "
"ACPI. The registered notifier will be called with :c:type:`struct "
"san_dgpu_event <san_dgpu_event>` as notifier data and the command ID of that "
"event as notifier action."
msgstr ""

#: ../../../driver-api/surface_aggregator/clients/san:43:
#: drivers/platform/surface/surface_acpi_notify.c:129
msgid "Unregister a SAN dGPU notifier."
msgstr ""

#: ../../../driver-api/surface_aggregator/clients/san:43:
#: drivers/platform/surface/surface_acpi_notify.c:130
msgid "The notifier-block to unregister."
msgstr ""
