# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../driver-api/usb/error-codes.rst:4
msgid "USB Error codes"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:0
msgid "Revised"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:6
msgid "2004-Oct-21"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:8
msgid ""
"This is the documentation of (hopefully) all possible error codes (and their "
"interpretation) that can be returned from usbcore."
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:11
msgid ""
"Some of them are returned by the Host Controller Drivers (HCDs), which "
"device drivers only see through usbcore.  As a rule, all the HCDs should "
"behave the same except for transfer speed dependent behaviors and the way "
"certain faults are reported."
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:18
msgid "Error codes returned by :c:func:`usb_submit_urb`"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:20
msgid "Non-USB-specific:"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:24
#: ../../../driver-api/usb/error-codes.rst:101
msgid "0"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:24
msgid "URB submission went fine"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:26
msgid "``-ENOMEM``"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:26
msgid "no memory for allocation of internal structures"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:29
msgid "USB-specific:"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:32
msgid "``-EBUSY``"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:32
msgid "The URB is already active."
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:34
#: ../../../driver-api/usb/error-codes.rst:157
msgid "``-ENODEV``"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:34
msgid "specified USB-device or bus doesn't exist"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:36
#: ../../../driver-api/usb/error-codes.rst:103
msgid "``-ENOENT``"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:36
msgid "specified interface or endpoint does not exist or is not enabled"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:39
msgid "``-ENXIO``"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:39
msgid ""
"host controller driver does not support queuing of this type of urb.  (treat "
"as a host controller bug.)"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:42
#: ../../../driver-api/usb/error-codes.rst:165
#: ../../../driver-api/usb/error-codes.rst:201
msgid "``-EINVAL``"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:42
msgid "Invalid transfer type specified (or not supported)"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:43
msgid "Invalid or unsupported periodic transfer interval"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:44
msgid "ISO: attempted to change transfer interval"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:45
msgid "ISO: ``number_of_packets`` is < 0"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:46
msgid "various other cases"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:48
#: ../../../driver-api/usb/error-codes.rst:161
msgid "``-EXDEV``"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:48
msgid ""
"ISO: ``URB_ISO_ASAP`` wasn't specified and all the frames the URB would be "
"scheduled in have already expired."
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:52
msgid "``-EFBIG``"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:52
msgid "Host controller driver can't schedule that many ISO frames."
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:55
msgid "``-EPIPE``"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:55
msgid ""
"The pipe type specified in the URB doesn't match the endpoint's actual type."
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:58
msgid "``-EMSGSIZE``"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:58
msgid ""
"endpoint maxpacket size is zero; it is not usable in the current interface "
"altsetting."
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:60
msgid "ISO packet is larger than the endpoint maxpacket."
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:61
msgid ""
"requested data transfer length is invalid: negative or too large for the "
"host controller."
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:64
msgid "``-EBADR``"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:64
msgid ""
"The wLength value in a control URB's setup packet does not match the URB's "
"transfer_buffer_length."
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:67
msgid "``-ENOSPC``"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:67
msgid ""
"This request would overcommit the usb bandwidth reserved for periodic "
"transfers (interrupt, isochronous)."
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:70
#: ../../../driver-api/usb/error-codes.rst:171
msgid "``-ESHUTDOWN``"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:70
msgid ""
"The device or host controller has been disabled due to some problem that "
"could not be worked around."
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:73
msgid "``-EPERM``"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:73
msgid "Submission failed because ``urb->reject`` was set."
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:75
msgid "``-EHOSTUNREACH``"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:75
msgid "URB was rejected because the device is suspended."
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:77
msgid "``-ENOEXEC``"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:77
msgid "A control URB doesn't contain a Setup packet."
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:81
msgid ""
"Error codes returned by ``in urb->status`` or in ``iso_frame_desc[n]."
"status`` (for ISO)"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:83
msgid ""
"USB device drivers may only test urb status values in completion handlers. "
"This is because otherwise there would be a race between HCDs updating these "
"values on one CPU, and device drivers testing them on another CPU."
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:87
msgid ""
"A transfer's actual_length may be positive even when an error has been "
"reported.  That's because transfers often involve several packets, so that "
"one or more packets could finish before an error stops further endpoint I/O."
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:91
msgid ""
"For isochronous URBs, the urb status value is non-zero only if the URB is "
"unlinked, the device is removed, the host controller is disabled, or the "
"total transferred length is less than the requested length and the "
"``URB_SHORT_NOT_OK`` flag is set.  Completion handlers for isochronous URBs "
"should only see ``urb->status`` set to zero, ``-ENOENT``, ``-ECONNRESET``, "
"``-ESHUTDOWN``, or ``-EREMOTEIO``. Individual frame descriptor status fields "
"may report more status codes."
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:101
msgid "Transfer completed successfully"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:103
msgid "URB was synchronously unlinked by :c:func:`usb_unlink_urb`"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:106
msgid "``-EINPROGRESS``"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:106
msgid ""
"URB still pending, no results yet (That is, if drivers see this it's a bug.)"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:109
msgid "``-EPROTO`` [#f1]_, [#f2]_"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:109
msgid "bitstuff error"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:110
#: ../../../driver-api/usb/error-codes.rst:115
msgid "no response packet received within the prescribed bus turn-around time"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:112
#: ../../../driver-api/usb/error-codes.rst:117
msgid "unknown USB error"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:114
msgid "``-EILSEQ`` [#f1]_, [#f2]_"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:114
msgid "CRC mismatch"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:119
msgid ""
"Note that often the controller hardware does not distinguish among cases a), "
"b), and c), so a driver cannot tell whether there was a protocol error, a "
"failure to respond (often caused by device disconnect), or some other fault."
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:126
msgid "``-ETIME`` [#f2]_"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:126
msgid ""
"No response packet received within the prescribed bus turn-around time.  "
"This error may instead be reported as ``-EPROTO`` or ``-EILSEQ``."
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:131
#: ../../../driver-api/usb/error-codes.rst:209
msgid "``-ETIMEDOUT``"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:131
msgid ""
"Synchronous USB message functions use this code to indicate timeout expired "
"before the transfer completed, and no other error was reported by HC."
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:136
msgid "``-EPIPE`` [#f2]_"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:136
msgid ""
"Endpoint stalled.  For non-control endpoints, reset this status with :c:func:"
"`usb_clear_halt`."
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:140
msgid "``-ECOMM``"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:140
msgid ""
"During an IN transfer, the host controller received data from an endpoint "
"faster than it could be written to system memory"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:144
msgid "``-ENOSR``"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:144
msgid ""
"During an OUT transfer, the host controller could not retrieve data from "
"system memory fast enough to keep up with the USB data rate"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:148
msgid "``-EOVERFLOW`` [#f1]_"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:148
msgid ""
"The amount of data returned by the endpoint was greater than either the max "
"packet size of the endpoint or the remaining buffer size. \"Babble\"."
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:153
msgid "``-EREMOTEIO``"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:153
msgid ""
"The data read from the endpoint did not fill the specified buffer, and "
"``URB_SHORT_NOT_OK`` was set in ``urb->transfer_flags``."
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:157
msgid ""
"Device was removed.  Often preceded by a burst of other errors, since the "
"hub driver doesn't detect device removal events immediately."
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:161
msgid ""
"ISO transfer only partially completed (only set in ``iso_frame_desc[n]."
"status``, not ``urb->status``)"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:165
msgid "ISO madness, if this happens: Log off and go home"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:168
msgid "``-ECONNRESET``"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:168
msgid "URB was asynchronously unlinked by :c:func:`usb_unlink_urb`"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:171
msgid ""
"The device or host controller has been disabled due to some problem that "
"could not be worked around, such as a physical disconnect."
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:180
msgid ""
"Error codes like ``-EPROTO``, ``-EILSEQ`` and ``-EOVERFLOW`` normally "
"indicate hardware problems such as bad devices (including firmware) or "
"cables."
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:186
msgid ""
"This is also one of several codes that different kinds of host controller "
"use to indicate a transfer has failed because of device disconnect.  In the "
"interval before the hub driver starts disconnect processing, devices may "
"receive such fault reports for every request."
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:194
msgid "Error codes returned by usbcore-functions"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:196
msgid "expect also other submit and transfer status codes"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:198
msgid ":c:func:`usb_register`:"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:201
msgid "error during registering new driver"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:204
msgid ""
"``usb_get_*/usb_set_*()``, :c:func:`usb_control_msg`, :c:func:"
"`usb_bulk_msg()`:"
msgstr ""

#: ../../../driver-api/usb/error-codes.rst:209
msgid "Timeout expired before the transfer completed."
msgstr ""
