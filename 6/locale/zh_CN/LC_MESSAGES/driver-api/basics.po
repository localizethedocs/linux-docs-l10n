# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-28 09:03+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../driver-api/basics.rst:2
msgid "Driver Basics"
msgstr ""

#: ../../../driver-api/basics.rst:5
msgid "Driver Entry and Exit points"
msgstr ""

#: ../../../driver-api/basics:7: include/linux/module.h:84
msgid "``module_init (x)``"
msgstr ""

#: ../../../driver-api/basics:7: include/linux/module.h:82
msgid "driver initialization entry point"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:29
#: include/linux/atomic/atomic-long.h:49 include/linux/atomic/atomic-long.h:69
#: include/linux/atomic/atomic-long.h:90 include/linux/atomic/atomic-long.h:111
#: include/linux/atomic/atomic-long.h:132
#: include/linux/atomic/atomic-long.h:153
#: include/linux/atomic/atomic-long.h:174
#: include/linux/atomic/atomic-long.h:195
#: include/linux/atomic/atomic-long.h:216
#: include/linux/atomic/atomic-long.h:237
#: include/linux/atomic/atomic-long.h:258
#: include/linux/atomic/atomic-long.h:279
#: include/linux/atomic/atomic-long.h:300
#: include/linux/atomic/atomic-long.h:321
#: include/linux/atomic/atomic-long.h:342
#: include/linux/atomic/atomic-long.h:363
#: include/linux/atomic/atomic-long.h:384
#: include/linux/atomic/atomic-long.h:405
#: include/linux/atomic/atomic-long.h:426
#: include/linux/atomic/atomic-long.h:447
#: include/linux/atomic/atomic-long.h:468
#: include/linux/atomic/atomic-long.h:489
#: include/linux/atomic/atomic-long.h:509
#: include/linux/atomic/atomic-long.h:529
#: include/linux/atomic/atomic-long.h:549
#: include/linux/atomic/atomic-long.h:569
#: include/linux/atomic/atomic-long.h:589
#: include/linux/atomic/atomic-long.h:609
#: include/linux/atomic/atomic-long.h:629
#: include/linux/atomic/atomic-long.h:649
#: include/linux/atomic/atomic-long.h:669
#: include/linux/atomic/atomic-long.h:689
#: include/linux/atomic/atomic-long.h:709
#: include/linux/atomic/atomic-long.h:729
#: include/linux/atomic/atomic-long.h:749
#: include/linux/atomic/atomic-long.h:769
#: include/linux/atomic/atomic-long.h:789
#: include/linux/atomic/atomic-long.h:809
#: include/linux/atomic/atomic-long.h:829
#: include/linux/atomic/atomic-long.h:849
#: include/linux/atomic/atomic-long.h:870
#: include/linux/atomic/atomic-long.h:891
#: include/linux/atomic/atomic-long.h:912
#: include/linux/atomic/atomic-long.h:933
#: include/linux/atomic/atomic-long.h:954
#: include/linux/atomic/atomic-long.h:975
#: include/linux/atomic/atomic-long.h:996
#: include/linux/atomic/atomic-long.h:1017
#: include/linux/atomic/atomic-long.h:1038
#: include/linux/atomic/atomic-long.h:1059
#: include/linux/atomic/atomic-long.h:1080
#: include/linux/atomic/atomic-long.h:1101
#: include/linux/atomic/atomic-long.h:1122
#: include/linux/atomic/atomic-long.h:1143
#: include/linux/atomic/atomic-long.h:1164
#: include/linux/atomic/atomic-long.h:1185
#: include/linux/atomic/atomic-long.h:1206
#: include/linux/atomic/atomic-long.h:1227
#: include/linux/atomic/atomic-long.h:1248
#: include/linux/atomic/atomic-long.h:1269
#: include/linux/atomic/atomic-long.h:1290
#: include/linux/atomic/atomic-long.h:1311
#: include/linux/atomic/atomic-long.h:1332
#: include/linux/atomic/atomic-long.h:1353
#: include/linux/atomic/atomic-long.h:1376
#: include/linux/atomic/atomic-long.h:1399
#: include/linux/atomic/atomic-long.h:1422
#: include/linux/atomic/atomic-long.h:1445
#: include/linux/atomic/atomic-long.h:1469
#: include/linux/atomic/atomic-long.h:1493
#: include/linux/atomic/atomic-long.h:1517
#: include/linux/atomic/atomic-long.h:1541
#: include/linux/atomic/atomic-long.h:1562
#: include/linux/atomic/atomic-long.h:1582
#: include/linux/atomic/atomic-long.h:1602
#: include/linux/atomic/atomic-long.h:1623
#: include/linux/atomic/atomic-long.h:1644
#: include/linux/atomic/atomic-long.h:1665
#: include/linux/atomic/atomic-long.h:1686
#: include/linux/atomic/atomic-long.h:1709
#: include/linux/atomic/atomic-long.h:1732
#: include/linux/atomic/atomic-long.h:1753
#: include/linux/atomic/atomic-long.h:1774
#: include/linux/atomic/atomic-long.h:1795 ../../../driver-api/basics:108:
#: lib/kobject.c:150 lib/kobject.c:304 lib/kobject.c:326 lib/kobject.c:382
#: lib/kobject.c:438 lib/kobject.c:469 lib/kobject.c:538 lib/kobject.c:617
#: lib/kobject.c:637 lib/kobject.c:729 lib/kobject.c:781 lib/kobject.c:855
#: lib/kobject.c:887 lib/kobject.c:900 lib/kobject.c:992
#: ../../../driver-api/basics:111: lib/kobject_uevent.c:468
#: lib/kobject_uevent.c:650 lib/kobject_uevent.c:665
#: ../../../driver-api/basics:117: include/linux/kernel.h:247
#: include/linux/kernel.h:306 ../../../driver-api/basics:121:
#: kernel/printk/printk.c:247 kernel/printk/printk.c:271
#: kernel/printk/printk.c:282 kernel/printk/printk.c:298
#: kernel/printk/printk.c:2658 kernel/printk/printk.c:2811
#: kernel/printk/printk.c:2833 kernel/printk/printk.c:3285
#: kernel/printk/printk.c:3309 kernel/printk/printk.c:4232
#: kernel/printk/printk.c:4611 kernel/printk/printk.c:4636
#: kernel/printk/printk.c:4666 kernel/printk/printk.c:4749
#: kernel/printk/printk.c:4805 kernel/printk/printk.c:4889
#: kernel/printk/printk.c:4941 kernel/printk/printk.c:4955
#: kernel/printk/printk.c:5011 ../../../driver-api/basics:125:
#: kernel/panic.c:426 kernel/panic.c:746 ../../../driver-api/basics:131:
#: drivers/base/devres.c:152 drivers/base/devres.c:180
#: drivers/base/devres.c:222 drivers/base/devres.c:239
#: drivers/base/devres.c:277 drivers/base/devres.c:307
#: drivers/base/devres.c:342 drivers/base/devres.c:377
#: drivers/base/devres.c:410 drivers/base/devres.c:544
#: drivers/base/devres.c:610 drivers/base/devres.c:635
#: drivers/base/devres.c:665 drivers/base/devres.c:740
#: drivers/base/devres.c:778 drivers/base/devres.c:812
#: drivers/base/devres.c:848 drivers/base/devres.c:883
#: drivers/base/devres.c:983 drivers/base/devres.c:1002
#: drivers/base/devres.c:1024 drivers/base/devres.c:1056
#: drivers/base/devres.c:1080 drivers/base/devres.c:1104
#: drivers/base/devres.c:1125 drivers/base/devres.c:1166
#: drivers/base/devres.c:1205 drivers/base/devres.c:1237
#: drivers/base/devres.c:1273 ../../../driver-api/basics:13:
#: include/linux/mod_devicetable.h:229 ../../../driver-api/basics:21:
#: include/linux/sched.h:1872 include/linux/sched.h:1890
#: include/linux/sched.h:1914 ../../../driver-api/basics:24:
#: kernel/sched/core.c:4416 kernel/sched/core.c:4872 kernel/sched/core.c:4885
#: kernel/sched/core.c:7168 ../../../driver-api/basics:27:
#: kernel/sched/cpupri.c:133 kernel/sched/cpupri.c:206
#: kernel/sched/cpupri.c:278 kernel/sched/cpupri.c:311
#: ../../../driver-api/basics:30: kernel/sched/fair.c:4070
#: kernel/sched/fair.c:4548 kernel/sched/fair.c:4627 kernel/sched/fair.c:4682
#: kernel/sched/fair.c:7955 kernel/sched/fair.c:10211 kernel/sched/fair.c:10243
#: kernel/sched/fair.c:10347 kernel/sched/fair.c:10442
#: kernel/sched/fair.c:10643 kernel/sched/fair.c:11027
#: kernel/sched/fair.c:11095 kernel/sched/fair.c:11293
#: ../../../driver-api/basics:33: include/linux/completion.h:49
#: include/linux/completion.h:65 include/linux/completion.h:82
#: include/linux/completion.h:95 ../../../driver-api/basics:39:
#: include/linux/jiffies.h:96 include/linux/jiffies.h:121
#: include/linux/jiffies.h:136 include/linux/jiffies.h:145
#: include/linux/jiffies.h:156 include/linux/jiffies.h:165
#: include/linux/jiffies.h:177 include/linux/jiffies.h:193
#: include/linux/jiffies.h:207 include/linux/jiffies.h:219
#: include/linux/jiffies.h:233 include/linux/jiffies.h:245
#: include/linux/jiffies.h:261 include/linux/jiffies.h:268
#: include/linux/jiffies.h:276 include/linux/jiffies.h:283
#: include/linux/jiffies.h:291 include/linux/jiffies.h:298
#: include/linux/jiffies.h:306 include/linux/jiffies.h:313
#: include/linux/jiffies.h:445 include/linux/jiffies.h:496
#: include/linux/jiffies.h:534 include/linux/jiffies.h:561
#: ../../../driver-api/basics:42: kernel/time/time.c:373 kernel/time/time.c:399
#: kernel/time/time.c:425 kernel/time/time.c:487 kernel/time/time.c:522
#: kernel/time/time.c:550 kernel/time/time.c:587 kernel/time/time.c:601
#: kernel/time/time.c:638 kernel/time/time.c:661 kernel/time/time.c:681
#: kernel/time/time.c:704 kernel/time/time.c:754 kernel/time/time.c:770
#: kernel/time/time.c:786 kernel/time/time.c:819 kernel/time/time.c:840
#: kernel/time/time.c:868 kernel/time/time.c:900 kernel/time/time.c:946
#: kernel/time/time.c:964 kernel/time/time.c:983 kernel/time/time.c:1005
#: kernel/time/time.c:1028 kernel/time/time.c:1046
#: ../../../driver-api/basics:45: kernel/time/timer.c:393
#: kernel/time/timer.c:422 kernel/time/timer.c:443 kernel/time/timer.c:464
#: kernel/time/timer.c:483 kernel/time/timer.c:498 kernel/time/timer.c:869
#: kernel/time/timer.c:1149 kernel/time/timer.c:1171 kernel/time/timer.c:1204
#: kernel/time/timer.c:1230 kernel/time/timer.c:1258 kernel/time/timer.c:1275
#: kernel/time/timer.c:1292 kernel/time/timer.c:1395 kernel/time/timer.c:1415
#: kernel/time/timer.c:1476 kernel/time/timer.c:1636 kernel/time/timer.c:1684
#: ../../../driver-api/basics:51: include/linux/ktime.h:34
#: include/linux/ktime.h:88 include/linux/ktime.h:107 include/linux/ktime.h:119
#: include/linux/ktime.h:204 ../../../driver-api/basics:54:
#: include/linux/hrtimer.h:253 include/linux/hrtimer.h:292
#: include/linux/hrtimer.h:306 include/linux/hrtimer.h:329
#: include/linux/hrtimer.h:356 ../../../driver-api/basics:57:
#: kernel/time/hrtimer.c:1021 kernel/time/hrtimer.c:1300
#: kernel/time/hrtimer.c:1334 kernel/time/hrtimer.c:1473
#: kernel/time/hrtimer.c:1495 kernel/time/hrtimer.c:1654
#: kernel/time/hrtimer.c:1675 kernel/time/hrtimer.c:2023
#: kernel/time/hrtimer.c:2079 ../../../driver-api/basics:63:
#: include/linux/wait.h:100 include/linux/wait.h:135 include/linux/wait.h:148
#: include/linux/wait.h:256 include/linux/wait.h:338 include/linux/wait.h:377
#: include/linux/wait.h:403 include/linux/wait.h:466 include/linux/wait.h:491
#: include/linux/wait.h:520 include/linux/wait.h:575 include/linux/wait.h:601
#: include/linux/wait.h:667 include/linux/wait.h:687 include/linux/wait.h:716
#: include/linux/wait.h:749 include/linux/wait.h:801 include/linux/wait.h:828
#: include/linux/wait.h:855 include/linux/wait.h:886 include/linux/wait.h:921
#: include/linux/wait.h:948 include/linux/wait.h:990 include/linux/wait.h:1030
#: include/linux/wait.h:1060 include/linux/wait.h:1095
#: include/linux/wait.h:1129 include/linux/wait.h:1167
#: ../../../driver-api/basics:66: kernel/sched/wait.c:137
#: kernel/sched/wait.c:175 kernel/sched/wait.c:201 kernel/sched/wait.c:371
#: ../../../driver-api/basics:72: kernel/exit.c:1305
#: ../../../driver-api/basics:75: kernel/signal.c:268 kernel/signal.c:301
#: kernel/signal.c:322 kernel/signal.c:350 kernel/signal.c:840
#: kernel/signal.c:1808 kernel/signal.c:2271 kernel/signal.c:2533
#: kernel/signal.c:2658 kernel/signal.c:2691 kernel/signal.c:3052
#: kernel/signal.c:3177 kernel/signal.c:3203 kernel/signal.c:3316
#: kernel/signal.c:3389 kernel/signal.c:3555 kernel/signal.c:3744
#: kernel/signal.c:3801 kernel/signal.c:3949 kernel/signal.c:4056
#: kernel/signal.c:4162 kernel/signal.c:4181 kernel/signal.c:4210
#: kernel/signal.c:4543 kernel/signal.c:4576 kernel/signal.c:4627
#: kernel/signal.c:4851 ../../../driver-api/basics:78:
#: include/linux/kthread.h:21 include/linux/kthread.h:47
#: include/linux/kthread.h:65 include/linux/kthread.h:203
#: include/linux/kthread.h:224 ../../../driver-api/basics:7:
#: include/linux/module.h:86 include/linux/module.h:96
#: include/linux/module.h:690 include/linux/module.h:722
#: ../../../driver-api/basics:81: kernel/kthread.c:164 kernel/kthread.c:182
#: kernel/kthread.c:209 kernel/kthread.c:234 kernel/kthread.c:249
#: kernel/kthread.c:317 kernel/kthread.c:345 kernel/kthread.c:560
#: kernel/kthread.c:627 kernel/kthread.c:644 kernel/kthread.c:697
#: kernel/kthread.c:726 kernel/kthread.c:767 kernel/kthread.c:804
#: kernel/kthread.c:960 kernel/kthread.c:1066 kernel/kthread.c:1090
#: kernel/kthread.c:1177 kernel/kthread.c:1205 kernel/kthread.c:1271
#: kernel/kthread.c:1318 kernel/kthread.c:1410 kernel/kthread.c:1517
#: kernel/kthread.c:1539 kernel/kthread.c:1554 kernel/kthread.c:1573
#: kernel/kthread.c:1601 kernel/kthread.c:1647 kernel/kthread.c:1681
#: ../../../driver-api/basics:87: include/linux/refcount.h:132
#: include/linux/refcount.h:142 include/linux/refcount.h:167
#: include/linux/refcount.h:197 include/linux/refcount.h:258
#: include/linux/refcount.h:299 include/linux/refcount.h:325
#: include/linux/refcount.h:348 include/linux/refcount.h:374
#: include/linux/refcount.h:410 include/linux/refcount.h:440
#: include/linux/refcount.h:469 ../../../driver-api/basics:90:
#: lib/refcount.c:44 lib/refcount.c:68 lib/refcount.c:102 lib/refcount.c:133
#: lib/refcount.c:164 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:24
#: include/linux/atomic/atomic-instrumented.h:41
#: include/linux/atomic/atomic-instrumented.h:58
#: include/linux/atomic/atomic-instrumented.h:76
#: include/linux/atomic/atomic-instrumented.h:95
#: include/linux/atomic/atomic-instrumented.h:113
#: include/linux/atomic/atomic-instrumented.h:132
#: include/linux/atomic/atomic-instrumented.h:150
#: include/linux/atomic/atomic-instrumented.h:169
#: include/linux/atomic/atomic-instrumented.h:187
#: include/linux/atomic/atomic-instrumented.h:206
#: include/linux/atomic/atomic-instrumented.h:224
#: include/linux/atomic/atomic-instrumented.h:243
#: include/linux/atomic/atomic-instrumented.h:261
#: include/linux/atomic/atomic-instrumented.h:279
#: include/linux/atomic/atomic-instrumented.h:298
#: include/linux/atomic/atomic-instrumented.h:316
#: include/linux/atomic/atomic-instrumented.h:335
#: include/linux/atomic/atomic-instrumented.h:353
#: include/linux/atomic/atomic-instrumented.h:372
#: include/linux/atomic/atomic-instrumented.h:390
#: include/linux/atomic/atomic-instrumented.h:409
#: include/linux/atomic/atomic-instrumented.h:427
#: include/linux/atomic/atomic-instrumented.h:444
#: include/linux/atomic/atomic-instrumented.h:462
#: include/linux/atomic/atomic-instrumented.h:479
#: include/linux/atomic/atomic-instrumented.h:497
#: include/linux/atomic/atomic-instrumented.h:514
#: include/linux/atomic/atomic-instrumented.h:532
#: include/linux/atomic/atomic-instrumented.h:549
#: include/linux/atomic/atomic-instrumented.h:567
#: include/linux/atomic/atomic-instrumented.h:584
#: include/linux/atomic/atomic-instrumented.h:601
#: include/linux/atomic/atomic-instrumented.h:619
#: include/linux/atomic/atomic-instrumented.h:636
#: include/linux/atomic/atomic-instrumented.h:654
#: include/linux/atomic/atomic-instrumented.h:671
#: include/linux/atomic/atomic-instrumented.h:689
#: include/linux/atomic/atomic-instrumented.h:706
#: include/linux/atomic/atomic-instrumented.h:724
#: include/linux/atomic/atomic-instrumented.h:741
#: include/linux/atomic/atomic-instrumented.h:759
#: include/linux/atomic/atomic-instrumented.h:778
#: include/linux/atomic/atomic-instrumented.h:796
#: include/linux/atomic/atomic-instrumented.h:815
#: include/linux/atomic/atomic-instrumented.h:833
#: include/linux/atomic/atomic-instrumented.h:851
#: include/linux/atomic/atomic-instrumented.h:870
#: include/linux/atomic/atomic-instrumented.h:888
#: include/linux/atomic/atomic-instrumented.h:907
#: include/linux/atomic/atomic-instrumented.h:925
#: include/linux/atomic/atomic-instrumented.h:943
#: include/linux/atomic/atomic-instrumented.h:962
#: include/linux/atomic/atomic-instrumented.h:980
#: include/linux/atomic/atomic-instrumented.h:999
#: include/linux/atomic/atomic-instrumented.h:1017
#: include/linux/atomic/atomic-instrumented.h:1035
#: include/linux/atomic/atomic-instrumented.h:1054
#: include/linux/atomic/atomic-instrumented.h:1072
#: include/linux/atomic/atomic-instrumented.h:1091
#: include/linux/atomic/atomic-instrumented.h:1109
#: include/linux/atomic/atomic-instrumented.h:1128
#: include/linux/atomic/atomic-instrumented.h:1146
#: include/linux/atomic/atomic-instrumented.h:1165
#: include/linux/atomic/atomic-instrumented.h:1183
#: include/linux/atomic/atomic-instrumented.h:1204
#: include/linux/atomic/atomic-instrumented.h:1224
#: include/linux/atomic/atomic-instrumented.h:1245
#: include/linux/atomic/atomic-instrumented.h:1265
#: include/linux/atomic/atomic-instrumented.h:1288
#: include/linux/atomic/atomic-instrumented.h:1310
#: include/linux/atomic/atomic-instrumented.h:1333
#: include/linux/atomic/atomic-instrumented.h:1355
#: include/linux/atomic/atomic-instrumented.h:1374
#: include/linux/atomic/atomic-instrumented.h:1392
#: include/linux/atomic/atomic-instrumented.h:1410
#: include/linux/atomic/atomic-instrumented.h:1429
#: include/linux/atomic/atomic-instrumented.h:1447
#: include/linux/atomic/atomic-instrumented.h:1466
#: include/linux/atomic/atomic-instrumented.h:1484
#: include/linux/atomic/atomic-instrumented.h:1505
#: include/linux/atomic/atomic-instrumented.h:1526
#: include/linux/atomic/atomic-instrumented.h:1545
#: include/linux/atomic/atomic-instrumented.h:1564
#: include/linux/atomic/atomic-instrumented.h:1583
#: include/linux/atomic/atomic-instrumented.h:1602
#: include/linux/atomic/atomic-instrumented.h:1619
#: include/linux/atomic/atomic-instrumented.h:1636
#: include/linux/atomic/atomic-instrumented.h:1654
#: include/linux/atomic/atomic-instrumented.h:1673
#: include/linux/atomic/atomic-instrumented.h:1691
#: include/linux/atomic/atomic-instrumented.h:1710
#: include/linux/atomic/atomic-instrumented.h:1728
#: include/linux/atomic/atomic-instrumented.h:1747
#: include/linux/atomic/atomic-instrumented.h:1765
#: include/linux/atomic/atomic-instrumented.h:1784
#: include/linux/atomic/atomic-instrumented.h:1802
#: include/linux/atomic/atomic-instrumented.h:1821
#: include/linux/atomic/atomic-instrumented.h:1839
#: include/linux/atomic/atomic-instrumented.h:1857
#: include/linux/atomic/atomic-instrumented.h:1876
#: include/linux/atomic/atomic-instrumented.h:1894
#: include/linux/atomic/atomic-instrumented.h:1913
#: include/linux/atomic/atomic-instrumented.h:1931
#: include/linux/atomic/atomic-instrumented.h:1950
#: include/linux/atomic/atomic-instrumented.h:1968
#: include/linux/atomic/atomic-instrumented.h:1987
#: include/linux/atomic/atomic-instrumented.h:2005
#: include/linux/atomic/atomic-instrumented.h:2022
#: include/linux/atomic/atomic-instrumented.h:2040
#: include/linux/atomic/atomic-instrumented.h:2057
#: include/linux/atomic/atomic-instrumented.h:2075
#: include/linux/atomic/atomic-instrumented.h:2092
#: include/linux/atomic/atomic-instrumented.h:2110
#: include/linux/atomic/atomic-instrumented.h:2127
#: include/linux/atomic/atomic-instrumented.h:2145
#: include/linux/atomic/atomic-instrumented.h:2162
#: include/linux/atomic/atomic-instrumented.h:2179
#: include/linux/atomic/atomic-instrumented.h:2197
#: include/linux/atomic/atomic-instrumented.h:2214
#: include/linux/atomic/atomic-instrumented.h:2232
#: include/linux/atomic/atomic-instrumented.h:2249
#: include/linux/atomic/atomic-instrumented.h:2267
#: include/linux/atomic/atomic-instrumented.h:2284
#: include/linux/atomic/atomic-instrumented.h:2302
#: include/linux/atomic/atomic-instrumented.h:2319
#: include/linux/atomic/atomic-instrumented.h:2337
#: include/linux/atomic/atomic-instrumented.h:2356
#: include/linux/atomic/atomic-instrumented.h:2374
#: include/linux/atomic/atomic-instrumented.h:2393
#: include/linux/atomic/atomic-instrumented.h:2411
#: include/linux/atomic/atomic-instrumented.h:2429
#: include/linux/atomic/atomic-instrumented.h:2448
#: include/linux/atomic/atomic-instrumented.h:2466
#: include/linux/atomic/atomic-instrumented.h:2485
#: include/linux/atomic/atomic-instrumented.h:2503
#: include/linux/atomic/atomic-instrumented.h:2521
#: include/linux/atomic/atomic-instrumented.h:2540
#: include/linux/atomic/atomic-instrumented.h:2558
#: include/linux/atomic/atomic-instrumented.h:2577
#: include/linux/atomic/atomic-instrumented.h:2595
#: include/linux/atomic/atomic-instrumented.h:2613
#: include/linux/atomic/atomic-instrumented.h:2632
#: include/linux/atomic/atomic-instrumented.h:2650
#: include/linux/atomic/atomic-instrumented.h:2669
#: include/linux/atomic/atomic-instrumented.h:2687
#: include/linux/atomic/atomic-instrumented.h:2706
#: include/linux/atomic/atomic-instrumented.h:2724
#: include/linux/atomic/atomic-instrumented.h:2743
#: include/linux/atomic/atomic-instrumented.h:2761
#: include/linux/atomic/atomic-instrumented.h:2782
#: include/linux/atomic/atomic-instrumented.h:2802
#: include/linux/atomic/atomic-instrumented.h:2823
#: include/linux/atomic/atomic-instrumented.h:2843
#: include/linux/atomic/atomic-instrumented.h:2866
#: include/linux/atomic/atomic-instrumented.h:2888
#: include/linux/atomic/atomic-instrumented.h:2911
#: include/linux/atomic/atomic-instrumented.h:2933
#: include/linux/atomic/atomic-instrumented.h:2952
#: include/linux/atomic/atomic-instrumented.h:2970
#: include/linux/atomic/atomic-instrumented.h:2988
#: include/linux/atomic/atomic-instrumented.h:3007
#: include/linux/atomic/atomic-instrumented.h:3025
#: include/linux/atomic/atomic-instrumented.h:3044
#: include/linux/atomic/atomic-instrumented.h:3062
#: include/linux/atomic/atomic-instrumented.h:3083
#: include/linux/atomic/atomic-instrumented.h:3104
#: include/linux/atomic/atomic-instrumented.h:3123
#: include/linux/atomic/atomic-instrumented.h:3142
#: include/linux/atomic/atomic-instrumented.h:3161
#: include/linux/atomic/atomic-instrumented.h:3180
#: include/linux/atomic/atomic-instrumented.h:3197
#: include/linux/atomic/atomic-instrumented.h:3214
#: include/linux/atomic/atomic-instrumented.h:3232
#: include/linux/atomic/atomic-instrumented.h:3251
#: include/linux/atomic/atomic-instrumented.h:3269
#: include/linux/atomic/atomic-instrumented.h:3288
#: include/linux/atomic/atomic-instrumented.h:3306
#: include/linux/atomic/atomic-instrumented.h:3325
#: include/linux/atomic/atomic-instrumented.h:3343
#: include/linux/atomic/atomic-instrumented.h:3362
#: include/linux/atomic/atomic-instrumented.h:3380
#: include/linux/atomic/atomic-instrumented.h:3399
#: include/linux/atomic/atomic-instrumented.h:3417
#: include/linux/atomic/atomic-instrumented.h:3435
#: include/linux/atomic/atomic-instrumented.h:3454
#: include/linux/atomic/atomic-instrumented.h:3472
#: include/linux/atomic/atomic-instrumented.h:3491
#: include/linux/atomic/atomic-instrumented.h:3509
#: include/linux/atomic/atomic-instrumented.h:3528
#: include/linux/atomic/atomic-instrumented.h:3546
#: include/linux/atomic/atomic-instrumented.h:3565
#: include/linux/atomic/atomic-instrumented.h:3583
#: include/linux/atomic/atomic-instrumented.h:3600
#: include/linux/atomic/atomic-instrumented.h:3618
#: include/linux/atomic/atomic-instrumented.h:3635
#: include/linux/atomic/atomic-instrumented.h:3653
#: include/linux/atomic/atomic-instrumented.h:3670
#: include/linux/atomic/atomic-instrumented.h:3688
#: include/linux/atomic/atomic-instrumented.h:3705
#: include/linux/atomic/atomic-instrumented.h:3723
#: include/linux/atomic/atomic-instrumented.h:3740
#: include/linux/atomic/atomic-instrumented.h:3757
#: include/linux/atomic/atomic-instrumented.h:3775
#: include/linux/atomic/atomic-instrumented.h:3792
#: include/linux/atomic/atomic-instrumented.h:3810
#: include/linux/atomic/atomic-instrumented.h:3827
#: include/linux/atomic/atomic-instrumented.h:3845
#: include/linux/atomic/atomic-instrumented.h:3862
#: include/linux/atomic/atomic-instrumented.h:3880
#: include/linux/atomic/atomic-instrumented.h:3897
#: include/linux/atomic/atomic-instrumented.h:3915
#: include/linux/atomic/atomic-instrumented.h:3934
#: include/linux/atomic/atomic-instrumented.h:3952
#: include/linux/atomic/atomic-instrumented.h:3971
#: include/linux/atomic/atomic-instrumented.h:3989
#: include/linux/atomic/atomic-instrumented.h:4007
#: include/linux/atomic/atomic-instrumented.h:4026
#: include/linux/atomic/atomic-instrumented.h:4044
#: include/linux/atomic/atomic-instrumented.h:4063
#: include/linux/atomic/atomic-instrumented.h:4081
#: include/linux/atomic/atomic-instrumented.h:4099
#: include/linux/atomic/atomic-instrumented.h:4118
#: include/linux/atomic/atomic-instrumented.h:4136
#: include/linux/atomic/atomic-instrumented.h:4155
#: include/linux/atomic/atomic-instrumented.h:4173
#: include/linux/atomic/atomic-instrumented.h:4191
#: include/linux/atomic/atomic-instrumented.h:4210
#: include/linux/atomic/atomic-instrumented.h:4228
#: include/linux/atomic/atomic-instrumented.h:4247
#: include/linux/atomic/atomic-instrumented.h:4265
#: include/linux/atomic/atomic-instrumented.h:4284
#: include/linux/atomic/atomic-instrumented.h:4302
#: include/linux/atomic/atomic-instrumented.h:4321
#: include/linux/atomic/atomic-instrumented.h:4339
#: include/linux/atomic/atomic-instrumented.h:4360
#: include/linux/atomic/atomic-instrumented.h:4380
#: include/linux/atomic/atomic-instrumented.h:4401
#: include/linux/atomic/atomic-instrumented.h:4421
#: include/linux/atomic/atomic-instrumented.h:4444
#: include/linux/atomic/atomic-instrumented.h:4466
#: include/linux/atomic/atomic-instrumented.h:4489
#: include/linux/atomic/atomic-instrumented.h:4511
#: include/linux/atomic/atomic-instrumented.h:4530
#: include/linux/atomic/atomic-instrumented.h:4548
#: include/linux/atomic/atomic-instrumented.h:4566
#: include/linux/atomic/atomic-instrumented.h:4585
#: include/linux/atomic/atomic-instrumented.h:4603
#: include/linux/atomic/atomic-instrumented.h:4622
#: include/linux/atomic/atomic-instrumented.h:4640
#: include/linux/atomic/atomic-instrumented.h:4661
#: include/linux/atomic/atomic-instrumented.h:4682
#: include/linux/atomic/atomic-instrumented.h:4701
#: include/linux/atomic/atomic-instrumented.h:4720
#: include/linux/atomic/atomic-instrumented.h:4739
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:449
#: include/linux/atomic/atomic-arch-fallback.h:465
#: include/linux/atomic/atomic-arch-fallback.h:494
#: include/linux/atomic/atomic-arch-fallback.h:511
#: include/linux/atomic/atomic-arch-fallback.h:537
#: include/linux/atomic/atomic-arch-fallback.h:554
#: include/linux/atomic/atomic-arch-fallback.h:581
#: include/linux/atomic/atomic-arch-fallback.h:608
#: include/linux/atomic/atomic-arch-fallback.h:634
#: include/linux/atomic/atomic-arch-fallback.h:657
#: include/linux/atomic/atomic-arch-fallback.h:684
#: include/linux/atomic/atomic-arch-fallback.h:711
#: include/linux/atomic/atomic-arch-fallback.h:737
#: include/linux/atomic/atomic-arch-fallback.h:760
#: include/linux/atomic/atomic-arch-fallback.h:777
#: include/linux/atomic/atomic-arch-fallback.h:804
#: include/linux/atomic/atomic-arch-fallback.h:831
#: include/linux/atomic/atomic-arch-fallback.h:857
#: include/linux/atomic/atomic-arch-fallback.h:880
#: include/linux/atomic/atomic-arch-fallback.h:907
#: include/linux/atomic/atomic-arch-fallback.h:934
#: include/linux/atomic/atomic-arch-fallback.h:960
#: include/linux/atomic/atomic-arch-fallback.h:983
#: include/linux/atomic/atomic-arch-fallback.h:1003
#: include/linux/atomic/atomic-arch-fallback.h:1029
#: include/linux/atomic/atomic-arch-fallback.h:1055
#: include/linux/atomic/atomic-arch-fallback.h:1080
#: include/linux/atomic/atomic-arch-fallback.h:1102
#: include/linux/atomic/atomic-arch-fallback.h:1128
#: include/linux/atomic/atomic-arch-fallback.h:1154
#: include/linux/atomic/atomic-arch-fallback.h:1179
#: include/linux/atomic/atomic-arch-fallback.h:1201
#: include/linux/atomic/atomic-arch-fallback.h:1221
#: include/linux/atomic/atomic-arch-fallback.h:1247
#: include/linux/atomic/atomic-arch-fallback.h:1273
#: include/linux/atomic/atomic-arch-fallback.h:1298
#: include/linux/atomic/atomic-arch-fallback.h:1320
#: include/linux/atomic/atomic-arch-fallback.h:1346
#: include/linux/atomic/atomic-arch-fallback.h:1372
#: include/linux/atomic/atomic-arch-fallback.h:1397
#: include/linux/atomic/atomic-arch-fallback.h:1419
#: include/linux/atomic/atomic-arch-fallback.h:1436
#: include/linux/atomic/atomic-arch-fallback.h:1463
#: include/linux/atomic/atomic-arch-fallback.h:1490
#: include/linux/atomic/atomic-arch-fallback.h:1516
#: include/linux/atomic/atomic-arch-fallback.h:1539
#: include/linux/atomic/atomic-arch-fallback.h:1560
#: include/linux/atomic/atomic-arch-fallback.h:1587
#: include/linux/atomic/atomic-arch-fallback.h:1614
#: include/linux/atomic/atomic-arch-fallback.h:1640
#: include/linux/atomic/atomic-arch-fallback.h:1663
#: include/linux/atomic/atomic-arch-fallback.h:1680
#: include/linux/atomic/atomic-arch-fallback.h:1707
#: include/linux/atomic/atomic-arch-fallback.h:1734
#: include/linux/atomic/atomic-arch-fallback.h:1760
#: include/linux/atomic/atomic-arch-fallback.h:1783
#: include/linux/atomic/atomic-arch-fallback.h:1800
#: include/linux/atomic/atomic-arch-fallback.h:1827
#: include/linux/atomic/atomic-arch-fallback.h:1854
#: include/linux/atomic/atomic-arch-fallback.h:1880
#: include/linux/atomic/atomic-arch-fallback.h:1903
#: include/linux/atomic/atomic-arch-fallback.h:1930
#: include/linux/atomic/atomic-arch-fallback.h:1957
#: include/linux/atomic/atomic-arch-fallback.h:1983
#: include/linux/atomic/atomic-arch-fallback.h:2006
#: include/linux/atomic/atomic-arch-fallback.h:2035
#: include/linux/atomic/atomic-arch-fallback.h:2064
#: include/linux/atomic/atomic-arch-fallback.h:2092
#: include/linux/atomic/atomic-arch-fallback.h:2117
#: include/linux/atomic/atomic-arch-fallback.h:2151
#: include/linux/atomic/atomic-arch-fallback.h:2185
#: include/linux/atomic/atomic-arch-fallback.h:2218
#: include/linux/atomic/atomic-arch-fallback.h:2248
#: include/linux/atomic/atomic-arch-fallback.h:2269
#: include/linux/atomic/atomic-arch-fallback.h:2289
#: include/linux/atomic/atomic-arch-fallback.h:2309
#: include/linux/atomic/atomic-arch-fallback.h:2336
#: include/linux/atomic/atomic-arch-fallback.h:2363
#: include/linux/atomic/atomic-arch-fallback.h:2389
#: include/linux/atomic/atomic-arch-fallback.h:2412
#: include/linux/atomic/atomic-arch-fallback.h:2442
#: include/linux/atomic/atomic-arch-fallback.h:2465
#: include/linux/atomic/atomic-arch-fallback.h:2486
#: include/linux/atomic/atomic-arch-fallback.h:2514
#: include/linux/atomic/atomic-arch-fallback.h:2542
#: include/linux/atomic/atomic-arch-fallback.h:2575
#: include/linux/atomic/atomic-arch-fallback.h:2591
#: include/linux/atomic/atomic-arch-fallback.h:2620
#: include/linux/atomic/atomic-arch-fallback.h:2637
#: include/linux/atomic/atomic-arch-fallback.h:2663
#: include/linux/atomic/atomic-arch-fallback.h:2680
#: include/linux/atomic/atomic-arch-fallback.h:2707
#: include/linux/atomic/atomic-arch-fallback.h:2734
#: include/linux/atomic/atomic-arch-fallback.h:2760
#: include/linux/atomic/atomic-arch-fallback.h:2783
#: include/linux/atomic/atomic-arch-fallback.h:2810
#: include/linux/atomic/atomic-arch-fallback.h:2837
#: include/linux/atomic/atomic-arch-fallback.h:2863
#: include/linux/atomic/atomic-arch-fallback.h:2886
#: include/linux/atomic/atomic-arch-fallback.h:2903
#: include/linux/atomic/atomic-arch-fallback.h:2930
#: include/linux/atomic/atomic-arch-fallback.h:2957
#: include/linux/atomic/atomic-arch-fallback.h:2983
#: include/linux/atomic/atomic-arch-fallback.h:3006
#: include/linux/atomic/atomic-arch-fallback.h:3033
#: include/linux/atomic/atomic-arch-fallback.h:3060
#: include/linux/atomic/atomic-arch-fallback.h:3086
#: include/linux/atomic/atomic-arch-fallback.h:3109
#: include/linux/atomic/atomic-arch-fallback.h:3129
#: include/linux/atomic/atomic-arch-fallback.h:3155
#: include/linux/atomic/atomic-arch-fallback.h:3181
#: include/linux/atomic/atomic-arch-fallback.h:3206
#: include/linux/atomic/atomic-arch-fallback.h:3228
#: include/linux/atomic/atomic-arch-fallback.h:3254
#: include/linux/atomic/atomic-arch-fallback.h:3280
#: include/linux/atomic/atomic-arch-fallback.h:3305
#: include/linux/atomic/atomic-arch-fallback.h:3327
#: include/linux/atomic/atomic-arch-fallback.h:3347
#: include/linux/atomic/atomic-arch-fallback.h:3373
#: include/linux/atomic/atomic-arch-fallback.h:3399
#: include/linux/atomic/atomic-arch-fallback.h:3424
#: include/linux/atomic/atomic-arch-fallback.h:3446
#: include/linux/atomic/atomic-arch-fallback.h:3472
#: include/linux/atomic/atomic-arch-fallback.h:3498
#: include/linux/atomic/atomic-arch-fallback.h:3523
#: include/linux/atomic/atomic-arch-fallback.h:3545
#: include/linux/atomic/atomic-arch-fallback.h:3562
#: include/linux/atomic/atomic-arch-fallback.h:3589
#: include/linux/atomic/atomic-arch-fallback.h:3616
#: include/linux/atomic/atomic-arch-fallback.h:3642
#: include/linux/atomic/atomic-arch-fallback.h:3665
#: include/linux/atomic/atomic-arch-fallback.h:3686
#: include/linux/atomic/atomic-arch-fallback.h:3713
#: include/linux/atomic/atomic-arch-fallback.h:3740
#: include/linux/atomic/atomic-arch-fallback.h:3766
#: include/linux/atomic/atomic-arch-fallback.h:3789
#: include/linux/atomic/atomic-arch-fallback.h:3806
#: include/linux/atomic/atomic-arch-fallback.h:3833
#: include/linux/atomic/atomic-arch-fallback.h:3860
#: include/linux/atomic/atomic-arch-fallback.h:3886
#: include/linux/atomic/atomic-arch-fallback.h:3909
#: include/linux/atomic/atomic-arch-fallback.h:3926
#: include/linux/atomic/atomic-arch-fallback.h:3953
#: include/linux/atomic/atomic-arch-fallback.h:3980
#: include/linux/atomic/atomic-arch-fallback.h:4006
#: include/linux/atomic/atomic-arch-fallback.h:4029
#: include/linux/atomic/atomic-arch-fallback.h:4056
#: include/linux/atomic/atomic-arch-fallback.h:4083
#: include/linux/atomic/atomic-arch-fallback.h:4109
#: include/linux/atomic/atomic-arch-fallback.h:4132
#: include/linux/atomic/atomic-arch-fallback.h:4161
#: include/linux/atomic/atomic-arch-fallback.h:4190
#: include/linux/atomic/atomic-arch-fallback.h:4218
#: include/linux/atomic/atomic-arch-fallback.h:4243
#: include/linux/atomic/atomic-arch-fallback.h:4277
#: include/linux/atomic/atomic-arch-fallback.h:4311
#: include/linux/atomic/atomic-arch-fallback.h:4344
#: include/linux/atomic/atomic-arch-fallback.h:4374
#: include/linux/atomic/atomic-arch-fallback.h:4395
#: include/linux/atomic/atomic-arch-fallback.h:4415
#: include/linux/atomic/atomic-arch-fallback.h:4435
#: include/linux/atomic/atomic-arch-fallback.h:4462
#: include/linux/atomic/atomic-arch-fallback.h:4489
#: include/linux/atomic/atomic-arch-fallback.h:4515
#: include/linux/atomic/atomic-arch-fallback.h:4538
#: include/linux/atomic/atomic-arch-fallback.h:4568
#: include/linux/atomic/atomic-arch-fallback.h:4591
#: include/linux/atomic/atomic-arch-fallback.h:4612
#: include/linux/atomic/atomic-arch-fallback.h:4640
#: include/linux/atomic/atomic-arch-fallback.h:4668
msgid "**Parameters**"
msgstr ""

#: ../../../driver-api/basics:7: include/linux/module.h:88
#: include/linux/module.h:98
msgid "``x``"
msgstr ""

#: ../../../driver-api/basics:7: include/linux/module.h:83
msgid "function to be run at kernel boot time or module insertion"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:28
#: include/linux/atomic/atomic-long.h:48 include/linux/atomic/atomic-long.h:69
#: include/linux/atomic/atomic-long.h:90 include/linux/atomic/atomic-long.h:111
#: include/linux/atomic/atomic-long.h:132
#: include/linux/atomic/atomic-long.h:153
#: include/linux/atomic/atomic-long.h:174
#: include/linux/atomic/atomic-long.h:195
#: include/linux/atomic/atomic-long.h:216
#: include/linux/atomic/atomic-long.h:237
#: include/linux/atomic/atomic-long.h:258
#: include/linux/atomic/atomic-long.h:279
#: include/linux/atomic/atomic-long.h:300
#: include/linux/atomic/atomic-long.h:321
#: include/linux/atomic/atomic-long.h:342
#: include/linux/atomic/atomic-long.h:363
#: include/linux/atomic/atomic-long.h:384
#: include/linux/atomic/atomic-long.h:405
#: include/linux/atomic/atomic-long.h:426
#: include/linux/atomic/atomic-long.h:447
#: include/linux/atomic/atomic-long.h:468
#: include/linux/atomic/atomic-long.h:488
#: include/linux/atomic/atomic-long.h:508
#: include/linux/atomic/atomic-long.h:528
#: include/linux/atomic/atomic-long.h:548
#: include/linux/atomic/atomic-long.h:568
#: include/linux/atomic/atomic-long.h:588
#: include/linux/atomic/atomic-long.h:608
#: include/linux/atomic/atomic-long.h:628
#: include/linux/atomic/atomic-long.h:648
#: include/linux/atomic/atomic-long.h:668
#: include/linux/atomic/atomic-long.h:688
#: include/linux/atomic/atomic-long.h:708
#: include/linux/atomic/atomic-long.h:728
#: include/linux/atomic/atomic-long.h:748
#: include/linux/atomic/atomic-long.h:768
#: include/linux/atomic/atomic-long.h:788
#: include/linux/atomic/atomic-long.h:808
#: include/linux/atomic/atomic-long.h:828
#: include/linux/atomic/atomic-long.h:849
#: include/linux/atomic/atomic-long.h:870
#: include/linux/atomic/atomic-long.h:891
#: include/linux/atomic/atomic-long.h:912
#: include/linux/atomic/atomic-long.h:933
#: include/linux/atomic/atomic-long.h:954
#: include/linux/atomic/atomic-long.h:975
#: include/linux/atomic/atomic-long.h:996
#: include/linux/atomic/atomic-long.h:1017
#: include/linux/atomic/atomic-long.h:1038
#: include/linux/atomic/atomic-long.h:1059
#: include/linux/atomic/atomic-long.h:1080
#: include/linux/atomic/atomic-long.h:1101
#: include/linux/atomic/atomic-long.h:1122
#: include/linux/atomic/atomic-long.h:1143
#: include/linux/atomic/atomic-long.h:1164
#: include/linux/atomic/atomic-long.h:1185
#: include/linux/atomic/atomic-long.h:1206
#: include/linux/atomic/atomic-long.h:1227
#: include/linux/atomic/atomic-long.h:1248
#: include/linux/atomic/atomic-long.h:1269
#: include/linux/atomic/atomic-long.h:1290
#: include/linux/atomic/atomic-long.h:1311
#: include/linux/atomic/atomic-long.h:1332
#: include/linux/atomic/atomic-long.h:1354
#: include/linux/atomic/atomic-long.h:1377
#: include/linux/atomic/atomic-long.h:1400
#: include/linux/atomic/atomic-long.h:1423
#: include/linux/atomic/atomic-long.h:1446
#: include/linux/atomic/atomic-long.h:1470
#: include/linux/atomic/atomic-long.h:1494
#: include/linux/atomic/atomic-long.h:1518
#: include/linux/atomic/atomic-long.h:1541
#: include/linux/atomic/atomic-long.h:1561
#: include/linux/atomic/atomic-long.h:1581
#: include/linux/atomic/atomic-long.h:1602
#: include/linux/atomic/atomic-long.h:1623
#: include/linux/atomic/atomic-long.h:1644
#: include/linux/atomic/atomic-long.h:1665
#: include/linux/atomic/atomic-long.h:1687
#: include/linux/atomic/atomic-long.h:1710
#: include/linux/atomic/atomic-long.h:1731
#: include/linux/atomic/atomic-long.h:1752
#: include/linux/atomic/atomic-long.h:1773
#: include/linux/atomic/atomic-long.h:1794 ../../../driver-api/basics:108:
#: lib/kobject.c:3 lib/kobject.c:326 lib/kobject.c:469 lib/kobject.c:616
#: lib/kobject.c:728 lib/kobject.c:782 lib/kobject.c:900 lib/kobject.c:994
#: ../../../driver-api/basics:111: lib/kobject_uevent.c:3
#: lib/kobject_uevent.c:470 lib/kobject_uevent.c:651
#: ../../../driver-api/basics:117: include/linux/kernel.h:84
#: include/linux/kernel.h:98 include/linux/kernel.h:107
#: include/linux/kernel.h:118 include/linux/kernel.h:129
#: ../../../driver-api/basics:121: kernel/printk/printk.c:3
#: kernel/printk/printk.c:298 kernel/printk/printk.c:2660
#: kernel/printk/printk.c:4231 kernel/printk/printk.c:4611
#: kernel/printk/printk.c:4635 kernel/printk/printk.c:4665
#: kernel/printk/printk.c:4752 kernel/printk/printk.c:4808
#: kernel/printk/printk.c:4888 ../../../driver-api/basics:125:
#: kernel/panic.c:426 kernel/panic.c:746 ../../../driver-api/basics:131:
#: drivers/base/devres.c:155 drivers/base/devres.c:184
#: drivers/base/devres.c:221 drivers/base/devres.c:239
#: drivers/base/devres.c:279 drivers/base/devres.c:309
#: drivers/base/devres.c:344 drivers/base/devres.c:379
#: drivers/base/devres.c:412 drivers/base/devres.c:545
#: drivers/base/devres.c:610 drivers/base/devres.c:635
#: drivers/base/devres.c:665 drivers/base/devres.c:742
#: drivers/base/devres.c:779 drivers/base/devres.c:813
#: drivers/base/devres.c:849 drivers/base/devres.c:885
#: drivers/base/devres.c:1003 drivers/base/devres.c:1080
#: drivers/base/devres.c:1106 drivers/base/devres.c:1167
#: drivers/base/devres.c:1205 drivers/base/devres.c:1238
#: drivers/base/devres.c:1273 ../../../driver-api/basics:13:
#: include/linux/mod_devicetable.h:117 include/linux/mod_devicetable.h:231
#: include/linux/mod_devicetable.h:739 include/linux/mod_devicetable.h:759
#: include/linux/mod_devicetable.h:783 include/linux/mod_devicetable.h:800
#: include/linux/mod_devicetable.h:954 ../../../driver-api/basics:21:
#: include/linux/sched.h:361 ../../../driver-api/basics:24:
#: kernel/sched/core.c:3 kernel/sched/core.c:4415 kernel/sched/core.c:4884
#: ../../../driver-api/basics:30: kernel/sched/fair.c:4069
#: kernel/sched/fair.c:4548 kernel/sched/fair.c:4627 kernel/sched/fair.c:4682
#: kernel/sched/fair.c:7957 kernel/sched/fair.c:10211 kernel/sched/fair.c:10244
#: kernel/sched/fair.c:10444 kernel/sched/fair.c:11293
#: ../../../driver-api/basics:33: include/linux/completion.h:48
#: include/linux/completion.h:64 include/linux/completion.h:81
#: include/linux/completion.h:94 ../../../driver-api/basics:39:
#: include/linux/jiffies.h:3 include/linux/jiffies.h:121
#: include/linux/jiffies.h:193 include/linux/jiffies.h:207
#: include/linux/jiffies.h:219 include/linux/jiffies.h:233
#: include/linux/jiffies.h:495 include/linux/jiffies.h:533
#: include/linux/jiffies.h:560 ../../../driver-api/basics:42:
#: kernel/time/time.c:372 kernel/time/time.c:429 kernel/time/time.c:489
#: kernel/time/time.c:549 kernel/time/time.c:600 kernel/time/time.c:786
#: kernel/time/time.c:819 kernel/time/time.c:841 kernel/time/time.c:868
#: kernel/time/time.c:946 kernel/time/time.c:965 ../../../driver-api/basics:45:
#: kernel/time/timer.c:393 kernel/time/timer.c:421 kernel/time/timer.c:442
#: kernel/time/timer.c:464 kernel/time/timer.c:482 kernel/time/timer.c:497
#: kernel/time/timer.c:873 kernel/time/timer.c:1149 kernel/time/timer.c:1171
#: kernel/time/timer.c:1204 kernel/time/timer.c:1229 kernel/time/timer.c:1257
#: kernel/time/timer.c:1274 kernel/time/timer.c:1292 kernel/time/timer.c:1394
#: kernel/time/timer.c:1414 kernel/time/timer.c:1475 kernel/time/timer.c:1635
#: kernel/time/timer.c:1683 ../../../driver-api/basics:54:
#: include/linux/hrtimer.h:92 include/linux/hrtimer.h:307
#: include/linux/hrtimer.h:329 include/linux/hrtimer.h:356
#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:1022
#: kernel/time/hrtimer.c:1333 kernel/time/hrtimer.c:1658
#: kernel/time/hrtimer.c:1677 kernel/time/hrtimer.c:2023
#: ../../../driver-api/basics:63: include/linux/wait.h:99
#: include/linux/wait.h:134 include/linux/wait.h:147 include/linux/wait.h:255
#: include/linux/wait.h:338 include/linux/wait.h:377 include/linux/wait.h:404
#: include/linux/wait.h:468 include/linux/wait.h:491 include/linux/wait.h:521
#: include/linux/wait.h:576 include/linux/wait.h:602 include/linux/wait.h:667
#: include/linux/wait.h:687 include/linux/wait.h:717 include/linux/wait.h:750
#: include/linux/wait.h:801 include/linux/wait.h:828 include/linux/wait.h:855
#: include/linux/wait.h:886 include/linux/wait.h:921 include/linux/wait.h:949
#: include/linux/wait.h:991 include/linux/wait.h:1037 include/linux/wait.h:1065
#: include/linux/wait.h:1101 include/linux/wait.h:1133
#: include/linux/wait.h:1172 ../../../driver-api/basics:66:
#: kernel/sched/wait.c:139 kernel/sched/wait.c:176 kernel/sched/wait.c:202
#: kernel/sched/wait.c:371 ../../../driver-api/basics:72: kernel/exit.c:1306
#: ../../../driver-api/basics:75: kernel/signal.c:3 kernel/signal.c:268
#: kernel/signal.c:300 kernel/signal.c:322 kernel/signal.c:349
#: kernel/signal.c:839 kernel/signal.c:1809 kernel/signal.c:2272
#: kernel/signal.c:2532 kernel/signal.c:3052 kernel/signal.c:3202
#: kernel/signal.c:4058 kernel/signal.c:4163 kernel/signal.c:4181
#: kernel/signal.c:4577 ../../../driver-api/basics:78:
#: include/linux/kthread.h:3 include/linux/kthread.h:23
#: include/linux/kthread.h:68 include/linux/kthread.h:226
#: ../../../driver-api/basics:7: include/linux/module.h:85
#: include/linux/module.h:95 include/linux/module.h:689
#: include/linux/module.h:721 ../../../driver-api/basics:81: kernel/kthread.c:3
#: kernel/kthread.c:208 kernel/kthread.c:233 kernel/kthread.c:248
#: kernel/kthread.c:316 kernel/kthread.c:345 kernel/kthread.c:627
#: kernel/kthread.c:647 kernel/kthread.c:696 kernel/kthread.c:725
#: kernel/kthread.c:766 kernel/kthread.c:803 kernel/kthread.c:959
#: kernel/kthread.c:1093 kernel/kthread.c:1177 kernel/kthread.c:1205
#: kernel/kthread.c:1273 kernel/kthread.c:1317 kernel/kthread.c:1411
#: kernel/kthread.c:1516 kernel/kthread.c:1539 kernel/kthread.c:1553
#: kernel/kthread.c:1572 kernel/kthread.c:1680 ../../../driver-api/basics:87:
#: include/linux/refcount.h:142 include/linux/refcount.h:197
#: include/linux/refcount.h:259 include/linux/refcount.h:299
#: include/linux/refcount.h:324 include/linux/refcount.h:347
#: include/linux/refcount.h:373 include/linux/refcount.h:410
#: include/linux/refcount.h:439 include/linux/refcount.h:468
#: ../../../driver-api/basics:90: lib/refcount.c:43 lib/refcount.c:67
#: lib/refcount.c:103 lib/refcount.c:134 lib/refcount.c:166
#: ../../../driver-api/basics:96: include/linux/atomic/atomic-instrumented.h:23
#: include/linux/atomic/atomic-instrumented.h:40
#: include/linux/atomic/atomic-instrumented.h:58
#: include/linux/atomic/atomic-instrumented.h:76
#: include/linux/atomic/atomic-instrumented.h:95
#: include/linux/atomic/atomic-instrumented.h:113
#: include/linux/atomic/atomic-instrumented.h:132
#: include/linux/atomic/atomic-instrumented.h:150
#: include/linux/atomic/atomic-instrumented.h:169
#: include/linux/atomic/atomic-instrumented.h:187
#: include/linux/atomic/atomic-instrumented.h:206
#: include/linux/atomic/atomic-instrumented.h:224
#: include/linux/atomic/atomic-instrumented.h:243
#: include/linux/atomic/atomic-instrumented.h:261
#: include/linux/atomic/atomic-instrumented.h:279
#: include/linux/atomic/atomic-instrumented.h:298
#: include/linux/atomic/atomic-instrumented.h:316
#: include/linux/atomic/atomic-instrumented.h:335
#: include/linux/atomic/atomic-instrumented.h:353
#: include/linux/atomic/atomic-instrumented.h:372
#: include/linux/atomic/atomic-instrumented.h:390
#: include/linux/atomic/atomic-instrumented.h:409
#: include/linux/atomic/atomic-instrumented.h:426
#: include/linux/atomic/atomic-instrumented.h:443
#: include/linux/atomic/atomic-instrumented.h:461
#: include/linux/atomic/atomic-instrumented.h:478
#: include/linux/atomic/atomic-instrumented.h:496
#: include/linux/atomic/atomic-instrumented.h:513
#: include/linux/atomic/atomic-instrumented.h:531
#: include/linux/atomic/atomic-instrumented.h:548
#: include/linux/atomic/atomic-instrumented.h:566
#: include/linux/atomic/atomic-instrumented.h:583
#: include/linux/atomic/atomic-instrumented.h:600
#: include/linux/atomic/atomic-instrumented.h:618
#: include/linux/atomic/atomic-instrumented.h:635
#: include/linux/atomic/atomic-instrumented.h:653
#: include/linux/atomic/atomic-instrumented.h:670
#: include/linux/atomic/atomic-instrumented.h:688
#: include/linux/atomic/atomic-instrumented.h:705
#: include/linux/atomic/atomic-instrumented.h:723
#: include/linux/atomic/atomic-instrumented.h:741
#: include/linux/atomic/atomic-instrumented.h:759
#: include/linux/atomic/atomic-instrumented.h:778
#: include/linux/atomic/atomic-instrumented.h:796
#: include/linux/atomic/atomic-instrumented.h:815
#: include/linux/atomic/atomic-instrumented.h:833
#: include/linux/atomic/atomic-instrumented.h:851
#: include/linux/atomic/atomic-instrumented.h:870
#: include/linux/atomic/atomic-instrumented.h:888
#: include/linux/atomic/atomic-instrumented.h:907
#: include/linux/atomic/atomic-instrumented.h:925
#: include/linux/atomic/atomic-instrumented.h:943
#: include/linux/atomic/atomic-instrumented.h:962
#: include/linux/atomic/atomic-instrumented.h:980
#: include/linux/atomic/atomic-instrumented.h:999
#: include/linux/atomic/atomic-instrumented.h:1017
#: include/linux/atomic/atomic-instrumented.h:1035
#: include/linux/atomic/atomic-instrumented.h:1054
#: include/linux/atomic/atomic-instrumented.h:1072
#: include/linux/atomic/atomic-instrumented.h:1091
#: include/linux/atomic/atomic-instrumented.h:1109
#: include/linux/atomic/atomic-instrumented.h:1128
#: include/linux/atomic/atomic-instrumented.h:1146
#: include/linux/atomic/atomic-instrumented.h:1165
#: include/linux/atomic/atomic-instrumented.h:1184
#: include/linux/atomic/atomic-instrumented.h:1205
#: include/linux/atomic/atomic-instrumented.h:1225
#: include/linux/atomic/atomic-instrumented.h:1246
#: include/linux/atomic/atomic-instrumented.h:1266
#: include/linux/atomic/atomic-instrumented.h:1289
#: include/linux/atomic/atomic-instrumented.h:1311
#: include/linux/atomic/atomic-instrumented.h:1334
#: include/linux/atomic/atomic-instrumented.h:1355
#: include/linux/atomic/atomic-instrumented.h:1373
#: include/linux/atomic/atomic-instrumented.h:1391
#: include/linux/atomic/atomic-instrumented.h:1410
#: include/linux/atomic/atomic-instrumented.h:1429
#: include/linux/atomic/atomic-instrumented.h:1447
#: include/linux/atomic/atomic-instrumented.h:1466
#: include/linux/atomic/atomic-instrumented.h:1485
#: include/linux/atomic/atomic-instrumented.h:1506
#: include/linux/atomic/atomic-instrumented.h:1525
#: include/linux/atomic/atomic-instrumented.h:1544
#: include/linux/atomic/atomic-instrumented.h:1563
#: include/linux/atomic/atomic-instrumented.h:1582
#: include/linux/atomic/atomic-instrumented.h:1601
#: include/linux/atomic/atomic-instrumented.h:1618
#: include/linux/atomic/atomic-instrumented.h:1636
#: include/linux/atomic/atomic-instrumented.h:1654
#: include/linux/atomic/atomic-instrumented.h:1673
#: include/linux/atomic/atomic-instrumented.h:1691
#: include/linux/atomic/atomic-instrumented.h:1710
#: include/linux/atomic/atomic-instrumented.h:1728
#: include/linux/atomic/atomic-instrumented.h:1747
#: include/linux/atomic/atomic-instrumented.h:1765
#: include/linux/atomic/atomic-instrumented.h:1784
#: include/linux/atomic/atomic-instrumented.h:1802
#: include/linux/atomic/atomic-instrumented.h:1821
#: include/linux/atomic/atomic-instrumented.h:1839
#: include/linux/atomic/atomic-instrumented.h:1857
#: include/linux/atomic/atomic-instrumented.h:1876
#: include/linux/atomic/atomic-instrumented.h:1894
#: include/linux/atomic/atomic-instrumented.h:1913
#: include/linux/atomic/atomic-instrumented.h:1931
#: include/linux/atomic/atomic-instrumented.h:1950
#: include/linux/atomic/atomic-instrumented.h:1968
#: include/linux/atomic/atomic-instrumented.h:1987
#: include/linux/atomic/atomic-instrumented.h:2004
#: include/linux/atomic/atomic-instrumented.h:2021
#: include/linux/atomic/atomic-instrumented.h:2039
#: include/linux/atomic/atomic-instrumented.h:2056
#: include/linux/atomic/atomic-instrumented.h:2074
#: include/linux/atomic/atomic-instrumented.h:2091
#: include/linux/atomic/atomic-instrumented.h:2109
#: include/linux/atomic/atomic-instrumented.h:2126
#: include/linux/atomic/atomic-instrumented.h:2144
#: include/linux/atomic/atomic-instrumented.h:2161
#: include/linux/atomic/atomic-instrumented.h:2178
#: include/linux/atomic/atomic-instrumented.h:2196
#: include/linux/atomic/atomic-instrumented.h:2213
#: include/linux/atomic/atomic-instrumented.h:2231
#: include/linux/atomic/atomic-instrumented.h:2248
#: include/linux/atomic/atomic-instrumented.h:2266
#: include/linux/atomic/atomic-instrumented.h:2283
#: include/linux/atomic/atomic-instrumented.h:2301
#: include/linux/atomic/atomic-instrumented.h:2319
#: include/linux/atomic/atomic-instrumented.h:2337
#: include/linux/atomic/atomic-instrumented.h:2356
#: include/linux/atomic/atomic-instrumented.h:2374
#: include/linux/atomic/atomic-instrumented.h:2393
#: include/linux/atomic/atomic-instrumented.h:2411
#: include/linux/atomic/atomic-instrumented.h:2429
#: include/linux/atomic/atomic-instrumented.h:2448
#: include/linux/atomic/atomic-instrumented.h:2466
#: include/linux/atomic/atomic-instrumented.h:2485
#: include/linux/atomic/atomic-instrumented.h:2503
#: include/linux/atomic/atomic-instrumented.h:2521
#: include/linux/atomic/atomic-instrumented.h:2540
#: include/linux/atomic/atomic-instrumented.h:2558
#: include/linux/atomic/atomic-instrumented.h:2577
#: include/linux/atomic/atomic-instrumented.h:2595
#: include/linux/atomic/atomic-instrumented.h:2613
#: include/linux/atomic/atomic-instrumented.h:2632
#: include/linux/atomic/atomic-instrumented.h:2650
#: include/linux/atomic/atomic-instrumented.h:2669
#: include/linux/atomic/atomic-instrumented.h:2687
#: include/linux/atomic/atomic-instrumented.h:2706
#: include/linux/atomic/atomic-instrumented.h:2724
#: include/linux/atomic/atomic-instrumented.h:2743
#: include/linux/atomic/atomic-instrumented.h:2762
#: include/linux/atomic/atomic-instrumented.h:2783
#: include/linux/atomic/atomic-instrumented.h:2803
#: include/linux/atomic/atomic-instrumented.h:2824
#: include/linux/atomic/atomic-instrumented.h:2844
#: include/linux/atomic/atomic-instrumented.h:2867
#: include/linux/atomic/atomic-instrumented.h:2889
#: include/linux/atomic/atomic-instrumented.h:2912
#: include/linux/atomic/atomic-instrumented.h:2933
#: include/linux/atomic/atomic-instrumented.h:2951
#: include/linux/atomic/atomic-instrumented.h:2969
#: include/linux/atomic/atomic-instrumented.h:2988
#: include/linux/atomic/atomic-instrumented.h:3007
#: include/linux/atomic/atomic-instrumented.h:3025
#: include/linux/atomic/atomic-instrumented.h:3044
#: include/linux/atomic/atomic-instrumented.h:3063
#: include/linux/atomic/atomic-instrumented.h:3084
#: include/linux/atomic/atomic-instrumented.h:3103
#: include/linux/atomic/atomic-instrumented.h:3122
#: include/linux/atomic/atomic-instrumented.h:3141
#: include/linux/atomic/atomic-instrumented.h:3160
#: include/linux/atomic/atomic-instrumented.h:3179
#: include/linux/atomic/atomic-instrumented.h:3196
#: include/linux/atomic/atomic-instrumented.h:3214
#: include/linux/atomic/atomic-instrumented.h:3232
#: include/linux/atomic/atomic-instrumented.h:3251
#: include/linux/atomic/atomic-instrumented.h:3269
#: include/linux/atomic/atomic-instrumented.h:3288
#: include/linux/atomic/atomic-instrumented.h:3306
#: include/linux/atomic/atomic-instrumented.h:3325
#: include/linux/atomic/atomic-instrumented.h:3343
#: include/linux/atomic/atomic-instrumented.h:3362
#: include/linux/atomic/atomic-instrumented.h:3380
#: include/linux/atomic/atomic-instrumented.h:3399
#: include/linux/atomic/atomic-instrumented.h:3417
#: include/linux/atomic/atomic-instrumented.h:3435
#: include/linux/atomic/atomic-instrumented.h:3454
#: include/linux/atomic/atomic-instrumented.h:3472
#: include/linux/atomic/atomic-instrumented.h:3491
#: include/linux/atomic/atomic-instrumented.h:3509
#: include/linux/atomic/atomic-instrumented.h:3528
#: include/linux/atomic/atomic-instrumented.h:3546
#: include/linux/atomic/atomic-instrumented.h:3565
#: include/linux/atomic/atomic-instrumented.h:3582
#: include/linux/atomic/atomic-instrumented.h:3599
#: include/linux/atomic/atomic-instrumented.h:3617
#: include/linux/atomic/atomic-instrumented.h:3634
#: include/linux/atomic/atomic-instrumented.h:3652
#: include/linux/atomic/atomic-instrumented.h:3669
#: include/linux/atomic/atomic-instrumented.h:3687
#: include/linux/atomic/atomic-instrumented.h:3704
#: include/linux/atomic/atomic-instrumented.h:3722
#: include/linux/atomic/atomic-instrumented.h:3739
#: include/linux/atomic/atomic-instrumented.h:3756
#: include/linux/atomic/atomic-instrumented.h:3774
#: include/linux/atomic/atomic-instrumented.h:3791
#: include/linux/atomic/atomic-instrumented.h:3809
#: include/linux/atomic/atomic-instrumented.h:3826
#: include/linux/atomic/atomic-instrumented.h:3844
#: include/linux/atomic/atomic-instrumented.h:3861
#: include/linux/atomic/atomic-instrumented.h:3879
#: include/linux/atomic/atomic-instrumented.h:3897
#: include/linux/atomic/atomic-instrumented.h:3915
#: include/linux/atomic/atomic-instrumented.h:3934
#: include/linux/atomic/atomic-instrumented.h:3952
#: include/linux/atomic/atomic-instrumented.h:3971
#: include/linux/atomic/atomic-instrumented.h:3989
#: include/linux/atomic/atomic-instrumented.h:4007
#: include/linux/atomic/atomic-instrumented.h:4026
#: include/linux/atomic/atomic-instrumented.h:4044
#: include/linux/atomic/atomic-instrumented.h:4063
#: include/linux/atomic/atomic-instrumented.h:4081
#: include/linux/atomic/atomic-instrumented.h:4099
#: include/linux/atomic/atomic-instrumented.h:4118
#: include/linux/atomic/atomic-instrumented.h:4136
#: include/linux/atomic/atomic-instrumented.h:4155
#: include/linux/atomic/atomic-instrumented.h:4173
#: include/linux/atomic/atomic-instrumented.h:4191
#: include/linux/atomic/atomic-instrumented.h:4210
#: include/linux/atomic/atomic-instrumented.h:4228
#: include/linux/atomic/atomic-instrumented.h:4247
#: include/linux/atomic/atomic-instrumented.h:4265
#: include/linux/atomic/atomic-instrumented.h:4284
#: include/linux/atomic/atomic-instrumented.h:4302
#: include/linux/atomic/atomic-instrumented.h:4321
#: include/linux/atomic/atomic-instrumented.h:4340
#: include/linux/atomic/atomic-instrumented.h:4361
#: include/linux/atomic/atomic-instrumented.h:4381
#: include/linux/atomic/atomic-instrumented.h:4402
#: include/linux/atomic/atomic-instrumented.h:4422
#: include/linux/atomic/atomic-instrumented.h:4445
#: include/linux/atomic/atomic-instrumented.h:4467
#: include/linux/atomic/atomic-instrumented.h:4490
#: include/linux/atomic/atomic-instrumented.h:4511
#: include/linux/atomic/atomic-instrumented.h:4529
#: include/linux/atomic/atomic-instrumented.h:4547
#: include/linux/atomic/atomic-instrumented.h:4566
#: include/linux/atomic/atomic-instrumented.h:4585
#: include/linux/atomic/atomic-instrumented.h:4603
#: include/linux/atomic/atomic-instrumented.h:4622
#: include/linux/atomic/atomic-instrumented.h:4641
#: include/linux/atomic/atomic-instrumented.h:4662
#: include/linux/atomic/atomic-instrumented.h:4681
#: include/linux/atomic/atomic-instrumented.h:4700
#: include/linux/atomic/atomic-instrumented.h:4719
#: include/linux/atomic/atomic-instrumented.h:4738
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:448
#: include/linux/atomic/atomic-arch-fallback.h:464
#: include/linux/atomic/atomic-arch-fallback.h:494
#: include/linux/atomic/atomic-arch-fallback.h:511
#: include/linux/atomic/atomic-arch-fallback.h:537
#: include/linux/atomic/atomic-arch-fallback.h:554
#: include/linux/atomic/atomic-arch-fallback.h:581
#: include/linux/atomic/atomic-arch-fallback.h:608
#: include/linux/atomic/atomic-arch-fallback.h:634
#: include/linux/atomic/atomic-arch-fallback.h:657
#: include/linux/atomic/atomic-arch-fallback.h:684
#: include/linux/atomic/atomic-arch-fallback.h:711
#: include/linux/atomic/atomic-arch-fallback.h:737
#: include/linux/atomic/atomic-arch-fallback.h:760
#: include/linux/atomic/atomic-arch-fallback.h:777
#: include/linux/atomic/atomic-arch-fallback.h:804
#: include/linux/atomic/atomic-arch-fallback.h:831
#: include/linux/atomic/atomic-arch-fallback.h:857
#: include/linux/atomic/atomic-arch-fallback.h:880
#: include/linux/atomic/atomic-arch-fallback.h:907
#: include/linux/atomic/atomic-arch-fallback.h:934
#: include/linux/atomic/atomic-arch-fallback.h:960
#: include/linux/atomic/atomic-arch-fallback.h:982
#: include/linux/atomic/atomic-arch-fallback.h:1002
#: include/linux/atomic/atomic-arch-fallback.h:1028
#: include/linux/atomic/atomic-arch-fallback.h:1054
#: include/linux/atomic/atomic-arch-fallback.h:1079
#: include/linux/atomic/atomic-arch-fallback.h:1101
#: include/linux/atomic/atomic-arch-fallback.h:1127
#: include/linux/atomic/atomic-arch-fallback.h:1153
#: include/linux/atomic/atomic-arch-fallback.h:1178
#: include/linux/atomic/atomic-arch-fallback.h:1200
#: include/linux/atomic/atomic-arch-fallback.h:1220
#: include/linux/atomic/atomic-arch-fallback.h:1246
#: include/linux/atomic/atomic-arch-fallback.h:1272
#: include/linux/atomic/atomic-arch-fallback.h:1297
#: include/linux/atomic/atomic-arch-fallback.h:1319
#: include/linux/atomic/atomic-arch-fallback.h:1345
#: include/linux/atomic/atomic-arch-fallback.h:1371
#: include/linux/atomic/atomic-arch-fallback.h:1396
#: include/linux/atomic/atomic-arch-fallback.h:1419
#: include/linux/atomic/atomic-arch-fallback.h:1436
#: include/linux/atomic/atomic-arch-fallback.h:1463
#: include/linux/atomic/atomic-arch-fallback.h:1490
#: include/linux/atomic/atomic-arch-fallback.h:1516
#: include/linux/atomic/atomic-arch-fallback.h:1539
#: include/linux/atomic/atomic-arch-fallback.h:1560
#: include/linux/atomic/atomic-arch-fallback.h:1587
#: include/linux/atomic/atomic-arch-fallback.h:1614
#: include/linux/atomic/atomic-arch-fallback.h:1640
#: include/linux/atomic/atomic-arch-fallback.h:1663
#: include/linux/atomic/atomic-arch-fallback.h:1680
#: include/linux/atomic/atomic-arch-fallback.h:1707
#: include/linux/atomic/atomic-arch-fallback.h:1734
#: include/linux/atomic/atomic-arch-fallback.h:1760
#: include/linux/atomic/atomic-arch-fallback.h:1783
#: include/linux/atomic/atomic-arch-fallback.h:1800
#: include/linux/atomic/atomic-arch-fallback.h:1827
#: include/linux/atomic/atomic-arch-fallback.h:1854
#: include/linux/atomic/atomic-arch-fallback.h:1880
#: include/linux/atomic/atomic-arch-fallback.h:1903
#: include/linux/atomic/atomic-arch-fallback.h:1930
#: include/linux/atomic/atomic-arch-fallback.h:1957
#: include/linux/atomic/atomic-arch-fallback.h:1983
#: include/linux/atomic/atomic-arch-fallback.h:2007
#: include/linux/atomic/atomic-arch-fallback.h:2036
#: include/linux/atomic/atomic-arch-fallback.h:2065
#: include/linux/atomic/atomic-arch-fallback.h:2093
#: include/linux/atomic/atomic-arch-fallback.h:2118
#: include/linux/atomic/atomic-arch-fallback.h:2152
#: include/linux/atomic/atomic-arch-fallback.h:2186
#: include/linux/atomic/atomic-arch-fallback.h:2219
#: include/linux/atomic/atomic-arch-fallback.h:2248
#: include/linux/atomic/atomic-arch-fallback.h:2268
#: include/linux/atomic/atomic-arch-fallback.h:2288
#: include/linux/atomic/atomic-arch-fallback.h:2309
#: include/linux/atomic/atomic-arch-fallback.h:2336
#: include/linux/atomic/atomic-arch-fallback.h:2363
#: include/linux/atomic/atomic-arch-fallback.h:2389
#: include/linux/atomic/atomic-arch-fallback.h:2413
#: include/linux/atomic/atomic-arch-fallback.h:2443
#: include/linux/atomic/atomic-arch-fallback.h:2464
#: include/linux/atomic/atomic-arch-fallback.h:2485
#: include/linux/atomic/atomic-arch-fallback.h:2513
#: include/linux/atomic/atomic-arch-fallback.h:2541
#: include/linux/atomic/atomic-arch-fallback.h:2574
#: include/linux/atomic/atomic-arch-fallback.h:2590
#: include/linux/atomic/atomic-arch-fallback.h:2620
#: include/linux/atomic/atomic-arch-fallback.h:2637
#: include/linux/atomic/atomic-arch-fallback.h:2663
#: include/linux/atomic/atomic-arch-fallback.h:2680
#: include/linux/atomic/atomic-arch-fallback.h:2707
#: include/linux/atomic/atomic-arch-fallback.h:2734
#: include/linux/atomic/atomic-arch-fallback.h:2760
#: include/linux/atomic/atomic-arch-fallback.h:2783
#: include/linux/atomic/atomic-arch-fallback.h:2810
#: include/linux/atomic/atomic-arch-fallback.h:2837
#: include/linux/atomic/atomic-arch-fallback.h:2863
#: include/linux/atomic/atomic-arch-fallback.h:2886
#: include/linux/atomic/atomic-arch-fallback.h:2903
#: include/linux/atomic/atomic-arch-fallback.h:2930
#: include/linux/atomic/atomic-arch-fallback.h:2957
#: include/linux/atomic/atomic-arch-fallback.h:2983
#: include/linux/atomic/atomic-arch-fallback.h:3006
#: include/linux/atomic/atomic-arch-fallback.h:3033
#: include/linux/atomic/atomic-arch-fallback.h:3060
#: include/linux/atomic/atomic-arch-fallback.h:3086
#: include/linux/atomic/atomic-arch-fallback.h:3108
#: include/linux/atomic/atomic-arch-fallback.h:3128
#: include/linux/atomic/atomic-arch-fallback.h:3154
#: include/linux/atomic/atomic-arch-fallback.h:3180
#: include/linux/atomic/atomic-arch-fallback.h:3205
#: include/linux/atomic/atomic-arch-fallback.h:3227
#: include/linux/atomic/atomic-arch-fallback.h:3253
#: include/linux/atomic/atomic-arch-fallback.h:3279
#: include/linux/atomic/atomic-arch-fallback.h:3304
#: include/linux/atomic/atomic-arch-fallback.h:3326
#: include/linux/atomic/atomic-arch-fallback.h:3346
#: include/linux/atomic/atomic-arch-fallback.h:3372
#: include/linux/atomic/atomic-arch-fallback.h:3398
#: include/linux/atomic/atomic-arch-fallback.h:3423
#: include/linux/atomic/atomic-arch-fallback.h:3445
#: include/linux/atomic/atomic-arch-fallback.h:3471
#: include/linux/atomic/atomic-arch-fallback.h:3497
#: include/linux/atomic/atomic-arch-fallback.h:3522
#: include/linux/atomic/atomic-arch-fallback.h:3545
#: include/linux/atomic/atomic-arch-fallback.h:3562
#: include/linux/atomic/atomic-arch-fallback.h:3589
#: include/linux/atomic/atomic-arch-fallback.h:3616
#: include/linux/atomic/atomic-arch-fallback.h:3642
#: include/linux/atomic/atomic-arch-fallback.h:3665
#: include/linux/atomic/atomic-arch-fallback.h:3686
#: include/linux/atomic/atomic-arch-fallback.h:3713
#: include/linux/atomic/atomic-arch-fallback.h:3740
#: include/linux/atomic/atomic-arch-fallback.h:3766
#: include/linux/atomic/atomic-arch-fallback.h:3789
#: include/linux/atomic/atomic-arch-fallback.h:3806
#: include/linux/atomic/atomic-arch-fallback.h:3833
#: include/linux/atomic/atomic-arch-fallback.h:3860
#: include/linux/atomic/atomic-arch-fallback.h:3886
#: include/linux/atomic/atomic-arch-fallback.h:3909
#: include/linux/atomic/atomic-arch-fallback.h:3926
#: include/linux/atomic/atomic-arch-fallback.h:3953
#: include/linux/atomic/atomic-arch-fallback.h:3980
#: include/linux/atomic/atomic-arch-fallback.h:4006
#: include/linux/atomic/atomic-arch-fallback.h:4029
#: include/linux/atomic/atomic-arch-fallback.h:4056
#: include/linux/atomic/atomic-arch-fallback.h:4083
#: include/linux/atomic/atomic-arch-fallback.h:4109
#: include/linux/atomic/atomic-arch-fallback.h:4133
#: include/linux/atomic/atomic-arch-fallback.h:4162
#: include/linux/atomic/atomic-arch-fallback.h:4191
#: include/linux/atomic/atomic-arch-fallback.h:4219
#: include/linux/atomic/atomic-arch-fallback.h:4244
#: include/linux/atomic/atomic-arch-fallback.h:4278
#: include/linux/atomic/atomic-arch-fallback.h:4312
#: include/linux/atomic/atomic-arch-fallback.h:4345
#: include/linux/atomic/atomic-arch-fallback.h:4374
#: include/linux/atomic/atomic-arch-fallback.h:4394
#: include/linux/atomic/atomic-arch-fallback.h:4414
#: include/linux/atomic/atomic-arch-fallback.h:4435
#: include/linux/atomic/atomic-arch-fallback.h:4462
#: include/linux/atomic/atomic-arch-fallback.h:4489
#: include/linux/atomic/atomic-arch-fallback.h:4515
#: include/linux/atomic/atomic-arch-fallback.h:4539
#: include/linux/atomic/atomic-arch-fallback.h:4569
#: include/linux/atomic/atomic-arch-fallback.h:4590
#: include/linux/atomic/atomic-arch-fallback.h:4611
#: include/linux/atomic/atomic-arch-fallback.h:4639
#: include/linux/atomic/atomic-arch-fallback.h:4667
msgid "**Description**"
msgstr ""

#: ../../../driver-api/basics:7: include/linux/module.h:84
msgid ""
"module_init() will either be called during do_initcalls() (if builtin) or at "
"module insertion time (if a module).  There can only be one per module."
msgstr ""

#: ../../../driver-api/basics:7: include/linux/module.h:94
msgid "``module_exit (x)``"
msgstr ""

#: ../../../driver-api/basics:7: include/linux/module.h:92
msgid "driver exit entry point"
msgstr ""

#: ../../../driver-api/basics:7: include/linux/module.h:93
msgid "function to be run when driver is removed"
msgstr ""

#: ../../../driver-api/basics:7: include/linux/module.h:94
msgid ""
"module_exit() will wrap the driver clean-up code with cleanup_module() when "
"used with rmmod when the driver is a module.  If the driver is statically "
"compiled into the kernel, module_exit() has no effect. There can only be one "
"per module."
msgstr ""

#: ../../../driver-api/basics:7: include/linux/module.h:387
msgid "ELF information preserved from the livepatch module"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:86
#: include/linux/mod_devicetable.h:631 include/linux/mod_devicetable.h:660
#: include/linux/mod_devicetable.h:674 include/linux/mod_devicetable.h:735
#: include/linux/mod_devicetable.h:755 include/linux/mod_devicetable.h:781
#: include/linux/mod_devicetable.h:794 include/linux/mod_devicetable.h:825
#: include/linux/mod_devicetable.h:837 include/linux/mod_devicetable.h:850
#: include/linux/mod_devicetable.h:865 include/linux/mod_devicetable.h:913
#: include/linux/mod_devicetable.h:929 include/linux/mod_devicetable.h:945
#: include/linux/mod_devicetable.h:974 ../../../driver-api/basics:21:
#: include/linux/sched.h:358 ../../../driver-api/basics:54:
#: include/linux/hrtimer.h:90 ../../../driver-api/basics:7:
#: include/linux/module.h:391
msgid "**Definition**::"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:104
#: include/linux/mod_devicetable.h:638 include/linux/mod_devicetable.h:668
#: include/linux/mod_devicetable.h:680 include/linux/mod_devicetable.h:744
#: include/linux/mod_devicetable.h:762 include/linux/mod_devicetable.h:788
#: include/linux/mod_devicetable.h:805 include/linux/mod_devicetable.h:833
#: include/linux/mod_devicetable.h:843 include/linux/mod_devicetable.h:857
#: include/linux/mod_devicetable.h:872 include/linux/mod_devicetable.h:921
#: include/linux/mod_devicetable.h:936 include/linux/mod_devicetable.h:957
#: include/linux/mod_devicetable.h:981 ../../../driver-api/basics:21:
#: include/linux/sched.h:368 ../../../driver-api/basics:54:
#: include/linux/hrtimer.h:97 ../../../driver-api/basics:7:
#: include/linux/module.h:400
msgid "**Members**"
msgstr ""

#: ../../../driver-api/basics:7: include/linux/module.h:389
msgid "``hdr``"
msgstr ""

#: ../../../driver-api/basics:7: include/linux/module.h:390
msgid "ELF header"
msgstr ""

#: ../../../driver-api/basics:7: include/linux/module.h:390
msgid "``sechdrs``"
msgstr ""

#: ../../../driver-api/basics:7: include/linux/module.h:391
msgid "Section header table"
msgstr ""

#: ../../../driver-api/basics:7: include/linux/module.h:391
msgid "``secstrings``"
msgstr ""

#: ../../../driver-api/basics:7: include/linux/module.h:392
msgid "String table for the section headers"
msgstr ""

#: ../../../driver-api/basics:7: include/linux/module.h:392
msgid "``symndx``"
msgstr ""

#: ../../../driver-api/basics:7: include/linux/module.h:393
msgid "The symbol table section index"
msgstr ""

#: ../../../driver-api/basics:7: include/linux/module.h:686
msgid "take module refcount unless module is being removed"
msgstr ""

#: ../../../driver-api/basics:7: include/linux/module.h:692
#: include/linux/module.h:724
msgid "``struct module *module``"
msgstr ""

#: ../../../driver-api/basics:7: include/linux/module.h:687
msgid "the module we should check for"
msgstr ""

#: ../../../driver-api/basics:7: include/linux/module.h:688
msgid ""
"Only try to get a module reference count if the module is not being removed. "
"This call will fail if the module is in the process of being removed."
msgstr ""

#: ../../../driver-api/basics:7: include/linux/module.h:691
msgid ""
"Care must also be taken to ensure the module exists and is alive prior to "
"usage of this call. This can be gauranteed through two means:"
msgstr ""

#: ../../../driver-api/basics:7: include/linux/module.h:694
msgid ""
"Direct protection: you know an earlier caller must have increased the module "
"reference through __module_get(). This can typically be achieved by having "
"another entity other than the module itself increment the module reference "
"count."
msgstr ""

#: ../../../driver-api/basics:7: include/linux/module.h:699
msgid ""
"Implied protection: there is an implied protection against module removal. "
"An example of this is the implied protection used by kernfs / sysfs. The "
"sysfs store / read file operations are guaranteed to exist through the use "
"of kernfs's active reference (see kernfs_active()) and a sysfs / kernfs file "
"removal cannot happen unless the same file is not active. Therefore, if a "
"sysfs file is being read or written to the module which created it must "
"still exist. It is therefore safe to use try_module_get() on module sysfs "
"store / read ops."
msgstr ""

#: ../../../driver-api/basics:7: include/linux/module.h:708
msgid ""
"One of the real values to try_module_get() is the module_is_live() check "
"which ensures that the caller of try_module_get() can yield to userspace "
"module removal requests and gracefully fail if the module is on its way out."
msgstr ""

#: ../../../driver-api/basics:7: include/linux/module.h:712
msgid "Returns true if the reference count was successfully incremented."
msgstr ""

#: ../../../driver-api/basics:7: include/linux/module.h:718
msgid "release a reference count to a module"
msgstr ""

#: ../../../driver-api/basics:7: include/linux/module.h:719
msgid "the module we should release a reference count for"
msgstr ""

#: ../../../driver-api/basics:7: include/linux/module.h:720
msgid ""
"If you successfully bump a reference count to a module with "
"try_module_get(), when you are finished you must call module_put() to "
"release that reference count."
msgstr ""

#: ../../../driver-api/basics.rst:11
msgid "Driver device table"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:82
msgid "identifies USB devices for probing and hotplugging"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:83
#: include/linux/mod_devicetable.h:791
msgid "``match_flags``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:84
msgid ""
"Bit mask controlling which of the other fields are used to match against new "
"devices. Any field except for driver_info may be used, although some only "
"make sense in conjunction with other fields. This is usually set by a "
"USB_DEVICE_*() macro, which sets all other fields in this structure except "
"for driver_info."
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:88
msgid "``idVendor``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:89
msgid ""
"USB vendor ID for a device; numbers are assigned by the USB forum to its "
"members."
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:90
msgid "``idProduct``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:91
msgid "Vendor-assigned product ID."
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:91
msgid "``bcdDevice_lo``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:92
msgid ""
"Low end of range of vendor-assigned product version numbers. This is also "
"used to identify individual product versions, for a range consisting of a "
"single device."
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:94
msgid "``bcdDevice_hi``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:95
msgid ""
"High end of version number range.  The range of product versions is "
"inclusive."
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:96
msgid "``bDeviceClass``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:97
msgid ""
"Class of device; numbers are assigned by the USB forum.  Products may choose "
"to implement classes, or be vendor-specific.  Device classes specify "
"behavior of all the interfaces on a device."
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:100
msgid "``bDeviceSubClass``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:101
msgid "Subclass of device; associated with bDeviceClass."
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:101
msgid "``bDeviceProtocol``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:102
msgid "Protocol of device; associated with bDeviceClass."
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:102
msgid "``bInterfaceClass``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:103
msgid ""
"Class of interface; numbers are assigned by the USB forum.  Products may "
"choose to implement classes, or be vendor-specific.  Interface classes "
"specify behavior only of a given interface; other interfaces may support "
"other classes."
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:106
msgid "``bInterfaceSubClass``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:107
msgid "Subclass of interface; associated with bInterfaceClass."
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:107
msgid "``bInterfaceProtocol``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:108
msgid "Protocol of interface; associated with bInterfaceClass."
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:108
msgid "``bInterfaceNumber``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:109
msgid ""
"Number of interface; composite devices may use fixed interface numbers to "
"differentiate between vendor-specific interfaces."
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:111
#: include/linux/mod_devicetable.h:735
msgid "``driver_info``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:112
msgid ""
"Holds information used by the driver.  Usually it holds a pointer to a "
"descriptor understood by the driver, or perhaps device flags."
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:114
msgid ""
"In most cases, drivers will create a table of device IDs by using "
"USB_DEVICE(), or similar macros designed for that purpose. They will then "
"export it to userspace using MODULE_DEVICE_TABLE(), and provide it to the "
"USB core through their usb_driver structure."
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:119
msgid ""
"See the usb_match_id() function for information about how matches are "
"performed.  Briefly, you will normally use one of several macros to help "
"construct these entries.  Each entry you provide will either identify one or "
"more specific products, or will identify a class of products which have "
"agreed to behave the same.  You should put the more specific matches towards "
"the beginning of your table, so that driver_info can record quirks of "
"specific products."
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:227
msgid "``ACPI_DEVICE_CLASS (_cls, _msk)``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:225
msgid ""
"macro used to describe an ACPI device with the PCI-defined class-code "
"information"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:231
msgid "``_cls``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:228
msgid "the class, subclass, prog-if triple for this device"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:230
msgid "``_msk``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:229
msgid "the class mask for this device"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:230
msgid ""
"This macro is used to create a struct acpi_device_id that matches a specific "
"PCI class. The .id and .driver_data fields will be left initialized with the "
"default value."
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:627
msgid "identifies PHY devices on an MDIO/MII bus"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:628
msgid "``phy_id``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:629
msgid ""
"The result of (mdio_read(:c:type:`MII_PHYSID1`) << 16 | mdio_read(:c:type:"
"`MII_PHYSID2`)) & **phy_id_mask** for this PHY type"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:631
msgid "``phy_id_mask``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:632
msgid ""
"Defines the significant bits of **phy_id**.  A value of 0 is used to "
"terminate an array of struct mdio_device_id."
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:656
msgid "identifies a device on an AMBA bus"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:657
msgid "``id``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:658
msgid "The significant bits if the hardware device ID"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:658
msgid "``mask``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:659
msgid ""
"Bitmask specifying which bits of the id field are significant when "
"matching.  A driver binds to a device when ((hardware device ID) & mask) == "
"id."
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:661
#: ../../../driver-api/basics:78: include/linux/kthread.h:20
#: include/linux/kthread.h:46
msgid "``data``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:662
msgid "Private data used by the driver."
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:670
msgid "identifies devices in MIPS CDMM bus"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:671
#: include/linux/mod_devicetable.h:910
msgid "``type``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:672
msgid "Device type identifier."
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:731
msgid "MEI client device identifier"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:732
msgid "``name``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:733
msgid "helper name"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:733
#: include/linux/mod_devicetable.h:834
msgid "``uuid``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:734
msgid "client uuid"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:734
msgid "``version``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:735
msgid "client protocol version"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:736
msgid "information used by the driver."
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:736
msgid "identifies mei client device by uuid and name"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:751
msgid "RIO device identifier"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:752
msgid "``did``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:753
msgid "RapidIO device ID"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:753
msgid "``vid``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:754
msgid "RapidIO vendor ID"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:754
msgid "``asm_did``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:755
msgid "RapidIO assembly device ID"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:755
msgid "``asm_vid``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:756
msgid "RapidIO assembly vendor ID"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:756
msgid ""
"Identifies a RapidIO device based on both the device/vendor IDs and the "
"assembly device/vendor IDs."
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:777
msgid "MC object device identifier"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:778
#: include/linux/mod_devicetable.h:942
msgid "``vendor``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:779
msgid "vendor ID"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:779
msgid "``obj_type``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:780
msgid "MC object type"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:780
msgid ""
"Type of entries in the \"device Id\" table for MC object devices supported "
"by a MC object device driver. The last entry of the table has vendor set to "
"0x0"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:790
msgid "Thunderbolt service identifiers"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:792
msgid "Flags used to match the structure"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:792
msgid "``protocol_key``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:793
msgid "Protocol key the service supports"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:793
msgid "``protocol_id``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:794
msgid "Protocol id the service supports"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:794
msgid "``protocol_version``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:795
msgid "Version of the protocol"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:795
msgid "``protocol_revision``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:796
msgid "Revision of the protocol software"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:796
#: include/linux/mod_devicetable.h:824 include/linux/mod_devicetable.h:863
#: include/linux/mod_devicetable.h:912 include/linux/mod_devicetable.h:927
#: include/linux/mod_devicetable.h:972
msgid "``driver_data``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:797
#: include/linux/mod_devicetable.h:825
msgid "Driver specific data"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:797
msgid ""
"Thunderbolt XDomain services are exposed as devices where each device "
"carries the protocol information the service supports. Thunderbolt XDomain "
"service drivers match against that information."
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:821
msgid "USB Type-C alternate mode identifiers"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:822
msgid "``svid``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:823
msgid "Standard or Vendor ID"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:823
msgid "``mode``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:824
msgid "Mode index"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:833
msgid "tee based device identifier"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:835
msgid "For TEE based client devices we use the device uuid as the identifier."
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:846
msgid "WMI device identifier"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:847
msgid "``guid_string``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:848
msgid "36 char string of the form fa50ff2b-f2e8-45de-83fa-65417f2f49ba"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:848
msgid "``context``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:849
#: include/linux/mod_devicetable.h:928
msgid "pointer to driver specific data"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:861
msgid "MHI device identification"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:862
msgid "``chan``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:863
msgid "MHI channel name"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:864
msgid "driver data;"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:909
msgid "dfl device identifier"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:911
msgid "DFL FIU type of the device. See enum dfl_id_type."
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:911
msgid "``feature_id``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:912
msgid "feature identifier local to its DFL FIU type."
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:913
msgid "driver specific data."
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:925
msgid "ISHTP device identifier"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:926
msgid "``guid``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:927
msgid "GUID of the device."
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:941
msgid "CDX device identifier"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:943
msgid "Vendor ID"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:943
msgid "``device``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:944
msgid "Device ID"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:944
msgid "``subvendor``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:945
msgid "Subsystem vendor ID (or CDX_ANY_ID)"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:945
msgid "``subdevice``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:946
msgid "Subsystem device ID (or CDX_ANY_ID)"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:946
msgid "``class``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:947
msgid ""
"Device class Most drivers do not need to specify class/class_mask as vendor/"
"device is normally sufficient."
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:949
msgid "``class_mask``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:950
msgid "Limit which sub-fields of the class field are compared."
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:950
msgid "``override_only``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:951
msgid "Match only when dev->driver_override is this driver."
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:951
msgid ""
"Type of entries in the \"device Id\" table for CDX devices supported by a "
"CDX device driver."
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:970
msgid "Identifies a coreboot table entry"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:971
msgid "``tag``"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:972
msgid "tag ID"
msgstr ""

#: ../../../driver-api/basics:13: include/linux/mod_devicetable.h:973
msgid "driver specific data"
msgstr ""

#: ../../../driver-api/basics.rst:19
msgid "Delaying and scheduling routines"
msgstr ""

#: ../../../driver-api/basics:21: include/linux/sched.h:354
msgid "snapshot of system and user cputime"
msgstr ""

#: ../../../driver-api/basics:21: include/linux/sched.h:355
msgid "``utime``"
msgstr ""

#: ../../../driver-api/basics:21: include/linux/sched.h:356
msgid "time spent in user mode"
msgstr ""

#: ../../../driver-api/basics:21: include/linux/sched.h:356
msgid "``stime``"
msgstr ""

#: ../../../driver-api/basics:21: include/linux/sched.h:357
msgid "time spent in system mode"
msgstr ""

#: ../../../driver-api/basics:21: include/linux/sched.h:357
#: ../../../driver-api/basics:63: include/linux/wait.h:1033
#: include/linux/wait.h:1063 include/linux/wait.h:1097
#: include/linux/wait.h:1131 include/linux/wait.h:1169
msgid "``lock``"
msgstr ""

#: ../../../driver-api/basics:21: include/linux/sched.h:358
msgid "protects the above two fields"
msgstr ""

#: ../../../driver-api/basics:21: include/linux/sched.h:358
msgid ""
"Stores previous user/system time values such that we can guarantee "
"monotonicity."
msgstr ""

#: ../../../driver-api/basics:21: include/linux/sched.h:1868
msgid "set CPU affinity mask of a task"
msgstr ""

#: ../../../driver-api/basics:21: include/linux/sched.h:1874
#: ../../../driver-api/basics:24: kernel/sched/core.c:4418
#: ../../../driver-api/basics:27: kernel/sched/cpupri.c:132
#: ../../../driver-api/basics:30: kernel/sched/fair.c:7954
#: kernel/sched/fair.c:10642 ../../../driver-api/basics:72: kernel/exit.c:1305
#: ../../../driver-api/basics:81: kernel/kthread.c:629
msgid "``struct task_struct *p``"
msgstr ""

#: ../../../driver-api/basics:21: include/linux/sched.h:1869
msgid "the task"
msgstr ""

#: ../../../driver-api/basics:21: include/linux/sched.h:1871
msgid "``const struct cpumask *new_mask``"
msgstr ""

#: ../../../driver-api/basics:21: include/linux/sched.h:1870
msgid "CPU affinity mask"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:31
#: include/linux/atomic/atomic-long.h:51 include/linux/atomic/atomic-long.h:72
#: include/linux/atomic/atomic-long.h:93 include/linux/atomic/atomic-long.h:114
#: include/linux/atomic/atomic-long.h:135
#: include/linux/atomic/atomic-long.h:156
#: include/linux/atomic/atomic-long.h:177
#: include/linux/atomic/atomic-long.h:198
#: include/linux/atomic/atomic-long.h:219
#: include/linux/atomic/atomic-long.h:240
#: include/linux/atomic/atomic-long.h:261
#: include/linux/atomic/atomic-long.h:282
#: include/linux/atomic/atomic-long.h:303
#: include/linux/atomic/atomic-long.h:324
#: include/linux/atomic/atomic-long.h:345
#: include/linux/atomic/atomic-long.h:366
#: include/linux/atomic/atomic-long.h:387
#: include/linux/atomic/atomic-long.h:408
#: include/linux/atomic/atomic-long.h:429
#: include/linux/atomic/atomic-long.h:450
#: include/linux/atomic/atomic-long.h:471
#: include/linux/atomic/atomic-long.h:491
#: include/linux/atomic/atomic-long.h:511
#: include/linux/atomic/atomic-long.h:531
#: include/linux/atomic/atomic-long.h:551
#: include/linux/atomic/atomic-long.h:571
#: include/linux/atomic/atomic-long.h:591
#: include/linux/atomic/atomic-long.h:611
#: include/linux/atomic/atomic-long.h:631
#: include/linux/atomic/atomic-long.h:651
#: include/linux/atomic/atomic-long.h:671
#: include/linux/atomic/atomic-long.h:691
#: include/linux/atomic/atomic-long.h:711
#: include/linux/atomic/atomic-long.h:731
#: include/linux/atomic/atomic-long.h:751
#: include/linux/atomic/atomic-long.h:771
#: include/linux/atomic/atomic-long.h:791
#: include/linux/atomic/atomic-long.h:811
#: include/linux/atomic/atomic-long.h:831
#: include/linux/atomic/atomic-long.h:852
#: include/linux/atomic/atomic-long.h:873
#: include/linux/atomic/atomic-long.h:894
#: include/linux/atomic/atomic-long.h:915
#: include/linux/atomic/atomic-long.h:936
#: include/linux/atomic/atomic-long.h:957
#: include/linux/atomic/atomic-long.h:978
#: include/linux/atomic/atomic-long.h:999
#: include/linux/atomic/atomic-long.h:1020
#: include/linux/atomic/atomic-long.h:1041
#: include/linux/atomic/atomic-long.h:1062
#: include/linux/atomic/atomic-long.h:1083
#: include/linux/atomic/atomic-long.h:1104
#: include/linux/atomic/atomic-long.h:1125
#: include/linux/atomic/atomic-long.h:1146
#: include/linux/atomic/atomic-long.h:1167
#: include/linux/atomic/atomic-long.h:1188
#: include/linux/atomic/atomic-long.h:1209
#: include/linux/atomic/atomic-long.h:1230
#: include/linux/atomic/atomic-long.h:1251
#: include/linux/atomic/atomic-long.h:1272
#: include/linux/atomic/atomic-long.h:1293
#: include/linux/atomic/atomic-long.h:1314
#: include/linux/atomic/atomic-long.h:1335
#: include/linux/atomic/atomic-long.h:1358
#: include/linux/atomic/atomic-long.h:1381
#: include/linux/atomic/atomic-long.h:1404
#: include/linux/atomic/atomic-long.h:1427
#: include/linux/atomic/atomic-long.h:1451
#: include/linux/atomic/atomic-long.h:1475
#: include/linux/atomic/atomic-long.h:1499
#: include/linux/atomic/atomic-long.h:1523
#: include/linux/atomic/atomic-long.h:1544
#: include/linux/atomic/atomic-long.h:1564
#: include/linux/atomic/atomic-long.h:1584
#: include/linux/atomic/atomic-long.h:1605
#: include/linux/atomic/atomic-long.h:1626
#: include/linux/atomic/atomic-long.h:1647
#: include/linux/atomic/atomic-long.h:1668
#: include/linux/atomic/atomic-long.h:1691
#: include/linux/atomic/atomic-long.h:1714
#: include/linux/atomic/atomic-long.h:1735
#: include/linux/atomic/atomic-long.h:1756
#: include/linux/atomic/atomic-long.h:1777
#: include/linux/atomic/atomic-long.h:1798 ../../../driver-api/basics:108:
#: lib/kobject.c:150 lib/kobject.c:404 ../../../driver-api/basics:117:
#: include/linux/kernel.h:322 ../../../driver-api/basics:121:
#: kernel/printk/printk.c:285 kernel/printk/printk.c:2670
#: kernel/printk/printk.c:4960 ../../../driver-api/basics:131:
#: drivers/base/devres.c:158 drivers/base/devres.c:186
#: drivers/base/devres.c:282 drivers/base/devres.c:312
#: drivers/base/devres.c:348 drivers/base/devres.c:386
#: drivers/base/devres.c:416 drivers/base/devres.c:548
#: drivers/base/devres.c:668 drivers/base/devres.c:790
#: drivers/base/devres.c:852 drivers/base/devres.c:986
#: drivers/base/devres.c:1005 drivers/base/devres.c:1028
#: drivers/base/devres.c:1060 drivers/base/devres.c:1128
#: drivers/base/devres.c:1169 drivers/base/devres.c:1240
#: ../../../driver-api/basics:21: include/linux/sched.h:1872
#: include/linux/sched.h:1889 include/linux/sched.h:1913
#: ../../../driver-api/basics:24: kernel/sched/core.c:4420
#: ../../../driver-api/basics:27: kernel/sched/cpupri.c:143
#: kernel/sched/cpupri.c:209 kernel/sched/cpupri.c:277
#: ../../../driver-api/basics:30: kernel/sched/fair.c:4556
#: kernel/sched/fair.c:7988 kernel/sched/fair.c:10214 kernel/sched/fair.c:10246
#: kernel/sched/fair.c:10446 kernel/sched/fair.c:10643
#: kernel/sched/fair.c:11295 ../../../driver-api/basics:39:
#: include/linux/jiffies.h:96 include/linux/jiffies.h:124
#: include/linux/jiffies.h:136 include/linux/jiffies.h:145
#: include/linux/jiffies.h:156 include/linux/jiffies.h:166
#: include/linux/jiffies.h:178 include/linux/jiffies.h:195
#: include/linux/jiffies.h:209 include/linux/jiffies.h:221
#: include/linux/jiffies.h:235 include/linux/jiffies.h:246
#: include/linux/jiffies.h:260 include/linux/jiffies.h:267
#: include/linux/jiffies.h:275 include/linux/jiffies.h:282
#: include/linux/jiffies.h:290 include/linux/jiffies.h:297
#: include/linux/jiffies.h:305 include/linux/jiffies.h:312
#: include/linux/jiffies.h:444 include/linux/jiffies.h:515
#: include/linux/jiffies.h:537 include/linux/jiffies.h:577
#: ../../../driver-api/basics:42: kernel/time/time.c:374 kernel/time/time.c:398
#: kernel/time/time.c:446 kernel/time/time.c:521 kernel/time/time.c:568
#: kernel/time/time.c:586 kernel/time/time.c:613 kernel/time/time.c:660
#: kernel/time/time.c:680 kernel/time/time.c:703 kernel/time/time.c:753
#: kernel/time/time.c:769 kernel/time/time.c:793 kernel/time/time.c:826
#: kernel/time/time.c:843 kernel/time/time.c:869 kernel/time/time.c:901
#: kernel/time/time.c:947 kernel/time/time.c:966 kernel/time/time.c:983
#: kernel/time/time.c:1006 kernel/time/time.c:1028 kernel/time/time.c:1047
#: ../../../driver-api/basics:45: kernel/time/timer.c:1154
#: kernel/time/timer.c:1185 kernel/time/timer.c:1210 kernel/time/timer.c:1399
#: kernel/time/timer.c:1420 kernel/time/timer.c:1481 kernel/time/timer.c:1668
#: kernel/time/timer.c:1710 ../../../driver-api/basics:51:
#: include/linux/ktime.h:34 include/linux/ktime.h:88 include/linux/ktime.h:107
#: include/linux/ktime.h:119 include/linux/ktime.h:205
#: ../../../driver-api/basics:54: include/linux/hrtimer.h:305
#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:1033
#: kernel/time/hrtimer.c:1472 ../../../driver-api/basics:63:
#: include/linux/wait.h:410 include/linux/wait.h:527 include/linux/wait.h:723
#: include/linux/wait.h:760 include/linux/wait.h:1000
#: ../../../driver-api/basics:72: kernel/exit.c:1311
#: ../../../driver-api/basics:75: kernel/signal.c:276 kernel/signal.c:356
#: kernel/signal.c:2545 kernel/signal.c:4062 ../../../driver-api/basics:81:
#: kernel/kthread.c:1115 kernel/kthread.c:1276 kernel/kthread.c:1426
#: kernel/kthread.c:1525 kernel/kthread.c:1540 ../../../driver-api/basics:87:
#: include/linux/refcount.h:166 include/linux/refcount.h:207
#: include/linux/refcount.h:272 include/linux/refcount.h:330
#: include/linux/refcount.h:356 include/linux/refcount.h:422
#: include/linux/refcount.h:445 ../../../driver-api/basics:90:
#: lib/refcount.c:52 lib/refcount.c:71 lib/refcount.c:109 lib/refcount.c:140
#: lib/refcount.c:168 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:26
#: include/linux/atomic/atomic-instrumented.h:43
#: include/linux/atomic/atomic-instrumented.h:61
#: include/linux/atomic/atomic-instrumented.h:79
#: include/linux/atomic/atomic-instrumented.h:98
#: include/linux/atomic/atomic-instrumented.h:116
#: include/linux/atomic/atomic-instrumented.h:135
#: include/linux/atomic/atomic-instrumented.h:153
#: include/linux/atomic/atomic-instrumented.h:172
#: include/linux/atomic/atomic-instrumented.h:190
#: include/linux/atomic/atomic-instrumented.h:209
#: include/linux/atomic/atomic-instrumented.h:227
#: include/linux/atomic/atomic-instrumented.h:246
#: include/linux/atomic/atomic-instrumented.h:264
#: include/linux/atomic/atomic-instrumented.h:282
#: include/linux/atomic/atomic-instrumented.h:301
#: include/linux/atomic/atomic-instrumented.h:319
#: include/linux/atomic/atomic-instrumented.h:338
#: include/linux/atomic/atomic-instrumented.h:356
#: include/linux/atomic/atomic-instrumented.h:375
#: include/linux/atomic/atomic-instrumented.h:393
#: include/linux/atomic/atomic-instrumented.h:412
#: include/linux/atomic/atomic-instrumented.h:429
#: include/linux/atomic/atomic-instrumented.h:446
#: include/linux/atomic/atomic-instrumented.h:464
#: include/linux/atomic/atomic-instrumented.h:481
#: include/linux/atomic/atomic-instrumented.h:499
#: include/linux/atomic/atomic-instrumented.h:516
#: include/linux/atomic/atomic-instrumented.h:534
#: include/linux/atomic/atomic-instrumented.h:551
#: include/linux/atomic/atomic-instrumented.h:569
#: include/linux/atomic/atomic-instrumented.h:586
#: include/linux/atomic/atomic-instrumented.h:603
#: include/linux/atomic/atomic-instrumented.h:621
#: include/linux/atomic/atomic-instrumented.h:638
#: include/linux/atomic/atomic-instrumented.h:656
#: include/linux/atomic/atomic-instrumented.h:673
#: include/linux/atomic/atomic-instrumented.h:691
#: include/linux/atomic/atomic-instrumented.h:708
#: include/linux/atomic/atomic-instrumented.h:726
#: include/linux/atomic/atomic-instrumented.h:744
#: include/linux/atomic/atomic-instrumented.h:762
#: include/linux/atomic/atomic-instrumented.h:781
#: include/linux/atomic/atomic-instrumented.h:799
#: include/linux/atomic/atomic-instrumented.h:818
#: include/linux/atomic/atomic-instrumented.h:836
#: include/linux/atomic/atomic-instrumented.h:854
#: include/linux/atomic/atomic-instrumented.h:873
#: include/linux/atomic/atomic-instrumented.h:891
#: include/linux/atomic/atomic-instrumented.h:910
#: include/linux/atomic/atomic-instrumented.h:928
#: include/linux/atomic/atomic-instrumented.h:946
#: include/linux/atomic/atomic-instrumented.h:965
#: include/linux/atomic/atomic-instrumented.h:983
#: include/linux/atomic/atomic-instrumented.h:1002
#: include/linux/atomic/atomic-instrumented.h:1020
#: include/linux/atomic/atomic-instrumented.h:1038
#: include/linux/atomic/atomic-instrumented.h:1057
#: include/linux/atomic/atomic-instrumented.h:1075
#: include/linux/atomic/atomic-instrumented.h:1094
#: include/linux/atomic/atomic-instrumented.h:1112
#: include/linux/atomic/atomic-instrumented.h:1131
#: include/linux/atomic/atomic-instrumented.h:1149
#: include/linux/atomic/atomic-instrumented.h:1168
#: include/linux/atomic/atomic-instrumented.h:1188
#: include/linux/atomic/atomic-instrumented.h:1209
#: include/linux/atomic/atomic-instrumented.h:1229
#: include/linux/atomic/atomic-instrumented.h:1250
#: include/linux/atomic/atomic-instrumented.h:1271
#: include/linux/atomic/atomic-instrumented.h:1294
#: include/linux/atomic/atomic-instrumented.h:1316
#: include/linux/atomic/atomic-instrumented.h:1339
#: include/linux/atomic/atomic-instrumented.h:1358
#: include/linux/atomic/atomic-instrumented.h:1376
#: include/linux/atomic/atomic-instrumented.h:1394
#: include/linux/atomic/atomic-instrumented.h:1413
#: include/linux/atomic/atomic-instrumented.h:1432
#: include/linux/atomic/atomic-instrumented.h:1450
#: include/linux/atomic/atomic-instrumented.h:1469
#: include/linux/atomic/atomic-instrumented.h:1489
#: include/linux/atomic/atomic-instrumented.h:1510
#: include/linux/atomic/atomic-instrumented.h:1529
#: include/linux/atomic/atomic-instrumented.h:1548
#: include/linux/atomic/atomic-instrumented.h:1567
#: include/linux/atomic/atomic-instrumented.h:1586
#: include/linux/atomic/atomic-instrumented.h:1604
#: include/linux/atomic/atomic-instrumented.h:1621
#: include/linux/atomic/atomic-instrumented.h:1639
#: include/linux/atomic/atomic-instrumented.h:1657
#: include/linux/atomic/atomic-instrumented.h:1676
#: include/linux/atomic/atomic-instrumented.h:1694
#: include/linux/atomic/atomic-instrumented.h:1713
#: include/linux/atomic/atomic-instrumented.h:1731
#: include/linux/atomic/atomic-instrumented.h:1750
#: include/linux/atomic/atomic-instrumented.h:1768
#: include/linux/atomic/atomic-instrumented.h:1787
#: include/linux/atomic/atomic-instrumented.h:1805
#: include/linux/atomic/atomic-instrumented.h:1824
#: include/linux/atomic/atomic-instrumented.h:1842
#: include/linux/atomic/atomic-instrumented.h:1860
#: include/linux/atomic/atomic-instrumented.h:1879
#: include/linux/atomic/atomic-instrumented.h:1897
#: include/linux/atomic/atomic-instrumented.h:1916
#: include/linux/atomic/atomic-instrumented.h:1934
#: include/linux/atomic/atomic-instrumented.h:1953
#: include/linux/atomic/atomic-instrumented.h:1971
#: include/linux/atomic/atomic-instrumented.h:1990
#: include/linux/atomic/atomic-instrumented.h:2007
#: include/linux/atomic/atomic-instrumented.h:2024
#: include/linux/atomic/atomic-instrumented.h:2042
#: include/linux/atomic/atomic-instrumented.h:2059
#: include/linux/atomic/atomic-instrumented.h:2077
#: include/linux/atomic/atomic-instrumented.h:2094
#: include/linux/atomic/atomic-instrumented.h:2112
#: include/linux/atomic/atomic-instrumented.h:2129
#: include/linux/atomic/atomic-instrumented.h:2147
#: include/linux/atomic/atomic-instrumented.h:2164
#: include/linux/atomic/atomic-instrumented.h:2181
#: include/linux/atomic/atomic-instrumented.h:2199
#: include/linux/atomic/atomic-instrumented.h:2216
#: include/linux/atomic/atomic-instrumented.h:2234
#: include/linux/atomic/atomic-instrumented.h:2251
#: include/linux/atomic/atomic-instrumented.h:2269
#: include/linux/atomic/atomic-instrumented.h:2286
#: include/linux/atomic/atomic-instrumented.h:2304
#: include/linux/atomic/atomic-instrumented.h:2322
#: include/linux/atomic/atomic-instrumented.h:2340
#: include/linux/atomic/atomic-instrumented.h:2359
#: include/linux/atomic/atomic-instrumented.h:2377
#: include/linux/atomic/atomic-instrumented.h:2396
#: include/linux/atomic/atomic-instrumented.h:2414
#: include/linux/atomic/atomic-instrumented.h:2432
#: include/linux/atomic/atomic-instrumented.h:2451
#: include/linux/atomic/atomic-instrumented.h:2469
#: include/linux/atomic/atomic-instrumented.h:2488
#: include/linux/atomic/atomic-instrumented.h:2506
#: include/linux/atomic/atomic-instrumented.h:2524
#: include/linux/atomic/atomic-instrumented.h:2543
#: include/linux/atomic/atomic-instrumented.h:2561
#: include/linux/atomic/atomic-instrumented.h:2580
#: include/linux/atomic/atomic-instrumented.h:2598
#: include/linux/atomic/atomic-instrumented.h:2616
#: include/linux/atomic/atomic-instrumented.h:2635
#: include/linux/atomic/atomic-instrumented.h:2653
#: include/linux/atomic/atomic-instrumented.h:2672
#: include/linux/atomic/atomic-instrumented.h:2690
#: include/linux/atomic/atomic-instrumented.h:2709
#: include/linux/atomic/atomic-instrumented.h:2727
#: include/linux/atomic/atomic-instrumented.h:2746
#: include/linux/atomic/atomic-instrumented.h:2766
#: include/linux/atomic/atomic-instrumented.h:2787
#: include/linux/atomic/atomic-instrumented.h:2807
#: include/linux/atomic/atomic-instrumented.h:2828
#: include/linux/atomic/atomic-instrumented.h:2849
#: include/linux/atomic/atomic-instrumented.h:2872
#: include/linux/atomic/atomic-instrumented.h:2894
#: include/linux/atomic/atomic-instrumented.h:2917
#: include/linux/atomic/atomic-instrumented.h:2936
#: include/linux/atomic/atomic-instrumented.h:2954
#: include/linux/atomic/atomic-instrumented.h:2972
#: include/linux/atomic/atomic-instrumented.h:2991
#: include/linux/atomic/atomic-instrumented.h:3010
#: include/linux/atomic/atomic-instrumented.h:3028
#: include/linux/atomic/atomic-instrumented.h:3047
#: include/linux/atomic/atomic-instrumented.h:3067
#: include/linux/atomic/atomic-instrumented.h:3088
#: include/linux/atomic/atomic-instrumented.h:3107
#: include/linux/atomic/atomic-instrumented.h:3126
#: include/linux/atomic/atomic-instrumented.h:3145
#: include/linux/atomic/atomic-instrumented.h:3164
#: include/linux/atomic/atomic-instrumented.h:3182
#: include/linux/atomic/atomic-instrumented.h:3199
#: include/linux/atomic/atomic-instrumented.h:3217
#: include/linux/atomic/atomic-instrumented.h:3235
#: include/linux/atomic/atomic-instrumented.h:3254
#: include/linux/atomic/atomic-instrumented.h:3272
#: include/linux/atomic/atomic-instrumented.h:3291
#: include/linux/atomic/atomic-instrumented.h:3309
#: include/linux/atomic/atomic-instrumented.h:3328
#: include/linux/atomic/atomic-instrumented.h:3346
#: include/linux/atomic/atomic-instrumented.h:3365
#: include/linux/atomic/atomic-instrumented.h:3383
#: include/linux/atomic/atomic-instrumented.h:3402
#: include/linux/atomic/atomic-instrumented.h:3420
#: include/linux/atomic/atomic-instrumented.h:3438
#: include/linux/atomic/atomic-instrumented.h:3457
#: include/linux/atomic/atomic-instrumented.h:3475
#: include/linux/atomic/atomic-instrumented.h:3494
#: include/linux/atomic/atomic-instrumented.h:3512
#: include/linux/atomic/atomic-instrumented.h:3531
#: include/linux/atomic/atomic-instrumented.h:3549
#: include/linux/atomic/atomic-instrumented.h:3568
#: include/linux/atomic/atomic-instrumented.h:3585
#: include/linux/atomic/atomic-instrumented.h:3602
#: include/linux/atomic/atomic-instrumented.h:3620
#: include/linux/atomic/atomic-instrumented.h:3637
#: include/linux/atomic/atomic-instrumented.h:3655
#: include/linux/atomic/atomic-instrumented.h:3672
#: include/linux/atomic/atomic-instrumented.h:3690
#: include/linux/atomic/atomic-instrumented.h:3707
#: include/linux/atomic/atomic-instrumented.h:3725
#: include/linux/atomic/atomic-instrumented.h:3742
#: include/linux/atomic/atomic-instrumented.h:3759
#: include/linux/atomic/atomic-instrumented.h:3777
#: include/linux/atomic/atomic-instrumented.h:3794
#: include/linux/atomic/atomic-instrumented.h:3812
#: include/linux/atomic/atomic-instrumented.h:3829
#: include/linux/atomic/atomic-instrumented.h:3847
#: include/linux/atomic/atomic-instrumented.h:3864
#: include/linux/atomic/atomic-instrumented.h:3882
#: include/linux/atomic/atomic-instrumented.h:3900
#: include/linux/atomic/atomic-instrumented.h:3918
#: include/linux/atomic/atomic-instrumented.h:3937
#: include/linux/atomic/atomic-instrumented.h:3955
#: include/linux/atomic/atomic-instrumented.h:3974
#: include/linux/atomic/atomic-instrumented.h:3992
#: include/linux/atomic/atomic-instrumented.h:4010
#: include/linux/atomic/atomic-instrumented.h:4029
#: include/linux/atomic/atomic-instrumented.h:4047
#: include/linux/atomic/atomic-instrumented.h:4066
#: include/linux/atomic/atomic-instrumented.h:4084
#: include/linux/atomic/atomic-instrumented.h:4102
#: include/linux/atomic/atomic-instrumented.h:4121
#: include/linux/atomic/atomic-instrumented.h:4139
#: include/linux/atomic/atomic-instrumented.h:4158
#: include/linux/atomic/atomic-instrumented.h:4176
#: include/linux/atomic/atomic-instrumented.h:4194
#: include/linux/atomic/atomic-instrumented.h:4213
#: include/linux/atomic/atomic-instrumented.h:4231
#: include/linux/atomic/atomic-instrumented.h:4250
#: include/linux/atomic/atomic-instrumented.h:4268
#: include/linux/atomic/atomic-instrumented.h:4287
#: include/linux/atomic/atomic-instrumented.h:4305
#: include/linux/atomic/atomic-instrumented.h:4324
#: include/linux/atomic/atomic-instrumented.h:4344
#: include/linux/atomic/atomic-instrumented.h:4365
#: include/linux/atomic/atomic-instrumented.h:4385
#: include/linux/atomic/atomic-instrumented.h:4406
#: include/linux/atomic/atomic-instrumented.h:4427
#: include/linux/atomic/atomic-instrumented.h:4450
#: include/linux/atomic/atomic-instrumented.h:4472
#: include/linux/atomic/atomic-instrumented.h:4495
#: include/linux/atomic/atomic-instrumented.h:4514
#: include/linux/atomic/atomic-instrumented.h:4532
#: include/linux/atomic/atomic-instrumented.h:4550
#: include/linux/atomic/atomic-instrumented.h:4569
#: include/linux/atomic/atomic-instrumented.h:4588
#: include/linux/atomic/atomic-instrumented.h:4606
#: include/linux/atomic/atomic-instrumented.h:4625
#: include/linux/atomic/atomic-instrumented.h:4645
#: include/linux/atomic/atomic-instrumented.h:4666
#: include/linux/atomic/atomic-instrumented.h:4685
#: include/linux/atomic/atomic-instrumented.h:4704
#: include/linux/atomic/atomic-instrumented.h:4723
#: include/linux/atomic/atomic-instrumented.h:4742
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:451
#: include/linux/atomic/atomic-arch-fallback.h:467
#: include/linux/atomic/atomic-arch-fallback.h:497
#: include/linux/atomic/atomic-arch-fallback.h:514
#: include/linux/atomic/atomic-arch-fallback.h:540
#: include/linux/atomic/atomic-arch-fallback.h:557
#: include/linux/atomic/atomic-arch-fallback.h:584
#: include/linux/atomic/atomic-arch-fallback.h:611
#: include/linux/atomic/atomic-arch-fallback.h:637
#: include/linux/atomic/atomic-arch-fallback.h:660
#: include/linux/atomic/atomic-arch-fallback.h:687
#: include/linux/atomic/atomic-arch-fallback.h:714
#: include/linux/atomic/atomic-arch-fallback.h:740
#: include/linux/atomic/atomic-arch-fallback.h:763
#: include/linux/atomic/atomic-arch-fallback.h:780
#: include/linux/atomic/atomic-arch-fallback.h:807
#: include/linux/atomic/atomic-arch-fallback.h:834
#: include/linux/atomic/atomic-arch-fallback.h:860
#: include/linux/atomic/atomic-arch-fallback.h:883
#: include/linux/atomic/atomic-arch-fallback.h:910
#: include/linux/atomic/atomic-arch-fallback.h:937
#: include/linux/atomic/atomic-arch-fallback.h:963
#: include/linux/atomic/atomic-arch-fallback.h:985
#: include/linux/atomic/atomic-arch-fallback.h:1005
#: include/linux/atomic/atomic-arch-fallback.h:1031
#: include/linux/atomic/atomic-arch-fallback.h:1057
#: include/linux/atomic/atomic-arch-fallback.h:1082
#: include/linux/atomic/atomic-arch-fallback.h:1104
#: include/linux/atomic/atomic-arch-fallback.h:1130
#: include/linux/atomic/atomic-arch-fallback.h:1156
#: include/linux/atomic/atomic-arch-fallback.h:1181
#: include/linux/atomic/atomic-arch-fallback.h:1203
#: include/linux/atomic/atomic-arch-fallback.h:1223
#: include/linux/atomic/atomic-arch-fallback.h:1249
#: include/linux/atomic/atomic-arch-fallback.h:1275
#: include/linux/atomic/atomic-arch-fallback.h:1300
#: include/linux/atomic/atomic-arch-fallback.h:1322
#: include/linux/atomic/atomic-arch-fallback.h:1348
#: include/linux/atomic/atomic-arch-fallback.h:1374
#: include/linux/atomic/atomic-arch-fallback.h:1399
#: include/linux/atomic/atomic-arch-fallback.h:1422
#: include/linux/atomic/atomic-arch-fallback.h:1439
#: include/linux/atomic/atomic-arch-fallback.h:1466
#: include/linux/atomic/atomic-arch-fallback.h:1493
#: include/linux/atomic/atomic-arch-fallback.h:1519
#: include/linux/atomic/atomic-arch-fallback.h:1542
#: include/linux/atomic/atomic-arch-fallback.h:1563
#: include/linux/atomic/atomic-arch-fallback.h:1590
#: include/linux/atomic/atomic-arch-fallback.h:1617
#: include/linux/atomic/atomic-arch-fallback.h:1643
#: include/linux/atomic/atomic-arch-fallback.h:1666
#: include/linux/atomic/atomic-arch-fallback.h:1683
#: include/linux/atomic/atomic-arch-fallback.h:1710
#: include/linux/atomic/atomic-arch-fallback.h:1737
#: include/linux/atomic/atomic-arch-fallback.h:1763
#: include/linux/atomic/atomic-arch-fallback.h:1786
#: include/linux/atomic/atomic-arch-fallback.h:1803
#: include/linux/atomic/atomic-arch-fallback.h:1830
#: include/linux/atomic/atomic-arch-fallback.h:1857
#: include/linux/atomic/atomic-arch-fallback.h:1883
#: include/linux/atomic/atomic-arch-fallback.h:1906
#: include/linux/atomic/atomic-arch-fallback.h:1933
#: include/linux/atomic/atomic-arch-fallback.h:1960
#: include/linux/atomic/atomic-arch-fallback.h:1986
#: include/linux/atomic/atomic-arch-fallback.h:2011
#: include/linux/atomic/atomic-arch-fallback.h:2040
#: include/linux/atomic/atomic-arch-fallback.h:2069
#: include/linux/atomic/atomic-arch-fallback.h:2097
#: include/linux/atomic/atomic-arch-fallback.h:2123
#: include/linux/atomic/atomic-arch-fallback.h:2157
#: include/linux/atomic/atomic-arch-fallback.h:2191
#: include/linux/atomic/atomic-arch-fallback.h:2224
#: include/linux/atomic/atomic-arch-fallback.h:2251
#: include/linux/atomic/atomic-arch-fallback.h:2271
#: include/linux/atomic/atomic-arch-fallback.h:2291
#: include/linux/atomic/atomic-arch-fallback.h:2312
#: include/linux/atomic/atomic-arch-fallback.h:2339
#: include/linux/atomic/atomic-arch-fallback.h:2366
#: include/linux/atomic/atomic-arch-fallback.h:2392
#: include/linux/atomic/atomic-arch-fallback.h:2417
#: include/linux/atomic/atomic-arch-fallback.h:2447
#: include/linux/atomic/atomic-arch-fallback.h:2468
#: include/linux/atomic/atomic-arch-fallback.h:2489
#: include/linux/atomic/atomic-arch-fallback.h:2517
#: include/linux/atomic/atomic-arch-fallback.h:2545
#: include/linux/atomic/atomic-arch-fallback.h:2577
#: include/linux/atomic/atomic-arch-fallback.h:2593
#: include/linux/atomic/atomic-arch-fallback.h:2623
#: include/linux/atomic/atomic-arch-fallback.h:2640
#: include/linux/atomic/atomic-arch-fallback.h:2666
#: include/linux/atomic/atomic-arch-fallback.h:2683
#: include/linux/atomic/atomic-arch-fallback.h:2710
#: include/linux/atomic/atomic-arch-fallback.h:2737
#: include/linux/atomic/atomic-arch-fallback.h:2763
#: include/linux/atomic/atomic-arch-fallback.h:2786
#: include/linux/atomic/atomic-arch-fallback.h:2813
#: include/linux/atomic/atomic-arch-fallback.h:2840
#: include/linux/atomic/atomic-arch-fallback.h:2866
#: include/linux/atomic/atomic-arch-fallback.h:2889
#: include/linux/atomic/atomic-arch-fallback.h:2906
#: include/linux/atomic/atomic-arch-fallback.h:2933
#: include/linux/atomic/atomic-arch-fallback.h:2960
#: include/linux/atomic/atomic-arch-fallback.h:2986
#: include/linux/atomic/atomic-arch-fallback.h:3009
#: include/linux/atomic/atomic-arch-fallback.h:3036
#: include/linux/atomic/atomic-arch-fallback.h:3063
#: include/linux/atomic/atomic-arch-fallback.h:3089
#: include/linux/atomic/atomic-arch-fallback.h:3111
#: include/linux/atomic/atomic-arch-fallback.h:3131
#: include/linux/atomic/atomic-arch-fallback.h:3157
#: include/linux/atomic/atomic-arch-fallback.h:3183
#: include/linux/atomic/atomic-arch-fallback.h:3208
#: include/linux/atomic/atomic-arch-fallback.h:3230
#: include/linux/atomic/atomic-arch-fallback.h:3256
#: include/linux/atomic/atomic-arch-fallback.h:3282
#: include/linux/atomic/atomic-arch-fallback.h:3307
#: include/linux/atomic/atomic-arch-fallback.h:3329
#: include/linux/atomic/atomic-arch-fallback.h:3349
#: include/linux/atomic/atomic-arch-fallback.h:3375
#: include/linux/atomic/atomic-arch-fallback.h:3401
#: include/linux/atomic/atomic-arch-fallback.h:3426
#: include/linux/atomic/atomic-arch-fallback.h:3448
#: include/linux/atomic/atomic-arch-fallback.h:3474
#: include/linux/atomic/atomic-arch-fallback.h:3500
#: include/linux/atomic/atomic-arch-fallback.h:3525
#: include/linux/atomic/atomic-arch-fallback.h:3548
#: include/linux/atomic/atomic-arch-fallback.h:3565
#: include/linux/atomic/atomic-arch-fallback.h:3592
#: include/linux/atomic/atomic-arch-fallback.h:3619
#: include/linux/atomic/atomic-arch-fallback.h:3645
#: include/linux/atomic/atomic-arch-fallback.h:3668
#: include/linux/atomic/atomic-arch-fallback.h:3689
#: include/linux/atomic/atomic-arch-fallback.h:3716
#: include/linux/atomic/atomic-arch-fallback.h:3743
#: include/linux/atomic/atomic-arch-fallback.h:3769
#: include/linux/atomic/atomic-arch-fallback.h:3792
#: include/linux/atomic/atomic-arch-fallback.h:3809
#: include/linux/atomic/atomic-arch-fallback.h:3836
#: include/linux/atomic/atomic-arch-fallback.h:3863
#: include/linux/atomic/atomic-arch-fallback.h:3889
#: include/linux/atomic/atomic-arch-fallback.h:3912
#: include/linux/atomic/atomic-arch-fallback.h:3929
#: include/linux/atomic/atomic-arch-fallback.h:3956
#: include/linux/atomic/atomic-arch-fallback.h:3983
#: include/linux/atomic/atomic-arch-fallback.h:4009
#: include/linux/atomic/atomic-arch-fallback.h:4032
#: include/linux/atomic/atomic-arch-fallback.h:4059
#: include/linux/atomic/atomic-arch-fallback.h:4086
#: include/linux/atomic/atomic-arch-fallback.h:4112
#: include/linux/atomic/atomic-arch-fallback.h:4137
#: include/linux/atomic/atomic-arch-fallback.h:4166
#: include/linux/atomic/atomic-arch-fallback.h:4195
#: include/linux/atomic/atomic-arch-fallback.h:4223
#: include/linux/atomic/atomic-arch-fallback.h:4249
#: include/linux/atomic/atomic-arch-fallback.h:4283
#: include/linux/atomic/atomic-arch-fallback.h:4317
#: include/linux/atomic/atomic-arch-fallback.h:4350
#: include/linux/atomic/atomic-arch-fallback.h:4377
#: include/linux/atomic/atomic-arch-fallback.h:4397
#: include/linux/atomic/atomic-arch-fallback.h:4417
#: include/linux/atomic/atomic-arch-fallback.h:4438
#: include/linux/atomic/atomic-arch-fallback.h:4465
#: include/linux/atomic/atomic-arch-fallback.h:4492
#: include/linux/atomic/atomic-arch-fallback.h:4518
#: include/linux/atomic/atomic-arch-fallback.h:4543
#: include/linux/atomic/atomic-arch-fallback.h:4573
#: include/linux/atomic/atomic-arch-fallback.h:4594
#: include/linux/atomic/atomic-arch-fallback.h:4615
#: include/linux/atomic/atomic-arch-fallback.h:4643
#: include/linux/atomic/atomic-arch-fallback.h:4671
msgid "**Return**"
msgstr ""

#: ../../../driver-api/basics:21: include/linux/sched.h:1872
msgid "zero if successful, or a negative error code"
msgstr ""

#: ../../../driver-api/basics:21: include/linux/sched.h:1886
msgid "return the nice value of a given task."
msgstr ""

#: ../../../driver-api/basics:21: include/linux/sched.h:1892
#: include/linux/sched.h:1916
msgid "``const struct task_struct *p``"
msgstr ""

#: ../../../driver-api/basics:21: include/linux/sched.h:1887
#: include/linux/sched.h:1911
msgid "the task in question."
msgstr ""

#: ../../../driver-api/basics:21: include/linux/sched.h:1889
msgid "The nice value [ -20 ... 0 ... 19 ]."
msgstr ""

#: ../../../driver-api/basics:21: include/linux/sched.h:1910
msgid "is the specified task an idle task?"
msgstr ""

#: ../../../driver-api/basics:21: include/linux/sched.h:1913
msgid "1 if **p** is an idle task. 0 otherwise."
msgstr ""

#: ../../../driver-api/basics:24: kernel/sched/core.c:4412
msgid "Wake up a specific process"
msgstr ""

#: ../../../driver-api/basics:24: kernel/sched/core.c:4413
msgid "The process to be woken up."
msgstr ""

#: ../../../driver-api/basics:24: kernel/sched/core.c:4414
msgid ""
"Attempt to wake up the nominated process and move it to the set of runnable "
"processes."
msgstr ""

#: ../../../driver-api/basics:24: kernel/sched/core.c:4418
msgid ""
"This function executes a full memory barrier before accessing the task state."
msgstr ""

#: ../../../driver-api/basics:24: kernel/sched/core.c:4418
msgid "1 if the process was woken up, 0 if it was already running."
msgstr ""

#: ../../../driver-api/basics:24: kernel/sched/core.c:4868
msgid "tell me when current is being preempted & rescheduled"
msgstr ""

#: ../../../driver-api/basics:24: kernel/sched/core.c:4874
#: kernel/sched/core.c:4887
msgid "``struct preempt_notifier *notifier``"
msgstr ""

#: ../../../driver-api/basics:24: kernel/sched/core.c:4869
msgid "notifier struct to register"
msgstr ""

#: ../../../driver-api/basics:24: kernel/sched/core.c:4881
msgid "no longer interested in preemption notifications"
msgstr ""

#: ../../../driver-api/basics:24: kernel/sched/core.c:4882
msgid "notifier struct to unregister"
msgstr ""

#: ../../../driver-api/basics:24: kernel/sched/core.c:4883
msgid "This is *not* safe to call from within a preemption notifier."
msgstr ""

#: ../../../driver-api/basics:24: kernel/sched/core.c:7164
msgid "preempt_schedule called by tracing"
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:249
#: kernel/printk/printk.c:273 kernel/printk/printk.c:284
#: kernel/printk/printk.c:2813 kernel/printk/printk.c:2835
#: kernel/printk/printk.c:3287 kernel/printk/printk.c:3311
#: kernel/printk/printk.c:4943 kernel/printk/printk.c:4957
#: kernel/printk/printk.c:5013 ../../../driver-api/basics:24:
#: kernel/sched/core.c:7170 ../../../driver-api/basics:39:
#: include/linux/jiffies.h:98 ../../../driver-api/basics:75:
#: kernel/signal.c:2660 kernel/signal.c:2693 kernel/signal.c:3179
#: ../../../driver-api/basics:81: kernel/kthread.c:166 kernel/kthread.c:184
msgid "``void``"
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:1
#: ../../../driver-api/basics:24: kernel/sched/core.c:1
#: ../../../driver-api/basics:39: include/linux/jiffies.h:1
#: ../../../driver-api/basics:75: kernel/signal.c:1
#: ../../../driver-api/basics:81: kernel/kthread.c:1
msgid "no arguments"
msgstr ""

#: ../../../driver-api/basics:24: kernel/sched/core.c:7165
msgid ""
"The tracing infrastructure uses preempt_enable_notrace to prevent recursion "
"and tracing preempt enabling caused by the tracing infrastructure itself. "
"But as tracing can happen in areas coming from userspace or just about to "
"enter userspace, a preempt enable can occur before user_exit() is called. "
"This will cause the scheduler to be called when the system is still in "
"usermode."
msgstr ""

#: ../../../driver-api/basics:24: kernel/sched/core.c:7172
msgid ""
"To prevent this, the preempt_enable_notrace will use this function instead "
"of preempt_schedule() to exit user context if needed before calling the "
"scheduler."
msgstr ""

#: ../../../driver-api/basics:27: kernel/sched/cpupri.c:129
msgid "find the best (lowest-pri) CPU in the system"
msgstr ""

#: ../../../driver-api/basics:27: kernel/sched/cpupri.c:135
#: kernel/sched/cpupri.c:208 kernel/sched/cpupri.c:280
#: kernel/sched/cpupri.c:313
msgid "``struct cpupri *cp``"
msgstr ""

#: ../../../driver-api/basics:27: kernel/sched/cpupri.c:130
#: kernel/sched/cpupri.c:203 kernel/sched/cpupri.c:275
#: kernel/sched/cpupri.c:308
msgid "The cpupri context"
msgstr ""

#: ../../../driver-api/basics:27: kernel/sched/cpupri.c:131
msgid "The task"
msgstr ""

#: ../../../driver-api/basics:27: kernel/sched/cpupri.c:133
msgid "``struct cpumask *lowest_mask``"
msgstr ""

#: ../../../driver-api/basics:27: kernel/sched/cpupri.c:132
msgid "A mask to fill in with selected CPUs (or NULL)"
msgstr ""

#: ../../../driver-api/basics:27: kernel/sched/cpupri.c:134
msgid "``bool (*fitness_fn)(struct task_struct *p, int cpu)``"
msgstr ""

#: ../../../driver-api/basics:27: kernel/sched/cpupri.c:133
msgid ""
"A pointer to a function to do custom checks whether the CPU fits a specific "
"criteria so that we only return those CPUs."
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:3
#: include/linux/kernel.h:198 include/linux/kernel.h:305
#: ../../../driver-api/basics:27: kernel/sched/cpupri.c:136
#: kernel/sched/cpupri.c:207 ../../../driver-api/basics:42:
#: kernel/time/time.c:491 ../../../driver-api/basics:75: kernel/signal.c:3555
msgid "**Note**"
msgstr ""

#: ../../../driver-api/basics:27: kernel/sched/cpupri.c:136
msgid ""
"This function returns the recommended CPUs as calculated during the current "
"invocation.  By the time the call returns, the CPUs may have in fact changed "
"priorities any number of times.  While not ideal, it is not an issue of "
"correctness since the normal rebalancer logic will correct any discrepancies "
"created by racing against the uncertainty of the current priority "
"configuration."
msgstr ""

#: ../../../driver-api/basics:27: kernel/sched/cpupri.c:143
msgid "(int)bool - CPUs were found"
msgstr ""

#: ../../../driver-api/basics:27: kernel/sched/cpupri.c:202
msgid "update the CPU priority setting"
msgstr ""

#: ../../../driver-api/basics:27: kernel/sched/cpupri.c:205
#: ../../../driver-api/basics:30: kernel/sched/fair.c:7957
#: kernel/sched/fair.c:10210 kernel/sched/fair.c:10645
#: ../../../driver-api/basics:45: kernel/time/timer.c:392
#: kernel/time/timer.c:463 kernel/time/timer.c:1291
#: ../../../driver-api/basics:78: include/linux/kthread.h:226
#: ../../../driver-api/basics:81: kernel/kthread.c:1092
msgid "``int cpu``"
msgstr ""

#: ../../../driver-api/basics:27: kernel/sched/cpupri.c:204
msgid "The target CPU"
msgstr ""

#: ../../../driver-api/basics:27: kernel/sched/cpupri.c:206
msgid "``int newpri``"
msgstr ""

#: ../../../driver-api/basics:27: kernel/sched/cpupri.c:205
msgid "The priority (INVALID,NORMAL,RT1-RT99,HIGHER) to assign to this CPU"
msgstr ""

#: ../../../driver-api/basics:27: kernel/sched/cpupri.c:207
msgid "Assumes cpu_rq(cpu)->lock is locked"
msgstr ""

#: ../../../driver-api/basics:27: kernel/sched/cpupri.c:209
msgid "(void)"
msgstr ""

#: ../../../driver-api/basics:27: kernel/sched/cpupri.c:274
msgid "initialize the cpupri structure"
msgstr ""

#: ../../../driver-api/basics:27: kernel/sched/cpupri.c:277
msgid "-ENOMEM on memory allocation failure."
msgstr ""

#: ../../../driver-api/basics:27: kernel/sched/cpupri.c:307
msgid "clean up the cpupri structure"
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:4066
msgid "update the tg's load avg"
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:4072
#: kernel/sched/fair.c:4547 kernel/sched/fair.c:4629 kernel/sched/fair.c:4684
msgid "``struct cfs_rq *cfs_rq``"
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:4067
msgid "the cfs_rq whose avg changed"
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:4068
msgid ""
"This function 'ensures': tg->load_avg := \\Sum tg->cfs_rq[]->avg.load. "
"However, because tg->load_avg is a global value there are performance "
"considerations."
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:4072
msgid ""
"In order to avoid having to look at the other cfs_rq's, we use a "
"differential update where we store the last value we propagated. This in "
"turn allows skipping updates if the differential is 'small'."
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:4076
msgid "Updating tg's load_avg is necessary before update_cfs_share()."
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:4544
msgid "update the cfs_rq's load/util averages"
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:4550
msgid "``u64 now``"
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:4545
msgid "current time, as per cfs_rq_clock_pelt()"
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:4546
msgid "cfs_rq to update"
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:4547
msgid ""
"The cfs_rq avg is the direct sum of all its entities (blocked and runnable) "
"avg. The immediate corollary is that all (fair) tasks must be attached."
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:4550
msgid ""
"cfs_rq->avg is used for task_h_load() and update_cfs_share() for example."
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:4553
msgid ""
"Since both these conditions indicate a changed cfs_rq->avg.load we should "
"call update_tg_load_avg() when this function returns true."
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:4553
msgid "true if the load decayed or we removed load."
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:4623
msgid "attach this entity to its cfs_rq load avg"
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:4624
msgid "cfs_rq to attach to"
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:4626
#: kernel/sched/fair.c:4681
msgid "``struct sched_entity *se``"
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:4625
msgid "sched_entity to attach"
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:4626
#: kernel/sched/fair.c:4681
msgid ""
"Must call update_cfs_rq_load_avg() before this, since we rely on cfs_rq->avg."
"last_update_time being current."
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:4678
msgid "detach this entity from its cfs_rq load avg"
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:4679
msgid "cfs_rq to detach from"
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:4680
msgid "sched_entity to detach"
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:7951
msgid "Estimates the amount of CPU capacity used by CFS tasks."
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:7952
msgid "the CPU to get the utilization for"
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:7953
msgid "task for which the CPU utilization should be predicted or NULL"
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:7955
msgid "``int dst_cpu``"
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:7954
msgid "CPU **p** migrates to, -1 if **p** moves from **cpu** or **p** == NULL"
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:7956
msgid "``int boost``"
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:7955
msgid "1 to enable boosting, otherwise 0"
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:7956
msgid ""
"The unit of the return value must be the same as the one of CPU capacity so "
"that CPU utilization can be compared with CPU capacity."
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:7959
msgid ""
"CPU utilization is the sum of running time of runnable tasks plus the recent "
"utilization of currently non-runnable tasks on that CPU. It represents the "
"amount of CPU capacity currently used by CFS tasks in the range [0..max CPU "
"capacity] with max CPU capacity being the CPU capacity at f_max."
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:7965
msgid ""
"The estimated CPU utilization is defined as the maximum between CPU "
"utilization and sum of the estimated utilization of the currently runnable "
"tasks on that CPU. It preserves a utilization \"snapshot\" of previously-"
"executed tasks, which helps better deduce how busy a CPU will be when a long-"
"sleeping task wakes up. The contribution to CPU utilization of such a task "
"would be significantly decayed at this point of time."
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:7972
msgid ""
"Boosted CPU utilization is defined as max(CPU runnable, CPU utilization). "
"CPU contention for CFS tasks can be detected by CPU runnable > CPU "
"utilization. Boosting is implemented in cpu_util() so that internal users (e."
"g. EAS) can use it next to external users (e.g. schedutil), latter via "
"cpu_util_cfs_boost()."
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:7978
msgid ""
"CPU utilization can be higher than the current CPU capacity (f_curr/f_max * "
"max CPU capacity) or even the max CPU capacity because of rounding errors as "
"well as task migrations or wakeups of new tasks. CPU utilization has to be "
"capped to fit into the [0..max CPU capacity] range. Otherwise a group of "
"CPUs (CPU0 util = 121% + CPU1 util = 80%) could be seen as over-utilized "
"even though CPU1 has 20% of spare CPU capacity. CPU utilization is allowed "
"to overshoot current CPU capacity though since this is useful for predicting "
"the CPU capacity required after task migrations (scheduler-driven DVFS)."
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:7989
msgid "(Boosted) (estimated) utilization for the specified CPU."
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:10207
msgid "Check whether asym_packing priority must be used"
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:10213
msgid "``struct sched_domain *sd``"
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:10208
msgid "The scheduling domain of the load balancing"
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:10209
msgid "A CPU"
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:10210
msgid ""
"Always use CPU priority when balancing load between SMT siblings. When "
"balancing load between cores, it is not sufficient that **cpu** is idle. "
"Only use CPU priority if the whole core is idle."
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:10215
msgid "True if the priority of **cpu** must be followed. False otherwise."
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:10239
msgid "Check if the destination CPU can do asym_packing balance"
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:10245
#: kernel/sched/fair.c:10349 kernel/sched/fair.c:10444
#: kernel/sched/fair.c:11029 kernel/sched/fair.c:11097
#: kernel/sched/fair.c:11295
msgid "``struct lb_env *env``"
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:10240
msgid "The load balancing environment"
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:10242
#: kernel/sched/fair.c:10348 kernel/sched/fair.c:10443
msgid "``struct sg_lb_stats *sgs``"
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:10241
msgid "Load-balancing statistics of the candidate busiest group"
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:10243
#: kernel/sched/fair.c:10347
msgid "``struct sched_group *group``"
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:10242
msgid "The candidate busiest group"
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:10243
msgid ""
"**env**::dst_cpu can do asym_packing if it has higher priority than the "
"preferred CPU of **group**."
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:10247
msgid ""
"true if **env**::dst_cpu can do with asym_packing load balance. False "
"otherwise."
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:10343
msgid "Update sched_group's statistics for load balancing."
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:10344
#: kernel/sched/fair.c:10439 kernel/sched/fair.c:11024
#: kernel/sched/fair.c:11291
msgid "The load balancing environment."
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:10346
#: kernel/sched/fair.c:10441 kernel/sched/fair.c:11026
#: kernel/sched/fair.c:11095
msgid "``struct sd_lb_stats *sds``"
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:10345
msgid "Load-balancing data with statistics of the local group."
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:10346
msgid "sched_group whose statistics are to be updated."
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:10347
msgid "variable to hold the statistics for this group."
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:10349
msgid "``bool *sg_overloaded``"
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:10348
msgid "sched_group is overloaded"
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:10350
msgid "``bool *sg_overutilized``"
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:10349
msgid "sched_group is overutilized"
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:10438
msgid "return 1 on busiest group"
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:10440
msgid "sched_domain statistics"
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:10442
msgid "``struct sched_group *sg``"
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:10441
msgid "sched_group candidate to be checked for being the busiest"
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:10442
msgid "sched_group statistics"
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:10443
msgid ""
"Determine if **sg** is a busier group than the previously selected busiest "
"group."
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:10447
msgid ""
"``true`` if **sg** is a busier group than the previously selected busiest "
"group. ``false`` otherwise."
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:10639
msgid "would a given CPU be idle without p ?"
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:10640
msgid "the processor on which idleness is tested."
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:10641
msgid "task which should be ignored."
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:10643
msgid "1 if the CPU would be idle. 0 otherwise."
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:11023
msgid "Update sched_domain's statistics for load balancing."
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:11025
msgid "variable to hold the statistics for this sched_domain."
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:11091
msgid ""
"Calculate the amount of imbalance present within the groups of a given "
"sched_domain during load balance."
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:11093
msgid "load balance environment"
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:11094
msgid "statistics of the sched_domain whose imbalance is to be calculated."
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:11289
msgid ""
"Returns the busiest group within the sched_domain if there is an imbalance."
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:11292
msgid ""
"Also calculates the amount of runnable load which should be moved to restore "
"balance."
msgstr ""

#: ../../../driver-api/basics:30: kernel/sched/fair.c:11296
msgid "The busiest group if imbalance exists."
msgstr ""

#: ../../../driver-api/basics:33: include/linux/completion.h:47
msgid "``DECLARE_COMPLETION (work)``"
msgstr ""

#: ../../../driver-api/basics:33: include/linux/completion.h:45
#: include/linux/completion.h:61
msgid "declare and initialize a completion structure"
msgstr ""

#: ../../../driver-api/basics:33: include/linux/completion.h:51
#: include/linux/completion.h:67
msgid "``work``"
msgstr ""

#: ../../../driver-api/basics:33: include/linux/completion.h:46
#: include/linux/completion.h:62
msgid "identifier for the completion structure"
msgstr ""

#: ../../../driver-api/basics:33: include/linux/completion.h:47
msgid ""
"This macro declares and initializes a completion structure. Generally used "
"for static declarations. You should use the _ONSTACK variant for automatic "
"variables."
msgstr ""

#: ../../../driver-api/basics:33: include/linux/completion.h:63
msgid "``DECLARE_COMPLETION_ONSTACK (work)``"
msgstr ""

#: ../../../driver-api/basics:33: include/linux/completion.h:63
msgid ""
"This macro declares and initializes a completion structure on the kernel "
"stack."
msgstr ""

#: ../../../driver-api/basics:33: include/linux/completion.h:78
msgid "Initialize a dynamically allocated completion"
msgstr ""

#: ../../../driver-api/basics:33: include/linux/completion.h:84
#: include/linux/completion.h:97
msgid "``struct completion *x``"
msgstr ""

#: ../../../driver-api/basics:33: include/linux/completion.h:79
msgid "pointer to completion structure that is to be initialized"
msgstr ""

#: ../../../driver-api/basics:33: include/linux/completion.h:80
msgid ""
"This inline function will initialize a dynamically created completion "
"structure."
msgstr ""

#: ../../../driver-api/basics:33: include/linux/completion.h:91
msgid "reinitialize a completion structure"
msgstr ""

#: ../../../driver-api/basics:33: include/linux/completion.h:92
msgid "pointer to completion structure that is to be reinitialized"
msgstr ""

#: ../../../driver-api/basics:33: include/linux/completion.h:93
msgid ""
"This inline function should be used to reinitialize a completion structure "
"so it can be reused. This is especially important after complete_all() is "
"used."
msgstr ""

#: ../../../driver-api/basics.rst:37
msgid "Time and timer routines"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:92
msgid "read the 64-bit non-atomic jiffies_64 value"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:93
msgid ""
"When BITS_PER_LONG < 64, this uses sequence number sampling using "
"jiffies_lock to protect the 64-bit read."
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:97
msgid "current 64-bit jiffies value"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:119
msgid "``time_after (a, b)``"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:117
#: include/linux/jiffies.h:189
msgid "returns true if the time a is after time b."
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:123
#: include/linux/jiffies.h:138 include/linux/jiffies.h:147
#: include/linux/jiffies.h:158 include/linux/jiffies.h:167
#: include/linux/jiffies.h:179 include/linux/jiffies.h:195
#: include/linux/jiffies.h:209 include/linux/jiffies.h:221
#: include/linux/jiffies.h:235 include/linux/jiffies.h:247
#: include/linux/jiffies.h:263 include/linux/jiffies.h:270
#: include/linux/jiffies.h:278 include/linux/jiffies.h:285
#: include/linux/jiffies.h:293 include/linux/jiffies.h:300
#: include/linux/jiffies.h:308 include/linux/jiffies.h:315
msgid "``a``"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:118
#: include/linux/jiffies.h:133 include/linux/jiffies.h:142
#: include/linux/jiffies.h:153
msgid "first comparable as unsigned long"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:120
#: include/linux/jiffies.h:135 include/linux/jiffies.h:144
#: include/linux/jiffies.h:155 include/linux/jiffies.h:164
#: include/linux/jiffies.h:176 include/linux/jiffies.h:192
#: include/linux/jiffies.h:206 include/linux/jiffies.h:218
#: include/linux/jiffies.h:232 include/linux/jiffies.h:244
msgid "``b``"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:119
#: include/linux/jiffies.h:134 include/linux/jiffies.h:143
#: include/linux/jiffies.h:154
msgid "second comparable as unsigned long"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:120
msgid ""
"Do this with \"<0\" and \">=0\" to only test the sign of the result. A good "
"compiler would generate better code (and a really good compiler wouldn't "
"care). Gcc is currently neither."
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:125
#: include/linux/jiffies.h:196
msgid "``true`` is time a is after time b, otherwise ``false``."
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:134
msgid "``time_before (a, b)``"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:132
#: include/linux/jiffies.h:203
msgid "returns true if the time a is before time b."
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:136
#: include/linux/jiffies.h:210
msgid "``true`` is time a is before time b, otherwise ``false``."
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:143
msgid "``time_after_eq (a, b)``"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:141
#: include/linux/jiffies.h:215
msgid "returns true if the time a is after or the same as time b."
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:145
#: include/linux/jiffies.h:222
msgid "``true`` is time a is after or the same as time b, otherwise ``false``."
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:154
msgid "``time_before_eq (a, b)``"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:152
#: include/linux/jiffies.h:229
msgid "returns true if the time a is before or the same as time b."
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:156
#: include/linux/jiffies.h:236
msgid ""
"``true`` is time a is before or the same as time b, otherwise ``false``."
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:163
msgid "``time_in_range (a, b, c)``"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:161
#: include/linux/jiffies.h:241
msgid "Calculate whether a is in the range of [b, c]."
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:162
#: include/linux/jiffies.h:174 include/linux/jiffies.h:242
msgid "time to test"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:163
#: include/linux/jiffies.h:175 include/linux/jiffies.h:243
msgid "beginning of the range"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:165
#: include/linux/jiffies.h:177 include/linux/jiffies.h:245
msgid "``c``"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:164
#: include/linux/jiffies.h:176 include/linux/jiffies.h:244
msgid "end of the range"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:166
#: include/linux/jiffies.h:246
msgid "``true`` is time a is in the range [b, c], otherwise ``false``."
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:175
msgid "``time_in_range_open (a, b, c)``"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:173
msgid "Calculate whether a is in the range of [b, c)."
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:178
msgid "``true`` is time a is in the range [b, c), otherwise ``false``."
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:191
msgid "``time_after64 (a, b)``"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:190
#: include/linux/jiffies.h:204 include/linux/jiffies.h:216
#: include/linux/jiffies.h:230
msgid "first comparable as __u64"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:191
#: include/linux/jiffies.h:205 include/linux/jiffies.h:217
#: include/linux/jiffies.h:231
msgid "second comparable as __u64"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:192
#: include/linux/jiffies.h:206 include/linux/jiffies.h:218
#: include/linux/jiffies.h:232
msgid ""
"This must be used when utilizing jiffies_64 (i.e. return value of "
"get_jiffies_64())."
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:205
msgid "``time_before64 (a, b)``"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:217
msgid "``time_after_eq64 (a, b)``"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:231
msgid "``time_before_eq64 (a, b)``"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:243
msgid "``time_in_range64 (a, b, c)``"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:259
msgid "``time_is_before_jiffies (a)``"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:257
msgid "return true if a is before jiffies"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:258
#: include/linux/jiffies.h:273 include/linux/jiffies.h:288
#: include/linux/jiffies.h:303
msgid "time (unsigned long) to compare to jiffies"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:260
msgid "``true`` is time a is before jiffies, otherwise ``false``."
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:266
msgid "``time_is_before_jiffies64 (a)``"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:264
msgid "return true if a is before jiffies_64"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:265
#: include/linux/jiffies.h:280 include/linux/jiffies.h:295
#: include/linux/jiffies.h:310
msgid "time (__u64) to compare to jiffies_64"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:267
msgid "``true`` is time a is before jiffies_64, otherwise ``false``."
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:274
msgid "``time_is_after_jiffies (a)``"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:272
msgid "return true if a is after jiffies"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:275
msgid "``true`` is time a is after jiffies, otherwise ``false``."
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:281
msgid "``time_is_after_jiffies64 (a)``"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:279
msgid "return true if a is after jiffies_64"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:282
msgid "``true`` is time a is after jiffies_64, otherwise ``false``."
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:289
msgid "``time_is_before_eq_jiffies (a)``"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:287
msgid "return true if a is before or equal to jiffies"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:290
msgid ""
"``true`` is time a is before or the same as jiffies, otherwise ``false``."
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:296
msgid "``time_is_before_eq_jiffies64 (a)``"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:294
msgid "return true if a is before or equal to jiffies_64"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:297
msgid ""
"``true`` is time a is before or the same jiffies_64, otherwise ``false``."
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:304
msgid "``time_is_after_eq_jiffies (a)``"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:302
msgid "return true if a is after or equal to jiffies"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:305
msgid ""
"``true`` is time a is after or the same as jiffies, otherwise ``false``."
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:311
msgid "``time_is_after_eq_jiffies64 (a)``"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:309
msgid "return true if a is after or equal to jiffies_64"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:312
msgid ""
"``true`` is time a is after or the same as jiffies_64, otherwise ``false``."
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:441
msgid "Convert jiffies to nanoseconds"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:447
#: ../../../driver-api/basics:42: kernel/time/time.c:375 kernel/time/time.c:401
msgid "``const unsigned long j``"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:442
#: include/linux/jiffies.h:516 include/linux/jiffies.h:538
#: include/linux/jiffies.h:578 ../../../driver-api/basics:42:
#: kernel/time/time.c:370 kernel/time/time.c:396 kernel/time/time.c:569
#: kernel/time/time.c:586 kernel/time/time.c:614 kernel/time/time.c:635
#: kernel/time/time.c:658
msgid "jiffies value"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:444
#: ../../../driver-api/basics:42: kernel/time/time.c:753
msgid "nanoseconds value"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:492
#: ../../../driver-api/basics:42: kernel/time/time.c:546
msgid "convert milliseconds to jiffies"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:498
#: ../../../driver-api/basics:42: kernel/time/time.c:552
msgid "``const unsigned int m``"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:493
#: ../../../driver-api/basics:42: kernel/time/time.c:547 kernel/time/time.c:584
msgid "time in milliseconds"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:494
#: include/linux/jiffies.h:559 ../../../driver-api/basics:42:
#: kernel/time/time.c:548
msgid "conversion is done as follows:"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:496
#: ../../../driver-api/basics:42: kernel/time/time.c:550
msgid "negative values mean 'infinite timeout' (MAX_JIFFY_OFFSET)"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:498
#: include/linux/jiffies.h:561 ../../../driver-api/basics:42:
#: kernel/time/time.c:552
msgid ""
"'too large' values [that would result in larger than MAX_JIFFY_OFFSET "
"values] mean 'infinite timeout' too."
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:501
#: ../../../driver-api/basics:42: kernel/time/time.c:555
msgid ""
"all other values are converted to jiffies by either multiplying the input "
"value by a factor or dividing it with a factor and handling any 32-bit "
"overflows. for the details see _msecs_to_jiffies()"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:506
msgid ""
"msecs_to_jiffies() checks for the passed in value being a constant via "
"__builtin_constant_p() allowing gcc to eliminate most of the code. "
"__msecs_to_jiffies() is called if the value passed does not allow constant "
"folding and the actual conversion must be done at runtime. The HZ range "
"specific helpers _msecs_to_jiffies() are called both directly here and from "
"__msecs_to_jiffies() in the case where constant folding is not possible."
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:532
msgid "``secs_to_jiffies (_secs)``"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:530
msgid "convert seconds to jiffies"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:536
msgid "``_secs``"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:531
msgid "time in seconds"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:532
msgid "Conversion is done by simple multiplication with HZ"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:534
msgid ""
"secs_to_jiffies() is defined as a macro rather than a static inline function "
"so it can be used in static initializers."
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:557
#: ../../../driver-api/basics:42: kernel/time/time.c:583
msgid "convert microseconds to jiffies"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:563
#: ../../../driver-api/basics:42: kernel/time/time.c:589
msgid "``const unsigned int u``"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:558
msgid "time in microseconds"
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:564
msgid ""
"all other values are converted to jiffies by either multiplying the input "
"value by a factor or dividing it with a factor and handling any 32-bit "
"overflows as for msecs_to_jiffies."
msgstr ""

#: ../../../driver-api/basics:39: include/linux/jiffies.h:568
msgid ""
"usecs_to_jiffies() checks for the passed in value being a constant via "
"__builtin_constant_p() allowing gcc to eliminate most of the code. "
"__usecs_to_jiffies() is called if the value passed does not allow constant "
"folding and the actual conversion must be done at runtime. The HZ range "
"specific helpers _usecs_to_jiffies() are called both directly here and from "
"__msecs_to_jiffies() in the case where constant folding is not possible."
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:369
msgid "Convert jiffies to milliseconds"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:371
msgid ""
"Avoid unnecessary multiplications/divisions in the two most common HZ cases."
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:375 kernel/time/time.c:769
msgid "milliseconds value"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:395
msgid "Convert jiffies to microseconds"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:398
msgid "microseconds value"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:421
msgid "Converts date to seconds."
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:427
msgid "``const unsigned int year0``"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:422
msgid "year to convert"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:424
msgid "``const unsigned int mon0``"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:423
msgid "month to convert"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:425
msgid "``const unsigned int day``"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:424
msgid "day to convert"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:426
msgid "``const unsigned int hour``"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:425
msgid "hour to convert"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:427
msgid "``const unsigned int min``"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:426
msgid "minute to convert"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:428
msgid "``const unsigned int sec``"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:427
msgid "second to convert"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:428
msgid ""
"Converts Gregorian date to seconds since 1970-01-01 00:00:00. Assumes input "
"in normal date format, i.e. 1980-12-31 23:59:59 => year=1980, mon=12, "
"day=31, hour=23, min=59, sec=59."
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:432
msgid ""
"[For the Julian calendar (which was used in Russia before 1917, Britain & "
"colonies before 1752, anywhere else before 1582, and is still in use by some "
"communities) leave out the -year/100+year/400 terms, and add 10.]"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:437
msgid "This algorithm was first published by Gauss (I think)."
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:439
msgid ""
"A leap second can be indicated by calling this function with sec as 60 "
"(allowable under ISO 8601).  The leap second is treated the same as the "
"following second since they don't exist in UNIX time."
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:443
msgid ""
"An encoding of midnight at the end of the day as 24:00:00 - ie. midnight "
"tomorrow - (allowable under ISO 8601) is supported."
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:447
msgid "seconds since the epoch time for the given input date"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:483
msgid "set timespec sec and nsec parts and normalize"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:489 kernel/time/time.c:870
#: kernel/time/time.c:948 ../../../driver-api/basics:51:
#: include/linux/ktime.h:204
msgid "``struct timespec64 *ts``"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:485
msgid "pointer to timespec variable to be set"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:487
msgid "``time64_t sec``"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:486
#: ../../../driver-api/basics:51: include/linux/ktime.h:31
msgid "seconds to set"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:488 kernel/time/time.c:524
msgid "``s64 nsec``"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:487
#: ../../../driver-api/basics:51: include/linux/ktime.h:32
msgid "nanoseconds to set"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:488
msgid ""
"Set seconds and nanoseconds field of a timespec variable and normalize to "
"the timespec storage format"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:492
msgid ""
"The tv_nsec part is always in the range of 0 <= tv_nsec < NSEC_PER_SEC. For "
"negative values only the tv_sec field is negative !"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:518
msgid "Convert nanoseconds to timespec64"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:519
msgid "the nanoseconds value to be converted"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:521
msgid "the timespec64 representation of the nsec parameter."
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:560
msgid ""
"msecs_to_jiffies() checks for the passed in value being a constant via "
"__builtin_constant_p() allowing gcc to eliminate most of the code, "
"__msecs_to_jiffies() is called if the value passed does not allow constant "
"folding and the actual conversion must be done at runtime. The "
"_msecs_to_jiffies helpers are the HZ dependent conversion routines found in "
"include/linux/jiffies.h"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:597
msgid "convert a timespec64 value to jiffies"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:603
msgid "``const struct timespec64 *value``"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:598 kernel/time/time.c:636
msgid "pointer to :c:type:`struct timespec64 <timespec64>`"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:599
msgid ""
"The TICK_NSEC - 1 rounds up the value to the next resolution.  Note that a "
"remainder subtract here would not do the right thing as the resolution "
"values don't fall on second boundaries.  I.e. the line: nsec -= nsec % "
"TICK_NSEC; is NOT a correct resolution rounding. Note that due to the small "
"error in the multiplier here, this rounding is incorrect for sufficiently "
"large values of tv_nsec, but well formed timespecs should have tv_nsec < "
"NSEC_PER_SEC, so we're OK."
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:608
msgid "Rather, we just shift the bits off the right."
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:610
msgid ""
"The >> (NSEC_JIFFIE_SC - SEC_JIFFIE_SC) converts the scaled nsec value to a "
"scaled second value."
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:634
msgid "convert jiffies value to :c:type:`struct timespec64 <timespec64>`"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:640
msgid "``const unsigned long jiffies``"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:637
msgid "``struct timespec64 *value``"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:657
msgid "Convert jiffies to clock_t"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:663 kernel/time/time.c:683
msgid "``unsigned long x``"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:660
msgid "jiffies converted to clock_t (CLOCKS_PER_SEC)"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:677
msgid "Convert clock_t to jiffies"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:678
msgid "clock_t value"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:680
msgid "clock_t value converted to jiffies"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:700
msgid "Convert jiffies_64 to clock_t"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:706
msgid "``u64 x``"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:701
msgid "jiffies_64 value"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:703
msgid "jiffies_64 value converted to 64-bit \"clock_t\" (CLOCKS_PER_SEC)"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:750
msgid "Convert jiffies64 to nanoseconds"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:756
msgid "``u64 j``"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:751 kernel/time/time.c:767
msgid "jiffies64 value"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:766
msgid "Convert jiffies64 to milliseconds"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:772
msgid "``const u64 j``"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:782
msgid "Convert nsecs in u64 to jiffies64"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:788 kernel/time/time.c:821
msgid "``u64 n``"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:784 kernel/time/time.c:817
msgid "nsecs in u64"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:785 kernel/time/time.c:818
msgid ""
"Unlike {m,u}secs_to_jiffies, type of input is not unsigned int but u64. And "
"this doesn't return MAX_JIFFY_OFFSET since this function is designed for "
"scheduler, not for use in device drivers to calculate timeout value."
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:789 kernel/time/time.c:822
msgid "**note**"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:790 kernel/time/time.c:823
msgid ""
"NSEC_PER_SEC = 10^9 = (5^9 * 2^9) = (1953125 * 512) ULLONG_MAX ns = "
"18446744073.709551615 secs = about 584 years"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:794
msgid "nsecs converted to jiffies64 value"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:815
msgid "Convert nsecs in u64 to jiffies"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:827
msgid "nsecs converted to jiffies value"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:836
msgid "Add two timespec64 values and do a safety check for overflow."
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:842
msgid "``const struct timespec64 lhs``"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:838
msgid "first (left) timespec64 to add"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:840
msgid "``const struct timespec64 rhs``"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:839
msgid "second (right) timespec64 to add"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:840
msgid ""
"It's assumed that both values are valid (>= 0). And, each timespec64 is in "
"normalized form."
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:844
msgid "sum of **lhs** + **rhs**"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:864
msgid "get user's time value into kernel space"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:865 kernel/time/time.c:943
msgid "destination :c:type:`struct timespec64 <timespec64>`"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:867
msgid "``const struct __kernel_timespec __user *uts``"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:866
msgid ""
"user's time value as :c:type:`struct __kernel_timespec <__kernel_timespec>`"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:867
msgid "Handles compat or 32-bit modes."
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:870 kernel/time/time.c:901
#: kernel/time/time.c:948 kernel/time/time.c:967 kernel/time/time.c:983
#: kernel/time/time.c:1006 kernel/time/time.c:1028 kernel/time/time.c:1047
msgid "0 on success or negative errno on error"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:896
msgid ""
"convert timespec64 value to __kernel_timespec format and copy the latter to "
"userspace"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:902 kernel/time/time.c:966
#: ../../../driver-api/basics:75: kernel/signal.c:3744
msgid "``const struct timespec64 *ts``"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:898 kernel/time/time.c:962
msgid "input :c:type:`struct timespec64 <timespec64>`"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:900
msgid "``struct __kernel_timespec __user *uts``"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:899
msgid "user's :c:type:`struct __kernel_timespec <__kernel_timespec>`"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:942
msgid "get user's old-format time value into kernel space"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:945
msgid "``const void __user *uts``"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:944
msgid ""
"user's old-format time value (:c:type:`struct old_timespec32 "
"<old_timespec32>`)"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:945 kernel/time/time.c:964
msgid "Handles X86_X32_ABI compatibility conversion."
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:960
msgid ""
"convert timespec64 value to :c:type:`struct old_timespec32 <old_timespec32>` "
"and copy the latter to userspace"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:964
msgid "``void __user *uts``"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:963
msgid "user's :c:type:`struct old_timespec32 <old_timespec32>`"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:979
msgid ""
"get user's :c:type:`struct __kernel_itimerspec <__kernel_itimerspec>` into "
"kernel space"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:985
msgid "``struct itimerspec64 *it``"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:980
#: kernel/time/time.c:1025
msgid "destination :c:type:`struct itimerspec64 <itimerspec64>`"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:982
msgid "``const struct __kernel_itimerspec __user *uit``"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:981
#: kernel/time/time.c:1004
msgid "user's :c:type:`struct __kernel_itimerspec <__kernel_itimerspec>`"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:1001
msgid ""
"convert :c:type:`struct itimerspec64 <itimerspec64>` to __kernel_itimerspec "
"format and copy the latter to userspace"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:1007
msgid "``const struct itimerspec64 *it``"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:1003
#: kernel/time/time.c:1044
msgid "input :c:type:`struct itimerspec64 <itimerspec64>`"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:1005
msgid "``struct __kernel_itimerspec __user *uit``"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:1024
msgid ""
"get user's :c:type:`struct old_itimerspec32 <old_itimerspec32>` into kernel "
"space"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:1030
msgid "``struct itimerspec64 *its``"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:1027
msgid "``const struct old_itimerspec32 __user *uits``"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:1026
#: kernel/time/time.c:1045
msgid "user's :c:type:`struct old_itimerspec32 <old_itimerspec32>`"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:1042
msgid ""
"convert :c:type:`struct itimerspec64 <itimerspec64>` to :c:type:`struct "
"old_itimerspec32 <old_itimerspec32>` and copy the latter to userspace"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:1048
msgid "``const struct itimerspec64 *its``"
msgstr ""

#: ../../../driver-api/basics:42: kernel/time/time.c:1046
msgid "``struct old_itimerspec32 __user *uits``"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:389
#: kernel/time/timer.c:418 kernel/time/timer.c:439
msgid "function to round jiffies to a full second"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:395
#: kernel/time/timer.c:424 kernel/time/timer.c:445 kernel/time/timer.c:466
#: kernel/time/timer.c:485 kernel/time/timer.c:500
msgid "``unsigned long j``"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:390
#: kernel/time/timer.c:440 kernel/time/timer.c:461 kernel/time/timer.c:495
msgid "the time in (relative) jiffies that should be rounded"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:391
#: kernel/time/timer.c:462
msgid "the processor number on which the timeout will happen"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:392
msgid ""
"__round_jiffies_relative() rounds a time delta  in the future (in jiffies) "
"up or down to (approximately) full seconds. This is useful for timers for "
"which the exact time they fire does not matter too much, as long as they "
"fire approximately every X seconds."
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:397
#: kernel/time/timer.c:425 kernel/time/timer.c:446
msgid ""
"By rounding these timers to whole seconds, all such timers will fire at the "
"same time, rather than at various times spread out. The goal of this is to "
"have the CPU wake up less, which saves power."
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:401
msgid ""
"The exact rounding is skewed for each processor to avoid all processors "
"firing at the exact same time, which could lead to lock contention or "
"spurious cache line bouncing."
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:405
#: kernel/time/timer.c:429 kernel/time/timer.c:450
msgid "The return value is the rounded version of the **j** parameter."
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:419
#: kernel/time/timer.c:480
msgid "the time in (absolute) jiffies that should be rounded"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:420
msgid ""
"round_jiffies() rounds an absolute time in the future (in jiffies) up or "
"down to (approximately) full seconds. This is useful for timers for which "
"the exact time they fire does not matter too much, as long as they fire "
"approximately every X seconds."
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:441
msgid ""
"round_jiffies_relative() rounds a time delta  in the future (in jiffies) up "
"or down to (approximately) full seconds. This is useful for timers for which "
"the exact time they fire does not matter too much, as long as they fire "
"approximately every X seconds."
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:460
#: kernel/time/timer.c:479 kernel/time/timer.c:494
msgid "function to round jiffies up to a full second"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:463
msgid ""
"This is the same as __round_jiffies_relative() except that it will never "
"round down.  This is useful for timeouts for which the exact time of firing "
"does not matter too much, as long as they don't fire too early."
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:481
msgid ""
"This is the same as round_jiffies() except that it will never round down.  "
"This is useful for timeouts for which the exact time of firing does not "
"matter too much, as long as they don't fire too early."
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:496
msgid ""
"This is the same as round_jiffies_relative() except that it will never round "
"down.  This is useful for timeouts for which the exact time of firing does "
"not matter too much, as long as they don't fire too early."
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:865
msgid "initialize a timer"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:871
#: kernel/time/timer.c:1151 kernel/time/timer.c:1173 kernel/time/timer.c:1206
#: kernel/time/timer.c:1232 kernel/time/timer.c:1260 kernel/time/timer.c:1277
#: kernel/time/timer.c:1294 kernel/time/timer.c:1397 kernel/time/timer.c:1417
#: kernel/time/timer.c:1478 kernel/time/timer.c:1638 kernel/time/timer.c:1686
msgid "``struct timer_list *timer``"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:866
#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:1651
msgid "the timer to be initialized"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:868
msgid "``void (*func)(struct timer_list *)``"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:867
msgid "timer callback function"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:869
#: ../../../driver-api/basics:75: kernel/signal.c:4057
#: ../../../driver-api/basics:78: include/linux/kthread.h:223
#: ../../../driver-api/basics:81: kernel/kthread.c:1068 kernel/kthread.c:1090
msgid "``unsigned int flags``"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:868
msgid "timer flags"
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:783 lib/kobject.c:899
#: lib/kobject.c:994 ../../../driver-api/basics:121:
#: kernel/printk/printk.c:2658 ../../../driver-api/basics:131:
#: drivers/base/devres.c:154 drivers/base/devres.c:741
#: ../../../driver-api/basics:45: kernel/time/timer.c:870
msgid "``const char *name``"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:869
msgid "name of the timer"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:871
msgid "``struct lock_class_key *key``"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:870
msgid ""
"lockdep class key of the fake lock used for tracking timer sync lock "
"dependencies"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:872
msgid ""
"timer_init_key() must be done to a timer prior to calling *any* of the other "
"timer functions."
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1145
msgid "Modify a pending timer's timeout"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1146
msgid "The pending timer to be modified"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1148
#: kernel/time/timer.c:1170 kernel/time/timer.c:1203
msgid "``unsigned long expires``"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1147
#: kernel/time/timer.c:1169 kernel/time/timer.c:1202
msgid "New absolute timeout in jiffies"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1148
msgid ""
"mod_timer_pending() is the same for pending timers as mod_timer(), but will "
"not activate inactive timers."
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1151
#: kernel/time/timer.c:1207 kernel/time/timer.c:1235
msgid ""
"If **timer->function** == NULL then the start operation is silently "
"discarded."
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1155
msgid "``0`` - The timer was inactive and not modified or was in"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1156
msgid "shutdown state and the operation was discarded"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1157
msgid "``1`` - The timer was active and requeued to expire at **expires**"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1167
msgid "Modify a timer's timeout"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1168
#: kernel/time/timer.c:1201
msgid "The timer to be modified"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1170
msgid "mod_timer(timer, expires) is equivalent to:"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1172
msgid "timer_delete(timer); timer->expires = expires; add_timer(timer);"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1174
msgid ""
"mod_timer() is more efficient than the above open coded sequence. In case "
"that the timer is inactive, the timer_delete() part is a NOP. The timer is "
"in any case activated with the new expiry time **expires**."
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1178
msgid ""
"Note that if there are multiple unserialized concurrent users of the same "
"timer, then mod_timer() is the only safe way to modify the timeout, since "
"add_timer() cannot modify an already running timer."
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1182
msgid ""
"If **timer->function** == NULL then the start operation is silently "
"discarded. In this case the return value is 0 and meaningless."
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1186
#: kernel/time/timer.c:1211
msgid "``0`` - The timer was inactive and started or was in shutdown"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1187
#: kernel/time/timer.c:1212
msgid "state and the operation was discarded"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1188
#: kernel/time/timer.c:1213
msgid "``1`` - The timer was active and requeued to expire at **expires** or"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1189
msgid ""
"the timer was active and not modified because **expires** did not change the "
"effective expiry time"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1200
msgid "Modify a timer's timeout if it would reduce the timeout"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1203
msgid ""
"timer_reduce() is very similar to mod_timer(), except that it will only "
"modify an enqueued timer if that would reduce the expiration time. If "
"**timer** is not enqueued it starts the timer."
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1214
msgid ""
"the timer was active and not modified because **expires** did not change the "
"effective expiry time such that the timer would expire earlier than already "
"scheduled"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1226
msgid "Start a timer"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1227
#: kernel/time/timer.c:1255 kernel/time/timer.c:1272 kernel/time/timer.c:1289
msgid "The timer to be started"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1228
msgid ""
"Start **timer** to expire at **timer->expires** in the future. **timer-"
">expires** is the absolute expiry time measured in 'jiffies'. When the timer "
"expires timer->function(timer) will be invoked from soft interrupt context."
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1232
msgid ""
"The **timer->expires** and **timer->function** fields must be set prior to "
"calling this function."
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1238
msgid ""
"If **timer->expires** is already in the past **timer** will be queued to "
"expire at the next timer tick."
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1241
msgid ""
"This can only operate on an inactive timer. Attempts to invoke this on an "
"active timer are rejected with a warning."
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1254
msgid "Start a timer on the local CPU"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1256
msgid "Same as add_timer() except that the timer flag TIMER_PINNED is set."
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1258
#: kernel/time/timer.c:1275 kernel/time/timer.c:1296
msgid "See add_timer() for further details."
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1271
msgid "Start a timer without TIMER_PINNED flag set"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1273
msgid "Same as add_timer() except that the timer flag TIMER_PINNED is unset."
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1288
msgid "Start a timer on a particular CPU"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1290
msgid "The CPU to start it on"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1291
msgid ""
"Same as add_timer() except that it starts the timer on the given CPU and the "
"TIMER_PINNED flag is set. When timer shouldn't be a pinned timer in the next "
"round, add_timer_global() should be used instead as it unsets the "
"TIMER_PINNED flag."
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1391
msgid "Deactivate a timer"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1392
#: kernel/time/timer.c:1412 kernel/time/timer.c:1633
msgid "The timer to be deactivated"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1393
msgid ""
"The function only deactivates a pending timer, but contrary to "
"timer_delete_sync() it does not take into account whether the timer's "
"callback function is concurrently executed on a different CPU or not. It "
"neither prevents rearming of the timer.  If **timer** can be rearmed "
"concurrently then the return value of this function is meaningless."
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1400
#: kernel/time/timer.c:1421 kernel/time/timer.c:1669 kernel/time/timer.c:1711
msgid "``0`` - The timer was not pending"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1401
#: kernel/time/timer.c:1670
msgid "``1`` - The timer was pending and deactivated"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1411
msgid "Deactivate a timer and prevent rearming"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1413
msgid ""
"The function does not wait for an eventually running timer callback on a "
"different CPU but it prevents rearming of the timer. Any attempt to arm "
"**timer** after this function returns will be silently ignored."
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1417
msgid ""
"This function is useful for teardown code and should only be used when "
"timer_shutdown_sync() cannot be invoked due to locking or context "
"constraints."
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1422
#: kernel/time/timer.c:1712
msgid "``1`` - The timer was pending"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1472
msgid "Try to deactivate a timer"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1473
msgid "Timer to deactivate"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1474
msgid ""
"This function tries to deactivate a timer. On success the timer is not "
"queued and the timer callback function is not running on any CPU."
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1477
msgid ""
"This function does not guarantee that the timer cannot be rearmed right "
"after dropping the base lock. That needs to be prevented by the calling code "
"if necessary."
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1482
msgid "``0``  - The timer was not pending"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1483
msgid "``1``  - The timer was pending and deactivated"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1484
msgid "``-1`` - The timer callback function is running on a different CPU"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1632
msgid "Deactivate a timer and wait for the handler to finish."
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1634
msgid ""
"Synchronization rules: Callers must prevent restarting of the timer, "
"otherwise this function is meaningless. It must not be called from interrupt "
"contexts unless the timer is an irqsafe one. The caller must not hold locks "
"which would prevent completion of the timer's callback function. The timer's "
"handler must not call add_timer_on(). Upon exit the timer is not queued and "
"the handler is not running on any CPU."
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1641
msgid ""
"For !irqsafe timers, the caller must not hold locks that are held in "
"interrupt context. Even if the lock has nothing to do with the timer in "
"question.  Here's why::"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1656
msgid ""
"Now timer_delete_sync() will never return and never release somelock. The "
"interrupt on the other CPU is waiting to grab somelock but it has "
"interrupted the softirq that CPU0 is waiting to finish."
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1660
msgid ""
"This function cannot guarantee that the timer is not rearmed again by some "
"concurrent or preempting code, right after it dropped the base lock. If "
"there is the possibility of a concurrent rearm then the return value of the "
"function is meaningless."
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1665
msgid ""
"If such a guarantee is needed, e.g. for teardown situations then use "
"timer_shutdown_sync() instead."
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1680
msgid "Shutdown a timer and prevent rearming"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1681
msgid "The timer to be shutdown"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1682
msgid "When the function returns it is guaranteed that:"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1683
msgid "**timer** is not queued"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1684
msgid "The callback function of **timer** is not running"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1685
msgid ""
"**timer** cannot be enqueued again. Any attempt to rearm **timer** is "
"silently ignored."
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1688
msgid "See timer_delete_sync() for synchronization rules."
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1690
msgid ""
"This function is useful for final teardown of an infrastructure where the "
"timer is subject to a circular dependency problem."
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1693
msgid ""
"A common pattern for this is a timer and a workqueue where the timer can "
"schedule work and work can arm the timer. On shutdown the workqueue must be "
"destroyed and the timer must be prevented from rearming. Unless the code has "
"conditionals like 'if (mything->in_shutdown)' to prevent that there is no "
"way to get this correct with timer_delete_sync()."
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1699
msgid ""
"timer_shutdown_sync() is solving the problem. The correct ordering of calls "
"in this case is:"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1702
msgid ""
"timer_shutdown_sync(:c:type:`mything->timer <mything>`); workqueue_destroy(:"
"c:type:`mything->workqueue <mything>`);"
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1705
msgid "After this 'mything' can be safely freed."
msgstr ""

#: ../../../driver-api/basics:45: kernel/time/timer.c:1707
msgid ""
"This obviously implies that the timer is not required to be functional for "
"the rest of the shutdown operation."
msgstr ""

#: ../../../driver-api/basics.rst:49
msgid "High-resolution timers"
msgstr ""

#: ../../../driver-api/basics:51: include/linux/ktime.h:30
msgid "Set a ktime_t variable from a seconds/nanoseconds value"
msgstr ""

#: ../../../driver-api/basics:51: include/linux/ktime.h:36
msgid "``const s64 secs``"
msgstr ""

#: ../../../driver-api/basics:51: include/linux/ktime.h:33
msgid "``const unsigned long nsecs``"
msgstr ""

#: ../../../driver-api/basics:51: include/linux/ktime.h:34
msgid "The ktime_t representation of the value."
msgstr ""

#: ../../../driver-api/basics:51: include/linux/ktime.h:84
msgid "Compares two ktime_t variables for less, greater or equal"
msgstr ""

#: ../../../driver-api/basics:51: include/linux/ktime.h:90
#: include/linux/ktime.h:109 include/linux/ktime.h:121
msgid "``const ktime_t cmp1``"
msgstr ""

#: ../../../driver-api/basics:51: include/linux/ktime.h:85
#: include/linux/ktime.h:104 include/linux/ktime.h:116
msgid "comparable1"
msgstr ""

#: ../../../driver-api/basics:51: include/linux/ktime.h:87
#: include/linux/ktime.h:106 include/linux/ktime.h:118
msgid "``const ktime_t cmp2``"
msgstr ""

#: ../../../driver-api/basics:51: include/linux/ktime.h:86
#: include/linux/ktime.h:105 include/linux/ktime.h:117
msgid "comparable2"
msgstr ""

#: ../../../driver-api/basics:51: include/linux/ktime.h:88
msgid ""
"... cmp1  < cmp2: return <0 cmp1 == cmp2: return 0 cmp1  > cmp2: return >0"
msgstr ""

#: ../../../driver-api/basics:51: include/linux/ktime.h:103
msgid "Compare if a ktime_t value is bigger than another one."
msgstr ""

#: ../../../driver-api/basics:51: include/linux/ktime.h:107
msgid "true if cmp1 happened after cmp2."
msgstr ""

#: ../../../driver-api/basics:51: include/linux/ktime.h:115
msgid "Compare if a ktime_t value is smaller than another one."
msgstr ""

#: ../../../driver-api/basics:51: include/linux/ktime.h:119
msgid "true if cmp1 happened before cmp2."
msgstr ""

#: ../../../driver-api/basics:51: include/linux/ktime.h:200
msgid ""
"convert a ktime_t variable to timespec64 format only if the variable "
"contains data"
msgstr ""

#: ../../../driver-api/basics:51: include/linux/ktime.h:206
msgid "``const ktime_t kt``"
msgstr ""

#: ../../../driver-api/basics:51: include/linux/ktime.h:202
msgid "the ktime_t variable to convert"
msgstr ""

#: ../../../driver-api/basics:51: include/linux/ktime.h:203
msgid "the timespec variable to store the result in"
msgstr ""

#: ../../../driver-api/basics:51: include/linux/ktime.h:205
msgid "``true`` if there was a successful conversion, ``false`` if kt was 0."
msgstr ""

#: ../../../driver-api/basics:54: include/linux/hrtimer.h:86
msgid "simple sleeper structure"
msgstr ""

#: ../../../driver-api/basics:54: include/linux/hrtimer.h:87
msgid "``timer``"
msgstr ""

#: ../../../driver-api/basics:54: include/linux/hrtimer.h:88
msgid "embedded timer structure"
msgstr ""

#: ../../../driver-api/basics:54: include/linux/hrtimer.h:88
msgid "``task``"
msgstr ""

#: ../../../driver-api/basics:54: include/linux/hrtimer.h:89
msgid "task to wake up"
msgstr ""

#: ../../../driver-api/basics:54: include/linux/hrtimer.h:89
msgid "task is set to NULL, when the timer expires."
msgstr ""

#: ../../../driver-api/basics:54: include/linux/hrtimer.h:249
#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:1296
msgid "(re)start an hrtimer"
msgstr ""

#: ../../../driver-api/basics:54: include/linux/hrtimer.h:255
#: include/linux/hrtimer.h:308 include/linux/hrtimer.h:331
#: include/linux/hrtimer.h:358 ../../../driver-api/basics:57:
#: kernel/time/hrtimer.c:1023 kernel/time/hrtimer.c:1302
#: kernel/time/hrtimer.c:1336 kernel/time/hrtimer.c:1475
#: kernel/time/hrtimer.c:1656 kernel/time/hrtimer.c:1677
msgid "``struct hrtimer *timer``"
msgstr ""

#: ../../../driver-api/basics:54: include/linux/hrtimer.h:250
#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:1297
msgid "the timer to be added"
msgstr ""

#: ../../../driver-api/basics:54: include/linux/hrtimer.h:252
#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:1299
msgid "``ktime_t tim``"
msgstr ""

#: ../../../driver-api/basics:54: include/linux/hrtimer.h:251
#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:1298
msgid "expiry time"
msgstr ""

#: ../../../driver-api/basics:54: include/linux/hrtimer.h:253
#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:1301
msgid "``const enum hrtimer_mode mode``"
msgstr ""

#: ../../../driver-api/basics:54: include/linux/hrtimer.h:252
#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:1300
msgid ""
"timer mode: absolute (HRTIMER_MODE_ABS) or relative (HRTIMER_MODE_REL), and "
"pinned (HRTIMER_MODE_PINNED); softirq based mode is considered for debug "
"purpose only!"
msgstr ""

#: ../../../driver-api/basics:54: include/linux/hrtimer.h:288
#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:1491
msgid "get remaining time for the timer"
msgstr ""

#: ../../../driver-api/basics:54: include/linux/hrtimer.h:294
#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:1497
msgid "``const struct hrtimer *timer``"
msgstr ""

#: ../../../driver-api/basics:54: include/linux/hrtimer.h:289
#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:1492
msgid "the timer to read"
msgstr ""

#: ../../../driver-api/basics:54: include/linux/hrtimer.h:302
msgid "check, whether the timer is on one of the queues"
msgstr ""

#: ../../../driver-api/basics:54: include/linux/hrtimer.h:303
msgid "Timer to check"
msgstr ""

#: ../../../driver-api/basics:54: include/linux/hrtimer.h:305
msgid "True if the timer is queued, false otherwise"
msgstr ""

#: ../../../driver-api/basics:54: include/linux/hrtimer.h:306
msgid ""
"The function can be used lockless, but it gives only a current snapshot."
msgstr ""

#: ../../../driver-api/basics:54: include/linux/hrtimer.h:325
msgid "Update the timer's callback function"
msgstr ""

#: ../../../driver-api/basics:54: include/linux/hrtimer.h:326
msgid "Timer to update"
msgstr ""

#: ../../../driver-api/basics:54: include/linux/hrtimer.h:328
#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:1653
#: kernel/time/hrtimer.c:1674
msgid "``enum hrtimer_restart (*function)(struct hrtimer *)``"
msgstr ""

#: ../../../driver-api/basics:54: include/linux/hrtimer.h:327
msgid "New callback function"
msgstr ""

#: ../../../driver-api/basics:54: include/linux/hrtimer.h:328
msgid ""
"Only safe to call if the timer is not enqueued. Can be called in the "
"callback function if the timer is not enqueued at the same time (see the "
"comments above HRTIMER_STATE_ENQUEUED)."
msgstr ""

#: ../../../driver-api/basics:54: include/linux/hrtimer.h:352
msgid "forward the timer expiry so it expires after now"
msgstr ""

#: ../../../driver-api/basics:54: include/linux/hrtimer.h:353
#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:1018
msgid "hrtimer to forward"
msgstr ""

#: ../../../driver-api/basics:54: include/linux/hrtimer.h:355
#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:1021
msgid "``ktime_t interval``"
msgstr ""

#: ../../../driver-api/basics:54: include/linux/hrtimer.h:354
#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:1020
msgid "the interval to forward"
msgstr ""

#: ../../../driver-api/basics:54: include/linux/hrtimer.h:355
msgid ""
"It is a variant of hrtimer_forward(). The timer will expire after the "
"current time of the hrtimer clock base. See hrtimer_forward() for details."
msgstr ""

#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:1017
msgid "forward the timer expiry"
msgstr ""

#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:1020
msgid "``ktime_t now``"
msgstr ""

#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:1019
msgid "forward past this time"
msgstr ""

#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:1021
msgid "Forward the timer expiry so it will expire in the future."
msgstr ""

#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:1024
msgid ""
"This only updates the timer expiry value and does not requeue the timer."
msgstr ""

#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:1026
msgid "There is also a variant of the function hrtimer_forward_now()."
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:3
#: kernel/printk/printk.c:281 kernel/printk/printk.c:4956
#: kernel/printk/printk.c:5010 ../../../driver-api/basics:57:
#: kernel/time/hrtimer.c:1028 ../../../driver-api/basics:72: kernel/exit.c:1307
#: ../../../driver-api/basics:75: kernel/signal.c:273 kernel/signal.c:304
#: kernel/signal.c:328 kernel/signal.c:353 kernel/signal.c:848
#: kernel/signal.c:2275 kernel/signal.c:2541 kernel/signal.c:2663
#: kernel/signal.c:2691
msgid "**Context**"
msgstr ""

#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:1029
msgid ""
"Can be safely called from the callback function of **timer**. If called from "
"other contexts **timer** must neither be enqueued nor running the callback "
"and the caller needs to take care of serialization."
msgstr ""

#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:1033
msgid "The number of overruns are returned."
msgstr ""

#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:1300
msgid "``u64 delta_ns``"
msgstr ""

#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:1299
msgid "\"slack\" range for the timer"
msgstr ""

#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:1330
msgid "try to deactivate a timer"
msgstr ""

#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:1331
msgid "hrtimer to stop"
msgstr ""

#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:1334
msgid "0 when the timer was not active"
msgstr ""

#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:1335
msgid "1 when the timer was active"
msgstr ""

#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:1336
msgid ""
"-1 when the timer is currently executing the callback function and cannot be "
"stopped"
msgstr ""

#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:1469
msgid "cancel a timer and wait for the handler to finish."
msgstr ""

#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:1470
msgid "the timer to be cancelled"
msgstr ""

#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:1472
msgid "0 when the timer was not active 1 when the timer was active"
msgstr ""

#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:1494
msgid "``bool adjust``"
msgstr ""

#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:1493
msgid "adjust relative timers when CONFIG_TIME_LOW_RES=y"
msgstr ""

#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:1650
msgid "initialize a timer to the given clock"
msgstr ""

#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:1652
#: kernel/time/hrtimer.c:1673
msgid "the callback function"
msgstr ""

#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:1654
#: kernel/time/hrtimer.c:1675 kernel/time/hrtimer.c:2078
msgid "``clockid_t clock_id``"
msgstr ""

#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:1653
#: kernel/time/hrtimer.c:2077
msgid "the clock to be used"
msgstr ""

#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:1655
#: kernel/time/hrtimer.c:1676 kernel/time/hrtimer.c:2022
#: kernel/time/hrtimer.c:2079
msgid "``enum hrtimer_mode mode``"
msgstr ""

#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:1654
msgid ""
"The modes which are relevant for initialization: HRTIMER_MODE_ABS, "
"HRTIMER_MODE_REL, HRTIMER_MODE_ABS_SOFT, HRTIMER_MODE_REL_SOFT"
msgstr ""

#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:1657
msgid ""
"The PINNED variants of the above can be handed in, but the PINNED bit is "
"ignored as pinning happens when the hrtimer is started"
msgstr ""

#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:1671
msgid "initialize a timer on stack memory"
msgstr ""

#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:1672
msgid "The timer to be initialized"
msgstr ""

#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:1674
msgid "The clock to be used"
msgstr ""

#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:1675
msgid "The timer mode"
msgstr ""

#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:1676
msgid ""
"Similar to hrtimer_setup(), except that this one must be used if struct "
"hrtimer is in stack memory."
msgstr ""

#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:2019
msgid "Start a hrtimer sleeper timer"
msgstr ""

#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:2025
#: kernel/time/hrtimer.c:2081
msgid "``struct hrtimer_sleeper *sl``"
msgstr ""

#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:2020
msgid "sleeper to be started"
msgstr ""

#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:2021
#: kernel/time/hrtimer.c:2078
msgid "timer mode abs/rel"
msgstr ""

#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:2022
msgid ""
"Wrapper around hrtimer_start_expires() for hrtimer_sleeper based timers to "
"allow PREEMPT_RT to tweak the delivery mode (soft/hardirq context)"
msgstr ""

#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:2075
msgid "initialize a sleeper in stack memory"
msgstr ""

#: ../../../driver-api/basics:57: kernel/time/hrtimer.c:2076
msgid "sleeper to be initialized"
msgstr ""

#: ../../../driver-api/basics.rst:61
msgid "Wait queues and Wake events"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:96
msgid "locklessly test for waiters on the queue"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:102
#: include/linux/wait.h:137 include/linux/wait.h:150 include/linux/wait.h:258
#: ../../../driver-api/basics:66: kernel/sched/wait.c:139
#: kernel/sched/wait.c:177 kernel/sched/wait.c:203 kernel/sched/wait.c:373
msgid "``struct wait_queue_head *wq_head``"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:97
msgid "the waitqueue to test for waiters"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:98
msgid "returns true if the wait list is not empty"
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:854
#: ../../../driver-api/basics:63: include/linux/wait.h:100
msgid "**NOTE**"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:101
msgid ""
"this function is lockless and requires care, incorrect usage _will_ lead to "
"sporadic and non-obvious failure."
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:104
msgid ""
"Use either while holding wait_queue_head::lock or when used for wakeups with "
"an extra smp_mb() like::"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:118
msgid ""
"Because without the explicit smp_mb() it's possible for the "
"waitqueue_active() load to get hoisted over the **cond** store such that "
"we'll observe an empty wait list while the waiter might not observe **cond**."
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:122
msgid ""
"Also note that this 'optimization' trades a spin_lock() for an smp_mb(), "
"which (when the lock is uncontended) are of roughly equal cost."
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:131
msgid "check if there is only one sleeper"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:132
#: include/linux/wait.h:145
msgid "wait queue head"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:133
msgid "Returns true of wq_head has only one sleeper on the list."
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:135
#: include/linux/wait.h:148
msgid "Please refer to the comment for waitqueue_active."
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:144
msgid "check if there are any waiting processes"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:146
msgid "Returns true if wq_head has waiting processes"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:252
msgid "signal that a polled waitqueue is going away"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:253
msgid "the wait queue head"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:254
msgid ""
"In the very rare cases where a ->poll() implementation uses a waitqueue "
"whose lifetime is tied to a task rather than to the 'struct file' being "
"polled, this function must be called before the waitqueue is freed so that "
"non-blocking polls (e.g. epoll) are notified that the queue is going away."
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:259
msgid ""
"The caller must also RCU-delay the freeing of the wait_queue_head, e.g. via "
"an explicit synchronize_rcu() or call_rcu(), or via SLAB_TYPESAFE_BY_RCU."
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:336
msgid "``wait_event (wq_head, condition)``"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:334
#: include/linux/wait.h:462 include/linux/wait.h:487 include/linux/wait.h:797
#: include/linux/wait.h:824 include/linux/wait.h:882 include/linux/wait.h:917
#: include/linux/wait.h:944
msgid "sleep until a condition gets true"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:340
#: include/linux/wait.h:379 include/linux/wait.h:405 include/linux/wait.h:468
#: include/linux/wait.h:493 include/linux/wait.h:522 include/linux/wait.h:577
#: include/linux/wait.h:669 include/linux/wait.h:689 include/linux/wait.h:718
#: include/linux/wait.h:751 include/linux/wait.h:923 include/linux/wait.h:950
#: include/linux/wait.h:992 include/linux/wait.h:1032 include/linux/wait.h:1062
#: include/linux/wait.h:1097 include/linux/wait.h:1131
#: include/linux/wait.h:1169
msgid "``wq_head``"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:335
#: include/linux/wait.h:374 include/linux/wait.h:400 include/linux/wait.h:463
#: include/linux/wait.h:488 include/linux/wait.h:517 include/linux/wait.h:572
#: include/linux/wait.h:598 include/linux/wait.h:664 include/linux/wait.h:684
#: include/linux/wait.h:713 include/linux/wait.h:746 include/linux/wait.h:798
#: include/linux/wait.h:825 include/linux/wait.h:852 include/linux/wait.h:883
#: include/linux/wait.h:918 include/linux/wait.h:945 include/linux/wait.h:987
#: include/linux/wait.h:1030 include/linux/wait.h:1060
#: include/linux/wait.h:1094 include/linux/wait.h:1128
#: include/linux/wait.h:1166
msgid "the waitqueue to wait on"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:337
#: include/linux/wait.h:376 include/linux/wait.h:402 include/linux/wait.h:465
#: include/linux/wait.h:490 include/linux/wait.h:519 include/linux/wait.h:574
#: include/linux/wait.h:600 include/linux/wait.h:666 include/linux/wait.h:686
#: include/linux/wait.h:715 include/linux/wait.h:748 include/linux/wait.h:800
#: include/linux/wait.h:827 include/linux/wait.h:854 include/linux/wait.h:885
#: include/linux/wait.h:920 include/linux/wait.h:947 include/linux/wait.h:989
#: include/linux/wait.h:1032 include/linux/wait.h:1062
#: include/linux/wait.h:1096 include/linux/wait.h:1130
#: include/linux/wait.h:1168
msgid "``condition``"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:336
#: include/linux/wait.h:375 include/linux/wait.h:401 include/linux/wait.h:464
#: include/linux/wait.h:489 include/linux/wait.h:518 include/linux/wait.h:573
#: include/linux/wait.h:599 include/linux/wait.h:665 include/linux/wait.h:685
#: include/linux/wait.h:714 include/linux/wait.h:747 include/linux/wait.h:799
#: include/linux/wait.h:826 include/linux/wait.h:853 include/linux/wait.h:884
#: include/linux/wait.h:919 include/linux/wait.h:946 include/linux/wait.h:988
#: include/linux/wait.h:1031 include/linux/wait.h:1061
#: include/linux/wait.h:1095 include/linux/wait.h:1129
#: include/linux/wait.h:1167
msgid "a C expression for the event to wait for"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:337
#: include/linux/wait.h:403 include/linux/wait.h:467 include/linux/wait.h:1036
#: include/linux/wait.h:1064
msgid ""
"The process is put to sleep (TASK_UNINTERRUPTIBLE) until the **condition** "
"evaluates to true. The **condition** is checked each time the waitqueue "
"**wq_head** is woken up."
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:341
#: include/linux/wait.h:380 include/linux/wait.h:407 include/linux/wait.h:471
#: include/linux/wait.h:494 include/linux/wait.h:524 include/linux/wait.h:579
#: include/linux/wait.h:605 include/linux/wait.h:670 include/linux/wait.h:694
#: include/linux/wait.h:720 include/linux/wait.h:757 include/linux/wait.h:924
#: include/linux/wait.h:952 include/linux/wait.h:994 include/linux/wait.h:1040
#: include/linux/wait.h:1068 include/linux/wait.h:1104
#: include/linux/wait.h:1136 include/linux/wait.h:1175
msgid ""
"wake_up() has to be called after changing any variable that could change the "
"result of the wait condition."
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:375
msgid "``wait_event_freezable (wq_head, condition)``"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:373
msgid "sleep (or freeze) until a condition gets true"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:376
msgid ""
"The process is put to sleep (TASK_INTERRUPTIBLE -- so as not to contribute "
"to system load) until the **condition** evaluates to true. The **condition** "
"is checked each time the waitqueue **wq_head** is woken up."
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:401
msgid "``wait_event_timeout (wq_head, condition, timeout)``"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:399
#: include/linux/wait.h:516 include/linux/wait.h:571 include/linux/wait.h:597
#: include/linux/wait.h:986
msgid "sleep until a condition gets true or a timeout elapses"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:403
#: include/linux/wait.h:520 include/linux/wait.h:575 include/linux/wait.h:601
#: include/linux/wait.h:716 include/linux/wait.h:749 include/linux/wait.h:990
#: include/linux/wait.h:1171
msgid "``timeout``"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:402
#: include/linux/wait.h:519 include/linux/wait.h:715 include/linux/wait.h:748
#: include/linux/wait.h:989 include/linux/wait.h:1170
msgid "timeout, in jiffies"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:411
#: include/linux/wait.h:724 include/linux/wait.h:761
msgid ""
"0 if the **condition** evaluated to ``false`` after the **timeout** elapsed, "
"1 if the **condition** evaluated to ``true`` after the **timeout** elapsed, "
"or the remaining jiffies (at least 1) if the **condition** evaluated to "
"``true`` before the **timeout** elapsed."
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:464
msgid "``wait_event_cmd (wq_head, condition, cmd1, cmd2)``"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:466
msgid "``cmd1``"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:465
msgid "the command will be executed before sleep"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:467
msgid "``cmd2``"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:466
msgid "the command will be executed after sleep"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:489
msgid "``wait_event_interruptible (wq_head, condition)``"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:490
#: include/linux/wait.h:520 include/linux/wait.h:1100
msgid ""
"The process is put to sleep (TASK_INTERRUPTIBLE) until the **condition** "
"evaluates to true or a signal is received. The **condition** is checked each "
"time the waitqueue **wq_head** is woken up."
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:497
#: include/linux/wait.h:815 include/linux/wait.h:842 include/linux/wait.h:873
#: include/linux/wait.h:904 include/linux/wait.h:927
msgid ""
"The function will return -ERESTARTSYS if it was interrupted by a signal and "
"0 if **condition** evaluated to true."
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:518
msgid "``wait_event_interruptible_timeout (wq_head, condition, timeout)``"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:528
msgid ""
"0 if the **condition** evaluated to ``false`` after the **timeout** elapsed, "
"1 if the **condition** evaluated to ``true`` after the **timeout** elapsed, "
"the remaining jiffies (at least 1) if the **condition** evaluated to "
"``true`` before the **timeout** elapsed, or -``ERESTARTSYS`` if it was "
"interrupted by a signal."
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:573
msgid "``wait_event_hrtimeout (wq_head, condition, timeout)``"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:574
#: include/linux/wait.h:600
msgid "timeout, as a ktime_t"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:575
msgid ""
"The process is put to sleep (TASK_UNINTERRUPTIBLE) until the **condition** "
"evaluates to true or a signal is received. The **condition** is checked each "
"time the waitqueue **wq_head** is woken up."
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:582
msgid ""
"The function returns 0 if **condition** became true, or -ETIME if the "
"timeout elapsed."
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:599
msgid "``wait_event_interruptible_hrtimeout (wq, condition, timeout)``"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:603
#: include/linux/wait.h:803 include/linux/wait.h:830 include/linux/wait.h:857
#: include/linux/wait.h:888
msgid "``wq``"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:601
#: include/linux/wait.h:800 include/linux/wait.h:827 include/linux/wait.h:854
#: include/linux/wait.h:885
msgid ""
"The process is put to sleep (TASK_INTERRUPTIBLE) until the **condition** "
"evaluates to true or a signal is received. The **condition** is checked each "
"time the waitqueue **wq** is woken up."
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:608
msgid ""
"The function returns 0 if **condition** became true, -ERESTARTSYS if it was "
"interrupted by a signal, or -ETIME if the timeout elapsed."
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:665
msgid "``wait_event_idle (wq_head, condition)``"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:663
msgid "wait for a condition without contributing to system load"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:666
#: include/linux/wait.h:686 include/linux/wait.h:716 include/linux/wait.h:749
msgid ""
"The process is put to sleep (TASK_IDLE) until the **condition** evaluates to "
"true. The **condition** is checked each time the waitqueue **wq_head** is "
"woken up."
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:685
msgid "``wait_event_idle_exclusive (wq_head, condition)``"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:683
msgid "wait for a condition with contributing to system load"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:690
#: include/linux/wait.h:753
msgid ""
"The process is put on the wait queue with an WQ_FLAG_EXCLUSIVE flag set thus "
"if other processes wait on the same list, when this process is woken further "
"processes are not considered."
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:714
msgid "``wait_event_idle_timeout (wq_head, condition, timeout)``"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:712
#: include/linux/wait.h:745
msgid "sleep without load until a condition becomes true or a timeout elapses"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:747
msgid "``wait_event_idle_exclusive_timeout (wq_head, condition, timeout)``"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:799
msgid "``wait_event_interruptible_locked (wq, condition)``"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:804
#: include/linux/wait.h:831 include/linux/wait.h:858 include/linux/wait.h:889
msgid ""
"It must be called with wq.lock being held.  This spinlock is unlocked while "
"sleeping but **condition** testing is done while lock is held and when this "
"macro exits the lock is held."
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:808
#: include/linux/wait.h:862
msgid ""
"The lock is locked/unlocked using spin_lock()/spin_unlock() functions which "
"must match the way they are locked/unlocked outside of this macro."
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:812
#: include/linux/wait.h:839 include/linux/wait.h:870 include/linux/wait.h:901
msgid ""
"wake_up_locked() has to be called after changing any variable that could "
"change the result of the wait condition."
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:826
msgid "``wait_event_interruptible_locked_irq (wq, condition)``"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:835
#: include/linux/wait.h:893
msgid ""
"The lock is locked/unlocked using spin_lock_irq()/spin_unlock_irq() "
"functions which must match the way they are locked/unlocked outside of this "
"macro."
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:853
msgid "``wait_event_interruptible_exclusive_locked (wq, condition)``"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:851
msgid "sleep exclusively until a condition gets true"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:866
#: include/linux/wait.h:897
msgid ""
"The process is put on the wait queue with an WQ_FLAG_EXCLUSIVE flag set thus "
"when other process waits process on the list if this process is awaken "
"further processes are not considered."
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:884
msgid "``wait_event_interruptible_exclusive_locked_irq (wq, condition)``"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:919
msgid "``wait_event_killable (wq_head, condition)``"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:920
msgid ""
"The process is put to sleep (TASK_KILLABLE) until the **condition** "
"evaluates to true or a signal is received. The **condition** is checked each "
"time the waitqueue **wq_head** is woken up."
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:946
msgid "``wait_event_state (wq_head, condition, state)``"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:948
msgid "``state``"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:947
msgid "state to sleep in"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:948
msgid ""
"The process is put to sleep (**state**) until the **condition** evaluates to "
"true or a signal is received (when allowed by **state**).  The **condition** "
"is checked each time the waitqueue **wq_head** is woken up."
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:955
msgid ""
"The function will return -ERESTARTSYS if it was interrupted by a signal "
"(when allowed by **state**) and 0 if **condition** evaluated to true."
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:988
msgid "``wait_event_killable_timeout (wq_head, condition, timeout)``"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:990
msgid ""
"The process is put to sleep (TASK_KILLABLE) until the **condition** "
"evaluates to true or a kill signal is received. The **condition** is checked "
"each time the waitqueue **wq_head** is woken up."
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:998
msgid "Only kill signals interrupt this process."
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:998
msgid ""
"0 if the **condition** evaluated to ``false`` after the **timeout** elapsed, "
"1 if the **condition** evaluated to ``true`` after the **timeout** elapsed, "
"the remaining jiffies (at least 1) if the **condition** evaluated to "
"``true`` before the **timeout** elapsed, or -``ERESTARTSYS`` if it was "
"interrupted by a kill signal."
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:1028
msgid "``wait_event_lock_irq_cmd (wq_head, condition, lock, cmd)``"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:1026
#: include/linux/wait.h:1056 include/linux/wait.h:1091
#: include/linux/wait.h:1125
msgid ""
"sleep until a condition gets true. The condition is checked under the lock. "
"This is expected to be called with the lock taken."
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:1032
#: include/linux/wait.h:1096
msgid ""
"a locked spinlock_t, which will be released before cmd and schedule() and "
"reacquired afterwards."
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:1035
#: include/linux/wait.h:1099
msgid "``cmd``"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:1034
#: include/linux/wait.h:1098
msgid "a command which is invoked outside the critical section before sleep"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:1043
#: include/linux/wait.h:1107
msgid ""
"This is supposed to be called while holding the lock. The lock is dropped "
"before invoking the cmd and going to sleep and is reacquired afterwards."
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:1058
msgid "``wait_event_lock_irq (wq_head, condition, lock)``"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:1062
#: include/linux/wait.h:1130 include/linux/wait.h:1168
msgid ""
"a locked spinlock_t, which will be released before schedule() and reacquired "
"afterwards."
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:1071
#: include/linux/wait.h:1139 include/linux/wait.h:1178
msgid ""
"This is supposed to be called while holding the lock. The lock is dropped "
"before going to sleep and is reacquired afterwards."
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:1093
msgid ""
"``wait_event_interruptible_lock_irq_cmd (wq_head, condition, lock, cmd)``"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:1111
#: include/linux/wait.h:1142
msgid ""
"The macro will return -ERESTARTSYS if it was interrupted by a signal and 0 "
"if **condition** evaluated to true."
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:1127
msgid "``wait_event_interruptible_lock_irq (wq_head, condition, lock)``"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:1132
#: include/linux/wait.h:1171
msgid ""
"The process is put to sleep (TASK_INTERRUPTIBLE) until the **condition** "
"evaluates to true or signal is received. The **condition** is checked each "
"time the waitqueue **wq_head** is woken up."
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:1165
msgid ""
"``wait_event_interruptible_lock_irq_timeout (wq_head, condition, lock, "
"timeout)``"
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:1163
msgid ""
"sleep until a condition gets true or a timeout elapses. The condition is "
"checked under the lock. This is expected to be called with the lock taken."
msgstr ""

#: ../../../driver-api/basics:63: include/linux/wait.h:1181
msgid ""
"The function returns 0 if the **timeout** elapsed, -ERESTARTSYS if it was "
"interrupted by a signal, and the remaining jiffies otherwise if the "
"condition evaluated to true before the timeout elapsed."
msgstr ""

#: ../../../driver-api/basics:66: kernel/sched/wait.c:133
#: kernel/sched/wait.c:171
msgid "wake up threads blocked on a waitqueue."
msgstr ""

#: ../../../driver-api/basics:66: kernel/sched/wait.c:134
#: kernel/sched/wait.c:172 kernel/sched/wait.c:198
msgid "the waitqueue"
msgstr ""

#: ../../../driver-api/basics:66: kernel/sched/wait.c:136
#: kernel/sched/wait.c:174 kernel/sched/wait.c:200
msgid "``unsigned int mode``"
msgstr ""

#: ../../../driver-api/basics:66: kernel/sched/wait.c:135
#: kernel/sched/wait.c:173 kernel/sched/wait.c:199
msgid "which threads"
msgstr ""

#: ../../../driver-api/basics:66: kernel/sched/wait.c:137
msgid "``int nr_exclusive``"
msgstr ""

#: ../../../driver-api/basics:66: kernel/sched/wait.c:136
msgid "how many wake-one or wake-many threads to wake up"
msgstr ""

#: ../../../driver-api/basics:66: kernel/sched/wait.c:138
#: kernel/sched/wait.c:175 kernel/sched/wait.c:201
msgid "``void *key``"
msgstr ""

#: ../../../driver-api/basics:66: kernel/sched/wait.c:137
msgid "is directly passed to the wakeup function"
msgstr ""

#: ../../../driver-api/basics:66: kernel/sched/wait.c:138
msgid ""
"If this function wakes up a task, it executes a full memory barrier before "
"accessing the task state.  Returns the number of exclusive tasks that were "
"awaken."
msgstr ""

#: ../../../driver-api/basics:66: kernel/sched/wait.c:174
#: kernel/sched/wait.c:200
msgid "opaque value to be passed to wakeup targets"
msgstr ""

#: ../../../driver-api/basics:66: kernel/sched/wait.c:175
msgid ""
"The sync wakeup differs that the waker knows that it will schedule away "
"soon, so while the target thread will be woken up, it will not be migrated "
"to another CPU - ie. the two threads are 'synchronized' with each other. "
"This can prevent needless bouncing between CPUs."
msgstr ""

#: ../../../driver-api/basics:66: kernel/sched/wait.c:180
#: kernel/sched/wait.c:206
msgid "On UP it can prevent extra preemption."
msgstr ""

#: ../../../driver-api/basics:66: kernel/sched/wait.c:182
#: kernel/sched/wait.c:208
msgid ""
"If this function wakes up a task, it executes a full memory barrier before "
"accessing the task state."
msgstr ""

#: ../../../driver-api/basics:66: kernel/sched/wait.c:197
msgid "wake up a thread blocked on a locked waitqueue."
msgstr ""

#: ../../../driver-api/basics:66: kernel/sched/wait.c:201
msgid ""
"The sync wakeup differs in that the waker knows that it will schedule away "
"soon, so while the target thread will be woken up, it will not be migrated "
"to another CPU - ie. the two threads are 'synchronized' with each other. "
"This can prevent needless bouncing between CPUs."
msgstr ""

#: ../../../driver-api/basics:66: kernel/sched/wait.c:367
msgid "clean up after waiting in a queue"
msgstr ""

#: ../../../driver-api/basics:66: kernel/sched/wait.c:368
msgid "waitqueue waited on"
msgstr ""

#: ../../../driver-api/basics:66: kernel/sched/wait.c:370
msgid "``struct wait_queue_entry *wq_entry``"
msgstr ""

#: ../../../driver-api/basics:66: kernel/sched/wait.c:369
msgid "wait descriptor"
msgstr ""

#: ../../../driver-api/basics:66: kernel/sched/wait.c:370
msgid ""
"Sets current thread back to running state and removes the wait descriptor "
"from the given waitqueue if still queued."
msgstr ""

#: ../../../driver-api/basics.rst:70
msgid "Internal Functions"
msgstr ""

#: ../../../driver-api/basics:72: kernel/exit.c:1301
msgid "Wait for ``TASK_STOPPED`` or ``TASK_TRACED``"
msgstr ""

#: ../../../driver-api/basics:72: kernel/exit.c:1307
msgid "``struct wait_opts *wo``"
msgstr ""

#: ../../../driver-api/basics:72: kernel/exit.c:1302
msgid "wait options"
msgstr ""

#: ../../../driver-api/basics:72: kernel/exit.c:1304
msgid "``int ptrace``"
msgstr ""

#: ../../../driver-api/basics:72: kernel/exit.c:1303
msgid "is the wait for ptrace"
msgstr ""

#: ../../../driver-api/basics:72: kernel/exit.c:1304
msgid "task to wait for"
msgstr ""

#: ../../../driver-api/basics:72: kernel/exit.c:1305
msgid ""
"Handle sys_wait4() work for ``p`` in state ``TASK_STOPPED`` or "
"``TASK_TRACED``."
msgstr ""

#: ../../../driver-api/basics:72: kernel/exit.c:1308
msgid ""
"read_lock(:c:type:`tasklist_lock`), which is released if return value is non-"
"zero.  Also, grabs and releases **p->sighand->siglock**."
msgstr ""

#: ../../../driver-api/basics:72: kernel/exit.c:1312
msgid ""
"0 if wait condition didn't exist and search for other wait conditions should "
"continue.  Non-zero return, -errno on failure and **p**'s pid on success, "
"implies that tasklist_lock is released and wait condition search should "
"terminate."
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:264
msgid "set jobctl pending bits"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:270 kernel/signal.c:303
#: kernel/signal.c:324 kernel/signal.c:352 ../../../driver-api/basics:81:
#: kernel/kthread.c:236 kernel/kthread.c:251
msgid "``struct task_struct *task``"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:265 kernel/signal.c:298
#: kernel/signal.c:319
msgid "target task"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:267 kernel/signal.c:321
msgid "``unsigned long mask``"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:266
msgid "pending bits to set"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:267
msgid ""
"Clear **mask** from **task->jobctl**.  **mask** must be subset of "
"``JOBCTL_PENDING_MASK`` | ``JOBCTL_STOP_CONSUME`` | ``JOBCTL_STOP_SIGMASK`` "
"| ``JOBCTL_TRAPPING``.  If stop signo is being set, the existing signo is "
"cleared.  If **task** is already being killed or exiting, this function "
"becomes noop."
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:274 kernel/signal.c:305
#: kernel/signal.c:329 kernel/signal.c:354 kernel/signal.c:849
msgid "Must be called with **task->sighand->siglock** held."
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:277
msgid ""
"``true`` if **mask** is set, ``false`` if made noop because **task** was "
"dying."
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:297
msgid "clear jobctl trapping bit"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:299
msgid ""
"If JOBCTL_TRAPPING is set, a ptracer is waiting for us to enter TRACED. "
"Clear it and wake up the ptracer.  Note that we don't need any further "
"locking.  **task->siglock** guarantees that **task->parent** points to the "
"ptracer."
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:318
msgid "clear jobctl pending bits"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:320
msgid "pending bits to clear"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:321
msgid ""
"Clear **mask** from **task->jobctl**.  **mask** must be subset of "
"``JOBCTL_PENDING_MASK``.  If ``JOBCTL_STOP_PENDING`` is being cleared, other "
"STOP bits are cleared together."
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:325
msgid ""
"If clearing of **mask** leaves no stop or trap pending, this function calls "
"task_clear_jobctl_trapping()."
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:346
msgid "participate in a group stop"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:347
msgid "task participating in a group stop"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:348
msgid ""
"**task** has ``JOBCTL_STOP_PENDING`` set and is participating in a group "
"stop. Group stop states are cleared and the group stop count is consumed if "
"``JOBCTL_STOP_CONSUME`` was set.  If the consumption completes the group "
"stop, the appropriate `SIGNAL_*` flags are set."
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:357
msgid ""
"``true`` if group stop completion should be notified to the parent, "
"``false`` otherwise."
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:836
msgid "schedule trap to notify ptracer"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:842
msgid "``struct task_struct *t``"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:837
msgid "tracee wanting to notify tracer"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:838
msgid ""
"This function schedules sticky ptrace trap which is cleared on the next "
"TRAP_STOP to notify ptracer of an event.  **t** must have been seized by "
"ptracer."
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:842
msgid ""
"If **t** is running, STOP trap will be taken.  If trapped for STOP and "
"ptracer is listening for events, tracee is woken up so that it can re-trap "
"for the new event.  If trapped otherwise, STOP trap will be eventually taken "
"without returning to userland after the existing traps are finished by "
"PTRACE_CONT."
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:1804
msgid "signals the task to allow in-process syscall emulation"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:1810
msgid "``int syscall``"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:1805
msgid "syscall number to send to userland"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:1807
msgid "``int reason``"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:1806
msgid "filter-supplied reason code to send to userland (via si_errno)"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:1808
msgid "``bool force_coredump``"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:1807
msgid "true to trigger a coredump"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:1808
msgid "Forces a SIGSYS with a code of SYS_SECCOMP and related sigsys info."
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:2267
msgid "notify parent of stopped/continued state change"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:2273
msgid "``struct task_struct *tsk``"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:2268
msgid "task reporting the state change"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:2270
msgid "``bool for_ptracer``"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:2269
msgid "the notification is for ptracer"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:2271
msgid "``int why``"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:2270
msgid "CLD_{CONTINUED|STOPPED|TRAPPED} to report"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:2271
msgid ""
"Notify **tsk**'s parent that the stopped/continued state has changed.  If "
"**for_ptracer** is ``false``, **tsk**'s group leader notifies to its real "
"parent. If ``true``, **tsk** reports to **tsk->parent** which should be the "
"ptracer."
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:2276
msgid "Must be called with tasklist_lock at least read locked."
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:2529
msgid "handle group stop for SIGSTOP and other stop signals"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:2535
msgid "``int signr``"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:2530
msgid "signr causing group stop if initiating"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:2531
msgid ""
"If ``JOBCTL_STOP_PENDING`` is not set yet, initiate group stop with "
"**signr** and participate in it.  If already set, participate in the "
"existing group stop.  If participated in a group stop (and thus slept), "
"``true`` is returned with siglock released."
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:2536
msgid ""
"If ptraced, this function doesn't handle stop itself.  Instead, "
"``JOBCTL_TRAP_STOP`` is scheduled and ``false`` is returned with siglock "
"untouched.  The caller must ensure that INTERRUPT trap handling takes places "
"afterwards."
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:2542
msgid ""
"Must be called with **current->sighand->siglock** held, which is released on "
"``true`` return."
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:2546
msgid ""
"``false`` if group stop is already cancelled or ptrace trap is scheduled. "
"``true`` if participated in group stop."
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:2654
msgid "take care of ptrace jobctl traps"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:2655
msgid ""
"When PT_SEIZED, it's used for both group stop and explicit SEIZE/INTERRUPT "
"traps.  Both generate PTRACE_EVENT_STOP trap with accompanying siginfo.  If "
"stopped, lower eight bits of exit_code contain the stop signal; otherwise, "
"``SIGTRAP``."
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:2660
msgid ""
"When !PT_SEIZED, it's used only for group stop trap with stop signal number "
"as exit_code and no siginfo."
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:2664
msgid ""
"Must be called with **current->sighand->siglock** held, which may be "
"released and re-acquired before returning with intervening sleep."
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:2687
msgid "handle the freezer jobctl trap"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:2688
msgid ""
"Puts the task into frozen state, if only the task is not about to quit. In "
"this case it drops JOBCTL_TRAP_FREEZE."
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:2692
msgid ""
"Must be called with **current->sighand->siglock** held, which is always "
"released before returning."
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:3048
msgid "called after signal delivery to update blocked signals"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:3054
msgid "``struct ksignal *ksig``"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:3049
msgid "kernel signal struct"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:3051
msgid "``int stepping``"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:3050
msgid "nonzero if debugger single-step or block-step in use"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:3051
msgid ""
"This function should be called when a signal has successfully been "
"delivered. It updates the blocked signals accordingly (**ksig->ka.sa."
"sa_mask** is always blocked), and the signal itself is blocked unless "
"``SA_NODEFER`` is set in **ksig->ka.sa.sa_flags**.  Tracing is notified."
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:3173
msgid "restart a system call"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:3199
msgid "change current->blocked mask"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:3205
msgid "``sigset_t *newset``"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:3200
msgid "new mask"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:3201
msgid ""
"It is wrong to change ->blocked directly, this helper should be used to "
"ensure the process can't miss a shared signal we are going to block."
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:3312
msgid "change the list of currently blocked signals"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:3318 kernel/signal.c:4578
msgid "``int how``"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:3313 kernel/signal.c:4573
msgid "whether to add, remove, or set signals"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:3315
msgid "``sigset_t __user * nset``"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:3314 kernel/signal.c:3387
msgid "stores pending signals"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:3316
msgid "``sigset_t __user * oset``"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:3315 kernel/signal.c:4575
msgid "previous value of signal mask if non-null"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:3317 kernel/signal.c:3389
#: kernel/signal.c:3803 kernel/signal.c:4628 kernel/signal.c:4851
msgid "``size_t sigsetsize``"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:3316 kernel/signal.c:3802
#: kernel/signal.c:4627 kernel/signal.c:4850
msgid "size of sigset_t type"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:3385
msgid "examine a pending signal that has been raised while blocked"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:3391
msgid "``sigset_t __user * uset``"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:3388
msgid "size of sigset_t type or larger"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:3551
msgid "copy a kernel siginfo into a compat user siginfo"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:3557
msgid "``struct compat_siginfo *to``"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:3552
msgid "compat siginfo destination"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:3554
msgid "``const struct kernel_siginfo *from``"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:3553
msgid "kernel siginfo source"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:3555
msgid ""
"This function does not work properly for the SIGCHLD on x32, but fortunately "
"it doesn't have to.  The only valid callers for this function are "
"copy_siginfo_to_user32, which is overriden for x32 and the coredump code. "
"The latter does not care because SIGCHLD will never cause a coredump."
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:3740
msgid "wait for queued signals specified in **which**"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:3746
msgid "``const sigset_t *which``"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:3741 kernel/signal.c:3799
msgid "queued signals to wait for"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:3743
msgid "``kernel_siginfo_t *info``"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:3742 kernel/signal.c:3800
msgid "if non-null, the signal's siginfo is returned here"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:3743 kernel/signal.c:3801
msgid "upper bound on process time suspension"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:3797
msgid "synchronously wait for queued signals specified in **uthese**"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:3803
msgid "``const sigset_t __user * uthese``"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:3801 kernel/signal.c:4210
msgid "``siginfo_t __user * uinfo``"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:3802
msgid "``const struct __kernel_timespec __user * uts``"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:3945
msgid "send a signal to a process"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:3951 kernel/signal.c:4161
#: kernel/signal.c:4183 kernel/signal.c:4212
msgid "``pid_t pid``"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:3946
msgid "the PID of the process"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:3948 kernel/signal.c:4055
#: kernel/signal.c:4162 kernel/signal.c:4180 kernel/signal.c:4209
#: kernel/signal.c:4629
msgid "``int sig``"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:3947 kernel/signal.c:4161
#: kernel/signal.c:4179 kernel/signal.c:4208 kernel/signal.c:4624
msgid "signal to be sent"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:4052
msgid "Signal a process through a pidfd"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:4058
msgid "``int pidfd``"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:4053
msgid "file descriptor of the process"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:4054
msgid "signal to send"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:4056
msgid "``siginfo_t __user * info``"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:4055
msgid "signal info"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:4056
msgid "future flags"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:4057
msgid ""
"Send the signal to the thread group or to the individual thread depending on "
"PIDFD_THREAD. In the future extension to **flags** may be used to override "
"the default scope of **pidfd**."
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:4063
msgid "0 on success, negative errno on failure"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:4158
msgid "send signal to one specific thread"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:4164
msgid "``pid_t tgid``"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:4159
msgid "the thread group ID of the thread"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:4160 kernel/signal.c:4207
msgid "the PID of the thread"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:4162
msgid ""
"This syscall also checks the **tgid** and returns -ESRCH even if the PID "
"exists but it's not belonging to the target process anymore. This method "
"solves the problem of threads exiting and PIDs getting reused."
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:4177
msgid "send signal to one specific task"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:4178
msgid "the PID of the task"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:4180
msgid "Send a signal to only one task, even if it's a CLONE_THREAD task."
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:4206
msgid "send signal information to a signal"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:4209
msgid "signal info to be sent"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:4539
msgid "examine pending signals"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:4545
msgid "``old_sigset_t __user * uset``"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:4540
msgid "where mask of pending signal is returned"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:4572
msgid "examine and change blocked signals"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:4575
msgid "``old_sigset_t __user * nset``"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:4574
msgid "signals to add or remove (if non-null)"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:4576
msgid "``old_sigset_t __user * oset``"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:4576
msgid ""
"Some platforms have their own version with special arguments; others support "
"only sys_rt_sigprocmask."
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:4623
msgid "alter an action taken by a process"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:4626
msgid "``const struct sigaction __user * act``"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:4625
msgid "new sigaction"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:4627
msgid "``struct sigaction __user * oact``"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:4626
msgid "used to save the previous sigaction"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:4847
msgid ""
"replace the signal mask for a value with the **unewset** value until a "
"signal is received"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:4853
msgid "``sigset_t __user * unewset``"
msgstr ""

#: ../../../driver-api/basics:75: kernel/signal.c:4849
msgid "new signal mask value"
msgstr ""

#: ../../../driver-api/basics:78: include/linux/kthread.h:19
msgid "``kthread_create (threadfn, data, namefmt, arg...)``"
msgstr ""

#: ../../../driver-api/basics:78: include/linux/kthread.h:17
msgid "create a kthread on the current node"
msgstr ""

#: ../../../driver-api/basics:78: include/linux/kthread.h:23
#: include/linux/kthread.h:49
msgid "``threadfn``"
msgstr ""

#: ../../../driver-api/basics:78: include/linux/kthread.h:18
msgid "the function to run in the thread"
msgstr ""

#: ../../../driver-api/basics:78: include/linux/kthread.h:19
msgid "data pointer for **threadfn\\(\\)**"
msgstr ""

#: ../../../driver-api/basics:78: include/linux/kthread.h:21
#: include/linux/kthread.h:47 include/linux/kthread.h:202
msgid "``namefmt``"
msgstr ""

#: ../../../driver-api/basics:78: include/linux/kthread.h:20
msgid "printf-style format string for the thread name"
msgstr ""

#: ../../../driver-api/basics:78: include/linux/kthread.h:22
msgid "``arg...``"
msgstr ""

#: ../../../driver-api/basics:78: include/linux/kthread.h:21
msgid "arguments for **namefmt**."
msgstr ""

#: ../../../driver-api/basics:78: include/linux/kthread.h:22
msgid ""
"This macro will create a kthread on the current node, leaving it in the "
"stopped state.  This is just a helper for kthread_create_on_node(); see the "
"documentation there for more details."
msgstr ""

#: ../../../driver-api/basics:78: include/linux/kthread.h:45
msgid "``kthread_run (threadfn, data, namefmt, ...)``"
msgstr ""

#: ../../../driver-api/basics:78: include/linux/kthread.h:43
msgid "create and wake a thread."
msgstr ""

#: ../../../driver-api/basics:78: include/linux/kthread.h:44
#: include/linux/kthread.h:62 ../../../driver-api/basics:81:
#: kernel/kthread.c:557 kernel/kthread.c:641
msgid "the function to run until signal_pending(current)."
msgstr ""

#: ../../../driver-api/basics:78: include/linux/kthread.h:45
#: include/linux/kthread.h:63 ../../../driver-api/basics:81:
#: kernel/kthread.c:558 kernel/kthread.c:642
msgid "data ptr for **threadfn**."
msgstr ""

#: ../../../driver-api/basics:78: include/linux/kthread.h:46
#: include/linux/kthread.h:201 ../../../driver-api/basics:81:
#: kernel/kthread.c:560
msgid "printf-style name for the thread."
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:304 lib/kobject.c:383
#: lib/kobject.c:441 ../../../driver-api/basics:111: lib/kobject_uevent.c:665
#: ../../../driver-api/basics:117: include/linux/kernel.h:246
#: ../../../driver-api/basics:131: drivers/base/devres.c:1059
#: ../../../driver-api/basics:78: include/linux/kthread.h:48
#: include/linux/kthread.h:203 ../../../driver-api/basics:81:
#: kernel/kthread.c:562 kernel/kthread.c:1067
msgid "``...``"
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:1
#: ../../../driver-api/basics:111: lib/kobject_uevent.c:1
#: ../../../driver-api/basics:117: include/linux/kernel.h:1
#: ../../../driver-api/basics:78: include/linux/kthread.h:1
#: ../../../driver-api/basics:81: kernel/kthread.c:1
msgid "variable arguments"
msgstr ""

#: ../../../driver-api/basics:78: include/linux/kthread.h:48
msgid ""
"Convenient wrapper for kthread_create() followed by wake_up_process().  "
"Returns the kthread or ERR_PTR(-ENOMEM)."
msgstr ""

#: ../../../driver-api/basics:78: include/linux/kthread.h:61
msgid "create and wake a cpu bound thread."
msgstr ""

#: ../../../driver-api/basics:78: include/linux/kthread.h:67
#: ../../../driver-api/basics:81: kernel/kthread.c:562 kernel/kthread.c:646
msgid "``int (*threadfn)(void *data)``"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:183
#: drivers/base/devres.c:740 drivers/base/devres.c:778
#: drivers/base/devres.c:812 ../../../driver-api/basics:78:
#: include/linux/kthread.h:64 ../../../driver-api/basics:81:
#: kernel/kthread.c:559 kernel/kthread.c:643
msgid "``void *data``"
msgstr ""

#: ../../../driver-api/basics:78: include/linux/kthread.h:65
#: ../../../driver-api/basics:81: kernel/kthread.c:626 kernel/kthread.c:644
msgid "``unsigned int cpu``"
msgstr ""

#: ../../../driver-api/basics:78: include/linux/kthread.h:64
#: ../../../driver-api/basics:81: kernel/kthread.c:643
msgid "The cpu on which the thread should be bound,"
msgstr ""

#: ../../../driver-api/basics:78: include/linux/kthread.h:66
#: ../../../driver-api/basics:81: kernel/kthread.c:645
msgid "``const char *namefmt``"
msgstr ""

#: ../../../driver-api/basics:78: include/linux/kthread.h:65
#: include/linux/kthread.h:223 ../../../driver-api/basics:81:
#: kernel/kthread.c:644 kernel/kthread.c:1090
msgid ""
"printf-style name for the thread. Format is restricted to \"name.*``u``\". "
"Code fills in cpu number."
msgstr ""

#: ../../../driver-api/basics:78: include/linux/kthread.h:68
msgid ""
"Convenient wrapper for kthread_create_on_cpu() followed by "
"wake_up_process().  Returns the kthread or ERR_PTR(-ENOMEM)."
msgstr ""

#: ../../../driver-api/basics:78: include/linux/kthread.h:201
msgid "``kthread_run_worker (flags, namefmt, ...)``"
msgstr ""

#: ../../../driver-api/basics:78: include/linux/kthread.h:199
msgid "create and wake a kthread worker."
msgstr ""

#: ../../../driver-api/basics:78: include/linux/kthread.h:205
msgid "``flags``"
msgstr ""

#: ../../../driver-api/basics:78: include/linux/kthread.h:200
#: include/linux/kthread.h:222 ../../../driver-api/basics:81:
#: kernel/kthread.c:1063 kernel/kthread.c:1089
msgid "flags modifying the default behavior of the worker"
msgstr ""

#: ../../../driver-api/basics:78: include/linux/kthread.h:203
msgid ""
"Convenient wrapper for kthread_create_worker() followed by "
"wake_up_process().  Returns the kthread_worker or ERR_PTR(-ENOMEM)."
msgstr ""

#: ../../../driver-api/basics:78: include/linux/kthread.h:220
msgid "create and wake a cpu bound kthread worker."
msgstr ""

#: ../../../driver-api/basics:78: include/linux/kthread.h:221
#: ../../../driver-api/basics:81: kernel/kthread.c:1088
msgid "CPU number"
msgstr ""

#: ../../../driver-api/basics:78: include/linux/kthread.h:224
#: ../../../driver-api/basics:81: kernel/kthread.c:561 kernel/kthread.c:1066
#: kernel/kthread.c:1091
msgid "``const char namefmt[]``"
msgstr ""

#: ../../../driver-api/basics:78: include/linux/kthread.h:226
msgid ""
"Convenient wrapper for kthread_create_worker_on_cpu() followed by "
"wake_up_process().  Returns the kthread_worker or ERR_PTR(-ENOMEM)."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:160
msgid "should this kthread return now?"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:161
msgid ""
"When someone calls kthread_stop() on your kthread, it will be woken and this "
"will return true.  You should then return, and your return value will be "
"passed through to kthread_stop()."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:178
msgid "should this kthread park now?"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:179
msgid ""
"When someone calls kthread_park() on your kthread, it will be woken and this "
"will return true.  You should then do the necessary cleanup and call "
"kthread_parkme()"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:183
msgid ""
"Similar to kthread_should_stop(), but this keeps the thread alive and in a "
"park position. kthread_unpark() \"restarts\" the thread and calls the thread "
"function again."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:205
msgid "should this freezable kthread return now?"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:211
msgid "``bool *was_frozen``"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:206
msgid "optional out parameter, indicates whether ``current`` was frozen"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:207
msgid ""
"kthread_should_stop() for freezable kthreads, which will enter refrigerator "
"if necessary.  This function is safe from kthread_stop() / freezer deadlock "
"and freezable kthreads should use this function instead of calling "
"try_to_freeze() directly."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:230
msgid "return the function specified on kthread creation"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:231 kernel/kthread.c:246
msgid "kthread task in question"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:232
msgid "Returns NULL if the task is not a kthread."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:245
msgid "return data value specified on kthread creation"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:247
msgid ""
"Return the data value specified when kthread **task** was created. The "
"caller is responsible for ensuring the validity of **task** when calling "
"this function."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:313
msgid "Cause the current kthread return **result** to kthread_stop()."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:319
msgid "``long result``"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:314 kernel/kthread.c:343
msgid "The integer value to return to kthread_stop()."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:315
msgid ""
"While kthread_exit can be called directly, it exists so that functions which "
"do some additional work in non-modular code such as "
"module_put_and_kthread_exit can be implemented."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:319 kernel/kthread.c:349
msgid "Does not return."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:341
msgid "Exit the current kthread."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:347
msgid "``struct completion *comp``"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:342
msgid "Completion to complete"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:344
msgid "``long code``"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:344
msgid "If present, complete **comp** and then return code to kthread_stop()."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:346
msgid ""
"A kernel thread whose module may be removed after the completion of **comp** "
"can use this function to exit safely."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:556
msgid "create a kthread."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:560 kernel/kthread.c:1065
msgid "``int node``"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:559
msgid "task and thread structures for the thread are allocated on this node"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:562
msgid ""
"This helper function creates and names a kernel thread.  The thread will be "
"stopped: use wake_up_process() to start it.  See also kthread_run().  The "
"new thread has SCHED_NORMAL policy and is affine to all CPUs."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:567
msgid ""
"If thread is going to be bound on a particular cpu, give its node in "
"**node**, to get NUMA affinity for kthread stack, or else give NUMA_NO_NODE. "
"When woken, the thread will run **threadfn\\(\\)** with **data** as its "
"argument. **threadfn\\(\\)** can either return directly if it is a "
"standalone thread for which no one will call kthread_stop(), or return when "
"'kthread_should_stop()' is true (which means kthread_stop() has been "
"called).  The return value should be zero or a negative error number; it "
"will be passed to kthread_stop()."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:576
msgid "Returns a task_struct or ERR_PTR(-ENOMEM) or ERR_PTR(-EINTR)."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:623
msgid "bind a just-created kthread to a cpu."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:624 kernel/kthread.c:694
#: kernel/kthread.c:723 kernel/kthread.c:764 kernel/kthread.c:801
msgid "thread created by kthread_create()."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:625
msgid "cpu (might not be online, must be possible) for **k** to run on."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:627
msgid ""
"This function is equivalent to set_cpus_allowed(), except that **cpu** "
"doesn't need to be online, and the thread must be stopped (i.e., just "
"returned from kthread_create())."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:640
msgid "Create a cpu bound kthread"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:647
msgid "This helper function creates and names a kernel thread"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:693
msgid "unpark a thread created by kthread_create()."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:699 kernel/kthread.c:728
#: kernel/kthread.c:769 kernel/kthread.c:806
msgid "``struct task_struct *k``"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:695
msgid ""
"Sets kthread_should_park() for **k** to return false, wakes it, and waits "
"for it to return. If the thread is marked percpu then its bound to the cpu "
"again."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:722
msgid "park a thread created by kthread_create()."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:724
msgid ""
"Sets kthread_should_park() for **k** to return true, wakes it, and waits for "
"it to return. This can also be called after kthread_create() instead of "
"calling wake_up_process(): the thread will park without calling threadfn()."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:729
msgid ""
"Returns 0 if the thread is parked, -ENOSYS if the thread exited. If called "
"by the kthread itself just the park bit is set."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:763
msgid "stop a thread created by kthread_create()."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:765
msgid ""
"Sets kthread_should_stop() for **k** to return true, wakes it, and waits for "
"it to exit. This can also be called after kthread_create() instead of "
"calling wake_up_process(): the thread will exit without calling threadfn()."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:770
msgid ""
"If threadfn() may call kthread_exit() itself, the caller must ensure "
"task_struct can't go away."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:773
msgid ""
"Returns the result of threadfn(), or ``-EINTR`` if wake_up_process() was "
"never called."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:800
msgid "stop a thread and put its task struct"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:802
msgid ""
"Stops a thread created by kthread_create() and put its task_struct. Only use "
"when holding an extra task struct reference obtained by calling "
"get_task_struct()."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:956
msgid "kthread function to process kthread_worker"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:962
msgid "``void *worker_ptr``"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:957
msgid "pointer to initialized kthread_worker"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:958
msgid ""
"This function implements the main cycle of kthread worker. It processes "
"work_list until it is stopped with kthread_stop(). It sleeps when the queue "
"is empty."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:962
msgid ""
"The works are not allowed to keep any locks, disable preemption or "
"interrupts when they finish. There is defined a safe point for freezing when "
"one work finishes and before a new one is started."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:966
msgid ""
"Also the works must not be handled by more than one worker at the same time, "
"see also kthread_queue_work()."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1062
msgid "create a kthread worker"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1064
msgid "task structure for the thread is allocated on this node"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1065
msgid "printf-style name for the kthread worker (task)."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1066
msgid ""
"Returns a pointer to the allocated worker on success, ERR_PTR(-ENOMEM) when "
"the needed structures could not get allocated, and ERR_PTR(-EINTR) when the "
"caller was killed by a fatal signal."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1086
msgid ""
"create a kthread worker and bind it to a given CPU and the associated NUMA "
"node."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1092
msgid ""
"Use a valid CPU number if you want to bind the kthread worker to the given "
"CPU and the associated NUMA node."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1095
msgid ""
"A good practice is to add the cpu number also into the worker name. For "
"example, use kthread_create_worker_on_cpu(cpu, \"helper/``d``\", cpu)."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1098
msgid ""
"CPU hotplug: The kthread worker API is simple and generic. It just provides "
"a way to create, use, and destroy workers."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1102
msgid ""
"It is up to the API user how to handle CPU hotplug. They have to decide how "
"to handle pending work items, prevent queuing new ones, and restore the "
"functionality when the CPU goes off and on. There are a few catches:"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1107
msgid "CPU affinity gets lost when it is scheduled on an offline CPU."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1109
msgid ""
"The worker might not exist when the CPU was off when the user created the "
"workers."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1112
msgid ""
"Good practice is to implement two CPU hotplug callbacks and to destroy/"
"create the worker when the CPU goes down/up."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1116
msgid ""
"The pointer to the allocated worker on success, ERR_PTR(-ENOMEM) when the "
"needed structures could not get allocated, and ERR_PTR(-EINTR) when the "
"caller was killed by a fatal signal."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1173
msgid "queue a kthread_work"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1179 kernel/kthread.c:1273
#: kernel/kthread.c:1412 kernel/kthread.c:1556 kernel/kthread.c:1575
msgid "``struct kthread_worker *worker``"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1174 kernel/kthread.c:1269
msgid "target kthread_worker"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1176 kernel/kthread.c:1320
#: kernel/kthread.c:1519
msgid "``struct kthread_work *work``"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1175
msgid "kthread_work to queue"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1176
msgid ""
"Queue **work** to work processor **task** for async execution.  **task** "
"must have been created with kthread_create_worker().  Returns ``true`` if "
"**work** was successfully queued, ``false`` if it was already pending."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1180
msgid ""
"Reinitialize the work if it needs to be used by another worker. For example, "
"when the worker was stopped and started again."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1201
msgid ""
"callback that queues the associated kthread delayed work when the timer "
"expires."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1207
msgid "``struct timer_list *t``"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1203
msgid "pointer to the expired timer"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1204
msgid ""
"The format of the function is defined by struct timer_list. It should have "
"been called from irqsafe timer with irq already off."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1267
msgid "queue the associated kthread work after a delay."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1271 kernel/kthread.c:1409
#: kernel/kthread.c:1541
msgid "``struct kthread_delayed_work *dwork``"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1270
msgid "kthread_delayed_work to queue"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1272 kernel/kthread.c:1410
msgid "``unsigned long delay``"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1271 kernel/kthread.c:1409
msgid "number of jiffies to wait before queuing"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1272
msgid ""
"If the work has not been pending it starts a timer that will queue the work "
"after the given **delay**. If **delay** is zero, it queues the work "
"immediately."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1277
msgid ""
"``false`` if the **work** has already been pending. It means that either the "
"timer was running or the work was queued. It returns ``true`` otherwise."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1314
msgid "flush a kthread_work"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1315
msgid "work to flush"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1316
msgid "If **work** is queued or executing, wait for it to finish execution."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1406
msgid "modify delay of or queue a kthread delayed work"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1407
msgid "kthread worker to use"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1408
msgid "kthread delayed work to queue"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1410
msgid ""
"If **dwork** is idle, equivalent to kthread_queue_delayed_work(). Otherwise, "
"modify **dwork**'s timer so that it expires after **delay**. If **delay** is "
"zero, **work** is guaranteed to be queued immediately."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1415
msgid ""
"A special case is when the work is being canceled in parallel. It might be "
"caused either by the real kthread_cancel_delayed_work_sync() or yet another "
"kthread_mod_delayed_work() call. We let the other command win and return "
"``true`` here. The return value can be used for reference counting and the "
"number of queued works stays the same. Anyway, the caller is supposed to "
"synchronize these operations a reasonable way."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1422
msgid ""
"This function is safe to call from any context including IRQ handler. See "
"__kthread_cancel_work() and kthread_delayed_work_timer_fn() for details."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1415
msgid "``false`` if **dwork** was idle and queued, ``true`` otherwise."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1513
msgid "cancel a kthread work and wait for it to finish"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1514
msgid "the kthread work to cancel"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1515
msgid ""
"Cancel **work** and wait for its execution to finish.  This function can be "
"used even if the work re-queues itself. On return from this function, "
"**work** is guaranteed to be not pending or executing on any CPU."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1519
msgid ""
"kthread_cancel_work_sync(:c:type:`delayed_work->work <delayed_work>`) must "
"not be used for delayed_work's. Use kthread_cancel_delayed_work_sync() "
"instead."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1522
msgid ""
"The caller must ensure that the worker on which **work** was last queued "
"can't be destroyed before this function returns."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1526
msgid "``true`` if **work** was pending, ``false`` otherwise."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1535
msgid "cancel a kthread delayed work and wait for it to finish."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1537
msgid "the kthread delayed work to cancel"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1538
msgid "This is kthread_cancel_work_sync() for delayed works."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1541
msgid "``true`` if **dwork** was pending, ``false`` otherwise."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1550
msgid "flush all current works on a kthread_worker"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1551
msgid "worker to flush"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1552
msgid ""
"Wait until all currently executing or pending works on **worker** are "
"finished."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1569
msgid "destroy a kthread worker"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1570
msgid "worker to be destroyed"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1571
msgid ""
"Flush and destroy **worker**.  The simple flush is enough because the "
"kthread worker API is used only in trivial scenarios.  There are no multi-"
"step state machines needed."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1575
msgid ""
"Note that this function is not responsible for handling delayed work, so "
"caller should be responsible for queuing or canceling all delayed work items "
"before invoke this function."
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1597
msgid "make the calling kthread operate on an address space"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1603 kernel/kthread.c:1649
msgid "``struct mm_struct *mm``"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1598 kernel/kthread.c:1644
msgid "address space to operate on"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1643
msgid "reverse the effect of kthread_use_mm()"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1677
msgid "associate blkcg to current kthread"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1683
msgid "``struct cgroup_subsys_state *css``"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1678
msgid "the cgroup info"
msgstr ""

#: ../../../driver-api/basics:81: kernel/kthread.c:1679
msgid ""
"Current thread must be a kthread. The thread is running jobs on behalf of "
"other threads. In some cases, we expect the jobs attach cgroup info of "
"original threads instead of that of current thread. This function stores "
"original thread's cgroup info in current kthread context for later retrieval."
msgstr ""

#: ../../../driver-api/basics.rst:85
msgid "Reference counting"
msgstr ""

#: ../../../driver-api/basics:87: include/linux/refcount.h:128
msgid "set a refcount's value"
msgstr ""

#: ../../../driver-api/basics:87: include/linux/refcount.h:134
#: include/linux/refcount.h:144 include/linux/refcount.h:196
#: include/linux/refcount.h:258 include/linux/refcount.h:298
#: include/linux/refcount.h:327 include/linux/refcount.h:350
#: include/linux/refcount.h:376 include/linux/refcount.h:409
#: include/linux/refcount.h:442 include/linux/refcount.h:471
#: ../../../driver-api/basics:90: lib/refcount.c:46 lib/refcount.c:70
#: lib/refcount.c:104 lib/refcount.c:135 lib/refcount.c:166
msgid "``refcount_t *r``"
msgstr ""

#: ../../../driver-api/basics:87: include/linux/refcount.h:129
#: include/linux/refcount.h:139 include/linux/refcount.h:164
#: include/linux/refcount.h:195 include/linux/refcount.h:257
#: include/linux/refcount.h:297 include/linux/refcount.h:408
#: include/linux/refcount.h:437 include/linux/refcount.h:466
#: ../../../driver-api/basics:90: lib/refcount.c:41 lib/refcount.c:65
#: lib/refcount.c:100 lib/refcount.c:131 lib/refcount.c:162
msgid "the refcount"
msgstr ""

#: ../../../driver-api/basics:87: include/linux/refcount.h:131
#: include/linux/refcount.h:141
msgid "``int n``"
msgstr ""

#: ../../../driver-api/basics:87: include/linux/refcount.h:130
#: include/linux/refcount.h:140
msgid "value to which the refcount will be set"
msgstr ""

#: ../../../driver-api/basics:87: include/linux/refcount.h:138
msgid "set a refcount's value with release ordering"
msgstr ""

#: ../../../driver-api/basics:87: include/linux/refcount.h:141
#: include/linux/refcount.h:260 include/linux/refcount.h:349
msgid ""
"This function should be used when memory occupied by the object might be "
"reused to store another object -- consider SLAB_TYPESAFE_BY_RCU."
msgstr ""

#: ../../../driver-api/basics:87: include/linux/refcount.h:144
msgid ""
"Provides release memory ordering which will order previous memory operations "
"against this store. This ensures all updates to this object are visible once "
"the refcount is set and stale values from the object previously occupying "
"this memory are overwritten with new ones."
msgstr ""

#: ../../../driver-api/basics:87: include/linux/refcount.h:149
msgid ""
"This function should be called only after new object is fully initialized. "
"After this call the object should be considered visible to other tasks even "
"if it was not yet added into an object collection normally used to discover "
"it. This is because other tasks might have discovered the object previously "
"occupying the same memory and after memory reuse they can succeed in taking "
"refcount to the new object and start using it."
msgstr ""

#: ../../../driver-api/basics:87: include/linux/refcount.h:163
msgid "get a refcount's value"
msgstr ""

#: ../../../driver-api/basics:87: include/linux/refcount.h:169
msgid "``const refcount_t *r``"
msgstr ""

#: ../../../driver-api/basics:87: include/linux/refcount.h:166
msgid "the refcount's value"
msgstr ""

#: ../../../driver-api/basics:87: include/linux/refcount.h:193
msgid "add a value to a refcount unless it is 0"
msgstr ""

#: ../../../driver-api/basics:87: include/linux/refcount.h:199
#: include/linux/refcount.h:260 include/linux/refcount.h:301
#: include/linux/refcount.h:412 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:57
#: include/linux/atomic/atomic-instrumented.h:75
#: include/linux/atomic/atomic-instrumented.h:97
#: include/linux/atomic/atomic-instrumented.h:115
#: include/linux/atomic/atomic-instrumented.h:134
#: include/linux/atomic/atomic-instrumented.h:152
#: include/linux/atomic/atomic-instrumented.h:171
#: include/linux/atomic/atomic-instrumented.h:189
#: include/linux/atomic/atomic-instrumented.h:208
#: include/linux/atomic/atomic-instrumented.h:226
#: include/linux/atomic/atomic-instrumented.h:245
#: include/linux/atomic/atomic-instrumented.h:263
#: include/linux/atomic/atomic-instrumented.h:281
#: include/linux/atomic/atomic-instrumented.h:300
#: include/linux/atomic/atomic-instrumented.h:318
#: include/linux/atomic/atomic-instrumented.h:337
#: include/linux/atomic/atomic-instrumented.h:355
#: include/linux/atomic/atomic-instrumented.h:374
#: include/linux/atomic/atomic-instrumented.h:392
#: include/linux/atomic/atomic-instrumented.h:411
#: include/linux/atomic/atomic-instrumented.h:743
#: include/linux/atomic/atomic-instrumented.h:761
#: include/linux/atomic/atomic-instrumented.h:780
#: include/linux/atomic/atomic-instrumented.h:798
#: include/linux/atomic/atomic-instrumented.h:817
#: include/linux/atomic/atomic-instrumented.h:835
#: include/linux/atomic/atomic-instrumented.h:853
#: include/linux/atomic/atomic-instrumented.h:872
#: include/linux/atomic/atomic-instrumented.h:890
#: include/linux/atomic/atomic-instrumented.h:909
#: include/linux/atomic/atomic-instrumented.h:927
#: include/linux/atomic/atomic-instrumented.h:945
#: include/linux/atomic/atomic-instrumented.h:964
#: include/linux/atomic/atomic-instrumented.h:982
#: include/linux/atomic/atomic-instrumented.h:1001
#: include/linux/atomic/atomic-instrumented.h:1019
#: include/linux/atomic/atomic-instrumented.h:1037
#: include/linux/atomic/atomic-instrumented.h:1056
#: include/linux/atomic/atomic-instrumented.h:1074
#: include/linux/atomic/atomic-instrumented.h:1093
#: include/linux/atomic/atomic-instrumented.h:1357
#: include/linux/atomic/atomic-instrumented.h:1412
#: include/linux/atomic/atomic-instrumented.h:1431
#: include/linux/atomic/atomic-instrumented.h:1449
#: include/linux/atomic/atomic-instrumented.h:1468
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:493
#: include/linux/atomic/atomic-arch-fallback.h:510
#: include/linux/atomic/atomic-arch-fallback.h:539
#: include/linux/atomic/atomic-arch-fallback.h:556
#: include/linux/atomic/atomic-arch-fallback.h:583
#: include/linux/atomic/atomic-arch-fallback.h:610
#: include/linux/atomic/atomic-arch-fallback.h:636
#: include/linux/atomic/atomic-arch-fallback.h:659
#: include/linux/atomic/atomic-arch-fallback.h:686
#: include/linux/atomic/atomic-arch-fallback.h:713
#: include/linux/atomic/atomic-arch-fallback.h:739
#: include/linux/atomic/atomic-arch-fallback.h:762
#: include/linux/atomic/atomic-arch-fallback.h:779
#: include/linux/atomic/atomic-arch-fallback.h:806
#: include/linux/atomic/atomic-arch-fallback.h:833
#: include/linux/atomic/atomic-arch-fallback.h:859
#: include/linux/atomic/atomic-arch-fallback.h:882
#: include/linux/atomic/atomic-arch-fallback.h:909
#: include/linux/atomic/atomic-arch-fallback.h:936
#: include/linux/atomic/atomic-arch-fallback.h:962
#: include/linux/atomic/atomic-arch-fallback.h:1421
#: include/linux/atomic/atomic-arch-fallback.h:1438
#: include/linux/atomic/atomic-arch-fallback.h:1465
#: include/linux/atomic/atomic-arch-fallback.h:1492
#: include/linux/atomic/atomic-arch-fallback.h:1518
#: include/linux/atomic/atomic-arch-fallback.h:1541
#: include/linux/atomic/atomic-arch-fallback.h:1562
#: include/linux/atomic/atomic-arch-fallback.h:1589
#: include/linux/atomic/atomic-arch-fallback.h:1616
#: include/linux/atomic/atomic-arch-fallback.h:1642
#: include/linux/atomic/atomic-arch-fallback.h:1665
#: include/linux/atomic/atomic-arch-fallback.h:1682
#: include/linux/atomic/atomic-arch-fallback.h:1709
#: include/linux/atomic/atomic-arch-fallback.h:1736
#: include/linux/atomic/atomic-arch-fallback.h:1762
#: include/linux/atomic/atomic-arch-fallback.h:1785
#: include/linux/atomic/atomic-arch-fallback.h:1802
#: include/linux/atomic/atomic-arch-fallback.h:1829
#: include/linux/atomic/atomic-arch-fallback.h:1856
#: include/linux/atomic/atomic-arch-fallback.h:1882
#: include/linux/atomic/atomic-arch-fallback.h:2250
#: include/linux/atomic/atomic-arch-fallback.h:2311
#: include/linux/atomic/atomic-arch-fallback.h:2338
#: include/linux/atomic/atomic-arch-fallback.h:2365
#: include/linux/atomic/atomic-arch-fallback.h:2391
msgid "``int i``"
msgstr ""

#: ../../../driver-api/basics:87: include/linux/refcount.h:194
#: include/linux/refcount.h:256 include/linux/refcount.h:296
msgid "the value to add to the refcount"
msgstr ""

#: ../../../driver-api/basics:87: include/linux/refcount.h:196
#: include/linux/refcount.h:258
msgid "Will saturate at REFCOUNT_SATURATED and WARN."
msgstr ""

#: ../../../driver-api/basics:87: include/linux/refcount.h:198
#: include/linux/refcount.h:300 include/linux/refcount.h:326
msgid ""
"Provides no memory ordering, it is assumed the caller has guaranteed the "
"object memory to be stable (RCU, etc.). It does provide a control dependency "
"and thereby orders future stores. See the comment on top."
msgstr ""

#: ../../../driver-api/basics:87: include/linux/refcount.h:202
#: include/linux/refcount.h:304
msgid ""
"Use of this function is not recommended for the normal reference counting "
"use case in which references are taken and released one at a time.  In these "
"cases, refcount_inc(), or one of its variants, should instead be used to "
"increment a reference count."
msgstr ""

#: ../../../driver-api/basics:87: include/linux/refcount.h:208
#: include/linux/refcount.h:273
msgid "false if the passed refcount is 0, true otherwise"
msgstr ""

#: ../../../driver-api/basics:87: include/linux/refcount.h:254
msgid "add a value to a refcount with acquire ordering unless it is 0"
msgstr ""

#: ../../../driver-api/basics:87: include/linux/refcount.h:263
#: include/linux/refcount.h:352
msgid ""
"Provides acquire memory ordering on success, it is assumed the caller has "
"guaranteed the object memory to be stable (RCU, etc.). It does provide a "
"control dependency and thereby orders future stores. See the comment on top."
msgstr ""

#: ../../../driver-api/basics:87: include/linux/refcount.h:267
msgid ""
"Use of this function is not recommended for the normal reference counting "
"use case in which references are taken and released one at a time.  In these "
"cases, refcount_inc_not_zero_acquire() should instead be used to increment a "
"reference count."
msgstr ""

#: ../../../driver-api/basics:87: include/linux/refcount.h:295
msgid "add a value to a refcount"
msgstr ""

#: ../../../driver-api/basics:87: include/linux/refcount.h:298
msgid ""
"Similar to atomic_add(), but will saturate at REFCOUNT_SATURATED and WARN."
msgstr ""

#: ../../../driver-api/basics:87: include/linux/refcount.h:321
msgid "increment a refcount unless it is 0"
msgstr ""

#: ../../../driver-api/basics:87: include/linux/refcount.h:322
#: include/linux/refcount.h:345 include/linux/refcount.h:371
msgid "the refcount to increment"
msgstr ""

#: ../../../driver-api/basics:87: include/linux/refcount.h:323
msgid ""
"Similar to atomic_inc_not_zero(), but will saturate at REFCOUNT_SATURATED "
"and WARN."
msgstr ""

#: ../../../driver-api/basics:87: include/linux/refcount.h:331
#: include/linux/refcount.h:357
msgid "true if the increment was successful, false otherwise"
msgstr ""

#: ../../../driver-api/basics:87: include/linux/refcount.h:344
msgid "increment a refcount with acquire ordering unless it is 0"
msgstr ""

#: ../../../driver-api/basics:87: include/linux/refcount.h:346
msgid ""
"Similar to refcount_inc_not_zero(), but provides acquire memory ordering on "
"success."
msgstr ""

#: ../../../driver-api/basics:87: include/linux/refcount.h:370
msgid "increment a refcount"
msgstr ""

#: ../../../driver-api/basics:87: include/linux/refcount.h:372
msgid ""
"Similar to atomic_inc(), but will saturate at REFCOUNT_SATURATED and WARN."
msgstr ""

#: ../../../driver-api/basics:87: include/linux/refcount.h:374
msgid ""
"Provides no memory ordering, it is assumed the caller already has a "
"reference on the object."
msgstr ""

#: ../../../driver-api/basics:87: include/linux/refcount.h:377
msgid ""
"Will WARN if the refcount is 0, as this represents a possible use-after-free "
"condition."
msgstr ""

#: ../../../driver-api/basics:87: include/linux/refcount.h:406
msgid "subtract from a refcount and test if it is 0"
msgstr ""

#: ../../../driver-api/basics:87: include/linux/refcount.h:407
msgid "amount to subtract from the refcount"
msgstr ""

#: ../../../driver-api/basics:87: include/linux/refcount.h:409
msgid ""
"Similar to atomic_dec_and_test(), but it will WARN, return false and "
"ultimately leak on underflow and will fail to decrement when saturated at "
"REFCOUNT_SATURATED."
msgstr ""

#: ../../../driver-api/basics:87: include/linux/refcount.h:413
#: include/linux/refcount.h:441
msgid ""
"Provides release memory ordering, such that prior loads and stores are done "
"before, and provides an acquire ordering on success such that free() must "
"come after."
msgstr ""

#: ../../../driver-api/basics:87: include/linux/refcount.h:417
msgid ""
"Use of this function is not recommended for the normal reference counting "
"use case in which references are taken and released one at a time.  In these "
"cases, refcount_dec(), or one of its variants, should instead be used to "
"decrement a reference count."
msgstr ""

#: ../../../driver-api/basics:87: include/linux/refcount.h:423
#: include/linux/refcount.h:446 ../../../driver-api/basics:90:
#: lib/refcount.c:53
msgid "true if the resulting refcount is 0, false otherwise"
msgstr ""

#: ../../../driver-api/basics:87: include/linux/refcount.h:436
msgid "decrement a refcount and test if it is 0"
msgstr ""

#: ../../../driver-api/basics:87: include/linux/refcount.h:438
msgid ""
"Similar to atomic_dec_and_test(), it will WARN on underflow and fail to "
"decrement when saturated at REFCOUNT_SATURATED."
msgstr ""

#: ../../../driver-api/basics:87: include/linux/refcount.h:465
msgid "decrement a refcount"
msgstr ""

#: ../../../driver-api/basics:87: include/linux/refcount.h:467
msgid ""
"Similar to atomic_dec(), it will WARN on underflow and fail to decrement "
"when saturated at REFCOUNT_SATURATED."
msgstr ""

#: ../../../driver-api/basics:87: include/linux/refcount.h:470
msgid ""
"Provides release memory ordering, such that prior loads and stores are done "
"before."
msgstr ""

#: ../../../driver-api/basics:90: lib/refcount.c:40
msgid "decrement a refcount if it is 1"
msgstr ""

#: ../../../driver-api/basics:90: lib/refcount.c:42
msgid ""
"No atomic_t counterpart, it attempts a 1 -> 0 transition and returns the "
"success thereof."
msgstr ""

#: ../../../driver-api/basics:90: lib/refcount.c:45
msgid ""
"Like all decrement operations, it provides release memory order and provides "
"a control dependency."
msgstr ""

#: ../../../driver-api/basics:90: lib/refcount.c:48
msgid ""
"It can be used like a try-delete operator; this explicit case is provided "
"and not cmpxchg in generic, because that would allow implementing unsafe "
"operations."
msgstr ""

#: ../../../driver-api/basics:90: lib/refcount.c:64
msgid "decrement a refcount if it is not 1"
msgstr ""

#: ../../../driver-api/basics:90: lib/refcount.c:66
msgid ""
"No atomic_t counterpart, it decrements unless the value is 1, in which case "
"it will return false."
msgstr ""

#: ../../../driver-api/basics:90: lib/refcount.c:69
msgid "Was often done like: atomic_add_unless(:c:type:`var`, -1, 1)"
msgstr ""

#: ../../../driver-api/basics:90: lib/refcount.c:72
msgid "true if the decrement operation was successful, false otherwise"
msgstr ""

#: ../../../driver-api/basics:90: lib/refcount.c:98
msgid "return holding mutex if able to decrement refcount to 0"
msgstr ""

#: ../../../driver-api/basics:90: lib/refcount.c:102
msgid "``struct mutex *lock``"
msgstr ""

#: ../../../driver-api/basics:90: lib/refcount.c:101
msgid "the mutex to be locked"
msgstr ""

#: ../../../driver-api/basics:90: lib/refcount.c:102
msgid ""
"Similar to atomic_dec_and_mutex_lock(), it will WARN on underflow and fail "
"to decrement when saturated at REFCOUNT_SATURATED."
msgstr ""

#: ../../../driver-api/basics:90: lib/refcount.c:105 lib/refcount.c:136
msgid ""
"Provides release memory ordering, such that prior loads and stores are done "
"before, and provides a control dependency such that free() must come after. "
"See the comment on top."
msgstr ""

#: ../../../driver-api/basics:90: lib/refcount.c:110
msgid "true and hold mutex if able to decrement refcount to 0, false otherwise"
msgstr ""

#: ../../../driver-api/basics:90: lib/refcount.c:129
msgid "return holding spinlock if able to decrement refcount to 0"
msgstr ""

#: ../../../driver-api/basics:90: lib/refcount.c:133 lib/refcount.c:164
msgid "``spinlock_t *lock``"
msgstr ""

#: ../../../driver-api/basics:90: lib/refcount.c:132 lib/refcount.c:163
msgid "the spinlock to be locked"
msgstr ""

#: ../../../driver-api/basics:90: lib/refcount.c:133
msgid ""
"Similar to atomic_dec_and_lock(), it will WARN on underflow and fail to "
"decrement when saturated at REFCOUNT_SATURATED."
msgstr ""

#: ../../../driver-api/basics:90: lib/refcount.c:141 lib/refcount.c:169
msgid ""
"true and hold spinlock if able to decrement refcount to 0, false otherwise"
msgstr ""

#: ../../../driver-api/basics:90: lib/refcount.c:160
msgid ""
"return holding spinlock with disabled interrupts if able to decrement "
"refcount to 0"
msgstr ""

#: ../../../driver-api/basics:90: lib/refcount.c:165
msgid "``unsigned long *flags``"
msgstr ""

#: ../../../driver-api/basics:90: lib/refcount.c:164
msgid "saved IRQ-flags if the is acquired"
msgstr ""

#: ../../../driver-api/basics:90: lib/refcount.c:165
msgid ""
"Same as refcount_dec_and_lock() above except that the spinlock is acquired "
"with disabled interrupts."
msgstr ""

#: ../../../driver-api/basics.rst:94
msgid "Atomics"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:25
#: ../../../driver-api/basics:96: include/linux/atomic/atomic-instrumented.h:20
#: include/linux/atomic/atomic-instrumented.h:1598
#: include/linux/atomic/atomic-instrumented.h:3176
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:445
#: include/linux/atomic/atomic-arch-fallback.h:2571
msgid "atomic load with relaxed ordering"
msgstr ""

#: ../../../driver-api/basics:96: include/linux/atomic/atomic-instrumented.h:26
#: include/linux/atomic/atomic-instrumented.h:43 ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:451
#: include/linux/atomic/atomic-arch-fallback.h:467
msgid "``const atomic_t *v``"
msgstr ""

#: ../../../driver-api/basics:96: include/linux/atomic/atomic-instrumented.h:21
#: include/linux/atomic/atomic-instrumented.h:38
#: include/linux/atomic/atomic-instrumented.h:55
#: include/linux/atomic/atomic-instrumented.h:73
#: include/linux/atomic/atomic-instrumented.h:93
#: include/linux/atomic/atomic-instrumented.h:111
#: include/linux/atomic/atomic-instrumented.h:130
#: include/linux/atomic/atomic-instrumented.h:148
#: include/linux/atomic/atomic-instrumented.h:167
#: include/linux/atomic/atomic-instrumented.h:185
#: include/linux/atomic/atomic-instrumented.h:204
#: include/linux/atomic/atomic-instrumented.h:222
#: include/linux/atomic/atomic-instrumented.h:241
#: include/linux/atomic/atomic-instrumented.h:259
#: include/linux/atomic/atomic-instrumented.h:277
#: include/linux/atomic/atomic-instrumented.h:296
#: include/linux/atomic/atomic-instrumented.h:314
#: include/linux/atomic/atomic-instrumented.h:333
#: include/linux/atomic/atomic-instrumented.h:351
#: include/linux/atomic/atomic-instrumented.h:370
#: include/linux/atomic/atomic-instrumented.h:388
#: include/linux/atomic/atomic-instrumented.h:407
#: include/linux/atomic/atomic-instrumented.h:424
#: include/linux/atomic/atomic-instrumented.h:441
#: include/linux/atomic/atomic-instrumented.h:459
#: include/linux/atomic/atomic-instrumented.h:476
#: include/linux/atomic/atomic-instrumented.h:494
#: include/linux/atomic/atomic-instrumented.h:511
#: include/linux/atomic/atomic-instrumented.h:529
#: include/linux/atomic/atomic-instrumented.h:546
#: include/linux/atomic/atomic-instrumented.h:564
#: include/linux/atomic/atomic-instrumented.h:581
#: include/linux/atomic/atomic-instrumented.h:598
#: include/linux/atomic/atomic-instrumented.h:616
#: include/linux/atomic/atomic-instrumented.h:633
#: include/linux/atomic/atomic-instrumented.h:651
#: include/linux/atomic/atomic-instrumented.h:668
#: include/linux/atomic/atomic-instrumented.h:686
#: include/linux/atomic/atomic-instrumented.h:703
#: include/linux/atomic/atomic-instrumented.h:721
#: include/linux/atomic/atomic-instrumented.h:739
#: include/linux/atomic/atomic-instrumented.h:757
#: include/linux/atomic/atomic-instrumented.h:776
#: include/linux/atomic/atomic-instrumented.h:794
#: include/linux/atomic/atomic-instrumented.h:813
#: include/linux/atomic/atomic-instrumented.h:831
#: include/linux/atomic/atomic-instrumented.h:849
#: include/linux/atomic/atomic-instrumented.h:868
#: include/linux/atomic/atomic-instrumented.h:886
#: include/linux/atomic/atomic-instrumented.h:905
#: include/linux/atomic/atomic-instrumented.h:923
#: include/linux/atomic/atomic-instrumented.h:941
#: include/linux/atomic/atomic-instrumented.h:960
#: include/linux/atomic/atomic-instrumented.h:978
#: include/linux/atomic/atomic-instrumented.h:997
#: include/linux/atomic/atomic-instrumented.h:1015
#: include/linux/atomic/atomic-instrumented.h:1033
#: include/linux/atomic/atomic-instrumented.h:1052
#: include/linux/atomic/atomic-instrumented.h:1070
#: include/linux/atomic/atomic-instrumented.h:1089
#: include/linux/atomic/atomic-instrumented.h:1106
#: include/linux/atomic/atomic-instrumented.h:1125
#: include/linux/atomic/atomic-instrumented.h:1143
#: include/linux/atomic/atomic-instrumented.h:1162
#: include/linux/atomic/atomic-instrumented.h:1180
#: include/linux/atomic/atomic-instrumented.h:1201
#: include/linux/atomic/atomic-instrumented.h:1221
#: include/linux/atomic/atomic-instrumented.h:1242
#: include/linux/atomic/atomic-instrumented.h:1262
#: include/linux/atomic/atomic-instrumented.h:1285
#: include/linux/atomic/atomic-instrumented.h:1307
#: include/linux/atomic/atomic-instrumented.h:1330
#: include/linux/atomic/atomic-instrumented.h:1353
#: include/linux/atomic/atomic-instrumented.h:1371
#: include/linux/atomic/atomic-instrumented.h:1389
#: include/linux/atomic/atomic-instrumented.h:1408
#: include/linux/atomic/atomic-instrumented.h:1427
#: include/linux/atomic/atomic-instrumented.h:1445
#: include/linux/atomic/atomic-instrumented.h:1464
#: include/linux/atomic/atomic-instrumented.h:1481
#: include/linux/atomic/atomic-instrumented.h:1502
#: include/linux/atomic/atomic-instrumented.h:1523
#: include/linux/atomic/atomic-instrumented.h:1542
#: include/linux/atomic/atomic-instrumented.h:1561
#: include/linux/atomic/atomic-instrumented.h:1580
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:446
#: include/linux/atomic/atomic-arch-fallback.h:462
#: include/linux/atomic/atomic-arch-fallback.h:491
#: include/linux/atomic/atomic-arch-fallback.h:508
#: include/linux/atomic/atomic-arch-fallback.h:535
#: include/linux/atomic/atomic-arch-fallback.h:552
#: include/linux/atomic/atomic-arch-fallback.h:579
#: include/linux/atomic/atomic-arch-fallback.h:606
#: include/linux/atomic/atomic-arch-fallback.h:632
#: include/linux/atomic/atomic-arch-fallback.h:655
#: include/linux/atomic/atomic-arch-fallback.h:682
#: include/linux/atomic/atomic-arch-fallback.h:709
#: include/linux/atomic/atomic-arch-fallback.h:735
#: include/linux/atomic/atomic-arch-fallback.h:758
#: include/linux/atomic/atomic-arch-fallback.h:775
#: include/linux/atomic/atomic-arch-fallback.h:802
#: include/linux/atomic/atomic-arch-fallback.h:829
#: include/linux/atomic/atomic-arch-fallback.h:855
#: include/linux/atomic/atomic-arch-fallback.h:878
#: include/linux/atomic/atomic-arch-fallback.h:905
#: include/linux/atomic/atomic-arch-fallback.h:932
#: include/linux/atomic/atomic-arch-fallback.h:958
#: include/linux/atomic/atomic-arch-fallback.h:980
#: include/linux/atomic/atomic-arch-fallback.h:1000
#: include/linux/atomic/atomic-arch-fallback.h:1026
#: include/linux/atomic/atomic-arch-fallback.h:1052
#: include/linux/atomic/atomic-arch-fallback.h:1077
#: include/linux/atomic/atomic-arch-fallback.h:1099
#: include/linux/atomic/atomic-arch-fallback.h:1125
#: include/linux/atomic/atomic-arch-fallback.h:1151
#: include/linux/atomic/atomic-arch-fallback.h:1176
#: include/linux/atomic/atomic-arch-fallback.h:1198
#: include/linux/atomic/atomic-arch-fallback.h:1218
#: include/linux/atomic/atomic-arch-fallback.h:1244
#: include/linux/atomic/atomic-arch-fallback.h:1270
#: include/linux/atomic/atomic-arch-fallback.h:1295
#: include/linux/atomic/atomic-arch-fallback.h:1317
#: include/linux/atomic/atomic-arch-fallback.h:1343
#: include/linux/atomic/atomic-arch-fallback.h:1369
#: include/linux/atomic/atomic-arch-fallback.h:1394
#: include/linux/atomic/atomic-arch-fallback.h:1417
#: include/linux/atomic/atomic-arch-fallback.h:1434
#: include/linux/atomic/atomic-arch-fallback.h:1461
#: include/linux/atomic/atomic-arch-fallback.h:1488
#: include/linux/atomic/atomic-arch-fallback.h:1514
#: include/linux/atomic/atomic-arch-fallback.h:1537
#: include/linux/atomic/atomic-arch-fallback.h:1558
#: include/linux/atomic/atomic-arch-fallback.h:1585
#: include/linux/atomic/atomic-arch-fallback.h:1612
#: include/linux/atomic/atomic-arch-fallback.h:1638
#: include/linux/atomic/atomic-arch-fallback.h:1661
#: include/linux/atomic/atomic-arch-fallback.h:1678
#: include/linux/atomic/atomic-arch-fallback.h:1705
#: include/linux/atomic/atomic-arch-fallback.h:1732
#: include/linux/atomic/atomic-arch-fallback.h:1758
#: include/linux/atomic/atomic-arch-fallback.h:1781
#: include/linux/atomic/atomic-arch-fallback.h:1798
#: include/linux/atomic/atomic-arch-fallback.h:1825
#: include/linux/atomic/atomic-arch-fallback.h:1852
#: include/linux/atomic/atomic-arch-fallback.h:1878
#: include/linux/atomic/atomic-arch-fallback.h:1900
#: include/linux/atomic/atomic-arch-fallback.h:1927
#: include/linux/atomic/atomic-arch-fallback.h:1954
#: include/linux/atomic/atomic-arch-fallback.h:1980
#: include/linux/atomic/atomic-arch-fallback.h:2003
#: include/linux/atomic/atomic-arch-fallback.h:2032
#: include/linux/atomic/atomic-arch-fallback.h:2061
#: include/linux/atomic/atomic-arch-fallback.h:2089
#: include/linux/atomic/atomic-arch-fallback.h:2114
#: include/linux/atomic/atomic-arch-fallback.h:2148
#: include/linux/atomic/atomic-arch-fallback.h:2182
#: include/linux/atomic/atomic-arch-fallback.h:2215
#: include/linux/atomic/atomic-arch-fallback.h:2246
#: include/linux/atomic/atomic-arch-fallback.h:2266
#: include/linux/atomic/atomic-arch-fallback.h:2286
#: include/linux/atomic/atomic-arch-fallback.h:2307
#: include/linux/atomic/atomic-arch-fallback.h:2334
#: include/linux/atomic/atomic-arch-fallback.h:2361
#: include/linux/atomic/atomic-arch-fallback.h:2387
#: include/linux/atomic/atomic-arch-fallback.h:2409
#: include/linux/atomic/atomic-arch-fallback.h:2439
#: include/linux/atomic/atomic-arch-fallback.h:2462
#: include/linux/atomic/atomic-arch-fallback.h:2483
#: include/linux/atomic/atomic-arch-fallback.h:2511
#: include/linux/atomic/atomic-arch-fallback.h:2539
msgid "pointer to atomic_t"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:27
#: ../../../driver-api/basics:96: include/linux/atomic/atomic-instrumented.h:22
#: include/linux/atomic/atomic-instrumented.h:1600
#: include/linux/atomic/atomic-instrumented.h:3178
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:447
#: include/linux/atomic/atomic-arch-fallback.h:2573
msgid "Atomically loads the value of **v** with relaxed ordering."
msgstr ""

#: ../../../driver-api/basics:96: include/linux/atomic/atomic-instrumented.h:24
msgid "Unsafe to use in noinstr code; use raw_atomic_read() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:32
#: include/linux/atomic/atomic-long.h:52 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:27
#: include/linux/atomic/atomic-instrumented.h:44
#: include/linux/atomic/atomic-instrumented.h:1605
#: include/linux/atomic/atomic-instrumented.h:1622
#: include/linux/atomic/atomic-instrumented.h:3183
#: include/linux/atomic/atomic-instrumented.h:3200
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:452
#: include/linux/atomic/atomic-arch-fallback.h:468
#: include/linux/atomic/atomic-arch-fallback.h:2578
#: include/linux/atomic/atomic-arch-fallback.h:2594
msgid "The value loaded from **v**."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:45
#: ../../../driver-api/basics:96: include/linux/atomic/atomic-instrumented.h:37
#: include/linux/atomic/atomic-instrumented.h:1615
#: include/linux/atomic/atomic-instrumented.h:3193
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:461
#: include/linux/atomic/atomic-arch-fallback.h:2587
msgid "atomic load with acquire ordering"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:47
#: ../../../driver-api/basics:96: include/linux/atomic/atomic-instrumented.h:39
#: include/linux/atomic/atomic-instrumented.h:1617
#: include/linux/atomic/atomic-instrumented.h:3195
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:463
#: include/linux/atomic/atomic-arch-fallback.h:2589
msgid "Atomically loads the value of **v** with acquire ordering."
msgstr ""

#: ../../../driver-api/basics:96: include/linux/atomic/atomic-instrumented.h:41
msgid "Unsafe to use in noinstr code; use raw_atomic_read_acquire() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:65
#: ../../../driver-api/basics:96: include/linux/atomic/atomic-instrumented.h:54
#: include/linux/atomic/atomic-instrumented.h:1632
#: include/linux/atomic/atomic-instrumented.h:3210
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:490
#: include/linux/atomic/atomic-arch-fallback.h:2616
msgid "atomic set with relaxed ordering"
msgstr ""

#: ../../../driver-api/basics:96: include/linux/atomic/atomic-instrumented.h:60
#: include/linux/atomic/atomic-instrumented.h:78
#: include/linux/atomic/atomic-instrumented.h:94
#: include/linux/atomic/atomic-instrumented.h:112
#: include/linux/atomic/atomic-instrumented.h:131
#: include/linux/atomic/atomic-instrumented.h:149
#: include/linux/atomic/atomic-instrumented.h:168
#: include/linux/atomic/atomic-instrumented.h:186
#: include/linux/atomic/atomic-instrumented.h:205
#: include/linux/atomic/atomic-instrumented.h:223
#: include/linux/atomic/atomic-instrumented.h:242
#: include/linux/atomic/atomic-instrumented.h:260
#: include/linux/atomic/atomic-instrumented.h:278
#: include/linux/atomic/atomic-instrumented.h:297
#: include/linux/atomic/atomic-instrumented.h:315
#: include/linux/atomic/atomic-instrumented.h:334
#: include/linux/atomic/atomic-instrumented.h:352
#: include/linux/atomic/atomic-instrumented.h:371
#: include/linux/atomic/atomic-instrumented.h:389
#: include/linux/atomic/atomic-instrumented.h:408
#: include/linux/atomic/atomic-instrumented.h:429
#: include/linux/atomic/atomic-instrumented.h:446
#: include/linux/atomic/atomic-instrumented.h:464
#: include/linux/atomic/atomic-instrumented.h:481
#: include/linux/atomic/atomic-instrumented.h:499
#: include/linux/atomic/atomic-instrumented.h:516
#: include/linux/atomic/atomic-instrumented.h:534
#: include/linux/atomic/atomic-instrumented.h:551
#: include/linux/atomic/atomic-instrumented.h:569
#: include/linux/atomic/atomic-instrumented.h:586
#: include/linux/atomic/atomic-instrumented.h:603
#: include/linux/atomic/atomic-instrumented.h:621
#: include/linux/atomic/atomic-instrumented.h:638
#: include/linux/atomic/atomic-instrumented.h:656
#: include/linux/atomic/atomic-instrumented.h:673
#: include/linux/atomic/atomic-instrumented.h:691
#: include/linux/atomic/atomic-instrumented.h:708
#: include/linux/atomic/atomic-instrumented.h:726
#: include/linux/atomic/atomic-instrumented.h:740
#: include/linux/atomic/atomic-instrumented.h:758
#: include/linux/atomic/atomic-instrumented.h:777
#: include/linux/atomic/atomic-instrumented.h:795
#: include/linux/atomic/atomic-instrumented.h:814
#: include/linux/atomic/atomic-instrumented.h:832
#: include/linux/atomic/atomic-instrumented.h:850
#: include/linux/atomic/atomic-instrumented.h:869
#: include/linux/atomic/atomic-instrumented.h:887
#: include/linux/atomic/atomic-instrumented.h:906
#: include/linux/atomic/atomic-instrumented.h:924
#: include/linux/atomic/atomic-instrumented.h:942
#: include/linux/atomic/atomic-instrumented.h:961
#: include/linux/atomic/atomic-instrumented.h:979
#: include/linux/atomic/atomic-instrumented.h:998
#: include/linux/atomic/atomic-instrumented.h:1016
#: include/linux/atomic/atomic-instrumented.h:1034
#: include/linux/atomic/atomic-instrumented.h:1053
#: include/linux/atomic/atomic-instrumented.h:1071
#: include/linux/atomic/atomic-instrumented.h:1090
#: include/linux/atomic/atomic-instrumented.h:1111
#: include/linux/atomic/atomic-instrumented.h:1130
#: include/linux/atomic/atomic-instrumented.h:1148
#: include/linux/atomic/atomic-instrumented.h:1167
#: include/linux/atomic/atomic-instrumented.h:1185
#: include/linux/atomic/atomic-instrumented.h:1206
#: include/linux/atomic/atomic-instrumented.h:1226
#: include/linux/atomic/atomic-instrumented.h:1247
#: include/linux/atomic/atomic-instrumented.h:1267
#: include/linux/atomic/atomic-instrumented.h:1290
#: include/linux/atomic/atomic-instrumented.h:1312
#: include/linux/atomic/atomic-instrumented.h:1335
#: include/linux/atomic/atomic-instrumented.h:1354
#: include/linux/atomic/atomic-instrumented.h:1376
#: include/linux/atomic/atomic-instrumented.h:1394
#: include/linux/atomic/atomic-instrumented.h:1409
#: include/linux/atomic/atomic-instrumented.h:1428
#: include/linux/atomic/atomic-instrumented.h:1446
#: include/linux/atomic/atomic-instrumented.h:1465
#: include/linux/atomic/atomic-instrumented.h:1486
#: include/linux/atomic/atomic-instrumented.h:1507
#: include/linux/atomic/atomic-instrumented.h:1528
#: include/linux/atomic/atomic-instrumented.h:1547
#: include/linux/atomic/atomic-instrumented.h:1566
#: include/linux/atomic/atomic-instrumented.h:1585
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:496
#: include/linux/atomic/atomic-arch-fallback.h:513
#: include/linux/atomic/atomic-arch-fallback.h:536
#: include/linux/atomic/atomic-arch-fallback.h:553
#: include/linux/atomic/atomic-arch-fallback.h:580
#: include/linux/atomic/atomic-arch-fallback.h:607
#: include/linux/atomic/atomic-arch-fallback.h:633
#: include/linux/atomic/atomic-arch-fallback.h:656
#: include/linux/atomic/atomic-arch-fallback.h:683
#: include/linux/atomic/atomic-arch-fallback.h:710
#: include/linux/atomic/atomic-arch-fallback.h:736
#: include/linux/atomic/atomic-arch-fallback.h:759
#: include/linux/atomic/atomic-arch-fallback.h:776
#: include/linux/atomic/atomic-arch-fallback.h:803
#: include/linux/atomic/atomic-arch-fallback.h:830
#: include/linux/atomic/atomic-arch-fallback.h:856
#: include/linux/atomic/atomic-arch-fallback.h:879
#: include/linux/atomic/atomic-arch-fallback.h:906
#: include/linux/atomic/atomic-arch-fallback.h:933
#: include/linux/atomic/atomic-arch-fallback.h:959
#: include/linux/atomic/atomic-arch-fallback.h:985
#: include/linux/atomic/atomic-arch-fallback.h:1005
#: include/linux/atomic/atomic-arch-fallback.h:1031
#: include/linux/atomic/atomic-arch-fallback.h:1057
#: include/linux/atomic/atomic-arch-fallback.h:1082
#: include/linux/atomic/atomic-arch-fallback.h:1104
#: include/linux/atomic/atomic-arch-fallback.h:1130
#: include/linux/atomic/atomic-arch-fallback.h:1156
#: include/linux/atomic/atomic-arch-fallback.h:1181
#: include/linux/atomic/atomic-arch-fallback.h:1203
#: include/linux/atomic/atomic-arch-fallback.h:1223
#: include/linux/atomic/atomic-arch-fallback.h:1249
#: include/linux/atomic/atomic-arch-fallback.h:1275
#: include/linux/atomic/atomic-arch-fallback.h:1300
#: include/linux/atomic/atomic-arch-fallback.h:1322
#: include/linux/atomic/atomic-arch-fallback.h:1348
#: include/linux/atomic/atomic-arch-fallback.h:1374
#: include/linux/atomic/atomic-arch-fallback.h:1399
#: include/linux/atomic/atomic-arch-fallback.h:1418
#: include/linux/atomic/atomic-arch-fallback.h:1435
#: include/linux/atomic/atomic-arch-fallback.h:1462
#: include/linux/atomic/atomic-arch-fallback.h:1489
#: include/linux/atomic/atomic-arch-fallback.h:1515
#: include/linux/atomic/atomic-arch-fallback.h:1538
#: include/linux/atomic/atomic-arch-fallback.h:1559
#: include/linux/atomic/atomic-arch-fallback.h:1586
#: include/linux/atomic/atomic-arch-fallback.h:1613
#: include/linux/atomic/atomic-arch-fallback.h:1639
#: include/linux/atomic/atomic-arch-fallback.h:1662
#: include/linux/atomic/atomic-arch-fallback.h:1679
#: include/linux/atomic/atomic-arch-fallback.h:1706
#: include/linux/atomic/atomic-arch-fallback.h:1733
#: include/linux/atomic/atomic-arch-fallback.h:1759
#: include/linux/atomic/atomic-arch-fallback.h:1782
#: include/linux/atomic/atomic-arch-fallback.h:1799
#: include/linux/atomic/atomic-arch-fallback.h:1826
#: include/linux/atomic/atomic-arch-fallback.h:1853
#: include/linux/atomic/atomic-arch-fallback.h:1879
#: include/linux/atomic/atomic-arch-fallback.h:1905
#: include/linux/atomic/atomic-arch-fallback.h:1932
#: include/linux/atomic/atomic-arch-fallback.h:1959
#: include/linux/atomic/atomic-arch-fallback.h:1985
#: include/linux/atomic/atomic-arch-fallback.h:2008
#: include/linux/atomic/atomic-arch-fallback.h:2037
#: include/linux/atomic/atomic-arch-fallback.h:2066
#: include/linux/atomic/atomic-arch-fallback.h:2094
#: include/linux/atomic/atomic-arch-fallback.h:2119
#: include/linux/atomic/atomic-arch-fallback.h:2153
#: include/linux/atomic/atomic-arch-fallback.h:2187
#: include/linux/atomic/atomic-arch-fallback.h:2220
#: include/linux/atomic/atomic-arch-fallback.h:2247
#: include/linux/atomic/atomic-arch-fallback.h:2271
#: include/linux/atomic/atomic-arch-fallback.h:2291
#: include/linux/atomic/atomic-arch-fallback.h:2308
#: include/linux/atomic/atomic-arch-fallback.h:2335
#: include/linux/atomic/atomic-arch-fallback.h:2362
#: include/linux/atomic/atomic-arch-fallback.h:2388
#: include/linux/atomic/atomic-arch-fallback.h:2414
#: include/linux/atomic/atomic-arch-fallback.h:2444
#: include/linux/atomic/atomic-arch-fallback.h:2467
#: include/linux/atomic/atomic-arch-fallback.h:2488
#: include/linux/atomic/atomic-arch-fallback.h:2516
#: include/linux/atomic/atomic-arch-fallback.h:2544
msgid "``atomic_t *v``"
msgstr ""

#: ../../../driver-api/basics:96: include/linux/atomic/atomic-instrumented.h:56
#: include/linux/atomic/atomic-instrumented.h:74
#: include/linux/atomic/atomic-instrumented.h:1107
#: include/linux/atomic/atomic-instrumented.h:1126
#: include/linux/atomic/atomic-instrumented.h:1144
#: include/linux/atomic/atomic-instrumented.h:1163
#: include/linux/atomic/atomic-instrumented.h:1182
#: include/linux/atomic/atomic-instrumented.h:1203
#: include/linux/atomic/atomic-instrumented.h:1223
#: include/linux/atomic/atomic-instrumented.h:1244
#: include/linux/atomic/atomic-instrumented.h:1264
#: include/linux/atomic/atomic-instrumented.h:1287
#: include/linux/atomic/atomic-instrumented.h:1309
#: include/linux/atomic/atomic-instrumented.h:1332
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:492
#: include/linux/atomic/atomic-arch-fallback.h:509
#: include/linux/atomic/atomic-arch-fallback.h:1901
#: include/linux/atomic/atomic-arch-fallback.h:1928
#: include/linux/atomic/atomic-arch-fallback.h:1955
#: include/linux/atomic/atomic-arch-fallback.h:1981
#: include/linux/atomic/atomic-arch-fallback.h:2005
#: include/linux/atomic/atomic-arch-fallback.h:2034
#: include/linux/atomic/atomic-arch-fallback.h:2063
#: include/linux/atomic/atomic-arch-fallback.h:2091
#: include/linux/atomic/atomic-arch-fallback.h:2116
#: include/linux/atomic/atomic-arch-fallback.h:2150
#: include/linux/atomic/atomic-arch-fallback.h:2184
#: include/linux/atomic/atomic-arch-fallback.h:2217
msgid "int value to assign"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:68
#: ../../../driver-api/basics:96: include/linux/atomic/atomic-instrumented.h:57
#: include/linux/atomic/atomic-instrumented.h:1635
#: include/linux/atomic/atomic-instrumented.h:3213
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:493
#: include/linux/atomic/atomic-arch-fallback.h:2619
msgid "Atomically sets **v** to **i** with relaxed ordering."
msgstr ""

#: ../../../driver-api/basics:96: include/linux/atomic/atomic-instrumented.h:59
msgid "Unsafe to use in noinstr code; use raw_atomic_set() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:73
#: include/linux/atomic/atomic-long.h:94 include/linux/atomic/atomic-long.h:115
#: include/linux/atomic/atomic-long.h:304
#: include/linux/atomic/atomic-long.h:492
#: include/linux/atomic/atomic-long.h:672
#: include/linux/atomic/atomic-long.h:853
#: include/linux/atomic/atomic-long.h:958
#: include/linux/atomic/atomic-long.h:1063
#: include/linux/atomic/atomic-long.h:1168 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:62
#: include/linux/atomic/atomic-instrumented.h:80
#: include/linux/atomic/atomic-instrumented.h:99
#: include/linux/atomic/atomic-instrumented.h:265
#: include/linux/atomic/atomic-instrumented.h:430
#: include/linux/atomic/atomic-instrumented.h:587
#: include/linux/atomic/atomic-instrumented.h:745
#: include/linux/atomic/atomic-instrumented.h:837
#: include/linux/atomic/atomic-instrumented.h:929
#: include/linux/atomic/atomic-instrumented.h:1021
#: include/linux/atomic/atomic-instrumented.h:1640
#: include/linux/atomic/atomic-instrumented.h:1658
#: include/linux/atomic/atomic-instrumented.h:1677
#: include/linux/atomic/atomic-instrumented.h:1843
#: include/linux/atomic/atomic-instrumented.h:2008
#: include/linux/atomic/atomic-instrumented.h:2165
#: include/linux/atomic/atomic-instrumented.h:2323
#: include/linux/atomic/atomic-instrumented.h:2415
#: include/linux/atomic/atomic-instrumented.h:2507
#: include/linux/atomic/atomic-instrumented.h:2599
#: include/linux/atomic/atomic-instrumented.h:3218
#: include/linux/atomic/atomic-instrumented.h:3236
#: include/linux/atomic/atomic-instrumented.h:3255
#: include/linux/atomic/atomic-instrumented.h:3421
#: include/linux/atomic/atomic-instrumented.h:3586
#: include/linux/atomic/atomic-instrumented.h:3743
#: include/linux/atomic/atomic-instrumented.h:3901
#: include/linux/atomic/atomic-instrumented.h:3993
#: include/linux/atomic/atomic-instrumented.h:4085
#: include/linux/atomic/atomic-instrumented.h:4177
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:498
#: include/linux/atomic/atomic-arch-fallback.h:515
#: include/linux/atomic/atomic-arch-fallback.h:541
#: include/linux/atomic/atomic-arch-fallback.h:764
#: include/linux/atomic/atomic-arch-fallback.h:986
#: include/linux/atomic/atomic-arch-fallback.h:1204
#: include/linux/atomic/atomic-arch-fallback.h:1423
#: include/linux/atomic/atomic-arch-fallback.h:1543
#: include/linux/atomic/atomic-arch-fallback.h:1667
#: include/linux/atomic/atomic-arch-fallback.h:1787
#: include/linux/atomic/atomic-arch-fallback.h:2624
#: include/linux/atomic/atomic-arch-fallback.h:2641
#: include/linux/atomic/atomic-arch-fallback.h:2667
#: include/linux/atomic/atomic-arch-fallback.h:2890
#: include/linux/atomic/atomic-arch-fallback.h:3112
#: include/linux/atomic/atomic-arch-fallback.h:3330
#: include/linux/atomic/atomic-arch-fallback.h:3549
#: include/linux/atomic/atomic-arch-fallback.h:3669
#: include/linux/atomic/atomic-arch-fallback.h:3793
#: include/linux/atomic/atomic-arch-fallback.h:3913
msgid "Nothing."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:86
#: ../../../driver-api/basics:96: include/linux/atomic/atomic-instrumented.h:72
#: include/linux/atomic/atomic-instrumented.h:1650
#: include/linux/atomic/atomic-instrumented.h:3228
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:507
#: include/linux/atomic/atomic-arch-fallback.h:2633
msgid "atomic set with release ordering"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:89
#: ../../../driver-api/basics:96: include/linux/atomic/atomic-instrumented.h:75
#: include/linux/atomic/atomic-instrumented.h:1653
#: include/linux/atomic/atomic-instrumented.h:3231
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:510
#: include/linux/atomic/atomic-arch-fallback.h:2636
msgid "Atomically sets **v** to **i** with release ordering."
msgstr ""

#: ../../../driver-api/basics:96: include/linux/atomic/atomic-instrumented.h:77
msgid "Unsafe to use in noinstr code; use raw_atomic_set_release() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:107
#: include/linux/atomic/atomic-long.h:191
#: include/linux/atomic/atomic-long.h:275 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:91
#: include/linux/atomic/atomic-instrumented.h:165
#: include/linux/atomic/atomic-instrumented.h:239
#: include/linux/atomic/atomic-instrumented.h:1669
#: include/linux/atomic/atomic-instrumented.h:1743
#: include/linux/atomic/atomic-instrumented.h:1817
#: include/linux/atomic/atomic-instrumented.h:3247
#: include/linux/atomic/atomic-instrumented.h:3321
#: include/linux/atomic/atomic-instrumented.h:3395
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:533
#: include/linux/atomic/atomic-arch-fallback.h:630
#: include/linux/atomic/atomic-arch-fallback.h:733
#: include/linux/atomic/atomic-arch-fallback.h:2659
#: include/linux/atomic/atomic-arch-fallback.h:2756
#: include/linux/atomic/atomic-arch-fallback.h:2859
msgid "atomic add with relaxed ordering"
msgstr ""

#: ../../../driver-api/basics:96: include/linux/atomic/atomic-instrumented.h:92
#: include/linux/atomic/atomic-instrumented.h:110
#: include/linux/atomic/atomic-instrumented.h:129
#: include/linux/atomic/atomic-instrumented.h:147
#: include/linux/atomic/atomic-instrumented.h:166
#: include/linux/atomic/atomic-instrumented.h:184
#: include/linux/atomic/atomic-instrumented.h:203
#: include/linux/atomic/atomic-instrumented.h:221
#: include/linux/atomic/atomic-instrumented.h:240
#: include/linux/atomic/atomic-instrumented.h:1407
#: include/linux/atomic/atomic-instrumented.h:1426
#: include/linux/atomic/atomic-instrumented.h:1444
#: include/linux/atomic/atomic-instrumented.h:1463
#: include/linux/atomic/atomic-instrumented.h:1482
#: include/linux/atomic/atomic-instrumented.h:1503
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:534
#: include/linux/atomic/atomic-arch-fallback.h:551
#: include/linux/atomic/atomic-arch-fallback.h:578
#: include/linux/atomic/atomic-arch-fallback.h:605
#: include/linux/atomic/atomic-arch-fallback.h:631
#: include/linux/atomic/atomic-arch-fallback.h:654
#: include/linux/atomic/atomic-arch-fallback.h:681
#: include/linux/atomic/atomic-arch-fallback.h:708
#: include/linux/atomic/atomic-arch-fallback.h:734
#: include/linux/atomic/atomic-arch-fallback.h:2306
#: include/linux/atomic/atomic-arch-fallback.h:2333
#: include/linux/atomic/atomic-arch-fallback.h:2360
#: include/linux/atomic/atomic-arch-fallback.h:2386
#: include/linux/atomic/atomic-arch-fallback.h:2410
#: include/linux/atomic/atomic-arch-fallback.h:2440
msgid "int value to add"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:110
#: include/linux/atomic/atomic-long.h:194
#: include/linux/atomic/atomic-long.h:278
#: include/linux/atomic/atomic-long.h:1664 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:94
#: include/linux/atomic/atomic-instrumented.h:168
#: include/linux/atomic/atomic-instrumented.h:242
#: include/linux/atomic/atomic-instrumented.h:1465
#: include/linux/atomic/atomic-instrumented.h:1672
#: include/linux/atomic/atomic-instrumented.h:1746
#: include/linux/atomic/atomic-instrumented.h:1820
#: include/linux/atomic/atomic-instrumented.h:3043
#: include/linux/atomic/atomic-instrumented.h:3250
#: include/linux/atomic/atomic-instrumented.h:3324
#: include/linux/atomic/atomic-instrumented.h:3398
#: include/linux/atomic/atomic-instrumented.h:4621
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:536
#: include/linux/atomic/atomic-arch-fallback.h:633
#: include/linux/atomic/atomic-arch-fallback.h:736
#: include/linux/atomic/atomic-arch-fallback.h:2388
#: include/linux/atomic/atomic-arch-fallback.h:2662
#: include/linux/atomic/atomic-arch-fallback.h:2759
#: include/linux/atomic/atomic-arch-fallback.h:2862
#: include/linux/atomic/atomic-arch-fallback.h:4514
msgid "Atomically updates **v** to (**v** + **i**) with relaxed ordering."
msgstr ""

#: ../../../driver-api/basics:96: include/linux/atomic/atomic-instrumented.h:96
msgid "Unsafe to use in noinstr code; use raw_atomic_add() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:128
#: include/linux/atomic/atomic-long.h:212 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:109
#: include/linux/atomic/atomic-instrumented.h:183
#: include/linux/atomic/atomic-instrumented.h:1687
#: include/linux/atomic/atomic-instrumented.h:1761
#: include/linux/atomic/atomic-instrumented.h:3265
#: include/linux/atomic/atomic-instrumented.h:3339
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:550
#: include/linux/atomic/atomic-arch-fallback.h:653
#: include/linux/atomic/atomic-arch-fallback.h:2676
#: include/linux/atomic/atomic-arch-fallback.h:2779
msgid "atomic add with full ordering"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:131
#: include/linux/atomic/atomic-long.h:215
#: include/linux/atomic/atomic-long.h:1601 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:112
#: include/linux/atomic/atomic-instrumented.h:186
#: include/linux/atomic/atomic-instrumented.h:1409
#: include/linux/atomic/atomic-instrumented.h:1690
#: include/linux/atomic/atomic-instrumented.h:1764
#: include/linux/atomic/atomic-instrumented.h:2987
#: include/linux/atomic/atomic-instrumented.h:3268
#: include/linux/atomic/atomic-instrumented.h:3342
#: include/linux/atomic/atomic-instrumented.h:4565
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:553
#: include/linux/atomic/atomic-arch-fallback.h:656
#: include/linux/atomic/atomic-arch-fallback.h:2308
#: include/linux/atomic/atomic-arch-fallback.h:2679
#: include/linux/atomic/atomic-arch-fallback.h:2782
#: include/linux/atomic/atomic-arch-fallback.h:4434
msgid "Atomically updates **v** to (**v** + **i**) with full ordering."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:114
msgid "Unsafe to use in noinstr code; use raw_atomic_add_return() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:136
#: include/linux/atomic/atomic-long.h:157
#: include/linux/atomic/atomic-long.h:178
#: include/linux/atomic/atomic-long.h:199
#: include/linux/atomic/atomic-long.h:325
#: include/linux/atomic/atomic-long.h:346
#: include/linux/atomic/atomic-long.h:367
#: include/linux/atomic/atomic-long.h:388
#: include/linux/atomic/atomic-long.h:512
#: include/linux/atomic/atomic-long.h:532
#: include/linux/atomic/atomic-long.h:552
#: include/linux/atomic/atomic-long.h:572
#: include/linux/atomic/atomic-long.h:692
#: include/linux/atomic/atomic-long.h:712
#: include/linux/atomic/atomic-long.h:732
#: include/linux/atomic/atomic-long.h:752 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:117
#: include/linux/atomic/atomic-instrumented.h:136
#: include/linux/atomic/atomic-instrumented.h:154
#: include/linux/atomic/atomic-instrumented.h:173
#: include/linux/atomic/atomic-instrumented.h:283
#: include/linux/atomic/atomic-instrumented.h:302
#: include/linux/atomic/atomic-instrumented.h:320
#: include/linux/atomic/atomic-instrumented.h:339
#: include/linux/atomic/atomic-instrumented.h:447
#: include/linux/atomic/atomic-instrumented.h:465
#: include/linux/atomic/atomic-instrumented.h:482
#: include/linux/atomic/atomic-instrumented.h:500
#: include/linux/atomic/atomic-instrumented.h:604
#: include/linux/atomic/atomic-instrumented.h:622
#: include/linux/atomic/atomic-instrumented.h:639
#: include/linux/atomic/atomic-instrumented.h:657
#: include/linux/atomic/atomic-instrumented.h:1695
#: include/linux/atomic/atomic-instrumented.h:1714
#: include/linux/atomic/atomic-instrumented.h:1732
#: include/linux/atomic/atomic-instrumented.h:1751
#: include/linux/atomic/atomic-instrumented.h:1861
#: include/linux/atomic/atomic-instrumented.h:1880
#: include/linux/atomic/atomic-instrumented.h:1898
#: include/linux/atomic/atomic-instrumented.h:1917
#: include/linux/atomic/atomic-instrumented.h:2025
#: include/linux/atomic/atomic-instrumented.h:2043
#: include/linux/atomic/atomic-instrumented.h:2060
#: include/linux/atomic/atomic-instrumented.h:2078
#: include/linux/atomic/atomic-instrumented.h:2182
#: include/linux/atomic/atomic-instrumented.h:2200
#: include/linux/atomic/atomic-instrumented.h:2217
#: include/linux/atomic/atomic-instrumented.h:2235
#: include/linux/atomic/atomic-instrumented.h:3273
#: include/linux/atomic/atomic-instrumented.h:3292
#: include/linux/atomic/atomic-instrumented.h:3310
#: include/linux/atomic/atomic-instrumented.h:3329
#: include/linux/atomic/atomic-instrumented.h:3439
#: include/linux/atomic/atomic-instrumented.h:3458
#: include/linux/atomic/atomic-instrumented.h:3476
#: include/linux/atomic/atomic-instrumented.h:3495
#: include/linux/atomic/atomic-instrumented.h:3603
#: include/linux/atomic/atomic-instrumented.h:3621
#: include/linux/atomic/atomic-instrumented.h:3638
#: include/linux/atomic/atomic-instrumented.h:3656
#: include/linux/atomic/atomic-instrumented.h:3760
#: include/linux/atomic/atomic-instrumented.h:3778
#: include/linux/atomic/atomic-instrumented.h:3795
#: include/linux/atomic/atomic-instrumented.h:3813
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:558
#: include/linux/atomic/atomic-arch-fallback.h:585
#: include/linux/atomic/atomic-arch-fallback.h:612
#: include/linux/atomic/atomic-arch-fallback.h:638
#: include/linux/atomic/atomic-arch-fallback.h:781
#: include/linux/atomic/atomic-arch-fallback.h:808
#: include/linux/atomic/atomic-arch-fallback.h:835
#: include/linux/atomic/atomic-arch-fallback.h:861
#: include/linux/atomic/atomic-arch-fallback.h:1006
#: include/linux/atomic/atomic-arch-fallback.h:1032
#: include/linux/atomic/atomic-arch-fallback.h:1058
#: include/linux/atomic/atomic-arch-fallback.h:1083
#: include/linux/atomic/atomic-arch-fallback.h:1224
#: include/linux/atomic/atomic-arch-fallback.h:1250
#: include/linux/atomic/atomic-arch-fallback.h:1276
#: include/linux/atomic/atomic-arch-fallback.h:1301
#: include/linux/atomic/atomic-arch-fallback.h:2684
#: include/linux/atomic/atomic-arch-fallback.h:2711
#: include/linux/atomic/atomic-arch-fallback.h:2738
#: include/linux/atomic/atomic-arch-fallback.h:2764
#: include/linux/atomic/atomic-arch-fallback.h:2907
#: include/linux/atomic/atomic-arch-fallback.h:2934
#: include/linux/atomic/atomic-arch-fallback.h:2961
#: include/linux/atomic/atomic-arch-fallback.h:2987
#: include/linux/atomic/atomic-arch-fallback.h:3132
#: include/linux/atomic/atomic-arch-fallback.h:3158
#: include/linux/atomic/atomic-arch-fallback.h:3184
#: include/linux/atomic/atomic-arch-fallback.h:3209
#: include/linux/atomic/atomic-arch-fallback.h:3350
#: include/linux/atomic/atomic-arch-fallback.h:3376
#: include/linux/atomic/atomic-arch-fallback.h:3402
#: include/linux/atomic/atomic-arch-fallback.h:3427
msgid "The updated value of **v**."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:149
#: include/linux/atomic/atomic-long.h:233 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:128
#: include/linux/atomic/atomic-instrumented.h:202
#: include/linux/atomic/atomic-instrumented.h:1706
#: include/linux/atomic/atomic-instrumented.h:1780
#: include/linux/atomic/atomic-instrumented.h:3284
#: include/linux/atomic/atomic-instrumented.h:3358
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:577
#: include/linux/atomic/atomic-arch-fallback.h:680
#: include/linux/atomic/atomic-arch-fallback.h:2703
#: include/linux/atomic/atomic-arch-fallback.h:2806
msgid "atomic add with acquire ordering"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:152
#: include/linux/atomic/atomic-long.h:236
#: include/linux/atomic/atomic-long.h:1622 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:131
#: include/linux/atomic/atomic-instrumented.h:205
#: include/linux/atomic/atomic-instrumented.h:1428
#: include/linux/atomic/atomic-instrumented.h:1709
#: include/linux/atomic/atomic-instrumented.h:1783
#: include/linux/atomic/atomic-instrumented.h:3006
#: include/linux/atomic/atomic-instrumented.h:3287
#: include/linux/atomic/atomic-instrumented.h:3361
#: include/linux/atomic/atomic-instrumented.h:4584
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:580
#: include/linux/atomic/atomic-arch-fallback.h:683
#: include/linux/atomic/atomic-arch-fallback.h:2335
#: include/linux/atomic/atomic-arch-fallback.h:2706
#: include/linux/atomic/atomic-arch-fallback.h:2809
#: include/linux/atomic/atomic-arch-fallback.h:4461
msgid "Atomically updates **v** to (**v** + **i**) with acquire ordering."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:133
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_add_return_acquire() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:170
#: include/linux/atomic/atomic-long.h:254 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:146
#: include/linux/atomic/atomic-instrumented.h:220
#: include/linux/atomic/atomic-instrumented.h:1724
#: include/linux/atomic/atomic-instrumented.h:1798
#: include/linux/atomic/atomic-instrumented.h:3302
#: include/linux/atomic/atomic-instrumented.h:3376
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:604
#: include/linux/atomic/atomic-arch-fallback.h:707
#: include/linux/atomic/atomic-arch-fallback.h:2730
#: include/linux/atomic/atomic-arch-fallback.h:2833
msgid "atomic add with release ordering"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:173
#: include/linux/atomic/atomic-long.h:257
#: include/linux/atomic/atomic-long.h:1643 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:149
#: include/linux/atomic/atomic-instrumented.h:223
#: include/linux/atomic/atomic-instrumented.h:1446
#: include/linux/atomic/atomic-instrumented.h:1727
#: include/linux/atomic/atomic-instrumented.h:1801
#: include/linux/atomic/atomic-instrumented.h:3024
#: include/linux/atomic/atomic-instrumented.h:3305
#: include/linux/atomic/atomic-instrumented.h:3379
#: include/linux/atomic/atomic-instrumented.h:4602
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:607
#: include/linux/atomic/atomic-arch-fallback.h:710
#: include/linux/atomic/atomic-arch-fallback.h:2362
#: include/linux/atomic/atomic-arch-fallback.h:2733
#: include/linux/atomic/atomic-arch-fallback.h:2836
#: include/linux/atomic/atomic-arch-fallback.h:4488
msgid "Atomically updates **v** to (**v** + **i**) with release ordering."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:151
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_add_return_release() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:170
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_add_return_relaxed() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:188
msgid "Unsafe to use in noinstr code; use raw_atomic_fetch_add() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:220
#: include/linux/atomic/atomic-long.h:241
#: include/linux/atomic/atomic-long.h:262
#: include/linux/atomic/atomic-long.h:283
#: include/linux/atomic/atomic-long.h:409
#: include/linux/atomic/atomic-long.h:430
#: include/linux/atomic/atomic-long.h:451
#: include/linux/atomic/atomic-long.h:472
#: include/linux/atomic/atomic-long.h:592
#: include/linux/atomic/atomic-long.h:612
#: include/linux/atomic/atomic-long.h:632
#: include/linux/atomic/atomic-long.h:652
#: include/linux/atomic/atomic-long.h:772
#: include/linux/atomic/atomic-long.h:792
#: include/linux/atomic/atomic-long.h:812
#: include/linux/atomic/atomic-long.h:832
#: include/linux/atomic/atomic-long.h:874
#: include/linux/atomic/atomic-long.h:895
#: include/linux/atomic/atomic-long.h:916
#: include/linux/atomic/atomic-long.h:937
#: include/linux/atomic/atomic-long.h:979
#: include/linux/atomic/atomic-long.h:1000
#: include/linux/atomic/atomic-long.h:1021
#: include/linux/atomic/atomic-long.h:1042
#: include/linux/atomic/atomic-long.h:1084
#: include/linux/atomic/atomic-long.h:1105
#: include/linux/atomic/atomic-long.h:1126
#: include/linux/atomic/atomic-long.h:1147
#: include/linux/atomic/atomic-long.h:1189
#: include/linux/atomic/atomic-long.h:1210
#: include/linux/atomic/atomic-long.h:1231
#: include/linux/atomic/atomic-long.h:1252
#: include/linux/atomic/atomic-long.h:1273
#: include/linux/atomic/atomic-long.h:1294
#: include/linux/atomic/atomic-long.h:1315
#: include/linux/atomic/atomic-long.h:1336
#: include/linux/atomic/atomic-long.h:1359
#: include/linux/atomic/atomic-long.h:1382
#: include/linux/atomic/atomic-long.h:1405
#: include/linux/atomic/atomic-long.h:1428
#: include/linux/atomic/atomic-long.h:1692 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:191
#: include/linux/atomic/atomic-instrumented.h:210
#: include/linux/atomic/atomic-instrumented.h:228
#: include/linux/atomic/atomic-instrumented.h:247
#: include/linux/atomic/atomic-instrumented.h:357
#: include/linux/atomic/atomic-instrumented.h:376
#: include/linux/atomic/atomic-instrumented.h:394
#: include/linux/atomic/atomic-instrumented.h:413
#: include/linux/atomic/atomic-instrumented.h:517
#: include/linux/atomic/atomic-instrumented.h:535
#: include/linux/atomic/atomic-instrumented.h:552
#: include/linux/atomic/atomic-instrumented.h:570
#: include/linux/atomic/atomic-instrumented.h:674
#: include/linux/atomic/atomic-instrumented.h:692
#: include/linux/atomic/atomic-instrumented.h:709
#: include/linux/atomic/atomic-instrumented.h:727
#: include/linux/atomic/atomic-instrumented.h:763
#: include/linux/atomic/atomic-instrumented.h:782
#: include/linux/atomic/atomic-instrumented.h:800
#: include/linux/atomic/atomic-instrumented.h:819
#: include/linux/atomic/atomic-instrumented.h:855
#: include/linux/atomic/atomic-instrumented.h:874
#: include/linux/atomic/atomic-instrumented.h:892
#: include/linux/atomic/atomic-instrumented.h:911
#: include/linux/atomic/atomic-instrumented.h:947
#: include/linux/atomic/atomic-instrumented.h:966
#: include/linux/atomic/atomic-instrumented.h:984
#: include/linux/atomic/atomic-instrumented.h:1003
#: include/linux/atomic/atomic-instrumented.h:1039
#: include/linux/atomic/atomic-instrumented.h:1058
#: include/linux/atomic/atomic-instrumented.h:1076
#: include/linux/atomic/atomic-instrumented.h:1095
#: include/linux/atomic/atomic-instrumented.h:1113
#: include/linux/atomic/atomic-instrumented.h:1132
#: include/linux/atomic/atomic-instrumented.h:1150
#: include/linux/atomic/atomic-instrumented.h:1169
#: include/linux/atomic/atomic-instrumented.h:1189
#: include/linux/atomic/atomic-instrumented.h:1210
#: include/linux/atomic/atomic-instrumented.h:1230
#: include/linux/atomic/atomic-instrumented.h:1251
#: include/linux/atomic/atomic-instrumented.h:1490
#: include/linux/atomic/atomic-instrumented.h:1769
#: include/linux/atomic/atomic-instrumented.h:1788
#: include/linux/atomic/atomic-instrumented.h:1806
#: include/linux/atomic/atomic-instrumented.h:1825
#: include/linux/atomic/atomic-instrumented.h:1935
#: include/linux/atomic/atomic-instrumented.h:1954
#: include/linux/atomic/atomic-instrumented.h:1972
#: include/linux/atomic/atomic-instrumented.h:1991
#: include/linux/atomic/atomic-instrumented.h:2095
#: include/linux/atomic/atomic-instrumented.h:2113
#: include/linux/atomic/atomic-instrumented.h:2130
#: include/linux/atomic/atomic-instrumented.h:2148
#: include/linux/atomic/atomic-instrumented.h:2252
#: include/linux/atomic/atomic-instrumented.h:2270
#: include/linux/atomic/atomic-instrumented.h:2287
#: include/linux/atomic/atomic-instrumented.h:2305
#: include/linux/atomic/atomic-instrumented.h:2341
#: include/linux/atomic/atomic-instrumented.h:2360
#: include/linux/atomic/atomic-instrumented.h:2378
#: include/linux/atomic/atomic-instrumented.h:2397
#: include/linux/atomic/atomic-instrumented.h:2433
#: include/linux/atomic/atomic-instrumented.h:2452
#: include/linux/atomic/atomic-instrumented.h:2470
#: include/linux/atomic/atomic-instrumented.h:2489
#: include/linux/atomic/atomic-instrumented.h:2525
#: include/linux/atomic/atomic-instrumented.h:2544
#: include/linux/atomic/atomic-instrumented.h:2562
#: include/linux/atomic/atomic-instrumented.h:2581
#: include/linux/atomic/atomic-instrumented.h:2617
#: include/linux/atomic/atomic-instrumented.h:2636
#: include/linux/atomic/atomic-instrumented.h:2654
#: include/linux/atomic/atomic-instrumented.h:2673
#: include/linux/atomic/atomic-instrumented.h:2691
#: include/linux/atomic/atomic-instrumented.h:2710
#: include/linux/atomic/atomic-instrumented.h:2728
#: include/linux/atomic/atomic-instrumented.h:2747
#: include/linux/atomic/atomic-instrumented.h:2767
#: include/linux/atomic/atomic-instrumented.h:2788
#: include/linux/atomic/atomic-instrumented.h:2808
#: include/linux/atomic/atomic-instrumented.h:2829
#: include/linux/atomic/atomic-instrumented.h:3068
#: include/linux/atomic/atomic-instrumented.h:3347
#: include/linux/atomic/atomic-instrumented.h:3366
#: include/linux/atomic/atomic-instrumented.h:3384
#: include/linux/atomic/atomic-instrumented.h:3403
#: include/linux/atomic/atomic-instrumented.h:3513
#: include/linux/atomic/atomic-instrumented.h:3532
#: include/linux/atomic/atomic-instrumented.h:3550
#: include/linux/atomic/atomic-instrumented.h:3569
#: include/linux/atomic/atomic-instrumented.h:3673
#: include/linux/atomic/atomic-instrumented.h:3691
#: include/linux/atomic/atomic-instrumented.h:3708
#: include/linux/atomic/atomic-instrumented.h:3726
#: include/linux/atomic/atomic-instrumented.h:3830
#: include/linux/atomic/atomic-instrumented.h:3848
#: include/linux/atomic/atomic-instrumented.h:3865
#: include/linux/atomic/atomic-instrumented.h:3883
#: include/linux/atomic/atomic-instrumented.h:3919
#: include/linux/atomic/atomic-instrumented.h:3938
#: include/linux/atomic/atomic-instrumented.h:3956
#: include/linux/atomic/atomic-instrumented.h:3975
#: include/linux/atomic/atomic-instrumented.h:4011
#: include/linux/atomic/atomic-instrumented.h:4030
#: include/linux/atomic/atomic-instrumented.h:4048
#: include/linux/atomic/atomic-instrumented.h:4067
#: include/linux/atomic/atomic-instrumented.h:4103
#: include/linux/atomic/atomic-instrumented.h:4122
#: include/linux/atomic/atomic-instrumented.h:4140
#: include/linux/atomic/atomic-instrumented.h:4159
#: include/linux/atomic/atomic-instrumented.h:4195
#: include/linux/atomic/atomic-instrumented.h:4214
#: include/linux/atomic/atomic-instrumented.h:4232
#: include/linux/atomic/atomic-instrumented.h:4251
#: include/linux/atomic/atomic-instrumented.h:4269
#: include/linux/atomic/atomic-instrumented.h:4288
#: include/linux/atomic/atomic-instrumented.h:4306
#: include/linux/atomic/atomic-instrumented.h:4325
#: include/linux/atomic/atomic-instrumented.h:4345
#: include/linux/atomic/atomic-instrumented.h:4366
#: include/linux/atomic/atomic-instrumented.h:4386
#: include/linux/atomic/atomic-instrumented.h:4407
#: include/linux/atomic/atomic-instrumented.h:4646
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:661
#: include/linux/atomic/atomic-arch-fallback.h:688
#: include/linux/atomic/atomic-arch-fallback.h:715
#: include/linux/atomic/atomic-arch-fallback.h:741
#: include/linux/atomic/atomic-arch-fallback.h:884
#: include/linux/atomic/atomic-arch-fallback.h:911
#: include/linux/atomic/atomic-arch-fallback.h:938
#: include/linux/atomic/atomic-arch-fallback.h:964
#: include/linux/atomic/atomic-arch-fallback.h:1105
#: include/linux/atomic/atomic-arch-fallback.h:1131
#: include/linux/atomic/atomic-arch-fallback.h:1157
#: include/linux/atomic/atomic-arch-fallback.h:1182
#: include/linux/atomic/atomic-arch-fallback.h:1323
#: include/linux/atomic/atomic-arch-fallback.h:1349
#: include/linux/atomic/atomic-arch-fallback.h:1375
#: include/linux/atomic/atomic-arch-fallback.h:1400
#: include/linux/atomic/atomic-arch-fallback.h:1440
#: include/linux/atomic/atomic-arch-fallback.h:1467
#: include/linux/atomic/atomic-arch-fallback.h:1494
#: include/linux/atomic/atomic-arch-fallback.h:1520
#: include/linux/atomic/atomic-arch-fallback.h:1564
#: include/linux/atomic/atomic-arch-fallback.h:1591
#: include/linux/atomic/atomic-arch-fallback.h:1618
#: include/linux/atomic/atomic-arch-fallback.h:1644
#: include/linux/atomic/atomic-arch-fallback.h:1684
#: include/linux/atomic/atomic-arch-fallback.h:1711
#: include/linux/atomic/atomic-arch-fallback.h:1738
#: include/linux/atomic/atomic-arch-fallback.h:1764
#: include/linux/atomic/atomic-arch-fallback.h:1804
#: include/linux/atomic/atomic-arch-fallback.h:1831
#: include/linux/atomic/atomic-arch-fallback.h:1858
#: include/linux/atomic/atomic-arch-fallback.h:1884
#: include/linux/atomic/atomic-arch-fallback.h:1907
#: include/linux/atomic/atomic-arch-fallback.h:1934
#: include/linux/atomic/atomic-arch-fallback.h:1961
#: include/linux/atomic/atomic-arch-fallback.h:1987
#: include/linux/atomic/atomic-arch-fallback.h:2012
#: include/linux/atomic/atomic-arch-fallback.h:2041
#: include/linux/atomic/atomic-arch-fallback.h:2070
#: include/linux/atomic/atomic-arch-fallback.h:2098
#: include/linux/atomic/atomic-arch-fallback.h:2418
#: include/linux/atomic/atomic-arch-fallback.h:2787
#: include/linux/atomic/atomic-arch-fallback.h:2814
#: include/linux/atomic/atomic-arch-fallback.h:2841
#: include/linux/atomic/atomic-arch-fallback.h:2867
#: include/linux/atomic/atomic-arch-fallback.h:3010
#: include/linux/atomic/atomic-arch-fallback.h:3037
#: include/linux/atomic/atomic-arch-fallback.h:3064
#: include/linux/atomic/atomic-arch-fallback.h:3090
#: include/linux/atomic/atomic-arch-fallback.h:3231
#: include/linux/atomic/atomic-arch-fallback.h:3257
#: include/linux/atomic/atomic-arch-fallback.h:3283
#: include/linux/atomic/atomic-arch-fallback.h:3308
#: include/linux/atomic/atomic-arch-fallback.h:3449
#: include/linux/atomic/atomic-arch-fallback.h:3475
#: include/linux/atomic/atomic-arch-fallback.h:3501
#: include/linux/atomic/atomic-arch-fallback.h:3526
#: include/linux/atomic/atomic-arch-fallback.h:3566
#: include/linux/atomic/atomic-arch-fallback.h:3593
#: include/linux/atomic/atomic-arch-fallback.h:3620
#: include/linux/atomic/atomic-arch-fallback.h:3646
#: include/linux/atomic/atomic-arch-fallback.h:3690
#: include/linux/atomic/atomic-arch-fallback.h:3717
#: include/linux/atomic/atomic-arch-fallback.h:3744
#: include/linux/atomic/atomic-arch-fallback.h:3770
#: include/linux/atomic/atomic-arch-fallback.h:3810
#: include/linux/atomic/atomic-arch-fallback.h:3837
#: include/linux/atomic/atomic-arch-fallback.h:3864
#: include/linux/atomic/atomic-arch-fallback.h:3890
#: include/linux/atomic/atomic-arch-fallback.h:3930
#: include/linux/atomic/atomic-arch-fallback.h:3957
#: include/linux/atomic/atomic-arch-fallback.h:3984
#: include/linux/atomic/atomic-arch-fallback.h:4010
#: include/linux/atomic/atomic-arch-fallback.h:4033
#: include/linux/atomic/atomic-arch-fallback.h:4060
#: include/linux/atomic/atomic-arch-fallback.h:4087
#: include/linux/atomic/atomic-arch-fallback.h:4113
#: include/linux/atomic/atomic-arch-fallback.h:4138
#: include/linux/atomic/atomic-arch-fallback.h:4167
#: include/linux/atomic/atomic-arch-fallback.h:4196
#: include/linux/atomic/atomic-arch-fallback.h:4224
#: include/linux/atomic/atomic-arch-fallback.h:4544
msgid "The original value of **v**."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:207
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_fetch_add_acquire() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:225
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_fetch_add_release() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:244
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_fetch_add_relaxed() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:296
#: include/linux/atomic/atomic-long.h:380
#: include/linux/atomic/atomic-long.h:464 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:257
#: include/linux/atomic/atomic-instrumented.h:331
#: include/linux/atomic/atomic-instrumented.h:405
#: include/linux/atomic/atomic-instrumented.h:1835
#: include/linux/atomic/atomic-instrumented.h:1909
#: include/linux/atomic/atomic-instrumented.h:1983
#: include/linux/atomic/atomic-instrumented.h:3413
#: include/linux/atomic/atomic-instrumented.h:3487
#: include/linux/atomic/atomic-instrumented.h:3561
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:756
#: include/linux/atomic/atomic-arch-fallback.h:853
#: include/linux/atomic/atomic-arch-fallback.h:956
#: include/linux/atomic/atomic-arch-fallback.h:2882
#: include/linux/atomic/atomic-arch-fallback.h:2979
#: include/linux/atomic/atomic-arch-fallback.h:3082
msgid "atomic subtract with relaxed ordering"
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:258
#: include/linux/atomic/atomic-instrumented.h:276
#: include/linux/atomic/atomic-instrumented.h:295
#: include/linux/atomic/atomic-instrumented.h:313
#: include/linux/atomic/atomic-instrumented.h:332
#: include/linux/atomic/atomic-instrumented.h:350
#: include/linux/atomic/atomic-instrumented.h:369
#: include/linux/atomic/atomic-instrumented.h:387
#: include/linux/atomic/atomic-instrumented.h:406
#: include/linux/atomic/atomic-instrumented.h:1352
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:757
#: include/linux/atomic/atomic-arch-fallback.h:774
#: include/linux/atomic/atomic-arch-fallback.h:801
#: include/linux/atomic/atomic-arch-fallback.h:828
#: include/linux/atomic/atomic-arch-fallback.h:854
#: include/linux/atomic/atomic-arch-fallback.h:877
#: include/linux/atomic/atomic-arch-fallback.h:904
#: include/linux/atomic/atomic-arch-fallback.h:931
#: include/linux/atomic/atomic-arch-fallback.h:957
#: include/linux/atomic/atomic-arch-fallback.h:2245
msgid "int value to subtract"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:299
#: include/linux/atomic/atomic-long.h:383
#: include/linux/atomic/atomic-long.h:467 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:260
#: include/linux/atomic/atomic-instrumented.h:334
#: include/linux/atomic/atomic-instrumented.h:408
#: include/linux/atomic/atomic-instrumented.h:1838
#: include/linux/atomic/atomic-instrumented.h:1912
#: include/linux/atomic/atomic-instrumented.h:1986
#: include/linux/atomic/atomic-instrumented.h:3416
#: include/linux/atomic/atomic-instrumented.h:3490
#: include/linux/atomic/atomic-instrumented.h:3564
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:759
#: include/linux/atomic/atomic-arch-fallback.h:856
#: include/linux/atomic/atomic-arch-fallback.h:959
#: include/linux/atomic/atomic-arch-fallback.h:2885
#: include/linux/atomic/atomic-arch-fallback.h:2982
#: include/linux/atomic/atomic-arch-fallback.h:3085
msgid "Atomically updates **v** to (**v** - **i**) with relaxed ordering."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:262
msgid "Unsafe to use in noinstr code; use raw_atomic_sub() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:317
#: include/linux/atomic/atomic-long.h:401 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:275
#: include/linux/atomic/atomic-instrumented.h:349
#: include/linux/atomic/atomic-instrumented.h:1853
#: include/linux/atomic/atomic-instrumented.h:1927
#: include/linux/atomic/atomic-instrumented.h:3431
#: include/linux/atomic/atomic-instrumented.h:3505
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:773
#: include/linux/atomic/atomic-arch-fallback.h:876
#: include/linux/atomic/atomic-arch-fallback.h:2899
#: include/linux/atomic/atomic-arch-fallback.h:3002
msgid "atomic subtract with full ordering"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:320
#: include/linux/atomic/atomic-long.h:404
#: include/linux/atomic/atomic-long.h:1540 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:278
#: include/linux/atomic/atomic-instrumented.h:352
#: include/linux/atomic/atomic-instrumented.h:1354
#: include/linux/atomic/atomic-instrumented.h:1856
#: include/linux/atomic/atomic-instrumented.h:1930
#: include/linux/atomic/atomic-instrumented.h:2932
#: include/linux/atomic/atomic-instrumented.h:3434
#: include/linux/atomic/atomic-instrumented.h:3508
#: include/linux/atomic/atomic-instrumented.h:4510
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:776
#: include/linux/atomic/atomic-arch-fallback.h:879
#: include/linux/atomic/atomic-arch-fallback.h:2247
#: include/linux/atomic/atomic-arch-fallback.h:2902
#: include/linux/atomic/atomic-arch-fallback.h:3005
#: include/linux/atomic/atomic-arch-fallback.h:4373
msgid "Atomically updates **v** to (**v** - **i**) with full ordering."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:280
msgid "Unsafe to use in noinstr code; use raw_atomic_sub_return() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:338
#: include/linux/atomic/atomic-long.h:422 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:294
#: include/linux/atomic/atomic-instrumented.h:368
#: include/linux/atomic/atomic-instrumented.h:1872
#: include/linux/atomic/atomic-instrumented.h:1946
#: include/linux/atomic/atomic-instrumented.h:3450
#: include/linux/atomic/atomic-instrumented.h:3524
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:800
#: include/linux/atomic/atomic-arch-fallback.h:903
#: include/linux/atomic/atomic-arch-fallback.h:2926
#: include/linux/atomic/atomic-arch-fallback.h:3029
msgid "atomic subtract with acquire ordering"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:341
#: include/linux/atomic/atomic-long.h:425 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:297
#: include/linux/atomic/atomic-instrumented.h:371
#: include/linux/atomic/atomic-instrumented.h:1875
#: include/linux/atomic/atomic-instrumented.h:1949
#: include/linux/atomic/atomic-instrumented.h:3453
#: include/linux/atomic/atomic-instrumented.h:3527
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:803
#: include/linux/atomic/atomic-arch-fallback.h:906
#: include/linux/atomic/atomic-arch-fallback.h:2929
#: include/linux/atomic/atomic-arch-fallback.h:3032
msgid "Atomically updates **v** to (**v** - **i**) with acquire ordering."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:299
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_sub_return_acquire() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:359
#: include/linux/atomic/atomic-long.h:443 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:312
#: include/linux/atomic/atomic-instrumented.h:386
#: include/linux/atomic/atomic-instrumented.h:1890
#: include/linux/atomic/atomic-instrumented.h:1964
#: include/linux/atomic/atomic-instrumented.h:3468
#: include/linux/atomic/atomic-instrumented.h:3542
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:827
#: include/linux/atomic/atomic-arch-fallback.h:930
#: include/linux/atomic/atomic-arch-fallback.h:2953
#: include/linux/atomic/atomic-arch-fallback.h:3056
msgid "atomic subtract with release ordering"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:362
#: include/linux/atomic/atomic-long.h:446 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:315
#: include/linux/atomic/atomic-instrumented.h:389
#: include/linux/atomic/atomic-instrumented.h:1893
#: include/linux/atomic/atomic-instrumented.h:1967
#: include/linux/atomic/atomic-instrumented.h:3471
#: include/linux/atomic/atomic-instrumented.h:3545
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:830
#: include/linux/atomic/atomic-arch-fallback.h:933
#: include/linux/atomic/atomic-arch-fallback.h:2956
#: include/linux/atomic/atomic-arch-fallback.h:3059
msgid "Atomically updates **v** to (**v** - **i**) with release ordering."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:317
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_sub_return_release() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:336
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_sub_return_relaxed() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:354
msgid "Unsafe to use in noinstr code; use raw_atomic_fetch_sub() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:373
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_fetch_sub_acquire() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:391
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_fetch_sub_release() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:410
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_fetch_sub_relaxed() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:485
#: include/linux/atomic/atomic-long.h:565
#: include/linux/atomic/atomic-long.h:645 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:423
#: include/linux/atomic/atomic-instrumented.h:493
#: include/linux/atomic/atomic-instrumented.h:563
#: include/linux/atomic/atomic-instrumented.h:2001
#: include/linux/atomic/atomic-instrumented.h:2071
#: include/linux/atomic/atomic-instrumented.h:2141
#: include/linux/atomic/atomic-instrumented.h:3579
#: include/linux/atomic/atomic-instrumented.h:3649
#: include/linux/atomic/atomic-instrumented.h:3719
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:979
#: include/linux/atomic/atomic-arch-fallback.h:1076
#: include/linux/atomic/atomic-arch-fallback.h:1175
#: include/linux/atomic/atomic-arch-fallback.h:3105
#: include/linux/atomic/atomic-arch-fallback.h:3202
#: include/linux/atomic/atomic-arch-fallback.h:3301
msgid "atomic increment with relaxed ordering"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:487
#: include/linux/atomic/atomic-long.h:567
#: include/linux/atomic/atomic-long.h:647 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:425
#: include/linux/atomic/atomic-instrumented.h:495
#: include/linux/atomic/atomic-instrumented.h:565
#: include/linux/atomic/atomic-instrumented.h:2003
#: include/linux/atomic/atomic-instrumented.h:2073
#: include/linux/atomic/atomic-instrumented.h:2143
#: include/linux/atomic/atomic-instrumented.h:3581
#: include/linux/atomic/atomic-instrumented.h:3651
#: include/linux/atomic/atomic-instrumented.h:3721
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:981
#: include/linux/atomic/atomic-arch-fallback.h:1078
#: include/linux/atomic/atomic-arch-fallback.h:1177
#: include/linux/atomic/atomic-arch-fallback.h:3107
#: include/linux/atomic/atomic-arch-fallback.h:3204
#: include/linux/atomic/atomic-arch-fallback.h:3303
msgid "Atomically updates **v** to (**v** + 1) with relaxed ordering."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:427
msgid "Unsafe to use in noinstr code; use raw_atomic_inc() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:505
#: include/linux/atomic/atomic-long.h:585 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:440
#: include/linux/atomic/atomic-instrumented.h:510
#: include/linux/atomic/atomic-instrumented.h:2018
#: include/linux/atomic/atomic-instrumented.h:2088
#: include/linux/atomic/atomic-instrumented.h:3596
#: include/linux/atomic/atomic-instrumented.h:3666
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:999
#: include/linux/atomic/atomic-arch-fallback.h:1098
#: include/linux/atomic/atomic-arch-fallback.h:3125
#: include/linux/atomic/atomic-arch-fallback.h:3224
msgid "atomic increment with full ordering"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:507
#: include/linux/atomic/atomic-long.h:587
#: include/linux/atomic/atomic-long.h:1580 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:442
#: include/linux/atomic/atomic-instrumented.h:512
#: include/linux/atomic/atomic-instrumented.h:1390
#: include/linux/atomic/atomic-instrumented.h:2020
#: include/linux/atomic/atomic-instrumented.h:2090
#: include/linux/atomic/atomic-instrumented.h:2968
#: include/linux/atomic/atomic-instrumented.h:3598
#: include/linux/atomic/atomic-instrumented.h:3668
#: include/linux/atomic/atomic-instrumented.h:4546
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1001
#: include/linux/atomic/atomic-arch-fallback.h:1100
#: include/linux/atomic/atomic-arch-fallback.h:2287
#: include/linux/atomic/atomic-arch-fallback.h:3127
#: include/linux/atomic/atomic-arch-fallback.h:3226
#: include/linux/atomic/atomic-arch-fallback.h:4413
msgid "Atomically updates **v** to (**v** + 1) with full ordering."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:444
msgid "Unsafe to use in noinstr code; use raw_atomic_inc_return() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:525
#: include/linux/atomic/atomic-long.h:605 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:458
#: include/linux/atomic/atomic-instrumented.h:528
#: include/linux/atomic/atomic-instrumented.h:2036
#: include/linux/atomic/atomic-instrumented.h:2106
#: include/linux/atomic/atomic-instrumented.h:3614
#: include/linux/atomic/atomic-instrumented.h:3684
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1025
#: include/linux/atomic/atomic-arch-fallback.h:1124
#: include/linux/atomic/atomic-arch-fallback.h:3151
#: include/linux/atomic/atomic-arch-fallback.h:3250
msgid "atomic increment with acquire ordering"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:527
#: include/linux/atomic/atomic-long.h:607 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:460
#: include/linux/atomic/atomic-instrumented.h:530
#: include/linux/atomic/atomic-instrumented.h:2038
#: include/linux/atomic/atomic-instrumented.h:2108
#: include/linux/atomic/atomic-instrumented.h:3616
#: include/linux/atomic/atomic-instrumented.h:3686
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1027
#: include/linux/atomic/atomic-arch-fallback.h:1126
#: include/linux/atomic/atomic-arch-fallback.h:3153
#: include/linux/atomic/atomic-arch-fallback.h:3252
msgid "Atomically updates **v** to (**v** + 1) with acquire ordering."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:462
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_inc_return_acquire() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:545
#: include/linux/atomic/atomic-long.h:625 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:475
#: include/linux/atomic/atomic-instrumented.h:545
#: include/linux/atomic/atomic-instrumented.h:2053
#: include/linux/atomic/atomic-instrumented.h:2123
#: include/linux/atomic/atomic-instrumented.h:3631
#: include/linux/atomic/atomic-instrumented.h:3701
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1051
#: include/linux/atomic/atomic-arch-fallback.h:1150
#: include/linux/atomic/atomic-arch-fallback.h:3177
#: include/linux/atomic/atomic-arch-fallback.h:3276
msgid "atomic increment with release ordering"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:547
#: include/linux/atomic/atomic-long.h:627 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:477
#: include/linux/atomic/atomic-instrumented.h:547
#: include/linux/atomic/atomic-instrumented.h:2055
#: include/linux/atomic/atomic-instrumented.h:2125
#: include/linux/atomic/atomic-instrumented.h:3633
#: include/linux/atomic/atomic-instrumented.h:3703
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1053
#: include/linux/atomic/atomic-arch-fallback.h:1152
#: include/linux/atomic/atomic-arch-fallback.h:3179
#: include/linux/atomic/atomic-arch-fallback.h:3278
msgid "Atomically updates **v** to (**v** + 1) with release ordering."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:479
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_inc_return_release() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:497
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_inc_return_relaxed() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:514
msgid "Unsafe to use in noinstr code; use raw_atomic_fetch_inc() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:532
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_fetch_inc_acquire() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:549
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_fetch_inc_release() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:567
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_fetch_inc_relaxed() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:665
#: include/linux/atomic/atomic-long.h:745
#: include/linux/atomic/atomic-long.h:825 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:580
#: include/linux/atomic/atomic-instrumented.h:650
#: include/linux/atomic/atomic-instrumented.h:720
#: include/linux/atomic/atomic-instrumented.h:2158
#: include/linux/atomic/atomic-instrumented.h:2228
#: include/linux/atomic/atomic-instrumented.h:2298
#: include/linux/atomic/atomic-instrumented.h:3736
#: include/linux/atomic/atomic-instrumented.h:3806
#: include/linux/atomic/atomic-instrumented.h:3876
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1197
#: include/linux/atomic/atomic-arch-fallback.h:1294
#: include/linux/atomic/atomic-arch-fallback.h:1393
#: include/linux/atomic/atomic-arch-fallback.h:3323
#: include/linux/atomic/atomic-arch-fallback.h:3420
#: include/linux/atomic/atomic-arch-fallback.h:3519
msgid "atomic decrement with relaxed ordering"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:667
#: include/linux/atomic/atomic-long.h:747
#: include/linux/atomic/atomic-long.h:827 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:582
#: include/linux/atomic/atomic-instrumented.h:652
#: include/linux/atomic/atomic-instrumented.h:722
#: include/linux/atomic/atomic-instrumented.h:2160
#: include/linux/atomic/atomic-instrumented.h:2230
#: include/linux/atomic/atomic-instrumented.h:2300
#: include/linux/atomic/atomic-instrumented.h:3738
#: include/linux/atomic/atomic-instrumented.h:3808
#: include/linux/atomic/atomic-instrumented.h:3878
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1199
#: include/linux/atomic/atomic-arch-fallback.h:1296
#: include/linux/atomic/atomic-arch-fallback.h:1395
#: include/linux/atomic/atomic-arch-fallback.h:3325
#: include/linux/atomic/atomic-arch-fallback.h:3422
#: include/linux/atomic/atomic-arch-fallback.h:3521
msgid "Atomically updates **v** to (**v** - 1) with relaxed ordering."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:584
msgid "Unsafe to use in noinstr code; use raw_atomic_dec() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:685
#: include/linux/atomic/atomic-long.h:765 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:597
#: include/linux/atomic/atomic-instrumented.h:667
#: include/linux/atomic/atomic-instrumented.h:2175
#: include/linux/atomic/atomic-instrumented.h:2245
#: include/linux/atomic/atomic-instrumented.h:3753
#: include/linux/atomic/atomic-instrumented.h:3823
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1217
#: include/linux/atomic/atomic-arch-fallback.h:1316
#: include/linux/atomic/atomic-arch-fallback.h:3343
#: include/linux/atomic/atomic-arch-fallback.h:3442
msgid "atomic decrement with full ordering"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:687
#: include/linux/atomic/atomic-long.h:767
#: include/linux/atomic/atomic-long.h:1560 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:599
#: include/linux/atomic/atomic-instrumented.h:669
#: include/linux/atomic/atomic-instrumented.h:1372
#: include/linux/atomic/atomic-instrumented.h:2177
#: include/linux/atomic/atomic-instrumented.h:2247
#: include/linux/atomic/atomic-instrumented.h:2950
#: include/linux/atomic/atomic-instrumented.h:3755
#: include/linux/atomic/atomic-instrumented.h:3825
#: include/linux/atomic/atomic-instrumented.h:4528
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1219
#: include/linux/atomic/atomic-arch-fallback.h:1318
#: include/linux/atomic/atomic-arch-fallback.h:2267
#: include/linux/atomic/atomic-arch-fallback.h:3345
#: include/linux/atomic/atomic-arch-fallback.h:3444
#: include/linux/atomic/atomic-arch-fallback.h:4393
msgid "Atomically updates **v** to (**v** - 1) with full ordering."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:601
msgid "Unsafe to use in noinstr code; use raw_atomic_dec_return() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:705
#: include/linux/atomic/atomic-long.h:785 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:615
#: include/linux/atomic/atomic-instrumented.h:685
#: include/linux/atomic/atomic-instrumented.h:2193
#: include/linux/atomic/atomic-instrumented.h:2263
#: include/linux/atomic/atomic-instrumented.h:3771
#: include/linux/atomic/atomic-instrumented.h:3841
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1243
#: include/linux/atomic/atomic-arch-fallback.h:1342
#: include/linux/atomic/atomic-arch-fallback.h:3369
#: include/linux/atomic/atomic-arch-fallback.h:3468
msgid "atomic decrement with acquire ordering"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:707
#: include/linux/atomic/atomic-long.h:787 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:617
#: include/linux/atomic/atomic-instrumented.h:687
#: include/linux/atomic/atomic-instrumented.h:2195
#: include/linux/atomic/atomic-instrumented.h:2265
#: include/linux/atomic/atomic-instrumented.h:3773
#: include/linux/atomic/atomic-instrumented.h:3843
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1245
#: include/linux/atomic/atomic-arch-fallback.h:1344
#: include/linux/atomic/atomic-arch-fallback.h:3371
#: include/linux/atomic/atomic-arch-fallback.h:3470
msgid "Atomically updates **v** to (**v** - 1) with acquire ordering."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:619
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_dec_return_acquire() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:725
#: include/linux/atomic/atomic-long.h:805 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:632
#: include/linux/atomic/atomic-instrumented.h:702
#: include/linux/atomic/atomic-instrumented.h:2210
#: include/linux/atomic/atomic-instrumented.h:2280
#: include/linux/atomic/atomic-instrumented.h:3788
#: include/linux/atomic/atomic-instrumented.h:3858
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1269
#: include/linux/atomic/atomic-arch-fallback.h:1368
#: include/linux/atomic/atomic-arch-fallback.h:3395
#: include/linux/atomic/atomic-arch-fallback.h:3494
msgid "atomic decrement with release ordering"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:727
#: include/linux/atomic/atomic-long.h:807 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:634
#: include/linux/atomic/atomic-instrumented.h:704
#: include/linux/atomic/atomic-instrumented.h:2212
#: include/linux/atomic/atomic-instrumented.h:2282
#: include/linux/atomic/atomic-instrumented.h:3790
#: include/linux/atomic/atomic-instrumented.h:3860
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1271
#: include/linux/atomic/atomic-arch-fallback.h:1370
#: include/linux/atomic/atomic-arch-fallback.h:3397
#: include/linux/atomic/atomic-arch-fallback.h:3496
msgid "Atomically updates **v** to (**v** - 1) with release ordering."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:636
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_dec_return_release() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:654
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_dec_return_relaxed() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:671
msgid "Unsafe to use in noinstr code; use raw_atomic_fetch_dec() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:689
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_fetch_dec_acquire() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:706
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_fetch_dec_release() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:724
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_fetch_dec_relaxed() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:845
#: include/linux/atomic/atomic-long.h:929 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:737
#: include/linux/atomic/atomic-instrumented.h:811
#: include/linux/atomic/atomic-instrumented.h:2315
#: include/linux/atomic/atomic-instrumented.h:2389
#: include/linux/atomic/atomic-instrumented.h:3893
#: include/linux/atomic/atomic-instrumented.h:3967
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1415
#: include/linux/atomic/atomic-arch-fallback.h:1512
#: include/linux/atomic/atomic-arch-fallback.h:3541
#: include/linux/atomic/atomic-arch-fallback.h:3638
msgid "atomic bitwise AND with relaxed ordering"
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:738
#: include/linux/atomic/atomic-instrumented.h:756
#: include/linux/atomic/atomic-instrumented.h:775
#: include/linux/atomic/atomic-instrumented.h:793
#: include/linux/atomic/atomic-instrumented.h:812
#: include/linux/atomic/atomic-instrumented.h:830
#: include/linux/atomic/atomic-instrumented.h:848
#: include/linux/atomic/atomic-instrumented.h:867
#: include/linux/atomic/atomic-instrumented.h:885
#: include/linux/atomic/atomic-instrumented.h:904
#: include/linux/atomic/atomic-instrumented.h:922
#: include/linux/atomic/atomic-instrumented.h:940
#: include/linux/atomic/atomic-instrumented.h:959
#: include/linux/atomic/atomic-instrumented.h:977
#: include/linux/atomic/atomic-instrumented.h:996
#: include/linux/atomic/atomic-instrumented.h:1014
#: include/linux/atomic/atomic-instrumented.h:1032
#: include/linux/atomic/atomic-instrumented.h:1051
#: include/linux/atomic/atomic-instrumented.h:1069
#: include/linux/atomic/atomic-instrumented.h:1088
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1416
#: include/linux/atomic/atomic-arch-fallback.h:1433
#: include/linux/atomic/atomic-arch-fallback.h:1460
#: include/linux/atomic/atomic-arch-fallback.h:1487
#: include/linux/atomic/atomic-arch-fallback.h:1513
#: include/linux/atomic/atomic-arch-fallback.h:1536
#: include/linux/atomic/atomic-arch-fallback.h:1557
#: include/linux/atomic/atomic-arch-fallback.h:1584
#: include/linux/atomic/atomic-arch-fallback.h:1611
#: include/linux/atomic/atomic-arch-fallback.h:1637
#: include/linux/atomic/atomic-arch-fallback.h:1660
#: include/linux/atomic/atomic-arch-fallback.h:1677
#: include/linux/atomic/atomic-arch-fallback.h:1704
#: include/linux/atomic/atomic-arch-fallback.h:1731
#: include/linux/atomic/atomic-arch-fallback.h:1757
#: include/linux/atomic/atomic-arch-fallback.h:1780
#: include/linux/atomic/atomic-arch-fallback.h:1797
#: include/linux/atomic/atomic-arch-fallback.h:1824
#: include/linux/atomic/atomic-arch-fallback.h:1851
#: include/linux/atomic/atomic-arch-fallback.h:1877
msgid "int value"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:848
#: include/linux/atomic/atomic-long.h:932 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:740
#: include/linux/atomic/atomic-instrumented.h:814
#: include/linux/atomic/atomic-instrumented.h:2318
#: include/linux/atomic/atomic-instrumented.h:2392
#: include/linux/atomic/atomic-instrumented.h:3896
#: include/linux/atomic/atomic-instrumented.h:3970
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1418
#: include/linux/atomic/atomic-arch-fallback.h:1515
#: include/linux/atomic/atomic-arch-fallback.h:3544
#: include/linux/atomic/atomic-arch-fallback.h:3641
msgid "Atomically updates **v** to (**v** & **i**) with relaxed ordering."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:742
msgid "Unsafe to use in noinstr code; use raw_atomic_and() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:866
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:755
#: include/linux/atomic/atomic-instrumented.h:2333
#: include/linux/atomic/atomic-instrumented.h:3911
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1432
#: include/linux/atomic/atomic-arch-fallback.h:3558
msgid "atomic bitwise AND with full ordering"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:869
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:758
#: include/linux/atomic/atomic-instrumented.h:2336
#: include/linux/atomic/atomic-instrumented.h:3914
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1435
#: include/linux/atomic/atomic-arch-fallback.h:3561
msgid "Atomically updates **v** to (**v** & **i**) with full ordering."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:760
msgid "Unsafe to use in noinstr code; use raw_atomic_fetch_and() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:887
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:774
#: include/linux/atomic/atomic-instrumented.h:2352
#: include/linux/atomic/atomic-instrumented.h:3930
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1459
#: include/linux/atomic/atomic-arch-fallback.h:3585
msgid "atomic bitwise AND with acquire ordering"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:890
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:777
#: include/linux/atomic/atomic-instrumented.h:2355
#: include/linux/atomic/atomic-instrumented.h:3933
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1462
#: include/linux/atomic/atomic-arch-fallback.h:3588
msgid "Atomically updates **v** to (**v** & **i**) with acquire ordering."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:779
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_fetch_and_acquire() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:908
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:792
#: include/linux/atomic/atomic-instrumented.h:2370
#: include/linux/atomic/atomic-instrumented.h:3948
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1486
#: include/linux/atomic/atomic-arch-fallback.h:3612
msgid "atomic bitwise AND with release ordering"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:911
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:795
#: include/linux/atomic/atomic-instrumented.h:2373
#: include/linux/atomic/atomic-instrumented.h:3951
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1489
#: include/linux/atomic/atomic-arch-fallback.h:3615
msgid "Atomically updates **v** to (**v** & **i**) with release ordering."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:797
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_fetch_and_release() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:816
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_fetch_and_relaxed() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:950
#: include/linux/atomic/atomic-long.h:1034 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:829
#: include/linux/atomic/atomic-instrumented.h:903
#: include/linux/atomic/atomic-instrumented.h:2407
#: include/linux/atomic/atomic-instrumented.h:2481
#: include/linux/atomic/atomic-instrumented.h:3985
#: include/linux/atomic/atomic-instrumented.h:4059
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1535
#: include/linux/atomic/atomic-arch-fallback.h:1636
#: include/linux/atomic/atomic-arch-fallback.h:3661
#: include/linux/atomic/atomic-arch-fallback.h:3762
msgid "atomic bitwise AND NOT with relaxed ordering"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:953
#: include/linux/atomic/atomic-long.h:1037 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:832
#: include/linux/atomic/atomic-instrumented.h:906
#: include/linux/atomic/atomic-instrumented.h:2410
#: include/linux/atomic/atomic-instrumented.h:2484
#: include/linux/atomic/atomic-instrumented.h:3988
#: include/linux/atomic/atomic-instrumented.h:4062
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1538
#: include/linux/atomic/atomic-arch-fallback.h:1639
#: include/linux/atomic/atomic-arch-fallback.h:3664
#: include/linux/atomic/atomic-arch-fallback.h:3765
msgid "Atomically updates **v** to (**v** & **~i**) with relaxed ordering."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:834
msgid "Unsafe to use in noinstr code; use raw_atomic_andnot() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:971
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:847
#: include/linux/atomic/atomic-instrumented.h:2425
#: include/linux/atomic/atomic-instrumented.h:4003
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1556
#: include/linux/atomic/atomic-arch-fallback.h:3682
msgid "atomic bitwise AND NOT with full ordering"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:974
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:850
#: include/linux/atomic/atomic-instrumented.h:2428
#: include/linux/atomic/atomic-instrumented.h:4006
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1559
#: include/linux/atomic/atomic-arch-fallback.h:3685
msgid "Atomically updates **v** to (**v** & **~i**) with full ordering."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:852
msgid "Unsafe to use in noinstr code; use raw_atomic_fetch_andnot() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:992
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:866
#: include/linux/atomic/atomic-instrumented.h:2444
#: include/linux/atomic/atomic-instrumented.h:4022
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1583
#: include/linux/atomic/atomic-arch-fallback.h:3709
msgid "atomic bitwise AND NOT with acquire ordering"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:995
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:869
#: include/linux/atomic/atomic-instrumented.h:2447
#: include/linux/atomic/atomic-instrumented.h:4025
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1586
#: include/linux/atomic/atomic-arch-fallback.h:3712
msgid "Atomically updates **v** to (**v** & **~i**) with acquire ordering."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:871
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_fetch_andnot_acquire() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1013
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:884
#: include/linux/atomic/atomic-instrumented.h:2462
#: include/linux/atomic/atomic-instrumented.h:4040
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1610
#: include/linux/atomic/atomic-arch-fallback.h:3736
msgid "atomic bitwise AND NOT with release ordering"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1016
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:887
#: include/linux/atomic/atomic-instrumented.h:2465
#: include/linux/atomic/atomic-instrumented.h:4043
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1613
#: include/linux/atomic/atomic-arch-fallback.h:3739
msgid "Atomically updates **v** to (**v** & **~i**) with release ordering."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:889
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_fetch_andnot_release() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:908
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_fetch_andnot_relaxed() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1055
#: include/linux/atomic/atomic-long.h:1139 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:921
#: include/linux/atomic/atomic-instrumented.h:995
#: include/linux/atomic/atomic-instrumented.h:2499
#: include/linux/atomic/atomic-instrumented.h:2573
#: include/linux/atomic/atomic-instrumented.h:4077
#: include/linux/atomic/atomic-instrumented.h:4151
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1659
#: include/linux/atomic/atomic-arch-fallback.h:1756
#: include/linux/atomic/atomic-arch-fallback.h:3785
#: include/linux/atomic/atomic-arch-fallback.h:3882
msgid "atomic bitwise OR with relaxed ordering"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1058
#: include/linux/atomic/atomic-long.h:1142 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:924
#: include/linux/atomic/atomic-instrumented.h:998
#: include/linux/atomic/atomic-instrumented.h:2502
#: include/linux/atomic/atomic-instrumented.h:2576
#: include/linux/atomic/atomic-instrumented.h:4080
#: include/linux/atomic/atomic-instrumented.h:4154
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1662
#: include/linux/atomic/atomic-arch-fallback.h:1759
#: include/linux/atomic/atomic-arch-fallback.h:3788
#: include/linux/atomic/atomic-arch-fallback.h:3885
msgid "Atomically updates **v** to (**v** | **i**) with relaxed ordering."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:926
msgid "Unsafe to use in noinstr code; use raw_atomic_or() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1076
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:939
#: include/linux/atomic/atomic-instrumented.h:2517
#: include/linux/atomic/atomic-instrumented.h:4095
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1676
#: include/linux/atomic/atomic-arch-fallback.h:3802
msgid "atomic bitwise OR with full ordering"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1079
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:942
#: include/linux/atomic/atomic-instrumented.h:2520
#: include/linux/atomic/atomic-instrumented.h:4098
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1679
#: include/linux/atomic/atomic-arch-fallback.h:3805
msgid "Atomically updates **v** to (**v** | **i**) with full ordering."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:944
msgid "Unsafe to use in noinstr code; use raw_atomic_fetch_or() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1097
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:958
#: include/linux/atomic/atomic-instrumented.h:2536
#: include/linux/atomic/atomic-instrumented.h:4114
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1703
#: include/linux/atomic/atomic-arch-fallback.h:3829
msgid "atomic bitwise OR with acquire ordering"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1100
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:961
#: include/linux/atomic/atomic-instrumented.h:2539
#: include/linux/atomic/atomic-instrumented.h:4117
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1706
#: include/linux/atomic/atomic-arch-fallback.h:3832
msgid "Atomically updates **v** to (**v** | **i**) with acquire ordering."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:963
msgid "Unsafe to use in noinstr code; use raw_atomic_fetch_or_acquire() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1118
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:976
#: include/linux/atomic/atomic-instrumented.h:2554
#: include/linux/atomic/atomic-instrumented.h:4132
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1730
#: include/linux/atomic/atomic-arch-fallback.h:3856
msgid "atomic bitwise OR with release ordering"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1121
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:979
#: include/linux/atomic/atomic-instrumented.h:2557
#: include/linux/atomic/atomic-instrumented.h:4135
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1733
#: include/linux/atomic/atomic-arch-fallback.h:3859
msgid "Atomically updates **v** to (**v** | **i**) with release ordering."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:981
msgid "Unsafe to use in noinstr code; use raw_atomic_fetch_or_release() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1000
msgid "Unsafe to use in noinstr code; use raw_atomic_fetch_or_relaxed() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1160
#: include/linux/atomic/atomic-long.h:1244 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1013
#: include/linux/atomic/atomic-instrumented.h:1087
#: include/linux/atomic/atomic-instrumented.h:2591
#: include/linux/atomic/atomic-instrumented.h:2665
#: include/linux/atomic/atomic-instrumented.h:4169
#: include/linux/atomic/atomic-instrumented.h:4243
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1779
#: include/linux/atomic/atomic-arch-fallback.h:1876
#: include/linux/atomic/atomic-arch-fallback.h:3905
#: include/linux/atomic/atomic-arch-fallback.h:4002
msgid "atomic bitwise XOR with relaxed ordering"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1163
#: include/linux/atomic/atomic-long.h:1247 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1016
#: include/linux/atomic/atomic-instrumented.h:1090
#: include/linux/atomic/atomic-instrumented.h:2594
#: include/linux/atomic/atomic-instrumented.h:2668
#: include/linux/atomic/atomic-instrumented.h:4172
#: include/linux/atomic/atomic-instrumented.h:4246
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1782
#: include/linux/atomic/atomic-arch-fallback.h:1879
#: include/linux/atomic/atomic-arch-fallback.h:3908
#: include/linux/atomic/atomic-arch-fallback.h:4005
msgid "Atomically updates **v** to (**v** ^ **i**) with relaxed ordering."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1018
msgid "Unsafe to use in noinstr code; use raw_atomic_xor() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1181
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1031
#: include/linux/atomic/atomic-instrumented.h:2609
#: include/linux/atomic/atomic-instrumented.h:4187
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1796
#: include/linux/atomic/atomic-arch-fallback.h:3922
msgid "atomic bitwise XOR with full ordering"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1184
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1034
#: include/linux/atomic/atomic-instrumented.h:2612
#: include/linux/atomic/atomic-instrumented.h:4190
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1799
#: include/linux/atomic/atomic-arch-fallback.h:3925
msgid "Atomically updates **v** to (**v** ^ **i**) with full ordering."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1036
msgid "Unsafe to use in noinstr code; use raw_atomic_fetch_xor() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1202
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1050
#: include/linux/atomic/atomic-instrumented.h:2628
#: include/linux/atomic/atomic-instrumented.h:4206
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1823
#: include/linux/atomic/atomic-arch-fallback.h:3949
msgid "atomic bitwise XOR with acquire ordering"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1205
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1053
#: include/linux/atomic/atomic-instrumented.h:2631
#: include/linux/atomic/atomic-instrumented.h:4209
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1826
#: include/linux/atomic/atomic-arch-fallback.h:3952
msgid "Atomically updates **v** to (**v** ^ **i**) with acquire ordering."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1055
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_fetch_xor_acquire() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1223
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1068
#: include/linux/atomic/atomic-instrumented.h:2646
#: include/linux/atomic/atomic-instrumented.h:4224
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1850
#: include/linux/atomic/atomic-arch-fallback.h:3976
msgid "atomic bitwise XOR with release ordering"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1226
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1071
#: include/linux/atomic/atomic-instrumented.h:2649
#: include/linux/atomic/atomic-instrumented.h:4227
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1853
#: include/linux/atomic/atomic-arch-fallback.h:3979
msgid "Atomically updates **v** to (**v** ^ **i**) with release ordering."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1073
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_fetch_xor_release() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1092
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_fetch_xor_relaxed() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1265
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1105
#: include/linux/atomic/atomic-instrumented.h:2683
#: include/linux/atomic/atomic-instrumented.h:4261
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1899
#: include/linux/atomic/atomic-arch-fallback.h:4025
msgid "atomic exchange with full ordering"
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1108
#: include/linux/atomic/atomic-instrumented.h:1127
#: include/linux/atomic/atomic-instrumented.h:1145
#: include/linux/atomic/atomic-instrumented.h:1164
#: include/linux/atomic/atomic-instrumented.h:1183
#: include/linux/atomic/atomic-instrumented.h:1204
#: include/linux/atomic/atomic-instrumented.h:1224
#: include/linux/atomic/atomic-instrumented.h:1245
#: include/linux/atomic/atomic-instrumented.h:1265
#: include/linux/atomic/atomic-instrumented.h:1288
#: include/linux/atomic/atomic-instrumented.h:1310
#: include/linux/atomic/atomic-instrumented.h:1333
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1902
#: include/linux/atomic/atomic-arch-fallback.h:1929
#: include/linux/atomic/atomic-arch-fallback.h:1956
#: include/linux/atomic/atomic-arch-fallback.h:1982
#: include/linux/atomic/atomic-arch-fallback.h:2006
#: include/linux/atomic/atomic-arch-fallback.h:2035
#: include/linux/atomic/atomic-arch-fallback.h:2064
#: include/linux/atomic/atomic-arch-fallback.h:2092
#: include/linux/atomic/atomic-arch-fallback.h:2117
#: include/linux/atomic/atomic-arch-fallback.h:2151
#: include/linux/atomic/atomic-arch-fallback.h:2185
#: include/linux/atomic/atomic-arch-fallback.h:2218
msgid "``int new``"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1268
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1108
#: include/linux/atomic/atomic-instrumented.h:2686
#: include/linux/atomic/atomic-instrumented.h:4264
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1902
#: include/linux/atomic/atomic-arch-fallback.h:4028
msgid "Atomically updates **v** to **new** with full ordering."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1110
msgid "Unsafe to use in noinstr code; use raw_atomic_xchg() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1286
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1124
#: include/linux/atomic/atomic-instrumented.h:2702
#: include/linux/atomic/atomic-instrumented.h:4280
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1926
#: include/linux/atomic/atomic-arch-fallback.h:4052
msgid "atomic exchange with acquire ordering"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1289
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1127
#: include/linux/atomic/atomic-instrumented.h:2705
#: include/linux/atomic/atomic-instrumented.h:4283
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1929
#: include/linux/atomic/atomic-arch-fallback.h:4055
msgid "Atomically updates **v** to **new** with acquire ordering."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1129
msgid "Unsafe to use in noinstr code; use raw_atomic_xchg_acquire() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1307
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1142
#: include/linux/atomic/atomic-instrumented.h:2720
#: include/linux/atomic/atomic-instrumented.h:4298
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1953
#: include/linux/atomic/atomic-arch-fallback.h:4079
msgid "atomic exchange with release ordering"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1310
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1145
#: include/linux/atomic/atomic-instrumented.h:2723
#: include/linux/atomic/atomic-instrumented.h:4301
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1956
#: include/linux/atomic/atomic-arch-fallback.h:4082
msgid "Atomically updates **v** to **new** with release ordering."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1147
msgid "Unsafe to use in noinstr code; use raw_atomic_xchg_release() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1328
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1161
#: include/linux/atomic/atomic-instrumented.h:2739
#: include/linux/atomic/atomic-instrumented.h:4317
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1979
#: include/linux/atomic/atomic-arch-fallback.h:4105
msgid "atomic exchange with relaxed ordering"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1331
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1164
#: include/linux/atomic/atomic-instrumented.h:2742
#: include/linux/atomic/atomic-instrumented.h:4320
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1982
#: include/linux/atomic/atomic-arch-fallback.h:4108
msgid "Atomically updates **v** to **new** with relaxed ordering."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1166
msgid "Unsafe to use in noinstr code; use raw_atomic_xchg_relaxed() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1349
#: include/linux/atomic/atomic-long.h:1441 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1179
#: include/linux/atomic/atomic-instrumented.h:1261
#: include/linux/atomic/atomic-instrumented.h:2757
#: include/linux/atomic/atomic-instrumented.h:2839
#: include/linux/atomic/atomic-instrumented.h:4335
#: include/linux/atomic/atomic-instrumented.h:4417
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2002
#: include/linux/atomic/atomic-arch-fallback.h:2113
#: include/linux/atomic/atomic-arch-fallback.h:4128
#: include/linux/atomic/atomic-arch-fallback.h:4239
msgid "atomic compare and exchange with full ordering"
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1182
#: include/linux/atomic/atomic-instrumented.h:1203
#: include/linux/atomic/atomic-instrumented.h:1223
#: include/linux/atomic/atomic-instrumented.h:1244
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2005
#: include/linux/atomic/atomic-arch-fallback.h:2034
#: include/linux/atomic/atomic-arch-fallback.h:2063
#: include/linux/atomic/atomic-arch-fallback.h:2091
msgid "``int old``"
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1181
#: include/linux/atomic/atomic-instrumented.h:1202
#: include/linux/atomic/atomic-instrumented.h:1222
#: include/linux/atomic/atomic-instrumented.h:1243
#: include/linux/atomic/atomic-instrumented.h:1483
#: include/linux/atomic/atomic-instrumented.h:1504
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2004
#: include/linux/atomic/atomic-arch-fallback.h:2033
#: include/linux/atomic/atomic-arch-fallback.h:2062
#: include/linux/atomic/atomic-arch-fallback.h:2090
#: include/linux/atomic/atomic-arch-fallback.h:2411
#: include/linux/atomic/atomic-arch-fallback.h:2441
msgid "int value to compare with"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1353
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1183
#: include/linux/atomic/atomic-instrumented.h:2761
#: include/linux/atomic/atomic-instrumented.h:4339
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2006
#: include/linux/atomic/atomic-arch-fallback.h:4132
msgid ""
"If (**v** == **old**), atomically updates **v** to **new** with full "
"ordering. Otherwise, **v** is not modified and relaxed ordering is provided."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1186
msgid "Unsafe to use in noinstr code; use raw_atomic_cmpxchg() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1372
#: include/linux/atomic/atomic-long.h:1465 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1200
#: include/linux/atomic/atomic-instrumented.h:1284
#: include/linux/atomic/atomic-instrumented.h:2778
#: include/linux/atomic/atomic-instrumented.h:2862
#: include/linux/atomic/atomic-instrumented.h:4356
#: include/linux/atomic/atomic-instrumented.h:4440
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2031
#: include/linux/atomic/atomic-arch-fallback.h:2147
#: include/linux/atomic/atomic-arch-fallback.h:4157
#: include/linux/atomic/atomic-arch-fallback.h:4273
msgid "atomic compare and exchange with acquire ordering"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1376
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1204
#: include/linux/atomic/atomic-instrumented.h:2782
#: include/linux/atomic/atomic-instrumented.h:4360
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2035
#: include/linux/atomic/atomic-arch-fallback.h:4161
msgid ""
"If (**v** == **old**), atomically updates **v** to **new** with acquire "
"ordering. Otherwise, **v** is not modified and relaxed ordering is provided."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1207
msgid "Unsafe to use in noinstr code; use raw_atomic_cmpxchg_acquire() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1395
#: include/linux/atomic/atomic-long.h:1489 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1220
#: include/linux/atomic/atomic-instrumented.h:1306
#: include/linux/atomic/atomic-instrumented.h:2798
#: include/linux/atomic/atomic-instrumented.h:2884
#: include/linux/atomic/atomic-instrumented.h:4376
#: include/linux/atomic/atomic-instrumented.h:4462
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2060
#: include/linux/atomic/atomic-arch-fallback.h:2181
#: include/linux/atomic/atomic-arch-fallback.h:4186
#: include/linux/atomic/atomic-arch-fallback.h:4307
msgid "atomic compare and exchange with release ordering"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1399
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1224
#: include/linux/atomic/atomic-instrumented.h:2802
#: include/linux/atomic/atomic-instrumented.h:4380
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2064
#: include/linux/atomic/atomic-arch-fallback.h:4190
msgid ""
"If (**v** == **old**), atomically updates **v** to **new** with release "
"ordering. Otherwise, **v** is not modified and relaxed ordering is provided."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1227
msgid "Unsafe to use in noinstr code; use raw_atomic_cmpxchg_release() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1418
#: include/linux/atomic/atomic-long.h:1513 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1241
#: include/linux/atomic/atomic-instrumented.h:1329
#: include/linux/atomic/atomic-instrumented.h:2819
#: include/linux/atomic/atomic-instrumented.h:2907
#: include/linux/atomic/atomic-instrumented.h:4397
#: include/linux/atomic/atomic-instrumented.h:4485
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2088
#: include/linux/atomic/atomic-arch-fallback.h:2214
#: include/linux/atomic/atomic-arch-fallback.h:4214
#: include/linux/atomic/atomic-arch-fallback.h:4340
msgid "atomic compare and exchange with relaxed ordering"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1422
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1245
#: include/linux/atomic/atomic-instrumented.h:2823
#: include/linux/atomic/atomic-instrumented.h:4401
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2092
#: include/linux/atomic/atomic-arch-fallback.h:4218
msgid ""
"If (**v** == **old**), atomically updates **v** to **new** with relaxed "
"ordering. Otherwise, **v** is not modified and relaxed ordering is provided."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1248
msgid "Unsafe to use in noinstr code; use raw_atomic_cmpxchg_relaxed() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1264
#: include/linux/atomic/atomic-instrumented.h:1287
#: include/linux/atomic/atomic-instrumented.h:1309
#: include/linux/atomic/atomic-instrumented.h:1332
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2116
#: include/linux/atomic/atomic-arch-fallback.h:2150
#: include/linux/atomic/atomic-arch-fallback.h:2184
#: include/linux/atomic/atomic-arch-fallback.h:2217
msgid "``int *old``"
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1263
#: include/linux/atomic/atomic-instrumented.h:1286
#: include/linux/atomic/atomic-instrumented.h:1308
#: include/linux/atomic/atomic-instrumented.h:1331
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2115
#: include/linux/atomic/atomic-arch-fallback.h:2149
#: include/linux/atomic/atomic-arch-fallback.h:2183
#: include/linux/atomic/atomic-arch-fallback.h:2216
msgid "pointer to int value to compare with"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1445
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1265
#: include/linux/atomic/atomic-instrumented.h:2843
#: include/linux/atomic/atomic-instrumented.h:4421
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2117
#: include/linux/atomic/atomic-arch-fallback.h:4243
msgid ""
"If (**v** == **old**), atomically updates **v** to **new** with full "
"ordering. Otherwise, **v** is not modified, **old** is updated to the "
"current value of **v**, and relaxed ordering is provided."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1269
msgid "Unsafe to use in noinstr code; use raw_atomic_try_cmpxchg() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1452
#: include/linux/atomic/atomic-long.h:1476
#: include/linux/atomic/atomic-long.h:1500
#: include/linux/atomic/atomic-long.h:1524 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1272
#: include/linux/atomic/atomic-instrumented.h:1295
#: include/linux/atomic/atomic-instrumented.h:1317
#: include/linux/atomic/atomic-instrumented.h:1340
#: include/linux/atomic/atomic-instrumented.h:2850
#: include/linux/atomic/atomic-instrumented.h:2873
#: include/linux/atomic/atomic-instrumented.h:2895
#: include/linux/atomic/atomic-instrumented.h:2918
#: include/linux/atomic/atomic-instrumented.h:4428
#: include/linux/atomic/atomic-instrumented.h:4451
#: include/linux/atomic/atomic-instrumented.h:4473
#: include/linux/atomic/atomic-instrumented.h:4496
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2124
#: include/linux/atomic/atomic-arch-fallback.h:2158
#: include/linux/atomic/atomic-arch-fallback.h:2192
#: include/linux/atomic/atomic-arch-fallback.h:2225
#: include/linux/atomic/atomic-arch-fallback.h:4250
#: include/linux/atomic/atomic-arch-fallback.h:4284
#: include/linux/atomic/atomic-arch-fallback.h:4318
#: include/linux/atomic/atomic-arch-fallback.h:4351
msgid "**true** if the exchange occured, **false** otherwise."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1469
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1288
#: include/linux/atomic/atomic-instrumented.h:2866
#: include/linux/atomic/atomic-instrumented.h:4444
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2151
#: include/linux/atomic/atomic-arch-fallback.h:4277
msgid ""
"If (**v** == **old**), atomically updates **v** to **new** with acquire "
"ordering. Otherwise, **v** is not modified, **old** is updated to the "
"current value of **v**, and relaxed ordering is provided."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1292
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_try_cmpxchg_acquire() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1493
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1310
#: include/linux/atomic/atomic-instrumented.h:2888
#: include/linux/atomic/atomic-instrumented.h:4466
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2185
#: include/linux/atomic/atomic-arch-fallback.h:4311
msgid ""
"If (**v** == **old**), atomically updates **v** to **new** with release "
"ordering. Otherwise, **v** is not modified, **old** is updated to the "
"current value of **v**, and relaxed ordering is provided."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1314
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_try_cmpxchg_release() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1517
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1333
#: include/linux/atomic/atomic-instrumented.h:2911
#: include/linux/atomic/atomic-instrumented.h:4489
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2218
#: include/linux/atomic/atomic-arch-fallback.h:4344
msgid ""
"If (**v** == **old**), atomically updates **v** to **new** with relaxed "
"ordering. Otherwise, **v** is not modified, **old** is updated to the "
"current value of **v**, and relaxed ordering is provided."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1337
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_try_cmpxchg_relaxed() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1537
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1351
#: include/linux/atomic/atomic-instrumented.h:2929
#: include/linux/atomic/atomic-instrumented.h:4507
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2244
#: include/linux/atomic/atomic-arch-fallback.h:4370
msgid "atomic subtract and test if zero with full ordering"
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1356
msgid "Unsafe to use in noinstr code; use raw_atomic_sub_and_test() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1545
#: include/linux/atomic/atomic-long.h:1565
#: include/linux/atomic/atomic-long.h:1585 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1359
#: include/linux/atomic/atomic-instrumented.h:1377
#: include/linux/atomic/atomic-instrumented.h:1395
#: include/linux/atomic/atomic-instrumented.h:2937
#: include/linux/atomic/atomic-instrumented.h:2955
#: include/linux/atomic/atomic-instrumented.h:2973
#: include/linux/atomic/atomic-instrumented.h:4515
#: include/linux/atomic/atomic-instrumented.h:4533
#: include/linux/atomic/atomic-instrumented.h:4551
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2252
#: include/linux/atomic/atomic-arch-fallback.h:2272
#: include/linux/atomic/atomic-arch-fallback.h:2292
#: include/linux/atomic/atomic-arch-fallback.h:4378
#: include/linux/atomic/atomic-arch-fallback.h:4398
#: include/linux/atomic/atomic-arch-fallback.h:4418
msgid "**true** if the resulting value of **v** is zero, **false** otherwise."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1558
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1370
#: include/linux/atomic/atomic-instrumented.h:2948
#: include/linux/atomic/atomic-instrumented.h:4526
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2265
#: include/linux/atomic/atomic-arch-fallback.h:4391
msgid "atomic decrement and test if zero with full ordering"
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1374
msgid "Unsafe to use in noinstr code; use raw_atomic_dec_and_test() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1578
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1388
#: include/linux/atomic/atomic-instrumented.h:2966
#: include/linux/atomic/atomic-instrumented.h:4544
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2285
#: include/linux/atomic/atomic-arch-fallback.h:4411
msgid "atomic increment and test if zero with full ordering"
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1392
msgid "Unsafe to use in noinstr code; use raw_atomic_inc_and_test() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1598
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1406
#: include/linux/atomic/atomic-instrumented.h:2984
#: include/linux/atomic/atomic-instrumented.h:4562
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2305
#: include/linux/atomic/atomic-arch-fallback.h:4431
msgid "atomic add and test if negative with full ordering"
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1411
msgid "Unsafe to use in noinstr code; use raw_atomic_add_negative() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1606
#: include/linux/atomic/atomic-long.h:1627
#: include/linux/atomic/atomic-long.h:1648
#: include/linux/atomic/atomic-long.h:1669 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1414
#: include/linux/atomic/atomic-instrumented.h:1433
#: include/linux/atomic/atomic-instrumented.h:1451
#: include/linux/atomic/atomic-instrumented.h:1470
#: include/linux/atomic/atomic-instrumented.h:2992
#: include/linux/atomic/atomic-instrumented.h:3011
#: include/linux/atomic/atomic-instrumented.h:3029
#: include/linux/atomic/atomic-instrumented.h:3048
#: include/linux/atomic/atomic-instrumented.h:4570
#: include/linux/atomic/atomic-instrumented.h:4589
#: include/linux/atomic/atomic-instrumented.h:4607
#: include/linux/atomic/atomic-instrumented.h:4626
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2313
#: include/linux/atomic/atomic-arch-fallback.h:2340
#: include/linux/atomic/atomic-arch-fallback.h:2367
#: include/linux/atomic/atomic-arch-fallback.h:2393
#: include/linux/atomic/atomic-arch-fallback.h:4439
#: include/linux/atomic/atomic-arch-fallback.h:4466
#: include/linux/atomic/atomic-arch-fallback.h:4493
#: include/linux/atomic/atomic-arch-fallback.h:4519
msgid ""
"**true** if the resulting value of **v** is negative, **false** otherwise."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1619
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1425
#: include/linux/atomic/atomic-instrumented.h:3003
#: include/linux/atomic/atomic-instrumented.h:4581
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2332
#: include/linux/atomic/atomic-arch-fallback.h:4458
msgid "atomic add and test if negative with acquire ordering"
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1430
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_add_negative_acquire() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1640
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1443
#: include/linux/atomic/atomic-instrumented.h:3021
#: include/linux/atomic/atomic-instrumented.h:4599
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2359
#: include/linux/atomic/atomic-arch-fallback.h:4485
msgid "atomic add and test if negative with release ordering"
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1448
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_add_negative_release() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1661
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1462
#: include/linux/atomic/atomic-instrumented.h:3040
#: include/linux/atomic/atomic-instrumented.h:4618
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2385
#: include/linux/atomic/atomic-arch-fallback.h:4511
msgid "atomic add and test if negative with relaxed ordering"
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1467
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_add_negative_relaxed() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1682
#: include/linux/atomic/atomic-long.h:1705 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1480
#: include/linux/atomic/atomic-instrumented.h:1501
#: include/linux/atomic/atomic-instrumented.h:3058
#: include/linux/atomic/atomic-instrumented.h:3079
#: include/linux/atomic/atomic-instrumented.h:4636
#: include/linux/atomic/atomic-instrumented.h:4657
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2408
#: include/linux/atomic/atomic-arch-fallback.h:2438
#: include/linux/atomic/atomic-arch-fallback.h:4534
#: include/linux/atomic/atomic-arch-fallback.h:4564
msgid "atomic add unless value with full ordering"
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1483
#: include/linux/atomic/atomic-instrumented.h:1504
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2411
#: include/linux/atomic/atomic-arch-fallback.h:2441
msgid "``int a``"
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1484
#: include/linux/atomic/atomic-instrumented.h:1505
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2412
#: include/linux/atomic/atomic-arch-fallback.h:2442
msgid "``int u``"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1686
#: include/linux/atomic/atomic-long.h:1709 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1484
#: include/linux/atomic/atomic-instrumented.h:1505
#: include/linux/atomic/atomic-instrumented.h:3062
#: include/linux/atomic/atomic-instrumented.h:3083
#: include/linux/atomic/atomic-instrumented.h:4640
#: include/linux/atomic/atomic-instrumented.h:4661
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2412
#: include/linux/atomic/atomic-arch-fallback.h:2442
#: include/linux/atomic/atomic-arch-fallback.h:4538
#: include/linux/atomic/atomic-arch-fallback.h:4568
msgid ""
"If (**v** != **u**), atomically updates **v** to (**v** + **a**) with full "
"ordering. Otherwise, **v** is not modified and relaxed ordering is provided."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1487
msgid "Unsafe to use in noinstr code; use raw_atomic_fetch_add_unless() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1508
msgid "Unsafe to use in noinstr code; use raw_atomic_add_unless() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1715
#: include/linux/atomic/atomic-long.h:1736
#: include/linux/atomic/atomic-long.h:1757
#: include/linux/atomic/atomic-long.h:1778 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1511
#: include/linux/atomic/atomic-instrumented.h:1530
#: include/linux/atomic/atomic-instrumented.h:1549
#: include/linux/atomic/atomic-instrumented.h:1568
#: include/linux/atomic/atomic-instrumented.h:3089
#: include/linux/atomic/atomic-instrumented.h:3108
#: include/linux/atomic/atomic-instrumented.h:3127
#: include/linux/atomic/atomic-instrumented.h:3146
#: include/linux/atomic/atomic-instrumented.h:4667
#: include/linux/atomic/atomic-instrumented.h:4686
#: include/linux/atomic/atomic-instrumented.h:4705
#: include/linux/atomic/atomic-instrumented.h:4724
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2448
#: include/linux/atomic/atomic-arch-fallback.h:2469
#: include/linux/atomic/atomic-arch-fallback.h:2490
#: include/linux/atomic/atomic-arch-fallback.h:2518
#: include/linux/atomic/atomic-arch-fallback.h:4574
#: include/linux/atomic/atomic-arch-fallback.h:4595
#: include/linux/atomic/atomic-arch-fallback.h:4616
#: include/linux/atomic/atomic-arch-fallback.h:4644
msgid "**true** if **v** was updated, **false** otherwise."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1728
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1522
#: include/linux/atomic/atomic-instrumented.h:3100
#: include/linux/atomic/atomic-instrumented.h:4678
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2461
#: include/linux/atomic/atomic-arch-fallback.h:4587
msgid "atomic increment unless zero with full ordering"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1730
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1524
#: include/linux/atomic/atomic-instrumented.h:3102
#: include/linux/atomic/atomic-instrumented.h:4680
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2463
#: include/linux/atomic/atomic-arch-fallback.h:4589
msgid ""
"If (**v** != 0), atomically updates **v** to (**v** + 1) with full ordering. "
"Otherwise, **v** is not modified and relaxed ordering is provided."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1527
msgid "Unsafe to use in noinstr code; use raw_atomic_inc_not_zero() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1749
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1541
#: include/linux/atomic/atomic-instrumented.h:3119
#: include/linux/atomic/atomic-instrumented.h:4697
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2482
#: include/linux/atomic/atomic-arch-fallback.h:4608
msgid "atomic increment unless negative with full ordering"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1751
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1543
#: include/linux/atomic/atomic-instrumented.h:3121
#: include/linux/atomic/atomic-instrumented.h:4699
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2484
#: include/linux/atomic/atomic-arch-fallback.h:4610
msgid ""
"If (**v** >= 0), atomically updates **v** to (**v** + 1) with full ordering. "
"Otherwise, **v** is not modified and relaxed ordering is provided."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1546
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_inc_unless_negative() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1770
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1560
#: include/linux/atomic/atomic-instrumented.h:3138
#: include/linux/atomic/atomic-instrumented.h:4716
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2510
#: include/linux/atomic/atomic-arch-fallback.h:4636
msgid "atomic decrement unless positive with full ordering"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1772
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1562
#: include/linux/atomic/atomic-instrumented.h:3140
#: include/linux/atomic/atomic-instrumented.h:4718
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2512
#: include/linux/atomic/atomic-arch-fallback.h:4638
msgid ""
"If (**v** <= 0), atomically updates **v** to (**v** - 1) with full ordering. "
"Otherwise, **v** is not modified and relaxed ordering is provided."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1565
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_dec_unless_positive() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1791
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1579
#: include/linux/atomic/atomic-instrumented.h:3157
#: include/linux/atomic/atomic-instrumented.h:4735
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2538
#: include/linux/atomic/atomic-arch-fallback.h:4664
msgid "atomic decrement if positive with full ordering"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1793
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1581
#: include/linux/atomic/atomic-instrumented.h:3159
#: include/linux/atomic/atomic-instrumented.h:4737
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2540
#: include/linux/atomic/atomic-arch-fallback.h:4666
msgid ""
"If (**v** > 0), atomically updates **v** to (**v** - 1) with full ordering. "
"Otherwise, **v** is not modified and relaxed ordering is provided."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1584
msgid "Unsafe to use in noinstr code; use raw_atomic_dec_if_positive() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1799
#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1587
#: include/linux/atomic/atomic-instrumented.h:3165
#: include/linux/atomic/atomic-instrumented.h:4743
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2546
#: include/linux/atomic/atomic-arch-fallback.h:4672
msgid "The old value of (**v** - 1), regardless of whether **v** was updated."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1604
#: include/linux/atomic/atomic-instrumented.h:1621
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2577
#: include/linux/atomic/atomic-arch-fallback.h:2593
msgid "``const atomic64_t *v``"
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1599
#: include/linux/atomic/atomic-instrumented.h:1616
#: include/linux/atomic/atomic-instrumented.h:1633
#: include/linux/atomic/atomic-instrumented.h:1651
#: include/linux/atomic/atomic-instrumented.h:1671
#: include/linux/atomic/atomic-instrumented.h:1689
#: include/linux/atomic/atomic-instrumented.h:1708
#: include/linux/atomic/atomic-instrumented.h:1726
#: include/linux/atomic/atomic-instrumented.h:1745
#: include/linux/atomic/atomic-instrumented.h:1763
#: include/linux/atomic/atomic-instrumented.h:1782
#: include/linux/atomic/atomic-instrumented.h:1800
#: include/linux/atomic/atomic-instrumented.h:1819
#: include/linux/atomic/atomic-instrumented.h:1837
#: include/linux/atomic/atomic-instrumented.h:1855
#: include/linux/atomic/atomic-instrumented.h:1874
#: include/linux/atomic/atomic-instrumented.h:1892
#: include/linux/atomic/atomic-instrumented.h:1911
#: include/linux/atomic/atomic-instrumented.h:1929
#: include/linux/atomic/atomic-instrumented.h:1948
#: include/linux/atomic/atomic-instrumented.h:1966
#: include/linux/atomic/atomic-instrumented.h:1985
#: include/linux/atomic/atomic-instrumented.h:2002
#: include/linux/atomic/atomic-instrumented.h:2019
#: include/linux/atomic/atomic-instrumented.h:2037
#: include/linux/atomic/atomic-instrumented.h:2054
#: include/linux/atomic/atomic-instrumented.h:2072
#: include/linux/atomic/atomic-instrumented.h:2089
#: include/linux/atomic/atomic-instrumented.h:2107
#: include/linux/atomic/atomic-instrumented.h:2124
#: include/linux/atomic/atomic-instrumented.h:2142
#: include/linux/atomic/atomic-instrumented.h:2159
#: include/linux/atomic/atomic-instrumented.h:2176
#: include/linux/atomic/atomic-instrumented.h:2194
#: include/linux/atomic/atomic-instrumented.h:2211
#: include/linux/atomic/atomic-instrumented.h:2229
#: include/linux/atomic/atomic-instrumented.h:2246
#: include/linux/atomic/atomic-instrumented.h:2264
#: include/linux/atomic/atomic-instrumented.h:2281
#: include/linux/atomic/atomic-instrumented.h:2299
#: include/linux/atomic/atomic-instrumented.h:2317
#: include/linux/atomic/atomic-instrumented.h:2335
#: include/linux/atomic/atomic-instrumented.h:2354
#: include/linux/atomic/atomic-instrumented.h:2372
#: include/linux/atomic/atomic-instrumented.h:2391
#: include/linux/atomic/atomic-instrumented.h:2409
#: include/linux/atomic/atomic-instrumented.h:2427
#: include/linux/atomic/atomic-instrumented.h:2446
#: include/linux/atomic/atomic-instrumented.h:2464
#: include/linux/atomic/atomic-instrumented.h:2483
#: include/linux/atomic/atomic-instrumented.h:2501
#: include/linux/atomic/atomic-instrumented.h:2519
#: include/linux/atomic/atomic-instrumented.h:2538
#: include/linux/atomic/atomic-instrumented.h:2556
#: include/linux/atomic/atomic-instrumented.h:2575
#: include/linux/atomic/atomic-instrumented.h:2593
#: include/linux/atomic/atomic-instrumented.h:2611
#: include/linux/atomic/atomic-instrumented.h:2630
#: include/linux/atomic/atomic-instrumented.h:2648
#: include/linux/atomic/atomic-instrumented.h:2667
#: include/linux/atomic/atomic-instrumented.h:2684
#: include/linux/atomic/atomic-instrumented.h:2703
#: include/linux/atomic/atomic-instrumented.h:2721
#: include/linux/atomic/atomic-instrumented.h:2740
#: include/linux/atomic/atomic-instrumented.h:2758
#: include/linux/atomic/atomic-instrumented.h:2779
#: include/linux/atomic/atomic-instrumented.h:2799
#: include/linux/atomic/atomic-instrumented.h:2820
#: include/linux/atomic/atomic-instrumented.h:2840
#: include/linux/atomic/atomic-instrumented.h:2863
#: include/linux/atomic/atomic-instrumented.h:2885
#: include/linux/atomic/atomic-instrumented.h:2908
#: include/linux/atomic/atomic-instrumented.h:2931
#: include/linux/atomic/atomic-instrumented.h:2949
#: include/linux/atomic/atomic-instrumented.h:2967
#: include/linux/atomic/atomic-instrumented.h:2986
#: include/linux/atomic/atomic-instrumented.h:3005
#: include/linux/atomic/atomic-instrumented.h:3023
#: include/linux/atomic/atomic-instrumented.h:3042
#: include/linux/atomic/atomic-instrumented.h:3059
#: include/linux/atomic/atomic-instrumented.h:3080
#: include/linux/atomic/atomic-instrumented.h:3101
#: include/linux/atomic/atomic-instrumented.h:3120
#: include/linux/atomic/atomic-instrumented.h:3139
#: include/linux/atomic/atomic-instrumented.h:3158
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2572
#: include/linux/atomic/atomic-arch-fallback.h:2588
#: include/linux/atomic/atomic-arch-fallback.h:2617
#: include/linux/atomic/atomic-arch-fallback.h:2634
#: include/linux/atomic/atomic-arch-fallback.h:2661
#: include/linux/atomic/atomic-arch-fallback.h:2678
#: include/linux/atomic/atomic-arch-fallback.h:2705
#: include/linux/atomic/atomic-arch-fallback.h:2732
#: include/linux/atomic/atomic-arch-fallback.h:2758
#: include/linux/atomic/atomic-arch-fallback.h:2781
#: include/linux/atomic/atomic-arch-fallback.h:2808
#: include/linux/atomic/atomic-arch-fallback.h:2835
#: include/linux/atomic/atomic-arch-fallback.h:2861
#: include/linux/atomic/atomic-arch-fallback.h:2884
#: include/linux/atomic/atomic-arch-fallback.h:2901
#: include/linux/atomic/atomic-arch-fallback.h:2928
#: include/linux/atomic/atomic-arch-fallback.h:2955
#: include/linux/atomic/atomic-arch-fallback.h:2981
#: include/linux/atomic/atomic-arch-fallback.h:3004
#: include/linux/atomic/atomic-arch-fallback.h:3031
#: include/linux/atomic/atomic-arch-fallback.h:3058
#: include/linux/atomic/atomic-arch-fallback.h:3084
#: include/linux/atomic/atomic-arch-fallback.h:3106
#: include/linux/atomic/atomic-arch-fallback.h:3126
#: include/linux/atomic/atomic-arch-fallback.h:3152
#: include/linux/atomic/atomic-arch-fallback.h:3178
#: include/linux/atomic/atomic-arch-fallback.h:3203
#: include/linux/atomic/atomic-arch-fallback.h:3225
#: include/linux/atomic/atomic-arch-fallback.h:3251
#: include/linux/atomic/atomic-arch-fallback.h:3277
#: include/linux/atomic/atomic-arch-fallback.h:3302
#: include/linux/atomic/atomic-arch-fallback.h:3324
#: include/linux/atomic/atomic-arch-fallback.h:3344
#: include/linux/atomic/atomic-arch-fallback.h:3370
#: include/linux/atomic/atomic-arch-fallback.h:3396
#: include/linux/atomic/atomic-arch-fallback.h:3421
#: include/linux/atomic/atomic-arch-fallback.h:3443
#: include/linux/atomic/atomic-arch-fallback.h:3469
#: include/linux/atomic/atomic-arch-fallback.h:3495
#: include/linux/atomic/atomic-arch-fallback.h:3520
#: include/linux/atomic/atomic-arch-fallback.h:3543
#: include/linux/atomic/atomic-arch-fallback.h:3560
#: include/linux/atomic/atomic-arch-fallback.h:3587
#: include/linux/atomic/atomic-arch-fallback.h:3614
#: include/linux/atomic/atomic-arch-fallback.h:3640
#: include/linux/atomic/atomic-arch-fallback.h:3663
#: include/linux/atomic/atomic-arch-fallback.h:3684
#: include/linux/atomic/atomic-arch-fallback.h:3711
#: include/linux/atomic/atomic-arch-fallback.h:3738
#: include/linux/atomic/atomic-arch-fallback.h:3764
#: include/linux/atomic/atomic-arch-fallback.h:3787
#: include/linux/atomic/atomic-arch-fallback.h:3804
#: include/linux/atomic/atomic-arch-fallback.h:3831
#: include/linux/atomic/atomic-arch-fallback.h:3858
#: include/linux/atomic/atomic-arch-fallback.h:3884
#: include/linux/atomic/atomic-arch-fallback.h:3907
#: include/linux/atomic/atomic-arch-fallback.h:3924
#: include/linux/atomic/atomic-arch-fallback.h:3951
#: include/linux/atomic/atomic-arch-fallback.h:3978
#: include/linux/atomic/atomic-arch-fallback.h:4004
#: include/linux/atomic/atomic-arch-fallback.h:4026
#: include/linux/atomic/atomic-arch-fallback.h:4053
#: include/linux/atomic/atomic-arch-fallback.h:4080
#: include/linux/atomic/atomic-arch-fallback.h:4106
#: include/linux/atomic/atomic-arch-fallback.h:4129
#: include/linux/atomic/atomic-arch-fallback.h:4158
#: include/linux/atomic/atomic-arch-fallback.h:4187
#: include/linux/atomic/atomic-arch-fallback.h:4215
#: include/linux/atomic/atomic-arch-fallback.h:4240
#: include/linux/atomic/atomic-arch-fallback.h:4274
#: include/linux/atomic/atomic-arch-fallback.h:4308
#: include/linux/atomic/atomic-arch-fallback.h:4341
#: include/linux/atomic/atomic-arch-fallback.h:4372
#: include/linux/atomic/atomic-arch-fallback.h:4392
#: include/linux/atomic/atomic-arch-fallback.h:4412
#: include/linux/atomic/atomic-arch-fallback.h:4433
#: include/linux/atomic/atomic-arch-fallback.h:4460
#: include/linux/atomic/atomic-arch-fallback.h:4487
#: include/linux/atomic/atomic-arch-fallback.h:4513
#: include/linux/atomic/atomic-arch-fallback.h:4535
#: include/linux/atomic/atomic-arch-fallback.h:4565
#: include/linux/atomic/atomic-arch-fallback.h:4588
#: include/linux/atomic/atomic-arch-fallback.h:4609
#: include/linux/atomic/atomic-arch-fallback.h:4637
#: include/linux/atomic/atomic-arch-fallback.h:4665
msgid "pointer to atomic64_t"
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1602
msgid "Unsafe to use in noinstr code; use raw_atomic64_read() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1619
msgid "Unsafe to use in noinstr code; use raw_atomic64_read_acquire() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1638
#: include/linux/atomic/atomic-instrumented.h:1656
#: include/linux/atomic/atomic-instrumented.h:1672
#: include/linux/atomic/atomic-instrumented.h:1690
#: include/linux/atomic/atomic-instrumented.h:1709
#: include/linux/atomic/atomic-instrumented.h:1727
#: include/linux/atomic/atomic-instrumented.h:1746
#: include/linux/atomic/atomic-instrumented.h:1764
#: include/linux/atomic/atomic-instrumented.h:1783
#: include/linux/atomic/atomic-instrumented.h:1801
#: include/linux/atomic/atomic-instrumented.h:1820
#: include/linux/atomic/atomic-instrumented.h:1838
#: include/linux/atomic/atomic-instrumented.h:1856
#: include/linux/atomic/atomic-instrumented.h:1875
#: include/linux/atomic/atomic-instrumented.h:1893
#: include/linux/atomic/atomic-instrumented.h:1912
#: include/linux/atomic/atomic-instrumented.h:1930
#: include/linux/atomic/atomic-instrumented.h:1949
#: include/linux/atomic/atomic-instrumented.h:1967
#: include/linux/atomic/atomic-instrumented.h:1986
#: include/linux/atomic/atomic-instrumented.h:2007
#: include/linux/atomic/atomic-instrumented.h:2024
#: include/linux/atomic/atomic-instrumented.h:2042
#: include/linux/atomic/atomic-instrumented.h:2059
#: include/linux/atomic/atomic-instrumented.h:2077
#: include/linux/atomic/atomic-instrumented.h:2094
#: include/linux/atomic/atomic-instrumented.h:2112
#: include/linux/atomic/atomic-instrumented.h:2129
#: include/linux/atomic/atomic-instrumented.h:2147
#: include/linux/atomic/atomic-instrumented.h:2164
#: include/linux/atomic/atomic-instrumented.h:2181
#: include/linux/atomic/atomic-instrumented.h:2199
#: include/linux/atomic/atomic-instrumented.h:2216
#: include/linux/atomic/atomic-instrumented.h:2234
#: include/linux/atomic/atomic-instrumented.h:2251
#: include/linux/atomic/atomic-instrumented.h:2269
#: include/linux/atomic/atomic-instrumented.h:2286
#: include/linux/atomic/atomic-instrumented.h:2304
#: include/linux/atomic/atomic-instrumented.h:2318
#: include/linux/atomic/atomic-instrumented.h:2336
#: include/linux/atomic/atomic-instrumented.h:2355
#: include/linux/atomic/atomic-instrumented.h:2373
#: include/linux/atomic/atomic-instrumented.h:2392
#: include/linux/atomic/atomic-instrumented.h:2410
#: include/linux/atomic/atomic-instrumented.h:2428
#: include/linux/atomic/atomic-instrumented.h:2447
#: include/linux/atomic/atomic-instrumented.h:2465
#: include/linux/atomic/atomic-instrumented.h:2484
#: include/linux/atomic/atomic-instrumented.h:2502
#: include/linux/atomic/atomic-instrumented.h:2520
#: include/linux/atomic/atomic-instrumented.h:2539
#: include/linux/atomic/atomic-instrumented.h:2557
#: include/linux/atomic/atomic-instrumented.h:2576
#: include/linux/atomic/atomic-instrumented.h:2594
#: include/linux/atomic/atomic-instrumented.h:2612
#: include/linux/atomic/atomic-instrumented.h:2631
#: include/linux/atomic/atomic-instrumented.h:2649
#: include/linux/atomic/atomic-instrumented.h:2668
#: include/linux/atomic/atomic-instrumented.h:2689
#: include/linux/atomic/atomic-instrumented.h:2708
#: include/linux/atomic/atomic-instrumented.h:2726
#: include/linux/atomic/atomic-instrumented.h:2745
#: include/linux/atomic/atomic-instrumented.h:2763
#: include/linux/atomic/atomic-instrumented.h:2784
#: include/linux/atomic/atomic-instrumented.h:2804
#: include/linux/atomic/atomic-instrumented.h:2825
#: include/linux/atomic/atomic-instrumented.h:2845
#: include/linux/atomic/atomic-instrumented.h:2868
#: include/linux/atomic/atomic-instrumented.h:2890
#: include/linux/atomic/atomic-instrumented.h:2913
#: include/linux/atomic/atomic-instrumented.h:2932
#: include/linux/atomic/atomic-instrumented.h:2954
#: include/linux/atomic/atomic-instrumented.h:2972
#: include/linux/atomic/atomic-instrumented.h:2987
#: include/linux/atomic/atomic-instrumented.h:3006
#: include/linux/atomic/atomic-instrumented.h:3024
#: include/linux/atomic/atomic-instrumented.h:3043
#: include/linux/atomic/atomic-instrumented.h:3064
#: include/linux/atomic/atomic-instrumented.h:3085
#: include/linux/atomic/atomic-instrumented.h:3106
#: include/linux/atomic/atomic-instrumented.h:3125
#: include/linux/atomic/atomic-instrumented.h:3144
#: include/linux/atomic/atomic-instrumented.h:3163
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2622
#: include/linux/atomic/atomic-arch-fallback.h:2639
#: include/linux/atomic/atomic-arch-fallback.h:2662
#: include/linux/atomic/atomic-arch-fallback.h:2679
#: include/linux/atomic/atomic-arch-fallback.h:2706
#: include/linux/atomic/atomic-arch-fallback.h:2733
#: include/linux/atomic/atomic-arch-fallback.h:2759
#: include/linux/atomic/atomic-arch-fallback.h:2782
#: include/linux/atomic/atomic-arch-fallback.h:2809
#: include/linux/atomic/atomic-arch-fallback.h:2836
#: include/linux/atomic/atomic-arch-fallback.h:2862
#: include/linux/atomic/atomic-arch-fallback.h:2885
#: include/linux/atomic/atomic-arch-fallback.h:2902
#: include/linux/atomic/atomic-arch-fallback.h:2929
#: include/linux/atomic/atomic-arch-fallback.h:2956
#: include/linux/atomic/atomic-arch-fallback.h:2982
#: include/linux/atomic/atomic-arch-fallback.h:3005
#: include/linux/atomic/atomic-arch-fallback.h:3032
#: include/linux/atomic/atomic-arch-fallback.h:3059
#: include/linux/atomic/atomic-arch-fallback.h:3085
#: include/linux/atomic/atomic-arch-fallback.h:3111
#: include/linux/atomic/atomic-arch-fallback.h:3131
#: include/linux/atomic/atomic-arch-fallback.h:3157
#: include/linux/atomic/atomic-arch-fallback.h:3183
#: include/linux/atomic/atomic-arch-fallback.h:3208
#: include/linux/atomic/atomic-arch-fallback.h:3230
#: include/linux/atomic/atomic-arch-fallback.h:3256
#: include/linux/atomic/atomic-arch-fallback.h:3282
#: include/linux/atomic/atomic-arch-fallback.h:3307
#: include/linux/atomic/atomic-arch-fallback.h:3329
#: include/linux/atomic/atomic-arch-fallback.h:3349
#: include/linux/atomic/atomic-arch-fallback.h:3375
#: include/linux/atomic/atomic-arch-fallback.h:3401
#: include/linux/atomic/atomic-arch-fallback.h:3426
#: include/linux/atomic/atomic-arch-fallback.h:3448
#: include/linux/atomic/atomic-arch-fallback.h:3474
#: include/linux/atomic/atomic-arch-fallback.h:3500
#: include/linux/atomic/atomic-arch-fallback.h:3525
#: include/linux/atomic/atomic-arch-fallback.h:3544
#: include/linux/atomic/atomic-arch-fallback.h:3561
#: include/linux/atomic/atomic-arch-fallback.h:3588
#: include/linux/atomic/atomic-arch-fallback.h:3615
#: include/linux/atomic/atomic-arch-fallback.h:3641
#: include/linux/atomic/atomic-arch-fallback.h:3664
#: include/linux/atomic/atomic-arch-fallback.h:3685
#: include/linux/atomic/atomic-arch-fallback.h:3712
#: include/linux/atomic/atomic-arch-fallback.h:3739
#: include/linux/atomic/atomic-arch-fallback.h:3765
#: include/linux/atomic/atomic-arch-fallback.h:3788
#: include/linux/atomic/atomic-arch-fallback.h:3805
#: include/linux/atomic/atomic-arch-fallback.h:3832
#: include/linux/atomic/atomic-arch-fallback.h:3859
#: include/linux/atomic/atomic-arch-fallback.h:3885
#: include/linux/atomic/atomic-arch-fallback.h:3908
#: include/linux/atomic/atomic-arch-fallback.h:3925
#: include/linux/atomic/atomic-arch-fallback.h:3952
#: include/linux/atomic/atomic-arch-fallback.h:3979
#: include/linux/atomic/atomic-arch-fallback.h:4005
#: include/linux/atomic/atomic-arch-fallback.h:4031
#: include/linux/atomic/atomic-arch-fallback.h:4058
#: include/linux/atomic/atomic-arch-fallback.h:4085
#: include/linux/atomic/atomic-arch-fallback.h:4111
#: include/linux/atomic/atomic-arch-fallback.h:4134
#: include/linux/atomic/atomic-arch-fallback.h:4163
#: include/linux/atomic/atomic-arch-fallback.h:4192
#: include/linux/atomic/atomic-arch-fallback.h:4220
#: include/linux/atomic/atomic-arch-fallback.h:4245
#: include/linux/atomic/atomic-arch-fallback.h:4279
#: include/linux/atomic/atomic-arch-fallback.h:4313
#: include/linux/atomic/atomic-arch-fallback.h:4346
#: include/linux/atomic/atomic-arch-fallback.h:4373
#: include/linux/atomic/atomic-arch-fallback.h:4397
#: include/linux/atomic/atomic-arch-fallback.h:4417
#: include/linux/atomic/atomic-arch-fallback.h:4434
#: include/linux/atomic/atomic-arch-fallback.h:4461
#: include/linux/atomic/atomic-arch-fallback.h:4488
#: include/linux/atomic/atomic-arch-fallback.h:4514
#: include/linux/atomic/atomic-arch-fallback.h:4540
#: include/linux/atomic/atomic-arch-fallback.h:4570
#: include/linux/atomic/atomic-arch-fallback.h:4593
#: include/linux/atomic/atomic-arch-fallback.h:4614
#: include/linux/atomic/atomic-arch-fallback.h:4642
#: include/linux/atomic/atomic-arch-fallback.h:4670
msgid "``atomic64_t *v``"
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1635
#: include/linux/atomic/atomic-instrumented.h:1653
#: include/linux/atomic/atomic-instrumented.h:1675
#: include/linux/atomic/atomic-instrumented.h:1693
#: include/linux/atomic/atomic-instrumented.h:1712
#: include/linux/atomic/atomic-instrumented.h:1730
#: include/linux/atomic/atomic-instrumented.h:1749
#: include/linux/atomic/atomic-instrumented.h:1767
#: include/linux/atomic/atomic-instrumented.h:1786
#: include/linux/atomic/atomic-instrumented.h:1804
#: include/linux/atomic/atomic-instrumented.h:1823
#: include/linux/atomic/atomic-instrumented.h:1841
#: include/linux/atomic/atomic-instrumented.h:1859
#: include/linux/atomic/atomic-instrumented.h:1878
#: include/linux/atomic/atomic-instrumented.h:1896
#: include/linux/atomic/atomic-instrumented.h:1915
#: include/linux/atomic/atomic-instrumented.h:1933
#: include/linux/atomic/atomic-instrumented.h:1952
#: include/linux/atomic/atomic-instrumented.h:1970
#: include/linux/atomic/atomic-instrumented.h:1989
#: include/linux/atomic/atomic-instrumented.h:2321
#: include/linux/atomic/atomic-instrumented.h:2339
#: include/linux/atomic/atomic-instrumented.h:2358
#: include/linux/atomic/atomic-instrumented.h:2376
#: include/linux/atomic/atomic-instrumented.h:2395
#: include/linux/atomic/atomic-instrumented.h:2413
#: include/linux/atomic/atomic-instrumented.h:2431
#: include/linux/atomic/atomic-instrumented.h:2450
#: include/linux/atomic/atomic-instrumented.h:2468
#: include/linux/atomic/atomic-instrumented.h:2487
#: include/linux/atomic/atomic-instrumented.h:2505
#: include/linux/atomic/atomic-instrumented.h:2523
#: include/linux/atomic/atomic-instrumented.h:2542
#: include/linux/atomic/atomic-instrumented.h:2560
#: include/linux/atomic/atomic-instrumented.h:2579
#: include/linux/atomic/atomic-instrumented.h:2597
#: include/linux/atomic/atomic-instrumented.h:2615
#: include/linux/atomic/atomic-instrumented.h:2634
#: include/linux/atomic/atomic-instrumented.h:2652
#: include/linux/atomic/atomic-instrumented.h:2671
#: include/linux/atomic/atomic-instrumented.h:2935
#: include/linux/atomic/atomic-instrumented.h:2990
#: include/linux/atomic/atomic-instrumented.h:3009
#: include/linux/atomic/atomic-instrumented.h:3027
#: include/linux/atomic/atomic-instrumented.h:3046
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2619
#: include/linux/atomic/atomic-arch-fallback.h:2636
#: include/linux/atomic/atomic-arch-fallback.h:2665
#: include/linux/atomic/atomic-arch-fallback.h:2682
#: include/linux/atomic/atomic-arch-fallback.h:2709
#: include/linux/atomic/atomic-arch-fallback.h:2736
#: include/linux/atomic/atomic-arch-fallback.h:2762
#: include/linux/atomic/atomic-arch-fallback.h:2785
#: include/linux/atomic/atomic-arch-fallback.h:2812
#: include/linux/atomic/atomic-arch-fallback.h:2839
#: include/linux/atomic/atomic-arch-fallback.h:2865
#: include/linux/atomic/atomic-arch-fallback.h:2888
#: include/linux/atomic/atomic-arch-fallback.h:2905
#: include/linux/atomic/atomic-arch-fallback.h:2932
#: include/linux/atomic/atomic-arch-fallback.h:2959
#: include/linux/atomic/atomic-arch-fallback.h:2985
#: include/linux/atomic/atomic-arch-fallback.h:3008
#: include/linux/atomic/atomic-arch-fallback.h:3035
#: include/linux/atomic/atomic-arch-fallback.h:3062
#: include/linux/atomic/atomic-arch-fallback.h:3088
#: include/linux/atomic/atomic-arch-fallback.h:3547
#: include/linux/atomic/atomic-arch-fallback.h:3564
#: include/linux/atomic/atomic-arch-fallback.h:3591
#: include/linux/atomic/atomic-arch-fallback.h:3618
#: include/linux/atomic/atomic-arch-fallback.h:3644
#: include/linux/atomic/atomic-arch-fallback.h:3667
#: include/linux/atomic/atomic-arch-fallback.h:3688
#: include/linux/atomic/atomic-arch-fallback.h:3715
#: include/linux/atomic/atomic-arch-fallback.h:3742
#: include/linux/atomic/atomic-arch-fallback.h:3768
#: include/linux/atomic/atomic-arch-fallback.h:3791
#: include/linux/atomic/atomic-arch-fallback.h:3808
#: include/linux/atomic/atomic-arch-fallback.h:3835
#: include/linux/atomic/atomic-arch-fallback.h:3862
#: include/linux/atomic/atomic-arch-fallback.h:3888
#: include/linux/atomic/atomic-arch-fallback.h:3911
#: include/linux/atomic/atomic-arch-fallback.h:3928
#: include/linux/atomic/atomic-arch-fallback.h:3955
#: include/linux/atomic/atomic-arch-fallback.h:3982
#: include/linux/atomic/atomic-arch-fallback.h:4008
#: include/linux/atomic/atomic-arch-fallback.h:4376
#: include/linux/atomic/atomic-arch-fallback.h:4437
#: include/linux/atomic/atomic-arch-fallback.h:4464
#: include/linux/atomic/atomic-arch-fallback.h:4491
#: include/linux/atomic/atomic-arch-fallback.h:4517
msgid "``s64 i``"
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1634
#: include/linux/atomic/atomic-instrumented.h:1652
#: include/linux/atomic/atomic-instrumented.h:2685
#: include/linux/atomic/atomic-instrumented.h:2704
#: include/linux/atomic/atomic-instrumented.h:2722
#: include/linux/atomic/atomic-instrumented.h:2741
#: include/linux/atomic/atomic-instrumented.h:2760
#: include/linux/atomic/atomic-instrumented.h:2781
#: include/linux/atomic/atomic-instrumented.h:2801
#: include/linux/atomic/atomic-instrumented.h:2822
#: include/linux/atomic/atomic-instrumented.h:2842
#: include/linux/atomic/atomic-instrumented.h:2865
#: include/linux/atomic/atomic-instrumented.h:2887
#: include/linux/atomic/atomic-instrumented.h:2910
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2618
#: include/linux/atomic/atomic-arch-fallback.h:2635
#: include/linux/atomic/atomic-arch-fallback.h:4027
#: include/linux/atomic/atomic-arch-fallback.h:4054
#: include/linux/atomic/atomic-arch-fallback.h:4081
#: include/linux/atomic/atomic-arch-fallback.h:4107
#: include/linux/atomic/atomic-arch-fallback.h:4131
#: include/linux/atomic/atomic-arch-fallback.h:4160
#: include/linux/atomic/atomic-arch-fallback.h:4189
#: include/linux/atomic/atomic-arch-fallback.h:4217
#: include/linux/atomic/atomic-arch-fallback.h:4242
#: include/linux/atomic/atomic-arch-fallback.h:4276
#: include/linux/atomic/atomic-arch-fallback.h:4310
#: include/linux/atomic/atomic-arch-fallback.h:4343
msgid "s64 value to assign"
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1637
msgid "Unsafe to use in noinstr code; use raw_atomic64_set() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1655
msgid "Unsafe to use in noinstr code; use raw_atomic64_set_release() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1670
#: include/linux/atomic/atomic-instrumented.h:1688
#: include/linux/atomic/atomic-instrumented.h:1707
#: include/linux/atomic/atomic-instrumented.h:1725
#: include/linux/atomic/atomic-instrumented.h:1744
#: include/linux/atomic/atomic-instrumented.h:1762
#: include/linux/atomic/atomic-instrumented.h:1781
#: include/linux/atomic/atomic-instrumented.h:1799
#: include/linux/atomic/atomic-instrumented.h:1818
#: include/linux/atomic/atomic-instrumented.h:2985
#: include/linux/atomic/atomic-instrumented.h:3004
#: include/linux/atomic/atomic-instrumented.h:3022
#: include/linux/atomic/atomic-instrumented.h:3041
#: include/linux/atomic/atomic-instrumented.h:3060
#: include/linux/atomic/atomic-instrumented.h:3081
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2660
#: include/linux/atomic/atomic-arch-fallback.h:2677
#: include/linux/atomic/atomic-arch-fallback.h:2704
#: include/linux/atomic/atomic-arch-fallback.h:2731
#: include/linux/atomic/atomic-arch-fallback.h:2757
#: include/linux/atomic/atomic-arch-fallback.h:2780
#: include/linux/atomic/atomic-arch-fallback.h:2807
#: include/linux/atomic/atomic-arch-fallback.h:2834
#: include/linux/atomic/atomic-arch-fallback.h:2860
#: include/linux/atomic/atomic-arch-fallback.h:4432
#: include/linux/atomic/atomic-arch-fallback.h:4459
#: include/linux/atomic/atomic-arch-fallback.h:4486
#: include/linux/atomic/atomic-arch-fallback.h:4512
#: include/linux/atomic/atomic-arch-fallback.h:4536
#: include/linux/atomic/atomic-arch-fallback.h:4566
msgid "s64 value to add"
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1674
msgid "Unsafe to use in noinstr code; use raw_atomic64_add() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1692
msgid "Unsafe to use in noinstr code; use raw_atomic64_add_return() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1711
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_add_return_acquire() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1729
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_add_return_release() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1748
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_add_return_relaxed() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1766
msgid "Unsafe to use in noinstr code; use raw_atomic64_fetch_add() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1785
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_fetch_add_acquire() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1803
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_fetch_add_release() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1822
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_fetch_add_relaxed() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1836
#: include/linux/atomic/atomic-instrumented.h:1854
#: include/linux/atomic/atomic-instrumented.h:1873
#: include/linux/atomic/atomic-instrumented.h:1891
#: include/linux/atomic/atomic-instrumented.h:1910
#: include/linux/atomic/atomic-instrumented.h:1928
#: include/linux/atomic/atomic-instrumented.h:1947
#: include/linux/atomic/atomic-instrumented.h:1965
#: include/linux/atomic/atomic-instrumented.h:1984
#: include/linux/atomic/atomic-instrumented.h:2930
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2883
#: include/linux/atomic/atomic-arch-fallback.h:2900
#: include/linux/atomic/atomic-arch-fallback.h:2927
#: include/linux/atomic/atomic-arch-fallback.h:2954
#: include/linux/atomic/atomic-arch-fallback.h:2980
#: include/linux/atomic/atomic-arch-fallback.h:3003
#: include/linux/atomic/atomic-arch-fallback.h:3030
#: include/linux/atomic/atomic-arch-fallback.h:3057
#: include/linux/atomic/atomic-arch-fallback.h:3083
#: include/linux/atomic/atomic-arch-fallback.h:4371
msgid "s64 value to subtract"
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1840
msgid "Unsafe to use in noinstr code; use raw_atomic64_sub() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1858
msgid "Unsafe to use in noinstr code; use raw_atomic64_sub_return() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1877
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_sub_return_acquire() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1895
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_sub_return_release() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1914
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_sub_return_relaxed() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1932
msgid "Unsafe to use in noinstr code; use raw_atomic64_fetch_sub() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1951
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_fetch_sub_acquire() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1969
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_fetch_sub_release() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:1988
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_fetch_sub_relaxed() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2005
msgid "Unsafe to use in noinstr code; use raw_atomic64_inc() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2022
msgid "Unsafe to use in noinstr code; use raw_atomic64_inc_return() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2040
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_inc_return_acquire() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2057
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_inc_return_release() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2075
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_inc_return_relaxed() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2092
msgid "Unsafe to use in noinstr code; use raw_atomic64_fetch_inc() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2110
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_fetch_inc_acquire() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2127
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_fetch_inc_release() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2145
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_fetch_inc_relaxed() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2162
msgid "Unsafe to use in noinstr code; use raw_atomic64_dec() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2179
msgid "Unsafe to use in noinstr code; use raw_atomic64_dec_return() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2197
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_dec_return_acquire() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2214
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_dec_return_release() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2232
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_dec_return_relaxed() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2249
msgid "Unsafe to use in noinstr code; use raw_atomic64_fetch_dec() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2267
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_fetch_dec_acquire() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2284
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_fetch_dec_release() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2302
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_fetch_dec_relaxed() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2316
#: include/linux/atomic/atomic-instrumented.h:2334
#: include/linux/atomic/atomic-instrumented.h:2353
#: include/linux/atomic/atomic-instrumented.h:2371
#: include/linux/atomic/atomic-instrumented.h:2390
#: include/linux/atomic/atomic-instrumented.h:2408
#: include/linux/atomic/atomic-instrumented.h:2426
#: include/linux/atomic/atomic-instrumented.h:2445
#: include/linux/atomic/atomic-instrumented.h:2463
#: include/linux/atomic/atomic-instrumented.h:2482
#: include/linux/atomic/atomic-instrumented.h:2500
#: include/linux/atomic/atomic-instrumented.h:2518
#: include/linux/atomic/atomic-instrumented.h:2537
#: include/linux/atomic/atomic-instrumented.h:2555
#: include/linux/atomic/atomic-instrumented.h:2574
#: include/linux/atomic/atomic-instrumented.h:2592
#: include/linux/atomic/atomic-instrumented.h:2610
#: include/linux/atomic/atomic-instrumented.h:2629
#: include/linux/atomic/atomic-instrumented.h:2647
#: include/linux/atomic/atomic-instrumented.h:2666
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:3542
#: include/linux/atomic/atomic-arch-fallback.h:3559
#: include/linux/atomic/atomic-arch-fallback.h:3586
#: include/linux/atomic/atomic-arch-fallback.h:3613
#: include/linux/atomic/atomic-arch-fallback.h:3639
#: include/linux/atomic/atomic-arch-fallback.h:3662
#: include/linux/atomic/atomic-arch-fallback.h:3683
#: include/linux/atomic/atomic-arch-fallback.h:3710
#: include/linux/atomic/atomic-arch-fallback.h:3737
#: include/linux/atomic/atomic-arch-fallback.h:3763
#: include/linux/atomic/atomic-arch-fallback.h:3786
#: include/linux/atomic/atomic-arch-fallback.h:3803
#: include/linux/atomic/atomic-arch-fallback.h:3830
#: include/linux/atomic/atomic-arch-fallback.h:3857
#: include/linux/atomic/atomic-arch-fallback.h:3883
#: include/linux/atomic/atomic-arch-fallback.h:3906
#: include/linux/atomic/atomic-arch-fallback.h:3923
#: include/linux/atomic/atomic-arch-fallback.h:3950
#: include/linux/atomic/atomic-arch-fallback.h:3977
#: include/linux/atomic/atomic-arch-fallback.h:4003
msgid "s64 value"
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2320
msgid "Unsafe to use in noinstr code; use raw_atomic64_and() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2338
msgid "Unsafe to use in noinstr code; use raw_atomic64_fetch_and() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2357
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_fetch_and_acquire() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2375
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_fetch_and_release() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2394
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_fetch_and_relaxed() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2412
msgid "Unsafe to use in noinstr code; use raw_atomic64_andnot() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2430
msgid "Unsafe to use in noinstr code; use raw_atomic64_fetch_andnot() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2449
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_fetch_andnot_acquire() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2467
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_fetch_andnot_release() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2486
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_fetch_andnot_relaxed() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2504
msgid "Unsafe to use in noinstr code; use raw_atomic64_or() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2522
msgid "Unsafe to use in noinstr code; use raw_atomic64_fetch_or() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2541
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_fetch_or_acquire() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2559
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_fetch_or_release() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2578
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_fetch_or_relaxed() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2596
msgid "Unsafe to use in noinstr code; use raw_atomic64_xor() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2614
msgid "Unsafe to use in noinstr code; use raw_atomic64_fetch_xor() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2633
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_fetch_xor_acquire() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2651
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_fetch_xor_release() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2670
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_fetch_xor_relaxed() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2686
#: include/linux/atomic/atomic-instrumented.h:2705
#: include/linux/atomic/atomic-instrumented.h:2723
#: include/linux/atomic/atomic-instrumented.h:2742
#: include/linux/atomic/atomic-instrumented.h:2761
#: include/linux/atomic/atomic-instrumented.h:2782
#: include/linux/atomic/atomic-instrumented.h:2802
#: include/linux/atomic/atomic-instrumented.h:2823
#: include/linux/atomic/atomic-instrumented.h:2843
#: include/linux/atomic/atomic-instrumented.h:2866
#: include/linux/atomic/atomic-instrumented.h:2888
#: include/linux/atomic/atomic-instrumented.h:2911
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:4028
#: include/linux/atomic/atomic-arch-fallback.h:4055
#: include/linux/atomic/atomic-arch-fallback.h:4082
#: include/linux/atomic/atomic-arch-fallback.h:4108
#: include/linux/atomic/atomic-arch-fallback.h:4132
#: include/linux/atomic/atomic-arch-fallback.h:4161
#: include/linux/atomic/atomic-arch-fallback.h:4190
#: include/linux/atomic/atomic-arch-fallback.h:4218
#: include/linux/atomic/atomic-arch-fallback.h:4243
#: include/linux/atomic/atomic-arch-fallback.h:4277
#: include/linux/atomic/atomic-arch-fallback.h:4311
#: include/linux/atomic/atomic-arch-fallback.h:4344
msgid "``s64 new``"
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2688
msgid "Unsafe to use in noinstr code; use raw_atomic64_xchg() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2707
msgid "Unsafe to use in noinstr code; use raw_atomic64_xchg_acquire() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2725
msgid "Unsafe to use in noinstr code; use raw_atomic64_xchg_release() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2744
msgid "Unsafe to use in noinstr code; use raw_atomic64_xchg_relaxed() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2760
#: include/linux/atomic/atomic-instrumented.h:2781
#: include/linux/atomic/atomic-instrumented.h:2801
#: include/linux/atomic/atomic-instrumented.h:2822
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:4131
#: include/linux/atomic/atomic-arch-fallback.h:4160
#: include/linux/atomic/atomic-arch-fallback.h:4189
#: include/linux/atomic/atomic-arch-fallback.h:4217
msgid "``s64 old``"
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2759
#: include/linux/atomic/atomic-instrumented.h:2780
#: include/linux/atomic/atomic-instrumented.h:2800
#: include/linux/atomic/atomic-instrumented.h:2821
#: include/linux/atomic/atomic-instrumented.h:3061
#: include/linux/atomic/atomic-instrumented.h:3082
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:4130
#: include/linux/atomic/atomic-arch-fallback.h:4159
#: include/linux/atomic/atomic-arch-fallback.h:4188
#: include/linux/atomic/atomic-arch-fallback.h:4216
#: include/linux/atomic/atomic-arch-fallback.h:4537
#: include/linux/atomic/atomic-arch-fallback.h:4567
msgid "s64 value to compare with"
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2764
msgid "Unsafe to use in noinstr code; use raw_atomic64_cmpxchg() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2785
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_cmpxchg_acquire() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2805
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_cmpxchg_release() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2826
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_cmpxchg_relaxed() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2842
#: include/linux/atomic/atomic-instrumented.h:2865
#: include/linux/atomic/atomic-instrumented.h:2887
#: include/linux/atomic/atomic-instrumented.h:2910
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:4242
#: include/linux/atomic/atomic-arch-fallback.h:4276
#: include/linux/atomic/atomic-arch-fallback.h:4310
#: include/linux/atomic/atomic-arch-fallback.h:4343
msgid "``s64 *old``"
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2841
#: include/linux/atomic/atomic-instrumented.h:2864
#: include/linux/atomic/atomic-instrumented.h:2886
#: include/linux/atomic/atomic-instrumented.h:2909
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:4241
#: include/linux/atomic/atomic-arch-fallback.h:4275
#: include/linux/atomic/atomic-arch-fallback.h:4309
#: include/linux/atomic/atomic-arch-fallback.h:4342
msgid "pointer to s64 value to compare with"
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2847
msgid "Unsafe to use in noinstr code; use raw_atomic64_try_cmpxchg() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2870
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_try_cmpxchg_acquire() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2892
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_try_cmpxchg_release() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2915
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_try_cmpxchg_relaxed() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2934
msgid "Unsafe to use in noinstr code; use raw_atomic64_sub_and_test() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2952
msgid "Unsafe to use in noinstr code; use raw_atomic64_dec_and_test() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2970
msgid "Unsafe to use in noinstr code; use raw_atomic64_inc_and_test() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:2989
msgid "Unsafe to use in noinstr code; use raw_atomic64_add_negative() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3008
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_add_negative_acquire() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3026
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_add_negative_release() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3045
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_add_negative_relaxed() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3061
#: include/linux/atomic/atomic-instrumented.h:3082
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:4537
#: include/linux/atomic/atomic-arch-fallback.h:4567
msgid "``s64 a``"
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3062
#: include/linux/atomic/atomic-instrumented.h:3083
#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:4538
#: include/linux/atomic/atomic-arch-fallback.h:4568
msgid "``s64 u``"
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3065
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_fetch_add_unless() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3086
msgid "Unsafe to use in noinstr code; use raw_atomic64_add_unless() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3105
msgid "Unsafe to use in noinstr code; use raw_atomic64_inc_not_zero() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3124
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_inc_unless_negative() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3143
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_dec_unless_positive() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3162
msgid ""
"Unsafe to use in noinstr code; use raw_atomic64_dec_if_positive() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:31
#: include/linux/atomic/atomic-long.h:51 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3182
#: include/linux/atomic/atomic-instrumented.h:3199
msgid "``const atomic_long_t *v``"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:26
#: include/linux/atomic/atomic-long.h:46 include/linux/atomic/atomic-long.h:66
#: include/linux/atomic/atomic-long.h:87 include/linux/atomic/atomic-long.h:109
#: include/linux/atomic/atomic-long.h:130
#: include/linux/atomic/atomic-long.h:151
#: include/linux/atomic/atomic-long.h:172
#: include/linux/atomic/atomic-long.h:193
#: include/linux/atomic/atomic-long.h:214
#: include/linux/atomic/atomic-long.h:235
#: include/linux/atomic/atomic-long.h:256
#: include/linux/atomic/atomic-long.h:277
#: include/linux/atomic/atomic-long.h:298
#: include/linux/atomic/atomic-long.h:319
#: include/linux/atomic/atomic-long.h:340
#: include/linux/atomic/atomic-long.h:361
#: include/linux/atomic/atomic-long.h:382
#: include/linux/atomic/atomic-long.h:403
#: include/linux/atomic/atomic-long.h:424
#: include/linux/atomic/atomic-long.h:445
#: include/linux/atomic/atomic-long.h:466
#: include/linux/atomic/atomic-long.h:486
#: include/linux/atomic/atomic-long.h:506
#: include/linux/atomic/atomic-long.h:526
#: include/linux/atomic/atomic-long.h:546
#: include/linux/atomic/atomic-long.h:566
#: include/linux/atomic/atomic-long.h:586
#: include/linux/atomic/atomic-long.h:606
#: include/linux/atomic/atomic-long.h:626
#: include/linux/atomic/atomic-long.h:646
#: include/linux/atomic/atomic-long.h:666
#: include/linux/atomic/atomic-long.h:686
#: include/linux/atomic/atomic-long.h:706
#: include/linux/atomic/atomic-long.h:726
#: include/linux/atomic/atomic-long.h:746
#: include/linux/atomic/atomic-long.h:766
#: include/linux/atomic/atomic-long.h:786
#: include/linux/atomic/atomic-long.h:806
#: include/linux/atomic/atomic-long.h:826
#: include/linux/atomic/atomic-long.h:847
#: include/linux/atomic/atomic-long.h:868
#: include/linux/atomic/atomic-long.h:889
#: include/linux/atomic/atomic-long.h:910
#: include/linux/atomic/atomic-long.h:931
#: include/linux/atomic/atomic-long.h:952
#: include/linux/atomic/atomic-long.h:973
#: include/linux/atomic/atomic-long.h:994
#: include/linux/atomic/atomic-long.h:1015
#: include/linux/atomic/atomic-long.h:1036
#: include/linux/atomic/atomic-long.h:1057
#: include/linux/atomic/atomic-long.h:1078
#: include/linux/atomic/atomic-long.h:1099
#: include/linux/atomic/atomic-long.h:1120
#: include/linux/atomic/atomic-long.h:1141
#: include/linux/atomic/atomic-long.h:1162
#: include/linux/atomic/atomic-long.h:1183
#: include/linux/atomic/atomic-long.h:1204
#: include/linux/atomic/atomic-long.h:1225
#: include/linux/atomic/atomic-long.h:1246
#: include/linux/atomic/atomic-long.h:1266
#: include/linux/atomic/atomic-long.h:1287
#: include/linux/atomic/atomic-long.h:1308
#: include/linux/atomic/atomic-long.h:1329
#: include/linux/atomic/atomic-long.h:1350
#: include/linux/atomic/atomic-long.h:1373
#: include/linux/atomic/atomic-long.h:1396
#: include/linux/atomic/atomic-long.h:1419
#: include/linux/atomic/atomic-long.h:1442
#: include/linux/atomic/atomic-long.h:1466
#: include/linux/atomic/atomic-long.h:1490
#: include/linux/atomic/atomic-long.h:1514
#: include/linux/atomic/atomic-long.h:1539
#: include/linux/atomic/atomic-long.h:1559
#: include/linux/atomic/atomic-long.h:1579
#: include/linux/atomic/atomic-long.h:1600
#: include/linux/atomic/atomic-long.h:1621
#: include/linux/atomic/atomic-long.h:1642
#: include/linux/atomic/atomic-long.h:1663
#: include/linux/atomic/atomic-long.h:1683
#: include/linux/atomic/atomic-long.h:1706
#: include/linux/atomic/atomic-long.h:1729
#: include/linux/atomic/atomic-long.h:1750
#: include/linux/atomic/atomic-long.h:1771
#: include/linux/atomic/atomic-long.h:1792 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3177
#: include/linux/atomic/atomic-instrumented.h:3194
#: include/linux/atomic/atomic-instrumented.h:3211
#: include/linux/atomic/atomic-instrumented.h:3229
#: include/linux/atomic/atomic-instrumented.h:3249
#: include/linux/atomic/atomic-instrumented.h:3267
#: include/linux/atomic/atomic-instrumented.h:3286
#: include/linux/atomic/atomic-instrumented.h:3304
#: include/linux/atomic/atomic-instrumented.h:3323
#: include/linux/atomic/atomic-instrumented.h:3341
#: include/linux/atomic/atomic-instrumented.h:3360
#: include/linux/atomic/atomic-instrumented.h:3378
#: include/linux/atomic/atomic-instrumented.h:3397
#: include/linux/atomic/atomic-instrumented.h:3415
#: include/linux/atomic/atomic-instrumented.h:3433
#: include/linux/atomic/atomic-instrumented.h:3452
#: include/linux/atomic/atomic-instrumented.h:3470
#: include/linux/atomic/atomic-instrumented.h:3489
#: include/linux/atomic/atomic-instrumented.h:3507
#: include/linux/atomic/atomic-instrumented.h:3526
#: include/linux/atomic/atomic-instrumented.h:3544
#: include/linux/atomic/atomic-instrumented.h:3563
#: include/linux/atomic/atomic-instrumented.h:3580
#: include/linux/atomic/atomic-instrumented.h:3597
#: include/linux/atomic/atomic-instrumented.h:3615
#: include/linux/atomic/atomic-instrumented.h:3632
#: include/linux/atomic/atomic-instrumented.h:3650
#: include/linux/atomic/atomic-instrumented.h:3667
#: include/linux/atomic/atomic-instrumented.h:3685
#: include/linux/atomic/atomic-instrumented.h:3702
#: include/linux/atomic/atomic-instrumented.h:3720
#: include/linux/atomic/atomic-instrumented.h:3737
#: include/linux/atomic/atomic-instrumented.h:3754
#: include/linux/atomic/atomic-instrumented.h:3772
#: include/linux/atomic/atomic-instrumented.h:3789
#: include/linux/atomic/atomic-instrumented.h:3807
#: include/linux/atomic/atomic-instrumented.h:3824
#: include/linux/atomic/atomic-instrumented.h:3842
#: include/linux/atomic/atomic-instrumented.h:3859
#: include/linux/atomic/atomic-instrumented.h:3877
#: include/linux/atomic/atomic-instrumented.h:3895
#: include/linux/atomic/atomic-instrumented.h:3913
#: include/linux/atomic/atomic-instrumented.h:3932
#: include/linux/atomic/atomic-instrumented.h:3950
#: include/linux/atomic/atomic-instrumented.h:3969
#: include/linux/atomic/atomic-instrumented.h:3987
#: include/linux/atomic/atomic-instrumented.h:4005
#: include/linux/atomic/atomic-instrumented.h:4024
#: include/linux/atomic/atomic-instrumented.h:4042
#: include/linux/atomic/atomic-instrumented.h:4061
#: include/linux/atomic/atomic-instrumented.h:4079
#: include/linux/atomic/atomic-instrumented.h:4097
#: include/linux/atomic/atomic-instrumented.h:4116
#: include/linux/atomic/atomic-instrumented.h:4134
#: include/linux/atomic/atomic-instrumented.h:4153
#: include/linux/atomic/atomic-instrumented.h:4171
#: include/linux/atomic/atomic-instrumented.h:4189
#: include/linux/atomic/atomic-instrumented.h:4208
#: include/linux/atomic/atomic-instrumented.h:4226
#: include/linux/atomic/atomic-instrumented.h:4245
#: include/linux/atomic/atomic-instrumented.h:4262
#: include/linux/atomic/atomic-instrumented.h:4281
#: include/linux/atomic/atomic-instrumented.h:4299
#: include/linux/atomic/atomic-instrumented.h:4318
#: include/linux/atomic/atomic-instrumented.h:4336
#: include/linux/atomic/atomic-instrumented.h:4357
#: include/linux/atomic/atomic-instrumented.h:4377
#: include/linux/atomic/atomic-instrumented.h:4398
#: include/linux/atomic/atomic-instrumented.h:4418
#: include/linux/atomic/atomic-instrumented.h:4441
#: include/linux/atomic/atomic-instrumented.h:4463
#: include/linux/atomic/atomic-instrumented.h:4486
#: include/linux/atomic/atomic-instrumented.h:4509
#: include/linux/atomic/atomic-instrumented.h:4527
#: include/linux/atomic/atomic-instrumented.h:4545
#: include/linux/atomic/atomic-instrumented.h:4564
#: include/linux/atomic/atomic-instrumented.h:4583
#: include/linux/atomic/atomic-instrumented.h:4601
#: include/linux/atomic/atomic-instrumented.h:4620
#: include/linux/atomic/atomic-instrumented.h:4637
#: include/linux/atomic/atomic-instrumented.h:4658
#: include/linux/atomic/atomic-instrumented.h:4679
#: include/linux/atomic/atomic-instrumented.h:4698
#: include/linux/atomic/atomic-instrumented.h:4717
#: include/linux/atomic/atomic-instrumented.h:4736
msgid "pointer to atomic_long_t"
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3180
msgid "Unsafe to use in noinstr code; use raw_atomic_long_read() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3197
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_read_acquire() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:71
#: include/linux/atomic/atomic-long.h:92 include/linux/atomic/atomic-long.h:110
#: include/linux/atomic/atomic-long.h:131
#: include/linux/atomic/atomic-long.h:152
#: include/linux/atomic/atomic-long.h:173
#: include/linux/atomic/atomic-long.h:194
#: include/linux/atomic/atomic-long.h:215
#: include/linux/atomic/atomic-long.h:236
#: include/linux/atomic/atomic-long.h:257
#: include/linux/atomic/atomic-long.h:278
#: include/linux/atomic/atomic-long.h:299
#: include/linux/atomic/atomic-long.h:320
#: include/linux/atomic/atomic-long.h:341
#: include/linux/atomic/atomic-long.h:362
#: include/linux/atomic/atomic-long.h:383
#: include/linux/atomic/atomic-long.h:404
#: include/linux/atomic/atomic-long.h:425
#: include/linux/atomic/atomic-long.h:446
#: include/linux/atomic/atomic-long.h:467
#: include/linux/atomic/atomic-long.h:491
#: include/linux/atomic/atomic-long.h:511
#: include/linux/atomic/atomic-long.h:531
#: include/linux/atomic/atomic-long.h:551
#: include/linux/atomic/atomic-long.h:571
#: include/linux/atomic/atomic-long.h:591
#: include/linux/atomic/atomic-long.h:611
#: include/linux/atomic/atomic-long.h:631
#: include/linux/atomic/atomic-long.h:651
#: include/linux/atomic/atomic-long.h:671
#: include/linux/atomic/atomic-long.h:691
#: include/linux/atomic/atomic-long.h:711
#: include/linux/atomic/atomic-long.h:731
#: include/linux/atomic/atomic-long.h:751
#: include/linux/atomic/atomic-long.h:771
#: include/linux/atomic/atomic-long.h:791
#: include/linux/atomic/atomic-long.h:811
#: include/linux/atomic/atomic-long.h:831
#: include/linux/atomic/atomic-long.h:848
#: include/linux/atomic/atomic-long.h:869
#: include/linux/atomic/atomic-long.h:890
#: include/linux/atomic/atomic-long.h:911
#: include/linux/atomic/atomic-long.h:932
#: include/linux/atomic/atomic-long.h:953
#: include/linux/atomic/atomic-long.h:974
#: include/linux/atomic/atomic-long.h:995
#: include/linux/atomic/atomic-long.h:1016
#: include/linux/atomic/atomic-long.h:1037
#: include/linux/atomic/atomic-long.h:1058
#: include/linux/atomic/atomic-long.h:1079
#: include/linux/atomic/atomic-long.h:1100
#: include/linux/atomic/atomic-long.h:1121
#: include/linux/atomic/atomic-long.h:1142
#: include/linux/atomic/atomic-long.h:1163
#: include/linux/atomic/atomic-long.h:1184
#: include/linux/atomic/atomic-long.h:1205
#: include/linux/atomic/atomic-long.h:1226
#: include/linux/atomic/atomic-long.h:1247
#: include/linux/atomic/atomic-long.h:1271
#: include/linux/atomic/atomic-long.h:1292
#: include/linux/atomic/atomic-long.h:1313
#: include/linux/atomic/atomic-long.h:1334
#: include/linux/atomic/atomic-long.h:1355
#: include/linux/atomic/atomic-long.h:1378
#: include/linux/atomic/atomic-long.h:1401
#: include/linux/atomic/atomic-long.h:1424
#: include/linux/atomic/atomic-long.h:1447
#: include/linux/atomic/atomic-long.h:1471
#: include/linux/atomic/atomic-long.h:1495
#: include/linux/atomic/atomic-long.h:1519
#: include/linux/atomic/atomic-long.h:1540
#: include/linux/atomic/atomic-long.h:1564
#: include/linux/atomic/atomic-long.h:1584
#: include/linux/atomic/atomic-long.h:1601
#: include/linux/atomic/atomic-long.h:1622
#: include/linux/atomic/atomic-long.h:1643
#: include/linux/atomic/atomic-long.h:1664
#: include/linux/atomic/atomic-long.h:1688
#: include/linux/atomic/atomic-long.h:1711
#: include/linux/atomic/atomic-long.h:1734
#: include/linux/atomic/atomic-long.h:1755
#: include/linux/atomic/atomic-long.h:1776
#: include/linux/atomic/atomic-long.h:1797 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3216
#: include/linux/atomic/atomic-instrumented.h:3234
#: include/linux/atomic/atomic-instrumented.h:3250
#: include/linux/atomic/atomic-instrumented.h:3268
#: include/linux/atomic/atomic-instrumented.h:3287
#: include/linux/atomic/atomic-instrumented.h:3305
#: include/linux/atomic/atomic-instrumented.h:3324
#: include/linux/atomic/atomic-instrumented.h:3342
#: include/linux/atomic/atomic-instrumented.h:3361
#: include/linux/atomic/atomic-instrumented.h:3379
#: include/linux/atomic/atomic-instrumented.h:3398
#: include/linux/atomic/atomic-instrumented.h:3416
#: include/linux/atomic/atomic-instrumented.h:3434
#: include/linux/atomic/atomic-instrumented.h:3453
#: include/linux/atomic/atomic-instrumented.h:3471
#: include/linux/atomic/atomic-instrumented.h:3490
#: include/linux/atomic/atomic-instrumented.h:3508
#: include/linux/atomic/atomic-instrumented.h:3527
#: include/linux/atomic/atomic-instrumented.h:3545
#: include/linux/atomic/atomic-instrumented.h:3564
#: include/linux/atomic/atomic-instrumented.h:3585
#: include/linux/atomic/atomic-instrumented.h:3602
#: include/linux/atomic/atomic-instrumented.h:3620
#: include/linux/atomic/atomic-instrumented.h:3637
#: include/linux/atomic/atomic-instrumented.h:3655
#: include/linux/atomic/atomic-instrumented.h:3672
#: include/linux/atomic/atomic-instrumented.h:3690
#: include/linux/atomic/atomic-instrumented.h:3707
#: include/linux/atomic/atomic-instrumented.h:3725
#: include/linux/atomic/atomic-instrumented.h:3742
#: include/linux/atomic/atomic-instrumented.h:3759
#: include/linux/atomic/atomic-instrumented.h:3777
#: include/linux/atomic/atomic-instrumented.h:3794
#: include/linux/atomic/atomic-instrumented.h:3812
#: include/linux/atomic/atomic-instrumented.h:3829
#: include/linux/atomic/atomic-instrumented.h:3847
#: include/linux/atomic/atomic-instrumented.h:3864
#: include/linux/atomic/atomic-instrumented.h:3882
#: include/linux/atomic/atomic-instrumented.h:3896
#: include/linux/atomic/atomic-instrumented.h:3914
#: include/linux/atomic/atomic-instrumented.h:3933
#: include/linux/atomic/atomic-instrumented.h:3951
#: include/linux/atomic/atomic-instrumented.h:3970
#: include/linux/atomic/atomic-instrumented.h:3988
#: include/linux/atomic/atomic-instrumented.h:4006
#: include/linux/atomic/atomic-instrumented.h:4025
#: include/linux/atomic/atomic-instrumented.h:4043
#: include/linux/atomic/atomic-instrumented.h:4062
#: include/linux/atomic/atomic-instrumented.h:4080
#: include/linux/atomic/atomic-instrumented.h:4098
#: include/linux/atomic/atomic-instrumented.h:4117
#: include/linux/atomic/atomic-instrumented.h:4135
#: include/linux/atomic/atomic-instrumented.h:4154
#: include/linux/atomic/atomic-instrumented.h:4172
#: include/linux/atomic/atomic-instrumented.h:4190
#: include/linux/atomic/atomic-instrumented.h:4209
#: include/linux/atomic/atomic-instrumented.h:4227
#: include/linux/atomic/atomic-instrumented.h:4246
#: include/linux/atomic/atomic-instrumented.h:4267
#: include/linux/atomic/atomic-instrumented.h:4286
#: include/linux/atomic/atomic-instrumented.h:4304
#: include/linux/atomic/atomic-instrumented.h:4323
#: include/linux/atomic/atomic-instrumented.h:4341
#: include/linux/atomic/atomic-instrumented.h:4362
#: include/linux/atomic/atomic-instrumented.h:4382
#: include/linux/atomic/atomic-instrumented.h:4403
#: include/linux/atomic/atomic-instrumented.h:4423
#: include/linux/atomic/atomic-instrumented.h:4446
#: include/linux/atomic/atomic-instrumented.h:4468
#: include/linux/atomic/atomic-instrumented.h:4491
#: include/linux/atomic/atomic-instrumented.h:4510
#: include/linux/atomic/atomic-instrumented.h:4532
#: include/linux/atomic/atomic-instrumented.h:4550
#: include/linux/atomic/atomic-instrumented.h:4565
#: include/linux/atomic/atomic-instrumented.h:4584
#: include/linux/atomic/atomic-instrumented.h:4602
#: include/linux/atomic/atomic-instrumented.h:4621
#: include/linux/atomic/atomic-instrumented.h:4642
#: include/linux/atomic/atomic-instrumented.h:4663
#: include/linux/atomic/atomic-instrumented.h:4684
#: include/linux/atomic/atomic-instrumented.h:4703
#: include/linux/atomic/atomic-instrumented.h:4722
#: include/linux/atomic/atomic-instrumented.h:4741
msgid "``atomic_long_t *v``"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:68
#: include/linux/atomic/atomic-long.h:89 include/linux/atomic/atomic-long.h:113
#: include/linux/atomic/atomic-long.h:134
#: include/linux/atomic/atomic-long.h:155
#: include/linux/atomic/atomic-long.h:176
#: include/linux/atomic/atomic-long.h:197
#: include/linux/atomic/atomic-long.h:218
#: include/linux/atomic/atomic-long.h:239
#: include/linux/atomic/atomic-long.h:260
#: include/linux/atomic/atomic-long.h:281
#: include/linux/atomic/atomic-long.h:302
#: include/linux/atomic/atomic-long.h:323
#: include/linux/atomic/atomic-long.h:344
#: include/linux/atomic/atomic-long.h:365
#: include/linux/atomic/atomic-long.h:386
#: include/linux/atomic/atomic-long.h:407
#: include/linux/atomic/atomic-long.h:428
#: include/linux/atomic/atomic-long.h:449
#: include/linux/atomic/atomic-long.h:470
#: include/linux/atomic/atomic-long.h:851
#: include/linux/atomic/atomic-long.h:872
#: include/linux/atomic/atomic-long.h:893
#: include/linux/atomic/atomic-long.h:914
#: include/linux/atomic/atomic-long.h:935
#: include/linux/atomic/atomic-long.h:956
#: include/linux/atomic/atomic-long.h:977
#: include/linux/atomic/atomic-long.h:998
#: include/linux/atomic/atomic-long.h:1019
#: include/linux/atomic/atomic-long.h:1040
#: include/linux/atomic/atomic-long.h:1061
#: include/linux/atomic/atomic-long.h:1082
#: include/linux/atomic/atomic-long.h:1103
#: include/linux/atomic/atomic-long.h:1124
#: include/linux/atomic/atomic-long.h:1145
#: include/linux/atomic/atomic-long.h:1166
#: include/linux/atomic/atomic-long.h:1187
#: include/linux/atomic/atomic-long.h:1208
#: include/linux/atomic/atomic-long.h:1229
#: include/linux/atomic/atomic-long.h:1250
#: include/linux/atomic/atomic-long.h:1543
#: include/linux/atomic/atomic-long.h:1604
#: include/linux/atomic/atomic-long.h:1625
#: include/linux/atomic/atomic-long.h:1646
#: include/linux/atomic/atomic-long.h:1667 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3213
#: include/linux/atomic/atomic-instrumented.h:3231
#: include/linux/atomic/atomic-instrumented.h:3253
#: include/linux/atomic/atomic-instrumented.h:3271
#: include/linux/atomic/atomic-instrumented.h:3290
#: include/linux/atomic/atomic-instrumented.h:3308
#: include/linux/atomic/atomic-instrumented.h:3327
#: include/linux/atomic/atomic-instrumented.h:3345
#: include/linux/atomic/atomic-instrumented.h:3364
#: include/linux/atomic/atomic-instrumented.h:3382
#: include/linux/atomic/atomic-instrumented.h:3401
#: include/linux/atomic/atomic-instrumented.h:3419
#: include/linux/atomic/atomic-instrumented.h:3437
#: include/linux/atomic/atomic-instrumented.h:3456
#: include/linux/atomic/atomic-instrumented.h:3474
#: include/linux/atomic/atomic-instrumented.h:3493
#: include/linux/atomic/atomic-instrumented.h:3511
#: include/linux/atomic/atomic-instrumented.h:3530
#: include/linux/atomic/atomic-instrumented.h:3548
#: include/linux/atomic/atomic-instrumented.h:3567
#: include/linux/atomic/atomic-instrumented.h:3899
#: include/linux/atomic/atomic-instrumented.h:3917
#: include/linux/atomic/atomic-instrumented.h:3936
#: include/linux/atomic/atomic-instrumented.h:3954
#: include/linux/atomic/atomic-instrumented.h:3973
#: include/linux/atomic/atomic-instrumented.h:3991
#: include/linux/atomic/atomic-instrumented.h:4009
#: include/linux/atomic/atomic-instrumented.h:4028
#: include/linux/atomic/atomic-instrumented.h:4046
#: include/linux/atomic/atomic-instrumented.h:4065
#: include/linux/atomic/atomic-instrumented.h:4083
#: include/linux/atomic/atomic-instrumented.h:4101
#: include/linux/atomic/atomic-instrumented.h:4120
#: include/linux/atomic/atomic-instrumented.h:4138
#: include/linux/atomic/atomic-instrumented.h:4157
#: include/linux/atomic/atomic-instrumented.h:4175
#: include/linux/atomic/atomic-instrumented.h:4193
#: include/linux/atomic/atomic-instrumented.h:4212
#: include/linux/atomic/atomic-instrumented.h:4230
#: include/linux/atomic/atomic-instrumented.h:4249
#: include/linux/atomic/atomic-instrumented.h:4513
#: include/linux/atomic/atomic-instrumented.h:4568
#: include/linux/atomic/atomic-instrumented.h:4587
#: include/linux/atomic/atomic-instrumented.h:4605
#: include/linux/atomic/atomic-instrumented.h:4624
msgid "``long i``"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:67
#: include/linux/atomic/atomic-long.h:88
#: include/linux/atomic/atomic-long.h:1267
#: include/linux/atomic/atomic-long.h:1288
#: include/linux/atomic/atomic-long.h:1309
#: include/linux/atomic/atomic-long.h:1330
#: include/linux/atomic/atomic-long.h:1352
#: include/linux/atomic/atomic-long.h:1375
#: include/linux/atomic/atomic-long.h:1398
#: include/linux/atomic/atomic-long.h:1421
#: include/linux/atomic/atomic-long.h:1444
#: include/linux/atomic/atomic-long.h:1468
#: include/linux/atomic/atomic-long.h:1492
#: include/linux/atomic/atomic-long.h:1516 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3212
#: include/linux/atomic/atomic-instrumented.h:3230
#: include/linux/atomic/atomic-instrumented.h:4263
#: include/linux/atomic/atomic-instrumented.h:4282
#: include/linux/atomic/atomic-instrumented.h:4300
#: include/linux/atomic/atomic-instrumented.h:4319
#: include/linux/atomic/atomic-instrumented.h:4338
#: include/linux/atomic/atomic-instrumented.h:4359
#: include/linux/atomic/atomic-instrumented.h:4379
#: include/linux/atomic/atomic-instrumented.h:4400
#: include/linux/atomic/atomic-instrumented.h:4420
#: include/linux/atomic/atomic-instrumented.h:4443
#: include/linux/atomic/atomic-instrumented.h:4465
#: include/linux/atomic/atomic-instrumented.h:4488
msgid "long value to assign"
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3215
msgid "Unsafe to use in noinstr code; use raw_atomic_long_set() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3233
msgid "Unsafe to use in noinstr code; use raw_atomic_long_set_release() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:108
#: include/linux/atomic/atomic-long.h:129
#: include/linux/atomic/atomic-long.h:150
#: include/linux/atomic/atomic-long.h:171
#: include/linux/atomic/atomic-long.h:192
#: include/linux/atomic/atomic-long.h:213
#: include/linux/atomic/atomic-long.h:234
#: include/linux/atomic/atomic-long.h:255
#: include/linux/atomic/atomic-long.h:276
#: include/linux/atomic/atomic-long.h:1599
#: include/linux/atomic/atomic-long.h:1620
#: include/linux/atomic/atomic-long.h:1641
#: include/linux/atomic/atomic-long.h:1662
#: include/linux/atomic/atomic-long.h:1684
#: include/linux/atomic/atomic-long.h:1707 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3248
#: include/linux/atomic/atomic-instrumented.h:3266
#: include/linux/atomic/atomic-instrumented.h:3285
#: include/linux/atomic/atomic-instrumented.h:3303
#: include/linux/atomic/atomic-instrumented.h:3322
#: include/linux/atomic/atomic-instrumented.h:3340
#: include/linux/atomic/atomic-instrumented.h:3359
#: include/linux/atomic/atomic-instrumented.h:3377
#: include/linux/atomic/atomic-instrumented.h:3396
#: include/linux/atomic/atomic-instrumented.h:4563
#: include/linux/atomic/atomic-instrumented.h:4582
#: include/linux/atomic/atomic-instrumented.h:4600
#: include/linux/atomic/atomic-instrumented.h:4619
#: include/linux/atomic/atomic-instrumented.h:4638
#: include/linux/atomic/atomic-instrumented.h:4659
msgid "long value to add"
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3252
msgid "Unsafe to use in noinstr code; use raw_atomic_long_add() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3270
msgid "Unsafe to use in noinstr code; use raw_atomic_long_add_return() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3289
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_add_return_acquire() "
"there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3307
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_add_return_release() "
"there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3326
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_add_return_relaxed() "
"there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3344
msgid "Unsafe to use in noinstr code; use raw_atomic_long_fetch_add() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3363
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_fetch_add_acquire() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3381
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_fetch_add_release() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3400
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_fetch_add_relaxed() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:297
#: include/linux/atomic/atomic-long.h:318
#: include/linux/atomic/atomic-long.h:339
#: include/linux/atomic/atomic-long.h:360
#: include/linux/atomic/atomic-long.h:381
#: include/linux/atomic/atomic-long.h:402
#: include/linux/atomic/atomic-long.h:423
#: include/linux/atomic/atomic-long.h:444
#: include/linux/atomic/atomic-long.h:465
#: include/linux/atomic/atomic-long.h:1538 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3414
#: include/linux/atomic/atomic-instrumented.h:3432
#: include/linux/atomic/atomic-instrumented.h:3451
#: include/linux/atomic/atomic-instrumented.h:3469
#: include/linux/atomic/atomic-instrumented.h:3488
#: include/linux/atomic/atomic-instrumented.h:3506
#: include/linux/atomic/atomic-instrumented.h:3525
#: include/linux/atomic/atomic-instrumented.h:3543
#: include/linux/atomic/atomic-instrumented.h:3562
#: include/linux/atomic/atomic-instrumented.h:4508
msgid "long value to subtract"
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3418
msgid "Unsafe to use in noinstr code; use raw_atomic_long_sub() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3436
msgid "Unsafe to use in noinstr code; use raw_atomic_long_sub_return() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3455
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_sub_return_acquire() "
"there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3473
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_sub_return_release() "
"there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3492
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_sub_return_relaxed() "
"there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3510
msgid "Unsafe to use in noinstr code; use raw_atomic_long_fetch_sub() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3529
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_fetch_sub_acquire() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3547
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_fetch_sub_release() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3566
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_fetch_sub_relaxed() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3583
msgid "Unsafe to use in noinstr code; use raw_atomic_long_inc() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3600
msgid "Unsafe to use in noinstr code; use raw_atomic_long_inc_return() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3618
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_inc_return_acquire() "
"there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3635
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_inc_return_release() "
"there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3653
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_inc_return_relaxed() "
"there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3670
msgid "Unsafe to use in noinstr code; use raw_atomic_long_fetch_inc() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3688
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_fetch_inc_acquire() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3705
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_fetch_inc_release() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3723
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_fetch_inc_relaxed() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3740
msgid "Unsafe to use in noinstr code; use raw_atomic_long_dec() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3757
msgid "Unsafe to use in noinstr code; use raw_atomic_long_dec_return() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3775
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_dec_return_acquire() "
"there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3792
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_dec_return_release() "
"there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3810
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_dec_return_relaxed() "
"there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3827
msgid "Unsafe to use in noinstr code; use raw_atomic_long_fetch_dec() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3845
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_fetch_dec_acquire() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3862
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_fetch_dec_release() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3880
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_fetch_dec_relaxed() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:846
#: include/linux/atomic/atomic-long.h:867
#: include/linux/atomic/atomic-long.h:888
#: include/linux/atomic/atomic-long.h:909
#: include/linux/atomic/atomic-long.h:930
#: include/linux/atomic/atomic-long.h:951
#: include/linux/atomic/atomic-long.h:972
#: include/linux/atomic/atomic-long.h:993
#: include/linux/atomic/atomic-long.h:1014
#: include/linux/atomic/atomic-long.h:1035
#: include/linux/atomic/atomic-long.h:1056
#: include/linux/atomic/atomic-long.h:1077
#: include/linux/atomic/atomic-long.h:1098
#: include/linux/atomic/atomic-long.h:1119
#: include/linux/atomic/atomic-long.h:1140
#: include/linux/atomic/atomic-long.h:1161
#: include/linux/atomic/atomic-long.h:1182
#: include/linux/atomic/atomic-long.h:1203
#: include/linux/atomic/atomic-long.h:1224
#: include/linux/atomic/atomic-long.h:1245 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3894
#: include/linux/atomic/atomic-instrumented.h:3912
#: include/linux/atomic/atomic-instrumented.h:3931
#: include/linux/atomic/atomic-instrumented.h:3949
#: include/linux/atomic/atomic-instrumented.h:3968
#: include/linux/atomic/atomic-instrumented.h:3986
#: include/linux/atomic/atomic-instrumented.h:4004
#: include/linux/atomic/atomic-instrumented.h:4023
#: include/linux/atomic/atomic-instrumented.h:4041
#: include/linux/atomic/atomic-instrumented.h:4060
#: include/linux/atomic/atomic-instrumented.h:4078
#: include/linux/atomic/atomic-instrumented.h:4096
#: include/linux/atomic/atomic-instrumented.h:4115
#: include/linux/atomic/atomic-instrumented.h:4133
#: include/linux/atomic/atomic-instrumented.h:4152
#: include/linux/atomic/atomic-instrumented.h:4170
#: include/linux/atomic/atomic-instrumented.h:4188
#: include/linux/atomic/atomic-instrumented.h:4207
#: include/linux/atomic/atomic-instrumented.h:4225
#: include/linux/atomic/atomic-instrumented.h:4244
msgid "long value"
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3898
msgid "Unsafe to use in noinstr code; use raw_atomic_long_and() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3916
msgid "Unsafe to use in noinstr code; use raw_atomic_long_fetch_and() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3935
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_fetch_and_acquire() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3953
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_fetch_and_release() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3972
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_fetch_and_relaxed() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:3990
msgid "Unsafe to use in noinstr code; use raw_atomic_long_andnot() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:4008
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_fetch_andnot() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:4027
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_fetch_andnot_acquire() "
"there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:4045
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_fetch_andnot_release() "
"there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:4064
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_fetch_andnot_relaxed() "
"there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:4082
msgid "Unsafe to use in noinstr code; use raw_atomic_long_or() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:4100
msgid "Unsafe to use in noinstr code; use raw_atomic_long_fetch_or() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:4119
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_fetch_or_acquire() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:4137
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_fetch_or_release() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:4156
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_fetch_or_relaxed() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:4174
msgid "Unsafe to use in noinstr code; use raw_atomic_long_xor() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:4192
msgid "Unsafe to use in noinstr code; use raw_atomic_long_fetch_xor() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:4211
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_fetch_xor_acquire() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:4229
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_fetch_xor_release() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:4248
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_fetch_xor_relaxed() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1268
#: include/linux/atomic/atomic-long.h:1289
#: include/linux/atomic/atomic-long.h:1310
#: include/linux/atomic/atomic-long.h:1331
#: include/linux/atomic/atomic-long.h:1353
#: include/linux/atomic/atomic-long.h:1376
#: include/linux/atomic/atomic-long.h:1399
#: include/linux/atomic/atomic-long.h:1422
#: include/linux/atomic/atomic-long.h:1445
#: include/linux/atomic/atomic-long.h:1469
#: include/linux/atomic/atomic-long.h:1493
#: include/linux/atomic/atomic-long.h:1517 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:4264
#: include/linux/atomic/atomic-instrumented.h:4283
#: include/linux/atomic/atomic-instrumented.h:4301
#: include/linux/atomic/atomic-instrumented.h:4320
#: include/linux/atomic/atomic-instrumented.h:4339
#: include/linux/atomic/atomic-instrumented.h:4360
#: include/linux/atomic/atomic-instrumented.h:4380
#: include/linux/atomic/atomic-instrumented.h:4401
#: include/linux/atomic/atomic-instrumented.h:4421
#: include/linux/atomic/atomic-instrumented.h:4444
#: include/linux/atomic/atomic-instrumented.h:4466
#: include/linux/atomic/atomic-instrumented.h:4489
msgid "``long new``"
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:4266
msgid "Unsafe to use in noinstr code; use raw_atomic_long_xchg() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:4285
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_xchg_acquire() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:4303
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_xchg_release() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:4322
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_xchg_relaxed() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1352
#: include/linux/atomic/atomic-long.h:1375
#: include/linux/atomic/atomic-long.h:1398
#: include/linux/atomic/atomic-long.h:1421 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:4338
#: include/linux/atomic/atomic-instrumented.h:4359
#: include/linux/atomic/atomic-instrumented.h:4379
#: include/linux/atomic/atomic-instrumented.h:4400
msgid "``long old``"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1351
#: include/linux/atomic/atomic-long.h:1374
#: include/linux/atomic/atomic-long.h:1397
#: include/linux/atomic/atomic-long.h:1420
#: include/linux/atomic/atomic-long.h:1685
#: include/linux/atomic/atomic-long.h:1708 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:4337
#: include/linux/atomic/atomic-instrumented.h:4358
#: include/linux/atomic/atomic-instrumented.h:4378
#: include/linux/atomic/atomic-instrumented.h:4399
#: include/linux/atomic/atomic-instrumented.h:4639
#: include/linux/atomic/atomic-instrumented.h:4660
msgid "long value to compare with"
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:4342
msgid "Unsafe to use in noinstr code; use raw_atomic_long_cmpxchg() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:4363
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_cmpxchg_acquire() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:4383
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_cmpxchg_release() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:4404
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_cmpxchg_relaxed() there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1444
#: include/linux/atomic/atomic-long.h:1468
#: include/linux/atomic/atomic-long.h:1492
#: include/linux/atomic/atomic-long.h:1516 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:4420
#: include/linux/atomic/atomic-instrumented.h:4443
#: include/linux/atomic/atomic-instrumented.h:4465
#: include/linux/atomic/atomic-instrumented.h:4488
msgid "``long *old``"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1443
#: include/linux/atomic/atomic-long.h:1467
#: include/linux/atomic/atomic-long.h:1491
#: include/linux/atomic/atomic-long.h:1515 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:4419
#: include/linux/atomic/atomic-instrumented.h:4442
#: include/linux/atomic/atomic-instrumented.h:4464
#: include/linux/atomic/atomic-instrumented.h:4487
msgid "pointer to long value to compare with"
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:4425
msgid "Unsafe to use in noinstr code; use raw_atomic_long_try_cmpxchg() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:4448
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_try_cmpxchg_acquire() "
"there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:4470
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_try_cmpxchg_release() "
"there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:4493
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_try_cmpxchg_relaxed() "
"there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:4512
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_sub_and_test() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:4530
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_dec_and_test() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:4548
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_inc_and_test() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:4567
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_add_negative() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:4586
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_add_negative_acquire() "
"there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:4604
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_add_negative_release() "
"there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:4623
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_add_negative_relaxed() "
"there."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1685
#: include/linux/atomic/atomic-long.h:1708 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:4639
#: include/linux/atomic/atomic-instrumented.h:4660
msgid "``long a``"
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1686
#: include/linux/atomic/atomic-long.h:1709 ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:4640
#: include/linux/atomic/atomic-instrumented.h:4661
msgid "``long u``"
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:4643
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_fetch_add_unless() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:4664
msgid "Unsafe to use in noinstr code; use raw_atomic_long_add_unless() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:4683
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_inc_not_zero() there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:4702
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_inc_unless_negative() "
"there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:4721
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_dec_unless_positive() "
"there."
msgstr ""

#: ../../../driver-api/basics:96:
#: include/linux/atomic/atomic-instrumented.h:4740
msgid ""
"Unsafe to use in noinstr code; use raw_atomic_long_dec_if_positive() there."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:449
msgid "Safe to use in noinstr code; prefer atomic_read() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:465
msgid "Safe to use in noinstr code; prefer atomic_read_acquire() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:495
msgid "Safe to use in noinstr code; prefer atomic_set() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:512
msgid "Safe to use in noinstr code; prefer atomic_set_release() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:538
msgid "Safe to use in noinstr code; prefer atomic_add() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:555
msgid "Safe to use in noinstr code; prefer atomic_add_return() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:582
msgid ""
"Safe to use in noinstr code; prefer atomic_add_return_acquire() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:609
msgid ""
"Safe to use in noinstr code; prefer atomic_add_return_release() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:635
msgid ""
"Safe to use in noinstr code; prefer atomic_add_return_relaxed() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:658
msgid "Safe to use in noinstr code; prefer atomic_fetch_add() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:685
msgid ""
"Safe to use in noinstr code; prefer atomic_fetch_add_acquire() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:712
msgid ""
"Safe to use in noinstr code; prefer atomic_fetch_add_release() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:738
msgid ""
"Safe to use in noinstr code; prefer atomic_fetch_add_relaxed() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:761
msgid "Safe to use in noinstr code; prefer atomic_sub() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:778
msgid "Safe to use in noinstr code; prefer atomic_sub_return() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:805
msgid ""
"Safe to use in noinstr code; prefer atomic_sub_return_acquire() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:832
msgid ""
"Safe to use in noinstr code; prefer atomic_sub_return_release() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:858
msgid ""
"Safe to use in noinstr code; prefer atomic_sub_return_relaxed() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:881
msgid "Safe to use in noinstr code; prefer atomic_fetch_sub() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:908
msgid ""
"Safe to use in noinstr code; prefer atomic_fetch_sub_acquire() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:935
msgid ""
"Safe to use in noinstr code; prefer atomic_fetch_sub_release() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:961
msgid ""
"Safe to use in noinstr code; prefer atomic_fetch_sub_relaxed() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:983
msgid "Safe to use in noinstr code; prefer atomic_inc() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1003
msgid "Safe to use in noinstr code; prefer atomic_inc_return() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1029
msgid ""
"Safe to use in noinstr code; prefer atomic_inc_return_acquire() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1055
msgid ""
"Safe to use in noinstr code; prefer atomic_inc_return_release() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1080
msgid ""
"Safe to use in noinstr code; prefer atomic_inc_return_relaxed() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1102
msgid "Safe to use in noinstr code; prefer atomic_fetch_inc() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1128
msgid ""
"Safe to use in noinstr code; prefer atomic_fetch_inc_acquire() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1154
msgid ""
"Safe to use in noinstr code; prefer atomic_fetch_inc_release() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1179
msgid ""
"Safe to use in noinstr code; prefer atomic_fetch_inc_relaxed() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1201
msgid "Safe to use in noinstr code; prefer atomic_dec() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1221
msgid "Safe to use in noinstr code; prefer atomic_dec_return() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1247
msgid ""
"Safe to use in noinstr code; prefer atomic_dec_return_acquire() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1273
msgid ""
"Safe to use in noinstr code; prefer atomic_dec_return_release() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1298
msgid ""
"Safe to use in noinstr code; prefer atomic_dec_return_relaxed() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1320
msgid "Safe to use in noinstr code; prefer atomic_fetch_dec() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1346
msgid ""
"Safe to use in noinstr code; prefer atomic_fetch_dec_acquire() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1372
msgid ""
"Safe to use in noinstr code; prefer atomic_fetch_dec_release() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1397
msgid ""
"Safe to use in noinstr code; prefer atomic_fetch_dec_relaxed() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1420
msgid "Safe to use in noinstr code; prefer atomic_and() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1437
msgid "Safe to use in noinstr code; prefer atomic_fetch_and() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1464
msgid ""
"Safe to use in noinstr code; prefer atomic_fetch_and_acquire() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1491
msgid ""
"Safe to use in noinstr code; prefer atomic_fetch_and_release() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1517
msgid ""
"Safe to use in noinstr code; prefer atomic_fetch_and_relaxed() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1540
msgid "Safe to use in noinstr code; prefer atomic_andnot() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1561
msgid "Safe to use in noinstr code; prefer atomic_fetch_andnot() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1588
msgid ""
"Safe to use in noinstr code; prefer atomic_fetch_andnot_acquire() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1615
msgid ""
"Safe to use in noinstr code; prefer atomic_fetch_andnot_release() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1641
msgid ""
"Safe to use in noinstr code; prefer atomic_fetch_andnot_relaxed() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1664
msgid "Safe to use in noinstr code; prefer atomic_or() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1681
msgid "Safe to use in noinstr code; prefer atomic_fetch_or() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1708
msgid ""
"Safe to use in noinstr code; prefer atomic_fetch_or_acquire() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1735
msgid ""
"Safe to use in noinstr code; prefer atomic_fetch_or_release() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1761
msgid ""
"Safe to use in noinstr code; prefer atomic_fetch_or_relaxed() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1784
msgid "Safe to use in noinstr code; prefer atomic_xor() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1801
msgid "Safe to use in noinstr code; prefer atomic_fetch_xor() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1828
msgid ""
"Safe to use in noinstr code; prefer atomic_fetch_xor_acquire() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1855
msgid ""
"Safe to use in noinstr code; prefer atomic_fetch_xor_release() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1881
msgid ""
"Safe to use in noinstr code; prefer atomic_fetch_xor_relaxed() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1904
msgid "Safe to use in noinstr code; prefer atomic_xchg() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1931
msgid "Safe to use in noinstr code; prefer atomic_xchg_acquire() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1958
msgid "Safe to use in noinstr code; prefer atomic_xchg_release() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:1984
msgid "Safe to use in noinstr code; prefer atomic_xchg_relaxed() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2009
msgid "Safe to use in noinstr code; prefer atomic_cmpxchg() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2038
msgid "Safe to use in noinstr code; prefer atomic_cmpxchg_acquire() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2067
msgid "Safe to use in noinstr code; prefer atomic_cmpxchg_release() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2095
msgid "Safe to use in noinstr code; prefer atomic_cmpxchg_relaxed() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2121
msgid "Safe to use in noinstr code; prefer atomic_try_cmpxchg() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2155
msgid ""
"Safe to use in noinstr code; prefer atomic_try_cmpxchg_acquire() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2189
msgid ""
"Safe to use in noinstr code; prefer atomic_try_cmpxchg_release() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2222
msgid ""
"Safe to use in noinstr code; prefer atomic_try_cmpxchg_relaxed() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2249
msgid "Safe to use in noinstr code; prefer atomic_sub_and_test() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2269
msgid "Safe to use in noinstr code; prefer atomic_dec_and_test() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2289
msgid "Safe to use in noinstr code; prefer atomic_inc_and_test() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2310
msgid "Safe to use in noinstr code; prefer atomic_add_negative() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2337
msgid ""
"Safe to use in noinstr code; prefer atomic_add_negative_acquire() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2364
msgid ""
"Safe to use in noinstr code; prefer atomic_add_negative_release() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2390
msgid ""
"Safe to use in noinstr code; prefer atomic_add_negative_relaxed() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2415
msgid ""
"Safe to use in noinstr code; prefer atomic_fetch_add_unless() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2445
msgid "Safe to use in noinstr code; prefer atomic_add_unless() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2466
msgid "Safe to use in noinstr code; prefer atomic_inc_not_zero() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2487
msgid ""
"Safe to use in noinstr code; prefer atomic_inc_unless_negative() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2515
msgid ""
"Safe to use in noinstr code; prefer atomic_dec_unless_positive() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2543
msgid "Safe to use in noinstr code; prefer atomic_dec_if_positive() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2575
msgid "Safe to use in noinstr code; prefer atomic64_read() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2591
msgid "Safe to use in noinstr code; prefer atomic64_read_acquire() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2621
msgid "Safe to use in noinstr code; prefer atomic64_set() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2638
msgid "Safe to use in noinstr code; prefer atomic64_set_release() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2664
msgid "Safe to use in noinstr code; prefer atomic64_add() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2681
msgid "Safe to use in noinstr code; prefer atomic64_add_return() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2708
msgid ""
"Safe to use in noinstr code; prefer atomic64_add_return_acquire() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2735
msgid ""
"Safe to use in noinstr code; prefer atomic64_add_return_release() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2761
msgid ""
"Safe to use in noinstr code; prefer atomic64_add_return_relaxed() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2784
msgid "Safe to use in noinstr code; prefer atomic64_fetch_add() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2811
msgid ""
"Safe to use in noinstr code; prefer atomic64_fetch_add_acquire() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2838
msgid ""
"Safe to use in noinstr code; prefer atomic64_fetch_add_release() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2864
msgid ""
"Safe to use in noinstr code; prefer atomic64_fetch_add_relaxed() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2887
msgid "Safe to use in noinstr code; prefer atomic64_sub() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2904
msgid "Safe to use in noinstr code; prefer atomic64_sub_return() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2931
msgid ""
"Safe to use in noinstr code; prefer atomic64_sub_return_acquire() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2958
msgid ""
"Safe to use in noinstr code; prefer atomic64_sub_return_release() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:2984
msgid ""
"Safe to use in noinstr code; prefer atomic64_sub_return_relaxed() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:3007
msgid "Safe to use in noinstr code; prefer atomic64_fetch_sub() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:3034
msgid ""
"Safe to use in noinstr code; prefer atomic64_fetch_sub_acquire() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:3061
msgid ""
"Safe to use in noinstr code; prefer atomic64_fetch_sub_release() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:3087
msgid ""
"Safe to use in noinstr code; prefer atomic64_fetch_sub_relaxed() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:3109
msgid "Safe to use in noinstr code; prefer atomic64_inc() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:3129
msgid "Safe to use in noinstr code; prefer atomic64_inc_return() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:3155
msgid ""
"Safe to use in noinstr code; prefer atomic64_inc_return_acquire() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:3181
msgid ""
"Safe to use in noinstr code; prefer atomic64_inc_return_release() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:3206
msgid ""
"Safe to use in noinstr code; prefer atomic64_inc_return_relaxed() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:3228
msgid "Safe to use in noinstr code; prefer atomic64_fetch_inc() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:3254
msgid ""
"Safe to use in noinstr code; prefer atomic64_fetch_inc_acquire() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:3280
msgid ""
"Safe to use in noinstr code; prefer atomic64_fetch_inc_release() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:3305
msgid ""
"Safe to use in noinstr code; prefer atomic64_fetch_inc_relaxed() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:3327
msgid "Safe to use in noinstr code; prefer atomic64_dec() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:3347
msgid "Safe to use in noinstr code; prefer atomic64_dec_return() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:3373
msgid ""
"Safe to use in noinstr code; prefer atomic64_dec_return_acquire() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:3399
msgid ""
"Safe to use in noinstr code; prefer atomic64_dec_return_release() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:3424
msgid ""
"Safe to use in noinstr code; prefer atomic64_dec_return_relaxed() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:3446
msgid "Safe to use in noinstr code; prefer atomic64_fetch_dec() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:3472
msgid ""
"Safe to use in noinstr code; prefer atomic64_fetch_dec_acquire() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:3498
msgid ""
"Safe to use in noinstr code; prefer atomic64_fetch_dec_release() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:3523
msgid ""
"Safe to use in noinstr code; prefer atomic64_fetch_dec_relaxed() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:3546
msgid "Safe to use in noinstr code; prefer atomic64_and() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:3563
msgid "Safe to use in noinstr code; prefer atomic64_fetch_and() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:3590
msgid ""
"Safe to use in noinstr code; prefer atomic64_fetch_and_acquire() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:3617
msgid ""
"Safe to use in noinstr code; prefer atomic64_fetch_and_release() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:3643
msgid ""
"Safe to use in noinstr code; prefer atomic64_fetch_and_relaxed() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:3666
msgid "Safe to use in noinstr code; prefer atomic64_andnot() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:3687
msgid "Safe to use in noinstr code; prefer atomic64_fetch_andnot() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:3714
msgid ""
"Safe to use in noinstr code; prefer atomic64_fetch_andnot_acquire() "
"elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:3741
msgid ""
"Safe to use in noinstr code; prefer atomic64_fetch_andnot_release() "
"elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:3767
msgid ""
"Safe to use in noinstr code; prefer atomic64_fetch_andnot_relaxed() "
"elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:3790
msgid "Safe to use in noinstr code; prefer atomic64_or() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:3807
msgid "Safe to use in noinstr code; prefer atomic64_fetch_or() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:3834
msgid ""
"Safe to use in noinstr code; prefer atomic64_fetch_or_acquire() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:3861
msgid ""
"Safe to use in noinstr code; prefer atomic64_fetch_or_release() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:3887
msgid ""
"Safe to use in noinstr code; prefer atomic64_fetch_or_relaxed() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:3910
msgid "Safe to use in noinstr code; prefer atomic64_xor() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:3927
msgid "Safe to use in noinstr code; prefer atomic64_fetch_xor() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:3954
msgid ""
"Safe to use in noinstr code; prefer atomic64_fetch_xor_acquire() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:3981
msgid ""
"Safe to use in noinstr code; prefer atomic64_fetch_xor_release() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:4007
msgid ""
"Safe to use in noinstr code; prefer atomic64_fetch_xor_relaxed() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:4030
msgid "Safe to use in noinstr code; prefer atomic64_xchg() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:4057
msgid "Safe to use in noinstr code; prefer atomic64_xchg_acquire() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:4084
msgid "Safe to use in noinstr code; prefer atomic64_xchg_release() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:4110
msgid "Safe to use in noinstr code; prefer atomic64_xchg_relaxed() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:4135
msgid "Safe to use in noinstr code; prefer atomic64_cmpxchg() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:4164
msgid ""
"Safe to use in noinstr code; prefer atomic64_cmpxchg_acquire() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:4193
msgid ""
"Safe to use in noinstr code; prefer atomic64_cmpxchg_release() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:4221
msgid ""
"Safe to use in noinstr code; prefer atomic64_cmpxchg_relaxed() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:4247
msgid "Safe to use in noinstr code; prefer atomic64_try_cmpxchg() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:4281
msgid ""
"Safe to use in noinstr code; prefer atomic64_try_cmpxchg_acquire() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:4315
msgid ""
"Safe to use in noinstr code; prefer atomic64_try_cmpxchg_release() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:4348
msgid ""
"Safe to use in noinstr code; prefer atomic64_try_cmpxchg_relaxed() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:4375
msgid "Safe to use in noinstr code; prefer atomic64_sub_and_test() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:4395
msgid "Safe to use in noinstr code; prefer atomic64_dec_and_test() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:4415
msgid "Safe to use in noinstr code; prefer atomic64_inc_and_test() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:4436
msgid "Safe to use in noinstr code; prefer atomic64_add_negative() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:4463
msgid ""
"Safe to use in noinstr code; prefer atomic64_add_negative_acquire() "
"elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:4490
msgid ""
"Safe to use in noinstr code; prefer atomic64_add_negative_release() "
"elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:4516
msgid ""
"Safe to use in noinstr code; prefer atomic64_add_negative_relaxed() "
"elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:4541
msgid ""
"Safe to use in noinstr code; prefer atomic64_fetch_add_unless() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:4571
msgid "Safe to use in noinstr code; prefer atomic64_add_unless() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:4592
msgid "Safe to use in noinstr code; prefer atomic64_inc_not_zero() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:4613
msgid ""
"Safe to use in noinstr code; prefer atomic64_inc_unless_negative() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:4641
msgid ""
"Safe to use in noinstr code; prefer atomic64_dec_unless_positive() elsewhere."
msgstr ""

#: ../../../driver-api/basics:99:
#: include/linux/atomic/atomic-arch-fallback.h:4669
msgid ""
"Safe to use in noinstr code; prefer atomic64_dec_if_positive() elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:29
msgid "Safe to use in noinstr code; prefer atomic_long_read() elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:49
msgid ""
"Safe to use in noinstr code; prefer atomic_long_read_acquire() elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:70
msgid "Safe to use in noinstr code; prefer atomic_long_set() elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:91
msgid ""
"Safe to use in noinstr code; prefer atomic_long_set_release() elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:112
msgid "Safe to use in noinstr code; prefer atomic_long_add() elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:133
msgid "Safe to use in noinstr code; prefer atomic_long_add_return() elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:154
msgid ""
"Safe to use in noinstr code; prefer atomic_long_add_return_acquire() "
"elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:175
msgid ""
"Safe to use in noinstr code; prefer atomic_long_add_return_release() "
"elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:196
msgid ""
"Safe to use in noinstr code; prefer atomic_long_add_return_relaxed() "
"elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:217
msgid "Safe to use in noinstr code; prefer atomic_long_fetch_add() elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:238
msgid ""
"Safe to use in noinstr code; prefer atomic_long_fetch_add_acquire() "
"elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:259
msgid ""
"Safe to use in noinstr code; prefer atomic_long_fetch_add_release() "
"elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:280
msgid ""
"Safe to use in noinstr code; prefer atomic_long_fetch_add_relaxed() "
"elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:301
msgid "Safe to use in noinstr code; prefer atomic_long_sub() elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:322
msgid "Safe to use in noinstr code; prefer atomic_long_sub_return() elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:343
msgid ""
"Safe to use in noinstr code; prefer atomic_long_sub_return_acquire() "
"elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:364
msgid ""
"Safe to use in noinstr code; prefer atomic_long_sub_return_release() "
"elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:385
msgid ""
"Safe to use in noinstr code; prefer atomic_long_sub_return_relaxed() "
"elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:406
msgid "Safe to use in noinstr code; prefer atomic_long_fetch_sub() elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:427
msgid ""
"Safe to use in noinstr code; prefer atomic_long_fetch_sub_acquire() "
"elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:448
msgid ""
"Safe to use in noinstr code; prefer atomic_long_fetch_sub_release() "
"elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:469
msgid ""
"Safe to use in noinstr code; prefer atomic_long_fetch_sub_relaxed() "
"elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:489
msgid "Safe to use in noinstr code; prefer atomic_long_inc() elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:509
msgid "Safe to use in noinstr code; prefer atomic_long_inc_return() elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:529
msgid ""
"Safe to use in noinstr code; prefer atomic_long_inc_return_acquire() "
"elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:549
msgid ""
"Safe to use in noinstr code; prefer atomic_long_inc_return_release() "
"elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:569
msgid ""
"Safe to use in noinstr code; prefer atomic_long_inc_return_relaxed() "
"elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:589
msgid "Safe to use in noinstr code; prefer atomic_long_fetch_inc() elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:609
msgid ""
"Safe to use in noinstr code; prefer atomic_long_fetch_inc_acquire() "
"elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:629
msgid ""
"Safe to use in noinstr code; prefer atomic_long_fetch_inc_release() "
"elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:649
msgid ""
"Safe to use in noinstr code; prefer atomic_long_fetch_inc_relaxed() "
"elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:669
msgid "Safe to use in noinstr code; prefer atomic_long_dec() elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:689
msgid "Safe to use in noinstr code; prefer atomic_long_dec_return() elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:709
msgid ""
"Safe to use in noinstr code; prefer atomic_long_dec_return_acquire() "
"elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:729
msgid ""
"Safe to use in noinstr code; prefer atomic_long_dec_return_release() "
"elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:749
msgid ""
"Safe to use in noinstr code; prefer atomic_long_dec_return_relaxed() "
"elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:769
msgid "Safe to use in noinstr code; prefer atomic_long_fetch_dec() elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:789
msgid ""
"Safe to use in noinstr code; prefer atomic_long_fetch_dec_acquire() "
"elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:809
msgid ""
"Safe to use in noinstr code; prefer atomic_long_fetch_dec_release() "
"elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:829
msgid ""
"Safe to use in noinstr code; prefer atomic_long_fetch_dec_relaxed() "
"elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:850
msgid "Safe to use in noinstr code; prefer atomic_long_and() elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:871
msgid "Safe to use in noinstr code; prefer atomic_long_fetch_and() elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:892
msgid ""
"Safe to use in noinstr code; prefer atomic_long_fetch_and_acquire() "
"elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:913
msgid ""
"Safe to use in noinstr code; prefer atomic_long_fetch_and_release() "
"elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:934
msgid ""
"Safe to use in noinstr code; prefer atomic_long_fetch_and_relaxed() "
"elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:955
msgid "Safe to use in noinstr code; prefer atomic_long_andnot() elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:976
msgid ""
"Safe to use in noinstr code; prefer atomic_long_fetch_andnot() elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:997
msgid ""
"Safe to use in noinstr code; prefer atomic_long_fetch_andnot_acquire() "
"elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1018
msgid ""
"Safe to use in noinstr code; prefer atomic_long_fetch_andnot_release() "
"elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1039
msgid ""
"Safe to use in noinstr code; prefer atomic_long_fetch_andnot_relaxed() "
"elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1060
msgid "Safe to use in noinstr code; prefer atomic_long_or() elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1081
msgid "Safe to use in noinstr code; prefer atomic_long_fetch_or() elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1102
msgid ""
"Safe to use in noinstr code; prefer atomic_long_fetch_or_acquire() elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1123
msgid ""
"Safe to use in noinstr code; prefer atomic_long_fetch_or_release() elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1144
msgid ""
"Safe to use in noinstr code; prefer atomic_long_fetch_or_relaxed() elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1165
msgid "Safe to use in noinstr code; prefer atomic_long_xor() elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1186
msgid "Safe to use in noinstr code; prefer atomic_long_fetch_xor() elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1207
msgid ""
"Safe to use in noinstr code; prefer atomic_long_fetch_xor_acquire() "
"elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1228
msgid ""
"Safe to use in noinstr code; prefer atomic_long_fetch_xor_release() "
"elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1249
msgid ""
"Safe to use in noinstr code; prefer atomic_long_fetch_xor_relaxed() "
"elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1270
msgid "Safe to use in noinstr code; prefer atomic_long_xchg() elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1291
msgid ""
"Safe to use in noinstr code; prefer atomic_long_xchg_acquire() elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1312
msgid ""
"Safe to use in noinstr code; prefer atomic_long_xchg_release() elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1333
msgid ""
"Safe to use in noinstr code; prefer atomic_long_xchg_relaxed() elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1356
msgid "Safe to use in noinstr code; prefer atomic_long_cmpxchg() elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1379
msgid ""
"Safe to use in noinstr code; prefer atomic_long_cmpxchg_acquire() elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1402
msgid ""
"Safe to use in noinstr code; prefer atomic_long_cmpxchg_release() elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1425
msgid ""
"Safe to use in noinstr code; prefer atomic_long_cmpxchg_relaxed() elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1449
msgid ""
"Safe to use in noinstr code; prefer atomic_long_try_cmpxchg() elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1473
msgid ""
"Safe to use in noinstr code; prefer atomic_long_try_cmpxchg_acquire() "
"elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1497
msgid ""
"Safe to use in noinstr code; prefer atomic_long_try_cmpxchg_release() "
"elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1521
msgid ""
"Safe to use in noinstr code; prefer atomic_long_try_cmpxchg_relaxed() "
"elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1542
msgid ""
"Safe to use in noinstr code; prefer atomic_long_sub_and_test() elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1562
msgid ""
"Safe to use in noinstr code; prefer atomic_long_dec_and_test() elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1582
msgid ""
"Safe to use in noinstr code; prefer atomic_long_inc_and_test() elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1603
msgid ""
"Safe to use in noinstr code; prefer atomic_long_add_negative() elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1624
msgid ""
"Safe to use in noinstr code; prefer atomic_long_add_negative_acquire() "
"elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1645
msgid ""
"Safe to use in noinstr code; prefer atomic_long_add_negative_release() "
"elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1666
msgid ""
"Safe to use in noinstr code; prefer atomic_long_add_negative_relaxed() "
"elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1689
msgid ""
"Safe to use in noinstr code; prefer atomic_long_fetch_add_unless() elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1712
msgid "Safe to use in noinstr code; prefer atomic_long_add_unless() elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1733
msgid ""
"Safe to use in noinstr code; prefer atomic_long_inc_not_zero() elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1754
msgid ""
"Safe to use in noinstr code; prefer atomic_long_inc_unless_negative() "
"elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1775
msgid ""
"Safe to use in noinstr code; prefer atomic_long_dec_unless_positive() "
"elsewhere."
msgstr ""

#: ../../../driver-api/basics:102: include/linux/atomic/atomic-long.h:1796
msgid ""
"Safe to use in noinstr code; prefer atomic_long_dec_if_positive() elsewhere."
msgstr ""

#: ../../../driver-api/basics.rst:106
msgid "Kernel objects manipulation"
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:146
msgid "Allocate memory and fill in the path for **kobj**."
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:152
msgid "``const struct kobject *kobj``"
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:147
msgid "kobject in question, with which to build the path"
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:149
#: ../../../driver-api/basics:131: drivers/base/devres.c:1165
msgid "``gfp_t gfp_mask``"
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:148
msgid "the allocation type used to allocate the path"
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:150
msgid "The newly allocated memory, caller must free with kfree()."
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:300
msgid "Set the name of a kobject."
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:306 lib/kobject.c:328
#: lib/kobject.c:384 lib/kobject.c:440 lib/kobject.c:471 lib/kobject.c:540
#: lib/kobject.c:619 lib/kobject.c:639 lib/kobject.c:731
#: ../../../driver-api/basics:111: lib/kobject_uevent.c:470
#: lib/kobject_uevent.c:652
msgid "``struct kobject *kobj``"
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:301
msgid "struct kobject to set the name of"
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:303 lib/kobject.c:382
#: lib/kobject.c:440 ../../../driver-api/basics:125: kernel/panic.c:428
#: ../../../driver-api/basics:131: drivers/base/devres.c:1026
#: drivers/base/devres.c:1058
msgid "``const char *fmt``"
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:302
msgid "format string used to build the name"
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:303
msgid ""
"This sets the name of the kobject.  If you have already added the kobject to "
"the system, you must call kobject_rename() in order to change the name of "
"the kobject."
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:322
msgid "Initialize a kobject structure."
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:323 lib/kobject.c:436
msgid "pointer to the kobject to initialize"
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:325 lib/kobject.c:438
msgid "``const struct kobj_type *ktype``"
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:324 lib/kobject.c:437
msgid "pointer to the ktype for this kobject."
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:325
msgid ""
"This function will properly initialize a kobject such that it can then be "
"passed to the kobject_add() call."
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:328
msgid ""
"After this function is called, the kobject MUST be cleaned up by a call to "
"kobject_put(), not by a call to kfree directly to ensure that all of the "
"memory is cleaned up properly."
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:378
msgid "The main kobject add function."
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:379
msgid "the kobject to add"
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:381 lib/kobject.c:439
#: lib/kobject.c:781
msgid "``struct kobject *parent``"
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:380
msgid "pointer to the parent of the kobject."
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:381
msgid "format to name the kobject with."
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:382
msgid ""
"The kobject name is set and added to the kobject hierarchy in this function."
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:385
msgid ""
"If **parent** is set, then the parent of the **kobj** will be set to it. If "
"**parent** is NULL, then the parent of the **kobj** will be set to the "
"kobject associated with the kset assigned to this kobject.  If no kset is "
"assigned to the kobject, then the kobject will be located in the root of the "
"sysfs tree."
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:391
msgid ""
"Note, no \"add\" uevent will be created with this call, the caller should "
"set up all of the necessary sysfs files for the object and then call "
"kobject_uevent() with the UEVENT_ADD parameter to ensure that userspace is "
"properly notified of this kobject's creation."
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:397
msgid ""
"If this function returns success, kobject_put() must also be called in order "
"to properly clean up the memory associated with the object."
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:400
msgid ""
"In short, once this function is called, kobject_put() MUST be called when "
"the use of the object is finished in order to properly free everything."
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:397
msgid ""
"If this function returns an error, kobject_put() must be called to properly "
"clean up the memory associated with the object.  Under no instance should "
"the kobject that is passed to this function be directly freed with a call to "
"kfree(), that can leak memory."
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:434
msgid "Initialize a kobject structure and add it to the kobject hierarchy."
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:438
msgid "pointer to the parent of this kobject."
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:439
msgid "the name of the kobject."
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:440
msgid "This function combines the call to kobject_init() and kobject_add()."
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:442
msgid ""
"If this function returns an error, kobject_put() must be called to properly "
"clean up the memory associated with the object.  This is the same type of "
"error handling after a call to kobject_add() and kobject lifetime rules are "
"the same here."
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:465
msgid "Change the name of an object."
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:466 lib/kobject.c:535
msgid "object in question."
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:468
msgid "``const char *new_name``"
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:467
msgid "object's new name"
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:468
msgid ""
"It is the responsibility of the caller to provide mutual exclusion between "
"two different calls of kobject_rename on the same kobject and to ensure that "
"new_name is valid and won't conflict with other kobjects."
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:534
msgid "Move object to another parent."
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:537
msgid "``struct kobject *new_parent``"
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:536
msgid "object's new parent (can be NULL)"
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:613
msgid "Unlink kobject from hierarchy."
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:614 lib/kobject.c:634
#: lib/kobject.c:726
msgid "object."
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:615
msgid ""
"This is the function that should be called to delete an object successfully "
"added via kobject_add()."
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:633
msgid "Increment refcount for object."
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:725
msgid "Decrement refcount for object."
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:727
msgid "Decrement the refcount, and if 0, call kobject_cleanup()."
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:777
msgid "Create a struct kobject dynamically and register it with sysfs."
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:779
msgid "the name for the kobject"
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:780
msgid "the parent kobject of this kobject, if any."
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:781
msgid ""
"This function creates a kobject structure dynamically and registers it with "
"sysfs.  When you are finished with this structure, call kobject_put() and "
"the structure will be dynamically freed when it is no longer being used."
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:786
msgid "If the kobject was not able to be created, NULL will be returned."
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:851
msgid "Initialize and add a kset."
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:857 lib/kobject.c:889
msgid "``struct kset *k``"
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:852 lib/kobject.c:884
msgid "kset."
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:854
msgid ""
"On error, the kset.kobj.name allocated by() kobj_set_name() is freed, it can "
"not be used any more."
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:883
msgid "Remove a kset."
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:896
msgid "Search for object in kset."
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:902
msgid "``struct kset *kset``"
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:897
msgid "kset we're looking in."
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:898
msgid "object's name."
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:899
msgid ""
"Lock kset via **kset->subsys**, and iterate over **kset->list**, looking for "
"a matching kobject. If matching object is found take a reference and return "
"the object."
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:988
msgid "Create a struct kset dynamically and add it to sysfs."
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:990
msgid "the name for the kset"
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:992
msgid "``const struct kset_uevent_ops *uevent_ops``"
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:991
msgid "a struct kset_uevent_ops for the kset"
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:993
msgid "``struct kobject *parent_kobj``"
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:992
msgid "the parent kobject of this kset, if any."
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:993
msgid ""
"This function creates a kset structure dynamically and registers it with "
"sysfs.  When you are finished with this structure, call kset_unregister() "
"and the structure will be dynamically freed when it is no longer being used."
msgstr ""

#: ../../../driver-api/basics:108: lib/kobject.c:998
msgid "If the kset was not able to be created, NULL will be returned."
msgstr ""

#: ../../../driver-api/basics:111: lib/kobject_uevent.c:464
msgid "send an uevent with environmental data"
msgstr ""

#: ../../../driver-api/basics:111: lib/kobject_uevent.c:466
#: lib/kobject_uevent.c:648
msgid "struct kobject that the action is happening to"
msgstr ""

#: ../../../driver-api/basics:111: lib/kobject_uevent.c:468
#: lib/kobject_uevent.c:650
msgid "``enum kobject_action action``"
msgstr ""

#: ../../../driver-api/basics:111: lib/kobject_uevent.c:467
#: lib/kobject_uevent.c:649
msgid "action that is happening"
msgstr ""

#: ../../../driver-api/basics:111: lib/kobject_uevent.c:469
msgid "``char *envp_ext[]``"
msgstr ""

#: ../../../driver-api/basics:111: lib/kobject_uevent.c:468
msgid "pointer to environmental data"
msgstr ""

#: ../../../driver-api/basics:111: lib/kobject_uevent.c:469
msgid ""
"Returns 0 if kobject_uevent_env() is completed with success or the "
"corresponding error when it fails."
msgstr ""

#: ../../../driver-api/basics:111: lib/kobject_uevent.c:646
msgid "notify userspace by sending an uevent"
msgstr ""

#: ../../../driver-api/basics:111: lib/kobject_uevent.c:650
msgid ""
"Returns 0 if kobject_uevent() is completed with success or the corresponding "
"error when it fails."
msgstr ""

#: ../../../driver-api/basics:111: lib/kobject_uevent.c:661
msgid "add key value string to the environment buffer"
msgstr ""

#: ../../../driver-api/basics:111: lib/kobject_uevent.c:667
msgid "``struct kobj_uevent_env *env``"
msgstr ""

#: ../../../driver-api/basics:111: lib/kobject_uevent.c:662
msgid "environment buffer structure"
msgstr ""

#: ../../../driver-api/basics:111: lib/kobject_uevent.c:664
msgid "``const char *format``"
msgstr ""

#: ../../../driver-api/basics:111: lib/kobject_uevent.c:663
msgid "printf format for the key=value pair"
msgstr ""

#: ../../../driver-api/basics:111: lib/kobject_uevent.c:664
msgid ""
"Returns 0 if environment variable was added successfully or -ENOMEM if no "
"space was available."
msgstr ""

#: ../../../driver-api/basics.rst:115
msgid "Kernel utility functions"
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:84
msgid "``might_sleep ()``"
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:82
msgid "annotation for functions that can sleep"
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:83
msgid ""
"this macro will print a stack trace if it is executed in an atomic context "
"(spinlock, irq-handler, ...). Additional sections where blocking is not "
"allowed can be annotated with non_block_start() and non_block_end() pairs."
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:88
msgid ""
"This is a useful debugging help to be able to catch problems early and not "
"be bitten later when the calling function happens to sleep when it is not "
"supposed to."
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:98
msgid "``cant_sleep ()``"
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:96
msgid "annotation for functions that cannot sleep"
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:97
msgid ""
"this macro will print a stack trace if it is executed with preemption enabled"
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:107
msgid "``cant_migrate ()``"
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:105
msgid "annotation for functions that cannot migrate"
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:106
msgid "Will print a stack trace if executed in code which is migratable"
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:118
msgid "``non_block_start ()``"
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:116
msgid "annotate the start of section where sleeping is prohibited"
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:117
msgid ""
"This is on behalf of the oom reaper, specifically when it is calling the mmu "
"notifiers. The problem is that if the notifier were to block on, for "
"example, mutex_lock() and if the process which holds that mutex were to "
"perform a sleeping memory allocation, the oom reaper is now blocked on "
"completion of that memory allocation. Other blocking calls like wait_event() "
"pose similar issues."
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:129
msgid "``non_block_end ()``"
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:127
msgid "annotate the end of section where sleeping is prohibited"
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:128
msgid "Closes a section opened by non_block_start()."
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:168
msgid "Values used for system_state."
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:172
msgid "**Constants**"
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:174
msgid "``SYSTEM_BOOTING``"
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:175
msgid "``0``, no init needed"
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:177
msgid "``SYSTEM_SCHEDULING``"
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:178
msgid "system is ready for scheduling; OK to use RCU"
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:180
msgid "``SYSTEM_FREEING_INITMEM``"
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:181
msgid "system is freeing all of initmem; almost running"
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:183
msgid "``SYSTEM_RUNNING``"
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:184
msgid "system is up and running"
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:186
msgid "``SYSTEM_HALT``"
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:187
msgid "system entered clean system halt state"
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:189
msgid "``SYSTEM_POWER_OFF``"
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:190
msgid "system entered shutdown/clean power off state"
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:192
msgid "``SYSTEM_RESTART``"
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:193
msgid "system entered emergency power off or normal restart"
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:195
msgid "``SYSTEM_SUSPEND``"
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:196
msgid "system entered suspend or hibernate state"
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:179
msgid ""
"Ordering of the states must not be changed as code checks for <, <=, >, >= "
"STATE."
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:245
msgid "``trace_printk (fmt, ...)``"
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:243
msgid "printf formatting in the ftrace buffer"
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:249
msgid "``fmt``"
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:244
msgid "the printf format for printing"
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:246
msgid "__trace_printk is an internal function for trace_printk() and"
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:247
msgid "the **ip** is passed in via the trace_printk() macro."
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:249
#: include/linux/kernel.h:312
msgid ""
"This function allows a kernel developer to debug fast path sections that "
"printk is not appropriate for. By scattering in various printk like tracing "
"in the code, a developer can quickly see where problems are occurring."
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:254
msgid ""
"This is intended as a debugging tool for the developer only. Please refrain "
"from leaving trace_printks scattered around in your code. (Extra memory is "
"used for special buffers that are allocated when trace_printk() is used.)"
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:259
msgid ""
"A little optimization trick is done here. If there's only one argument, "
"there's no need to scan the string for printf formats. The trace_puts() will "
"suffice. But how can we take advantage of using trace_puts() when "
"trace_printk() has only one argument? By stringifying the args and checking "
"the size we can tell whether or not there are args. "
"__stringify((__VA_ARGS__)) will turn into \"()\\0\" with a size of 3 when "
"there are no args, anything else will be bigger. All we need to do is define "
"a string to this, and then take its size and compare to 3. If it's bigger, "
"use do_trace_printk() otherwise, optimize it to trace_puts(). Then just let "
"gcc optimize the rest."
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:304
msgid "``trace_puts (str)``"
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:302
msgid "write a string into the ftrace buffer"
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:308
msgid "``str``"
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:303
msgid "the string to record"
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:305
msgid "__trace_bputs is an internal function for trace_puts and"
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:306
msgid "the **ip** is passed in via the trace_puts macro."
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:308
msgid ""
"This is similar to trace_printk() but is made for those really fast paths "
"that a developer wants the least amount of \"Heisenbug\" effects, where the "
"processing of the print format is still too much."
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:317
msgid ""
"This is intended as a debugging tool for the developer only. Please refrain "
"from leaving trace_puts scattered around in your code. (Extra memory is used "
"for special buffers that are allocated when trace_puts() is used.)"
msgstr ""

#: ../../../driver-api/basics:117: include/linux/kernel.h:322
msgid ""
"0 if nothing was written, positive # if string was. (1 when __trace_bputs is "
"used, strlen(str) when __trace_puts is used)"
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:243
msgid "Lock the console list"
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:244
msgid "For console list or console->flags updates"
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:267
msgid "Unlock the console list"
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:268
msgid "Counterpart to console_list_lock()"
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:278
msgid "Register a new reader for the SRCU-protected console list"
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:279
msgid "Use for_each_console_srcu() to iterate the console list"
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:283
#: kernel/printk/printk.c:4940
msgid "Any context."
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:284
msgid "A cookie to pass to console_srcu_read_unlock()."
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:294
msgid "Unregister an old reader from the SRCU-protected console list"
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:300
msgid "``int cookie``"
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:296
msgid "cookie returned from console_srcu_read_lock()"
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:297
msgid "Counterpart to console_srcu_read_lock()"
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:2654
msgid "Update a preferred console when matching devname is found."
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:2660
msgid "``const char *devname``"
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:2656
msgid "DEVNAME:0.0 style device name"
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:2657
msgid "Name of the corresponding console driver, e.g. \"ttyS\""
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:2659
msgid "``const short idx``"
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:2658
msgid "Console index, e.g. port number."
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:2659
msgid ""
"The function checks whether a device with the given **devname** is preferred "
"via the console=DEVNAME:0.0 command line option. It fills the missing "
"console driver name and console index so that a later register_console() "
"call could find (match) and enable this device."
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:2665
msgid ""
"It might be used when a driver subsystem initializes particular devices with "
"already known DEVNAME:0.0 style names. And it could predict which console "
"driver name and index this device would later get associated with."
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:2671
msgid "0 on success, negative error code on failure."
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:2807
msgid "block the console subsystem from printing"
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:2808
msgid ""
"Acquires a lock which guarantees that no consoles will be in or enter their "
"write() callback."
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:2811
msgid "Can sleep, returns nothing."
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:2829
msgid "try to block the console subsystem from printing"
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:2830
msgid ""
"Try to acquire a lock which guarantees that no consoles will be in or enter "
"their write() callback."
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:2833
msgid "returns 1 on success, and 0 on failure to acquire the lock."
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:3281
msgid "unblock the legacy console subsystem from printing"
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:3282
msgid ""
"Releases the console_lock which the caller holds to block printing of the "
"legacy console subsystem."
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:3285
msgid ""
"While the console_lock was held, console output may have been buffered by "
"printk(). If this is the case, console_unlock() emits the output on legacy "
"consoles prior to releasing the lock."
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:3289
msgid "console_unlock(); may be called from any context."
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:3305
msgid "yield the CPU if required"
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:3306
msgid ""
"If the console code is currently allowed to sleep, and if this CPU should "
"yield the CPU to another task, do so here."
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:3310
msgid "Must be called within console_lock();."
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:4228
msgid "force a registered console preferred"
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:4234
msgid "``struct console *con``"
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:4229
msgid "The registered console to force preferred."
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:4230
msgid "Must be called under console_list_lock()."
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:4607
msgid "caller-controlled printk ratelimiting"
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:4613
msgid "``unsigned long *caller_jiffies``"
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:4608
msgid "pointer to caller's state"
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:4610
msgid "``unsigned int interval_msecs``"
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:4609
msgid "minimum interval between prints"
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:4610
msgid ""
"printk_timed_ratelimit() returns true if more than **interval_msecs** "
"milliseconds have elapsed since the last time printk_timed_ratelimit() "
"returned true."
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:4632
msgid "register a kernel log dumper."
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:4638
#: kernel/printk/printk.c:4668
msgid "``struct kmsg_dumper *dumper``"
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:4633
#: kernel/printk/printk.c:4663
msgid "pointer to the kmsg_dumper structure"
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:4634
msgid ""
"Adds a kernel log dumper to the system. The dump callback in the structure "
"will be called when the kernel oopses or panics and must be set. Returns "
"zero on success and ``-EINVAL`` or ``-EBUSY`` otherwise."
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:4662
msgid "unregister a kmsg dumper."
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:4664
msgid ""
"Removes a dump device from the system. Returns zero on success and ``-"
"EINVAL`` otherwise."
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:4745
msgid "retrieve one kmsg log line"
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:4751
#: kernel/printk/printk.c:4807 kernel/printk/printk.c:4891
msgid "``struct kmsg_dump_iter *iter``"
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:4746
#: kernel/printk/printk.c:4802 kernel/printk/printk.c:4886
msgid "kmsg dump iterator"
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:4748
#: kernel/printk/printk.c:4804
msgid "``bool syslog``"
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:4747
#: kernel/printk/printk.c:4803
msgid "include the \"<4>\" prefixes"
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:4749
msgid "``char *line``"
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:4748
#: kernel/printk/printk.c:4804
msgid "buffer to copy the line to"
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:4750
#: kernel/printk/printk.c:4806 ../../../driver-api/basics:131:
#: drivers/base/devres.c:151 drivers/base/devres.c:847
#: drivers/base/devres.c:1236
msgid "``size_t size``"
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:4749
#: kernel/printk/printk.c:4805
msgid "maximum size of the buffer"
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:4751
msgid "``size_t *len``"
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:4750
#: kernel/printk/printk.c:4806
msgid "length of line placed into buffer"
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:4751
msgid ""
"Start at the beginning of the kmsg buffer, with the oldest kmsg record, and "
"copy one record into the provided buffer."
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:4754
msgid ""
"Consecutive calls will return the next available record moving towards the "
"end of the buffer with the youngest messages."
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:4757
#: kernel/printk/printk.c:4815
msgid ""
"A return value of FALSE indicates that there are no more records to read."
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:4801
msgid "copy kmsg log lines"
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:4805
msgid "``char *buf``"
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:4807
msgid "``size_t *len_out``"
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:4807
msgid ""
"Start at the end of the kmsg buffer and fill the provided buffer with as "
"many of the *youngest* kmsg records that fit into it. If the buffer is large "
"enough, all available kmsg records will be copied with a single call."
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:4812
msgid ""
"Consecutive calls will fill the buffer with the next block of available "
"older records, not including the earlier retrieved ones."
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:4885
msgid "reset the iterator"
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:4887
msgid ""
"Reset the dumper's iterator so that kmsg_dump_get_line() and "
"kmsg_dump_get_buffer() can be called again and used multiple times within "
"the same dumper.dump() callback."
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:4937
msgid ""
"Busy wait until the printk cpu-reentrant spinning lock is not owned by any "
"CPU."
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:4951
msgid "Try to acquire the printk cpu-reentrant spinning lock."
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:4952
msgid ""
"If no processor has the lock, the calling processor takes the lock and "
"becomes the owner. If the calling processor is already the owner of the "
"lock, this function succeeds immediately."
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:4958
#: kernel/printk/printk.c:5011
msgid "Any context. Expects interrupts to be disabled."
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:4959
msgid "1 on success, otherwise 0."
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:5007
msgid "Release the printk cpu-reentrant spinning lock."
msgstr ""

#: ../../../driver-api/basics:121: kernel/printk/printk.c:5008
msgid "The calling processor must be the owner of the lock."
msgstr ""

#: ../../../driver-api/basics:125: kernel/panic.c:422
msgid "halt the system"
msgstr ""

#: ../../../driver-api/basics:125: kernel/panic.c:423
msgid "The text string to print"
msgstr ""

#: ../../../driver-api/basics:125: kernel/panic.c:425
msgid "``va_list args``"
msgstr ""

#: ../../../driver-api/basics:125: kernel/panic.c:424
#: ../../../driver-api/basics:131: drivers/base/devres.c:1026
#: drivers/base/devres.c:1058
msgid "Arguments for the format string"
msgstr ""

#: ../../../driver-api/basics:125: kernel/panic.c:425
msgid "Display a message, then perform cleanups. This function never returns."
msgstr ""

#: ../../../driver-api/basics:125: kernel/panic.c:742
msgid "add a taint flag if not already set."
msgstr ""

#: ../../../driver-api/basics:125: kernel/panic.c:748
msgid "``unsigned flag``"
msgstr ""

#: ../../../driver-api/basics:125: kernel/panic.c:743
msgid "one of the TAINT_* constants."
msgstr ""

#: ../../../driver-api/basics:125: kernel/panic.c:745
msgid "``enum lockdep_ok lockdep_ok``"
msgstr ""

#: ../../../driver-api/basics:125: kernel/panic.c:744
msgid "whether lock debugging is still OK."
msgstr ""

#: ../../../driver-api/basics:125: kernel/panic.c:745
msgid ""
"If something bad has gone wrong, you'll want **lockdebug_ok** = false, but "
"for some notewortht-but-not-corrupting cases, it can be set to true."
msgstr ""

#: ../../../driver-api/basics.rst:129
msgid "Device Resource Management"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:148
msgid "Allocate device resource data"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:154
#: drivers/base/devres.c:179 drivers/base/devres.c:276
#: drivers/base/devres.c:341 drivers/base/devres.c:376
#: drivers/base/devres.c:409
msgid "``dr_release_t release``"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:149
msgid "Release function devres will be associated with"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:150
#: drivers/base/devres.c:846
msgid "Allocation size"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:152
#: drivers/base/devres.c:544 drivers/base/devres.c:848
#: drivers/base/devres.c:884 drivers/base/devres.c:984
#: drivers/base/devres.c:1002 drivers/base/devres.c:1024
#: drivers/base/devres.c:1056 drivers/base/devres.c:1105
#: drivers/base/devres.c:1127
msgid "``gfp_t gfp``"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:151
#: drivers/base/devres.c:543
msgid "Allocation flags"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:153
msgid "``int nid``"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:152
msgid "NUMA node"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:153
msgid "Name of the resource"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:154
msgid ""
"Allocate devres of **size** bytes.  The allocated area is zeroed, then "
"associated with **release**.  The returned pointer can be passed to other "
"devres_*() functions."
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:159
msgid "Pointer to allocated devres on success, NULL on failure."
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:176
msgid "Resource iterator"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:182
#: drivers/base/devres.c:241 drivers/base/devres.c:279
#: drivers/base/devres.c:309 drivers/base/devres.c:344
#: drivers/base/devres.c:379 drivers/base/devres.c:412
#: drivers/base/devres.c:546 drivers/base/devres.c:612
#: drivers/base/devres.c:637 drivers/base/devres.c:667
#: drivers/base/devres.c:742 drivers/base/devres.c:780
#: drivers/base/devres.c:814 drivers/base/devres.c:850
#: drivers/base/devres.c:885 drivers/base/devres.c:985
#: drivers/base/devres.c:1004 drivers/base/devres.c:1026
#: drivers/base/devres.c:1058 drivers/base/devres.c:1082
#: drivers/base/devres.c:1106 drivers/base/devres.c:1127
#: drivers/base/devres.c:1168 drivers/base/devres.c:1207
#: drivers/base/devres.c:1239 drivers/base/devres.c:1275
msgid "``struct device *dev``"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:177
msgid "Device to iterate resource from"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:178
#: drivers/base/devres.c:275 drivers/base/devres.c:340
#: drivers/base/devres.c:375 drivers/base/devres.c:408
msgid "Look for resources associated with this release function"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:180
#: drivers/base/devres.c:277 drivers/base/devres.c:307
#: drivers/base/devres.c:342 drivers/base/devres.c:377
#: drivers/base/devres.c:410
msgid "``dr_match_t match``"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:179
#: drivers/base/devres.c:276 drivers/base/devres.c:306
#: drivers/base/devres.c:341 drivers/base/devres.c:376
#: drivers/base/devres.c:409
msgid "Match function (optional)"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:181
#: drivers/base/devres.c:278 drivers/base/devres.c:308
#: drivers/base/devres.c:343 drivers/base/devres.c:378
#: drivers/base/devres.c:411
msgid "``void *match_data``"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:180
#: drivers/base/devres.c:277 drivers/base/devres.c:307
#: drivers/base/devres.c:342 drivers/base/devres.c:377
#: drivers/base/devres.c:410
msgid "Data for the match function"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:182
msgid "``void (*fn)(struct device *, void *, void *)``"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:181
msgid "Function to be called for each matched resource."
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:182
msgid "Data for **fn**, the 3rd parameter of **fn**"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:183
msgid ""
"Call **fn** for each devres of **dev** which is associated with **release** "
"and for which **match** returns 1."
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:187
msgid "void"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:218
msgid "Free device resource data"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:224
#: drivers/base/devres.c:238
msgid "``void *res``"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:219
msgid "Pointer to devres data to free"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:220
msgid "Free devres created with devres_alloc()."
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:235
msgid "Register device resource"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:236
msgid "Device to add resource to"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:237
msgid "Resource to register"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:238
msgid ""
"Register devres **res** to **dev**.  **res** should have been allocated "
"using devres_alloc().  On driver detach, the associated release function "
"will be invoked and devres will be freed automatically."
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:273
msgid "Find device resource"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:274
msgid "Device to lookup resource from"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:278
msgid ""
"Find the latest devres of **dev** which is associated with **release** and "
"for which **match** returns 1.  If **match** is NULL, it's considered to "
"match all."
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:283
msgid "Pointer to found devres, NULL if not found."
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:303
msgid "Find devres, if non-existent, add one atomically"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:304
msgid "Device to lookup or add devres for"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:306
msgid "``void *new_res``"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:305
msgid "Pointer to new initialized devres to add if not found"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:308
msgid ""
"Find the latest devres of **dev** which has the same release function as "
"**new_res** and for which **match** return 1.  If found, **new_res** is "
"freed; otherwise, **new_res** is added atomically."
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:313
msgid "Pointer to found or added devres."
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:338
msgid "Find a device resource and remove it"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:339
#: drivers/base/devres.c:374 drivers/base/devres.c:407
msgid "Device to find resource from"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:343
msgid ""
"Find the latest devres of **dev** associated with **release** and for which "
"**match** returns 1.  If **match** is NULL, it's considered to match all.  "
"If found, the resource is removed atomically and returned."
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:349
msgid "Pointer to removed devres on success, NULL if not found."
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:373
msgid "Find a device resource and destroy it"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:378
msgid ""
"Find the latest devres of **dev** associated with **release** and for which "
"**match** returns 1.  If **match** is NULL, it's considered to match all.  "
"If found, the resource is removed atomically and freed."
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:382
msgid ""
"Note that the release function for the resource will not be called, only the "
"devres-allocated data will be freed.  The caller becomes responsible for "
"freeing any other data."
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:387
#: drivers/base/devres.c:417
msgid "0 if devres is found and freed, -ENOENT if not found."
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:406
msgid "Find a device resource and destroy it, calling release"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:411
msgid ""
"Find the latest devres of **dev** associated with **release** and for which "
"**match** returns 1.  If **match** is NULL, it's considered to match all.  "
"If found, the resource is removed atomically, the release function called "
"and the resource freed."
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:540
msgid "Open a new devres group"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:541
msgid "Device to open devres group for"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:543
#: drivers/base/devres.c:609 drivers/base/devres.c:634
#: drivers/base/devres.c:664
msgid "``void *id``"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:542
msgid "Separator ID"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:544
msgid ""
"Open a new devres group for **dev** with **id**.  For **id**, using a "
"pointer to an object which won't be used for another group is recommended.  "
"If **id** is NULL, address-wise unique ID is created."
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:549
msgid "ID of the new group, NULL on failure."
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:606
msgid "Close a devres group"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:607
msgid "Device to close devres group for"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:608
#: drivers/base/devres.c:633 drivers/base/devres.c:663
msgid "ID of target group, can be NULL"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:609
msgid ""
"Close the group identified by **id**.  If **id** is NULL, the latest open "
"group is selected."
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:631
msgid "Remove a devres group"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:632
msgid "Device to remove group for"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:634
msgid ""
"Remove the group identified by **id**.  If **id** is NULL, the latest open "
"group is selected.  Note that removing a group doesn't affect any other "
"resources."
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:661
msgid "Release resources in a devres group"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:662
msgid "Device to release group for"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:664
msgid ""
"Release all resources in the group identified by **id**.  If **id** is NULL, "
"the latest open group is selected.  The selected group and groups properly "
"nested inside the selected group are removed."
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:669
msgid "The number of released non-group resources."
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:736
msgid "add a custom action to list of managed resources"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:737
#: drivers/base/devres.c:775 drivers/base/devres.c:809
msgid "Device that owns the action"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:739
#: drivers/base/devres.c:777 drivers/base/devres.c:811
msgid "``void (*action)(void *)``"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:738
msgid "Function that should be called"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:739
#: drivers/base/devres.c:777 drivers/base/devres.c:811
msgid "Pointer to data passed to **action** implementation"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:740
msgid "Name of the resource (for debugging purposes)"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:741
msgid ""
"This adds a custom action to the list of managed resources so that it gets "
"executed as part of standard resource unwinding."
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:774
msgid "removes previously added custom action"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:776
#: drivers/base/devres.c:810
msgid "Function implementing the action"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:778
msgid ""
"Removes instance of **action** previously added by devm_add_action(). Both "
"action and data should match one of the existing entries."
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:781
msgid ""
"In contrast to devm_remove_action(), this function does not WARN() if no "
"entry could have been found."
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:784
msgid ""
"This should only be used if the action is contained in an object with "
"independent lifetime management, e.g. the Devres rust abstraction."
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:787
msgid ""
"Causing the warning from regular driver code most likely indicates an abuse "
"of the devres API."
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:791
msgid "0 on success, -ENOENT if no entry could have been found."
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:808
msgid "release previously added custom action"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:812
msgid ""
"Releases and removes instance of **action** previously added by "
"devm_add_action().  Both action and data should match one of the existing "
"entries."
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:844
msgid "Resource-managed kmalloc"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:845
#: drivers/base/devres.c:981 drivers/base/devres.c:1022
#: drivers/base/devres.c:1054 drivers/base/devres.c:1163
msgid "Device to allocate memory for"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:847
#: drivers/base/devres.c:883 drivers/base/devres.c:1164
msgid "Allocation gfp flags"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:848
msgid ""
"Managed kmalloc.  Memory allocated with this function is automatically freed "
"on driver detach.  Like all other devres resources, guaranteed alignment is "
"unsigned long long."
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:853
#: drivers/base/devres.c:1241
msgid "Pointer to allocated memory on success, NULL on failure."
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:879
msgid "Resource-managed krealloc()"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:880
msgid "Device to re-allocate memory for"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:882
msgid "``void *ptr``"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:881
msgid "Pointer to the memory chunk to re-allocate"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:883
msgid "``size_t new_size``"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:882
msgid "New allocation size"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:884
msgid ""
"Managed krealloc(). Resizes the memory chunk allocated with devm_kmalloc(). "
"Behaves similarly to regular krealloc(): if **ptr** is NULL or "
"ZERO_SIZE_PTR, it's the equivalent of devm_kmalloc(). If new_size is zero, "
"it frees the previously allocated memory and returns ZERO_SIZE_PTR. This "
"function doesn't change the order in which the release callback for the re-"
"alloc'ed devres will be called (except when falling back to devm_kmalloc() "
"or when freeing resources when new_size is zero). The contents of the memory "
"are preserved up to the lesser of new and old sizes."
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:979
msgid "Allocate resource managed space and copy an existing string into that."
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:983
#: drivers/base/devres.c:1001
msgid "``const char *s``"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:982
#: drivers/base/devres.c:1000
msgid "the string to duplicate"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:983
#: drivers/base/devres.c:1023 drivers/base/devres.c:1055
msgid "the GFP mask used in the devm_kmalloc() call when allocating memory"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:985
#: drivers/base/devres.c:1027 drivers/base/devres.c:1059
msgid "Pointer to allocated string on success, NULL on failure."
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:998
msgid "resource managed conditional string duplication"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:999
msgid "device for which to duplicate the string"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:1001
msgid "the GFP mask used in the kmalloc() call when allocating memory"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:1002
msgid ""
"Strings allocated by devm_kstrdup_const will be automatically freed when the "
"associated device is detached."
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:1006
msgid ""
"Source string if it is in .rodata section otherwise it falls back to "
"devm_kstrdup."
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:1020
#: drivers/base/devres.c:1052
msgid "Allocate resource managed space and format a string into that."
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:1025
#: drivers/base/devres.c:1057
msgid "The printf()-style format string"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:1027
msgid "``va_list ap``"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:1076
msgid "Resource-managed kfree"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:1077
#: drivers/base/devres.c:1101 drivers/base/devres.c:1123
#: drivers/base/devres.c:1202 drivers/base/devres.c:1270
msgid "Device this memory belongs to"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:1079
msgid "``const void *p``"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:1078
#: drivers/base/devres.c:1203
msgid "Memory to free"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:1079
msgid "Free memory allocated with devm_kmalloc()."
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:1100
msgid "Resource-managed kmemdup"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:1103
#: drivers/base/devres.c:1125
msgid "``const void *src``"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:1102
msgid "Memory region to duplicate"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:1104
#: drivers/base/devres.c:1126
msgid "``size_t len``"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:1103
msgid "Memory region length"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:1104
#: drivers/base/devres.c:1126
msgid "GFP mask to use"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:1105
msgid "Duplicate region of a memory using resource managed kmalloc"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:1121
msgid "conditionally duplicate and manage a region of memory"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:1124
msgid "memory region to duplicate"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:1125
msgid "memory region length,"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:1128
msgid ""
"source address if it is in .rodata or the return value of kmemdup() to which "
"the function falls back otherwise."
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:1162
msgid "Resource-managed __get_free_pages"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:1166
msgid "``unsigned int order``"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:1165
msgid "Allocation size is (1 << order) pages"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:1166
msgid ""
"Managed get_free_pages.  Memory allocated with this function is "
"automatically freed on driver detach."
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:1170
msgid "Address of allocated memory on success, 0 on failure."
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:1201
msgid "Resource-managed free_pages"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:1204
msgid "``unsigned long addr``"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:1204
msgid ""
"Free memory allocated with devm_get_free_pages(). Unlike free_pages, there "
"is no need to supply the **order**."
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:1233
msgid "Resource-managed alloc_percpu"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:1234
msgid "Device to allocate per-cpu memory for"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:1235
msgid "Size of per-cpu memory to allocate"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:1237
msgid "``size_t align``"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:1236
msgid "Alignment of per-cpu memory to allocate"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:1237
msgid ""
"Managed alloc_percpu. Per-cpu memory allocated with this function is "
"automatically freed on driver detach."
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:1269
msgid "Resource-managed free_percpu"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:1272
msgid "``void __percpu *pdata``"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:1271
msgid "Per-cpu memory to free"
msgstr ""

#: ../../../driver-api/basics:131: drivers/base/devres.c:1272
msgid "Free memory allocated with devm_alloc_percpu()."
msgstr ""
