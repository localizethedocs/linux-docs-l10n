# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-30 08:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../driver-api/media/drivers/sh_mobile_ceu_camera.rst:4
msgid "Cropping and Scaling algorithm, used in the sh_mobile_ceu_camera driver"
msgstr ""

#: ../../../driver-api/media/drivers/sh_mobile_ceu_camera.rst:6
msgid "Author: Guennadi Liakhovetski <g.liakhovetski@gmx.de>"
msgstr ""

#: ../../../driver-api/media/drivers/sh_mobile_ceu_camera.rst:9
msgid "Terminology"
msgstr ""

#: ../../../driver-api/media/drivers/sh_mobile_ceu_camera.rst:11
msgid ""
"sensor scales: horizontal and vertical scales, configured by the sensor "
"driver host scales: -\"- host driver combined scales: sensor_scale * "
"host_scale"
msgstr ""

#: ../../../driver-api/media/drivers/sh_mobile_ceu_camera.rst:17
msgid "Generic scaling / cropping scheme"
msgstr ""

#: ../../../driver-api/media/drivers/sh_mobile_ceu_camera.rst:45
msgid ""
"In the above chart minuses and slashes represent \"real\" data amounts, "
"points and accents represent \"useful\" data, basically, CEU scaled and "
"cropped output, mapped back onto the client's source plane."
msgstr ""

#: ../../../driver-api/media/drivers/sh_mobile_ceu_camera.rst:49
msgid "Such a configuration can be produced by user requests:"
msgstr ""

#: ../../../driver-api/media/drivers/sh_mobile_ceu_camera.rst:51
msgid ""
"S_CROP(left / top = (5) - (1), width / height = (5') - (5)) S_FMT(width / "
"height = (6') - (6))"
msgstr ""

#: ../../../driver-api/media/drivers/sh_mobile_ceu_camera.rst:54
msgid "Here:"
msgstr ""

#: ../../../driver-api/media/drivers/sh_mobile_ceu_camera.rst:56
msgid ""
"(1) to (1') - whole max width or height (1) to (2)  - sensor cropped left or "
"top (2) to (2') - sensor cropped width or height (3) to (3') - sensor scale "
"(3) to (4)  - CEU cropped left or top (4) to (4') - CEU cropped width or "
"height (5) to (5') - reverse sensor scale applied to CEU cropped width or "
"height (2) to (5)  - reverse sensor scale applied to CEU cropped left or top "
"(6) to (6') - CEU scale - user window"
msgstr ""

#: ../../../driver-api/media/drivers/sh_mobile_ceu_camera.rst:68
msgid "S_FMT"
msgstr ""

#: ../../../driver-api/media/drivers/sh_mobile_ceu_camera.rst:70
msgid "Do not touch input rectangle - it is already optimal."
msgstr ""

#: ../../../driver-api/media/drivers/sh_mobile_ceu_camera.rst:72
msgid "Calculate current sensor scales:"
msgstr ""

#: ../../../driver-api/media/drivers/sh_mobile_ceu_camera.rst:74
msgid "scale_s = ((2') - (2)) / ((3') - (3))"
msgstr ""

#: ../../../driver-api/media/drivers/sh_mobile_ceu_camera.rst:76
msgid ""
"2. Calculate \"effective\" input crop (sensor subwindow) - CEU crop scaled "
"back at current sensor scales onto input window - this is user S_CROP:"
msgstr ""

#: ../../../driver-api/media/drivers/sh_mobile_ceu_camera.rst:79
msgid "width_u = (5') - (5) = ((4') - (4)) * scale_s"
msgstr ""

#: ../../../driver-api/media/drivers/sh_mobile_ceu_camera.rst:81
msgid ""
"3. Calculate new combined scales from \"effective\" input window to "
"requested user window:"
msgstr ""

#: ../../../driver-api/media/drivers/sh_mobile_ceu_camera.rst:84
msgid "scale_comb = width_u / ((6') - (6))"
msgstr ""

#: ../../../driver-api/media/drivers/sh_mobile_ceu_camera.rst:86
msgid ""
"4. Calculate sensor output window by applying combined scales to real input "
"window:"
msgstr ""

#: ../../../driver-api/media/drivers/sh_mobile_ceu_camera.rst:89
msgid "width_s_out = ((7') - (7)) = ((2') - (2)) / scale_comb"
msgstr ""

#: ../../../driver-api/media/drivers/sh_mobile_ceu_camera.rst:91
msgid "Apply iterative sensor S_FMT for sensor output window."
msgstr ""

#: ../../../driver-api/media/drivers/sh_mobile_ceu_camera.rst:93
msgid "subdev->video_ops->s_fmt(.width = width_s_out)"
msgstr ""

#: ../../../driver-api/media/drivers/sh_mobile_ceu_camera.rst:95
msgid "Retrieve sensor output window (g_fmt)"
msgstr ""

#: ../../../driver-api/media/drivers/sh_mobile_ceu_camera.rst:97
msgid "Calculate new sensor scales:"
msgstr ""

#: ../../../driver-api/media/drivers/sh_mobile_ceu_camera.rst:99
msgid "scale_s_new = ((3')_new - (3)_new) / ((2') - (2))"
msgstr ""

#: ../../../driver-api/media/drivers/sh_mobile_ceu_camera.rst:101
msgid ""
"8. Calculate new CEU crop - apply sensor scales to previously calculated "
"\"effective\" crop:"
msgstr ""

#: ../../../driver-api/media/drivers/sh_mobile_ceu_camera.rst:104
msgid ""
"width_ceu = (4')_new - (4)_new = width_u / scale_s_new left_ceu = (4)_new - "
"(3)_new = ((5) - (2)) / scale_s_new"
msgstr ""

#: ../../../driver-api/media/drivers/sh_mobile_ceu_camera.rst:107
msgid "Use CEU cropping to crop to the new window:"
msgstr ""

#: ../../../driver-api/media/drivers/sh_mobile_ceu_camera.rst:109
msgid "ceu_crop(.width = width_ceu, .left = left_ceu)"
msgstr ""

#: ../../../driver-api/media/drivers/sh_mobile_ceu_camera.rst:111
msgid "Use CEU scaling to scale to the requested user window:"
msgstr ""

#: ../../../driver-api/media/drivers/sh_mobile_ceu_camera.rst:113
msgid "scale_ceu = width_ceu / width"
msgstr ""

#: ../../../driver-api/media/drivers/sh_mobile_ceu_camera.rst:117
msgid "S_CROP"
msgstr ""

#: ../../../driver-api/media/drivers/sh_mobile_ceu_camera.rst:119
msgid "The :ref:`V4L2 crop API <crop-scale>` says:"
msgstr ""

#: ../../../driver-api/media/drivers/sh_mobile_ceu_camera.rst:121
msgid ""
"\"...specification does not define an origin or units. However by convention "
"drivers should horizontally count unscaled samples relative to 0H.\""
msgstr ""

#: ../../../driver-api/media/drivers/sh_mobile_ceu_camera.rst:124
msgid ""
"We choose to follow the advise and interpret cropping units as client input "
"pixels."
msgstr ""

#: ../../../driver-api/media/drivers/sh_mobile_ceu_camera.rst:127
msgid "Cropping is performed in the following 6 steps:"
msgstr ""

#: ../../../driver-api/media/drivers/sh_mobile_ceu_camera.rst:129
msgid "Request exactly user rectangle from the sensor."
msgstr ""

#: ../../../driver-api/media/drivers/sh_mobile_ceu_camera.rst:131
msgid ""
"If smaller - iterate until a larger one is obtained. Result: sensor cropped "
"to 2 : 2', target crop 5 : 5', current output format 6' - 6."
msgstr ""

#: ../../../driver-api/media/drivers/sh_mobile_ceu_camera.rst:134
msgid ""
"In the previous step the sensor has tried to preserve its output frame as "
"good as possible, but it could have changed. Retrieve it again."
msgstr ""

#: ../../../driver-api/media/drivers/sh_mobile_ceu_camera.rst:137
msgid ""
"Sensor scaled to 3 : 3'. Sensor's scale is (2' - 2) / (3' - 3). Calculate "
"intermediate window: 4' - 4 = (5' - 5) * (3' - 3) / (2' - 2)"
msgstr ""

#: ../../../driver-api/media/drivers/sh_mobile_ceu_camera.rst:140
msgid "Calculate and apply host scale = (6' - 6) / (4' - 4)"
msgstr ""

#: ../../../driver-api/media/drivers/sh_mobile_ceu_camera.rst:142
msgid "Calculate and apply host crop: 6 - 7 = (5 - 2) * (6' - 6) / (5' - 5)"
msgstr ""
