# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../driver-api/serial/serial-iso7816.rst:3
msgid "ISO7816 Serial Communications"
msgstr ""

#: ../../../driver-api/serial/serial-iso7816.rst:6
msgid "1. Introduction"
msgstr ""

#: ../../../driver-api/serial/serial-iso7816.rst:8
msgid ""
"ISO/IEC7816 is a series of standards specifying integrated circuit cards "
"(ICC) also known as smart cards."
msgstr ""

#: ../../../driver-api/serial/serial-iso7816.rst:12
msgid "2. Hardware-related considerations"
msgstr ""

#: ../../../driver-api/serial/serial-iso7816.rst:14
msgid ""
"Some CPUs/UARTs (e.g., Microchip AT91) contain a built-in mode capable of "
"handling communication with a smart card."
msgstr ""

#: ../../../driver-api/serial/serial-iso7816.rst:17
msgid ""
"For these microcontrollers, the Linux driver should be made capable of "
"working in both modes, and proper ioctls (see later) should be made "
"available at user-level to allow switching from one mode to the other, and "
"vice versa."
msgstr ""

#: ../../../driver-api/serial/serial-iso7816.rst:23
msgid "3. Data Structures Already Available in the Kernel"
msgstr ""

#: ../../../driver-api/serial/serial-iso7816.rst:25
msgid ""
"The Linux kernel provides the serial_iso7816 structure (see [1]) to handle "
"ISO7816 communications. This data structure is used to set and configure "
"ISO7816 parameters in ioctls."
msgstr ""

#: ../../../driver-api/serial/serial-iso7816.rst:29
msgid ""
"Any driver for devices capable of working both as RS232 and ISO7816 should "
"implement the iso7816_config callback in the uart_port structure. The "
"serial_core calls iso7816_config to do the device specific part in response "
"to TIOCGISO7816 and TIOCSISO7816 ioctls (see below). The iso7816_config "
"callback receives a pointer to struct serial_iso7816."
msgstr ""

#: ../../../driver-api/serial/serial-iso7816.rst:36
msgid "4. Usage from user-level"
msgstr ""

#: ../../../driver-api/serial/serial-iso7816.rst:38
msgid ""
"From user-level, ISO7816 configuration can be get/set using the previous "
"ioctls. For instance, to set ISO7816 you can use the following code::"
msgstr ""

#: ../../../driver-api/serial/serial-iso7816.rst:88
msgid "5. References"
msgstr ""

#: ../../../driver-api/serial/serial-iso7816.rst:90
msgid "[1]    include/uapi/linux/serial.h"
msgstr ""
