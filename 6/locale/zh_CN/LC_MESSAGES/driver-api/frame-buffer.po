# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-14 08:59+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../driver-api/frame-buffer.rst:2
msgid "Frame Buffer Library"
msgstr ""

#: ../../../driver-api/frame-buffer.rst:4
msgid ""
"The frame buffer drivers depend heavily on four data structures. These "
"structures are declared in include/linux/fb.h. They are fb_info, "
"fb_var_screeninfo, fb_fix_screeninfo and fb_monospecs. The last three can be "
"made available to and from userland."
msgstr ""

#: ../../../driver-api/frame-buffer.rst:9
msgid ""
"fb_info defines the current state of a particular video card. Inside "
"fb_info, there exists a fb_ops structure which is a collection of needed "
"functions to make fbdev and fbcon work. fb_info is only visible to the "
"kernel."
msgstr ""

#: ../../../driver-api/frame-buffer.rst:14
msgid ""
"fb_var_screeninfo is used to describe the features of a video card that are "
"user defined. With fb_var_screeninfo, things such as depth and the "
"resolution may be defined."
msgstr ""

#: ../../../driver-api/frame-buffer.rst:18
msgid ""
"The next structure is fb_fix_screeninfo. This defines the properties of a "
"card that are created when a mode is set and can't be changed otherwise. A "
"good example of this is the start of the frame buffer memory. This \"locks\" "
"the address of the frame buffer memory, so that it cannot be changed or "
"moved."
msgstr ""

#: ../../../driver-api/frame-buffer.rst:24
msgid ""
"The last structure is fb_monospecs. In the old API, there was little "
"importance for fb_monospecs. This allowed for forbidden things such as "
"setting a mode of 800x600 on a fix frequency monitor. With the new API, "
"fb_monospecs prevents such things, and if used correctly, can prevent a "
"monitor from being cooked. fb_monospecs will not be useful until kernels 2.5."
"x."
msgstr ""

#: ../../../driver-api/frame-buffer.rst:32
msgid "Frame Buffer Memory"
msgstr ""

#: ../../../driver-api/frame-buffer:34: drivers/video/fbdev/core/fbmem.c:564
msgid "registers a frame buffer device"
msgstr ""

#: ../../../driver-api/frame-buffer:34: drivers/video/fbdev/core/fbmem.c:568
#: drivers/video/fbdev/core/fbmem.c:590 drivers/video/fbdev/core/fbmem.c:622
#: drivers/video/fbdev/core/fbmem.c:645 ../../../driver-api/frame-buffer:40:
#: drivers/video/fbdev/core/fbcmap.c:144 drivers/video/fbdev/core/fbcmap.c:164
#: drivers/video/fbdev/core/fbcmap.c:226 drivers/video/fbdev/core/fbcmap.c:302
#: drivers/video/fbdev/core/fbcmap.c:325 ../../../driver-api/frame-buffer:46:
#: drivers/video/fbdev/core/modedb.c:540 drivers/video/fbdev/core/modedb.c:1089
#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:584
#: drivers/video/fbdev/core/modedb.c:856 drivers/video/fbdev/core/modedb.c:903
#: drivers/video/fbdev/core/modedb.c:928 drivers/video/fbdev/core/modedb.c:952
#: drivers/video/fbdev/core/modedb.c:994 drivers/video/fbdev/core/modedb.c:1033
#: drivers/video/fbdev/core/modedb.c:1056
#: drivers/video/fbdev/core/modedb.c:1114
#: drivers/video/fbdev/core/modedb.c:1129 ../../../driver-api/frame-buffer:55:
#: drivers/video/fbdev/macmodes.c:214 drivers/video/fbdev/macmodes.c:362
#: drivers/video/fbdev/macmodes.c:384
msgid "**Parameters**"
msgstr ""

#: ../../../driver-api/frame-buffer:34: drivers/video/fbdev/core/fbmem.c:570
#: drivers/video/fbdev/core/fbmem.c:592 drivers/video/fbdev/core/fbmem.c:621
msgid "``struct fb_info *fb_info``"
msgstr ""

#: ../../../driver-api/frame-buffer:34: drivers/video/fbdev/core/fbmem.c:565
#: drivers/video/fbdev/core/fbmem.c:587 drivers/video/fbdev/core/fbmem.c:620
#: ../../../driver-api/frame-buffer:40: drivers/video/fbdev/core/fbcmap.c:224
#: ../../../driver-api/frame-buffer:46: drivers/video/fbdev/core/modedb.c:538
#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:582
#: ../../../driver-api/frame-buffer:55: drivers/video/fbdev/macmodes.c:382
msgid "frame buffer info structure"
msgstr ""

#: ../../../driver-api/frame-buffer:34: drivers/video/fbdev/core/fbmem.c:567
#: drivers/video/fbdev/core/fbmem.c:589 drivers/video/fbdev/core/fbmem.c:622
#: drivers/video/fbdev/core/fbmem.c:645 ../../../driver-api/frame-buffer:40:
#: drivers/video/fbdev/core/fbcmap.c:3 drivers/video/fbdev/core/fbcmap.c:143
#: drivers/video/fbdev/core/fbcmap.c:164 drivers/video/fbdev/core/fbcmap.c:226
#: drivers/video/fbdev/core/fbcmap.c:301 ../../../driver-api/frame-buffer:46:
#: drivers/video/fbdev/core/modedb.c:542 ../../../driver-api/frame-buffer:49:
#: drivers/video/fbdev/core/modedb.c:589 drivers/video/fbdev/core/modedb.c:954
#: drivers/video/fbdev/core/modedb.c:995 ../../../driver-api/frame-buffer:55:
#: drivers/video/fbdev/macmodes.c:215 drivers/video/fbdev/macmodes.c:361
#: drivers/video/fbdev/macmodes.c:386
msgid "**Description**"
msgstr ""

#: ../../../driver-api/frame-buffer:34: drivers/video/fbdev/core/fbmem.c:566
msgid "Registers a frame buffer device **fb_info**."
msgstr ""

#: ../../../driver-api/frame-buffer:34: drivers/video/fbdev/core/fbmem.c:568
#: drivers/video/fbdev/core/fbmem.c:590 drivers/video/fbdev/core/fbmem.c:623
#: ../../../driver-api/frame-buffer:55: drivers/video/fbdev/macmodes.c:217
msgid "Returns negative errno on error, or zero for success."
msgstr ""

#: ../../../driver-api/frame-buffer:34: drivers/video/fbdev/core/fbmem.c:586
msgid "releases a frame buffer device"
msgstr ""

#: ../../../driver-api/frame-buffer:34: drivers/video/fbdev/core/fbmem.c:588
msgid "Unregisters a frame buffer device **fb_info**."
msgstr ""

#: ../../../driver-api/frame-buffer:34: drivers/video/fbdev/core/fbmem.c:592
msgid ""
"This function will also notify the framebuffer console to release the driver."
msgstr ""

#: ../../../driver-api/frame-buffer:34: drivers/video/fbdev/core/fbmem.c:595
msgid ""
"This is meant to be called within a driver's module_exit() function. If this "
"is called outside module_exit(), ensure that the driver implements fb_open() "
"and fb_release() to check that no processes are using the device."
msgstr ""

#: ../../../driver-api/frame-buffer:34: drivers/video/fbdev/core/fbmem.c:618
msgid "resource-managed frame buffer device registration"
msgstr ""

#: ../../../driver-api/frame-buffer:34: drivers/video/fbdev/core/fbmem.c:624
msgid "``struct device *dev``"
msgstr ""

#: ../../../driver-api/frame-buffer:34: drivers/video/fbdev/core/fbmem.c:619
msgid "device the framebuffer belongs to"
msgstr ""

#: ../../../driver-api/frame-buffer:34: drivers/video/fbdev/core/fbmem.c:621
msgid "Registers a frame buffer device **fb_info** to device **dev**."
msgstr ""

#: ../../../driver-api/frame-buffer:34: drivers/video/fbdev/core/fbmem.c:641
msgid "low level driver signals suspend"
msgstr ""

#: ../../../driver-api/frame-buffer:34: drivers/video/fbdev/core/fbmem.c:647
#: ../../../driver-api/frame-buffer:40: drivers/video/fbdev/core/fbcmap.c:225
#: ../../../driver-api/frame-buffer:46: drivers/video/fbdev/core/modedb.c:539
#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:583
#: ../../../driver-api/frame-buffer:55: drivers/video/fbdev/macmodes.c:383
msgid "``struct fb_info *info``"
msgstr ""

#: ../../../driver-api/frame-buffer:34: drivers/video/fbdev/core/fbmem.c:642
msgid "framebuffer affected"
msgstr ""

#: ../../../driver-api/frame-buffer:34: drivers/video/fbdev/core/fbmem.c:644
msgid "``int state``"
msgstr ""

#: ../../../driver-api/frame-buffer:34: drivers/video/fbdev/core/fbmem.c:643
msgid "0 = resuming, !=0 = suspending"
msgstr ""

#: ../../../driver-api/frame-buffer:34: drivers/video/fbdev/core/fbmem.c:644
msgid ""
"This is meant to be used by low level drivers to signal suspend/resume to "
"the core & clients. It must be called with the console semaphore held"
msgstr ""

#: ../../../driver-api/frame-buffer.rst:38
msgid "Frame Buffer Colormap"
msgstr ""

#: ../../../driver-api/frame-buffer:40: drivers/video/fbdev/core/fbcmap.c:140
msgid "deallocate a colormap"
msgstr ""

#: ../../../driver-api/frame-buffer:40: drivers/video/fbdev/core/fbcmap.c:146
#: drivers/video/fbdev/core/fbcmap.c:228
msgid "``struct fb_cmap *cmap``"
msgstr ""

#: ../../../driver-api/frame-buffer:40: drivers/video/fbdev/core/fbcmap.c:141
#: drivers/video/fbdev/core/fbcmap.c:161 drivers/video/fbdev/core/fbcmap.c:162
#: drivers/video/fbdev/core/fbcmap.c:223
msgid "frame buffer colormap structure"
msgstr ""

#: ../../../driver-api/frame-buffer:40: drivers/video/fbdev/core/fbcmap.c:142
msgid ""
"Deallocates a colormap that was previously allocated with fb_alloc_cmap()."
msgstr ""

#: ../../../driver-api/frame-buffer:40: drivers/video/fbdev/core/fbcmap.c:160
msgid "copy a colormap"
msgstr ""

#: ../../../driver-api/frame-buffer:40: drivers/video/fbdev/core/fbcmap.c:166
msgid "``const struct fb_cmap *from``"
msgstr ""

#: ../../../driver-api/frame-buffer:40: drivers/video/fbdev/core/fbcmap.c:163
msgid "``struct fb_cmap *to``"
msgstr ""

#: ../../../driver-api/frame-buffer:40: drivers/video/fbdev/core/fbcmap.c:163
msgid "Copy contents of colormap from **from** to **to**."
msgstr ""

#: ../../../driver-api/frame-buffer:40: drivers/video/fbdev/core/fbcmap.c:222
msgid "set the colormap"
msgstr ""

#: ../../../driver-api/frame-buffer:40: drivers/video/fbdev/core/fbcmap.c:225
msgid "Sets the colormap **cmap** for a screen of device **info**."
msgstr ""

#: ../../../driver-api/frame-buffer:40: drivers/video/fbdev/core/fbcmap.c:227
msgid "Returns negative errno on error, or zero on success."
msgstr ""

#: ../../../driver-api/frame-buffer:40: drivers/video/fbdev/core/fbcmap.c:298
msgid "get default colormap"
msgstr ""

#: ../../../driver-api/frame-buffer:40: drivers/video/fbdev/core/fbcmap.c:304
msgid "``int len``"
msgstr ""

#: ../../../driver-api/frame-buffer:40: drivers/video/fbdev/core/fbcmap.c:299
msgid "size of palette for a depth"
msgstr ""

#: ../../../driver-api/frame-buffer:40: drivers/video/fbdev/core/fbcmap.c:300
msgid ""
"Gets the default colormap for a specific screen depth.  **len** is the size "
"of the palette for a particular screen depth."
msgstr ""

#: ../../../driver-api/frame-buffer:40: drivers/video/fbdev/core/fbcmap.c:303
msgid "Returns pointer to a frame buffer colormap structure."
msgstr ""

#: ../../../driver-api/frame-buffer:40: drivers/video/fbdev/core/fbcmap.c:321
msgid "invert all defaults colormaps"
msgstr ""

#: ../../../driver-api/frame-buffer:40: drivers/video/fbdev/core/fbcmap.c:327
msgid "``void``"
msgstr ""

#: ../../../driver-api/frame-buffer:40: drivers/video/fbdev/core/fbcmap.c:1
msgid "no arguments"
msgstr ""

#: ../../../driver-api/frame-buffer:40: drivers/video/fbdev/core/fbcmap.c:322
msgid "Invert all default colormaps."
msgstr ""

#: ../../../driver-api/frame-buffer.rst:44
msgid "Frame Buffer Video Mode Database"
msgstr ""

#: ../../../driver-api/frame-buffer:46: drivers/video/fbdev/core/modedb.c:536
msgid "test a video mode"
msgstr ""

#: ../../../driver-api/frame-buffer:46: drivers/video/fbdev/core/modedb.c:542
#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:586
#: drivers/video/fbdev/core/modedb.c:905 ../../../driver-api/frame-buffer:55:
#: drivers/video/fbdev/macmodes.c:214 drivers/video/fbdev/macmodes.c:386
msgid "``struct fb_var_screeninfo *var``"
msgstr ""

#: ../../../driver-api/frame-buffer:46: drivers/video/fbdev/core/modedb.c:537
#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:581
#: ../../../driver-api/frame-buffer:55: drivers/video/fbdev/macmodes.c:381
msgid "frame buffer user defined part of display"
msgstr ""

#: ../../../driver-api/frame-buffer:46: drivers/video/fbdev/core/modedb.c:540
#: drivers/video/fbdev/core/modedb.c:1091 ../../../driver-api/frame-buffer:49:
#: drivers/video/fbdev/core/modedb.c:902 drivers/video/fbdev/core/modedb.c:996
#: drivers/video/fbdev/core/modedb.c:1058
msgid "``const struct fb_videomode *mode``"
msgstr ""

#: ../../../driver-api/frame-buffer:46: drivers/video/fbdev/core/modedb.c:539
#: ../../../driver-api/frame-buffer:55: drivers/video/fbdev/macmodes.c:213
msgid "frame buffer video mode structure"
msgstr ""

#: ../../../driver-api/frame-buffer:46: drivers/video/fbdev/core/modedb.c:541
msgid "``unsigned int bpp``"
msgstr ""

#: ../../../driver-api/frame-buffer:46: drivers/video/fbdev/core/modedb.c:540
msgid "color depth in bits per pixel"
msgstr ""

#: ../../../driver-api/frame-buffer:46: drivers/video/fbdev/core/modedb.c:541
msgid "Tries a video mode to test it's validity for device **info**."
msgstr ""

#: ../../../driver-api/frame-buffer:46: drivers/video/fbdev/core/modedb.c:543
msgid "Returns 1 on success."
msgstr ""

#: ../../../driver-api/frame-buffer:46: drivers/video/fbdev/core/modedb.c:1085
msgid "removed videomode entry from modelist"
msgstr ""

#: ../../../driver-api/frame-buffer:46: drivers/video/fbdev/core/modedb.c:1086
msgid "videomode to remove"
msgstr ""

#: ../../../driver-api/frame-buffer:46: drivers/video/fbdev/core/modedb.c:1088
#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:951
#: drivers/video/fbdev/core/modedb.c:994 drivers/video/fbdev/core/modedb.c:1032
#: drivers/video/fbdev/core/modedb.c:1055
#: drivers/video/fbdev/core/modedb.c:1116
#: drivers/video/fbdev/core/modedb.c:1129
msgid "``struct list_head *head``"
msgstr ""

#: ../../../driver-api/frame-buffer:46: drivers/video/fbdev/core/modedb.c:1087
#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:1054
#: drivers/video/fbdev/core/modedb.c:1111
#: drivers/video/fbdev/core/modedb.c:1128
msgid "struct list_head of modelist"
msgstr ""

#: ../../../driver-api/frame-buffer:46: drivers/video/fbdev/core/modedb.c:1089
#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:958
#: drivers/video/fbdev/core/modedb.c:1056
msgid "**NOTES**"
msgstr ""

#: ../../../driver-api/frame-buffer:46: drivers/video/fbdev/core/modedb.c:1089
msgid "Will remove all matching mode entries"
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:580
msgid "finds a valid video mode"
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:584
#: ../../../driver-api/frame-buffer:55: drivers/video/fbdev/macmodes.c:384
msgid "``const char *mode_option``"
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:583
msgid "string video mode to find"
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:585
msgid "``const struct fb_videomode *db``"
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:584
msgid "video mode database"
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:586
msgid "``unsigned int dbsize``"
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:585
msgid "size of **db**"
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:587
msgid "``const struct fb_videomode *default_mode``"
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:586
msgid "default video mode to fall back to"
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:588
#: ../../../driver-api/frame-buffer:55: drivers/video/fbdev/macmodes.c:385
msgid "``unsigned int default_bpp``"
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:587
#: ../../../driver-api/frame-buffer:55: drivers/video/fbdev/macmodes.c:384
msgid "default color depth in bits per pixel"
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:588
msgid ""
"Finds a suitable video mode, starting with the specified mode in "
"**mode_option** with fallback to **default_mode**.  If **default_mode** "
"fails, all modes in the video mode database will be tried."
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:593
msgid "Valid mode specifiers for **mode_option**::"
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:597
msgid "or ::"
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:601
msgid ""
"with <xres>, <yres>, <bpp> and <refresh> decimal numbers and <name> a string."
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:604
msgid ""
"If 'M' is present after yres (and before refresh/bpp if present), the "
"function will compute the timings using VESA(tm) Coordinated Video Timings "
"(CVT).  If 'R' is present after 'M', will compute with reduced blanking (for "
"flatpanels).  If 'i' or 'p' are present, compute interlaced or progressive "
"mode.  If 'm' is present, add margins equal to 1.8% of xres rounded down to "
"8 pixels, and 1.8% of yres. The char 'i', 'p' and 'm' must be after 'M' and "
"'R'. Example::"
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:614
msgid "**NOTE**"
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:615
msgid ""
"The passed struct **var** is _not_ cleared!  This allows you to supply "
"values for e.g. the grayscale and accel_flags fields."
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:618
msgid ""
"Returns zero for failure, 1 if using specified **mode_option**, 2 if using "
"specified **mode_option** with an ignored refresh rate, 3 if default mode is "
"used, 4 if fall back to any valid mode."
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:852
msgid "convert fb_var_screeninfo to fb_videomode"
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:858
msgid "``struct fb_videomode *mode``"
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:853
#: drivers/video/fbdev/core/modedb.c:901 drivers/video/fbdev/core/modedb.c:992
msgid "pointer to struct fb_videomode"
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:855
#: drivers/video/fbdev/core/modedb.c:954 drivers/video/fbdev/core/modedb.c:1035
msgid "``const struct fb_var_screeninfo *var``"
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:854
#: drivers/video/fbdev/core/modedb.c:900 drivers/video/fbdev/core/modedb.c:949
#: drivers/video/fbdev/core/modedb.c:1030
msgid "pointer to struct fb_var_screeninfo"
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:899
msgid "convert fb_videomode to fb_var_screeninfo"
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:924
msgid "compare 2 videomodes"
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:930
msgid "``const struct fb_videomode *mode1``"
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:925
msgid "first videomode"
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:927
msgid "``const struct fb_videomode *mode2``"
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:926
msgid "second videomode"
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:928
#: drivers/video/fbdev/core/modedb.c:952 drivers/video/fbdev/core/modedb.c:1033
msgid "**Return**"
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:928
msgid "1 if equal, 0 if not"
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:948
msgid "find best matching videomode"
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:950
#: drivers/video/fbdev/core/modedb.c:1031
msgid "pointer to struct list_head of modelist"
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:952
#: drivers/video/fbdev/core/modedb.c:1033
msgid "struct fb_videomode, NULL if none found"
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:954
msgid ""
"IMPORTANT: This function assumes that all modelist entries in info->modelist "
"are valid."
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:959
msgid ""
"Finds best matching videomode which has an equal or greater dimension than "
"var->xres and var->yres.  If more than 1 videomode is found, will return the "
"videomode with the highest refresh rate"
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:990
msgid "find closest videomode"
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:993
msgid "pointer to modelist"
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:994
msgid ""
"Finds best matching videomode, smaller or greater in dimension. If more than "
"1 videomode is found, will return the videomode with the closest refresh "
"rate."
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:1029
msgid "find a videomode which exactly matches the timings in var"
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:1052
msgid "adds videomode entry to modelist"
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:1053
msgid "videomode to add"
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:1056
msgid "Will only add unmatched mode entries"
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:1110
msgid "destroy modelist"
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:1125
msgid "convert mode array to mode list"
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:1131
msgid "``const struct fb_videomode *modedb``"
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:1126
msgid "array of struct fb_videomode"
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:1128
msgid "``int num``"
msgstr ""

#: ../../../driver-api/frame-buffer:49: drivers/video/fbdev/core/modedb.c:1127
msgid "number of entries in array"
msgstr ""

#: ../../../driver-api/frame-buffer.rst:53
msgid "Frame Buffer Macintosh Video Mode Database"
msgstr ""

#: ../../../driver-api/frame-buffer:55: drivers/video/fbdev/macmodes.c:210
msgid "converts vmode/cmode pair to var structure"
msgstr ""

#: ../../../driver-api/frame-buffer:55: drivers/video/fbdev/macmodes.c:216
msgid "``int vmode``"
msgstr ""

#: ../../../driver-api/frame-buffer:55: drivers/video/fbdev/macmodes.c:211
msgid "MacOS video mode"
msgstr ""

#: ../../../driver-api/frame-buffer:55: drivers/video/fbdev/macmodes.c:213
msgid "``int cmode``"
msgstr ""

#: ../../../driver-api/frame-buffer:55: drivers/video/fbdev/macmodes.c:212
msgid "MacOS color mode"
msgstr ""

#: ../../../driver-api/frame-buffer:55: drivers/video/fbdev/macmodes.c:214
msgid ""
"Converts a MacOS vmode/cmode pair to a frame buffer video mode structure."
msgstr ""

#: ../../../driver-api/frame-buffer:55: drivers/video/fbdev/macmodes.c:358
msgid "Convert monitor sense to vmode"
msgstr ""

#: ../../../driver-api/frame-buffer:55: drivers/video/fbdev/macmodes.c:364
msgid "``int sense``"
msgstr ""

#: ../../../driver-api/frame-buffer:55: drivers/video/fbdev/macmodes.c:359
msgid "Macintosh monitor sense number"
msgstr ""

#: ../../../driver-api/frame-buffer:55: drivers/video/fbdev/macmodes.c:360
msgid "Converts a Macintosh monitor sense number to a MacOS vmode number."
msgstr ""

#: ../../../driver-api/frame-buffer:55: drivers/video/fbdev/macmodes.c:363
msgid "Returns MacOS vmode video mode number."
msgstr ""

#: ../../../driver-api/frame-buffer:55: drivers/video/fbdev/macmodes.c:380
msgid "find a video mode"
msgstr ""

#: ../../../driver-api/frame-buffer:55: drivers/video/fbdev/macmodes.c:383
msgid "video mode name (see mac_modedb[])"
msgstr ""

#: ../../../driver-api/frame-buffer:55: drivers/video/fbdev/macmodes.c:385
msgid ""
"Finds a suitable video mode.  Tries to set mode specified by "
"**mode_option**.  If the name of the wanted mode begins with 'mac', the Mac "
"video mode database will be used, otherwise it will fall back to the "
"standard video mode database."
msgstr ""

#: ../../../driver-api/frame-buffer:55: drivers/video/fbdev/macmodes.c:390
msgid "**Note**"
msgstr ""

#: ../../../driver-api/frame-buffer:55: drivers/video/fbdev/macmodes.c:391
msgid "Function marked as __init and can only be used during"
msgstr ""

#: ../../../driver-api/frame-buffer:55: drivers/video/fbdev/macmodes.c:392
msgid "system boot."
msgstr ""

#: ../../../driver-api/frame-buffer:55: drivers/video/fbdev/macmodes.c:394
msgid "Returns error code from fb_find_mode (see fb_find_mode function)."
msgstr ""

#: ../../../driver-api/frame-buffer.rst:59
msgid "Frame Buffer Fonts"
msgstr ""

#: ../../../driver-api/frame-buffer.rst:61
msgid "Refer to the file lib/fonts/fonts.c for more information."
msgstr ""
