# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../mm/hwpoison.rst:3
msgid "hwpoison"
msgstr ""

#: ../../../mm/hwpoison.rst:6
msgid "What is hwpoison?"
msgstr ""

#: ../../../mm/hwpoison.rst:8
msgid ""
"Upcoming Intel CPUs have support for recovering from some memory errors "
"(``MCA recovery``). This requires the OS to declare a page \"poisoned\", "
"kill the processes associated with it and avoid using it in the future."
msgstr ""

#: ../../../mm/hwpoison.rst:12
msgid "This patchkit implements the necessary infrastructure in the VM."
msgstr ""

#: ../../../mm/hwpoison.rst:14
msgid "To quote the overview comment::"
msgstr ""

#: ../../../mm/hwpoison.rst:41
msgid ""
"The code consists of a the high level handler in mm/memory-failure.c, a new "
"page poison bit and various checks in the VM to handle poisoned pages."
msgstr ""

#: ../../../mm/hwpoison.rst:45
msgid ""
"The main target right now is KVM guests, but it works for all kinds of "
"applications. KVM support requires a recent qemu-kvm release."
msgstr ""

#: ../../../mm/hwpoison.rst:48
msgid ""
"For the KVM use there was need for a new signal type so that KVM can inject "
"the machine check into the guest with the proper address. This in theory "
"allows other applications to handle memory failures too. The expectation is "
"that most applications won't do that, but some very specialized ones might."
msgstr ""

#: ../../../mm/hwpoison.rst:55
msgid "Failure recovery modes"
msgstr ""

#: ../../../mm/hwpoison.rst:57
msgid "There are two (actually three) modes memory failure recovery can be in:"
msgstr ""

#: ../../../mm/hwpoison.rst:59
msgid "vm.memory_failure_recovery sysctl set to zero:"
msgstr ""

#: ../../../mm/hwpoison.rst:60
msgid "All memory failures cause a panic. Do not attempt recovery."
msgstr ""

#: ../../../mm/hwpoison.rst:62
msgid "early kill"
msgstr ""

#: ../../../mm/hwpoison.rst:63
msgid ""
"(can be controlled globally and per process) Send SIGBUS to the application "
"as soon as the error is detected This allows applications who can process "
"memory errors in a gentle way (e.g. drop affected object) This is the mode "
"used by KVM qemu."
msgstr ""

#: ../../../mm/hwpoison.rst:69
msgid "late kill"
msgstr ""

#: ../../../mm/hwpoison.rst:70
msgid ""
"Send SIGBUS when the application runs into the corrupted page. This is best "
"for memory error unaware applications and default Note some pages are always "
"handled as late kill."
msgstr ""

#: ../../../mm/hwpoison.rst:75
msgid "User control"
msgstr ""

#: ../../../mm/hwpoison.rst:77
msgid "vm.memory_failure_recovery"
msgstr ""

#: ../../../mm/hwpoison.rst:78
msgid "See sysctl.txt"
msgstr ""

#: ../../../mm/hwpoison.rst:80
msgid "vm.memory_failure_early_kill"
msgstr ""

#: ../../../mm/hwpoison.rst:81
msgid "Enable early kill mode globally"
msgstr ""

#: ../../../mm/hwpoison.rst:83
msgid "PR_MCE_KILL"
msgstr ""

#: ../../../mm/hwpoison.rst:84
msgid "Set early/late kill mode/revert to system default"
msgstr ""

#: ../../../mm/hwpoison.rst:86
msgid "arg1: PR_MCE_KILL_CLEAR:"
msgstr ""

#: ../../../mm/hwpoison.rst:87
msgid "Revert to system default"
msgstr ""

#: ../../../mm/hwpoison.rst:88
msgid "arg1: PR_MCE_KILL_SET:"
msgstr ""

#: ../../../mm/hwpoison.rst:89
msgid "arg2 defines thread specific mode"
msgstr ""

#: ../../../mm/hwpoison.rst:91
msgid "PR_MCE_KILL_EARLY:"
msgstr ""

#: ../../../mm/hwpoison.rst:92
msgid "Early kill"
msgstr ""

#: ../../../mm/hwpoison.rst:93
msgid "PR_MCE_KILL_LATE:"
msgstr ""

#: ../../../mm/hwpoison.rst:94
msgid "Late kill"
msgstr ""

#: ../../../mm/hwpoison.rst:95
msgid "PR_MCE_KILL_DEFAULT"
msgstr ""

#: ../../../mm/hwpoison.rst:96
msgid "Use system global default"
msgstr ""

#: ../../../mm/hwpoison.rst:98
msgid ""
"Note that if you want to have a dedicated thread which handles the "
"SIGBUS(BUS_MCEERR_AO) on behalf of the process, you should call "
"prctl(PR_MCE_KILL_EARLY) on the designated thread. Otherwise, the SIGBUS is "
"sent to the main thread."
msgstr ""

#: ../../../mm/hwpoison.rst:103
msgid "PR_MCE_KILL_GET"
msgstr ""

#: ../../../mm/hwpoison.rst:104
msgid "return current mode"
msgstr ""

#: ../../../mm/hwpoison.rst:107
msgid "Testing"
msgstr ""

#: ../../../mm/hwpoison.rst:109
msgid ""
"madvise(MADV_HWPOISON, ....) (as root) - Poison a page in the process for "
"testing"
msgstr ""

#: ../../../mm/hwpoison.rst:112
msgid "hwpoison-inject module through debugfs ``/sys/kernel/debug/hwpoison/``"
msgstr ""

#: ../../../mm/hwpoison.rst:114
msgid "corrupt-pfn"
msgstr ""

#: ../../../mm/hwpoison.rst:115
msgid ""
"Inject hwpoison fault at PFN echoed into this file. This does some early "
"filtering to avoid corrupted unintended pages in test suites."
msgstr ""

#: ../../../mm/hwpoison.rst:118
msgid "unpoison-pfn"
msgstr ""

#: ../../../mm/hwpoison.rst:119
msgid ""
"Software-unpoison page at PFN echoed into this file. This way a page can be "
"reused again.  This only works for Linux injected failures, not for real "
"memory failures. Once any hardware memory failure happens, this feature is "
"disabled."
msgstr ""

#: ../../../mm/hwpoison.rst:124
msgid ""
"Note these injection interfaces are not stable and might change between "
"kernel versions"
msgstr ""

#: ../../../mm/hwpoison.rst:127
msgid "corrupt-filter-dev-major, corrupt-filter-dev-minor"
msgstr ""

#: ../../../mm/hwpoison.rst:128
msgid ""
"Only handle memory failures to pages associated with the file system defined "
"by block device major/minor.  -1U is the wildcard value.  This should be "
"only used for testing with artificial injection."
msgstr ""

#: ../../../mm/hwpoison.rst:133
msgid "corrupt-filter-memcg"
msgstr ""

#: ../../../mm/hwpoison.rst:134
msgid ""
"Limit injection to pages owned by memgroup. Specified by inode number of the "
"memcg."
msgstr ""

#: ../../../mm/hwpoison.rst:137
msgid "Example::"
msgstr ""

#: ../../../mm/hwpoison.rst:150
msgid "corrupt-filter-flags-mask, corrupt-filter-flags-value"
msgstr ""

#: ../../../mm/hwpoison.rst:151
msgid ""
"When specified, only poison pages if ((page_flags & mask) == value).  This "
"allows stress testing of many kinds of pages. The page_flags are the same as "
"in /proc/kpageflags. The flag bits are defined in include/linux/kernel-page-"
"flags.h and documented in Documentation/admin-guide/mm/pagemap.rst"
msgstr ""

#: ../../../mm/hwpoison.rst:157
msgid "Architecture specific MCE injector"
msgstr ""

#: ../../../mm/hwpoison.rst:159
msgid "x86 has mce-inject, mce-test"
msgstr ""

#: ../../../mm/hwpoison.rst:161
msgid "Some portable hwpoison test programs in mce-test, see below."
msgstr ""

#: ../../../mm/hwpoison.rst:164
msgid "References"
msgstr ""

#: ../../../mm/hwpoison.rst:166
msgid "http://halobates.de/mce-lc09-2.pdf"
msgstr ""

#: ../../../mm/hwpoison.rst:167
msgid "Overview presentation from LinuxCon 09"
msgstr ""

#: ../../../mm/hwpoison.rst:169
msgid "git://git.kernel.org/pub/scm/utils/cpu/mce/mce-test.git"
msgstr ""

#: ../../../mm/hwpoison.rst:170
msgid "Test suite (hwpoison specific portable tests in tsrc)"
msgstr ""

#: ../../../mm/hwpoison.rst:172
msgid "git://git.kernel.org/pub/scm/utils/cpu/mce/mce-inject.git"
msgstr ""

#: ../../../mm/hwpoison.rst:173
msgid "x86 specific injector"
msgstr ""

#: ../../../mm/hwpoison.rst:177
msgid "Limitations"
msgstr ""

#: ../../../mm/hwpoison.rst:178
msgid ""
"Not all page types are supported and never will. Most kernel internal "
"objects cannot be recovered, only LRU pages for now."
msgstr ""

#: ../../../mm/hwpoison.rst:181
msgid "--- Andi Kleen, Oct 2009"
msgstr ""
