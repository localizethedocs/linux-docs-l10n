# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-30 08:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../w1/masters/ds2490.rst:3
msgid "Kernel driver ds2490"
msgstr ""

#: ../../../w1/masters/ds2490.rst:5
msgid "Supported chips:"
msgstr ""

#: ../../../w1/masters/ds2490.rst:7
msgid "Maxim DS2490 based"
msgstr ""

#: ../../../w1/masters/ds2490.rst:9
msgid "Author: Evgeniy Polyakov <johnpol@2ka.mipt.ru>"
msgstr ""

#: ../../../w1/masters/ds2490.rst:13
msgid "Description"
msgstr ""

#: ../../../w1/masters/ds2490.rst:15
msgid ""
"The Maxim/Dallas Semiconductor DS2490 is a chip which allows to build USB <-"
"> W1 bridges."
msgstr ""

#: ../../../w1/masters/ds2490.rst:18
msgid ""
"DS9490(R) is a USB <-> W1 bus master device which has 0x81 family ID "
"integrated chip and DS2490 low-level operational chip."
msgstr ""

#: ../../../w1/masters/ds2490.rst:22
msgid "Notes and limitations."
msgstr ""

#: ../../../w1/masters/ds2490.rst:24
msgid "The weak pullup current is a minimum of 0.9mA and maximum of 6.0mA."
msgstr ""

#: ../../../w1/masters/ds2490.rst:25
msgid ""
"The 5V strong pullup is supported with a minimum of 5.9mA and a maximum of "
"30.4 mA.  (From DS2490.pdf)"
msgstr ""

#: ../../../w1/masters/ds2490.rst:27
msgid ""
"The hardware will detect when devices are attached to the bus on the next "
"bus (reset?) operation, however only a message is printed as the core w1 "
"code doesn't make use of the information.  Connecting one device tends to "
"give multiple new device notifications."
msgstr ""

#: ../../../w1/masters/ds2490.rst:31
msgid ""
"The number of USB bus transactions could be reduced if w1_reset_send was "
"added to the API.  The name is just a suggestion.  It would take a write "
"buffer and a read buffer (along with sizes) as arguments. The ds2490 block I/"
"O command supports reset, write buffer, read buffer, and strong pullup all "
"in one command, instead of the current 1 reset bus, 2 write the match rom "
"command and slave rom id, 3 block write and read data.  The write buffer "
"needs to have the match rom command and slave rom id prepended to the front "
"of the requested write buffer, both of which are known to the driver."
msgstr ""

#: ../../../w1/masters/ds2490.rst:40
msgid ""
"The hardware supports normal, flexible, and overdrive bus communication "
"speeds, but only the normal is supported."
msgstr ""

#: ../../../w1/masters/ds2490.rst:42
msgid ""
"The registered w1_bus_master functions don't define error conditions.  If a "
"bus search is in progress and the ds2490 is removed it can produce a good "
"amount of error output before the bus search finishes."
msgstr ""

#: ../../../w1/masters/ds2490.rst:46
msgid ""
"The hardware supports detecting some error conditions, such as short, "
"alarming presence on reset, and no presence on reset, but the driver doesn't "
"query those values."
msgstr ""

#: ../../../w1/masters/ds2490.rst:49
msgid ""
"The ds2490 specification doesn't cover short bulk in reads in detail, but my "
"observation is if fewer bytes are requested than are available, the bulk "
"read will return an error and the hardware will clear the entire bulk in "
"buffer.  It would be possible to read the maximum buffer size to not run "
"into this error condition, only extra bytes in the buffer is a logic error "
"in the driver.  The code should match reads and writes as well as data "
"sizes.  Reads and writes are serialized and the status verifies that the "
"chip is idle (and data is available) before the read is executed, so it "
"should not happen."
msgstr ""

#: ../../../w1/masters/ds2490.rst:59
msgid ""
"Running x86_64 2.6.24 UHCI under qemu 0.9.0 under x86_64 2.6.22-rc6 with a "
"OHCI controller, ds2490 running in the guest would operate normally the "
"first time the module was loaded after qemu attached the ds2490 hardware, "
"but if the module was unloaded, then reloaded most of the time one of the "
"bulk out or in, and usually the bulk in would fail.  qemu sets a 50ms "
"timeout and the bulk in would timeout even when the status shows data "
"available.  A bulk out write would show a successful completion, but the "
"ds2490 status register would show 0 bytes written.  Detaching qemu from the "
"ds2490 hardware and reattaching would clear the problem.  usbmon output in "
"the guest and host did not explain the problem.  My guess is a bug in either "
"qemu or the host OS and more likely the host OS."
msgstr ""

#: ../../../w1/masters/ds2490.rst:72
msgid "03-06-2008 David Fries <David@Fries.net>"
msgstr ""
