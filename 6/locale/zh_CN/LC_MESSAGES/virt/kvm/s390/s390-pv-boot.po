# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-30 08:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../virt/kvm/s390/s390-pv-boot.rst:5
msgid "s390 (IBM Z) Boot/IPL of Protected VMs"
msgstr ""

#: ../../../virt/kvm/s390/s390-pv-boot.rst:8
msgid "Summary"
msgstr ""

#: ../../../virt/kvm/s390/s390-pv-boot.rst:9
msgid ""
"The memory of Protected Virtual Machines (PVMs) is not accessible to I/O or "
"the hypervisor. In those cases where the hypervisor needs to access the "
"memory of a PVM, that memory must be made accessible. Memory made accessible "
"to the hypervisor will be encrypted. See Documentation/virt/kvm/s390/s390-pv."
"rst for details.\""
msgstr ""

#: ../../../virt/kvm/s390/s390-pv-boot.rst:15
msgid ""
"On IPL (boot) a small plaintext bootloader is started, which provides "
"information about the encrypted components and necessary metadata to KVM to "
"decrypt the protected virtual machine."
msgstr ""

#: ../../../virt/kvm/s390/s390-pv-boot.rst:19
msgid ""
"Based on this data, KVM will make the protected virtual machine known to the "
"Ultravisor (UV) and instruct it to secure the memory of the PVM, decrypt the "
"components and verify the data and address list hashes, to ensure integrity. "
"Afterwards KVM can run the PVM via the SIE instruction which the UV will "
"intercept and execute on KVM's behalf."
msgstr ""

#: ../../../virt/kvm/s390/s390-pv-boot.rst:26
msgid ""
"As the guest image is just like an opaque kernel image that does the switch "
"into PV mode itself, the user can load encrypted guest executables and data "
"via every available method (network, dasd, scsi, direct kernel, ...) without "
"the need to change the boot process."
msgstr ""

#: ../../../virt/kvm/s390/s390-pv-boot.rst:33
msgid "Diag308"
msgstr ""

#: ../../../virt/kvm/s390/s390-pv-boot.rst:34
msgid ""
"This diagnose instruction is the basic mechanism to handle IPL and related "
"operations for virtual machines. The VM can set and retrieve IPL information "
"blocks, that specify the IPL method/devices and request VM memory and "
"subsystem resets, as well as IPLs."
msgstr ""

#: ../../../virt/kvm/s390/s390-pv-boot.rst:39
msgid "For PVMs this concept has been extended with new subcodes:"
msgstr ""

#: ../../../virt/kvm/s390/s390-pv-boot.rst:41
msgid ""
"Subcode 8: Set an IPL Information Block of type 5 (information block for "
"PVMs) Subcode 9: Store the saved block in guest memory Subcode 10: Move into "
"Protected Virtualization mode"
msgstr ""

#: ../../../virt/kvm/s390/s390-pv-boot.rst:46
msgid ""
"The new PV load-device-specific-parameters field specifies all data that is "
"necessary to move into PV mode."
msgstr ""

#: ../../../virt/kvm/s390/s390-pv-boot.rst:49
msgid "PV Header origin"
msgstr ""

#: ../../../virt/kvm/s390/s390-pv-boot.rst:50
msgid "PV Header length"
msgstr ""

#: ../../../virt/kvm/s390/s390-pv-boot.rst:51
msgid "List of Components composed of"
msgstr ""

#: ../../../virt/kvm/s390/s390-pv-boot.rst:52
msgid "AES-XTS Tweak prefix"
msgstr ""

#: ../../../virt/kvm/s390/s390-pv-boot.rst:53
msgid "Origin"
msgstr ""

#: ../../../virt/kvm/s390/s390-pv-boot.rst:54
msgid "Size"
msgstr ""

#: ../../../virt/kvm/s390/s390-pv-boot.rst:56
msgid ""
"The PV header contains the keys and hashes, which the UV will use to decrypt "
"and verify the PV, as well as control flags and a start PSW."
msgstr ""

#: ../../../virt/kvm/s390/s390-pv-boot.rst:59
msgid ""
"The components are for instance an encrypted kernel, kernel parameters and "
"initrd. The components are decrypted by the UV."
msgstr ""

#: ../../../virt/kvm/s390/s390-pv-boot.rst:62
msgid ""
"After the initial import of the encrypted data, all defined pages will "
"contain the guest content. All non-specified pages will start out as zero "
"pages on first access."
msgstr ""

#: ../../../virt/kvm/s390/s390-pv-boot.rst:67
msgid ""
"When running in protected virtualization mode, some subcodes will result in "
"exceptions or return error codes."
msgstr ""

#: ../../../virt/kvm/s390/s390-pv-boot.rst:70
msgid ""
"Subcodes 4 and 7, which specify operations that do not clear the guest "
"memory, will result in specification exceptions. This is because the UV will "
"clear all memory when a secure VM is removed, and therefore non-clearing IPL "
"subcodes are not allowed."
msgstr ""

#: ../../../virt/kvm/s390/s390-pv-boot.rst:75
msgid ""
"Subcodes 8, 9, 10 will result in specification exceptions. Re-IPL into a "
"protected mode is only possible via a detour into non protected mode."
msgstr ""

#: ../../../virt/kvm/s390/s390-pv-boot.rst:80
msgid "Keys"
msgstr ""

#: ../../../virt/kvm/s390/s390-pv-boot.rst:81
msgid ""
"Every CEC will have a unique public key to enable tooling to build encrypted "
"images. See  `s390-tools <https://github.com/ibm-s390-linux/s390-tools/>`_ "
"for the tooling."
msgstr ""
