# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../filesystems/caching/cachefiles.rst:5
msgid "Cache on Already Mounted Filesystem"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:35
msgid "Overview"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:37
msgid ""
"CacheFiles is a caching backend that's meant to use as a cache a directory "
"on an already mounted filesystem of a local type (such as Ext3)."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:40
msgid ""
"CacheFiles uses a userspace daemon to do some of the cache management - such "
"as reaping stale nodes and culling.  This is called cachefilesd and lives "
"in /sbin."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:44
msgid ""
"The filesystem and data integrity of the cache are only as good as those of "
"the filesystem providing the backing services.  Note that CacheFiles does "
"not attempt to journal anything since the journalling interfaces of the "
"various filesystems are very specific in nature."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:49
msgid ""
"CacheFiles creates a misc character device - \"/dev/cachefiles\" - that is "
"used to communication with the daemon.  Only one thing may have this open at "
"once, and while it is open, a cache is at least partially in existence.  The "
"daemon opens this and sends commands down it to control the cache."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:54
msgid "CacheFiles is currently limited to a single cache."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:56
msgid ""
"CacheFiles attempts to maintain at least a certain percentage of free space "
"on the filesystem, shrinking the cache by culling the objects it contains to "
"make space if necessary - see the \"Cache Culling\" section.  This means it "
"can be placed on the same medium as a live set of data, and will expand to "
"make use of spare space and automatically contract when the set of data "
"requires more space."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:66
msgid "Requirements"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:68
msgid ""
"The use of CacheFiles and its daemon requires the following features to be "
"available in the system and in the cache filesystem:"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:71
msgid "dnotify."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:73
msgid "extended attributes (xattrs)."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:75
msgid "openat() and friends."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:77
msgid "bmap() support on files in the filesystem (FIBMAP ioctl)."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:79
msgid "The use of bmap() to detect a partial page at the end of the file."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:81
msgid ""
"It is strongly recommended that the \"dir_index\" option is enabled on Ext3 "
"filesystems being used as a cache."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:86
msgid "Configuration"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:88
msgid ""
"The cache is configured by a script in /etc/cachefilesd.conf.  These "
"commands set up cache ready for use.  The following script commands are "
"available:"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:91
msgid "brun <N>%, bcull <N>%, bstop <N>%, frun <N>%, fcull <N>%, fstop <N>%"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:92
msgid ""
"Configure the culling limits.  Optional.  See the section on culling The "
"defaults are 7% (run), 5% (cull) and 1% (stop) respectively."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:95
msgid ""
"The commands beginning with a 'b' are file space (block) limits, those "
"beginning with an 'f' are file count limits."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:98
msgid "dir <path>"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:99
msgid "Specify the directory containing the root of the cache.  Mandatory."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:101
msgid "tag <name>"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:102
msgid ""
"Specify a tag to FS-Cache to use in distinguishing multiple caches. "
"Optional.  The default is \"CacheFiles\"."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:105
msgid "debug <mask>"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:106
msgid ""
"Specify a numeric bitmask to control debugging in the kernel module. "
"Optional.  The default is zero (all off).  The following values can be OR'd "
"into the mask to collect various information:"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:111
#: ../../../filesystems/caching/cachefiles.rst:475
#: ../../../filesystems/caching/cachefiles.rst:476
msgid "1"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:111
msgid "Turn on trace of function entry (_enter() macros)"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:112
#: ../../../filesystems/caching/cachefiles.rst:476
#: ../../../filesystems/caching/cachefiles.rst:477
msgid "2"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:112
msgid "Turn on trace of function exit (_leave() macros)"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:113
#: ../../../filesystems/caching/cachefiles.rst:477
msgid "4"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:113
msgid "Turn on trace of internal debug points (_debug())"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:116
msgid "This mask can also be set through sysfs, eg::"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:122
msgid "Starting the Cache"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:124
msgid ""
"The cache is started by running the daemon.  The daemon opens the cache "
"device, configures the cache and tells it to begin caching.  At that point "
"the cache binds to fscache and the cache becomes live."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:128
msgid "The daemon is run as follows::"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:132
msgid "The flags are:"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:134
msgid "``-d``"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:135
msgid ""
"Increase the debugging level.  This can be specified multiple times and is "
"cumulative with itself."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:138
msgid "``-s``"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:139
msgid "Send messages to stderr instead of syslog."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:141
msgid "``-n``"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:142
msgid "Don't daemonise and go into background."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:144
msgid "``-f <configfile>``"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:145
msgid "Use an alternative configuration file rather than the default one."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:149
msgid "Things to Avoid"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:151
msgid ""
"Do not mount other things within the cache as this will cause problems.  The "
"kernel module contains its own very cut-down path walking facility that "
"ignores mountpoints, but the daemon can't avoid them."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:155
msgid ""
"Do not create, rename or unlink files and directories in the cache while the "
"cache is active, as this may cause the state to become uncertain."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:158
msgid ""
"Renaming files in the cache might make objects appear to be other objects "
"(the filename is part of the lookup key)."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:161
msgid ""
"Do not change or remove the extended attributes attached to cache files by "
"the cache as this will cause the cache state management to get confused."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:164
msgid ""
"Do not create files or directories in the cache, lest the cache get confused "
"or serve incorrect data."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:167
msgid ""
"Do not chmod files in the cache.  The module creates things with minimal "
"permissions to prevent random users being able to access them directly."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:172
msgid "Cache Culling"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:174
msgid ""
"The cache may need culling occasionally to make space.  This involves "
"discarding objects from the cache that have been used less recently than "
"anything else.  Culling is based on the access time of data objects.  Empty "
"directories are culled if not in use."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:179
msgid ""
"Cache culling is done on the basis of the percentage of blocks and the "
"percentage of files available in the underlying filesystem.  There are six "
"\"limits\":"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:183
msgid "brun, frun"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:184
msgid ""
"If the amount of free space and the number of available files in the cache "
"rises above both these limits, then culling is turned off."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:187
msgid "bcull, fcull"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:188
msgid ""
"If the amount of available space or the number of available files in the "
"cache falls below either of these limits, then culling is started."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:191
msgid "bstop, fstop"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:192
msgid ""
"If the amount of available space or the number of available files in the "
"cache falls below either of these limits, then no further allocation of disk "
"space or files is permitted until culling has raised things above these "
"limits again."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:197
msgid "These must be configured thusly::"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:202
msgid ""
"Note that these are percentages of available space and available files, and "
"do _not_ appear as 100 minus the percentage displayed by the \"df\" program."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:205
msgid ""
"The userspace daemon scans the cache to build up a table of cullable "
"objects. These are then culled in least recently used order.  A new scan of "
"the cache is started as soon as space is made in the table.  Objects will be "
"skipped if their atimes have changed or if the kernel module says it is "
"still using them."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:212
msgid "Cache Structure"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:214
msgid ""
"The CacheFiles module will create two directories in the directory it was "
"given:"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:217
msgid "cache/"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:218
msgid "graveyard/"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:220
msgid ""
"The active cache objects all reside in the first directory.  The CacheFiles "
"kernel module moves any retired or culled objects that it can't simply "
"unlink to the graveyard from which the daemon will actually delete them."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:224
msgid ""
"The daemon uses dnotify to monitor the graveyard directory, and will delete "
"anything that appears therein."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:228
msgid ""
"The module represents index objects as directories with the filename \"I..."
"\" or \"J...\".  Note that the \"cache/\" directory is itself a special "
"index."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:231
msgid ""
"Data objects are represented as files if they have no children, or "
"directories if they do.  Their filenames all begin \"D...\" or \"E...\".  If "
"represented as a directory, data objects will have a file in the directory "
"called \"data\" that actually holds the data."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:236
msgid ""
"Special objects are similar to data objects, except their filenames begin "
"\"S...\" or \"T...\"."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:240
msgid ""
"If an object has children, then it will be represented as a directory. "
"Immediately in the representative directory are a collection of directories "
"named for hash values of the child object keys with an '@' prepended.  Into "
"this directory, if possible, will be placed the representations of the child "
"objects::"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:254
msgid ""
"If the key is so long that it exceeds NAME_MAX with the decorations added on "
"to it, then it will be cut into pieces, the first few of which will be used "
"to make a nest of directories, and the last one of which will be the objects "
"inside the last directory.  The names of the intermediate directories will "
"have '+' prepended::"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:263
msgid ""
"Note that keys are raw data, and not only may they exceed NAME_MAX in size, "
"they may also contain things like '/' and NUL characters, and so they may "
"not be suitable for turning directly into a filename."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:267
msgid ""
"To handle this, CacheFiles will use a suitably printable filename directly "
"and \"base-64\" encode ones that aren't directly suitable.  The two versions "
"of object filenames indicate the encoding:"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:272
msgid "OBJECT TYPE"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:272
msgid "PRINTABLE"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:272
msgid "ENCODED"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:274
msgid "Index"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:274
msgid "\"I...\""
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:274
msgid "\"J...\""
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:275
msgid "Data"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:275
msgid "\"D...\""
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:275
msgid "\"E...\""
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:276
msgid "Special"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:276
msgid "\"S...\""
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:276
msgid "\"T...\""
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:279
msgid "Intermediate directories are always \"@\" or \"+\" as appropriate."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:282
msgid ""
"Each object in the cache has an extended attribute label that holds the "
"object type ID (required to distinguish special objects) and the auxiliary "
"data from the netfs.  The latter is used to detect stale objects in the "
"cache and update or retire them."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:288
msgid ""
"Note that CacheFiles will erase from the cache any file it doesn't recognise "
"or any file of an incorrect type (such as a FIFO file or a device file)."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:293
msgid "Security Model and SELinux"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:295
msgid ""
"CacheFiles is implemented to deal properly with the LSM security features of "
"the Linux kernel and the SELinux facility."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:298
msgid ""
"One of the problems that CacheFiles faces is that it is generally acting on "
"behalf of a process, and running in that process's context, and that "
"includes a security context that is not appropriate for accessing the cache "
"- either because the files in the cache are inaccessible to that process, or "
"because if the process creates a file in the cache, that file may be "
"inaccessible to other processes."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:305
msgid ""
"The way CacheFiles works is to temporarily change the security context "
"(fsuid, fsgid and actor security label) that the process acts as - without "
"changing the security context of the process when it the target of an "
"operation performed by some other process (so signalling and suchlike still "
"work correctly)."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:311
msgid "When the CacheFiles module is asked to bind to its cache, it:"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:313
msgid ""
"Finds the security label attached to the root cache directory and uses that "
"as the security label with which it will create files.  By default, this is::"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:319
msgid ""
"Finds the security label of the process which issued the bind request "
"(presumed to be the cachefilesd daemon), which by default will be::"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:324
msgid ""
"and asks LSM to supply a security ID as which it should act given the "
"daemon's label.  By default, this will be::"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:329
msgid ""
"SELinux transitions the daemon's security ID to the module's security ID "
"based on a rule of this form in the policy::"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:334
msgid "For instance::"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:339
msgid ""
"The module's security ID gives it permission to create, move and remove "
"files and directories in the cache, to find and access directories and files "
"in the cache, to set and access extended attributes on cache objects, and to "
"read and write files in the cache."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:344
msgid ""
"The daemon's security ID gives it only a very restricted set of permissions: "
"it may scan directories, stat files and erase files and directories.  It may "
"not read or write files in the cache, and so it is precluded from accessing "
"the data cached therein; nor is it permitted to create new files in the "
"cache."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:350
msgid "There are policy source files available in:"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:352
msgid "https://people.redhat.com/~dhowells/fscache/cachefilesd-0.8.tar.bz2"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:354
msgid "and later versions.  In that tarball, see the files::"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:360
msgid "They are built and installed directly by the RPM."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:362
msgid ""
"If a non-RPM based system is being used, then copy the above files to their "
"own directory and run::"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:368
msgid ""
"You will need checkpolicy and selinux-policy-devel installed prior to the "
"build."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:372
msgid ""
"By default, the cache is located in /var/fscache, but if it is desirable "
"that it should be elsewhere, than either the above policy files must be "
"altered, or an auxiliary policy must be installed to label the alternate "
"location of the cache."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:377
msgid ""
"For instructions on how to add an auxiliary policy to enable the cache to be "
"located elsewhere when SELinux is in enforcing mode, please see::"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:382
msgid ""
"When the cachefilesd rpm is installed; alternatively, the document can be "
"found in the sources."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:387
msgid "A Note on Security"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:389
msgid ""
"CacheFiles makes use of the split security in the task_struct.  It allocates "
"its own task_security structure, and redirects current->cred to point to it "
"when it acts on behalf of another process, in that process's context."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:393
msgid ""
"The reason it does this is that it calls vfs_mkdir() and suchlike rather "
"than bypassing security and calling inode ops directly.  Therefore the VFS "
"and LSM may deny the CacheFiles access to the cache data because under some "
"circumstances the caching code is running in the security context of "
"whatever process issued the original syscall on the netfs."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:399
msgid ""
"Furthermore, should CacheFiles create a file or directory, the security "
"parameters with that object is created (UID, GID, security label) would be "
"derived from that process that issued the system call, thus potentially "
"preventing other processes from accessing the cache - including CacheFiles's "
"cache management daemon (cachefilesd)."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:405
msgid ""
"What is required is to temporarily override the security of the process that "
"issued the system call.  We can't, however, just do an in-place change of "
"the security data as that affects the process as an object, not just as a "
"subject. This means it may lose signals or ptrace events for example, and "
"affects what the process looks like in /proc."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:411
msgid ""
"So CacheFiles makes use of a logical split in the security between the "
"objective security (task->real_cred) and the subjective security (task-"
">cred). The objective security holds the intrinsic security properties of a "
"process and is never overridden.  This is what appears in /proc, and is what "
"is used when a process is the target of an operation by some other process "
"(SIGKILL for example)."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:418
msgid ""
"The subjective security holds the active security properties of a process, "
"and may be overridden.  This is not seen externally, and is used when a "
"process acts upon another object, for example SIGKILLing another process or "
"opening a file."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:423
msgid ""
"LSM hooks exist that allow SELinux (or Smack or whatever) to reject a "
"request for CacheFiles to run in a context of a specific security label, or "
"to create files and directories with another security label."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:429
msgid "Statistical Information"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:431
msgid "If FS-Cache is compiled with the following option enabled::"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:435
msgid ""
"then it will gather certain statistics and display them through a proc file."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:437
msgid "/proc/fs/cachefiles/histogram"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:445
msgid ""
"This shows the breakdown of the number of times each amount of time between "
"0 jiffies and HZ-1 jiffies a variety of tasks took to run.  The columns are "
"as follows:"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:450
msgid "COLUMN"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:450
msgid "TIME MEASUREMENT"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:452
msgid "LOOKUPS"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:452
msgid "Length of time to perform a lookup on the backing fs"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:453
msgid "MKDIRS"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:453
msgid "Length of time to perform a mkdir on the backing fs"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:454
msgid "CREATES"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:454
msgid "Length of time to perform a create on the backing fs"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:457
msgid ""
"Each row shows the number of events that took a particular range of times. "
"Each step is 1 jiffy in size.  The JIFS column indicates the particular "
"jiffy range covered, and the SECS field the equivalent number of seconds."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:463
msgid "Debugging"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:465
msgid ""
"If CONFIG_CACHEFILES_DEBUG is enabled, the CacheFiles facility can have "
"runtime debugging enabled by adjusting the value in::"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:470
msgid "This is a bitmask of debugging streams to enable:"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:473
msgid "BIT"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:473
msgid "VALUE"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:473
msgid "STREAM"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:473
msgid "POINT"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:475
msgid "0"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:475
#: ../../../filesystems/caching/cachefiles.rst:477
msgid "General"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:475
msgid "Function entry trace"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:476
msgid "Function exit trace"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:480
msgid ""
"The appropriate set of values should be OR'd together and the result written "
"to the control file.  For example::"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:485
msgid "will turn on all function entry debugging."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:489
msgid "On-demand Read"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:491
msgid ""
"When working in its original mode, CacheFiles serves as a local cache for a "
"remote networking fs - while in on-demand read mode, CacheFiles can boost "
"the scenario where on-demand read semantics are needed, e.g. container image "
"distribution."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:496
msgid ""
"The essential difference between these two modes is seen when a cache miss "
"occurs: In the original mode, the netfs will fetch the data from the remote "
"server and then write it to the cache file; in on-demand read mode, fetching "
"the data and writing it into the cache is delegated to a user daemon."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:501
msgid ""
"``CONFIG_CACHEFILES_ONDEMAND`` should be enabled to support on-demand read "
"mode."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:505
msgid "Protocol Communication"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:507
msgid ""
"The on-demand read mode uses a simple protocol for communication between "
"kernel and user daemon. The protocol can be modeled as::"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:512
msgid ""
"CacheFiles will send requests to the user daemon when needed.  The user "
"daemon should poll the devnode ('/dev/cachefiles') to check if there's a "
"pending request to be processed.  A POLLIN event will be returned when "
"there's a pending request."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:517
msgid ""
"The user daemon then reads the devnode to fetch a request to process.  It "
"should be noted that each read only gets one request. When it has finished "
"processing the request, the user daemon should write the reply to the "
"devnode."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:521
msgid "Each request starts with a message header of the form::"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:531
#: ../../../filesystems/caching/cachefiles.rst:573
#: ../../../filesystems/caching/cachefiles.rst:609
#: ../../../filesystems/caching/cachefiles.rst:640
#: ../../../filesystems/caching/cachefiles.rst:657
msgid "where:"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:533
msgid ""
"``msg_id`` is a unique ID identifying this request among all pending "
"requests."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:536
msgid "``opcode`` indicates the type of this request."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:538
msgid "``object_id`` is a unique ID identifying the cache file operated on."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:540
msgid "``data`` indicates the payload of this request."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:542
msgid ""
"``len`` indicates the whole length of this request, including the header and "
"following type-specific payload."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:547
msgid "Turning on On-demand Mode"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:549
msgid "An optional parameter becomes available to the \"bind\" command::"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:553
msgid ""
"When the \"bind\" command is given no argument, it defaults to the original "
"mode. When it is given the \"ondemand\" argument, i.e. \"bind ondemand\", on-"
"demand read mode will be enabled."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:559
msgid "The OPEN Request"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:561
msgid ""
"When the netfs opens a cache file for the first time, a request with the "
"CACHEFILES_OP_OPEN opcode, a.k.a an OPEN request will be sent to the user "
"daemon.  The payload format is of the form::"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:575
msgid ""
"``data`` contains the volume_key followed directly by the cookie_key. The "
"volume key is a NUL-terminated string; the cookie key is binary data."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:579
msgid "``volume_key_size`` indicates the size of the volume key in bytes."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:581
msgid "``cookie_key_size`` indicates the size of the cookie key in bytes."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:583
msgid ""
"``fd`` indicates an anonymous fd referring to the cache file, through which "
"the user daemon can perform write/llseek file operations on the cache file."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:588
msgid ""
"The user daemon can use the given (volume_key, cookie_key) pair to "
"distinguish the requested cache file.  With the given anonymous fd, the user "
"daemon can fetch the data and write it to the cache file in the background, "
"even when kernel has not triggered a cache miss yet."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:593
msgid ""
"Be noted that each cache file has a unique object_id, while it may have "
"multiple anonymous fds.  The user daemon may duplicate anonymous fds from "
"the initial anonymous fd indicated by the @fd field through dup().  Thus "
"each object_id can be mapped to multiple anonymous fds, while the usr daemon "
"itself needs to maintain the mapping."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:599
msgid ""
"When implementing a user daemon, please be careful of RLIMIT_NOFILE, ``/proc/"
"sys/fs/nr_open`` and ``/proc/sys/fs/file-max``.  Typically these needn't be "
"huge since they're related to the number of open device blobs rather than "
"open files of each individual filesystem."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:604
msgid ""
"The user daemon should reply the OPEN request by issuing a "
"\"copen\" (complete open) command on the devnode::"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:611
msgid "``msg_id`` must match the msg_id field of the OPEN request."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:613
msgid ""
"When >= 0, ``cache_size`` indicates the size of the cache file; when < 0, "
"``cache_size`` indicates any error code encountered by the user daemon."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:619
msgid "The CLOSE Request"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:621
msgid ""
"When a cookie withdrawn, a CLOSE request (opcode CACHEFILES_OP_CLOSE) will "
"be sent to the user daemon.  This tells the user daemon to close all "
"anonymous fds associated with the given object_id.  The CLOSE request has no "
"extra payload, and shouldn't be replied."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:628
msgid "The READ Request"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:630
msgid ""
"When a cache miss is encountered in on-demand read mode, CacheFiles will "
"send a READ request (opcode CACHEFILES_OP_READ) to the user daemon. This "
"tells the user daemon to fetch the contents of the requested file range.  "
"The payload is of the form::"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:642
msgid "``off`` indicates the starting offset of the requested file range."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:644
msgid "``len`` indicates the length of the requested file range."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:647
msgid ""
"When it receives a READ request, the user daemon should fetch the requested "
"data and write it to the cache file identified by object_id."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:650
msgid ""
"When it has finished processing the READ request, the user daemon should "
"reply by using the CACHEFILES_IOC_READ_COMPLETE ioctl on one of the "
"anonymous fds associated with the object_id given in the READ request.  The "
"ioctl is of the form::"
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:659
msgid "``fd`` is one of the anonymous fds associated with the object_id given."
msgstr ""

#: ../../../filesystems/caching/cachefiles.rst:662
msgid "``msg_id`` must match the msg_id field of the READ request."
msgstr ""
