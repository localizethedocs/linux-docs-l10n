# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-30 08:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../dev-tools/kunit/style.rst:5
msgid "Test Style and Nomenclature"
msgstr ""

#: ../../../dev-tools/kunit/style.rst:7
msgid ""
"To make finding, writing, and using KUnit tests as simple as possible, it is "
"strongly encouraged that they are named and written according to the "
"guidelines below. While it is possible to write KUnit tests which do not "
"follow these rules, they may break some tooling, may conflict with other "
"tests, and may not be run automatically by testing systems."
msgstr ""

#: ../../../dev-tools/kunit/style.rst:13
msgid "It is recommended that you only deviate from these guidelines when:"
msgstr ""

#: ../../../dev-tools/kunit/style.rst:15
msgid "Porting tests to KUnit which are already known with an existing name."
msgstr ""

#: ../../../dev-tools/kunit/style.rst:16
msgid ""
"Writing tests which would cause serious problems if automatically run. For "
"example, non-deterministically producing false positives or negatives, or "
"taking a long time to run."
msgstr ""

#: ../../../dev-tools/kunit/style.rst:21
msgid "Subsystems, Suites, and Tests"
msgstr ""

#: ../../../dev-tools/kunit/style.rst:23
msgid ""
"To make tests easy to find, they are grouped into suites and subsystems. A "
"test suite is a group of tests which test a related area of the kernel. A "
"subsystem is a set of test suites which test different parts of a kernel "
"subsystem or a driver."
msgstr ""

#: ../../../dev-tools/kunit/style.rst:29
msgid "Subsystems"
msgstr ""

#: ../../../dev-tools/kunit/style.rst:31
msgid ""
"Every test suite must belong to a subsystem. A subsystem is a collection of "
"one or more KUnit test suites which test the same driver or part of the "
"kernel. A test subsystem should match a single kernel module. If the code "
"being tested cannot be compiled as a module, in many cases the subsystem "
"should correspond to a directory in the source tree or an entry in the "
"``MAINTAINERS`` file. If unsure, follow the conventions set by tests in "
"similar areas."
msgstr ""

#: ../../../dev-tools/kunit/style.rst:38
msgid ""
"Test subsystems should be named after the code being tested, either after "
"the module (wherever possible), or after the directory or files being "
"tested. Test subsystems should be named to avoid ambiguity where necessary."
msgstr ""

#: ../../../dev-tools/kunit/style.rst:42
msgid ""
"If a test subsystem name has multiple components, they should be separated "
"by underscores. *Do not* include \"test\" or \"kunit\" directly in the "
"subsystem name unless we are actually testing other tests or the kunit "
"framework itself. For example, subsystems could be called:"
msgstr ""

#: ../../../dev-tools/kunit/style.rst:47
msgid "``ext4``"
msgstr ""

#: ../../../dev-tools/kunit/style.rst:48
msgid "Matches the module and filesystem name."
msgstr ""

#: ../../../dev-tools/kunit/style.rst:49
msgid "``apparmor``"
msgstr ""

#: ../../../dev-tools/kunit/style.rst:50
msgid "Matches the module name and LSM name."
msgstr ""

#: ../../../dev-tools/kunit/style.rst:51 ../../../dev-tools/kunit/style.rst:104
msgid "``kasan``"
msgstr ""

#: ../../../dev-tools/kunit/style.rst:52
msgid "Common name for the tool, prominent part of the path ``mm/kasan``"
msgstr ""

#: ../../../dev-tools/kunit/style.rst:53
msgid "``snd_hda_codec_hdmi``"
msgstr ""

#: ../../../dev-tools/kunit/style.rst:54
msgid ""
"Has several components (``snd``, ``hda``, ``codec``, ``hdmi``) separated by "
"underscores. Matches the module name."
msgstr ""

#: ../../../dev-tools/kunit/style.rst:57
msgid "Avoid names as shown in examples below:"
msgstr ""

#: ../../../dev-tools/kunit/style.rst:59
msgid "``linear-ranges``"
msgstr ""

#: ../../../dev-tools/kunit/style.rst:60
msgid ""
"Names should use underscores, not dashes, to separate words. Prefer "
"``linear_ranges``."
msgstr ""

#: ../../../dev-tools/kunit/style.rst:62
msgid "``qos-kunit-test``"
msgstr ""

#: ../../../dev-tools/kunit/style.rst:63
msgid ""
"This name should use underscores, and not have \"kunit-test\" as a suffix. "
"``qos`` is also ambiguous as a subsystem name, because several parts of the "
"kernel have a ``qos`` subsystem. ``power_qos`` would be a better name."
msgstr ""

#: ../../../dev-tools/kunit/style.rst:66
msgid "``pc_parallel_port``"
msgstr ""

#: ../../../dev-tools/kunit/style.rst:67
msgid ""
"The corresponding module name is ``parport_pc``, so this subsystem should "
"also be named ``parport_pc``."
msgstr ""

#: ../../../dev-tools/kunit/style.rst:71
msgid ""
"The KUnit API and tools do not explicitly know about subsystems. They are a "
"way of categorizing test suites and naming modules which provides a simple, "
"consistent way for humans to find and run tests. This may change in the "
"future."
msgstr ""

#: ../../../dev-tools/kunit/style.rst:77
msgid "Suites"
msgstr ""

#: ../../../dev-tools/kunit/style.rst:79
msgid ""
"KUnit tests are grouped into test suites, which cover a specific area of "
"functionality being tested. Test suites can have shared initialization and "
"shutdown code which is run for all tests in the suite. Not all subsystems "
"need to be split into multiple test suites (for example, simple drivers)."
msgstr ""

#: ../../../dev-tools/kunit/style.rst:84
msgid ""
"Test suites are named after the subsystem they are part of. If a subsystem "
"contains several suites, the specific area under test should be appended to "
"the subsystem name, separated by an underscore."
msgstr ""

#: ../../../dev-tools/kunit/style.rst:88
msgid ""
"In the event that there are multiple types of test using KUnit within a "
"subsystem (for example, both unit tests and integration tests), they should "
"be put into separate suites, with the type of test as the last element in "
"the suite name. Unless these tests are actually present, avoid using "
"``_test``, ``_unittest`` or similar in the suite name."
msgstr ""

#: ../../../dev-tools/kunit/style.rst:94
msgid ""
"The full test suite name (including the subsystem name) should be specified "
"as the ``.name`` member of the ``kunit_suite`` struct, and forms the base "
"for the module name. For example, test suites could include:"
msgstr ""

#: ../../../dev-tools/kunit/style.rst:98
msgid "``ext4_inode``"
msgstr ""

#: ../../../dev-tools/kunit/style.rst:99
msgid "Part of the ``ext4`` subsystem, testing the ``inode`` area."
msgstr ""

#: ../../../dev-tools/kunit/style.rst:100
msgid "``kunit_try_catch``"
msgstr ""

#: ../../../dev-tools/kunit/style.rst:101
msgid ""
"Part of the ``kunit`` implementation itself, testing the ``try_catch`` area."
msgstr ""

#: ../../../dev-tools/kunit/style.rst:102
msgid "``apparmor_property_entry``"
msgstr ""

#: ../../../dev-tools/kunit/style.rst:103
msgid ""
"Part of the ``apparmor`` subsystem, testing the ``property_entry`` area."
msgstr ""

#: ../../../dev-tools/kunit/style.rst:105
msgid ""
"The ``kasan`` subsystem has only one suite, so the suite name is the same as "
"the subsystem name."
msgstr ""

#: ../../../dev-tools/kunit/style.rst:108
msgid "Avoid names, for example:"
msgstr ""

#: ../../../dev-tools/kunit/style.rst:110
msgid "``ext4_ext4_inode``"
msgstr ""

#: ../../../dev-tools/kunit/style.rst:111
msgid "There is no reason to state the subsystem twice."
msgstr ""

#: ../../../dev-tools/kunit/style.rst:112
msgid "``property_entry``"
msgstr ""

#: ../../../dev-tools/kunit/style.rst:113
msgid "The suite name is ambiguous without the subsystem name."
msgstr ""

#: ../../../dev-tools/kunit/style.rst:114
msgid "``kasan_integration_test``"
msgstr ""

#: ../../../dev-tools/kunit/style.rst:115
msgid ""
"Because there is only one suite in the ``kasan`` subsystem, the suite should "
"just be called as ``kasan``. Do not redundantly add ``integration_test``. It "
"should be a separate test suite. For example, if the unit tests are added, "
"then that suite could be named as ``kasan_unittest`` or similar."
msgstr ""

#: ../../../dev-tools/kunit/style.rst:122
msgid "Test Cases"
msgstr ""

#: ../../../dev-tools/kunit/style.rst:124
msgid ""
"Individual tests consist of a single function which tests a constrained "
"codepath, property, or function. In the test output, an individual test's "
"results will show up as subtests of the suite's results."
msgstr ""

#: ../../../dev-tools/kunit/style.rst:128
msgid ""
"Tests should be named after what they are testing. This is often the name of "
"the function being tested, with a description of the input or codepath being "
"tested. As tests are C functions, they should be named and written in "
"accordance with the kernel coding style."
msgstr ""

#: ../../../dev-tools/kunit/style.rst:134
msgid ""
"As tests are themselves functions, their names cannot conflict with other C "
"identifiers in the kernel. This may require some creative naming. It is a "
"good idea to make your test functions `static` to avoid polluting the global "
"namespace."
msgstr ""

#: ../../../dev-tools/kunit/style.rst:139
msgid "Example test names include:"
msgstr ""

#: ../../../dev-tools/kunit/style.rst:141
msgid "``unpack_u32_with_null_name``"
msgstr ""

#: ../../../dev-tools/kunit/style.rst:142
msgid "Tests the ``unpack_u32`` function when a NULL name is passed in."
msgstr ""

#: ../../../dev-tools/kunit/style.rst:143
msgid "``test_list_splice``"
msgstr ""

#: ../../../dev-tools/kunit/style.rst:144
msgid ""
"Tests the ``list_splice`` macro. It has the prefix ``test_`` to avoid a name "
"conflict with the macro itself."
msgstr ""

#: ../../../dev-tools/kunit/style.rst:148
msgid ""
"Should it be necessary to refer to a test outside the context of its test "
"suite, the *fully-qualified* name of a test should be the suite name "
"followed by the test name, separated by a colon (i.e. ``suite:test``)."
msgstr ""

#: ../../../dev-tools/kunit/style.rst:153
msgid "Test Kconfig Entries"
msgstr ""

#: ../../../dev-tools/kunit/style.rst:155
msgid "Every test suite should be tied to a Kconfig entry."
msgstr ""

#: ../../../dev-tools/kunit/style.rst:157
msgid "This Kconfig entry must:"
msgstr ""

#: ../../../dev-tools/kunit/style.rst:159
msgid ""
"be named ``CONFIG_<name>_KUNIT_TEST``: where <name> is the name of the test "
"suite."
msgstr ""

#: ../../../dev-tools/kunit/style.rst:161
msgid ""
"be listed either alongside the config entries for the driver/subsystem being "
"tested, or be under [Kernel Hacking]->[Kernel Testing and Coverage]"
msgstr ""

#: ../../../dev-tools/kunit/style.rst:163
msgid "depend on ``CONFIG_KUNIT``."
msgstr ""

#: ../../../dev-tools/kunit/style.rst:164
msgid "be visible only if ``CONFIG_KUNIT_ALL_TESTS`` is not enabled."
msgstr ""

#: ../../../dev-tools/kunit/style.rst:165
msgid "have a default value of ``CONFIG_KUNIT_ALL_TESTS``."
msgstr ""

#: ../../../dev-tools/kunit/style.rst:166
msgid "have a brief description of KUnit in the help text."
msgstr ""

#: ../../../dev-tools/kunit/style.rst:168
msgid ""
"If we are not able to meet above conditions (for example, the test is unable "
"to be built as a module), Kconfig entries for tests should be tristate."
msgstr ""

#: ../../../dev-tools/kunit/style.rst:171
msgid "For example, a Kconfig entry might look like:"
msgstr ""

#: ../../../dev-tools/kunit/style.rst:189
msgid "Test File and Module Names"
msgstr ""

#: ../../../dev-tools/kunit/style.rst:191
msgid ""
"KUnit tests are often compiled as a separate module. To avoid conflicting "
"with regular modules, KUnit modules should be named after the test suite, "
"followed by ``_kunit`` (e.g. if \"foobar\" is the core module, then "
"\"foobar_kunit\" is the KUnit test module)."
msgstr ""

#: ../../../dev-tools/kunit/style.rst:196
msgid ""
"Test source files, whether compiled as a separate module or an ``#include`` "
"in another source file, are best kept in a ``tests/`` subdirectory to not "
"conflict with other source files (e.g. for tab-completion)."
msgstr ""

#: ../../../dev-tools/kunit/style.rst:201
msgid ""
"Note that the ``_test`` suffix has also been used in some existing tests. "
"The ``_kunit`` suffix is preferred, as it makes the distinction between "
"KUnit and non-KUnit tests clearer."
msgstr ""

#: ../../../dev-tools/kunit/style.rst:205
msgid ""
"So for the common case, name the file containing the test suite ``tests/"
"<suite>_kunit.c``. The ``tests`` directory should be placed at the same "
"level as the code under test. For example, tests for ``lib/string.c`` live "
"in ``lib/tests/string_kunit.c``."
msgstr ""

#: ../../../dev-tools/kunit/style.rst:210
msgid ""
"If the suite name contains some or all of the name of the test's parent "
"directory, it may make sense to modify the source filename to reduce "
"redundancy. For example, a ``foo_firmware`` suite could be in the ``foo/"
"tests/firmware_kunit.c`` file."
msgstr ""
