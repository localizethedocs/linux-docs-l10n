# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:4
msgid "TAA - TSX Asynchronous Abort"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:6
msgid ""
"TAA is a hardware vulnerability that allows unprivileged speculative access "
"to data which is available in various CPU internal buffers by using "
"asynchronous aborts within an Intel TSX transactional region."
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:11
msgid "Affected processors"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:13
msgid ""
"This vulnerability only affects Intel processors that support Intel "
"Transactional Synchronization Extensions (TSX) when the TAA_NO bit (bit 8) "
"is 0 in the IA32_ARCH_CAPABILITIES MSR.  On processors where the MDS_NO bit "
"(bit 5) is 0 in the IA32_ARCH_CAPABILITIES MSR, the existing MDS mitigations "
"also mitigate against TAA."
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:19
msgid ""
"Whether a processor is affected or not can be read out from the TAA "
"vulnerability file in sysfs. See :ref:`tsx_async_abort_sys_info`."
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:23
msgid "Related CVEs"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:25
msgid "The following CVE entry is related to this TAA issue:"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:28
msgid "CVE-2019-11135"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:28
msgid "TAA"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:28
msgid ""
"TSX Asynchronous Abort (TAA) condition on some microprocessors utilizing "
"speculative execution may allow an authenticated user to potentially enable "
"information disclosure via a side channel with local access."
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:36
msgid "Problem"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:38
msgid ""
"When performing store, load or L1 refill operations, processors write data "
"into temporary microarchitectural structures (buffers). The data in those "
"buffers can be forwarded to load operations as an optimization."
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:42
msgid ""
"Intel TSX is an extension to the x86 instruction set architecture that adds "
"hardware transactional memory support to improve performance of multi-"
"threaded software. TSX lets the processor expose and exploit concurrency "
"hidden in an application due to dynamically avoiding unnecessary "
"synchronization."
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:47
msgid ""
"TSX supports atomic memory transactions that are either committed (success) "
"or aborted. During an abort, operations that happened within the "
"transactional region are rolled back. An asynchronous abort takes place, "
"among other options, when a different thread accesses a cache line that is "
"also used within the transactional region when that access might lead to a "
"data race."
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:53
msgid ""
"Immediately after an uncompleted asynchronous abort, certain speculatively "
"executed loads may read data from those internal buffers and pass it to "
"dependent operations. This can be then used to infer the value via a cache "
"side channel attack."
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:58
msgid ""
"Because the buffers are potentially shared between Hyper-Threads cross Hyper-"
"Thread attacks are possible."
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:61
msgid ""
"The victim of a malicious actor does not need to make use of TSX. Only the "
"attacker needs to begin a TSX transaction and raise an asynchronous abort "
"which in turn potentially leaks data stored in the buffers."
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:65
msgid ""
"More detailed technical information is available in the TAA specific x86 "
"architecture section: :ref:`Documentation/arch/x86/tsx_async_abort.rst "
"<tsx_async_abort>`."
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:70
msgid "Attack scenarios"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:72
msgid ""
"Attacks against the TAA vulnerability can be implemented from unprivileged "
"applications running on hosts or guests."
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:75
msgid ""
"As for MDS, the attacker has no control over the memory addresses that can "
"be leaked. Only the victim is responsible for bringing data to the CPU. As a "
"result, the malicious actor has to sample as much data as possible and then "
"postprocess it to try to infer any useful information from it."
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:80
msgid ""
"A potential attacker only has read access to the data. Also, there is no "
"direct privilege escalation by using this technique."
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:87
msgid "TAA system information"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:89
msgid ""
"The Linux kernel provides a sysfs interface to enumerate the current TAA "
"status of mitigated systems. The relevant sysfs file is:"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:92
msgid "/sys/devices/system/cpu/vulnerabilities/tsx_async_abort"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:94
msgid "The possible values in this file are:"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:98
msgid "'Vulnerable'"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:99
msgid ""
"The CPU is affected by this vulnerability and the microcode and kernel "
"mitigation are not applied."
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:100
msgid "'Vulnerable: Clear CPU buffers attempted, no microcode'"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:101
msgid ""
"The processor is vulnerable but microcode is not updated. The mitigation is "
"enabled on a best effort basis."
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:104
msgid ""
"If the processor is vulnerable but the availability of the microcode based "
"mitigation mechanism is not advertised via CPUID, the kernel selects a best "
"effort mitigation mode. This mode invokes the mitigation instructions "
"without a guarantee that they clear the CPU buffers."
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:109
msgid ""
"This is done to address virtualization scenarios where the host has the "
"microcode update applied, but the hypervisor is not yet updated to expose "
"the CPUID to the guest. If the host has updated microcode the protection "
"takes effect; otherwise a few CPU cycles are wasted pointlessly."
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:114
msgid "'Mitigation: Clear CPU buffers'"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:115
msgid ""
"The microcode has been updated to clear the buffers. TSX is still enabled."
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:116
msgid "'Mitigation: TSX disabled'"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:117
msgid "TSX is disabled."
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:118
msgid "'Not affected'"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:119
msgid "The CPU is not affected by this issue."
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:122
msgid "Mitigation mechanism"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:124
msgid ""
"The kernel detects the affected CPUs and the presence of the microcode which "
"is required. If a CPU is affected and the microcode is available, then the "
"kernel enables the mitigation by default."
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:129
msgid ""
"The mitigation can be controlled at boot time via a kernel command line "
"option. See :ref:`taa_mitigation_control_command_line`."
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:133
msgid "Virtualization mitigation"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:135
msgid ""
"Affected systems where the host has TAA microcode and TAA is mitigated by "
"having disabled TSX previously, are not vulnerable regardless of the status "
"of the VMs."
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:139
msgid ""
"In all other cases, if the host either does not have the TAA microcode or "
"the kernel is not mitigated, the system might be vulnerable."
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:146
msgid "Mitigation control on the kernel command line"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:148
msgid ""
"The kernel command line allows to control the TAA mitigations at boot time "
"with the option \"tsx_async_abort=\". The valid arguments for this option "
"are:"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:152
#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:181
msgid "off"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:152
msgid ""
"This option disables the TAA mitigation on affected platforms. If the system "
"has TSX enabled (see next parameter) and the CPU is affected, the system is "
"vulnerable."
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:156
msgid "full"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:156
msgid ""
"TAA mitigation is enabled. If TSX is enabled, on an affected system it will "
"clear CPU buffers on ring transitions. On systems which are MDS-affected and "
"deploy MDS mitigation, TAA is also mitigated. Specifying this option on "
"those systems will have no effect."
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:162
msgid "full,nosmt"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:162
msgid ""
"The same as tsx_async_abort=full, with SMT disabled on vulnerable CPUs that "
"have TSX enabled. This is the complete mitigation. When TSX is disabled, SMT "
"is not disabled because CPU is not vulnerable to cross-thread TAA attacks."
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:168
msgid ""
"Not specifying this option is equivalent to \"tsx_async_abort=full\". For "
"processors that are affected by both TAA and MDS, specifying just "
"\"tsx_async_abort=off\" without an accompanying \"mds=off\" will have no "
"effect as the same mitigation is used for both vulnerabilities."
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:173
msgid ""
"The kernel command line also allows to control the TSX feature using the "
"parameter \"tsx=\" on CPUs which support TSX control. MSR_IA32_TSX_CTRL is "
"used to control the TSX feature and the enumeration of the TSX feature bits "
"(RTM and HLE) in CPUID."
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:178
msgid "The valid options are:"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:181
msgid "Disables TSX on the system."
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:183
msgid ""
"Note that this option takes effect only on newer CPUs which are not "
"vulnerable to MDS, i.e., have MSR_IA32_ARCH_CAPABILITIES.MDS_NO=1 and which "
"get the new IA32_TSX_CTRL MSR through a microcode update. This new MSR "
"allows for the reliable deactivation of the TSX functionality."
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:189
msgid "on"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:189
msgid "Enables TSX."
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:191
msgid ""
"Although there are mitigations for all known security vulnerabilities, TSX "
"has been known to be an accelerator for several previous speculation-related "
"CVEs, and so there may be unknown security risks associated with leaving it "
"enabled."
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:196
msgid "auto"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:196
msgid ""
"Disables TSX if X86_BUG_TAA is present, otherwise enables TSX on the system."
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:200
msgid "Not specifying this option is equivalent to \"tsx=off\"."
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:202
msgid ""
"The following combinations of the \"tsx_async_abort\" and \"tsx\" are "
"possible. For affected platforms tsx=auto is equivalent to tsx=off and the "
"result will be:"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:206
#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:209
#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:211
msgid "tsx=on"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:206
#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:212
msgid "tsx_async_abort=full"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:206
msgid ""
"The system will use VERW to clear CPU buffers. Cross-thread attacks are "
"still possible on SMT machines."
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:209
#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:215
msgid "tsx_async_abort=full,nosmt"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:209
msgid "As above, cross-thread attacks on SMT mitigated."
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:211
#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:216
msgid "tsx_async_abort=off"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:211
msgid "The system is vulnerable."
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:212
#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:215
#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:216
msgid "tsx=off"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:212
msgid ""
"TSX might be disabled if microcode provides a TSX control MSR. If so, system "
"is not vulnerable."
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:215
msgid "Ditto"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:216
msgid "ditto"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:220
msgid ""
"For unaffected platforms \"tsx=on\" and \"tsx_async_abort=full\" does not "
"clear CPU buffers.  For platforms without TSX control "
"(MSR_IA32_ARCH_CAPABILITIES.MDS_NO=0) \"tsx\" command line argument has no "
"effect."
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:224
msgid ""
"For the affected platforms below table indicates the mitigation status for "
"the combinations of CPUID bit MD_CLEAR and IA32_ARCH_CAPABILITIES MSR bits "
"MDS_NO and TSX_CTRL_MSR."
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:229
msgid "MDS_NO"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:229
msgid "MD_CLEAR"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:229
msgid "TSX_CTRL_MSR"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:229
msgid "Status"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:231
#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:232
#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:233
msgid "0"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:231
msgid "Vulnerable (needs microcode)"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:232
#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:233
#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:236
msgid "1"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:232
msgid "MDS and TAA mitigated via VERW"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:233
msgid ""
"MDS fixed, TAA vulnerable if TSX enabled because MD_CLEAR has no meaning and "
"VERW is not guaranteed to clear buffers"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:236
msgid "X"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:236
msgid "MDS fixed, TAA can be mitigated by VERW or TSX_CTRL_MSR"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:241
msgid "Mitigation selection guide"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:244
msgid "1. Trusted userspace and guests"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:246
msgid ""
"If all user space applications are from a trusted source and do not execute "
"untrusted code which is supplied externally, then the mitigation can be "
"disabled. The same applies to virtualized environments with trusted guests."
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:252
msgid "2. Untrusted userspace and guests"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:254
msgid ""
"If there are untrusted applications or guests on the system, enabling TSX "
"might allow a malicious actor to leak data from the host or from other "
"processes running on the same physical core."
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:258
msgid ""
"If the microcode is available and the TSX is disabled on the host, attacks "
"are prevented in a virtualized environment as well, even if the VMs do not "
"explicitly enable the mitigation."
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:266
msgid "Default mitigations"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:268
msgid "The kernel's default action for vulnerable processors is:"
msgstr ""

#: ../../../admin-guide/hw-vuln/tsx_async_abort.rst:270
msgid "Deploy TSX disable mitigation (tsx_async_abort=full tsx=off)."
msgstr ""
