# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-30 08:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../admin-guide/kernel-parameters.rst:4
msgid "The kernel's command-line parameters"
msgstr ""

#: ../../../admin-guide/kernel-parameters.rst:6
msgid ""
"The following is a consolidated list of the kernel parameters as implemented "
"by the __setup(), early_param(), core_param() and module_param() macros and "
"sorted into English Dictionary order (defined as ignoring all punctuation "
"and sorting digits before letters in a case insensitive manner), and with "
"descriptions where known."
msgstr ""

#: ../../../admin-guide/kernel-parameters.rst:12
msgid ""
"The kernel parses parameters from the kernel command line up to \"``--``\"; "
"if it doesn't recognize a parameter and it doesn't contain a '.', the "
"parameter gets passed to init: parameters with '=' go into init's "
"environment, others are passed as command line arguments to init. Everything "
"after \"``--``\" is passed as an argument to init."
msgstr ""

#: ../../../admin-guide/kernel-parameters.rst:18
msgid ""
"Module parameters can be specified in two ways: via the kernel command line "
"with a module name prefix, or via modprobe, e.g.::"
msgstr ""

#: ../../../admin-guide/kernel-parameters.rst:24
msgid ""
"Parameters for modules which are built into the kernel need to be specified "
"on the kernel command line.  modprobe looks through the kernel command line "
"(/proc/cmdline) and collects module parameters when it loads a module, so "
"the kernel command line can be used for loadable modules too."
msgstr ""

#: ../../../admin-guide/kernel-parameters.rst:30
msgid ""
"This document may not be entirely up to date and comprehensive. The command "
"\"modinfo -p ${modulename}\" shows a current list of all parameters of a "
"loadable module. Loadable modules, after being loaded into the running "
"kernel, also reveal their parameters in /sys/module/${modulename}/"
"parameters/. Some of these parameters may be changed at runtime by the "
"command ``echo -n ${value} > /sys/module/${modulename}/parameters/${parm}``."
msgstr ""

#: ../../../admin-guide/kernel-parameters.rst:38
msgid "Special handling"
msgstr ""

#: ../../../admin-guide/kernel-parameters.rst:40
msgid ""
"Hyphens (dashes) and underscores are equivalent in parameter names, so::"
msgstr ""

#: ../../../admin-guide/kernel-parameters.rst:44
msgid "can also be entered as::"
msgstr ""

#: ../../../admin-guide/kernel-parameters.rst:48
msgid "Double-quotes can be used to protect spaces in values, e.g.::"
msgstr ""

#: ../../../admin-guide/kernel-parameters.rst:53
msgid "cpu lists"
msgstr ""

#: ../../../admin-guide/kernel-parameters.rst:55
msgid ""
"Some kernel parameters take a list of CPUs as a value, e.g.  isolcpus, "
"nohz_full, irqaffinity, rcu_nocbs.  The format of this list is:"
msgstr ""

#: ../../../admin-guide/kernel-parameters.rst:58
msgid "<cpu number>,...,<cpu number>"
msgstr ""

#: ../../../admin-guide/kernel-parameters.rst:60
msgid "or"
msgstr ""

#: ../../../admin-guide/kernel-parameters.rst:62
msgid "<cpu number>-<cpu number> (must be a positive range in ascending order)"
msgstr ""

#: ../../../admin-guide/kernel-parameters.rst:65
msgid "or a mixture"
msgstr ""

#: ../../../admin-guide/kernel-parameters.rst:67
msgid "<cpu number>,...,<cpu number>-<cpu number>"
msgstr ""

#: ../../../admin-guide/kernel-parameters.rst:69
msgid ""
"Note that for the special case of a range one can split the range into equal "
"sized groups and for each group use some amount from the beginning of that "
"group:"
msgstr ""

#: ../../../admin-guide/kernel-parameters.rst:73
msgid "<cpu number>-<cpu number>:<used size>/<group size>"
msgstr ""

#: ../../../admin-guide/kernel-parameters.rst:75
msgid "For example one can add to the command line following parameter:"
msgstr ""

#: ../../../admin-guide/kernel-parameters.rst:77
msgid "isolcpus=1,2,10-20,100-2000:2/25"
msgstr ""

#: ../../../admin-guide/kernel-parameters.rst:79
msgid "where the final item represents CPUs 100,101,125,126,150,151,..."
msgstr ""

#: ../../../admin-guide/kernel-parameters.rst:81
msgid ""
"The value \"N\" can be used to represent the numerically last CPU on the "
"system, i.e \"foo_cpus=16-N\" would be equivalent to \"16-31\" on a 32 core "
"system."
msgstr ""

#: ../../../admin-guide/kernel-parameters.rst:84
msgid ""
"Keep in mind that \"N\" is dynamic, so if system changes cause the bitmap "
"width to change, such as less cores in the CPU list, then N and any ranges "
"using N will also change.  Use the same on a small 4 core system, and \"16-"
"N\" becomes \"16-3\" and now the same boot input will be flagged as invalid "
"(start > end)."
msgstr ""

#: ../../../admin-guide/kernel-parameters.rst:89
msgid ""
"The special case-tolerant group name \"all\" has a meaning of selecting all "
"CPUs, so that \"nohz_full=all\" is the equivalent of \"nohz_full=0-N\"."
msgstr ""

#: ../../../admin-guide/kernel-parameters.rst:92
msgid ""
"The semantics of \"N\" and \"all\" is supported on a level of bitmaps and "
"holds for all users of bitmap_parselist()."
msgstr ""

#: ../../../admin-guide/kernel-parameters.rst:96
msgid "Metric suffixes"
msgstr ""

#: ../../../admin-guide/kernel-parameters.rst:98
msgid ""
"The [KMG] suffix is commonly described after a number of kernel parameter "
"values. 'K', 'M', 'G', 'T', 'P', and 'E' suffixes are allowed. These letters "
"represent the _binary_ multipliers 'Kilo', 'Mega', 'Giga', 'Tera', 'Peta', "
"and 'Exa', equaling 2^10, 2^20, 2^30, 2^40, 2^50, and 2^60 bytes "
"respectively. Such letter suffixes can also be entirely omitted."
msgstr ""

#: ../../../admin-guide/kernel-parameters.rst:105
msgid "Kernel Build Options"
msgstr ""

#: ../../../admin-guide/kernel-parameters.rst:107
msgid ""
"The parameters listed below are only valid if certain kernel build options "
"were enabled and if respective hardware is present. This list should be kept "
"in alphabetical order. The text in square brackets at the beginning of each "
"description states the restrictions within which a parameter is applicable::"
msgstr ""

#: ../../../admin-guide/kernel-parameters.rst:202
msgid "In addition, the following text indicates that the option::"
msgstr ""

#: ../../../admin-guide/kernel-parameters.rst:208
msgid ""
"Parameters denoted with BOOT are actually interpreted by the boot loader, "
"and have no meaning to the kernel directly. Do not modify the syntax of boot "
"loader parameters without extreme need or coordination with <Documentation/"
"arch/x86/boot.rst>."
msgstr ""

#: ../../../admin-guide/kernel-parameters.rst:213
msgid "There are also arch-specific kernel-parameters not documented here."
msgstr ""

#: ../../../admin-guide/kernel-parameters.rst:215
msgid ""
"Note that ALL kernel parameters listed below are CASE SENSITIVE, and that a "
"trailing = on the name of any parameter states that that parameter will be "
"entered as an environment variable, whereas its absence indicates that it "
"will appear as a kernel argument readable via /proc/cmdline by programs "
"running once the system is up."
msgstr ""

#: ../../../admin-guide/kernel-parameters.rst:221
msgid ""
"The number of kernel parameters is not limited, but the length of the "
"complete command line (parameters including spaces etc.) is limited to a "
"fixed number of characters. This limit depends on the architecture and is "
"between 256 and 4096 characters. It is defined in the file ./include/uapi/"
"asm-generic/setup.h as COMMAND_LINE_SIZE."
msgstr ""
