# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../admin-guide/mm/multigen_lru.rst:5
msgid "Multi-Gen LRU"
msgstr ""

#: ../../../admin-guide/mm/multigen_lru.rst:6
msgid ""
"The multi-gen LRU is an alternative LRU implementation that optimizes page "
"reclaim and improves performance under memory pressure. Page reclaim decides "
"the kernel's caching policy and ability to overcommit memory. It directly "
"impacts the kswapd CPU usage and RAM efficiency."
msgstr ""

#: ../../../admin-guide/mm/multigen_lru.rst:12
msgid "Quick start"
msgstr ""

#: ../../../admin-guide/mm/multigen_lru.rst:13
msgid "Build the kernel with the following configurations."
msgstr ""

#: ../../../admin-guide/mm/multigen_lru.rst:15
msgid "``CONFIG_LRU_GEN=y``"
msgstr ""

#: ../../../admin-guide/mm/multigen_lru.rst:16
msgid "``CONFIG_LRU_GEN_ENABLED=y``"
msgstr ""

#: ../../../admin-guide/mm/multigen_lru.rst:18
msgid "All set!"
msgstr ""

#: ../../../admin-guide/mm/multigen_lru.rst:21
msgid "Runtime options"
msgstr ""

#: ../../../admin-guide/mm/multigen_lru.rst:22
msgid ""
"``/sys/kernel/mm/lru_gen/`` contains stable ABIs described in the following "
"subsections."
msgstr ""

#: ../../../admin-guide/mm/multigen_lru.rst:26
msgid "Kill switch"
msgstr ""

#: ../../../admin-guide/mm/multigen_lru.rst:27
msgid ""
"``enabled`` accepts different values to enable or disable the following "
"components. Its default value depends on ``CONFIG_LRU_GEN_ENABLED``. All the "
"components should be enabled unless some of them have unforeseen side "
"effects. Writing to ``enabled`` has no effect when a component is not "
"supported by the hardware, and valid values will be accepted even when the "
"main switch is off."
msgstr ""

#: ../../../admin-guide/mm/multigen_lru.rst:36
msgid "Values"
msgstr ""

#: ../../../admin-guide/mm/multigen_lru.rst:36
msgid "Components"
msgstr ""

#: ../../../admin-guide/mm/multigen_lru.rst:38
msgid "0x0001"
msgstr ""

#: ../../../admin-guide/mm/multigen_lru.rst:38
msgid "The main switch for the multi-gen LRU."
msgstr ""

#: ../../../admin-guide/mm/multigen_lru.rst:39
msgid "0x0002"
msgstr ""

#: ../../../admin-guide/mm/multigen_lru.rst:39
msgid ""
"Clearing the accessed bit in leaf page table entries in large batches, when "
"MMU sets it (e.g., on x86). This behavior can theoretically worsen lock "
"contention (mmap_lock). If it is disabled, the multi-gen LRU will suffer a "
"minor performance degradation for workloads that contiguously map hot pages, "
"whose accessed bits can be otherwise cleared by fewer larger batches."
msgstr ""

#: ../../../admin-guide/mm/multigen_lru.rst:46
msgid "0x0004"
msgstr ""

#: ../../../admin-guide/mm/multigen_lru.rst:46
msgid ""
"Clearing the accessed bit in non-leaf page table entries as well, when MMU "
"sets it (e.g., on x86). This behavior was not verified on x86 varieties "
"other than Intel and AMD. If it is disabled, the multi-gen LRU will suffer a "
"negligible performance degradation."
msgstr ""

#: ../../../admin-guide/mm/multigen_lru.rst:51
msgid "[yYnN]"
msgstr ""

#: ../../../admin-guide/mm/multigen_lru.rst:51
msgid "Apply to all the components above."
msgstr ""

#: ../../../admin-guide/mm/multigen_lru.rst:54
msgid "E.g., ::"
msgstr ""

#: ../../../admin-guide/mm/multigen_lru.rst:65
msgid "Thrashing prevention"
msgstr ""

#: ../../../admin-guide/mm/multigen_lru.rst:66
msgid ""
"Personal computers are more sensitive to thrashing because it can cause "
"janks (lags when rendering UI) and negatively impact user experience. The "
"multi-gen LRU offers thrashing prevention to the majority of laptop and "
"desktop users who do not have ``oomd``."
msgstr ""

#: ../../../admin-guide/mm/multigen_lru.rst:71
msgid ""
"Users can write ``N`` to ``min_ttl_ms`` to prevent the working set of ``N`` "
"milliseconds from getting evicted. The OOM killer is triggered if this "
"working set cannot be kept in memory. In other words, this option works as "
"an adjustable pressure relief valve, and when open, it terminates "
"applications that are hopefully not being used."
msgstr ""

#: ../../../admin-guide/mm/multigen_lru.rst:77
msgid ""
"Based on the average human detectable lag (~100ms), ``N=1000`` usually "
"eliminates intolerable janks due to thrashing. Larger values like ``N=3000`` "
"make janks less noticeable at the risk of premature OOM kills."
msgstr ""

#: ../../../admin-guide/mm/multigen_lru.rst:82
msgid "The default value ``0`` means disabled."
msgstr ""

#: ../../../admin-guide/mm/multigen_lru.rst:85
msgid "Experimental features"
msgstr ""

#: ../../../admin-guide/mm/multigen_lru.rst:86
msgid ""
"``/sys/kernel/debug/lru_gen`` accepts commands described in the following "
"subsections. Multiple command lines are supported, so does concatenation "
"with delimiters ``,`` and ``;``."
msgstr ""

#: ../../../admin-guide/mm/multigen_lru.rst:90
msgid ""
"``/sys/kernel/debug/lru_gen_full`` provides additional stats for debugging. "
"``CONFIG_LRU_GEN_STATS=y`` keeps historical stats from evicted generations "
"in this file."
msgstr ""

#: ../../../admin-guide/mm/multigen_lru.rst:95
msgid "Working set estimation"
msgstr ""

#: ../../../admin-guide/mm/multigen_lru.rst:96
msgid ""
"Working set estimation measures how much memory an application needs in a "
"given time interval, and it is usually done with little impact on the "
"performance of the application. E.g., data centers want to optimize job "
"scheduling (bin packing) to improve memory utilizations. When a new job "
"comes in, the job scheduler needs to find out whether each server it manages "
"can allocate a certain amount of memory for this new job before it can pick "
"a candidate. To do so, the job scheduler needs to estimate the working sets "
"of the existing jobs."
msgstr ""

#: ../../../admin-guide/mm/multigen_lru.rst:105
msgid ""
"When it is read, ``lru_gen`` returns a histogram of numbers of pages "
"accessed over different time intervals for each memcg and node. "
"``MAX_NR_GENS`` decides the number of bins for each histogram. The "
"histograms are noncumulative. ::"
msgstr ""

#: ../../../admin-guide/mm/multigen_lru.rst:117
msgid ""
"Each bin contains an estimated number of pages that have been accessed "
"within ``age_in_ms``. E.g., ``min_gen_nr`` contains the coldest pages and "
"``max_gen_nr`` contains the hottest pages, since ``age_in_ms`` of the former "
"is the largest and that of the latter is the smallest."
msgstr ""

#: ../../../admin-guide/mm/multigen_lru.rst:122
msgid ""
"Users can write the following command to ``lru_gen`` to create a new "
"generation ``max_gen_nr+1``:"
msgstr ""

#: ../../../admin-guide/mm/multigen_lru.rst:125
msgid "``+ memcg_id node_id max_gen_nr [can_swap [force_scan]]``"
msgstr ""

#: ../../../admin-guide/mm/multigen_lru.rst:127
msgid ""
"``can_swap`` defaults to the swap setting and, if it is set to ``1``, it "
"forces the scan of anon pages when swap is off, and vice versa. "
"``force_scan`` defaults to ``1`` and, if it is set to ``0``, it employs "
"heuristics to reduce the overhead, which is likely to reduce the coverage as "
"well."
msgstr ""

#: ../../../admin-guide/mm/multigen_lru.rst:133
msgid ""
"A typical use case is that a job scheduler runs this command at a certain "
"time interval to create new generations, and it ranks the servers it manages "
"based on the sizes of their cold pages defined by this time interval."
msgstr ""

#: ../../../admin-guide/mm/multigen_lru.rst:139
msgid "Proactive reclaim"
msgstr ""

#: ../../../admin-guide/mm/multigen_lru.rst:140
msgid ""
"Proactive reclaim induces page reclaim when there is no memory pressure. It "
"usually targets cold pages only. E.g., when a new job comes in, the job "
"scheduler wants to proactively reclaim cold pages on the server it selected, "
"to improve the chance of successfully landing this new job."
msgstr ""

#: ../../../admin-guide/mm/multigen_lru.rst:146
msgid ""
"Users can write the following command to ``lru_gen`` to evict generations "
"less than or equal to ``min_gen_nr``."
msgstr ""

#: ../../../admin-guide/mm/multigen_lru.rst:149
msgid "``- memcg_id node_id min_gen_nr [swappiness [nr_to_reclaim]]``"
msgstr ""

#: ../../../admin-guide/mm/multigen_lru.rst:151
msgid ""
"``min_gen_nr`` should be less than ``max_gen_nr-1``, since ``max_gen_nr`` "
"and ``max_gen_nr-1`` are not fully aged (equivalent to the active list) and "
"therefore cannot be evicted. ``swappiness`` overrides the default value in "
"``/proc/sys/vm/swappiness`` and the valid range is [0-200, max], with max "
"being exclusively used for the reclamation of anonymous memory. "
"``nr_to_reclaim`` limits the number of pages to evict."
msgstr ""

#: ../../../admin-guide/mm/multigen_lru.rst:158
msgid ""
"A typical use case is that a job scheduler runs this command before it tries "
"to land a new job on a server. If it fails to materialize enough cold pages "
"because of the overestimation, it retries on the next server according to "
"the ranking result obtained from the working set estimation step. This less "
"forceful approach limits the impacts on the existing jobs."
msgstr ""
