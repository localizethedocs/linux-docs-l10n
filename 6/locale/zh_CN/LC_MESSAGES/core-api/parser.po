# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-14 08:59+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../core-api/parser.rst:5
msgid "Generic parser"
msgstr ""

#: ../../../core-api/parser.rst:8
msgid "Overview"
msgstr ""

#: ../../../core-api/parser.rst:10
msgid ""
"The generic parser is a simple parser for parsing mount options, filesystem "
"options, driver options, subsystem options, etc."
msgstr ""

#: ../../../core-api/parser.rst:14
msgid "Parser API"
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:102
msgid "Find a token (and optional args) in a string"
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:106 lib/parser.c:189
#: lib/parser.c:205 lib/parser.c:226 lib/parser.c:244 lib/parser.c:260
#: lib/parser.c:276 lib/parser.c:329 lib/parser.c:354
msgid "**Parameters**"
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:108
msgid "``char *s``"
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:103
msgid "the string to examine for token/argument pairs"
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:105
msgid "``const match_table_t table``"
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:104
msgid ""
"match_table_t describing the set of allowed option tokens and the arguments "
"that may be associated with them. Must be terminated with a :c:type:`struct "
"match_token <match_token>` whose pattern is set to the NULL pointer."
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:108
msgid "``substring_t args[]``"
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:107
msgid ""
"array of ``MAX_OPT_ARGS`` :c:type:`substring_t` elements. Used to return "
"match locations."
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:110 lib/parser.c:189
#: lib/parser.c:205 lib/parser.c:227 lib/parser.c:244 lib/parser.c:260
#: lib/parser.c:276 lib/parser.c:330 lib/parser.c:353
msgid "**Description**"
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:110
msgid ""
"Detects which if any of a set of token strings has been passed to it. Tokens "
"can include up to ``MAX_OPT_ARGS`` instances of basic c-style format "
"identifiers which will be taken into account when matching the tokens, and "
"whose locations will be returned in the **args** array."
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:185 lib/parser.c:201
msgid "scan a decimal representation of an integer from a substring_t"
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:191 lib/parser.c:207
#: lib/parser.c:228 lib/parser.c:246 lib/parser.c:262
msgid "``substring_t *s``"
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:186 lib/parser.c:202
#: lib/parser.c:224 lib/parser.c:241 lib/parser.c:257
msgid "substring_t to be scanned"
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:188 lib/parser.c:243
#: lib/parser.c:259
msgid "``int *result``"
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:187 lib/parser.c:203
#: lib/parser.c:242 lib/parser.c:258
msgid "resulting integer on success"
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:189 lib/parser.c:205
msgid "Attempts to parse the :c:type:`substring_t` **s** as a decimal integer."
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:191 lib/parser.c:207
#: lib/parser.c:230 lib/parser.c:246 lib/parser.c:262 lib/parser.c:282
#: lib/parser.c:334 lib/parser.c:357
msgid "**Return**"
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:191 lib/parser.c:207
#: lib/parser.c:230 lib/parser.c:246 lib/parser.c:262
msgid ""
"On success, sets **result** to the integer represented by the string and "
"returns 0. Returns -EINVAL or -ERANGE on failure."
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:204
msgid "``unsigned int *result``"
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:222
msgid "scan a decimal representation of a u64 from a substring_t"
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:226
msgid "``u64 *result``"
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:225
msgid "resulting unsigned long long on success"
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:227
msgid ""
"Attempts to parse the :c:type:`substring_t` **s** as a long decimal integer."
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:240
msgid "scan an octal representation of an integer from a substring_t"
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:244
msgid "Attempts to parse the :c:type:`substring_t` **s** as an octal integer."
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:256
msgid "scan a hex representation of an integer from a substring_t"
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:260
msgid ""
"Attempts to parse the :c:type:`substring_t` **s** as a hexadecimal integer."
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:272
msgid "parse if a string matches given wildcard pattern"
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:278
msgid "``const char *pattern``"
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:273
msgid "wildcard pattern"
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:275
msgid "``const char *str``"
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:274
msgid "the string to be parsed"
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:276
msgid ""
"Parse the string **str** to check if matches wildcard pattern **pattern**. "
"The pattern may contain two types of wildcards:"
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:279
msgid "'*' - matches zero or more characters"
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:280
msgid "'?' - matches one character"
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:282
msgid "If the **str** matches the **pattern**, return true, else return false."
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:325
msgid "Copy the characters from a substring_t to a sized buffer"
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:331
msgid "``char *dest``"
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:326
msgid "where to copy to"
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:328
msgid "``const substring_t *src``"
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:327 lib/parser.c:351
msgid ":c:type:`substring_t` to copy"
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:329
msgid "``size_t size``"
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:328
msgid "size of destination buffer"
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:330
msgid ""
"Copy the characters in :c:type:`substring_t` **src** to the c-style string "
"**dest**.  Copy no more than **size** - 1 characters, plus the terminating "
"NUL."
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:334
msgid "length of **src**."
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:350
msgid "allocate a new string with the contents of a substring_t"
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:356
msgid "``const substring_t *s``"
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:353
msgid ""
"Allocates and returns a string filled with the contents of the :c:type:"
"`substring_t` **s**. The caller is responsible for freeing the returned "
"string with kfree()."
msgstr ""

#: ../../../core-api/parser:16: lib/parser.c:357
msgid ""
"the address of the newly allocated NUL-terminated string or ``NULL`` on "
"error."
msgstr ""
