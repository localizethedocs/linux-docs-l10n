# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-30 08:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../core-api/librs.rst:3
msgid "Reed-Solomon Library Programming Interface"
msgstr ""

#: ../../../core-api/librs.rst:0
msgid "Author"
msgstr ""

#: ../../../core-api/librs.rst:5
msgid "Thomas Gleixner"
msgstr ""

#: ../../../core-api/librs.rst:8
msgid "Introduction"
msgstr ""

#: ../../../core-api/librs.rst:10
msgid ""
"The generic Reed-Solomon Library provides encoding, decoding and error "
"correction functions."
msgstr ""

#: ../../../core-api/librs.rst:13
msgid ""
"Reed-Solomon codes are used in communication and storage applications to "
"ensure data integrity."
msgstr ""

#: ../../../core-api/librs.rst:16
msgid ""
"This documentation is provided for developers who want to utilize the "
"functions provided by the library."
msgstr ""

#: ../../../core-api/librs.rst:20
msgid "Known Bugs And Assumptions"
msgstr ""

#: ../../../core-api/librs.rst:22
msgid "None."
msgstr ""

#: ../../../core-api/librs.rst:25
msgid "Usage"
msgstr ""

#: ../../../core-api/librs.rst:27
msgid "This chapter provides examples of how to use the library."
msgstr ""

#: ../../../core-api/librs.rst:30
msgid "Initializing"
msgstr ""

#: ../../../core-api/librs.rst:32
msgid ""
"The init function init_rs returns a pointer to an rs decoder structure, "
"which holds the necessary information for encoding, decoding and error "
"correction with the given polynomial. It either uses an existing matching "
"decoder or creates a new one. On creation all the lookup tables for fast en/"
"decoding are created. The function may take a while, so make sure not to "
"call it in critical code paths."
msgstr ""

#: ../../../core-api/librs.rst:54
msgid "Encoding"
msgstr ""

#: ../../../core-api/librs.rst:56
msgid ""
"The encoder calculates the Reed-Solomon code over the given data length and "
"stores the result in the parity buffer. Note that the parity buffer must be "
"initialized before calling the encoder."
msgstr ""

#: ../../../core-api/librs.rst:60
msgid ""
"The expanded data can be inverted on the fly by providing a non-zero "
"inversion mask. The expanded data is XOR'ed with the mask. This is used e.g. "
"for FLASH ECC, where the all 0xFF is inverted to an all 0x00. The Reed-"
"Solomon code for all 0x00 is all 0x00. The code is inverted before storing "
"to FLASH so it is 0xFF too. This prevents that reading from an erased FLASH "
"results in ECC errors."
msgstr ""

#: ../../../core-api/librs.rst:67
msgid ""
"The databytes are expanded to the given symbol size on the fly. There is no "
"support for encoding continuous bitstreams with a symbol size != 8 at the "
"moment. If it is necessary it should be not a big deal to implement such "
"functionality."
msgstr ""

#: ../../../core-api/librs.rst:83
msgid "Decoding"
msgstr ""

#: ../../../core-api/librs.rst:85
msgid ""
"The decoder calculates the syndrome over the given data length and the "
"received parity symbols and corrects errors in the data."
msgstr ""

#: ../../../core-api/librs.rst:88
msgid ""
"If a syndrome is available from a hardware decoder then the syndrome "
"calculation is skipped."
msgstr ""

#: ../../../core-api/librs.rst:91
msgid ""
"The correction of the data buffer can be suppressed by providing a "
"correction pattern buffer and an error location buffer to the decoder. The "
"decoder stores the calculated error location and the correction bitmask in "
"the given buffers. This is useful for hardware decoders which use a weird "
"bit ordering scheme."
msgstr ""

#: ../../../core-api/librs.rst:97
msgid ""
"The databytes are expanded to the given symbol size on the fly. There is no "
"support for decoding continuous bitstreams with a symbolsize != 8 at the "
"moment. If it is necessary it should be not a big deal to implement such "
"functionality."
msgstr ""

#: ../../../core-api/librs.rst:103
msgid "Decoding with syndrome calculation, direct data correction"
msgstr ""

#: ../../../core-api/librs.rst:120
msgid ""
"Decoding with syndrome given by hardware decoder, direct data correction"
msgstr ""

#: ../../../core-api/librs.rst:139
msgid ""
"Decoding with syndrome given by hardware decoder, no direct data correction."
msgstr ""

#: ../../../core-api/librs.rst:141
msgid ""
"Note: It's not necessary to give data and received parity to the decoder."
msgstr ""

#: ../../../core-api/librs.rst:164
msgid "Cleanup"
msgstr ""

#: ../../../core-api/librs.rst:166
msgid ""
"The function free_rs frees the allocated resources, if the caller is the "
"last user of the decoder."
msgstr ""

#: ../../../core-api/librs.rst:176
msgid "Structures"
msgstr ""

#: ../../../core-api/librs.rst:178
msgid ""
"This chapter contains the autogenerated documentation of the structures "
"which are used in the Reed-Solomon Library and are relevant for a developer."
msgstr ""

#: ../../../core-api/librs:182: include/linux/rslib.h:17
msgid "rs codec data"
msgstr ""

#: ../../../core-api/librs:182: include/linux/rslib.h:21
#: include/linux/rslib.h:54
msgid "**Definition**::"
msgstr ""

#: ../../../core-api/librs:182: include/linux/rslib.h:39
#: include/linux/rslib.h:61
msgid "**Members**"
msgstr ""

#: ../../../core-api/librs:182: include/linux/rslib.h:19
msgid "``mm``"
msgstr ""

#: ../../../core-api/librs:182: include/linux/rslib.h:20
msgid "Bits per symbol"
msgstr ""

#: ../../../core-api/librs:182: include/linux/rslib.h:20
msgid "``nn``"
msgstr ""

#: ../../../core-api/librs:182: include/linux/rslib.h:21
msgid "Symbols per block (= (1<<mm)-1)"
msgstr ""

#: ../../../core-api/librs:182: include/linux/rslib.h:21
msgid "``alpha_to``"
msgstr ""

#: ../../../core-api/librs:182: include/linux/rslib.h:22
msgid "log lookup table"
msgstr ""

#: ../../../core-api/librs:182: include/linux/rslib.h:22
msgid "``index_of``"
msgstr ""

#: ../../../core-api/librs:182: include/linux/rslib.h:23
msgid "Antilog lookup table"
msgstr ""

#: ../../../core-api/librs:182: include/linux/rslib.h:23
msgid "``genpoly``"
msgstr ""

#: ../../../core-api/librs:182: include/linux/rslib.h:24
msgid "Generator polynomial"
msgstr ""

#: ../../../core-api/librs:182: include/linux/rslib.h:24
msgid "``nroots``"
msgstr ""

#: ../../../core-api/librs:182: include/linux/rslib.h:25
msgid "Number of generator roots = number of parity symbols"
msgstr ""

#: ../../../core-api/librs:182: include/linux/rslib.h:25
msgid "``fcr``"
msgstr ""

#: ../../../core-api/librs:182: include/linux/rslib.h:26
msgid "First consecutive root, index form"
msgstr ""

#: ../../../core-api/librs:182: include/linux/rslib.h:26
msgid "``prim``"
msgstr ""

#: ../../../core-api/librs:182: include/linux/rslib.h:27
msgid "Primitive element, index form"
msgstr ""

#: ../../../core-api/librs:182: include/linux/rslib.h:27
msgid "``iprim``"
msgstr ""

#: ../../../core-api/librs:182: include/linux/rslib.h:28
msgid "prim-th root of 1, index form"
msgstr ""

#: ../../../core-api/librs:182: include/linux/rslib.h:28
msgid "``gfpoly``"
msgstr ""

#: ../../../core-api/librs:182: include/linux/rslib.h:29
msgid "The primitive generator polynominal"
msgstr ""

#: ../../../core-api/librs:182: include/linux/rslib.h:29
msgid "``gffunc``"
msgstr ""

#: ../../../core-api/librs:182: include/linux/rslib.h:30
msgid "Function to generate the field, if non-canonical representation"
msgstr ""

#: ../../../core-api/librs:182: include/linux/rslib.h:30
msgid "``users``"
msgstr ""

#: ../../../core-api/librs:182: include/linux/rslib.h:31
msgid "Users of this structure"
msgstr ""

#: ../../../core-api/librs:182: include/linux/rslib.h:31
msgid "``list``"
msgstr ""

#: ../../../core-api/librs:182: include/linux/rslib.h:32
msgid "List entry for the rs codec list"
msgstr ""

#: ../../../core-api/librs:182: include/linux/rslib.h:50
msgid "rs control structure per instance"
msgstr ""

#: ../../../core-api/librs:182: include/linux/rslib.h:51
msgid "``codec``"
msgstr ""

#: ../../../core-api/librs:182: include/linux/rslib.h:52
msgid "The codec used for this instance"
msgstr ""

#: ../../../core-api/librs:182: include/linux/rslib.h:52
msgid "``buffers``"
msgstr ""

#: ../../../core-api/librs:182: include/linux/rslib.h:53
msgid "Internal scratch buffers used in calls to decode_rs()"
msgstr ""

#: ../../../core-api/librs:182: include/linux/rslib.h:85
#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:277
msgid "Create a RS control struct and initialize it"
msgstr ""

#: ../../../core-api/librs:182: include/linux/rslib.h:89
#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:173
#: lib/reed_solomon/reed_solomon.c:281 lib/reed_solomon/reed_solomon.c:300
#: lib/reed_solomon/reed_solomon.c:321 lib/reed_solomon/reed_solomon.c:342
#: lib/reed_solomon/reed_solomon.c:376 lib/reed_solomon/reed_solomon.c:395
msgid "**Parameters**"
msgstr ""

#: ../../../core-api/librs:182: include/linux/rslib.h:91
#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:283
#: lib/reed_solomon/reed_solomon.c:302
msgid "``int symsize``"
msgstr ""

#: ../../../core-api/librs:182: include/linux/rslib.h:86
#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:278
#: lib/reed_solomon/reed_solomon.c:298
msgid "the symbol size (number of bits)"
msgstr ""

#: ../../../core-api/librs:182: include/linux/rslib.h:88
#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:280
msgid "``int gfpoly``"
msgstr ""

#: ../../../core-api/librs:182: include/linux/rslib.h:87
#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:279
msgid ""
"the extended Galois field generator polynomial coefficients, with the 0th "
"coefficient in the low order bit. The polynomial must be primitive;"
msgstr ""

#: ../../../core-api/librs:182: include/linux/rslib.h:91
#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:283
#: lib/reed_solomon/reed_solomon.c:303
msgid "``int fcr``"
msgstr ""

#: ../../../core-api/librs:182: include/linux/rslib.h:90
#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:282
#: lib/reed_solomon/reed_solomon.c:302
msgid ""
"the first consecutive root of the rs code generator polynomial in index form"
msgstr ""

#: ../../../core-api/librs:182: include/linux/rslib.h:93
#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:285
#: lib/reed_solomon/reed_solomon.c:305
msgid "``int prim``"
msgstr ""

#: ../../../core-api/librs:182: include/linux/rslib.h:92
#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:284
#: lib/reed_solomon/reed_solomon.c:304
msgid "primitive element to generate polynomial roots"
msgstr ""

#: ../../../core-api/librs:182: include/linux/rslib.h:94
#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:286
#: lib/reed_solomon/reed_solomon.c:306
msgid "``int nroots``"
msgstr ""

#: ../../../core-api/librs:182: include/linux/rslib.h:93
#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:285
#: lib/reed_solomon/reed_solomon.c:305
msgid "RS code generator polynomial degree (number of roots)"
msgstr ""

#: ../../../core-api/librs:182: include/linux/rslib.h:95
#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:173
#: lib/reed_solomon/reed_solomon.c:324 lib/reed_solomon/reed_solomon.c:350
#: lib/reed_solomon/reed_solomon.c:379 lib/reed_solomon/reed_solomon.c:403
msgid "**Description**"
msgstr ""

#: ../../../core-api/librs:182: include/linux/rslib.h:94
msgid "Allocations use GFP_KERNEL."
msgstr ""

#: ../../../core-api/librs.rst:186
msgid "Public Functions Provided"
msgstr ""

#: ../../../core-api/librs.rst:188
msgid ""
"This chapter contains the autogenerated documentation of the Reed-Solomon "
"functions which are exported."
msgstr ""

#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:169
msgid "Free the rs control structure"
msgstr ""

#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:175
msgid "``struct rs_control *rs``"
msgstr ""

#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:170
msgid "The control structure which is not longer used by the caller"
msgstr ""

#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:172
msgid ""
"Free the control structure. If **rs** is the last user of the associated "
"codec, free the codec as well."
msgstr ""

#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:287
msgid "``gfp_t gfp``"
msgstr ""

#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:286
msgid "Memory allocation flags."
msgstr ""

#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:296
msgid "Allocate rs control struct for fields with non-canonical representation"
msgstr ""

#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:300
msgid "``int (*gffunc)(int)``"
msgstr ""

#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:299
msgid ""
"pointer to function to generate the next field element, or the "
"multiplicative identity element if given 0.  Used instead of gfpoly if "
"gfpoly is 0"
msgstr ""

#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:317
msgid "Calculate the parity for data values (8bit data width)"
msgstr ""

#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:323
#: lib/reed_solomon/reed_solomon.c:344 lib/reed_solomon/reed_solomon.c:378
#: lib/reed_solomon/reed_solomon.c:397
msgid "``struct rs_control *rsc``"
msgstr ""

#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:318
#: lib/reed_solomon/reed_solomon.c:339 lib/reed_solomon/reed_solomon.c:373
#: lib/reed_solomon/reed_solomon.c:392
msgid "the rs control structure"
msgstr ""

#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:320
#: lib/reed_solomon/reed_solomon.c:341
msgid "``uint8_t *data``"
msgstr ""

#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:319
#: lib/reed_solomon/reed_solomon.c:340 lib/reed_solomon/reed_solomon.c:374
#: lib/reed_solomon/reed_solomon.c:393
msgid "data field of a given type"
msgstr ""

#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:321
#: lib/reed_solomon/reed_solomon.c:343 lib/reed_solomon/reed_solomon.c:376
#: lib/reed_solomon/reed_solomon.c:396
msgid "``int len``"
msgstr ""

#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:320
#: lib/reed_solomon/reed_solomon.c:342 lib/reed_solomon/reed_solomon.c:375
#: lib/reed_solomon/reed_solomon.c:395
msgid "data length"
msgstr ""

#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:322
#: lib/reed_solomon/reed_solomon.c:342 lib/reed_solomon/reed_solomon.c:377
#: lib/reed_solomon/reed_solomon.c:395
msgid "``uint16_t *par``"
msgstr ""

#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:321
#: lib/reed_solomon/reed_solomon.c:376
msgid "parity data, must be initialized by caller (usually all 0)"
msgstr ""

#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:323
#: lib/reed_solomon/reed_solomon.c:348 lib/reed_solomon/reed_solomon.c:378
#: lib/reed_solomon/reed_solomon.c:401
msgid "``uint16_t invmsk``"
msgstr ""

#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:322
msgid "invert data mask (will be xored on data)"
msgstr ""

#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:323
msgid ""
"The parity uses a uint16_t data type to enable symbol size > 8. The calling "
"code must take care of encoding of the syndrome result for storage itself."
msgstr ""

#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:338
msgid "Decode codeword (8bit data width)"
msgstr ""

#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:341
#: lib/reed_solomon/reed_solomon.c:394
msgid "received parity data field"
msgstr ""

#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:344
#: lib/reed_solomon/reed_solomon.c:397
msgid "``uint16_t *s``"
msgstr ""

#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:343
#: lib/reed_solomon/reed_solomon.c:396
msgid ""
"syndrome data field, must be in index form (if NULL, syndrome is calculated)"
msgstr ""

#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:346
#: lib/reed_solomon/reed_solomon.c:399
msgid "``int no_eras``"
msgstr ""

#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:345
#: lib/reed_solomon/reed_solomon.c:398
msgid "number of erasures"
msgstr ""

#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:347
#: lib/reed_solomon/reed_solomon.c:400
msgid "``int *eras_pos``"
msgstr ""

#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:346
#: lib/reed_solomon/reed_solomon.c:399
msgid "position of erasures, can be NULL"
msgstr ""

#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:347
#: lib/reed_solomon/reed_solomon.c:377 lib/reed_solomon/reed_solomon.c:400
msgid "invert data mask (will be xored on data, not on parity!)"
msgstr ""

#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:349
#: lib/reed_solomon/reed_solomon.c:402
msgid "``uint16_t *corr``"
msgstr ""

#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:348
#: lib/reed_solomon/reed_solomon.c:401
msgid "buffer to store correction bitmask on eras_pos"
msgstr ""

#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:349
msgid ""
"The syndrome and parity uses a uint16_t data type to enable symbol size > 8. "
"The calling code must take care of decoding of the syndrome result and the "
"received parity before calling this code."
msgstr ""

#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:353
#: lib/reed_solomon/reed_solomon.c:404
msgid "**Note**"
msgstr ""

#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:354
msgid "The rs_control struct **rsc** contains buffers which are used for"
msgstr ""

#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:355
#: lib/reed_solomon/reed_solomon.c:406
msgid ""
"decoding, so the caller has to ensure that decoder invocations are "
"serialized."
msgstr ""

#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:358
#: lib/reed_solomon/reed_solomon.c:409
msgid ""
"Returns the number of corrected symbols or -EBADMSG for uncorrectable "
"errors. The count includes errors in the parity."
msgstr ""

#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:372
msgid "Calculate the parity for data values (16bit data width)"
msgstr ""

#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:375
#: lib/reed_solomon/reed_solomon.c:394
msgid "``uint16_t *data``"
msgstr ""

#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:378
#: lib/reed_solomon/reed_solomon.c:402
msgid ""
"Each field in the data array contains up to symbol size bits of valid data."
msgstr ""

#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:391
msgid "Decode codeword (16bit data width)"
msgstr ""

#: ../../../core-api/librs:191: lib/reed_solomon/reed_solomon.c:405
msgid "The rc_control struct **rsc** contains buffers which are used for"
msgstr ""

#: ../../../core-api/librs.rst:195
msgid "Credits"
msgstr ""

#: ../../../core-api/librs.rst:197
msgid "The library code for encoding and decoding was written by Phil Karn."
msgstr ""

#: ../../../core-api/librs.rst:205
msgid "The wrapper functions and interfaces are written by Thomas Gleixner."
msgstr ""

#: ../../../core-api/librs.rst:207
msgid ""
"Many users have provided bugfixes, improvements and helping hands for "
"testing. Thanks a lot."
msgstr ""

#: ../../../core-api/librs.rst:210
msgid "The following people have contributed to this document:"
msgstr ""

#: ../../../core-api/librs.rst:212
msgid "Thomas Gleixner\\ tglx@linutronix.de"
msgstr ""
