# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-30 08:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../bpf/maps.rst:4
msgid "BPF maps"
msgstr ""

#: ../../../bpf/maps.rst:6
msgid ""
"BPF 'maps' provide generic storage of different types for sharing data "
"between kernel and user space. There are several storage types available, "
"including hash, array, bloom filter and radix-tree. Several of the map types "
"exist to support specific BPF helpers that perform actions based on the map "
"contents. The maps are accessed from BPF programs via BPF helpers which are "
"documented in the `man-pages`_ for `bpf-helpers(7)`_."
msgstr ""

#: ../../../bpf/maps.rst:13
msgid ""
"BPF maps are accessed from user space via the ``bpf`` syscall, which "
"provides commands to create maps, lookup elements, update elements and "
"delete elements. More details of the BPF syscall are available in `ebpf-"
"syscall`_ and in the `man-pages`_ for `bpf(2)`_."
msgstr ""

#: ../../../bpf/maps.rst:19
msgid "Map Types"
msgstr ""

#: ../../../bpf/maps.rst:28
msgid "Usage Notes"
msgstr ""

#: ../../../bpf/maps.rst:33
msgid ""
"Use the ``bpf()`` system call to perform the operation specified by "
"``command``. The operation takes parameters provided in ``attr``. The "
"``size`` argument is the size of the ``union bpf_attr`` in ``attr``."
msgstr ""

#: ../../../bpf/maps.rst:37
msgid "**BPF_MAP_CREATE**"
msgstr ""

#: ../../../bpf/maps.rst:39
msgid "Create a map with the desired type and attributes in ``attr``:"
msgstr ""

#: ../../../bpf/maps.rst:55
msgid ""
"Returns a process-local file descriptor on success, or negative error in "
"case of failure. The map can be deleted by calling ``close(fd)``. Maps held "
"by open file descriptors will be deleted automatically when a process exits."
msgstr ""

#: ../../../bpf/maps.rst:59
msgid ""
"Valid characters for ``map_name`` are ``A-Z``, ``a-z``, ``0-9``, ``'_'`` and "
"``'.'``."
msgstr ""

#: ../../../bpf/maps.rst:62
msgid "**BPF_MAP_LOOKUP_ELEM**"
msgstr ""

#: ../../../bpf/maps.rst:64
msgid ""
"Lookup key in a given map using ``attr->map_fd``, ``attr->key``, ``attr-"
">value``. Returns zero and stores found elem into ``attr->value`` on "
"success, or negative error on failure."
msgstr ""

#: ../../../bpf/maps.rst:68
msgid "**BPF_MAP_UPDATE_ELEM**"
msgstr ""

#: ../../../bpf/maps.rst:70
msgid ""
"Create or update key/value pair in a given map using ``attr->map_fd``, "
"``attr->key``, ``attr->value``. Returns zero on success or negative error on "
"failure."
msgstr ""

#: ../../../bpf/maps.rst:73
msgid "**BPF_MAP_DELETE_ELEM**"
msgstr ""

#: ../../../bpf/maps.rst:75
msgid ""
"Find and delete element by key in a given map using ``attr->map_fd``, ``attr-"
">key``. Returns zero on success or negative error on failure."
msgstr ""
