# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../trace/rv/deterministic_automata.rst:2
msgid "Deterministic Automata"
msgstr ""

#: ../../../trace/rv/deterministic_automata.rst:4
msgid ""
"Formally, a deterministic automaton, denoted by G, is defined as a quintuple:"
msgstr ""

#: ../../../trace/rv/deterministic_automata.rst:6
msgid "*G* = { *X*, *E*, *f*, x\\ :subscript:`0`, X\\ :subscript:`m` }"
msgstr ""

#: ../../../trace/rv/deterministic_automata.rst:8
msgid "where:"
msgstr ""

#: ../../../trace/rv/deterministic_automata.rst:10
msgid "*X* is the set of states;"
msgstr ""

#: ../../../trace/rv/deterministic_automata.rst:11
msgid "*E* is the finite set of events;"
msgstr ""

#: ../../../trace/rv/deterministic_automata.rst:12
msgid "x\\ :subscript:`0` is the initial state;"
msgstr ""

#: ../../../trace/rv/deterministic_automata.rst:13
msgid ""
"X\\ :subscript:`m` (subset of *X*) is the set of marked (or final) states."
msgstr ""

#: ../../../trace/rv/deterministic_automata.rst:14
msgid ""
"*f* : *X* x *E* -> *X* $ is the transition function. It defines the state "
"transition in the occurrence of an event from *E* in the state *X*. In the "
"special case of deterministic automata, the occurrence of the event in *E* "
"in a state in *X* has a deterministic next state from *X*."
msgstr ""

#: ../../../trace/rv/deterministic_automata.rst:19
msgid ""
"For example, a given automaton named 'wip' (wakeup in preemptive) can be "
"defined as:"
msgstr ""

#: ../../../trace/rv/deterministic_automata.rst:22
msgid "*X* = { ``preemptive``, ``non_preemptive``}"
msgstr ""

#: ../../../trace/rv/deterministic_automata.rst:23
msgid "*E* = { ``preempt_enable``, ``preempt_disable``, ``sched_waking``}"
msgstr ""

#: ../../../trace/rv/deterministic_automata.rst:24
msgid "x\\ :subscript:`0` = ``preemptive``"
msgstr ""

#: ../../../trace/rv/deterministic_automata.rst:25
msgid "X\\ :subscript:`m` = {``preemptive``}"
msgstr ""

#: ../../../trace/rv/deterministic_automata.rst:26
msgid "*f* ="
msgstr ""

#: ../../../trace/rv/deterministic_automata.rst:27
msgid "*f*\\ (``preemptive``, ``preempt_disable``) = ``non_preemptive``"
msgstr ""

#: ../../../trace/rv/deterministic_automata.rst:28
msgid "*f*\\ (``non_preemptive``, ``sched_waking``) = ``non_preemptive``"
msgstr ""

#: ../../../trace/rv/deterministic_automata.rst:29
msgid "*f*\\ (``non_preemptive``, ``preempt_enable``) = ``preemptive``"
msgstr ""

#: ../../../trace/rv/deterministic_automata.rst:31
msgid ""
"One of the benefits of this formal definition is that it can be presented in "
"multiple formats. For example, using a *graphical representation*, using "
"vertices (nodes) and edges, which is very intuitive for *operating system* "
"practitioners, without any loss."
msgstr ""

#: ../../../trace/rv/deterministic_automata.rst:36
msgid "The previous 'wip' automaton can also be represented as::"
msgstr ""

#: ../../../trace/rv/deterministic_automata.rst:49
msgid "Deterministic Automaton in C"
msgstr ""

#: ../../../trace/rv/deterministic_automata.rst:51
msgid ""
"In the paper \"Efficient formal verification for the Linux kernel\", the "
"authors present a simple way to represent an automaton in C that can be used "
"as regular code in the Linux kernel."
msgstr ""

#: ../../../trace/rv/deterministic_automata.rst:55
msgid ""
"For example, the 'wip' automata can be presented as (augmented with "
"comments)::"
msgstr ""

#: ../../../trace/rv/deterministic_automata.rst:100
msgid ""
"The *transition function* is represented as a matrix of states (lines) and "
"events (columns), and so the function *f* : *X* x *E* -> *X* can be solved "
"in O(1). For example::"
msgstr ""

#: ../../../trace/rv/deterministic_automata.rst:107
msgid "Graphviz .dot format"
msgstr ""

#: ../../../trace/rv/deterministic_automata.rst:109
msgid ""
"The Graphviz open-source tool can produce the graphical representation of an "
"automaton using the (textual) DOT language as the source code. The DOT "
"format is widely used and can be converted to many other formats."
msgstr ""

#: ../../../trace/rv/deterministic_automata.rst:113
msgid "For example, this is the 'wip' model in DOT::"
msgstr ""

#: ../../../trace/rv/deterministic_automata.rst:132
msgid ""
"This DOT format can be transformed into a bitmap or vectorial image using "
"the dot utility, or into an ASCII art using graph-easy. For instance::"
msgstr ""

#: ../../../trace/rv/deterministic_automata.rst:140
msgid "dot2c"
msgstr ""

#: ../../../trace/rv/deterministic_automata.rst:142
msgid ""
"dot2c is a utility that can parse a .dot file containing an automaton as in "
"the example above and automatically convert it to the C representation "
"presented in [3]."
msgstr ""

#: ../../../trace/rv/deterministic_automata.rst:146
msgid ""
"For example, having the previous 'wip' model into a file named 'wip.dot', "
"the following command will transform the .dot file into the C representation "
"(previously shown) in the 'wip.h' file::"
msgstr ""

#: ../../../trace/rv/deterministic_automata.rst:152
msgid ""
"The 'wip.h' content is the code sample in section 'Deterministic Automaton "
"in C'."
msgstr ""

#: ../../../trace/rv/deterministic_automata.rst:156
msgid "Remarks"
msgstr ""

#: ../../../trace/rv/deterministic_automata.rst:158
msgid ""
"The automata formalism allows modeling discrete event systems (DES) in "
"multiple formats, suitable for different applications/users."
msgstr ""

#: ../../../trace/rv/deterministic_automata.rst:161
msgid ""
"For example, the formal description using set theory is better suitable for "
"automata operations, while the graphical format for human interpretation; "
"and computer languages for machine execution."
msgstr ""

#: ../../../trace/rv/deterministic_automata.rst:166
msgid "References"
msgstr ""

#: ../../../trace/rv/deterministic_automata.rst:168
msgid "Many textbooks cover automata formalism. For a brief introduction see::"
msgstr ""

#: ../../../trace/rv/deterministic_automata.rst:173
msgid ""
"For a detailed description, including operations, and application on "
"Discrete Event Systems (DES), see::"
msgstr ""

#: ../../../trace/rv/deterministic_automata.rst:179
msgid "For the C representation in kernel, see::"
msgstr ""
