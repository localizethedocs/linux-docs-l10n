# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../trace/rv/runtime-verification.rst:3
msgid "Runtime Verification"
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:5
msgid ""
"Runtime Verification (RV) is a lightweight (yet rigorous) method that "
"complements classical exhaustive verification techniques (such as *model "
"checking* and *theorem proving*) with a more practical approach for complex "
"systems."
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:10
msgid ""
"Instead of relying on a fine-grained model of a system (e.g., a re-"
"implementation at instruction level), RV works by analyzing the trace of the "
"system's actual execution, comparing it against a formal specification of "
"the system behavior."
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:15
msgid ""
"The main advantage is that RV can give precise information on the runtime "
"behavior of the monitored system, without the pitfalls of developing models "
"that require a re-implementation of the entire system in a modeling "
"language. Moreover, given an efficient monitoring method, it is possible to "
"execute an *online* verification of a system, enabling the *reaction* for "
"unexpected events, avoiding, for example, the propagation of a failure on "
"safety-critical systems."
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:24
msgid "Runtime Monitors and Reactors"
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:26
msgid ""
"A monitor is the central part of the runtime verification of a system. The "
"monitor stands in between the formal specification of the desired (or "
"undesired) behavior, and the trace of the actual system."
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:30
msgid ""
"In Linux terms, the runtime verification monitors are encapsulated inside "
"the *RV monitor* abstraction. A *RV monitor* includes a reference model of "
"the system, a set of instances of the monitor (per-cpu monitor, per-task "
"monitor, and so on), and the helper functions that glue the monitor to the "
"system via trace, as depicted below::"
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:54
msgid ""
"In addition to the verification and monitoring of the system, a monitor can "
"react to an unexpected event. The forms of reaction can vary from logging "
"the event occurrence to the enforcement of the correct behavior to the "
"extreme action of taking a system down to avoid the propagation of a failure."
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:59
msgid ""
"In Linux terms, a *reactor* is an reaction method available for *RV "
"monitors*. By default, all monitors should provide a trace output of their "
"actions, which is already a reaction. In addition, other reactions will be "
"available so the user can enable them as needed."
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:64
msgid ""
"For further information about the principles of runtime verification and RV "
"applied to Linux:"
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:67
msgid ""
"Bartocci, Ezio, et al. *Introduction to runtime verification.* In: Lectures "
"on Runtime Verification. Springer, Cham, 2018. p. 1-33."
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:70
msgid ""
"Falcone, Ylies, et al. *A taxonomy for classifying runtime verification "
"tools.* In: International Conference on Runtime Verification. Springer, "
"Cham, 2018. p. 241-262."
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:74
msgid ""
"De Oliveira, Daniel Bristot. *Automata-based formal analysis and "
"verification of the real-time Linux kernel.* Ph.D. Thesis, 2020."
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:78
msgid "Online RV monitors"
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:80
msgid ""
"Monitors can be classified as *offline* and *online* monitors. *Offline* "
"monitor process the traces generated by a system after the events, generally "
"by reading the trace execution from a permanent storage system. *Online* "
"monitors process the trace during the execution of the system. Online "
"monitors are said to be *synchronous* if the processing of an event is "
"attached to the system execution, blocking the system during the event "
"monitoring. On the other hand, an *asynchronous* monitor has its execution "
"detached from the system. Each type of monitor has a set of advantages. For "
"example, *offline* monitors can be executed on different machines but "
"require operations to save the log to a file. In contrast, *synchronous "
"online* method can react at the exact moment a violation occurs."
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:92
msgid ""
"Another important aspect regarding monitors is the overhead associated with "
"the event analysis. If the system generates events at a frequency higher "
"than the monitor's ability to process them in the same system, only the "
"*offline* methods are viable. On the other hand, if the tracing of the "
"events incurs on higher overhead than the simple handling of an event by a "
"monitor, then a *synchronous online* monitors will incur on lower overhead."
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:99
msgid "Indeed, the research presented in:"
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:101
msgid ""
"De Oliveira, Daniel Bristot; Cucinotta, Tommaso; De Oliveira, Romulo Silva. "
"*Efficient formal verification for the Linux kernel.* In: International "
"Conference on Software Engineering and Formal Methods. Springer, Cham, 2019. "
"p. 315-332."
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:106
msgid ""
"Shows that for Deterministic Automata models, the synchronous processing of "
"events in-kernel causes lower overhead than saving the same events to the "
"trace buffer, not even considering collecting the trace for user-space "
"analysis. This motivated the development of an in-kernel interface for "
"online monitors."
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:111
msgid ""
"For further information about modeling of Linux kernel behavior using "
"automata, see:"
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:114
msgid ""
"De Oliveira, Daniel B.; De Oliveira, Romulo S.; Cucinotta, Tommaso. *A "
"thread synchronization model for the PREEMPT_RT Linux kernel.* Journal of "
"Systems Architecture, 2020, 107: 101729."
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:119
msgid "The user interface"
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:121
msgid ""
"The user interface resembles the tracing interface (on purpose). It is "
"currently at \"/sys/kernel/tracing/rv/\"."
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:124
msgid "The following files/folders are currently available:"
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:126
msgid "**available_monitors**"
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:128
msgid "Reading list the available monitors, one per line"
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:130
#: ../../../trace/rv/runtime-verification.rst:140
#: ../../../trace/rv/runtime-verification.rst:154
#: ../../../trace/rv/runtime-verification.rst:195
#: ../../../trace/rv/runtime-verification.rst:221
msgid "For example::"
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:136
msgid "**available_reactors**"
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:138
msgid "Reading shows the available reactors, one per line."
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:147
msgid "**enabled_monitors**:"
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:149
msgid "Reading lists the enabled monitors, one per line"
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:150
msgid "Writing to it enables a given monitor"
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:151
msgid "Writing a monitor name with a '!' prefix disables it"
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:152
msgid "Truncating the file disables all enabled monitors"
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:169
msgid "Note that it is possible to enable more than one monitor concurrently."
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:171
msgid "**monitoring_on**"
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:173
msgid ""
"This is an on/off general switcher for monitoring. It resembles the "
"\"tracing_on\" switcher in the trace interface."
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:176
msgid "Writing \"0\" stops the monitoring"
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:177
msgid "Writing \"1\" continues the monitoring"
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:178
msgid "Reading returns the current status of the monitoring"
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:180
msgid ""
"Note that it does not disable enabled monitors but stop the per-entity "
"monitors monitoring the events received from the system."
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:183
msgid "**reacting_on**"
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:185
msgid "Writing \"0\" prevents reactions for happening"
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:186
msgid "Writing \"1\" enable reactions"
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:187
msgid "Reading returns the current status of the reaction"
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:189
msgid "**monitors/**"
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:191
msgid ""
"Each monitor will have its own directory inside \"monitors/\". There the "
"monitor-specific files will be presented. The \"monitors/\" directory "
"resembles the \"events\" directory on tracefs."
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:205
msgid "**monitors/MONITOR/desc**"
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:207
msgid "Reading shows a description of the monitor *MONITOR*"
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:209
msgid "**monitors/MONITOR/enable**"
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:211
msgid "Writing \"0\" disables the *MONITOR*"
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:212
msgid "Writing \"1\" enables the *MONITOR*"
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:213
msgid "Reading return the current status of the *MONITOR*"
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:215
msgid "**monitors/MONITOR/reactors**"
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:217
msgid ""
"List available reactors, with the select reaction for the given *MONITOR* "
"inside \"[]\". The default one is the nop (no operation) reactor."
msgstr ""

#: ../../../trace/rv/runtime-verification.rst:219
msgid "Writing the name of a reactor enables it to the given MONITOR."
msgstr ""
