# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../userspace-api/gpio/gpio-lineevent-data-read.rst:7
msgid "GPIO_LINEEVENT_DATA_READ"
msgstr ""

#: ../../../userspace-api/gpio/gpio-lineevent-data-read.rst:10
msgid ""
"This ioctl is part of chardev_v1.rst and is obsoleted by gpio-v2-line-event-"
"read.rst."
msgstr ""

#: ../../../userspace-api/gpio/gpio-lineevent-data-read.rst:14
msgid "Name"
msgstr ""

#: ../../../userspace-api/gpio/gpio-lineevent-data-read.rst:16
msgid ""
"GPIO_LINEEVENT_DATA_READ - Read edge detection events from a line event."
msgstr ""

#: ../../../userspace-api/gpio/gpio-lineevent-data-read.rst:19
msgid "Synopsis"
msgstr ""

#: ../../../userspace-api/gpio/gpio-lineevent-data-read.rst:21
msgid "``int read(int event_fd, void *buf, size_t count)``"
msgstr ""

#: ../../../userspace-api/gpio/gpio-lineevent-data-read.rst:24
msgid "Arguments"
msgstr ""

#: ../../../userspace-api/gpio/gpio-lineevent-data-read.rst:26
msgid "``event_fd``"
msgstr ""

#: ../../../userspace-api/gpio/gpio-lineevent-data-read.rst:27
msgid ""
"The file descriptor of the GPIO character device, as returned in the :c:type:"
"`request.fd<gpioevent_request>` by gpio-get-lineevent-ioctl.rst."
msgstr ""

#: ../../../userspace-api/gpio/gpio-lineevent-data-read.rst:30
msgid "``buf``"
msgstr ""

#: ../../../userspace-api/gpio/gpio-lineevent-data-read.rst:31
msgid "The buffer to contain the :c:type:`events<gpioevent_data>`."
msgstr ""

#: ../../../userspace-api/gpio/gpio-lineevent-data-read.rst:33
msgid "``count``"
msgstr ""

#: ../../../userspace-api/gpio/gpio-lineevent-data-read.rst:34
msgid ""
"The number of bytes available in ``buf``, which must be at least the size of "
"a :c:type:`gpioevent_data`."
msgstr ""

#: ../../../userspace-api/gpio/gpio-lineevent-data-read.rst:38
msgid "Description"
msgstr ""

#: ../../../userspace-api/gpio/gpio-lineevent-data-read.rst:40
msgid "Read edge detection events for a line from a line event."
msgstr ""

#: ../../../userspace-api/gpio/gpio-lineevent-data-read.rst:42
msgid ""
"Edge detection must be enabled for the input line using either "
"``GPIOEVENT_REQUEST_RISING_EDGE`` or ``GPIOEVENT_REQUEST_FALLING_EDGE``, or "
"both. Edge events are then generated whenever edge interrupts are detected "
"on the input line."
msgstr ""

#: ../../../userspace-api/gpio/gpio-lineevent-data-read.rst:47
msgid ""
"Edges are defined in terms of changes to the logical line value, so an "
"inactive to active transition is a rising edge.  If "
"``GPIOHANDLE_REQUEST_ACTIVE_LOW`` is set then logical polarity is the "
"opposite of physical polarity, and ``GPIOEVENT_REQUEST_RISING_EDGE`` then "
"corresponds to a falling physical edge."
msgstr ""

#: ../../../userspace-api/gpio/gpio-lineevent-data-read.rst:52
msgid ""
"The kernel captures and timestamps edge events as close as possible to their "
"occurrence and stores them in a buffer from where they can be read by "
"userspace at its convenience using `read()`."
msgstr ""

#: ../../../userspace-api/gpio/gpio-lineevent-data-read.rst:56
msgid ""
"The source of the clock for :c:type:`event.timestamp<gpioevent_data>` is "
"``CLOCK_MONOTONIC``, except for kernels earlier than Linux 5.7 when it was "
"``CLOCK_REALTIME``.  There is no indication in the :c:type:`gpioevent_data` "
"as to which clock source is used, it must be determined from either the "
"kernel version or sanity checks on the timestamp itself."
msgstr ""

#: ../../../userspace-api/gpio/gpio-lineevent-data-read.rst:62
msgid ""
"Events read from the buffer are always in the same order that they were "
"detected by the kernel."
msgstr ""

#: ../../../userspace-api/gpio/gpio-lineevent-data-read.rst:65
msgid "The size of the kernel event buffer is fixed at 16 events."
msgstr ""

#: ../../../userspace-api/gpio/gpio-lineevent-data-read.rst:67
msgid ""
"The buffer may overflow if bursts of events occur quicker than they are read "
"by userspace. If an overflow occurs then the most recent event is discarded. "
"Overflow cannot be detected from userspace."
msgstr ""

#: ../../../userspace-api/gpio/gpio-lineevent-data-read.rst:71
msgid ""
"To minimize the number of calls required to copy events from the kernel to "
"userspace, `read()` supports copying multiple events. The number of events "
"copied is the lower of the number available in the kernel buffer and the "
"number that will fit in the userspace buffer (``buf``)."
msgstr ""

#: ../../../userspace-api/gpio/gpio-lineevent-data-read.rst:76
msgid ""
"The `read()` will block if no event is available and the ``event_fd`` has "
"not been set **O_NONBLOCK**."
msgstr ""

#: ../../../userspace-api/gpio/gpio-lineevent-data-read.rst:79
msgid ""
"The presence of an event can be tested for by checking that the ``event_fd`` "
"is readable using `poll()` or an equivalent."
msgstr ""

#: ../../../userspace-api/gpio/gpio-lineevent-data-read.rst:83
msgid "Return Value"
msgstr ""

#: ../../../userspace-api/gpio/gpio-lineevent-data-read.rst:85
msgid ""
"On success the number of bytes read, which will be a multiple of the size of "
"a :c:type:`gpio_lineevent_data` event."
msgstr ""

#: ../../../userspace-api/gpio/gpio-lineevent-data-read.rst:88
msgid ""
"On error -1 and the ``errno`` variable is set appropriately. Common error "
"codes are described in error-codes.rst."
msgstr ""
