# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../userspace-api/media/mediactl/media-ioc-request-alloc.rst:8
msgid "ioctl MEDIA_IOC_REQUEST_ALLOC"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-request-alloc.rst:11
msgid "Name"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-request-alloc.rst:13
msgid "MEDIA_IOC_REQUEST_ALLOC - Allocate a request"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-request-alloc.rst:16
msgid "Synopsis"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-request-alloc.rst:20
msgid "``int ioctl(int fd, MEDIA_IOC_REQUEST_ALLOC, int *argp)``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-request-alloc.rst:23
msgid "Arguments"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-request-alloc.rst:25
msgid "``fd``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-request-alloc.rst:26
msgid "File descriptor returned by :c:func:`open()`."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-request-alloc.rst:28
msgid "``argp``"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-request-alloc.rst:29
msgid "Pointer to an integer."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-request-alloc.rst:32
msgid "Description"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-request-alloc.rst:34
msgid ""
"If the media device supports :ref:`requests <media-request-api>`, then this "
"ioctl can be used to allocate a request. If it is not supported, then "
"``errno`` is set to ``ENOTTY``. A request is accessed through a file "
"descriptor that is returned in ``*argp``."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-request-alloc.rst:39
msgid ""
"If the request was successfully allocated, then the request file descriptor "
"can be passed to the :ref:`VIDIOC_QBUF <VIDIOC_QBUF>`, :ref:"
"`VIDIOC_G_EXT_CTRLS <VIDIOC_G_EXT_CTRLS>`, :ref:`VIDIOC_S_EXT_CTRLS "
"<VIDIOC_G_EXT_CTRLS>` and :ref:`VIDIOC_TRY_EXT_CTRLS <VIDIOC_G_EXT_CTRLS>` "
"ioctls."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-request-alloc.rst:45
msgid ""
"In addition, the request can be queued by calling :ref:"
"`MEDIA_REQUEST_IOC_QUEUE` and re-initialized by calling :ref:"
"`MEDIA_REQUEST_IOC_REINIT`."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-request-alloc.rst:49
msgid ""
"Finally, the file descriptor can be :ref:`polled <request-func-poll>` to "
"wait for the request to complete."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-request-alloc.rst:52
msgid ""
"The request will remain allocated until all the file descriptors associated "
"with it are closed by :c:func:`close()` and the driver no longer uses the "
"request internally. See also :ref:`here <media-request-life-time>` for more "
"information."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-request-alloc.rst:58
msgid "Return Value"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-request-alloc.rst:60
msgid ""
"On success 0 is returned, on error -1 and the ``errno`` variable is set "
"appropriately. The generic error codes are described at the :ref:`Generic "
"Error Codes <gen-errors>` chapter."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-request-alloc.rst:64
msgid "ENOTTY"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-ioc-request-alloc.rst:65
msgid "The driver has no support for requests."
msgstr ""
