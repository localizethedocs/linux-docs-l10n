# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../userspace-api/media/dvb/dmx-expbuf.rst:8
msgid "ioctl DMX_EXPBUF"
msgstr ""

#: ../../../userspace-api/media/dvb/dmx-expbuf.rst:11
msgid "Name"
msgstr ""

#: ../../../userspace-api/media/dvb/dmx-expbuf.rst:13
msgid "DMX_EXPBUF - Export a buffer as a DMABUF file descriptor."
msgstr ""

#: ../../../userspace-api/media/dvb/dmx-expbuf.rst:15
msgid "this API is still experimental"
msgstr ""

#: ../../../userspace-api/media/dvb/dmx-expbuf.rst:18
msgid "Synopsis"
msgstr ""

#: ../../../userspace-api/media/dvb/dmx-expbuf.rst:22
msgid "``int ioctl(int fd, DMX_EXPBUF, struct dmx_exportbuffer *argp)``"
msgstr ""

#: ../../../userspace-api/media/dvb/dmx-expbuf.rst:25
msgid "Arguments"
msgstr ""

#: ../../../userspace-api/media/dvb/dmx-expbuf.rst:27
msgid "``fd``"
msgstr ""

#: ../../../userspace-api/media/dvb/dmx-expbuf.rst:28
msgid "File descriptor returned by :c:func:`open()`."
msgstr ""

#: ../../../userspace-api/media/dvb/dmx-expbuf.rst:30
msgid "``argp``"
msgstr ""

#: ../../../userspace-api/media/dvb/dmx-expbuf.rst:31
msgid "Pointer to struct :c:type:`dmx_exportbuffer`."
msgstr ""

#: ../../../userspace-api/media/dvb/dmx-expbuf.rst:34
msgid "Description"
msgstr ""

#: ../../../userspace-api/media/dvb/dmx-expbuf.rst:36
msgid ""
"This ioctl is an extension to the memory mapping I/O method. It can be used "
"to export a buffer as a DMABUF file at any time after buffers have been "
"allocated with the :ref:`DMX_REQBUFS` ioctl."
msgstr ""

#: ../../../userspace-api/media/dvb/dmx-expbuf.rst:40
msgid ""
"To export a buffer, applications fill struct :c:type:`dmx_exportbuffer`. "
"Applications must set the ``index`` field. Valid index numbers range from "
"zero to the number of buffers allocated with :ref:`DMX_REQBUFS` (struct :c:"
"type:`dmx_requestbuffers` ``count``) minus one. Additional flags may be "
"posted in the ``flags`` field. Refer to a manual for open() for details. "
"Currently only O_CLOEXEC, O_RDONLY, O_WRONLY, and O_RDWR are supported. All "
"other fields must be set to zero. In the case of multi-planar API, every "
"plane is exported separately using multiple :ref:`DMX_EXPBUF` calls."
msgstr ""

#: ../../../userspace-api/media/dvb/dmx-expbuf.rst:51
msgid ""
"After calling :ref:`DMX_EXPBUF` the ``fd`` field will be set by a driver, on "
"success. This is a DMABUF file descriptor. The application may pass it to "
"other DMABUF-aware devices. It is recommended to close a DMABUF file when it "
"is no longer used to allow the associated memory to be reclaimed."
msgstr ""

#: ../../../userspace-api/media/dvb/dmx-expbuf.rst:57
msgid "Examples"
msgstr ""

#: ../../../userspace-api/media/dvb/dmx-expbuf.rst:79
msgid "Return Value"
msgstr ""

#: ../../../userspace-api/media/dvb/dmx-expbuf.rst:81
msgid ""
"On success 0 is returned, on error -1 and the ``errno`` variable is set "
"appropriately. The generic error codes are described at the :ref:`Generic "
"Error Codes <gen-errors>` chapter."
msgstr ""

#: ../../../userspace-api/media/dvb/dmx-expbuf.rst:85
msgid "EINVAL"
msgstr ""

#: ../../../userspace-api/media/dvb/dmx-expbuf.rst:86
msgid ""
"A queue is not in MMAP mode or DMABUF exporting is not supported or "
"``flags`` or ``index`` fields are invalid."
msgstr ""
