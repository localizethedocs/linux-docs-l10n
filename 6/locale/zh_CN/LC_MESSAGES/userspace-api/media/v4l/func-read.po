# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../userspace-api/media/v4l/func-read.rst:8
msgid "V4L2 read()"
msgstr ""

#: ../../../userspace-api/media/v4l/func-read.rst:11
msgid "Name"
msgstr ""

#: ../../../userspace-api/media/v4l/func-read.rst:13
msgid "v4l2-read - Read from a V4L2 device"
msgstr ""

#: ../../../userspace-api/media/v4l/func-read.rst:16
msgid "Synopsis"
msgstr ""

#: ../../../userspace-api/media/v4l/func-read.rst:25
msgid "Arguments"
msgstr ""

#: ../../../userspace-api/media/v4l/func-read.rst:27
msgid "``fd``"
msgstr ""

#: ../../../userspace-api/media/v4l/func-read.rst:28
msgid "File descriptor returned by :c:func:`open()`."
msgstr ""

#: ../../../userspace-api/media/v4l/func-read.rst:30
msgid "``buf``"
msgstr ""

#: ../../../userspace-api/media/v4l/func-read.rst:31
msgid "Buffer to be filled"
msgstr ""

#: ../../../userspace-api/media/v4l/func-read.rst:33
msgid "``count``"
msgstr ""

#: ../../../userspace-api/media/v4l/func-read.rst:34
msgid "Max number of bytes to read"
msgstr ""

#: ../../../userspace-api/media/v4l/func-read.rst:37
msgid "Description"
msgstr ""

#: ../../../userspace-api/media/v4l/func-read.rst:39
msgid ""
":c:func:`read()` attempts to read up to ``count`` bytes from file descriptor "
"``fd`` into the buffer starting at ``buf``. The layout of the data in the "
"buffer is discussed in the respective device interface section, see ##. If "
"``count`` is zero, :c:func:`read()` returns zero and has no other results. "
"If ``count`` is greater than ``SSIZE_MAX``, the result is unspecified. "
"Regardless of the ``count`` value each :c:func:`read()` call will provide at "
"most one frame (two fields) worth of data."
msgstr ""

#: ../../../userspace-api/media/v4l/func-read.rst:48
msgid ""
"By default :c:func:`read()` blocks until data becomes available. When the "
"``O_NONBLOCK`` flag was given to the :c:func:`open()` function it returns "
"immediately with an ``EAGAIN`` error code when no data is available. The :c:"
"func:`select()` or :c:func:`poll()` functions can always be used to suspend "
"execution until data becomes available. All drivers supporting the :c:func:"
"`read()` function must also support :c:func:`select()` and :c:func:`poll()`."
msgstr ""

#: ../../../userspace-api/media/v4l/func-read.rst:57
msgid ""
"Drivers can implement read functionality in different ways, using a single "
"or multiple buffers and discarding the oldest or newest frames once the "
"internal buffers are filled."
msgstr ""

#: ../../../userspace-api/media/v4l/func-read.rst:61
msgid ""
":c:func:`read()` never returns a \"snapshot\" of a buffer being filled. "
"Using a single buffer the driver will stop capturing when the application "
"starts reading the buffer until the read is finished. Thus only the period "
"of the vertical blanking interval is available for reading, or the capture "
"rate must fall below the nominal frame rate of the video standard."
msgstr ""

#: ../../../userspace-api/media/v4l/func-read.rst:68
msgid ""
"The behavior of :c:func:`read()` when called during the active picture "
"period or the vertical blanking separating the top and bottom field depends "
"on the discarding policy. A driver discarding the oldest frames keeps "
"capturing into an internal buffer, continuously overwriting the previously, "
"not read frame, and returns the frame being received at the time of the :c:"
"func:`read()` call as soon as it is complete."
msgstr ""

#: ../../../userspace-api/media/v4l/func-read.rst:75
msgid ""
"A driver discarding the newest frames stops capturing until the next :c:func:"
"`read()` call. The frame being received at :c:func:`read()` time is "
"discarded, returning the following frame instead. Again this implies a "
"reduction of the capture rate to one half or less of the nominal frame rate. "
"An example of this model is the video read mode of the bttv driver, "
"initiating a DMA to user memory when :c:func:`read()` is called and "
"returning when the DMA finished."
msgstr ""

#: ../../../userspace-api/media/v4l/func-read.rst:83
msgid ""
"In the multiple buffer model drivers maintain a ring of internal buffers, "
"automatically advancing to the next free buffer. This allows continuous "
"capturing when the application can empty the buffers fast enough. Again, the "
"behavior when the driver runs out of free buffers depends on the discarding "
"policy."
msgstr ""

#: ../../../userspace-api/media/v4l/func-read.rst:89
msgid ""
"Applications can get and set the number of buffers used internally by the "
"driver with the :ref:`VIDIOC_G_PARM <VIDIOC_G_PARM>` and :ref:`VIDIOC_S_PARM "
"<VIDIOC_G_PARM>` ioctls. They are optional, however. The discarding policy "
"is not reported and cannot be changed. For minimum requirements see :ref:"
"`devices`."
msgstr ""

#: ../../../userspace-api/media/v4l/func-read.rst:96
msgid "Return Value"
msgstr ""

#: ../../../userspace-api/media/v4l/func-read.rst:98
msgid ""
"On success, the number of bytes read is returned. It is not an error if this "
"number is smaller than the number of bytes requested, or the amount of data "
"required for one frame. This may happen for example because :c:func:`read()` "
"was interrupted by a signal. On error, -1 is returned, and the ``errno`` "
"variable is set appropriately. In this case the next read will start at the "
"beginning of a new frame. Possible error codes are:"
msgstr ""

#: ../../../userspace-api/media/v4l/func-read.rst:106
msgid "EAGAIN"
msgstr ""

#: ../../../userspace-api/media/v4l/func-read.rst:107
msgid ""
"Non-blocking I/O has been selected using O_NONBLOCK and no data was "
"immediately available for reading."
msgstr ""

#: ../../../userspace-api/media/v4l/func-read.rst:110
msgid "EBADF"
msgstr ""

#: ../../../userspace-api/media/v4l/func-read.rst:111
msgid ""
"``fd`` is not a valid file descriptor or is not open for reading, or the "
"process already has the maximum number of files open."
msgstr ""

#: ../../../userspace-api/media/v4l/func-read.rst:114
msgid "EBUSY"
msgstr ""

#: ../../../userspace-api/media/v4l/func-read.rst:115
msgid ""
"The driver does not support multiple read streams and the device is already "
"in use."
msgstr ""

#: ../../../userspace-api/media/v4l/func-read.rst:118
msgid "EFAULT"
msgstr ""

#: ../../../userspace-api/media/v4l/func-read.rst:119
msgid "``buf`` references an inaccessible memory area."
msgstr ""

#: ../../../userspace-api/media/v4l/func-read.rst:121
msgid "EINTR"
msgstr ""

#: ../../../userspace-api/media/v4l/func-read.rst:122
msgid "The call was interrupted by a signal before any data was read."
msgstr ""

#: ../../../userspace-api/media/v4l/func-read.rst:124
msgid "EIO"
msgstr ""

#: ../../../userspace-api/media/v4l/func-read.rst:125
msgid ""
"I/O error. This indicates some hardware problem or a failure to communicate "
"with a remote device (USB camera etc.)."
msgstr ""

#: ../../../userspace-api/media/v4l/func-read.rst:128
msgid "EINVAL"
msgstr ""

#: ../../../userspace-api/media/v4l/func-read.rst:129
msgid ""
"The :c:func:`read()` function is not supported by this driver, not on this "
"device, or generally not on this type of device."
msgstr ""
