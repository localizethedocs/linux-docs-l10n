# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../userspace-api/media/v4l/vidioc-querybuf.rst:8
msgid "ioctl VIDIOC_QUERYBUF"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-querybuf.rst:11
msgid "Name"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-querybuf.rst:13
msgid "VIDIOC_QUERYBUF - Query the status of a buffer"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-querybuf.rst:16
msgid "Synopsis"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-querybuf.rst:20
msgid "``int ioctl(int fd, VIDIOC_QUERYBUF, struct v4l2_buffer *argp)``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-querybuf.rst:23
msgid "Arguments"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-querybuf.rst:25
msgid "``fd``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-querybuf.rst:26
msgid "File descriptor returned by :c:func:`open()`."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-querybuf.rst:28
msgid "``argp``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-querybuf.rst:29
msgid "Pointer to struct :c:type:`v4l2_buffer`."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-querybuf.rst:32
msgid "Description"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-querybuf.rst:34
msgid ""
"This ioctl is part of the :ref:`streaming <mmap>` I/O method. It can be used "
"to query the status of a buffer at any time after buffers have been "
"allocated with the :ref:`VIDIOC_REQBUFS` ioctl."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-querybuf.rst:38
msgid ""
"Applications set the ``type`` field of a struct :c:type:`v4l2_buffer` to the "
"same buffer type as was previously used with struct :c:type:`v4l2_format` "
"``type`` and struct :c:type:`v4l2_requestbuffers` ``type``, and the "
"``index`` field. Valid index numbers range from zero to the number of "
"buffers allocated with :ref:`VIDIOC_REQBUFS` (struct :c:type:"
"`v4l2_requestbuffers` ``count``) minus one. The ``reserved`` and "
"``reserved2`` fields must be set to 0. When using the :ref:`multi-planar API "
"<planar-apis>`, the ``m.planes`` field must contain a userspace pointer to "
"an array of struct :c:type:`v4l2_plane` and the ``length`` field has to be "
"set to the number of elements in that array. After calling :ref:"
"`VIDIOC_QUERYBUF` with a pointer to this structure drivers return an error "
"code or fill the rest of the structure."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-querybuf.rst:54
msgid ""
"In the ``flags`` field the ``V4L2_BUF_FLAG_MAPPED``, "
"``V4L2_BUF_FLAG_PREPARED``, ``V4L2_BUF_FLAG_QUEUED`` and "
"``V4L2_BUF_FLAG_DONE`` flags will be valid. The ``memory`` field will be set "
"to the current I/O method. For the single-planar API, the ``m.offset`` "
"contains the offset of the buffer from the start of the device memory, the "
"``length`` field its size. For the multi-planar API, fields ``m.mem_offset`` "
"and ``length`` in the ``m.planes`` array elements will be used instead and "
"the ``length`` field of struct :c:type:`v4l2_buffer` is set to the number of "
"filled-in array elements. The driver may or may not set the remaining fields "
"and flags, they are meaningless in this context."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-querybuf.rst:66
msgid ""
"The struct :c:type:`v4l2_buffer` structure is specified in :ref:`buffer`."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-querybuf.rst:70
msgid "Return Value"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-querybuf.rst:72
msgid ""
"On success 0 is returned, on error -1 and the ``errno`` variable is set "
"appropriately. The generic error codes are described at the :ref:`Generic "
"Error Codes <gen-errors>` chapter."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-querybuf.rst:76
msgid "EINVAL"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-querybuf.rst:77
msgid ""
"The buffer ``type`` is not supported, or the ``index`` is out of bounds."
msgstr ""
