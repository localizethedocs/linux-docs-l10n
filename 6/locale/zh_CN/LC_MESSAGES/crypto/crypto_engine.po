# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../crypto/crypto_engine.rst:4
msgid "Crypto Engine"
msgstr ""

#: ../../../crypto/crypto_engine.rst:7
msgid "Overview"
msgstr ""

#: ../../../crypto/crypto_engine.rst:8
msgid "The crypto engine (CE) API is a crypto queue manager."
msgstr ""

#: ../../../crypto/crypto_engine.rst:11
msgid "Requirement"
msgstr ""

#: ../../../crypto/crypto_engine.rst:12
msgid ""
"You must put, at the start of your transform context your_tfm_ctx, the "
"structure crypto_engine:"
msgstr ""

#: ../../../crypto/crypto_engine.rst:22
msgid ""
"The crypto engine only manages asynchronous requests in the form of "
"crypto_async_request. It cannot know the underlying request type and thus "
"only has access to the transform structure. It is not possible to access the "
"context using container_of. In addition, the engine knows nothing about your "
"structure \"``struct your_tfm_ctx``\". The engine assumes (requires) the "
"placement of the known member ``struct crypto_engine`` at the beginning."
msgstr ""

#: ../../../crypto/crypto_engine.rst:30
msgid "Order of operations"
msgstr ""

#: ../../../crypto/crypto_engine.rst:31
msgid ""
"You are required to obtain a struct crypto_engine via "
"``crypto_engine_alloc_init()``. Start it via ``crypto_engine_start()``. When "
"finished with your work, shut down the engine using ``crypto_engine_stop()`` "
"and destroy the engine with ``crypto_engine_exit()``."
msgstr ""

#: ../../../crypto/crypto_engine.rst:36
msgid ""
"Before transferring any request, you have to fill the context enginectx by "
"providing functions for the following:"
msgstr ""

#: ../../../crypto/crypto_engine.rst:39
msgid ""
"``prepare_cipher_request``/``prepare_hash_request``: Called before each "
"corresponding request is performed. If some processing or other preparatory "
"work is required, do it here."
msgstr ""

#: ../../../crypto/crypto_engine.rst:43
msgid ""
"``unprepare_cipher_request``/``unprepare_hash_request``: Called after each "
"request is handled. Clean up / undo what was done in the prepare function."
msgstr ""

#: ../../../crypto/crypto_engine.rst:46
msgid ""
"``cipher_one_request``/``hash_one_request``: Handle the current request by "
"performing the operation."
msgstr ""

#: ../../../crypto/crypto_engine.rst:49
msgid ""
"Note that these functions access the crypto_async_request structure "
"associated with the received request. You are able to retrieve the original "
"request by using:"
msgstr ""

#: ../../../crypto/crypto_engine.rst:57
msgid ""
"When your driver receives a crypto_request, you must to transfer it to the "
"crypto engine via one of:"
msgstr ""

#: ../../../crypto/crypto_engine.rst:60
msgid "crypto_transfer_aead_request_to_engine()"
msgstr ""

#: ../../../crypto/crypto_engine.rst:62
msgid "crypto_transfer_akcipher_request_to_engine()"
msgstr ""

#: ../../../crypto/crypto_engine.rst:64
msgid "crypto_transfer_hash_request_to_engine()"
msgstr ""

#: ../../../crypto/crypto_engine.rst:66
msgid "crypto_transfer_kpp_request_to_engine()"
msgstr ""

#: ../../../crypto/crypto_engine.rst:68
msgid "crypto_transfer_skcipher_request_to_engine()"
msgstr ""

#: ../../../crypto/crypto_engine.rst:70
msgid ""
"At the end of the request process, a call to one of the following functions "
"is needed:"
msgstr ""

#: ../../../crypto/crypto_engine.rst:72
msgid "crypto_finalize_aead_request()"
msgstr ""

#: ../../../crypto/crypto_engine.rst:74
msgid "crypto_finalize_akcipher_request()"
msgstr ""

#: ../../../crypto/crypto_engine.rst:76
msgid "crypto_finalize_hash_request()"
msgstr ""

#: ../../../crypto/crypto_engine.rst:78
msgid "crypto_finalize_kpp_request()"
msgstr ""

#: ../../../crypto/crypto_engine.rst:80
msgid "crypto_finalize_skcipher_request()"
msgstr ""
