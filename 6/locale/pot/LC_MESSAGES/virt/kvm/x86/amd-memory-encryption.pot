# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-30 08:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:5
msgid "Secure Encrypted Virtualization (SEV)"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:8
msgid "Overview"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:10
msgid ""
"Secure Encrypted Virtualization (SEV) is a feature found on AMD processors."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:12
msgid ""
"SEV is an extension to the AMD-V architecture which supports running virtual "
"machines (VMs) under the control of a hypervisor. When enabled, the memory "
"contents of a VM will be transparently encrypted with a key unique to that "
"VM."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:17
msgid ""
"The hypervisor can determine the SEV support through the CPUID instruction. "
"The CPUID function 0x8000001f reports information related to SEV::"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:27
msgid ""
"If support for SEV is present, MSR 0xc001_0010 (MSR_AMD64_SYSCFG) and MSR "
"0xc001_0015 (MSR_K7_HWCR) can be used to determine if it can be enabled::"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:38
msgid ""
"When SEV support is available, it can be enabled in a specific VM by setting "
"the SEV bit before executing VMRUN.::"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:45
msgid ""
"SEV hardware uses ASIDs to associate a memory encryption key with a VM. "
"Hence, the ASID for the SEV-enabled guests must be from 1 to a maximum value "
"defined in the CPUID 0x8000001f[ecx] field."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:50
msgid "The KVM_MEMORY_ENCRYPT_OP ioctl"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:52
msgid ""
"The main ioctl to access SEV is KVM_MEMORY_ENCRYPT_OP, which operates on the "
"VM file descriptor.  If the argument to KVM_MEMORY_ENCRYPT_OP is NULL, the "
"ioctl returns 0 if SEV is enabled and ``ENOTTY`` if it is disabled (on some "
"older versions of Linux, the ioctl tries to run normally even with a NULL "
"argument, and therefore will likely return ``EFAULT`` instead of zero if SEV "
"is enabled).  If non-NULL, the argument to KVM_MEMORY_ENCRYPT_OP must be a "
"struct kvm_sev_cmd::"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:68
msgid ""
"The ``id`` field contains the subcommand, and the ``data`` field points to "
"another struct containing arguments specific to command.  The ``sev_fd`` "
"should point to a file descriptor that is opened on the ``/dev/sev`` device, "
"if needed (see individual commands)."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:73
msgid ""
"On output, ``error`` is zero on success, or an error code.  Error codes are "
"defined in ``<linux/psp-dev.h>``."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:76
msgid ""
"KVM implements the following commands to support common lifecycle events of "
"SEV guests, such as launching, running, snapshotting, migrating and "
"decommissioning."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:80
msgid "1. KVM_SEV_INIT2"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:82
msgid ""
"The KVM_SEV_INIT2 command is used by the hypervisor to initialize the SEV "
"platform context. In a typical workflow, this command should be the first "
"command issued."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:85
msgid ""
"For this command to be accepted, either KVM_X86_SEV_VM or KVM_X86_SEV_ES_VM "
"must have been passed to the KVM_CREATE_VM ioctl.  A virtual machine created "
"with those machine types in turn cannot be run until KVM_SEV_INIT2 is "
"invoked."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:89
msgid "Parameters: struct kvm_sev_init (in)"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:91
#: ../../../virt/kvm/x86/amd-memory-encryption.rst:138
#: ../../../virt/kvm/x86/amd-memory-encryption.rst:169
#: ../../../virt/kvm/x86/amd-memory-encryption.rst:195
#: ../../../virt/kvm/x86/amd-memory-encryption.rst:212
#: ../../../virt/kvm/x86/amd-memory-encryption.rst:222
#: ../../../virt/kvm/x86/amd-memory-encryption.rst:253
#: ../../../virt/kvm/x86/amd-memory-encryption.rst:273
#: ../../../virt/kvm/x86/amd-memory-encryption.rst:293
#: ../../../virt/kvm/x86/amd-memory-encryption.rst:321
#: ../../../virt/kvm/x86/amd-memory-encryption.rst:343
#: ../../../virt/kvm/x86/amd-memory-encryption.rst:376
#: ../../../virt/kvm/x86/amd-memory-encryption.rst:397
#: ../../../virt/kvm/x86/amd-memory-encryption.rst:406
#: ../../../virt/kvm/x86/amd-memory-encryption.rst:418
#: ../../../virt/kvm/x86/amd-memory-encryption.rst:446
#: ../../../virt/kvm/x86/amd-memory-encryption.rst:467
#: ../../../virt/kvm/x86/amd-memory-encryption.rst:478
#: ../../../virt/kvm/x86/amd-memory-encryption.rst:555
msgid "Returns: 0 on success, -negative on error"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:103
msgid ""
"It is an error if the hypervisor does not support any of the bits that are "
"set in ``flags`` or ``vmsa_features``.  ``vmsa_features`` must be 0 for SEV "
"virtual machines, as they do not have a VMSA."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:107
msgid ""
"``ghcb_version`` must be 0 for SEV virtual machines, as they do not issue "
"GHCB requests. If ``ghcb_version`` is 0 for any other guest type, then the "
"maximum allowed guest GHCB protocol will default to version 2."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:111
msgid ""
"This command replaces the deprecated KVM_SEV_INIT and KVM_SEV_ES_INIT "
"commands. The commands did not have any parameters (the ```data``` field was "
"unused) and only work for the KVM_X86_DEFAULT_VM machine type (0)."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:115
msgid "They behave as if:"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:117
msgid ""
"the VM type is KVM_X86_SEV_VM for KVM_SEV_INIT, or KVM_X86_SEV_ES_VM for "
"KVM_SEV_ES_INIT"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:120
msgid ""
"the ``flags`` and ``vmsa_features`` fields of ``struct kvm_sev_init`` are "
"set to zero, and ``ghcb_version`` is set to 0 for KVM_SEV_INIT and 1 for "
"KVM_SEV_ES_INIT."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:124
msgid ""
"If the ``KVM_X86_SEV_VMSA_FEATURES`` attribute does not exist, the "
"hypervisor only supports KVM_SEV_INIT and KVM_SEV_ES_INIT.  In that case, "
"note that KVM_SEV_ES_INIT might set the debug swap VMSA feature (bit 5) "
"depending on the value of the ``debug_swap`` parameter of ``kvm-amd.ko``."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:130
msgid "2. KVM_SEV_LAUNCH_START"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:132
msgid ""
"The KVM_SEV_LAUNCH_START command is used for creating the memory encryption "
"context. To create the encryption context, user must provide a guest policy, "
"the owner's public Diffie-Hellman (PDH) key and session information."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:136
msgid "Parameters: struct  kvm_sev_launch_start (in/out)"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:153
#: ../../../virt/kvm/x86/amd-memory-encryption.rst:433
msgid ""
"On success, the 'handle' field contains a new handle and on error, a "
"negative value."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:155
msgid "KVM_SEV_LAUNCH_START requires the ``sev_fd`` field to be valid."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:157
msgid "For more details, see SEV spec Section 6.2."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:160
msgid "3. KVM_SEV_LAUNCH_UPDATE_DATA"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:162
msgid ""
"The KVM_SEV_LAUNCH_UPDATE_DATA is used for encrypting a memory region. It "
"also calculates a measurement of the memory contents. The measurement is a "
"signature of the memory contents that can be sent to the guest owner as an "
"attestation that the memory was encrypted correctly by the firmware."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:167
msgid "Parameters (in): struct  kvm_sev_launch_update_data"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:178
msgid "For more details, see SEV spec Section 6.3."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:181
msgid "4. KVM_SEV_LAUNCH_MEASURE"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:183
msgid ""
"The KVM_SEV_LAUNCH_MEASURE command is used to retrieve the measurement of "
"the data encrypted by the KVM_SEV_LAUNCH_UPDATE_DATA command. The guest "
"owner may wait to provide the guest with confidential information until it "
"can verify the measurement. Since the guest owner knows the initial contents "
"of the guest at boot, the measurement can be verified by comparing it to "
"what the guest owner expects."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:190
#: ../../../virt/kvm/x86/amd-memory-encryption.rst:316
msgid ""
"If len is zero on entry, the measurement blob length is written to len and "
"uaddr is unused."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:193
msgid "Parameters (in): struct  kvm_sev_launch_measure"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:204
msgid ""
"For more details on the measurement verification flow, see SEV spec Section "
"6.4."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:207
msgid "5. KVM_SEV_LAUNCH_FINISH"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:209
msgid ""
"After completion of the launch flow, the KVM_SEV_LAUNCH_FINISH command can "
"be issued to make the guest ready for the execution."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:215
msgid "6. KVM_SEV_GUEST_STATUS"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:217
msgid ""
"The KVM_SEV_GUEST_STATUS command is used to retrieve status information "
"about a SEV-enabled guest."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:220
msgid "Parameters (out): struct kvm_sev_guest_status"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:232
msgid "SEV guest state:"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:246
msgid "7. KVM_SEV_DBG_DECRYPT"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:248
msgid ""
"The KVM_SEV_DEBUG_DECRYPT command can be used by the hypervisor to request "
"the firmware to decrypt the data at the given memory region."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:251
#: ../../../virt/kvm/x86/amd-memory-encryption.rst:271
msgid "Parameters (in): struct kvm_sev_dbg"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:263
#: ../../../virt/kvm/x86/amd-memory-encryption.rst:283
msgid ""
"The command returns an error if the guest policy does not allow debugging."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:266
msgid "8. KVM_SEV_DBG_ENCRYPT"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:268
msgid ""
"The KVM_SEV_DEBUG_ENCRYPT command can be used by the hypervisor to request "
"the firmware to encrypt the data at the given memory region."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:286
msgid "9. KVM_SEV_LAUNCH_SECRET"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:288
msgid ""
"The KVM_SEV_LAUNCH_SECRET command can be used by the hypervisor to inject "
"secret data after the measurement has been validated by the guest owner."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:291
msgid "Parameters (in): struct kvm_sev_launch_secret"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:309
msgid "10. KVM_SEV_GET_ATTESTATION_REPORT"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:311
msgid ""
"The KVM_SEV_GET_ATTESTATION_REPORT command can be used by the hypervisor to "
"query the attestation report containing the SHA-256 digest of the guest "
"memory and VMSA passed through the KVM_SEV_LAUNCH commands and signed with "
"the PEK. The digest returned by the command should match the digest used by "
"the guest owner with the KVM_SEV_LAUNCH_MEASURE."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:319
msgid "Parameters (in): struct kvm_sev_attestation"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:333
msgid "11. KVM_SEV_SEND_START"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:335
msgid ""
"The KVM_SEV_SEND_START command can be used by the hypervisor to create an "
"outgoing guest encryption context."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:338
msgid ""
"If session_len is zero on entry, the length of the guest session information "
"is written to session_len and all other fields are not used."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:341
msgid "Parameters (in): struct kvm_sev_send_start"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:364
msgid "12. KVM_SEV_SEND_UPDATE_DATA"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:366
msgid ""
"The KVM_SEV_SEND_UPDATE_DATA command can be used by the hypervisor to "
"encrypt the outgoing guest memory region with the encryption context "
"creating using KVM_SEV_SEND_START."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:370
msgid ""
"If hdr_len or trans_len are zero on entry, the length of the packet header "
"and transport region are written to hdr_len and trans_len respectively, and "
"all other fields are not used."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:374
msgid "Parameters (in): struct kvm_sev_send_update_data"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:392
msgid "13. KVM_SEV_SEND_FINISH"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:394
msgid ""
"After completion of the migration flow, the KVM_SEV_SEND_FINISH command can "
"be issued by the hypervisor to delete the encryption context."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:400
msgid "14. KVM_SEV_SEND_CANCEL"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:402
msgid ""
"After completion of SEND_START, but before SEND_FINISH, the source VMM can "
"issue the SEND_CANCEL command to stop a migration. This is necessary so that "
"a cancelled migration can restart with a new target later."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:409
msgid "15. KVM_SEV_RECEIVE_START"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:411
msgid ""
"The KVM_SEV_RECEIVE_START command is used for creating the memory encryption "
"context for an incoming SEV guest. To create the encryption context, the "
"user must provide a guest policy, the platform public Diffie-Hellman (PDH) "
"key and session information."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:416
msgid "Parameters: struct  kvm_sev_receive_start (in/out)"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:435
msgid "For more details, see SEV spec Section 6.12."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:438
msgid "16. KVM_SEV_RECEIVE_UPDATE_DATA"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:440
msgid ""
"The KVM_SEV_RECEIVE_UPDATE_DATA command can be used by the hypervisor to "
"copy the incoming buffers into the guest memory region with encryption "
"context created during the KVM_SEV_RECEIVE_START."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:444
msgid "Parameters (in): struct kvm_sev_receive_update_data"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:462
msgid "17. KVM_SEV_RECEIVE_FINISH"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:464
msgid ""
"After completion of the migration flow, the KVM_SEV_RECEIVE_FINISH command "
"can be issued by the hypervisor to make the guest ready for execution."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:470
msgid "18. KVM_SEV_SNP_LAUNCH_START"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:472
msgid ""
"The KVM_SNP_LAUNCH_START command is used for creating the memory encryption "
"context for the SEV-SNP guest. It must be called prior to issuing "
"KVM_SEV_SNP_LAUNCH_UPDATE or KVM_SEV_SNP_LAUNCH_FINISH;"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:476
msgid "Parameters (in): struct  kvm_sev_snp_launch_start"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:490
msgid ""
"See SNP_LAUNCH_START in the SEV-SNP specification [snp-fw-abi]_ for further "
"details on the input parameters in ``struct kvm_sev_snp_launch_start``."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:494
msgid "19. KVM_SEV_SNP_LAUNCH_UPDATE"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:496
msgid ""
"The KVM_SEV_SNP_LAUNCH_UPDATE command is used for loading userspace-provided "
"data into a guest GPA range, measuring the contents into the SNP guest "
"context created by KVM_SEV_SNP_LAUNCH_START, and then encrypting/validating "
"that GPA range so that it will be immediately readable using the encryption "
"key associated with the guest context once it is booted, after which point "
"it can attest the measurement associated with its context before unlocking "
"any secrets."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:504
msgid ""
"It is required that the GPA ranges initialized by this command have had the "
"KVM_MEMORY_ATTRIBUTE_PRIVATE attribute set in advance. See the documentation "
"for KVM_SET_MEMORY_ATTRIBUTES for more details on this aspect."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:508
msgid ""
"Upon success, this command is not guaranteed to have processed the entire "
"range requested. Instead, the ``gfn_start``, ``uaddr``, and ``len`` fields "
"of ``struct kvm_sev_snp_launch_update`` will be updated to correspond to the "
"remaining range that has yet to be processed. The caller should continue "
"calling this command until those fields indicate the entire range has been "
"processed, e.g. ``len`` is 0, ``gfn_start`` is equal to the last GFN in the "
"range plus 1, and ``uaddr`` is the last byte of the userspace-provided "
"source buffer address plus 1. In the case where ``type`` is "
"KVM_SEV_SNP_PAGE_TYPE_ZERO, ``uaddr`` will be ignored completely."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:518
msgid "Parameters (in): struct  kvm_sev_snp_launch_update"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:520
msgid "Returns: 0 on success, < 0 on error, -EAGAIN if caller should retry"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:536
msgid "where the allowed values for page_type are #define'd as::"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:544
msgid ""
"See the SEV-SNP spec [snp-fw-abi]_ for further details on how each page type "
"is used/measured."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:548
msgid "20. KVM_SEV_SNP_LAUNCH_FINISH"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:550
msgid ""
"After completion of the SNP guest launch flow, the KVM_SEV_SNP_LAUNCH_FINISH "
"command can be issued to make the guest ready for execution."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:553
msgid "Parameters (in): struct kvm_sev_snp_launch_finish"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:572
msgid ""
"See SNP_LAUNCH_FINISH in the SEV-SNP specification [snp-fw-abi]_ for further "
"details on the input parameters in ``struct kvm_sev_snp_launch_finish``."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:576
msgid "Device attribute API"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:578
msgid ""
"Attributes of the SEV implementation can be retrieved through the "
"``KVM_HAS_DEVICE_ATTR`` and ``KVM_GET_DEVICE_ATTR`` ioctls on the ``/dev/"
"kvm`` device node, using group ``KVM_X86_GRP_SEV``."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:582
msgid "Currently only one attribute is implemented:"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:584
msgid ""
"``KVM_X86_SEV_VMSA_FEATURES``: return the set of all bits that are accepted "
"in the ``vmsa_features`` of ``KVM_SEV_INIT2``."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:588
msgid "Firmware Management"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:590
msgid ""
"The SEV guest key management is handled by a separate processor called the "
"AMD Secure Processor (AMD-SP). Firmware running inside the AMD-SP provides a "
"secure key management interface to perform common hypervisor activities such "
"as encrypting bootstrap code, snapshot, migrating and debugging the guest. "
"For more information, see the SEV Key Management spec [api-spec]_"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:596
msgid ""
"The AMD-SP firmware can be initialized either by using its own non-volatile "
"storage or the OS can manage the NV storage for the firmware using parameter "
"``init_ex_path`` of the ``ccp`` module. If the file specified by "
"``init_ex_path`` does not exist or is invalid, the OS will create or "
"override the file with PSP non-volatile storage."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:603
msgid "References"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:606
msgid ""
"See [white-paper]_, [api-spec]_, [amd-apm]_, [kvm-forum]_, and [snp-fw-abi]_ "
"for more info."
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:609
msgid ""
"https://developer.amd.com/wordpress/media/2013/12/"
"AMD_Memory_Encryption_Whitepaper_v7-Public.pdf"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:610
msgid "https://support.amd.com/TechDocs/55766_SEV-KM_API_Specification.pdf"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:611
msgid "https://support.amd.com/TechDocs/24593.pdf (section 15.34)"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:612
msgid ""
"https://www.linux-kvm.org/images/7/74/02x08A-Thomas_Lendacky-"
"AMDs_Virtualizatoin_Memory_Encryption_Technology.pdf"
msgstr ""

#: ../../../virt/kvm/x86/amd-memory-encryption.rst:613
msgid "https://www.amd.com/system/files/TechDocs/56860.pdf"
msgstr ""
