# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-30 08:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../sound/soc/codec-to-codec.rst:3
msgid "Creating codec to codec dai link for ALSA dapm"
msgstr ""

#: ../../../sound/soc/codec-to-codec.rst:5
msgid ""
"Mostly the flow of audio is always from CPU to codec so your system will "
"look as below: ::"
msgstr ""

#: ../../../sound/soc/codec-to-codec.rst:15
msgid "In case your system looks as below: ::"
msgstr ""

#: ../../../sound/soc/codec-to-codec.rst:40
msgid ""
"Suppose codec-2 is a bluetooth chip and codec-3 is connected to a speaker "
"and you have a below scenario: codec-2 will receive the audio data and the "
"user wants to play that audio through codec-3 without involving the CPU.This "
"aforementioned case is the ideal case when codec to codec connection should "
"be used."
msgstr ""

#: ../../../sound/soc/codec-to-codec.rst:47
msgid "Your dai_link should appear as below in your machine file: ::"
msgstr ""

#: ../../../sound/soc/codec-to-codec.rst:89
msgid "Above code snippet is motivated from sound/soc/samsung/speyside.c."
msgstr ""

#: ../../../sound/soc/codec-to-codec.rst:91
msgid ""
"Note the \"c2c_params\" callback which lets the dapm know that this dai_link "
"is a codec to codec connection."
msgstr ""

#: ../../../sound/soc/codec-to-codec.rst:94
msgid ""
"In dapm core a route is created between cpu_dai playback widget and "
"codec_dai capture widget for playback path and vice-versa is true for "
"capture path. In order for this aforementioned route to get triggered, DAPM "
"needs to find a valid endpoint which could be either a sink or source widget "
"corresponding to playback and capture path respectively."
msgstr ""

#: ../../../sound/soc/codec-to-codec.rst:101
msgid ""
"In order to trigger this dai_link widget, a thin codec driver for the "
"speaker amp can be created as demonstrated in wm8727.c file, it sets "
"appropriate constraints for the device even if it needs no control."
msgstr ""

#: ../../../sound/soc/codec-to-codec.rst:105
msgid ""
"Make sure to name your corresponding cpu and codec playback and capture dai "
"names ending with \"Playback\" and \"Capture\" respectively as dapm core "
"will link and power those dais based on the name."
msgstr ""

#: ../../../sound/soc/codec-to-codec.rst:109
msgid ""
"A dai_link in a \"simple-audio-card\" will automatically be detected as "
"codec to codec when all DAIs on the link belong to codec components. The "
"dai_link will be initialized with the subset of stream parameters (channels, "
"format, sample rate) supported by all DAIs on the link. Since there is no "
"way to provide these parameters in the device tree, this is mostly useful "
"for communication with simple fixed-function codecs, such as a Bluetooth "
"controller or cellular modem."
msgstr ""
