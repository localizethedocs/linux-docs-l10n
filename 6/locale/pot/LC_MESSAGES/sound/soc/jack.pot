# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../sound/soc/jack.rst:3
msgid "ASoC jack detection"
msgstr ""

#: ../../../sound/soc/jack.rst:5
msgid ""
"ALSA has a standard API for representing physical jacks to user space, the "
"kernel side of which can be seen in include/sound/jack.h.  ASoC provides a "
"version of this API adding two additional features:"
msgstr ""

#: ../../../sound/soc/jack.rst:9
msgid ""
"It allows more than one jack detection method to work together on one user "
"visible jack.  In embedded systems it is common for multiple to be present "
"on a single jack but handled by separate bits of hardware."
msgstr ""

#: ../../../sound/soc/jack.rst:14
msgid ""
"Integration with DAPM, allowing DAPM endpoints to be updated automatically "
"based on the detected jack status (eg, turning off the headphone outputs if "
"no headphones are present)."
msgstr ""

#: ../../../sound/soc/jack.rst:18
msgid ""
"This is done by splitting the jacks up into three things working together: "
"the jack itself represented by a struct snd_soc_jack, sets of "
"snd_soc_jack_pins representing DAPM endpoints to update and blocks of code "
"providing jack reporting mechanisms."
msgstr ""

#: ../../../sound/soc/jack.rst:23
msgid ""
"For example, a system may have a stereo headset jack with two reporting "
"mechanisms, one for the headphone and one for the microphone.  Some systems "
"won't be able to use their speaker output while a headphone is connected and "
"so will want to make sure to update both speaker and headphone when the "
"headphone jack status changes."
msgstr ""

#: ../../../sound/soc/jack.rst:30
msgid "The jack - struct snd_soc_jack"
msgstr ""

#: ../../../sound/soc/jack.rst:32
msgid ""
"This represents a physical jack on the system and is what is visible to user "
"space.  The jack itself is completely passive, it is set up by the machine "
"driver and updated by jack detection methods."
msgstr ""

#: ../../../sound/soc/jack.rst:36
msgid "Jacks are created by the machine driver calling snd_soc_jack_new()."
msgstr ""

#: ../../../sound/soc/jack.rst:39
msgid "snd_soc_jack_pin"
msgstr ""

#: ../../../sound/soc/jack.rst:41
msgid ""
"These represent a DAPM pin to update depending on some of the status bits "
"supported by the jack.  Each snd_soc_jack has zero or more of these which "
"are updated automatically.  They are created by the machine driver and "
"associated with the jack using snd_soc_jack_add_pins().  The status of the "
"endpoint may configured to be the opposite of the jack status if required "
"(eg, enabling a built in microphone if a microphone is not connected via a "
"jack)."
msgstr ""

#: ../../../sound/soc/jack.rst:50
msgid "Jack detection methods"
msgstr ""

#: ../../../sound/soc/jack.rst:52
msgid ""
"Actual jack detection is done by code which is able to monitor some input to "
"the system and update a jack by calling snd_soc_jack_report(), specifying a "
"subset of bits to update.  The jack detection code should be set up by the "
"machine driver, taking configuration for the jack to update and the set of "
"things to report when the jack is connected."
msgstr ""

#: ../../../sound/soc/jack.rst:58
msgid ""
"Often this is done based on the status of a GPIO - a handler for this is "
"provided by the snd_soc_jack_add_gpio() function.  Other methods are also "
"available, for example integrated into CODECs.  One example of CODEC "
"integrated jack detection can be see in the WM8350 driver."
msgstr ""

#: ../../../sound/soc/jack.rst:63
msgid ""
"Each jack may have multiple reporting mechanisms, though it will need at "
"least one to be useful."
msgstr ""

#: ../../../sound/soc/jack.rst:67
msgid "Machine drivers"
msgstr ""

#: ../../../sound/soc/jack.rst:69
msgid ""
"These are all hooked together by the machine driver depending on the system "
"hardware.  The machine driver will set up the snd_soc_jack and the list of "
"pins to update then set up one or more jack detection mechanisms to update "
"that jack based on their current status."
msgstr ""
