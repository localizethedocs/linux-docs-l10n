# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../sound/designs/seq-oss.rst:3
msgid "OSS Sequencer Emulation on ALSA"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:5
msgid "Copyright (c) 1998,1999 by Takashi Iwai"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:7
msgid "ver.0.1.8; Nov. 16, 1999"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:10
msgid "Description"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:12
msgid ""
"This directory contains the OSS sequencer emulation driver on ALSA. Note "
"that this program is still in the development state."
msgstr ""

#: ../../../sound/designs/seq-oss.rst:15
msgid ""
"What this does - it provides the emulation of the OSS sequencer, access via "
"``/dev/sequencer`` and ``/dev/music`` devices. The most of applications "
"using OSS can run if the appropriate ALSA sequencer is prepared."
msgstr ""

#: ../../../sound/designs/seq-oss.rst:20
msgid "The following features are emulated by this driver:"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:22
msgid "Normal sequencer and MIDI events:"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:24
msgid ""
"They are converted to the ALSA sequencer events, and sent to the "
"corresponding port."
msgstr ""

#: ../../../sound/designs/seq-oss.rst:27
msgid "Timer events:"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:29
msgid ""
"The timer is not selectable by ioctl. The control rate is fixed to 100 "
"regardless of HZ. That is, even on Alpha system, a tick is always 1/100 "
"second. The base rate and tempo can be changed in ``/dev/music``."
msgstr ""

#: ../../../sound/designs/seq-oss.rst:33
msgid "Patch loading:"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:35
msgid ""
"It purely depends on the synth drivers whether it's supported since the "
"patch loading is realized by callback to the synth driver."
msgstr ""

#: ../../../sound/designs/seq-oss.rst:38
msgid "I/O controls:"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:40
msgid ""
"Most of controls are accepted. Some controls are dependent on the synth "
"driver, as well as even on original OSS."
msgstr ""

#: ../../../sound/designs/seq-oss.rst:43
msgid "Furthermore, you can find the following advanced features:"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:45
msgid "Better queue mechanism:"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:47
msgid "The events are queued before processing them."
msgstr ""

#: ../../../sound/designs/seq-oss.rst:49
msgid "Multiple applications:"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:51
msgid ""
"You can run two or more applications simultaneously (even for OSS "
"sequencer)! However, each MIDI device is exclusive - that is, if a MIDI "
"device is opened once by some application, other applications can't use it. "
"No such a restriction in synth devices."
msgstr ""

#: ../../../sound/designs/seq-oss.rst:57
msgid "Real-time event processing:"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:59
msgid ""
"The events can be processed in real time without using out of bound ioctl. "
"To switch to real-time mode, send ABSTIME 0 event. The followed events will "
"be processed in real-time without queued. To switch off the real-time mode, "
"send RELTIME 0 event."
msgstr ""

#: ../../../sound/designs/seq-oss.rst:64
msgid "``/proc`` interface:"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:66
msgid ""
"The status of applications and devices can be shown via ``/proc/asound/seq/"
"oss`` at any time. In the later version, configuration will be changed via "
"``/proc`` interface, too."
msgstr ""

#: ../../../sound/designs/seq-oss.rst:72
msgid "Installation"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:74
msgid ""
"Run configure script with both sequencer support (``--with-sequencer=yes``) "
"and OSS emulation (``--with-oss=yes``) options. A module ``snd-seq-oss.o`` "
"will be created. If the synth module of your sound card supports for OSS "
"emulation (so far, only Emu8000 driver), this module will be loaded "
"automatically. Otherwise, you need to load this module manually."
msgstr ""

#: ../../../sound/designs/seq-oss.rst:81
msgid ""
"At beginning, this module probes all the MIDI ports which have been already "
"connected to the sequencer. Once after that, the creation and deletion of "
"ports are watched by announcement mechanism of ALSA sequencer."
msgstr ""

#: ../../../sound/designs/seq-oss.rst:85
msgid ""
"The available synth and MIDI devices can be found in proc interface. Run "
"``cat /proc/asound/seq/oss``, and check the devices. For example, if you use "
"an AWE64 card, you'll see like the following: ::"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:111
msgid ""
"Note that the device number may be different from the information of ``/proc/"
"asound/oss-devices`` or ones of the original OSS driver. Use the device "
"number listed in ``/proc/asound/seq/oss`` to play via OSS sequencer "
"emulation."
msgstr ""

#: ../../../sound/designs/seq-oss.rst:117
msgid "Using Synthesizer Devices"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:119
msgid ""
"Run your favorite program. I've tested playmidi-2.4, awemidi-0.4.3, gmod-3.1 "
"and xmp-1.1.5. You can load samples via ``/dev/sequencer`` like sfxload, too."
msgstr ""

#: ../../../sound/designs/seq-oss.rst:123
msgid ""
"If the lowlevel driver supports multiple access to synth devices (like "
"Emu8000 driver), two or more applications are allowed to run at the same "
"time."
msgstr ""

#: ../../../sound/designs/seq-oss.rst:128
msgid "Using MIDI Devices"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:130
msgid ""
"So far, only MIDI output was tested. MIDI input was not checked at all, but "
"hopefully it will work. Use the device number listed in ``/proc/asound/seq/"
"oss``. Be aware that these numbers are mostly different from the list in ``/"
"proc/asound/oss-devices``."
msgstr ""

#: ../../../sound/designs/seq-oss.rst:137
msgid "Module Options"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:139
msgid "The following module options are available:"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:141
msgid "maxqlen"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:142
msgid ""
"specifies the maximum read/write queue length. This queue is private for OSS "
"sequencer, so that it is independent from the queue length of ALSA "
"sequencer. Default value is 1024."
msgstr ""

#: ../../../sound/designs/seq-oss.rst:146
msgid "seq_oss_debug"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:147
msgid ""
"specifies the debug level and accepts zero (= no debug message) or positive "
"integer. Default value is 0."
msgstr ""

#: ../../../sound/designs/seq-oss.rst:151
msgid "Queue Mechanism"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:153
msgid ""
"OSS sequencer emulation uses an ALSA priority queue. The events from ``/dev/"
"sequencer`` are processed and put onto the queue specified by module option."
msgstr ""

#: ../../../sound/designs/seq-oss.rst:157
msgid ""
"All the events from ``/dev/sequencer`` are parsed at beginning. The timing "
"events are also parsed at this moment, so that the events may be processed "
"in real-time. Sending an event ABSTIME 0 switches the operation mode to real-"
"time mode, and sending an event RELTIME 0 switches it off. In the real-time "
"mode, all events are dispatched immediately."
msgstr ""

#: ../../../sound/designs/seq-oss.rst:163
msgid ""
"The queued events are dispatched to the corresponding ALSA sequencer ports "
"after scheduled time by ALSA sequencer dispatcher."
msgstr ""

#: ../../../sound/designs/seq-oss.rst:166
msgid ""
"If the write-queue is full, the application sleeps until a certain amount "
"(as default one half) becomes empty in blocking mode. The synchronization to "
"write timing was implemented, too."
msgstr ""

#: ../../../sound/designs/seq-oss.rst:170
msgid ""
"The input from MIDI devices or echo-back events are stored on read FIFO "
"queue. If application reads ``/dev/sequencer`` in blocking mode, the process "
"will be awaked."
msgstr ""

#: ../../../sound/designs/seq-oss.rst:175
msgid "Interface to Synthesizer Device"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:178
msgid "Registration"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:180
msgid ""
"To register an OSS synthesizer device, use snd_seq_oss_synth_register() "
"function: ::"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:187
msgid ""
"The arguments ``name``, ``type``, ``subtype`` and ``nvoices`` are used for "
"making the appropriate synth_info structure for ioctl. The return value is "
"an index number of this device. This index must be remembered for "
"unregister. If registration is failed, -errno will be returned."
msgstr ""

#: ../../../sound/designs/seq-oss.rst:192
msgid ""
"To release this device, call snd_seq_oss_synth_unregister() function: ::"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:197
msgid "where the ``index`` is the index number returned by register function."
msgstr ""

#: ../../../sound/designs/seq-oss.rst:200
msgid "Callbacks"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:202
msgid ""
"OSS synthesizer devices have capability for sample downloading and ioctls "
"like sample reset. In OSS emulation, these special features are realized by "
"using callbacks. The registration argument oper is used to specify these "
"callbacks. The following callback functions must be defined: ::"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:215
msgid ""
"Except for ``open`` and ``close`` callbacks, they are allowed to be NULL."
msgstr ""

#: ../../../sound/designs/seq-oss.rst:217
msgid ""
"Each callback function takes the argument type ``snd_seq_oss_arg_t`` as the "
"first argument. ::"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:230
msgid ""
"The first three fields, ``app_index``, ``file_mode`` and ``seq_mode`` are "
"initialized by OSS sequencer. The ``app_index`` is the application index "
"which is unique to each application opening OSS sequencer. The ``file_mode`` "
"is bit-flags indicating the file operation mode. See ``seq_oss.h`` for its "
"meaning. The ``seq_mode`` is sequencer operation mode. In the current "
"version, only ``SND_OSSSEQ_MODE_SYNTH`` is used."
msgstr ""

#: ../../../sound/designs/seq-oss.rst:237
msgid ""
"The next two fields, ``addr`` and ``private_data``, must be filled by the "
"synth driver at open callback. The ``addr`` contains the address of ALSA "
"sequencer port which is assigned to this device. If the driver allocates "
"memory for ``private_data``, it must be released in close callback by itself."
msgstr ""

#: ../../../sound/designs/seq-oss.rst:243
msgid ""
"The last field, ``event_passing``, indicates how to translate note-on / off "
"events. In ``PROCESS_EVENTS`` mode, the note 255 is regarded as velocity "
"change, and key pressure event is passed to the port. In ``PASS_EVENTS`` "
"mode, all note on/off events are passed to the port without modified. "
"``PROCESS_KEYPRESS`` mode checks the note above 128 and regards it as key "
"pressure event (mainly for Emu8000 driver)."
msgstr ""

#: ../../../sound/designs/seq-oss.rst:251
msgid "Open Callback"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:253
msgid ""
"The ``open`` is called at each time this device is opened by an application "
"using OSS sequencer. This must not be NULL. Typically, the open callback "
"does the following procedure:"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:257
msgid "Allocate private data record."
msgstr ""

#: ../../../sound/designs/seq-oss.rst:258
msgid "Create an ALSA sequencer port."
msgstr ""

#: ../../../sound/designs/seq-oss.rst:259
msgid "Set the new port address on ``arg->addr``."
msgstr ""

#: ../../../sound/designs/seq-oss.rst:260
msgid "Set the private data record pointer on ``arg->private_data``."
msgstr ""

#: ../../../sound/designs/seq-oss.rst:262
msgid ""
"Note that the type bit-flags in port_info of this synth port must NOT "
"contain ``TYPE_MIDI_GENERIC`` bit. Instead, ``TYPE_SPECIFIC`` should be "
"used. Also, ``CAP_SUBSCRIPTION`` bit should NOT be included, too. This is "
"necessary to tell it from other normal MIDI devices. If the open procedure "
"succeeded, return zero. Otherwise, return -errno."
msgstr ""

#: ../../../sound/designs/seq-oss.rst:270
msgid "Ioctl Callback"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:272
msgid ""
"The ``ioctl`` callback is called when the sequencer receives device-specific "
"ioctls. The following two ioctls should be processed by this callback:"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:275
msgid "IOCTL_SEQ_RESET_SAMPLES"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:276
msgid "reset all samples on memory -- return 0"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:278
msgid "IOCTL_SYNTH_MEMAVL"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:279
msgid "return the available memory size"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:281
msgid "FM_4OP_ENABLE"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:282
msgid "can be ignored usually"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:284
msgid ""
"The other ioctls are processed inside the sequencer without passing to the "
"lowlevel driver."
msgstr ""

#: ../../../sound/designs/seq-oss.rst:288
msgid "Load_Patch Callback"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:290
msgid ""
"The ``load_patch`` callback is used for sample-downloading. This callback "
"must read the data on user-space and transfer to each device. Return 0 if "
"succeeded, and -errno if failed. The format argument is the patch key in "
"patch_info record. The buf is user-space pointer where patch_info record is "
"stored. The offs can be ignored. The count is total data size of this sample "
"data."
msgstr ""

#: ../../../sound/designs/seq-oss.rst:298
msgid "Close Callback"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:300
msgid ""
"The ``close`` callback is called when this device is closed by the "
"application. If any private data was allocated in open callback, it must be "
"released in the close callback. The deletion of ALSA port should be done "
"here, too. This callback must not be NULL."
msgstr ""

#: ../../../sound/designs/seq-oss.rst:306
msgid "Reset Callback"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:308
msgid ""
"The ``reset`` callback is called when sequencer device is reset or closed by "
"applications. The callback should turn off the sounds on the relevant port "
"immediately, and initialize the status of the port. If this callback is "
"undefined, OSS seq sends a ``HEARTBEAT`` event to the port."
msgstr ""

#: ../../../sound/designs/seq-oss.rst:315
msgid "Events"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:317
msgid ""
"Most of the events are processed by sequencer and translated to the adequate "
"ALSA sequencer events, so that each synth device can receive by input_event "
"callback of ALSA sequencer port. The following ALSA events should be "
"implemented by the driver:"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:323
msgid "ALSA event"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:323
msgid "Original OSS events"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:325
msgid "NOTEON"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:325
msgid "SEQ_NOTEON, MIDI_NOTEON"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:326
msgid "NOTE"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:326
msgid "SEQ_NOTEOFF, MIDI_NOTEOFF"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:327
msgid "KEYPRESS"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:327
msgid "MIDI_KEY_PRESSURE"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:328
msgid "CHANPRESS"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:328
msgid "SEQ_AFTERTOUCH, MIDI_CHN_PRESSURE"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:329
msgid "PGMCHANGE"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:329
msgid "SEQ_PGMCHANGE, MIDI_PGM_CHANGE"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:330
msgid "PITCHBEND"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:330
msgid "SEQ_CONTROLLER(CTRL_PITCH_BENDER), MIDI_PITCH_BEND"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:332
msgid "CONTROLLER"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:332
msgid "MIDI_CTL_CHANGE, SEQ_BALANCE (with CTL_PAN)"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:334
msgid "CONTROL14"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:334
msgid "SEQ_CONTROLLER"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:335
msgid "REGPARAM"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:335
msgid "SEQ_CONTROLLER(CTRL_PITCH_BENDER_RANGE)"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:336
msgid "SYSEX"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:336
msgid "SEQ_SYSEX"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:339
msgid ""
"The most of these behavior can be realized by MIDI emulation driver included "
"in the Emu8000 lowlevel driver. In the future release, this module will be "
"independent."
msgstr ""

#: ../../../sound/designs/seq-oss.rst:343
msgid ""
"Some OSS events (``SEQ_PRIVATE`` and ``SEQ_VOLUME`` events) are passed as "
"event type SND_SEQ_OSS_PRIVATE.  The OSS sequencer passes these event 8 byte "
"packets without any modification. The lowlevel driver should process these "
"events appropriately."
msgstr ""

#: ../../../sound/designs/seq-oss.rst:349
msgid "Interface to MIDI Device"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:351
msgid ""
"Since the OSS emulation probes the creation and deletion of ALSA MIDI "
"sequencer ports automatically by receiving announcement from ALSA sequencer, "
"the MIDI devices don't need to be registered explicitly like synth devices. "
"However, the MIDI port_info registered to ALSA sequencer must include a "
"group name ``SND_SEQ_GROUP_DEVICE`` and a capability-bit ``CAP_READ`` or "
"``CAP_WRITE``. Also, subscription capabilities, ``CAP_SUBS_READ`` or "
"``CAP_SUBS_WRITE``, must be defined, too. If these conditions are not "
"satisfied, the port is not registered as OSS sequencer MIDI device."
msgstr ""

#: ../../../sound/designs/seq-oss.rst:362
msgid ""
"The events via MIDI devices are parsed in OSS sequencer and converted to the "
"corresponding ALSA sequencer events. The input from MIDI sequencer is also "
"converted to MIDI byte events by OSS sequencer. This works just a reverse "
"way of seq_midi module."
msgstr ""

#: ../../../sound/designs/seq-oss.rst:368
msgid "Known Problems / TODO's"
msgstr ""

#: ../../../sound/designs/seq-oss.rst:370
msgid "Patch loading via ALSA instrument layer is not implemented yet."
msgstr ""
