# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-14 08:59+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../peci/peci.rst:5
msgid "Overview"
msgstr ""

#: ../../../peci/peci.rst:7
msgid ""
"The Platform Environment Control Interface (PECI) is a communication "
"interface between Intel processor and management controllers (e.g. Baseboard "
"Management Controller, BMC). PECI provides services that allow the "
"management controller to configure, monitor and debug platform by accessing "
"various registers. It defines a dedicated command protocol, where the "
"management controller is acting as a PECI originator and the processor - as "
"a PECI responder. PECI can be used in both single processor and multiple-"
"processor based systems."
msgstr ""

#: ../../../peci/peci.rst:18
msgid ""
"NOTE: Intel PECI specification is not released as a dedicated document, "
"instead it is a part of External Design Specification (EDS) for given Intel "
"CPU. External Design Specifications are usually not publicly available."
msgstr ""

#: ../../../peci/peci.rst:25
msgid "PECI Wire"
msgstr ""

#: ../../../peci/peci.rst:27
msgid ""
"PECI Wire interface uses a single wire for self-clocking and data transfer. "
"It does not require any additional control lines - the physical layer is a "
"self-clocked one-wire bus signal that begins each bit with a driven, rising "
"edge from an idle near zero volts. The duration of the signal driven high "
"allows to determine whether the bit value is logic '0' or logic '1'. PECI "
"Wire also includes variable data rate established with every message."
msgstr ""

#: ../../../peci/peci.rst:35
msgid ""
"For PECI Wire, each processor package will utilize unique, fixed addresses "
"within a defined range and that address should have a fixed relationship "
"with the processor socket ID - if one of the processors is removed, it does "
"not affect addresses of remaining processors."
msgstr ""

#: ../../../peci/peci.rst:42
msgid "PECI subsystem internals"
msgstr ""

#: ../../../peci/peci:44: include/linux/peci.h:21
msgid "PECI controller specific methods"
msgstr ""

#: ../../../peci/peci:44: include/linux/peci.h:25 include/linux/peci.h:37
#: include/linux/peci.h:63 include/linux/peci.h:93 ../../../peci/peci:45:
#: drivers/peci/internal.h:71 drivers/peci/internal.h:90
msgid "**Definition**::"
msgstr ""

#: ../../../peci/peci:44: include/linux/peci.h:31 include/linux/peci.h:46
#: include/linux/peci.h:76 include/linux/peci.h:103 ../../../peci/peci:45:
#: drivers/peci/internal.h:78 drivers/peci/internal.h:99
msgid "**Members**"
msgstr ""

#: ../../../peci/peci:44: include/linux/peci.h:22
msgid "``xfer``"
msgstr ""

#: ../../../peci/peci:44: include/linux/peci.h:23
msgid "PECI transfer function"
msgstr ""

#: ../../../peci/peci:44: include/linux/peci.h:26 include/linux/peci.h:41
#: include/linux/peci.h:70 include/linux/peci.h:97 ../../../peci/peci:45:
#: drivers/peci/internal.h:107 drivers/peci/internal.h:120
#: ../../../peci/peci:46: drivers/peci/core.c:110 ../../../peci/peci:47:
#: drivers/peci/request.c:97 ../../../peci/peci:51: drivers/peci/cpu.c:17
#: drivers/peci/cpu.c:44 drivers/peci/cpu.c:78 drivers/peci/cpu.c:114
#: drivers/peci/cpu.c:151
msgid "**Description**"
msgstr ""

#: ../../../peci/peci:44: include/linux/peci.h:23
msgid ""
"PECI controllers may have different hardware interfaces - the drivers "
"implementing PECI controllers can use this structure to abstract away those "
"differences by exposing a common interface for PECI core."
msgstr ""

#: ../../../peci/peci:44: include/linux/peci.h:33
msgid "PECI controller"
msgstr ""

#: ../../../peci/peci:44: include/linux/peci.h:34 include/linux/peci.h:60
msgid "``dev``"
msgstr ""

#: ../../../peci/peci:44: include/linux/peci.h:35
msgid "device object to register PECI controller to the device model"
msgstr ""

#: ../../../peci/peci:44: include/linux/peci.h:35
msgid "``ops``"
msgstr ""

#: ../../../peci/peci:44: include/linux/peci.h:36
msgid "pointer to device specific controller operations"
msgstr ""

#: ../../../peci/peci:44: include/linux/peci.h:36
msgid "``bus_lock``"
msgstr ""

#: ../../../peci/peci:44: include/linux/peci.h:37
msgid "lock used to protect multiple callers"
msgstr ""

#: ../../../peci/peci:44: include/linux/peci.h:37
msgid "``id``"
msgstr ""

#: ../../../peci/peci:44: include/linux/peci.h:38
msgid "PECI controller ID"
msgstr ""

#: ../../../peci/peci:44: include/linux/peci.h:38
msgid ""
"PECI controllers usually connect to their drivers using non-PECI bus, such "
"as the platform bus. Each PECI controller can communicate with one or more "
"PECI devices."
msgstr ""

#: ../../../peci/peci:44: include/linux/peci.h:59
msgid "PECI device"
msgstr ""

#: ../../../peci/peci:44: include/linux/peci.h:61
msgid "device object to register PECI device to the device model"
msgstr ""

#: ../../../peci/peci:44: include/linux/peci.h:61
msgid "``info``"
msgstr ""

#: ../../../peci/peci:44: include/linux/peci.h:62
msgid "PECI device characteristics"
msgstr ""

#: ../../../peci/peci:44: include/linux/peci.h:62
msgid "``info.x86_vfm``"
msgstr ""

#: ../../../peci/peci:44: include/linux/peci.h:63 ../../../peci/peci:45:
#: drivers/peci/internal.h:70
msgid "device vendor-family-model"
msgstr ""

#: ../../../peci/peci:44: include/linux/peci.h:63
msgid "``info.peci_revision``"
msgstr ""

#: ../../../peci/peci:44: include/linux/peci.h:64
msgid "PECI revision supported by the PECI device"
msgstr ""

#: ../../../peci/peci:44: include/linux/peci.h:64
msgid "``info.socket_id``"
msgstr ""

#: ../../../peci/peci:44: include/linux/peci.h:65
msgid "the socket ID represented by the PECI device"
msgstr ""

#: ../../../peci/peci:44: include/linux/peci.h:65
msgid "``addr``"
msgstr ""

#: ../../../peci/peci:44: include/linux/peci.h:66
msgid "address used on the PECI bus connected to the parent controller"
msgstr ""

#: ../../../peci/peci:44: include/linux/peci.h:66
msgid "``deleted``"
msgstr ""

#: ../../../peci/peci:44: include/linux/peci.h:67
msgid "indicates that PECI device was already deleted"
msgstr ""

#: ../../../peci/peci:44: include/linux/peci.h:67
msgid ""
"A peci_device identifies a single device (i.e. CPU) connected to a PECI bus. "
"The behaviour exposed to the rest of the system is defined by the PECI "
"driver managing the device."
msgstr ""

#: ../../../peci/peci:44: include/linux/peci.h:89
msgid "PECI request"
msgstr ""

#: ../../../peci/peci:44: include/linux/peci.h:90
msgid "``device``"
msgstr ""

#: ../../../peci/peci:44: include/linux/peci.h:91
msgid "PECI device to which the request is sent"
msgstr ""

#: ../../../peci/peci:44: include/linux/peci.h:94
msgid "``rx``"
msgstr ""

#: ../../../peci/peci:44: include/linux/peci.h:95
msgid "RX buffer specific data"
msgstr ""

#: ../../../peci/peci:44: include/linux/peci.h:95
msgid "``rx.buf``"
msgstr ""

#: ../../../peci/peci:44: include/linux/peci.h:96
msgid "RX buffer"
msgstr ""

#: ../../../peci/peci:44: include/linux/peci.h:96
msgid "``rx.len``"
msgstr ""

#: ../../../peci/peci:44: include/linux/peci.h:97
msgid "received data length in bytes"
msgstr ""

#: ../../../peci/peci:44: include/linux/peci.h:91
msgid "``tx``"
msgstr ""

#: ../../../peci/peci:44: include/linux/peci.h:92
msgid "TX buffer specific data"
msgstr ""

#: ../../../peci/peci:44: include/linux/peci.h:92
msgid "``tx.buf``"
msgstr ""

#: ../../../peci/peci:44: include/linux/peci.h:93
msgid "TX buffer"
msgstr ""

#: ../../../peci/peci:44: include/linux/peci.h:93
msgid "``tx.len``"
msgstr ""

#: ../../../peci/peci:44: include/linux/peci.h:94
msgid "transfer data length in bytes"
msgstr ""

#: ../../../peci/peci:44: include/linux/peci.h:97
msgid ""
"A peci_request represents a request issued by PECI originator (TX) and a "
"response received from PECI responder (RX)."
msgstr ""

#: ../../../peci/peci:45: drivers/peci/internal.h:67
msgid "PECI device data to match"
msgstr ""

#: ../../../peci/peci:45: drivers/peci/internal.h:68
msgid "``data``"
msgstr ""

#: ../../../peci/peci:45: drivers/peci/internal.h:69
msgid "pointer to driver private data specific to device"
msgstr ""

#: ../../../peci/peci:45: drivers/peci/internal.h:69
msgid "``x86_vfm``"
msgstr ""

#: ../../../peci/peci:45: drivers/peci/internal.h:86
msgid "PECI driver"
msgstr ""

#: ../../../peci/peci:45: drivers/peci/internal.h:87
#: drivers/peci/internal.h:110
msgid "``driver``"
msgstr ""

#: ../../../peci/peci:45: drivers/peci/internal.h:88
msgid "inherit device driver"
msgstr ""

#: ../../../peci/peci:45: drivers/peci/internal.h:88
msgid "``probe``"
msgstr ""

#: ../../../peci/peci:45: drivers/peci/internal.h:89
msgid "probe callback"
msgstr ""

#: ../../../peci/peci:45: drivers/peci/internal.h:89
msgid "``remove``"
msgstr ""

#: ../../../peci/peci:45: drivers/peci/internal.h:90
msgid "remove callback"
msgstr ""

#: ../../../peci/peci:45: drivers/peci/internal.h:90
msgid "``id_table``"
msgstr ""

#: ../../../peci/peci:45: drivers/peci/internal.h:91
msgid "PECI device match table to decide which device to bind"
msgstr ""

#: ../../../peci/peci:45: drivers/peci/internal.h:106
msgid "``peci_driver_register (driver)``"
msgstr ""

#: ../../../peci/peci:45: drivers/peci/internal.h:104
msgid "register PECI driver"
msgstr ""

#: ../../../peci/peci:45: drivers/peci/internal.h:108
#: drivers/peci/internal.h:121 ../../../peci/peci:46: drivers/peci/core.c:110
#: ../../../peci/peci:47: drivers/peci/request.c:98 drivers/peci/request.c:187
#: drivers/peci/request.c:223 ../../../peci/peci:51: drivers/peci/cpu.c:17
#: drivers/peci/cpu.c:42 drivers/peci/cpu.c:74 drivers/peci/cpu.c:109
#: drivers/peci/cpu.c:145
msgid "**Parameters**"
msgstr ""

#: ../../../peci/peci:45: drivers/peci/internal.h:105
msgid "the driver to be registered"
msgstr ""

#: ../../../peci/peci:45: drivers/peci/internal.h:106
msgid ""
"PECI drivers that don't need to do anything special in module init should "
"use the convenience \"module_peci_driver\" macro instead"
msgstr ""

#: ../../../peci/peci:45: drivers/peci/internal.h:109 ../../../peci/peci:46:
#: drivers/peci/core.c:112 ../../../peci/peci:47: drivers/peci/request.c:99
#: drivers/peci/request.c:188 ../../../peci/peci:51: drivers/peci/cpu.c:18
#: drivers/peci/cpu.c:45 drivers/peci/cpu.c:79 drivers/peci/cpu.c:115
#: drivers/peci/cpu.c:152
msgid "**Return**"
msgstr ""

#: ../../../peci/peci:45: drivers/peci/internal.h:110
msgid "zero on success, else a negative error code."
msgstr ""

#: ../../../peci/peci:45: drivers/peci/internal.h:119
msgid "``module_peci_driver (__peci_driver)``"
msgstr ""

#: ../../../peci/peci:45: drivers/peci/internal.h:117
msgid "helper macro for registering a modular PECI driver"
msgstr ""

#: ../../../peci/peci:45: drivers/peci/internal.h:123
msgid "``__peci_driver``"
msgstr ""

#: ../../../peci/peci:45: drivers/peci/internal.h:118
msgid "peci_driver struct"
msgstr ""

#: ../../../peci/peci:45: drivers/peci/internal.h:119
msgid ""
"Helper macro for PECI drivers which do not do anything special in module "
"init/exit. This eliminates a lot of boilerplate. Each module may only use "
"this macro once, and calling it replaces module_init() and module_exit()"
msgstr ""

#: ../../../peci/peci:46: drivers/peci/core.c:106
msgid "add PECI controller"
msgstr ""

#: ../../../peci/peci:46: drivers/peci/core.c:112
msgid "``struct device *dev``"
msgstr ""

#: ../../../peci/peci:46: drivers/peci/core.c:107
msgid "device for devm operations"
msgstr ""

#: ../../../peci/peci:46: drivers/peci/core.c:109
msgid "``const struct peci_controller_ops *ops``"
msgstr ""

#: ../../../peci/peci:46: drivers/peci/core.c:108
msgid "pointer to controller specific methods"
msgstr ""

#: ../../../peci/peci:46: drivers/peci/core.c:109
msgid ""
"In final stage of its probe(), peci_controller driver calls "
"devm_peci_controller_add() to register itself with the PECI bus."
msgstr ""

#: ../../../peci/peci:46: drivers/peci/core.c:113
msgid ""
"Pointer to the newly allocated controller or ERR_PTR() in case of failure."
msgstr ""

#: ../../../peci/peci:47: drivers/peci/request.c:94
msgid "return -errno based on PECI completion code"
msgstr ""

#: ../../../peci/peci:47: drivers/peci/request.c:100 drivers/peci/request.c:225
msgid "``struct peci_request *req``"
msgstr ""

#: ../../../peci/peci:47: drivers/peci/request.c:95
msgid "the PECI request that contains response data with completion code"
msgstr ""

#: ../../../peci/peci:47: drivers/peci/request.c:96
msgid ""
"It can't be used for Ping(), GetDIB() and GetTemp() - for those commands we "
"don't expect completion code in the response."
msgstr ""

#: ../../../peci/peci:47: drivers/peci/request.c:100
msgid "-errno"
msgstr ""

#: ../../../peci/peci:47: drivers/peci/request.c:183
msgid "allocate :c:type:`struct peci_requests <peci_requests>`"
msgstr ""

#: ../../../peci/peci:47: drivers/peci/request.c:189 ../../../peci/peci:51:
#: drivers/peci/cpu.c:19 drivers/peci/cpu.c:44 drivers/peci/cpu.c:76
#: drivers/peci/cpu.c:111 drivers/peci/cpu.c:147
msgid "``struct peci_device *device``"
msgstr ""

#: ../../../peci/peci:47: drivers/peci/request.c:184 ../../../peci/peci:51:
#: drivers/peci/cpu.c:14 drivers/peci/cpu.c:39 drivers/peci/cpu.c:71
#: drivers/peci/cpu.c:106 drivers/peci/cpu.c:142
msgid "PECI device to which request is going to be sent"
msgstr ""

#: ../../../peci/peci:47: drivers/peci/request.c:186
msgid "``u8 tx_len``"
msgstr ""

#: ../../../peci/peci:47: drivers/peci/request.c:185
msgid "TX length"
msgstr ""

#: ../../../peci/peci:47: drivers/peci/request.c:187
msgid "``u8 rx_len``"
msgstr ""

#: ../../../peci/peci:47: drivers/peci/request.c:186
msgid "RX length"
msgstr ""

#: ../../../peci/peci:47: drivers/peci/request.c:188
msgid ""
"A pointer to a newly allocated :c:type:`struct peci_request <peci_request>` "
"on success or NULL otherwise."
msgstr ""

#: ../../../peci/peci:47: drivers/peci/request.c:219
msgid "free peci_request"
msgstr ""

#: ../../../peci/peci:47: drivers/peci/request.c:220
msgid "the PECI request to be freed"
msgstr ""

#: ../../../peci/peci.rst:50
msgid "PECI CPU Driver API"
msgstr ""

#: ../../../peci/peci:51: drivers/peci/cpu.c:13
msgid "read the maximum die temperature from PECI target device"
msgstr ""

#: ../../../peci/peci:51: drivers/peci/cpu.c:16
msgid "``s16 *temp_raw``"
msgstr ""

#: ../../../peci/peci:51: drivers/peci/cpu.c:15
msgid "where to store the read temperature"
msgstr ""

#: ../../../peci/peci:51: drivers/peci/cpu.c:16
msgid "It uses GetTemp PECI command."
msgstr ""

#: ../../../peci/peci:51: drivers/peci/cpu.c:19 drivers/peci/cpu.c:46
#: drivers/peci/cpu.c:80 drivers/peci/cpu.c:116 drivers/peci/cpu.c:153
msgid "0 if succeeded, other values in case errors."
msgstr ""

#: ../../../peci/peci:51: drivers/peci/cpu.c:38
msgid "read PCS register"
msgstr ""

#: ../../../peci/peci:51: drivers/peci/cpu.c:41
msgid "``u8 index``"
msgstr ""

#: ../../../peci/peci:51: drivers/peci/cpu.c:40
msgid "PCS index"
msgstr ""

#: ../../../peci/peci:51: drivers/peci/cpu.c:42
msgid "``u16 param``"
msgstr ""

#: ../../../peci/peci:51: drivers/peci/cpu.c:41
msgid "PCS parameter"
msgstr ""

#: ../../../peci/peci:51: drivers/peci/cpu.c:43 drivers/peci/cpu.c:77
#: drivers/peci/cpu.c:113 drivers/peci/cpu.c:150
msgid "``u32 *data``"
msgstr ""

#: ../../../peci/peci:51: drivers/peci/cpu.c:42 drivers/peci/cpu.c:76
#: drivers/peci/cpu.c:112 drivers/peci/cpu.c:149
msgid "where to store the read data"
msgstr ""

#: ../../../peci/peci:51: drivers/peci/cpu.c:43
msgid "It uses RdPkgConfig PECI command."
msgstr ""

#: ../../../peci/peci:51: drivers/peci/cpu.c:70 drivers/peci/cpu.c:105
msgid "read 32-bit memory location using raw address"
msgstr ""

#: ../../../peci/peci:51: drivers/peci/cpu.c:73 drivers/peci/cpu.c:109
#: drivers/peci/cpu.c:146
msgid "``u8 bus``"
msgstr ""

#: ../../../peci/peci:51: drivers/peci/cpu.c:72 drivers/peci/cpu.c:108
#: drivers/peci/cpu.c:145
msgid "bus"
msgstr ""

#: ../../../peci/peci:51: drivers/peci/cpu.c:74 drivers/peci/cpu.c:110
#: drivers/peci/cpu.c:147
msgid "``u8 dev``"
msgstr ""

#: ../../../peci/peci:51: drivers/peci/cpu.c:73 drivers/peci/cpu.c:109
#: drivers/peci/cpu.c:146
msgid "device"
msgstr ""

#: ../../../peci/peci:51: drivers/peci/cpu.c:75 drivers/peci/cpu.c:111
#: drivers/peci/cpu.c:148
msgid "``u8 func``"
msgstr ""

#: ../../../peci/peci:51: drivers/peci/cpu.c:74 drivers/peci/cpu.c:110
#: drivers/peci/cpu.c:147
msgid "function"
msgstr ""

#: ../../../peci/peci:51: drivers/peci/cpu.c:76 drivers/peci/cpu.c:112
msgid "``u16 reg``"
msgstr ""

#: ../../../peci/peci:51: drivers/peci/cpu.c:75 drivers/peci/cpu.c:111
msgid "register"
msgstr ""

#: ../../../peci/peci:51: drivers/peci/cpu.c:77
msgid "It uses RdPCIConfigLocal PECI command."
msgstr ""

#: ../../../peci/peci:51: drivers/peci/cpu.c:108 drivers/peci/cpu.c:145
msgid "``u8 seg``"
msgstr ""

#: ../../../peci/peci:51: drivers/peci/cpu.c:107 drivers/peci/cpu.c:144
msgid "PCI segment"
msgstr ""

#: ../../../peci/peci:51: drivers/peci/cpu.c:113
msgid ""
"Like :c:type:`peci_pci_local_read`, but it uses RdEndpointConfig PECI "
"command."
msgstr ""

#: ../../../peci/peci:51: drivers/peci/cpu.c:141
msgid "read 32-bit memory location using 64-bit bar offset address"
msgstr ""

#: ../../../peci/peci:51: drivers/peci/cpu.c:144
msgid "``u8 bar``"
msgstr ""

#: ../../../peci/peci:51: drivers/peci/cpu.c:143
msgid "PCI bar"
msgstr ""

#: ../../../peci/peci:51: drivers/peci/cpu.c:149
msgid "``u64 address``"
msgstr ""

#: ../../../peci/peci:51: drivers/peci/cpu.c:148
msgid "64-bit MMIO address"
msgstr ""

#: ../../../peci/peci:51: drivers/peci/cpu.c:150
msgid "It uses RdEndpointConfig PECI command."
msgstr ""
