# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-30 08:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../mm/damon/monitoring_intervals_tuning_example.rst:5
msgid "DAMON Moniting Interval Parameters Tuning Example"
msgstr ""

#: ../../../mm/damon/monitoring_intervals_tuning_example.rst:7
msgid ""
"DAMON's monitoring parameters need tuning based on given workload and the "
"monitoring purpose.  There is a :ref:`tuning guide "
"<damon_design_monitoring_params_tuning_guide>` for that.  This document "
"provides an example tuning based on the guide."
msgstr ""

#: ../../../mm/damon/monitoring_intervals_tuning_example.rst:13
msgid "Setup"
msgstr ""

#: ../../../mm/damon/monitoring_intervals_tuning_example.rst:15
msgid ""
"For below example, DAMON of Linux kernel v6.11 and `damo <https://github.com/"
"damonitor/damo>`_ (DAMON user-space tool) v2.5.9 was used to monitor and "
"visualize access patterns on the physical address space of a system running "
"a real-world server workload."
msgstr ""

#: ../../../mm/damon/monitoring_intervals_tuning_example.rst:21
msgid "5ms/100ms intervals: Too Short Interval"
msgstr ""

#: ../../../mm/damon/monitoring_intervals_tuning_example.rst:23
msgid ""
"Let's start by capturing the access pattern snapshot on the physical address "
"space of the system using DAMON, with the default interval parameters (5 "
"milliseconds and 100 milliseconds for the sampling and the aggregation "
"intervals, respectively).  Wait ten minutes between the start of DAMON and "
"the capturing of the snapshot, to show a meaningful time-wise access "
"patterns. ::"
msgstr ""

#: ../../../mm/damon/monitoring_intervals_tuning_example.rst:35
msgid ""
"Then, list the DAMON-found regions of different access patterns, sorted by "
"the \"access temperature\".  \"Access temperature\" is a metric representing "
"the access-hotness of a region.  It is calculated as a weighted sum of the "
"access frequency and the age of the region.  If the access frequency is 0 %, "
"the temperature is multiplied by minus one.  That is, if a region is not "
"accessed, it gets minus temperature and it gets lower as not accessed for "
"longer time. The sorting is in temperature-ascendint order, so the region at "
"the top of the list is the coldest, and the one at the bottom is the hottest "
"one. ::"
msgstr ""

#: ../../../mm/damon/monitoring_intervals_tuning_example.rst:58
msgid ""
"The list shows not seemingly hot regions, and only minimum access pattern "
"diversity.  Every region has zero access frequency.  The number of region is "
"10, which is the default ``min_nr_regions value``.  Size of each region is "
"also nearly identical.  We can suspect this is because “adaptive regions "
"adjustment” mechanism was not well working.  As the guide suggested, we can "
"get relative hotness of regions using ``age`` as the recency information.  "
"That would be better than nothing, but given the fact that the longest age "
"is only about 6 seconds while we waited about ten minutes, it is unclear how "
"useful this will be."
msgstr ""

#: ../../../mm/damon/monitoring_intervals_tuning_example.rst:68
msgid ""
"The temperature ranges to total size of regions of each range histogram "
"visualization of the results also shows no interesting distribution "
"pattern. ::"
msgstr ""

#: ../../../mm/damon/monitoring_intervals_tuning_example.rst:86
msgid ""
"In short, the parameters provide poor quality monitoring results for hot "
"regions detection. According to the :ref:`guide "
"<damon_design_monitoring_params_tuning_guide>`, this is due to the too short "
"aggregation interval."
msgstr ""

#: ../../../mm/damon/monitoring_intervals_tuning_example.rst:92
msgid "100ms/2s intervals: Starts Showing Small Hot Regions"
msgstr ""

#: ../../../mm/damon/monitoring_intervals_tuning_example.rst:94
msgid ""
"Following the guide, increase the interval 20 times (100 milliseocnds and 2 "
"seconds for sampling and aggregation intervals, respectively). ::"
msgstr ""

#: ../../../mm/damon/monitoring_intervals_tuning_example.rst:132
msgid ""
"DAMON found two distinct 4 KiB regions that pretty hot.  The regions are "
"also well aged.  The hottest 4 KiB region was keeping the access frequency "
"for about 8 minutes, and the coldest region was keeping no access for about "
"7 minutes. The distribution on the histogram also looks like having a "
"pattern."
msgstr ""

#: ../../../mm/damon/monitoring_intervals_tuning_example.rst:137
msgid ""
"Especially, the finding of the 4 KiB regions among the 62 GiB total memory "
"shows DAMON’s adaptive regions adjustment is working as designed."
msgstr ""

#: ../../../mm/damon/monitoring_intervals_tuning_example.rst:140
msgid ""
"Still the number of regions is close to the ``min_nr_regions``, and sizes of "
"cold regions are similar, though.  Apparently it is improved, but it still "
"has rooms to improve."
msgstr ""

#: ../../../mm/damon/monitoring_intervals_tuning_example.rst:145
msgid "400ms/8s intervals: Pretty Improved Results"
msgstr ""

#: ../../../mm/damon/monitoring_intervals_tuning_example.rst:147
msgid ""
"Increase the intervals four times (400 milliseconds and 8 seconds for "
"sampling and aggregation intervals, respectively). ::"
msgstr ""

#: ../../../mm/damon/monitoring_intervals_tuning_example.rst:190
msgid ""
"The number of regions having different access patterns has significantly "
"increased.  Size of each region is also more varied. Total size of non-zero "
"access frequency regions is also significantly increased. Maybe this is "
"already good enough to make some meaningful memory management efficiency "
"changes."
msgstr ""

#: ../../../mm/damon/monitoring_intervals_tuning_example.rst:196
msgid "800ms/16s intervals: Another bias"
msgstr ""

#: ../../../mm/damon/monitoring_intervals_tuning_example.rst:198
msgid ""
"Further double the intervals (800 milliseconds and 16 seconds for sampling "
"and aggregation intervals, respectively).  The results is more improved for "
"the hot regions detection, but starts looking degrading cold regions "
"detection. ::"
msgstr ""

#: ../../../mm/damon/monitoring_intervals_tuning_example.rst:237
msgid ""
"It found more non-zero access frequency regions. The number of regions is "
"still much higher than the ``min_nr_regions``, but it is reduced from that "
"of the previous setup. And apparently the distribution seems bit biased to "
"hot regions."
msgstr ""

#: ../../../mm/damon/monitoring_intervals_tuning_example.rst:243
msgid "Conclusion"
msgstr ""

#: ../../../mm/damon/monitoring_intervals_tuning_example.rst:245
msgid ""
"With the above experimental tuning results, we can conclude the theory and "
"the guide makes sense to at least this workload, and could be applied to "
"similar cases."
msgstr ""
