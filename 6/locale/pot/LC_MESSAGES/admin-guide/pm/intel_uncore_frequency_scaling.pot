# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:6
msgid "Intel Uncore Frequency Scaling"
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:0
msgid "Copyright"
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:8
msgid "|copy| 2022-2023 Intel Corporation"
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:0
msgid "Author"
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:10
msgid "Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>"
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:13
msgid "Introduction"
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:15
msgid ""
"The uncore can consume significant amount of power in Intel's Xeon servers "
"based on the workload characteristics. To optimize the total power and "
"improve overall performance, SoCs have internal algorithms for scaling "
"uncore frequency. These algorithms monitor workload usage of uncore and set "
"a desirable frequency."
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:20
msgid ""
"It is possible that users have different expectations of uncore performance "
"and want to have control over it. The objective is similar to allowing users "
"to set the scaling min/max frequencies via cpufreq sysfs to improve CPU "
"performance. Users may have some latency sensitive workloads where they do "
"not want any change to uncore frequency. Also, users may have workloads "
"which require different core and uncore performance at distinct phases and "
"they may want to use both cpufreq and the uncore scaling interface to "
"distribute power and improve overall performance."
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:30
msgid "Sysfs Interface"
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:32
msgid ""
"To control uncore frequency, a sysfs interface is provided in the directory: "
"`/sys/devices/system/cpu/intel_uncore_frequency/`."
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:35
msgid ""
"There is one directory for each package and die combination as the scope of "
"uncore scaling control is per die in multiple die/package SoCs or per "
"package for single die per package SoCs. The name represents the scope of "
"control. For example: 'package_00_die_00' is for package id 0 and die 0."
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:41
msgid "Each package_*_die_* contains the following attributes:"
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:43
msgid "``initial_max_freq_khz``"
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:44
msgid ""
"Out of reset, this attribute represent the maximum possible frequency. This "
"is a read-only attribute. If users adjust max_freq_khz, they can always go "
"back to maximum using the value from this attribute."
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:48
msgid "``initial_min_freq_khz``"
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:49
msgid ""
"Out of reset, this attribute represent the minimum possible frequency. This "
"is a read-only attribute. If users adjust min_freq_khz, they can always go "
"back to minimum using the value from this attribute."
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:53
msgid "``max_freq_khz``"
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:54
msgid "This attribute is used to set the maximum uncore frequency."
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:56
msgid "``min_freq_khz``"
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:57
msgid "This attribute is used to set the minimum uncore frequency."
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:59
msgid "``current_freq_khz``"
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:60
msgid "This attribute is used to get the current uncore frequency."
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:63
msgid "SoCs with TPMI (Topology Aware Register and PM Capsule Interface)"
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:65
msgid ""
"An SoC can contain multiple power domains with individual or collection of "
"mesh partitions. This partition is called fabric cluster."
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:68
msgid ""
"Certain type of meshes will need to run at the same frequency, they will be "
"placed in the same fabric cluster. Benefit of fabric cluster is that it "
"offers a scalable mechanism to deal with partitioned fabrics in a SoC."
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:72
msgid ""
"The current sysfs interface supports controls at package and die level. This "
"interface is not enough to support more granular control at fabric cluster "
"level."
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:76
msgid ""
"SoCs with the support of TPMI (Topology Aware Register and PM Capsule "
"Interface), can have multiple power domains. Each power domain can contain "
"one or more fabric clusters."
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:80
msgid ""
"To represent controls at fabric cluster level in addition to the controls at "
"package and die level (like systems without TPMI support), sysfs is "
"enhanced. This granular interface is presented in the sysfs with directories "
"names prefixed with \"uncore\". For example: uncore00, uncore01 etc."
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:86
msgid ""
"The scope of control is specified by attributes \"package_id\", "
"\"domain_id\" and \"fabric_cluster_id\" in the directory."
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:89
msgid "Attributes in each directory:"
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:91
msgid "``domain_id``"
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:92
msgid "This attribute is used to get the power domain id of this instance."
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:94
msgid "``die_id``"
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:95
msgid ""
"This attribute is used to get the Linux die id of this instance. This "
"attribute is only present for domains with core agents and when the CPUID "
"leaf 0x1f presents die ID."
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:99
msgid "``fabric_cluster_id``"
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:100
msgid "This attribute is used to get the fabric cluster id of this instance."
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:102
msgid "``package_id``"
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:103
msgid "This attribute is used to get the package id of this instance."
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:105
msgid "``agent_types``"
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:106
msgid ""
"This attribute displays all the hardware agents present within the domain. "
"Each agent has the capability to control one or more hardware subsystems, "
"which include: core, cache, memory, and I/O."
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:110
msgid "The other attributes are same as presented at package_*_die_* level."
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:112
msgid ""
"In most of current use cases, the \"max_freq_khz\" and \"min_freq_khz\" is "
"updated at \"package_*_die_*\" level. This model will be still supported "
"with the following approach:"
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:116
msgid ""
"When user uses controls at \"package_*_die_*\" level, then every fabric "
"cluster is affected in that package and die. For example: user changes "
"\"max_freq_khz\" in the package_00_die_00, then \"max_freq_khz\" for uncore* "
"directory with the same package id will be updated. In this case user can "
"still update \"max_freq_khz\" at each uncore* level, which is more "
"restrictive. Similarly, user can update \"min_freq_khz\" at "
"\"package_*_die_*\" level to apply at each uncore* level."
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:124
msgid ""
"Support for \"current_freq_khz\" is available only at each fabric cluster "
"level (i.e., in uncore* directory)."
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:128
msgid "Efficiency vs. Latency Tradeoff"
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:130
msgid ""
"The Efficiency Latency Control (ELC) feature improves performance per watt. "
"With this feature hardware power management algorithms optimize trade-off "
"between latency and power consumption. For some latency sensitive workloads "
"further tuning can be done by SW to get desired performance."
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:136
msgid ""
"The hardware monitors the average CPU utilization across all cores in a "
"power domain at regular intervals and decides an uncore frequency. While "
"this may result in the best performance per watt, workload may be expecting "
"higher performance at the expense of power. Consider an application that "
"intermittently wakes up to perform memory reads on an otherwise idle system. "
"In such cases, if hardware lowers uncore frequency, then there may be delay "
"in ramp up of frequency to meet target performance."
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:145
msgid ""
"The ELC control defines some parameters which can be changed from SW. If the "
"average CPU utilization is below a user-defined threshold "
"(elc_low_threshold_percent attribute below), the user-defined uncore floor "
"frequency will be used (elc_floor_freq_khz attribute below) instead of "
"hardware calculated minimum."
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:151
msgid ""
"Similarly in high load scenario where the CPU utilization goes above the "
"high threshold value (elc_high_threshold_percent attribute below) instead of "
"jumping to maximum uncore frequency, frequency is increased in 100MHz steps. "
"This avoids consuming unnecessarily high power immediately with CPU "
"utilization spikes."
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:157
msgid "Attributes for efficiency latency control:"
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:159
msgid "``elc_floor_freq_khz``"
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:160
msgid ""
"This attribute is used to get/set the efficiency latency floor frequency. If "
"this variable is lower than the 'min_freq_khz', it is ignored by the "
"firmware."
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:164
msgid "``elc_low_threshold_percent``"
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:165
msgid ""
"This attribute is used to get/set the efficiency latency control low "
"threshold. This attribute is in percentages of CPU utilization."
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:168
msgid "``elc_high_threshold_percent``"
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:169
msgid ""
"This attribute is used to get/set the efficiency latency control high "
"threshold. This attribute is in percentages of CPU utilization."
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:172
msgid "``elc_high_threshold_enable``"
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:173
msgid ""
"This attribute is used to enable/disable the efficiency latency control high "
"threshold. Write '1' to enable, '0' to disable."
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:176
msgid "Example system configuration below, which does following:"
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:177
msgid "when CPU utilization is less than 10%: sets uncore frequency to 800MHz"
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:178
msgid ""
"when CPU utilization is higher than 95%: increases uncore frequency in "
"100MHz steps, until power limit is reached"
msgstr ""

#: ../../../admin-guide/pm/intel_uncore_frequency_scaling.rst:181
msgid ""
"elc_floor_freq_khz:800000 elc_high_threshold_percent:95 "
"elc_high_threshold_enable:1 elc_low_threshold_percent:10"
msgstr ""
