# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-30 08:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:3
msgid "Memory Resource Controller(Memcg) Implementation Memo"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:5
msgid "Last Updated: 2010/2"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:7
msgid "Base Kernel Version: based on 2.6.33-rc7-mm(candidate for 34)."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:9
msgid ""
"Because VM is getting complex (one of reasons is memcg...), memcg's behavior "
"is complex. This is a document for memcg's internal behavior. Please note "
"that implementation details can be changed."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:13
msgid ""
"(*) Topics on API should be in Documentation/admin-guide/cgroup-v1/memory."
"rst)"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:16
msgid "0. How to record usage ?"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:18
msgid "2 objects are used."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:20
msgid "page_cgroup ....an object per page."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:22
msgid "Allocated at boot or memory hotplug. Freed at memory hot removal."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:24
msgid "swap_cgroup ... an entry per swp_entry."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:26
msgid "Allocated at swapon(). Freed at swapoff()."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:28
msgid ""
"The page_cgroup has USED bit and double count against a page_cgroup never "
"occurs. swap_cgroup is used only when a charged page is swapped-out."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:32
msgid "1. Charge"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:34
msgid "a page/swp_entry may be charged (usage += PAGE_SIZE) at"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:36
#: ../../../admin-guide/cgroup-v1/memcg_test.rst:55
msgid "mem_cgroup_try_charge()"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:39
msgid "2. Uncharge"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:41
msgid "a page/swp_entry may be uncharged (usage -= PAGE_SIZE) by"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:43
msgid "mem_cgroup_uncharge()"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:44
msgid "Called when a page's refcount goes down to 0."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:46
msgid "mem_cgroup_uncharge_swap()"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:47
msgid ""
"Called when swp_entry's refcnt goes down to 0. A charge against swap "
"disappears."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:51
msgid "3. charge-commit-cancel"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:53
msgid "Memcg pages are charged in two steps:"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:56
msgid "mem_cgroup_commit_charge() or mem_cgroup_cancel_charge()"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:58
msgid ""
"At try_charge(), there are no flags to say \"this page is charged\". at this "
"point, usage += PAGE_SIZE."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:61
msgid "At commit(), the page is associated with the memcg."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:63
msgid "At cancel(), simply usage -= PAGE_SIZE."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:65
msgid "Under below explanation, we assume CONFIG_SWAP=y."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:68
msgid "4. Anonymous"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:70
msgid "Anonymous page is newly allocated at"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:71
msgid "page fault into MAP_ANONYMOUS mapping."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:72
msgid "Copy-On-Write."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:74
msgid ""
"4.1 Swap-in. At swap-in, the page is taken from swap-cache. There are 2 "
"cases."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:77
msgid "If the SwapCache is newly allocated and read, it has no charges."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:78
msgid ""
"If the SwapCache has been mapped by processes, it has been charged already."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:81
msgid "4.2 Swap-out. At swap-out, typical state transition is below."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:84
msgid "add to swap cache. (marked as SwapCache) swp_entry's refcnt += 1."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:86
msgid "fully unmapped. swp_entry's refcnt += # of ptes."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:88
msgid "write back to swap."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:89
msgid ""
"delete from swap cache. (remove from SwapCache) swp_entry's refcnt -= 1."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:93
msgid ""
"Finally, at task exit, (e) zap_pte() is called and swp_entry's refcnt -=1 -> "
"0."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:97
msgid "5. Page Cache"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:99
msgid "Page Cache is charged at - filemap_add_folio()."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:102
msgid "The logic is very clear. (About migration, see below)"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:104
msgid "Note:"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:105
msgid ""
"__filemap_remove_folio() is called by filemap_remove_folio() and "
"__remove_mapping()."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:109
msgid "6. Shmem(tmpfs) Page Cache"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:111
msgid ""
"The best way to understand shmem's page state transition is to read mm/shmem."
"c."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:114
msgid ""
"But brief explanation of the behavior of memcg around shmem will be helpful "
"to understand the logic."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:117
msgid "Shmem's page (just leaf page, not direct/indirect block) can be on"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:119
msgid "radix-tree of shmem's inode."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:120
msgid "SwapCache."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:121
msgid "Both on radix-tree and SwapCache. This happens at swap-in and swap-out,"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:124
msgid "It's charged when..."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:126
msgid "A new page is added to shmem's radix-tree."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:127
msgid "A swp page is read. (move a charge from swap_cgroup to page_cgroup)"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:130
msgid "7. Page Migration"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:132
msgid "mem_cgroup_migrate()"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:135
msgid "8. LRU"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:136
msgid ""
"Each memcg has its own vector of LRUs (inactive anon, active anon, inactive "
"file, active file, unevictable) of pages from each node, each LRU handled "
"under a single lru_lock for that memcg and node."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:141
msgid "9. Typical Tests."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:143
msgid "Tests for racy cases."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:146
msgid "9.1 Small limit to memcg."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:148
msgid ""
"When you do test to do racy case, it's good test to set memcg's limit to be "
"very small rather than GB. Many races found in the test under xKB or xxMB "
"limits."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:152
msgid ""
"(Memory behavior under GB and Memory behavior under MB shows very different "
"situation.)"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:156
msgid "9.2 Shmem"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:158
msgid ""
"Historically, memcg's shmem handling was poor and we saw some amount of "
"troubles here. This is because shmem is page-cache but can be SwapCache. "
"Test with shmem/tmpfs is always good test."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:163
msgid "9.3 Migration"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:165
msgid ""
"For NUMA, migration is an another special case. To do easy test, cpuset is "
"useful. Following is a sample script to do migration::"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:179
msgid ""
"In above set, when you moves a task from 01 to 02, page migration to node 0 "
"to node 1 will occur. Following is a script to migrate all under cpuset.::"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:201
msgid "9.4 Memory hotplug"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:203
msgid "memory hotplug test is one of good test."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:205
msgid "to offline memory, do following::"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:209
msgid "(XXX is the place of memory)"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:211
msgid "This is an easy way to test page migration, too."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:214
msgid "9.5 nested cgroups"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:216
msgid "Use tests like the following for testing nested cgroups::"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:225
msgid "create/delete following groups at random while jobs are running::"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:231
msgid "running new jobs in new group is also good."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:234
msgid "9.6 Mount with other subsystems"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:236
msgid ""
"Mounting with other subsystems is a good test because there is a race and "
"lock dependency with other cgroup subsystems."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:239
msgid "example::"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:243
msgid "and do task move, mkdir, rmdir etc...under this."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:246
msgid "9.7 swapoff"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:248
msgid ""
"Besides management of swap is one of complicated parts of memcg, call path "
"of swap-in at swapoff is not same as usual swap-in path.. It's worth to be "
"tested explicitly."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:252
msgid "For example, test like following is good:"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:254
#: ../../../admin-guide/cgroup-v1/memcg_test.rst:303
msgid "(Shell-A)::"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:261
msgid "Run malloc(100M) program under this. You'll see 60M of swaps."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:263
#: ../../../admin-guide/cgroup-v1/memcg_test.rst:310
msgid "(Shell-B)::"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:270
msgid "Of course, tmpfs v.s. swapoff test should be tested, too."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:273
msgid "9.8 OOM-Killer"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:275
msgid ""
"Out-of-memory caused by memcg's limit will kill tasks under the memcg. When "
"hierarchy is used, a task under hierarchy will be killed by the kernel."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:279
msgid ""
"In this case, panic_on_oom shouldn't be invoked and tasks in other groups "
"shouldn't be killed."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:282
msgid "It's not difficult to cause OOM under memcg as following."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:284
msgid "Case A) when you can swapoff::"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:289
#: ../../../admin-guide/cgroup-v1/memcg_test.rst:296
msgid "run 51M of malloc"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:291
msgid "Case B) when you use mem+swap limitation::"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:299
msgid "9.9 Move charges at task migration"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:301
msgid "Charges associated with a task can be moved along with task migration."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:308
msgid "run some programs which uses some amount of memory in /cgroup/A."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:316
msgid ""
"You can see charges have been moved by reading ``*.usage_in_bytes`` or "
"memory.stat of both A and B."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:319
msgid ""
"See 8.2 of Documentation/admin-guide/cgroup-v1/memory.rst to see what value "
"should be written to move_charge_at_immigrate."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:323
msgid "9.10 Memory thresholds"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:325
msgid ""
"Memory controller implements memory thresholds using cgroups notification "
"API. You can use tools/cgroup/cgroup_event_listener.c to test it."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:328
msgid "(Shell-A) Create cgroup and run event listener::"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:333
msgid "(Shell-B) Add task to cgroup and try to allocate and free memory::"
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:339
msgid ""
"You will see message from cgroup_event_listener every time you cross the "
"thresholds."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:342
msgid "Use /cgroup/A/memory.memsw.usage_in_bytes to test memsw thresholds."
msgstr ""

#: ../../../admin-guide/cgroup-v1/memcg_test.rst:344
msgid "It's good idea to test root cgroup as well."
msgstr ""
