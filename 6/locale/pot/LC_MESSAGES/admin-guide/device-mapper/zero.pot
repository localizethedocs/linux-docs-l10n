# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-30 08:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../admin-guide/device-mapper/zero.rst:3
msgid "dm-zero"
msgstr ""

#: ../../../admin-guide/device-mapper/zero.rst:5
msgid ""
"Device-Mapper's \"zero\" target provides a block-device that always returns "
"zero'd data on reads and silently drops writes. This is similar behavior to /"
"dev/zero, but as a block-device instead of a character-device."
msgstr ""

#: ../../../admin-guide/device-mapper/zero.rst:9
msgid "Dm-zero has no target-specific parameters."
msgstr ""

#: ../../../admin-guide/device-mapper/zero.rst:11
msgid ""
"One very interesting use of dm-zero is for creating \"sparse\" devices in "
"conjunction with dm-snapshot. A sparse device reports a device-size larger "
"than the amount of actual storage space available for that device. A user "
"can write data anywhere within the sparse device and read it back like a "
"normal device. Reads to previously unwritten areas will return a zero'd "
"buffer. When enough data has been written to fill up the actual storage "
"space, the sparse device is deactivated. This can be very useful for testing "
"device and filesystem limitations."
msgstr ""

#: ../../../admin-guide/device-mapper/zero.rst:20
msgid ""
"To create a sparse device, start by creating a dm-zero device that's the "
"desired size of the sparse device. For this example, we'll assume a 10TB "
"sparse device::"
msgstr ""

#: ../../../admin-guide/device-mapper/zero.rst:27
msgid ""
"Then create a snapshot of the zero device, using any available block-device "
"as the COW device. The size of the COW device will determine the amount of "
"real space available to the sparse device. For this example, we'll assume /"
"dev/sdb1 is an available 10GB partition::"
msgstr ""

#: ../../../admin-guide/device-mapper/zero.rst:35
msgid ""
"This will create a 10TB sparse device called /dev/mapper/sparse1 that has "
"10GB of actual storage space available. If more than 10GB of data is written "
"to this device, it will start returning I/O errors."
msgstr ""
