# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-30 08:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../filesystems/spufs/spu_create.rst:5
msgid "spu_create"
msgstr ""

#: ../../../filesystems/spufs/spu_create.rst:8
msgid "Name"
msgstr ""

#: ../../../filesystems/spufs/spu_create.rst:9
msgid "spu_create - create a new spu context"
msgstr ""

#: ../../../filesystems/spufs/spu_create.rst:13
msgid "Synopsis"
msgstr ""

#: ../../../filesystems/spufs/spu_create.rst:23
msgid "Description"
msgstr ""

#: ../../../filesystems/spufs/spu_create.rst:24
msgid ""
"The  spu_create  system call is used on PowerPC machines that implement the "
"Cell Broadband Engine Architecture in order to  access  Synergistic "
"Processor  Units (SPUs). It creates a new logical context for an SPU in "
"pathname and returns a handle to associated  with  it.   pathname  must "
"point  to  a  non-existing directory in the mount point of the SPU file "
"system (spufs).  When spu_create is successful, a directory  gets  cre- ated "
"on pathname and it is populated with files."
msgstr ""

#: ../../../filesystems/spufs/spu_create.rst:32
msgid ""
"The  returned  file  handle can only be passed to spu_run(2) or closed, "
"other operations are not defined on it. When it is closed, all  associ- "
"ated  directory entries in spufs are removed. When the last file handle "
"pointing either inside  of  the  context  directory  or  to  this  file "
"descriptor is closed, the logical SPU context is destroyed."
msgstr ""

#: ../../../filesystems/spufs/spu_create.rst:38
msgid ""
"The  parameter flags can be zero or any bitwise or'd combination of the "
"following constants:"
msgstr ""

#: ../../../filesystems/spufs/spu_create.rst:41
msgid "SPU_RAWIO"
msgstr ""

#: ../../../filesystems/spufs/spu_create.rst:42
msgid ""
"Allow mapping of some of the hardware registers of the SPU  into user space. "
"This flag requires the CAP_SYS_RAWIO capability, see capabilities(7)."
msgstr ""

#: ../../../filesystems/spufs/spu_create.rst:46
msgid ""
"The mode parameter specifies the permissions used for creating the  new "
"directory  in  spufs.   mode is modified with the user's umask(2) value and "
"then used for both the directory and the files contained in it. The file "
"permissions mask out some more bits of mode because they typically support "
"only read or write access. See stat(2) for a full list  of  the possible "
"mode values."
msgstr ""

#: ../../../filesystems/spufs/spu_create.rst:55
msgid "Return Value"
msgstr ""

#: ../../../filesystems/spufs/spu_create.rst:56
msgid ""
"spu_create  returns a new file descriptor. It may return -1 to indicate an "
"error condition and set errno to  one  of  the  error  codes  listed below."
msgstr ""

#: ../../../filesystems/spufs/spu_create.rst:62
msgid "Errors"
msgstr ""

#: ../../../filesystems/spufs/spu_create.rst:63
msgid "EACCES"
msgstr ""

#: ../../../filesystems/spufs/spu_create.rst:64
msgid "The  current  user does not have write access on the spufs mount point."
msgstr ""

#: ../../../filesystems/spufs/spu_create.rst:67
msgid "EEXIST An SPU context already exists at the given path name."
msgstr ""

#: ../../../filesystems/spufs/spu_create.rst:69
msgid "EFAULT pathname is not a valid string pointer in  the  current  address"
msgstr ""

#: ../../../filesystems/spufs/spu_create.rst:70
msgid "space."
msgstr ""

#: ../../../filesystems/spufs/spu_create.rst:72
msgid "EINVAL pathname is not a directory in the spufs mount point."
msgstr ""

#: ../../../filesystems/spufs/spu_create.rst:74
msgid "ELOOP  Too many symlinks were found while resolving pathname."
msgstr ""

#: ../../../filesystems/spufs/spu_create.rst:76
msgid "EMFILE The process has reached its maximum open file limit."
msgstr ""

#: ../../../filesystems/spufs/spu_create.rst:78
msgid "ENAMETOOLONG"
msgstr ""

#: ../../../filesystems/spufs/spu_create.rst:79
msgid "pathname was too long."
msgstr ""

#: ../../../filesystems/spufs/spu_create.rst:81
msgid "ENFILE The system has reached the global open file limit."
msgstr ""

#: ../../../filesystems/spufs/spu_create.rst:83
msgid "ENOENT Part of pathname could not be resolved."
msgstr ""

#: ../../../filesystems/spufs/spu_create.rst:85
msgid "ENOMEM The kernel could not allocate all resources required."
msgstr ""

#: ../../../filesystems/spufs/spu_create.rst:87
msgid "ENOSPC There  are  not  enough  SPU resources available to create a new"
msgstr ""

#: ../../../filesystems/spufs/spu_create.rst:88
msgid ""
"context or the user specific limit for the number  of  SPU  con- texts has "
"been reached."
msgstr ""

#: ../../../filesystems/spufs/spu_create.rst:91
msgid "ENOSYS the functionality is not provided by the current system, because"
msgstr ""

#: ../../../filesystems/spufs/spu_create.rst:92
msgid ""
"either the hardware does not provide SPUs or the spufs module is not loaded."
msgstr ""

#: ../../../filesystems/spufs/spu_create.rst:95
msgid "ENOTDIR"
msgstr ""

#: ../../../filesystems/spufs/spu_create.rst:96
msgid "A part of pathname is not a directory."
msgstr ""

#: ../../../filesystems/spufs/spu_create.rst:101
msgid "Notes"
msgstr ""

#: ../../../filesystems/spufs/spu_create.rst:102
msgid ""
"spu_create  is  meant  to  be used from libraries that implement a more "
"abstract interface to SPUs, not to be used from  regular  applications. See  "
"http://www.bsc.es/projects/deepcomputing/linuxoncell/ for the rec- ommended "
"libraries."
msgstr ""

#: ../../../filesystems/spufs/spu_create.rst:109
msgid "Files"
msgstr ""

#: ../../../filesystems/spufs/spu_create.rst:110
msgid ""
"pathname must point to a location beneath the mount point of spufs.  By "
"convention, it gets mounted in /spu."
msgstr ""

#: ../../../filesystems/spufs/spu_create.rst:115
msgid "Conforming to"
msgstr ""

#: ../../../filesystems/spufs/spu_create.rst:116
msgid ""
"This call is Linux specific and only implemented by the ppc64 architec- "
"ture. Programs using this system call are not portable."
msgstr ""

#: ../../../filesystems/spufs/spu_create.rst:121
msgid "Bugs"
msgstr ""

#: ../../../filesystems/spufs/spu_create.rst:122
msgid "The code does not yet fully implement all features lined out here."
msgstr ""

#: ../../../filesystems/spufs/spu_create.rst:126
msgid "Author"
msgstr ""

#: ../../../filesystems/spufs/spu_create.rst:127
msgid "Arnd Bergmann <arndb@de.ibm.com>"
msgstr ""

#: ../../../filesystems/spufs/spu_create.rst:130
msgid "See Also"
msgstr ""

#: ../../../filesystems/spufs/spu_create.rst:131
msgid "capabilities(7), close(2), spu_run(2), spufs(7)"
msgstr ""
