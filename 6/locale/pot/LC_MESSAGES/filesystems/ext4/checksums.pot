# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../filesystems/ext4/checksums.rst:4
msgid "Checksums"
msgstr ""

#: ../../../filesystems/ext4/checksums.rst:6
msgid ""
"Starting in early 2012, metadata checksums were added to all major ext4 and "
"jbd2 data structures. The associated feature flag is metadata_csum. The "
"desired checksum algorithm is indicated in the superblock, though as of "
"October 2012 the only supported algorithm is crc32c. Some data structures "
"did not have space to fit a full 32-bit checksum, so only the lower 16 bits "
"are stored. Enabling the 64bit feature increases the data structure size so "
"that full 32-bit checksums can be stored for many data structures. However, "
"existing 32-bit filesystems cannot be extended to enable 64bit mode, at "
"least not without the experimental resize2fs patches to do so."
msgstr ""

#: ../../../filesystems/ext4/checksums.rst:17
msgid ""
"Existing filesystems can have checksumming added by running ``tune2fs -O "
"metadata_csum`` against the underlying device. If tune2fs encounters "
"directory blocks that lack sufficient empty space to add a checksum, it will "
"request that you run ``e2fsck -D`` to have the directories rebuilt with "
"checksums. This has the added benefit of removing slack space from the "
"directory files and rebalancing the htree indexes. If you _ignore_ this "
"step, your directories will not be protected by a checksum!"
msgstr ""

#: ../../../filesystems/ext4/checksums.rst:26
msgid ""
"The following table describes the data elements that go into each type of "
"checksum. The checksum function is whatever the superblock describes (crc32c "
"as of October 2013) unless noted otherwise."
msgstr ""

#: ../../../filesystems/ext4/checksums.rst:34
msgid "Metadata"
msgstr ""

#: ../../../filesystems/ext4/checksums.rst:35
msgid "Length"
msgstr ""

#: ../../../filesystems/ext4/checksums.rst:36
msgid "Ingredients"
msgstr ""

#: ../../../filesystems/ext4/checksums.rst:37
msgid "Superblock"
msgstr ""

#: ../../../filesystems/ext4/checksums.rst:38
#: ../../../filesystems/ext4/checksums.rst:42
#: ../../../filesystems/ext4/checksums.rst:45
#: ../../../filesystems/ext4/checksums.rst:49
#: ../../../filesystems/ext4/checksums.rst:53
#: ../../../filesystems/ext4/checksums.rst:57
#: ../../../filesystems/ext4/checksums.rst:65
msgid "__le32"
msgstr ""

#: ../../../filesystems/ext4/checksums.rst:39
msgid ""
"The entire superblock up to the checksum field. The UUID lives inside the "
"superblock."
msgstr ""

#: ../../../filesystems/ext4/checksums.rst:41
msgid "MMP"
msgstr ""

#: ../../../filesystems/ext4/checksums.rst:43
msgid "UUID + the entire MMP block up to the checksum field."
msgstr ""

#: ../../../filesystems/ext4/checksums.rst:44
msgid "Extended Attributes"
msgstr ""

#: ../../../filesystems/ext4/checksums.rst:46
msgid ""
"UUID + the entire extended attribute block. The checksum field is set to "
"zero."
msgstr ""

#: ../../../filesystems/ext4/checksums.rst:48
msgid "Directory Entries"
msgstr ""

#: ../../../filesystems/ext4/checksums.rst:50
msgid ""
"UUID + inode number + inode generation + the directory block up to the fake "
"entry enclosing the checksum field."
msgstr ""

#: ../../../filesystems/ext4/checksums.rst:52
msgid "HTREE Nodes"
msgstr ""

#: ../../../filesystems/ext4/checksums.rst:54
msgid ""
"UUID + inode number + inode generation + all valid extents + HTREE tail. The "
"checksum field is set to zero."
msgstr ""

#: ../../../filesystems/ext4/checksums.rst:56
msgid "Extents"
msgstr ""

#: ../../../filesystems/ext4/checksums.rst:58
msgid ""
"UUID + inode number + inode generation + the entire extent block up to the "
"checksum field."
msgstr ""

#: ../../../filesystems/ext4/checksums.rst:60
msgid "Bitmaps"
msgstr ""

#: ../../../filesystems/ext4/checksums.rst:61
msgid "__le32 or __le16"
msgstr ""

#: ../../../filesystems/ext4/checksums.rst:62
msgid ""
"UUID + the entire bitmap. Checksums are stored in the group descriptor, and "
"truncated if the group descriptor size is 32 bytes (i.e. ^64bit)"
msgstr ""

#: ../../../filesystems/ext4/checksums.rst:64
msgid "Inodes"
msgstr ""

#: ../../../filesystems/ext4/checksums.rst:66
msgid ""
"UUID + inode number + inode generation + the entire inode. The checksum "
"field is set to zero. Each inode has its own checksum."
msgstr ""

#: ../../../filesystems/ext4/checksums.rst:68
msgid "Group Descriptors"
msgstr ""

#: ../../../filesystems/ext4/checksums.rst:69
msgid "__le16"
msgstr ""

#: ../../../filesystems/ext4/checksums.rst:70
msgid ""
"If metadata_csum, then UUID + group number + the entire descriptor; else if "
"gdt_csum, then crc16(UUID + group number + the entire descriptor). In all "
"cases, only the lower 16 bits are stored."
msgstr ""
