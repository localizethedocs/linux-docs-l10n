# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../networking/oa-tc6-framework.rst:5
msgid ""
"OPEN Alliance 10BASE-T1x MAC-PHY Serial Interface (TC6) Framework Support"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:8
msgid "Introduction"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:10
msgid ""
"The IEEE 802.3cg project defines two 10 Mbit/s PHYs operating over a single "
"pair of conductors. The 10BASE-T1L (Clause 146) is a long reach PHY "
"supporting full duplex point-to-point operation over 1 km of single balanced "
"pair of conductors. The 10BASE-T1S (Clause 147) is a short reach PHY "
"supporting full / half duplex point-to-point operation over 15 m of single "
"balanced pair of conductors, or half duplex multidrop bus operation over 25 "
"m of single balanced pair of conductors."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:18
msgid ""
"Furthermore, the IEEE 802.3cg project defines the new Physical Layer "
"Collision Avoidance (PLCA) Reconciliation Sublayer (Clause 148) meant to "
"provide improved determinism to the CSMA/CD media access method. PLCA works "
"in conjunction with the 10BASE-T1S PHY operating in multidrop mode."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:23
msgid ""
"The aforementioned PHYs are intended to cover the low-speed / low-cost "
"applications in industrial and automotive environment. The large number of "
"pins (16) required by the MII interface, which is specified by the IEEE "
"802.3 in Clause 22, is one of the major cost factors that need to be "
"addressed to fulfil this objective."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:29
msgid ""
"The MAC-PHY solution integrates an IEEE Clause 4 MAC and a 10BASE-T1x PHY "
"exposing a low pin count Serial Peripheral Interface (SPI) to the host "
"microcontroller. This also enables the addition of Ethernet functionality to "
"existing low-end microcontrollers which do not integrate a MAC controller."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:36
msgid "Overview"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:38
msgid ""
"The MAC-PHY is specified to carry both data (Ethernet frames) and control "
"(register access) transactions over a single full-duplex serial peripheral "
"interface."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:43
msgid "Protocol Overview"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:45
msgid ""
"Two types of transactions are defined in the protocol: data transactions for "
"Ethernet frame transfers and control transactions for register read/write "
"transfers. A chunk is the basic element of data transactions and is composed "
"of 4 bytes of overhead plus 64 bytes of payload size for each chunk. "
"Ethernet frames are transferred over one or more data chunks. Control "
"transactions consist of one or more register read/write control commands."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:53
msgid ""
"SPI transactions are initiated by the SPI host with the assertion of CSn low "
"to the MAC-PHY and ends with the deassertion of CSn high. In between each "
"SPI transaction, the SPI host may need time for additional processing and to "
"setup the next SPI data or control transaction."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:58
msgid ""
"SPI data transactions consist of an equal number of transmit (TX) and "
"receive (RX) chunks. Chunks in both transmit and receive directions may or "
"may not contain valid frame data independent from each other, allowing for "
"the simultaneous transmission and reception of different length frames."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:64
msgid ""
"Each transmit data chunk begins with a 32-bit data header followed by a data "
"chunk payload on MOSI. The data header indicates whether transmit frame data "
"is present and provides the information to determine which bytes of the "
"payload contain valid frame data."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:69
msgid ""
"In parallel, receive data chunks are received on MISO. Each receive data "
"chunk consists of a data chunk payload ending with a 32-bit data footer. The "
"data footer indicates if there is receive frame data present within the "
"payload or not and provides the information to determine which bytes of the "
"payload contain valid frame data."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:76
msgid "Reference"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:78
msgid "10BASE-T1x MAC-PHY Serial Interface Specification,"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:80
msgid ""
"Link: https://opensig.org/download/document/OPEN_Alliance_10BASET1x_MAC-"
"PHY_Serial_Interface_V1.1.pdf"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:83
msgid "Hardware Architecture"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:95
msgid "Software Architecture"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:125
msgid "Implementation"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:128
msgid "MAC Driver"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:130
msgid "Probed by SPI subsystem."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:132
msgid "Initializes OA TC6 framework for the MAC-PHY."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:134
msgid "Registers and configures the network device."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:136
msgid "Sends the tx ethernet frames from n/w subsystem to OA TC6 framework."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:139
msgid "OPEN Alliance TC6 Framework"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:141
msgid "Initializes PHYLIB interface."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:143
msgid "Registers mac-phy interrupt."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:145
msgid ""
"Performs mac-phy register read/write operation using the control transaction "
"protocol specified in the OPEN Alliance 10BASE-T1x MAC-PHY Serial Interface "
"specification."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:149
msgid ""
"Performs Ethernet frames transaction using the data transaction protocol for "
"Ethernet frames specified in the OPEN Alliance 10BASE-T1x MAC-PHY Serial "
"Interface specification."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:153
msgid ""
"Forwards the received Ethernet frame from 10Base-T1x MAC-PHY to n/w "
"subsystem."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:157
msgid "Data Transaction"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:159
msgid ""
"The Ethernet frames that are typically transferred from the SPI host to the "
"MAC-PHY will be converted into multiple transmit data chunks. Each transmit "
"data chunk will have a 4 bytes header which contains the information needed "
"to determine the validity and the location of the transmit frame data within "
"the 64 bytes data chunk payload."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:174
msgid "4 bytes header contains the below fields,"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:176
#: ../../../networking/oa-tc6-framework.rst:387
msgid ""
"DNC (Bit 31) - Data-Not-Control flag. This flag specifies the type of SPI"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:177
msgid ""
"transaction. For TX data chunks, this bit shall be ’1’. 0 - Control command "
"1 - Data chunk"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:181
msgid "SEQ (Bit 30) - Data Chunk Sequence. This bit is used to indicate an"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:182
msgid "even/odd transmit data chunk sequence to the MAC-PHY."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:184
msgid ""
"NORX (Bit 29) - No Receive flag. The SPI host may set this bit to prevent"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:185
msgid ""
"the MAC-PHY from conveying RX data on the MISO for the current chunk (DV = 0 "
"in the footer), indicating that the host would not process it. Typically, "
"the SPI host should set NORX = 0 indicating that it will accept and process "
"any receive frame data within the current chunk."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:191
msgid "RSVD (Bit 28..24) - Reserved: All reserved bits shall be ‘0’."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:193
#: ../../../networking/oa-tc6-framework.rst:291
msgid ""
"VS (Bit 23..22) - Vendor Specific. These bits are implementation specific."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:194
msgid ""
"If the MAC-PHY does not implement these bits, the host shall set them to ‘0’."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:197
msgid "DV (Bit 21) - Data Valid flag. The SPI host uses this bit to indicate"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:198
msgid ""
"whether the current chunk contains valid transmit frame data (DV = 1) or not "
"(DV = 0). When ‘0’, the MAC-PHY ignores the chunk payload. Note that the "
"receive path is unaffected by the setting of the DV bit in the data header."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:203
msgid ""
"SV (Bit 20) - Start Valid flag. The SPI host shall set this bit when the"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:204
msgid ""
"beginning of an Ethernet frame is present in the current transmit data chunk "
"payload. Otherwise, this bit shall be zero. This bit is not to be confused "
"with the Start-of-Frame Delimiter (SFD) byte described in IEEE 802.3 [2]."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:209
msgid "SWO (Bit 19..16) - Start Word Offset. When SV = 1, this field shall"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:210
msgid ""
"contain the 32-bit word offset into the transmit data chunk payload that "
"points to the start of a new Ethernet frame to be transmitted. The host "
"shall write this field as zero when SV = 0."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:215
msgid "RSVD (Bit 15) - Reserved: All reserved bits shall be ‘0’."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:217
msgid ""
"EV (Bit 14) - End Valid flag. The SPI host shall set this bit when the end"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:218
msgid ""
"of an Ethernet frame is present in the current transmit data chunk payload. "
"Otherwise, this bit shall be zero."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:221
msgid ""
"EBO (Bit 13..8) - End Byte Offset. When EV = 1, this field shall contain"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:222
msgid ""
"the byte offset into the transmit data chunk payload that points to the last "
"byte of the Ethernet frame to transmit. This field shall be zero when EV = 0."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:226
msgid ""
"TSC (Bit 7..6) - Timestamp Capture. Request a timestamp capture when the"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:227
msgid ""
"frame is transmitted onto the network. 00 - Do not capture a timestamp 01 - "
"Capture timestamp into timestamp capture register A 10 - Capture timestamp "
"into timestamp capture register B 11 - Capture timestamp into timestamp "
"capture register C"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:233
msgid "RSVD (Bit 5..1) - Reserved: All reserved bits shall be ‘0’."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:235
msgid ""
"P (Bit 0) - Parity. Parity bit calculated over the transmit data header."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:236
#: ../../../networking/oa-tc6-framework.rst:345
#: ../../../networking/oa-tc6-framework.rst:420
msgid "Method used is odd parity."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:238
msgid ""
"The number of buffers available in the MAC-PHY to store the incoming "
"transmit data chunk payloads is represented as transmit credits. The "
"available transmit credits in the MAC-PHY can be read either from the Buffer "
"Status Register or footer (Refer below for the footer info) received from "
"the MAC-PHY. The SPI host should not write more data chunks than the "
"available transmit credits as this will lead to transmit buffer overflow "
"error."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:246
msgid ""
"In case the previous data footer had no transmit credits available and once "
"the transmit credits become available for transmitting transmit data chunks, "
"the MAC-PHY interrupt is asserted to SPI host. On reception of the first "
"data header this interrupt will be deasserted and the received footer for "
"the first data chunk will have the transmit credits available information."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:253
msgid ""
"The Ethernet frames that are typically transferred from MAC-PHY to SPI host "
"will be sent as multiple receive data chunks. Each receive data chunk will "
"have 64 bytes of data chunk payload followed by 4 bytes footer which "
"contains the information needed to determine the validity and the location "
"of the receive frame data within the 64 bytes data chunk payload."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:268
msgid "4 bytes footer contains the below fields,"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:270
msgid "EXST (Bit 31) - Extended Status. This bit is set when any bit in the"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:271
msgid "STATUS0 or STATUS1 registers are set and not masked."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:273
msgid ""
"HDRB (Bit 30) - Received Header Bad. When set, indicates that the MAC-PHY"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:274
msgid "received a control or data header with a parity error."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:276
msgid "SYNC (Bit 29) - Configuration Synchronized flag. This bit reflects the"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:277
msgid ""
"state of the SYNC bit in the CONFIG0 configuration register (see Table 12). "
"A zero indicates that the MAC-PHY configuration may not be as expected by "
"the SPI host. Following configuration, the SPI host sets the corresponding "
"bitin the configuration register which is reflected in this field."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:284
msgid "RCA (Bit 28..24) - Receive Chunks Available. The RCA field indicates to"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:285
msgid ""
"the SPI host the minimum number of additional receive data chunks of frame "
"data that are available for reading beyond the current receive data chunk. "
"This field is zero when there is no receive frame data pending in the MAC-"
"PHY’s buffer for reading."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:292
msgid "If not implemented, the MAC-PHY shall set these bits to ‘0’."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:295
msgid "DV (Bit 21) - Data Valid flag. The MAC-PHY uses this bit to indicate"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:296
msgid ""
"whether the current receive data chunk contains valid receive frame data (DV "
"= 1) or not (DV = 0). When ‘0’, the SPI host shall ignore the chunk payload."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:300
msgid ""
"SV (Bit 20) - Start Valid flag. The MAC-PHY sets this bit when the current"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:301
msgid ""
"chunk payload contains the start of an Ethernet frame. Otherwise, this bit "
"is zero. The SV bit is not to be confused with the Start-of-Frame Delimiter "
"(SFD) byte described in IEEE 802.3 [2]."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:306
msgid ""
"SWO (Bit 19..16) - Start Word Offset. When SV = 1, this field contains the"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:307
msgid ""
"32-bit word offset into the receive data chunk payload containing the first "
"byte of a new received Ethernet frame. When a receive timestamp has been "
"added to the beginning of the received Ethernet frame (RTSA = 1) then SWO "
"points to the most significant byte of the timestamp. This field will be "
"zero when SV = 0."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:314
msgid "FD (Bit 15) - Frame Drop. When set, this bit indicates that the MAC has"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:315
msgid ""
"detected a condition for which the SPI host should drop the received "
"Ethernet frame. This bit is only valid at the end of a received Ethernet "
"frame (EV = 1) and shall be zero at all other times."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:320
msgid ""
"EV (Bit 14) - End Valid flag. The MAC-PHY sets this bit when the end of a"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:321
msgid "received Ethernet frame is present in this receive data chunk payload."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:324
msgid "EBO (Bit 13..8) - End Byte Offset: When EV = 1, this field contains the"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:325
msgid ""
"byte offset into the receive data chunk payload that locates the last byte "
"of the received Ethernet frame. This field is zero when EV = 0."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:329
msgid ""
"RTSA (Bit 7) - Receive Timestamp Added. This bit is set when a 32-bit or"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:330
msgid ""
"64-bit timestamp has been added to the beginning of the received Ethernet "
"frame. The MAC-PHY shall set this bit to zero when SV = 0."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:334
msgid "RTSP (Bit 6) - Receive Timestamp Parity. Parity bit calculated over the"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:335
msgid ""
"32-bit/64-bit timestamp added to the beginning of the received Ethernet "
"frame. Method used is odd parity. The MAC-PHY shall set this bit to zero "
"when RTSA = 0."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:339
msgid ""
"TXC (Bit 5..1) - Transmit Credits. This field contains the minimum number"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:340
msgid ""
"of transmit data chunks of frame data that the SPI host can write in a "
"single transaction without incurring a transmit buffer overflow error."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:344
msgid "P (Bit 0) - Parity. Parity bit calculated over the receive data footer."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:347
msgid ""
"SPI host will initiate the data receive transaction based on the receive "
"chunks available in the MAC-PHY which is provided in the receive chunk "
"footer (RCA - Receive Chunks Available). SPI host will create data invalid "
"transmit data chunks (empty chunks) or data valid transmit data chunks in "
"case there are valid Ethernet frames to transmit to the MAC-PHY. The receive "
"chunks available in MAC-PHY can be read either from the Buffer Status "
"Register or footer."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:355
msgid ""
"In case the previous data footer had no receive data chunks available and "
"once the receive data chunks become available again for reading, the MAC-PHY "
"interrupt is asserted to SPI host. On reception of the first data header "
"this interrupt will be deasserted and the received footer for the first data "
"chunk will have the receive chunks available information."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:362
msgid "MAC-PHY Interrupt"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:364
msgid ""
"The MAC-PHY interrupt is asserted when the following conditions are met."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:366
msgid ""
"Receive chunks available - This interrupt is asserted when the previous data "
"footer had no receive data chunks available and once the receive data chunks "
"become available for reading. On reception of the first data header this "
"interrupt will be deasserted."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:371
msgid ""
"Transmit chunk credits available - This interrupt is asserted when the "
"previous data footer indicated no transmit credits available and once the "
"transmit credits become available for transmitting transmit data chunks. On "
"reception of the first data header this interrupt will be deasserted."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:376
msgid ""
"Extended status event - This interrupt is asserted when the previous data "
"footer indicated no extended status and once the extended event become "
"available. In this case the host should read status #0 register to know the "
"corresponding error/event. On reception of the first data header this "
"interrupt will be deasserted."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:383
msgid "Control Transaction"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:385
msgid "4 bytes control header contains the below fields,"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:388
msgid ""
"transaction. For control commands, this bit shall be ‘0’. 0 - Control "
"command 1 - Data chunk"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:392
msgid "HDRB (Bit 30) - Received Header Bad. When set by the MAC-PHY, indicates"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:393
msgid ""
"that a header was received with a parity error. The SPI host should always "
"clear this bit. The MAC-PHY ignores the HDRB value sent by the SPI host on "
"MOSI."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:397
msgid ""
"WNR (Bit 29) - Write-Not-Read. This bit indicates if data is to be written"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:398
msgid "to registers (when set) or read from registers (when clear)."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:401
msgid ""
"AID (Bit 28) - Address Increment Disable. When clear, the address will be"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:402
msgid ""
"automatically post-incremented by one following each register read or write. "
"When set, address auto increment is disabled allowing successive reads and "
"writes to occur at the same register address."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:407
msgid "MMS (Bit 27..24) - Memory Map Selector. This field selects the specific"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:408
msgid "register memory map to access."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:410
msgid "ADDR (Bit 23..8) - Address. Address of the first register within the"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:411
msgid "selected memory map to access."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:413
msgid ""
"LEN (Bit 7..1) - Length. Specifies the number of registers to read/write."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:414
msgid ""
"This field is interpreted as the number of registers minus 1 allowing for up "
"to 128 consecutive registers read or written starting at the address "
"specified in ADDR. A length of zero shall read or write a single register."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:419
msgid ""
"P (Bit 0) - Parity. Parity bit calculated over the control command header."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:422
msgid ""
"Control transactions consist of one or more control commands. Control "
"commands are used by the SPI host to read and write registers within the MAC-"
"PHY. Each control commands are composed of a 4 bytes control command header "
"followed by register write data in case of control write command."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:427
msgid ""
"The MAC-PHY ignores the final 4 bytes of data from the SPI host at the end "
"of the control write command. The control write command is also echoed from "
"the MAC-PHY back to the SPI host to identify which register write failed in "
"case of any bus errors. The echoed Control write command will have the first "
"4 bytes unused value to be ignored by the SPI host followed by 4 bytes "
"echoed control header followed by echoed register write data. Control write "
"commands can write either a single register or multiple consecutive "
"registers. When multiple consecutive registers are written, the address is "
"automatically post-incremented by the MAC-PHY. Writing to any unimplemented "
"or undefined registers shall be ignored and yield no effect."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:439
msgid ""
"The MAC-PHY ignores all data from the SPI host following the control header "
"for the remainder of the control read command. The control read command is "
"also echoed from the MAC-PHY back to the SPI host to identify which register "
"read is failed in case of any bus errors. The echoed Control read command "
"will have the first 4 bytes of unused value to be ignored by the SPI host "
"followed by 4 bytes echoed control header followed by register read data. "
"Control read commands can read either a single register or multiple "
"consecutive registers. When multiple consecutive registers are read, the "
"address is automatically post-incremented by the MAC-PHY. Reading any "
"unimplemented or undefined registers shall return zero."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:452
msgid "Device drivers API"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:454
msgid "The include/linux/oa_tc6.h defines the following functions:"
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:459
msgid "Initialize OA TC6 lib."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:463
msgid "Free allocated OA TC6 lib."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:468
msgid "Write a single register in the MAC-PHY."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:473
msgid ""
"Writing multiple consecutive registers starting from @address in the MAC-"
"PHY. Maximum of 128 consecutive registers can be written starting at "
"@address."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:479
msgid "Read a single register in the MAC-PHY."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:484
msgid ""
"Reading multiple consecutive registers starting from @address in the MAC-"
"PHY. Maximum of 128 consecutive registers can be read starting at @address."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:490
msgid ""
"The transmit Ethernet frame in the skb is or going to be transmitted through "
"the MAC-PHY."
msgstr ""

#: ../../../networking/oa-tc6-framework.rst:495
msgid ""
"Zero align receive frame feature can be enabled to align all receive "
"ethernet frames data to start at the beginning of any receive data chunk "
"payload with a start word offset (SWO) of zero."
msgstr ""
