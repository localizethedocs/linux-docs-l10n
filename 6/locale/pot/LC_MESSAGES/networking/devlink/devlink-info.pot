# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../networking/devlink/devlink-info.rst:5
msgid "Devlink Info"
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:7
msgid ""
"The ``devlink-info`` mechanism enables device drivers to report device "
"(hardware and firmware) information in a standard, extensible fashion."
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:10
msgid "The original motivation for the ``devlink-info`` API was twofold:"
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:12
msgid ""
"making it possible to automate device and firmware management in a fleet of "
"machines in a vendor-independent fashion (see also :ref:`Documentation/"
"networking/devlink/devlink-flash.rst <devlink_flash>`);"
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:15
msgid ""
"name the per component FW versions (as opposed to the crowded ethtool "
"version string)."
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:18
msgid ""
"``devlink-info`` supports reporting multiple types of objects. Reporting "
"driver versions is generally discouraged - here, and via any other Linux API."
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:21
msgid "List of top level info objects"
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:24
#: ../../../networking/devlink/devlink-info.rst:107
msgid "Name"
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:25
#: ../../../networking/devlink/devlink-info.rst:108
msgid "Description"
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:26
msgid "``driver``"
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:27
msgid "Name of the currently used device driver, also available through sysfs."
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:29
msgid "``serial_number``"
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:30
msgid "Serial number of the device."
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:32
msgid ""
"This is usually the serial number of the ASIC, also often available in PCI "
"config space of the device in the *Device Serial Number* capability."
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:36
msgid ""
"The serial number should be unique per physical device. Sometimes the serial "
"number of the device is only 48 bits long (the length of the Ethernet MAC "
"address), and since PCI DSN is 64 bits long devices pad or encode additional "
"information into the serial number. One example is adding port ID or PCI "
"interface ID in the extra two bytes. Drivers should make sure to strip or "
"normalize any such padding or interface ID, and report only the part of the "
"serial number which uniquely identifies the hardware. In other words serial "
"number reported for two ports of the same device or on two hosts of a multi-"
"host device should be identical."
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:47
msgid "``board.serial_number``"
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:48
msgid "Board serial number of the device."
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:50
msgid ""
"This is usually the serial number of the board, often available in PCI "
"*Vital Product Data*."
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:53
msgid "``fixed``"
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:54
msgid ""
"Group for hardware identifiers, and versions of components which are not "
"field-updatable."
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:57
msgid ""
"Versions in this section identify the device design. For example, component "
"identifiers or the board version reported in the PCI VPD. Data in ``devlink-"
"info`` should be broken into the smallest logical components, e.g. PCI VPD "
"may concatenate various information to form the Part Number string, while in "
"``devlink-info`` all parts should be reported as separate items."
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:64
msgid ""
"This group must not contain any frequently changing identifiers, such as "
"serial numbers. See :ref:`Documentation/networking/devlink/devlink-flash.rst "
"<devlink_flash>` to understand why."
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:69
msgid "``running``"
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:70
msgid ""
"Group for information about currently running software/firmware. These "
"versions often only update after a reboot, sometimes device reset."
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:73
msgid "``stored``"
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:74
msgid "Group for software/firmware versions in device flash."
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:76
msgid ""
"Stored values must update to reflect changes in the flash even if reboot has "
"not yet occurred. If device is not capable of updating ``stored`` versions "
"when new software is flashed, it must not report them."
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:81
msgid ""
"Each version can be reported at most once in each version group. Firmware "
"components stored on the flash should feature in both the ``running`` and "
"``stored`` sections, if device is capable of reporting ``stored`` versions "
"(see :ref:`Documentation/networking/devlink/devlink-flash.rst "
"<devlink_flash>`). In case software/firmware components are loaded from the "
"disk (e.g. ``/lib/firmware``) only the running version should be reported "
"via the kernel API."
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:89
msgid ""
"Please note that any security versions reported via devlink are purely "
"informational. Devlink does not use a secure channel to communicate with the "
"device."
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:94
msgid "Generic Versions"
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:96
msgid ""
"It is expected that drivers use the following generic names for exporting "
"version information. If a generic name for a given component doesn't exist "
"yet, driver authors should consult existing driver-specific versions and "
"attempt reuse. As last resort, if a component is truly unique, using driver-"
"specific names is allowed, but these should be documented in the driver-"
"specific file."
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:102
msgid "All versions should try to use the following terminology:"
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:104
msgid "List of common version suffixes"
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:109
msgid "``id``, ``revision``"
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:110
msgid "Identifiers of designs and revision, mostly used for hardware versions."
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:112
msgid "``api``"
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:113
msgid ""
"Version of API between components. API items are usually of limited value to "
"the user, and can be inferred from other versions by the vendor, so adding "
"API versions is generally discouraged as noise."
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:117
msgid "``bundle_id``"
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:118
msgid ""
"Identifier of a distribution package which was flashed onto the device. This "
"is an attribute of a firmware package which covers multiple versions for "
"ease of managing firmware images (see :ref:`Documentation/networking/devlink/"
"devlink-flash.rst <devlink_flash>`)."
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:123
msgid ""
"``bundle_id`` can appear in both ``running`` and ``stored`` versions, but it "
"must not be reported if any of the components covered by the ``bundle_id`` "
"was changed and no longer matches the version from the bundle."
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:129
msgid "board.id"
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:131
msgid "Unique identifier of the board design."
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:134
msgid "board.rev"
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:136
msgid "Board design revision."
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:139
msgid "asic.id"
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:141
msgid "ASIC design identifier."
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:144
msgid "asic.rev"
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:146
msgid "ASIC design revision/stepping."
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:149
msgid "board.manufacture"
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:151
msgid "An identifier of the company or the facility which produced the part."
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:154
msgid "board.part_number"
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:156
msgid "Part number of the board and its components."
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:159
msgid "fw"
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:161
msgid ""
"Overall firmware version, often representing the collection of fw.mgmt, fw."
"app, etc."
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:165
msgid "fw.mgmt"
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:167
msgid ""
"Control unit firmware version. This firmware is responsible for house "
"keeping tasks, PHY control etc. but not the packet-by-packet data path "
"operation."
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:172
msgid "fw.mgmt.api"
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:174
msgid ""
"Firmware interface specification version of the software interfaces between "
"driver and firmware."
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:178
msgid "fw.app"
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:180
msgid "Data path microcode controlling high-speed packet processing."
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:183
msgid "fw.undi"
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:185
msgid "UNDI software, may include the UEFI driver, firmware or both."
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:188
msgid "fw.ncsi"
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:190
msgid ""
"Version of the software responsible for supporting/handling the Network "
"Controller Sideband Interface."
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:194
msgid "fw.psid"
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:196
msgid ""
"Unique identifier of the firmware parameter set. These are usually "
"parameters of a particular board, defined at manufacturing time."
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:200
msgid "fw.roce"
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:202
msgid ""
"RoCE firmware version which is responsible for handling roce management."
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:206
msgid "fw.bundle_id"
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:208
msgid "Unique identifier of the entire firmware bundle."
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:211
msgid "fw.bootloader"
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:213
msgid "Version of the bootloader."
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:216
msgid "Future work"
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:218
msgid "The following extensions could be useful:"
msgstr ""

#: ../../../networking/devlink/devlink-info.rst:220
msgid ""
"on-disk firmware file names - drivers list the file names of firmware they "
"may need to load onto devices via the ``MODULE_FIRMWARE()`` macro. These, "
"however, are per module, rather than per device. It'd be useful to list the "
"names of firmware files the driver will try to load for a given device, in "
"order of priority."
msgstr ""
