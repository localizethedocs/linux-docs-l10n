# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../wmi/devices/msi-wmi-platform.rst:5
msgid "MSI WMI Platform Features driver (msi-wmi-platform)"
msgstr ""

#: ../../../wmi/devices/msi-wmi-platform.rst:8
msgid "Introduction"
msgstr ""

#: ../../../wmi/devices/msi-wmi-platform.rst:10
msgid ""
"Many MSI notebooks support various features like reading fan sensors. This "
"features are controlled by the embedded controller, with the ACPI firmware "
"exposing a standard ACPI WMI interface on top of the embedded controller "
"interface."
msgstr ""

#: ../../../wmi/devices/msi-wmi-platform.rst:15
msgid "WMI interface description"
msgstr ""

#: ../../../wmi/devices/msi-wmi-platform.rst:17
msgid ""
"The WMI interface description can be decoded from the embedded binary MOF "
"(bmof) data using the `bmfdec <https://github.com/pali/bmfdec>`_ utility:"
msgstr ""

#: ../../../wmi/devices/msi-wmi-platform.rst:131
msgid ""
"Due to a peculiarity in how Windows handles the ``CreateByteField()`` ACPI "
"operator (errors only happen when a invalid byte field is ultimately "
"accessed), all methods require a 32 byte input buffer, even if the Binary "
"MOF says otherwise."
msgstr ""

#: ../../../wmi/devices/msi-wmi-platform.rst:135
msgid ""
"The input buffer contains a single byte to select the subfeature to be "
"accessed and 31 bytes of input data, the meaning of which depends on the "
"subfeature being accessed."
msgstr ""

#: ../../../wmi/devices/msi-wmi-platform.rst:138
msgid ""
"The output buffer contains a single byte which signals success or failure "
"(``0x00`` on failure) and 31 bytes of output data, the meaning if which "
"depends on the subfeature being accessed."
msgstr ""

#: ../../../wmi/devices/msi-wmi-platform.rst:142
msgid ""
"The ACPI control method responsible for handling the WMI method calls is not "
"thread-safe. This is a firmware bug that needs to be handled inside the "
"driver itself."
msgstr ""

#: ../../../wmi/devices/msi-wmi-platform.rst:146
msgid "WMI method Get_EC()"
msgstr ""

#: ../../../wmi/devices/msi-wmi-platform.rst:148
msgid ""
"Returns embedded controller information, the selected subfeature does not "
"matter. The output data contains a flag byte and a 28 byte controller "
"firmware version string."
msgstr ""

#: ../../../wmi/devices/msi-wmi-platform.rst:151
msgid ""
"The first 4 bits of the flag byte contain the minor version of the embedded "
"controller interface, with the next 2 bits containing the major version of "
"the embedded controller interface."
msgstr ""

#: ../../../wmi/devices/msi-wmi-platform.rst:154
msgid ""
"The 7th bit signals if the embedded controller page changed (exact meaning "
"is unknown), and the last bit signals if the platform is a Tigerlake "
"platform."
msgstr ""

#: ../../../wmi/devices/msi-wmi-platform.rst:157
msgid ""
"The MSI software seems to only use this interface when the last bit is set."
msgstr ""

#: ../../../wmi/devices/msi-wmi-platform.rst:160
msgid "WMI method Get_Fan()"
msgstr ""

#: ../../../wmi/devices/msi-wmi-platform.rst:162
msgid ""
"Fan speed sensors can be accessed by selecting subfeature ``0x00``. The "
"output data contains up to four 16-bit fan speed readings in big-endian "
"format. Most machines do not support all four fan speed sensors, so the "
"remaining reading are hardcoded to ``0x0000``."
msgstr ""

#: ../../../wmi/devices/msi-wmi-platform.rst:166
msgid "The fan RPM readings can be calculated with the following formula:"
msgstr ""

#: ../../../wmi/devices/msi-wmi-platform.rst:168
msgid "RPM = 480000 / <fan speed reading>"
msgstr ""

#: ../../../wmi/devices/msi-wmi-platform.rst:170
msgid "If the fan speed reading is zero, then the fan RPM is zero too."
msgstr ""

#: ../../../wmi/devices/msi-wmi-platform.rst:173
msgid "WMI method Get_WMI()"
msgstr ""

#: ../../../wmi/devices/msi-wmi-platform.rst:175
msgid ""
"Returns the version of the ACPI WMI interface, the selected subfeature does "
"not matter. The output data contains two bytes, the first one contains the "
"major version and the last one contains the minor revision of the ACPI WMI "
"interface."
msgstr ""

#: ../../../wmi/devices/msi-wmi-platform.rst:179
msgid ""
"The MSI software seems to only use this interface when the major version is "
"greater than two."
msgstr ""

#: ../../../wmi/devices/msi-wmi-platform.rst:182
msgid "Reverse-Engineering the MSI WMI Platform interface"
msgstr ""

#: ../../../wmi/devices/msi-wmi-platform.rst:184
msgid ""
"Randomly poking the embedded controller interface can potentially cause "
"damage to the machine and other unwanted side effects, please be careful."
msgstr ""

#: ../../../wmi/devices/msi-wmi-platform.rst:187
msgid ""
"The underlying embedded controller interface is used by the ``msi-ec`` "
"driver, and it seems that many methods just copy a part of the embedded "
"controller memory into the output buffer."
msgstr ""

#: ../../../wmi/devices/msi-wmi-platform.rst:190
msgid ""
"This means that the remaining WMI methods can be reverse-engineered by "
"looking which part of the embedded controller memory is accessed by the ACPI "
"AML code. The driver also supports a debugfs interface for directly "
"executing WMI methods. Additionally, any safety checks regarding unsupported "
"hardware can be disabled by loading the module with ``force=true``."
msgstr ""

#: ../../../wmi/devices/msi-wmi-platform.rst:195
msgid ""
"More information about the MSI embedded controller interface can be found at "
"the `msi-ec project <https://github.com/BeardOverflow/msi-ec>`_."
msgstr ""

#: ../../../wmi/devices/msi-wmi-platform.rst:198
msgid ""
"Special thanks go to github user `glpnk` for showing how to decode the fan "
"speed readings."
msgstr ""
