# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../power/power_supply_class.rst:3
msgid "Linux power supply class"
msgstr ""

#: ../../../power/power_supply_class.rst:6
msgid "Synopsis"
msgstr ""

#: ../../../power/power_supply_class.rst:7
msgid ""
"Power supply class used to represent battery, UPS, AC or DC power supply "
"properties to user-space."
msgstr ""

#: ../../../power/power_supply_class.rst:10
msgid ""
"It defines core set of attributes, which should be applicable to (almost) "
"every power supply out there. Attributes are available via sysfs and uevent "
"interfaces."
msgstr ""

#: ../../../power/power_supply_class.rst:14
msgid ""
"Each attribute has well defined meaning, up to unit of measure used. While "
"the attributes provided are believed to be universally applicable to any "
"power supply, specific monitoring hardware may not be able to provide them "
"all, so any of them may be skipped."
msgstr ""

#: ../../../power/power_supply_class.rst:19
msgid ""
"Power supply class is extensible, and allows to define drivers own "
"attributes. The core attribute set is subject to the standard Linux "
"evolution (i.e. if it will be found that some attribute is applicable to "
"many power supply types or their drivers, it can be added to the core set)."
msgstr ""

#: ../../../power/power_supply_class.rst:24
msgid ""
"It also integrates with LED framework, for the purpose of providing "
"typically expected feedback of battery charging/fully charged status and AC/"
"USB power supply online status. (Note that specific details of the "
"indication (including whether to use it at all) are fully controllable by "
"user and/or specific machine defaults, per design principles of LED "
"framework)."
msgstr ""

#: ../../../power/power_supply_class.rst:33
msgid "Attributes/properties"
msgstr ""

#: ../../../power/power_supply_class.rst:34
msgid ""
"Power supply class has predefined set of attributes, this eliminates code "
"duplication across drivers. Power supply class insist on reusing its "
"predefined attributes *and* their units."
msgstr ""

#: ../../../power/power_supply_class.rst:38
msgid ""
"So, userspace gets predictable set of attributes and their units for any "
"kind of power supply, and can process/present them to a user in consistent "
"manner. Results for different power supplies and machines are also directly "
"comparable."
msgstr ""

#: ../../../power/power_supply_class.rst:43
msgid ""
"See drivers/power/supply/ds2760_battery.c for the example how to declare and "
"handle attributes."
msgstr ""

#: ../../../power/power_supply_class.rst:48
msgid "Units"
msgstr ""

#: ../../../power/power_supply_class.rst:49
msgid "Quoting include/linux/power_supply.h:"
msgstr ""

#: ../../../power/power_supply_class.rst:51
msgid ""
"All voltages, currents, charges, energies, time and temperatures in µV, µA, "
"µAh, µWh, seconds and tenths of degree Celsius unless otherwise stated. It's "
"driver's job to convert its raw values to units in which this class operates."
msgstr ""

#: ../../../power/power_supply_class.rst:58
msgid "Attributes/properties detailed"
msgstr ""

#: ../../../power/power_supply_class.rst:61
msgid "**Charge/Energy/Capacity - how to not confuse**"
msgstr ""

#: ../../../power/power_supply_class.rst:63
msgid ""
"**Because both \"charge\" (µAh) and \"energy\" (µWh) represents \"capacity\" "
"of battery, this class distinguish these terms. Don't mix them!**"
msgstr ""

#: ../../../power/power_supply_class.rst:66
msgid "`CHARGE_*`"
msgstr ""

#: ../../../power/power_supply_class.rst:67
msgid "attributes represents capacity in µAh only."
msgstr ""

#: ../../../power/power_supply_class.rst:68
msgid "`ENERGY_*`"
msgstr ""

#: ../../../power/power_supply_class.rst:69
msgid "attributes represents capacity in µWh only."
msgstr ""

#: ../../../power/power_supply_class.rst:70
msgid "`CAPACITY`"
msgstr ""

#: ../../../power/power_supply_class.rst:71
msgid "attribute represents capacity in *percents*, from 0 to 100."
msgstr ""

#: ../../../power/power_supply_class.rst:74
msgid "Postfixes:"
msgstr ""

#: ../../../power/power_supply_class.rst:76
msgid "_AVG"
msgstr ""

#: ../../../power/power_supply_class.rst:77
msgid ""
"*hardware* averaged value, use it if your hardware is really able to report "
"averaged values."
msgstr ""

#: ../../../power/power_supply_class.rst:79
msgid "_NOW"
msgstr ""

#: ../../../power/power_supply_class.rst:80
msgid "momentary/instantaneous values."
msgstr ""

#: ../../../power/power_supply_class.rst:82
msgid "STATUS"
msgstr ""

#: ../../../power/power_supply_class.rst:83
msgid ""
"this attribute represents operating status (charging, full, discharging (i."
"e. powering a load), etc.). This corresponds to `BATTERY_STATUS_*` values, "
"as defined in battery.h."
msgstr ""

#: ../../../power/power_supply_class.rst:87
msgid "CHARGE_TYPE"
msgstr ""

#: ../../../power/power_supply_class.rst:88
msgid ""
"batteries can typically charge at different rates. This defines trickle and "
"fast charges.  For batteries that are already charged or discharging, 'n/a' "
"can be displayed (or 'unknown', if the status is not known)."
msgstr ""

#: ../../../power/power_supply_class.rst:93
msgid "AUTHENTIC"
msgstr ""

#: ../../../power/power_supply_class.rst:94
msgid ""
"indicates the power supply (battery or charger) connected to the platform is "
"authentic(1) or non authentic(0)."
msgstr ""

#: ../../../power/power_supply_class.rst:97
msgid "HEALTH"
msgstr ""

#: ../../../power/power_supply_class.rst:98
msgid ""
"represents health of the battery, values corresponds to "
"POWER_SUPPLY_HEALTH_*, defined in battery.h."
msgstr ""

#: ../../../power/power_supply_class.rst:101
msgid "VOLTAGE_OCV"
msgstr ""

#: ../../../power/power_supply_class.rst:102
msgid "open circuit voltage of the battery."
msgstr ""

#: ../../../power/power_supply_class.rst:104
msgid "VOLTAGE_MAX_DESIGN, VOLTAGE_MIN_DESIGN"
msgstr ""

#: ../../../power/power_supply_class.rst:105
msgid ""
"design values for maximal and minimal power supply voltages. Maximal/minimal "
"means values of voltages when battery considered \"full\"/\"empty\" at "
"normal conditions. Yes, there is no direct relation between voltage and "
"battery capacity, but some dumb batteries use voltage for very approximated "
"calculation of capacity. Battery driver also can use this attribute just to "
"inform userspace about maximal and minimal voltage thresholds of a given "
"battery."
msgstr ""

#: ../../../power/power_supply_class.rst:113
msgid "VOLTAGE_MAX, VOLTAGE_MIN"
msgstr ""

#: ../../../power/power_supply_class.rst:114
msgid ""
"same as _DESIGN voltage values except that these ones should be used if "
"hardware could only guess (measure and retain) the thresholds of a given "
"power supply."
msgstr ""

#: ../../../power/power_supply_class.rst:118
msgid "VOLTAGE_BOOT"
msgstr ""

#: ../../../power/power_supply_class.rst:119
msgid "Reports the voltage measured during boot"
msgstr ""

#: ../../../power/power_supply_class.rst:121
msgid "CURRENT_BOOT"
msgstr ""

#: ../../../power/power_supply_class.rst:122
msgid "Reports the current measured during boot"
msgstr ""

#: ../../../power/power_supply_class.rst:124
msgid "CHARGE_FULL_DESIGN, CHARGE_EMPTY_DESIGN"
msgstr ""

#: ../../../power/power_supply_class.rst:125
msgid "design charge values, when battery considered full/empty."
msgstr ""

#: ../../../power/power_supply_class.rst:127
msgid "ENERGY_FULL_DESIGN, ENERGY_EMPTY_DESIGN"
msgstr ""

#: ../../../power/power_supply_class.rst:128
#: ../../../power/power_supply_class.rst:137
msgid "same as above but for energy."
msgstr ""

#: ../../../power/power_supply_class.rst:130
msgid "CHARGE_FULL, CHARGE_EMPTY"
msgstr ""

#: ../../../power/power_supply_class.rst:131
msgid ""
"These attributes means \"last remembered value of charge when battery became "
"full/empty\". It also could mean \"value of charge when battery considered "
"full/empty at given conditions (temperature, age)\". I.e. these attributes "
"represents real thresholds, not design values."
msgstr ""

#: ../../../power/power_supply_class.rst:136
msgid "ENERGY_FULL, ENERGY_EMPTY"
msgstr ""

#: ../../../power/power_supply_class.rst:139
msgid "CHARGE_COUNTER"
msgstr ""

#: ../../../power/power_supply_class.rst:140
msgid ""
"the current charge counter (in µAh).  This could easily be negative; there "
"is no empty or full value.  It is only useful for relative, time-based "
"measurements."
msgstr ""

#: ../../../power/power_supply_class.rst:144
msgid "PRECHARGE_CURRENT"
msgstr ""

#: ../../../power/power_supply_class.rst:145
msgid ""
"the maximum charge current during precharge phase of charge cycle (typically "
"20% of battery capacity)."
msgstr ""

#: ../../../power/power_supply_class.rst:148
msgid "CHARGE_TERM_CURRENT"
msgstr ""

#: ../../../power/power_supply_class.rst:149
msgid ""
"Charge termination current. The charge cycle terminates when battery voltage "
"is above recharge threshold, and charge current is below this setting "
"(typically 10% of battery capacity)."
msgstr ""

#: ../../../power/power_supply_class.rst:153
msgid "CONSTANT_CHARGE_CURRENT"
msgstr ""

#: ../../../power/power_supply_class.rst:154
msgid "constant charge current programmed by charger."
msgstr ""

#: ../../../power/power_supply_class.rst:157
msgid "CONSTANT_CHARGE_CURRENT_MAX"
msgstr ""

#: ../../../power/power_supply_class.rst:158
msgid "maximum charge current supported by the power supply object."
msgstr ""

#: ../../../power/power_supply_class.rst:160
msgid "CONSTANT_CHARGE_VOLTAGE"
msgstr ""

#: ../../../power/power_supply_class.rst:161
msgid "constant charge voltage programmed by charger."
msgstr ""

#: ../../../power/power_supply_class.rst:162
msgid "CONSTANT_CHARGE_VOLTAGE_MAX"
msgstr ""

#: ../../../power/power_supply_class.rst:163
msgid "maximum charge voltage supported by the power supply object."
msgstr ""

#: ../../../power/power_supply_class.rst:165
msgid "INPUT_CURRENT_LIMIT"
msgstr ""

#: ../../../power/power_supply_class.rst:166
msgid ""
"input current limit programmed by charger. Indicates the current drawn from "
"a charging source."
msgstr ""

#: ../../../power/power_supply_class.rst:168
msgid "INPUT_VOLTAGE_LIMIT"
msgstr ""

#: ../../../power/power_supply_class.rst:169
msgid ""
"input voltage limit programmed by charger. Indicates the voltage limit from "
"a charging source."
msgstr ""

#: ../../../power/power_supply_class.rst:171
msgid "INPUT_POWER_LIMIT"
msgstr ""

#: ../../../power/power_supply_class.rst:172
msgid ""
"input power limit programmed by charger. Indicates the power limit from a "
"charging source."
msgstr ""

#: ../../../power/power_supply_class.rst:175
msgid "CHARGE_CONTROL_LIMIT"
msgstr ""

#: ../../../power/power_supply_class.rst:176
msgid "current charge control limit setting"
msgstr ""

#: ../../../power/power_supply_class.rst:177
msgid "CHARGE_CONTROL_LIMIT_MAX"
msgstr ""

#: ../../../power/power_supply_class.rst:178
msgid "maximum charge control limit setting"
msgstr ""

#: ../../../power/power_supply_class.rst:180
msgid "CALIBRATE"
msgstr ""

#: ../../../power/power_supply_class.rst:181
msgid "battery or coulomb counter calibration status"
msgstr ""

#: ../../../power/power_supply_class.rst:183
msgid "CAPACITY"
msgstr ""

#: ../../../power/power_supply_class.rst:184
msgid "capacity in percents."
msgstr ""

#: ../../../power/power_supply_class.rst:185
msgid "CAPACITY_ALERT_MIN"
msgstr ""

#: ../../../power/power_supply_class.rst:186
msgid "minimum capacity alert value in percents."
msgstr ""

#: ../../../power/power_supply_class.rst:187
msgid "CAPACITY_ALERT_MAX"
msgstr ""

#: ../../../power/power_supply_class.rst:188
msgid "maximum capacity alert value in percents."
msgstr ""

#: ../../../power/power_supply_class.rst:189
msgid "CAPACITY_LEVEL"
msgstr ""

#: ../../../power/power_supply_class.rst:190
msgid "capacity level. This corresponds to POWER_SUPPLY_CAPACITY_LEVEL_*."
msgstr ""

#: ../../../power/power_supply_class.rst:192
msgid "TEMP"
msgstr ""

#: ../../../power/power_supply_class.rst:193
msgid "temperature of the power supply."
msgstr ""

#: ../../../power/power_supply_class.rst:194
msgid "TEMP_ALERT_MIN"
msgstr ""

#: ../../../power/power_supply_class.rst:195
msgid "minimum battery temperature alert."
msgstr ""

#: ../../../power/power_supply_class.rst:196
msgid "TEMP_ALERT_MAX"
msgstr ""

#: ../../../power/power_supply_class.rst:197
msgid "maximum battery temperature alert."
msgstr ""

#: ../../../power/power_supply_class.rst:198
msgid "TEMP_AMBIENT"
msgstr ""

#: ../../../power/power_supply_class.rst:199
msgid "ambient temperature."
msgstr ""

#: ../../../power/power_supply_class.rst:200
msgid "TEMP_AMBIENT_ALERT_MIN"
msgstr ""

#: ../../../power/power_supply_class.rst:201
msgid "minimum ambient temperature alert."
msgstr ""

#: ../../../power/power_supply_class.rst:202
msgid "TEMP_AMBIENT_ALERT_MAX"
msgstr ""

#: ../../../power/power_supply_class.rst:203
msgid "maximum ambient temperature alert."
msgstr ""

#: ../../../power/power_supply_class.rst:204
msgid "TEMP_MIN"
msgstr ""

#: ../../../power/power_supply_class.rst:205
msgid "minimum operatable temperature"
msgstr ""

#: ../../../power/power_supply_class.rst:206
msgid "TEMP_MAX"
msgstr ""

#: ../../../power/power_supply_class.rst:207
msgid "maximum operatable temperature"
msgstr ""

#: ../../../power/power_supply_class.rst:209
msgid "TIME_TO_EMPTY"
msgstr ""

#: ../../../power/power_supply_class.rst:210
msgid ""
"seconds left for battery to be considered empty (i.e. while battery powers a "
"load)"
msgstr ""

#: ../../../power/power_supply_class.rst:212
msgid "TIME_TO_FULL"
msgstr ""

#: ../../../power/power_supply_class.rst:213
msgid ""
"seconds left for battery to be considered full (i.e. while battery is "
"charging)"
msgstr ""

#: ../../../power/power_supply_class.rst:218
msgid "Battery <-> external power supply interaction"
msgstr ""

#: ../../../power/power_supply_class.rst:219
msgid ""
"Often power supplies are acting as supplies and supplicants at the same "
"time. Batteries are good example. So, batteries usually care if they're "
"externally powered or not."
msgstr ""

#: ../../../power/power_supply_class.rst:223
msgid ""
"For that case, power supply class implements notification mechanism for "
"batteries."
msgstr ""

#: ../../../power/power_supply_class.rst:226
msgid ""
"External power supply (AC) lists supplicants (batteries) names in "
"\"supplied_to\" struct member, and each power_supply_changed() call issued "
"by external power supply will notify supplicants via external_power_changed "
"callback."
msgstr ""

#: ../../../power/power_supply_class.rst:233
msgid "Devicetree battery characteristics"
msgstr ""

#: ../../../power/power_supply_class.rst:234
msgid ""
"Drivers should call power_supply_get_battery_info() to obtain battery "
"characteristics from a devicetree battery node, defined in Documentation/"
"devicetree/bindings/power/supply/battery.yaml. This is implemented in "
"drivers/power/supply/bq27xxx_battery.c."
msgstr ""

#: ../../../power/power_supply_class.rst:239
msgid ""
"Properties in struct power_supply_battery_info and their counterparts in the "
"battery node have names corresponding to elements in enum "
"power_supply_property, for naming consistency between sysfs attributes and "
"battery node properties."
msgstr ""

#: ../../../power/power_supply_class.rst:245
msgid "QA"
msgstr ""

#: ../../../power/power_supply_class.rst:247
#: ../../../power/power_supply_class.rst:260
#: ../../../power/power_supply_class.rst:271
msgid "Q:"
msgstr ""

#: ../../../power/power_supply_class.rst:248
msgid "Where is POWER_SUPPLY_PROP_XYZ attribute?"
msgstr ""

#: ../../../power/power_supply_class.rst:249
#: ../../../power/power_supply_class.rst:263
#: ../../../power/power_supply_class.rst:276
msgid "A:"
msgstr ""

#: ../../../power/power_supply_class.rst:250
msgid ""
"If you cannot find attribute suitable for your driver needs, feel free to "
"add it and send patch along with your driver."
msgstr ""

#: ../../../power/power_supply_class.rst:253
msgid ""
"The attributes available currently are the ones currently provided by the "
"drivers written."
msgstr ""

#: ../../../power/power_supply_class.rst:256
msgid ""
"Good candidates to add in future: model/part#, cycle_time, manufacturer, etc."
msgstr ""

#: ../../../power/power_supply_class.rst:261
msgid ""
"I have some very specific attribute (e.g. battery color), should I add this "
"attribute to standard ones?"
msgstr ""

#: ../../../power/power_supply_class.rst:264
msgid ""
"Most likely, no. Such attribute can be placed in the driver itself, if it is "
"useful. Of course, if the attribute in question applicable to large set of "
"batteries, provided by many drivers, and/or comes from some general battery "
"specification/standard, it may be a candidate to be added to the core "
"attribute set."
msgstr ""

#: ../../../power/power_supply_class.rst:272
msgid ""
"Suppose, my battery monitoring chip/firmware does not provides capacity in "
"percents, but provides charge_{now,full,empty}. Should I calculate "
"percentage capacity manually, inside the driver, and register CAPACITY "
"attribute? The same question about time_to_empty/time_to_full."
msgstr ""

#: ../../../power/power_supply_class.rst:277
msgid ""
"Most likely, no. This class is designed to export properties which are "
"directly measurable by the specific hardware available."
msgstr ""

#: ../../../power/power_supply_class.rst:280
msgid ""
"Inferring not available properties using some heuristics or mathematical "
"model is not subject of work for a battery driver. Such functionality should "
"be factored out, and in fact, apm_power, the driver to serve legacy APM API "
"on top of power supply class, uses a simple heuristic of approximating "
"remaining battery capacity based on its charge, current, voltage and so on. "
"But full-fledged battery model is likely not subject for kernel at all, as "
"it would require floating point calculation to deal with things like "
"differential equations and Kalman filters. This is better be handled by "
"batteryd/libbattery, yet to be written."
msgstr ""
