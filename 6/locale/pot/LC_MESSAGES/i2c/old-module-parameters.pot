# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../i2c/old-module-parameters.rst:3
msgid "I2C device driver binding control from user-space in old kernels"
msgstr ""

#: ../../../i2c/old-module-parameters.rst:6
msgid ""
"Note: this section is only relevant if you are handling some old code found "
"in kernel 2.6. If you work with more recent kernels, you can safely skip "
"this section."
msgstr ""

#: ../../../i2c/old-module-parameters.rst:10
msgid ""
"Up to kernel 2.6.32, many I2C drivers used helper macros provided by <linux/"
"i2c.h> which created standard module parameters to let the user control how "
"the driver would probe I2C buses and attach to devices. These parameters "
"were known as ``probe`` (to let the driver probe for an extra address), "
"``force`` (to forcibly attach the driver to a given device) and ``ignore`` "
"(to prevent a driver from probing a given address)."
msgstr ""

#: ../../../i2c/old-module-parameters.rst:17
msgid ""
"With the conversion of the I2C subsystem to the standard device driver "
"binding model, it became clear that these per-module parameters were no "
"longer needed, and that a centralized implementation was possible. The new, "
"sysfs-based interface is described in Documentation/i2c/instantiating-"
"devices.rst, section \"Method 4: Instantiate from user-space\"."
msgstr ""

#: ../../../i2c/old-module-parameters.rst:24
msgid "Below is a mapping from the old module parameters to the new interface."
msgstr ""

#: ../../../i2c/old-module-parameters.rst:27
msgid "Attaching a driver to an I2C device"
msgstr ""

#: ../../../i2c/old-module-parameters.rst:29
#: ../../../i2c/old-module-parameters.rst:42
msgid "Old method (module parameters)::"
msgstr ""

#: ../../../i2c/old-module-parameters.rst:35
#: ../../../i2c/old-module-parameters.rst:46
msgid "New method (sysfs interface)::"
msgstr ""

#: ../../../i2c/old-module-parameters.rst:40
msgid "Preventing a driver from attaching to an I2C device"
msgstr ""

#: ../../../i2c/old-module-parameters.rst:51
msgid ""
"Of course, it is important to instantiate the ``dummy`` device before "
"loading the driver. The dummy device will be handled by i2c-core itself, "
"preventing other drivers from binding to it later on. If there is a real "
"device at the problematic address, and you want another driver to bind to "
"it, then simply pass the name of the device in question instead of ``dummy``."
msgstr ""
