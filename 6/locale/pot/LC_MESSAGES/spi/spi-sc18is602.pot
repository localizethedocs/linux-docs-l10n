# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../spi/spi-sc18is602.rst:3
msgid "Kernel driver spi-sc18is602"
msgstr ""

#: ../../../spi/spi-sc18is602.rst:5
msgid "Supported chips:"
msgstr ""

#: ../../../spi/spi-sc18is602.rst:7
msgid "NXP SI18IS602/602B/603"
msgstr ""

#: ../../../spi/spi-sc18is602.rst:9
msgid ""
"Datasheet: https://www.nxp.com/documents/data_sheet/SC18IS602_602B_603.pdf"
msgstr ""

#: ../../../spi/spi-sc18is602.rst:11
msgid "Author:"
msgstr ""

#: ../../../spi/spi-sc18is602.rst:12
msgid "Guenter Roeck <linux@roeck-us.net>"
msgstr ""

#: ../../../spi/spi-sc18is602.rst:16
msgid "Description"
msgstr ""

#: ../../../spi/spi-sc18is602.rst:18
msgid ""
"This driver provides connects a NXP SC18IS602/603 I2C-bus to SPI bridge to "
"the kernel's SPI core subsystem."
msgstr ""

#: ../../../spi/spi-sc18is602.rst:21
msgid ""
"The driver does not probe for supported chips, since the SI18IS602/603 does "
"not support Chip ID registers. You will have to instantiate the devices "
"explicitly. Please see Documentation/i2c/instantiating-devices.rst for "
"details."
msgstr ""

#: ../../../spi/spi-sc18is602.rst:27
msgid "Usage Notes"
msgstr ""

#: ../../../spi/spi-sc18is602.rst:29
msgid ""
"This driver requires the I2C adapter driver to support raw I2C messages. I2C "
"adapter drivers which can only handle the SMBus protocol are not supported."
msgstr ""

#: ../../../spi/spi-sc18is602.rst:32
msgid ""
"The maximum SPI message size supported by SC18IS602/603 is 200 bytes. "
"Attempts to initiate longer transfers will fail with -EINVAL. EEPROM read "
"operations and similar large accesses have to be split into multiple chunks "
"of no more than 200 bytes per SPI message (128 bytes of data per message is "
"recommended). This means that programs such as \"cp\" or \"od\", which "
"automatically use large block sizes to access a device, can not be used "
"directly to read data from EEPROM. Programs such as dd, where the block size "
"can be specified, should be used instead."
msgstr ""
