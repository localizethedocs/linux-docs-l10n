# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-30 08:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../pcmcia/driver-changes.rst:3
msgid "Driver changes"
msgstr ""

#: ../../../pcmcia/driver-changes.rst:5
msgid ""
"This file details changes in 2.6 which affect PCMCIA card driver authors:"
msgstr ""

#: ../../../pcmcia/driver-changes.rst:7
msgid "pcmcia_loop_config() and autoconfiguration (as of 2.6.36)"
msgstr ""

#: ../../../pcmcia/driver-changes.rst:8
msgid ""
"If `struct pcmcia_device *p_dev->config_flags` is set accordingly, "
"pcmcia_loop_config() now sets up certain configuration values automatically, "
"though the driver may still override the settings in the callback function. "
"The following autoconfiguration options are provided at the moment:"
msgstr ""

#: ../../../pcmcia/driver-changes.rst:14
msgid "CONF_AUTO_CHECK_VCC : check for matching Vcc"
msgstr ""

#: ../../../pcmcia/driver-changes.rst:15
msgid "CONF_AUTO_SET_VPP   : set Vpp"
msgstr ""

#: ../../../pcmcia/driver-changes.rst:16
msgid "CONF_AUTO_AUDIO     : auto-enable audio line, if required"
msgstr ""

#: ../../../pcmcia/driver-changes.rst:17
msgid "CONF_AUTO_SET_IO    : set ioport resources (->resource[0,1])"
msgstr ""

#: ../../../pcmcia/driver-changes.rst:18
msgid "CONF_AUTO_SET_IOMEM : set first iomem resource (->resource[2])"
msgstr ""

#: ../../../pcmcia/driver-changes.rst:20
msgid "pcmcia_request_configuration -> pcmcia_enable_device (as of 2.6.36)"
msgstr ""

#: ../../../pcmcia/driver-changes.rst:21
msgid ""
"pcmcia_request_configuration() got renamed to pcmcia_enable_device(), as it "
"mirrors pcmcia_disable_device(). Configuration settings are now stored in "
"struct pcmcia_device, e.g. in the fields config_flags, config_index, "
"config_base, vpp."
msgstr ""

#: ../../../pcmcia/driver-changes.rst:26
msgid "pcmcia_request_window changes (as of 2.6.36)"
msgstr ""

#: ../../../pcmcia/driver-changes.rst:27
msgid ""
"Instead of win_req_t, drivers are now requested to fill out `struct "
"pcmcia_device *p_dev->resource[2,3,4,5]` for up to four ioport ranges. After "
"a call to pcmcia_request_window(), the regions found there are reserved and "
"may be used immediately -- until pcmcia_release_window() is called."
msgstr ""

#: ../../../pcmcia/driver-changes.rst:33
msgid "pcmcia_request_io changes (as of 2.6.36)"
msgstr ""

#: ../../../pcmcia/driver-changes.rst:34
msgid ""
"Instead of io_req_t, drivers are now requested to fill out `struct "
"pcmcia_device *p_dev->resource[0,1]` for up to two ioport ranges. After a "
"call to pcmcia_request_io(), the ports found there are reserved, after "
"calling pcmcia_request_configuration(), they may be used."
msgstr ""

#: ../../../pcmcia/driver-changes.rst:40
msgid "No dev_info_t, no cs_types.h (as of 2.6.36)"
msgstr ""

#: ../../../pcmcia/driver-changes.rst:41
msgid ""
"dev_info_t and a few other typedefs are removed. No longer use them in "
"PCMCIA device drivers. Also, do not include pcmcia/cs_types.h, as this file "
"is gone."
msgstr ""

#: ../../../pcmcia/driver-changes.rst:45
msgid "No dev_node_t (as of 2.6.35)"
msgstr ""

#: ../../../pcmcia/driver-changes.rst:46
msgid "There is no more need to fill out a \"dev_node_t\" structure."
msgstr ""

#: ../../../pcmcia/driver-changes.rst:48
msgid "New IRQ request rules (as of 2.6.35)"
msgstr ""

#: ../../../pcmcia/driver-changes.rst:49
msgid ""
"Instead of the old pcmcia_request_irq() interface, drivers may now choose "
"between:"
msgstr ""

#: ../../../pcmcia/driver-changes.rst:52
msgid "calling request_irq/free_irq directly. Use the IRQ from `*p_dev->irq`."
msgstr ""

#: ../../../pcmcia/driver-changes.rst:53
msgid ""
"use pcmcia_request_irq(p_dev, handler_t); the PCMCIA core will clean up "
"automatically on calls to pcmcia_disable_device() or device ejection."
msgstr ""

#: ../../../pcmcia/driver-changes.rst:57
msgid "no cs_error / CS_CHECK / CONFIG_PCMCIA_DEBUG (as of 2.6.33)"
msgstr ""

#: ../../../pcmcia/driver-changes.rst:58
msgid ""
"Instead of the cs_error() callback or the CS_CHECK() macro, please use Linux-"
"style checking of return values, and -- if necessary -- debug messages using "
"\"dev_dbg()\" or \"pr_debug()\"."
msgstr ""

#: ../../../pcmcia/driver-changes.rst:62
msgid "New CIS tuple access (as of 2.6.33)"
msgstr ""

#: ../../../pcmcia/driver-changes.rst:63
msgid ""
"Instead of pcmcia_get_{first,next}_tuple(), pcmcia_get_tuple_data() and "
"pcmcia_parse_tuple(), a driver shall use \"pcmcia_get_tuple()\" if it is "
"only interested in one (raw) tuple, or \"pcmcia_loop_tuple()\" if it is "
"interested in all tuples of one type. To decode the MAC from CISTPL_FUNCE, a "
"new helper \"pcmcia_get_mac_from_cis()\" was added."
msgstr ""

#: ../../../pcmcia/driver-changes.rst:69
msgid "New configuration loop helper (as of 2.6.28)"
msgstr ""

#: ../../../pcmcia/driver-changes.rst:70
msgid ""
"By calling pcmcia_loop_config(), a driver can iterate over all available "
"configuration options. During a driver's probe() phase, one doesn't need to "
"use pcmcia_get_{first,next}_tuple, pcmcia_get_tuple_data and "
"pcmcia_parse_tuple directly in most if not all cases."
msgstr ""

#: ../../../pcmcia/driver-changes.rst:75
msgid "New release helper (as of 2.6.17)"
msgstr ""

#: ../../../pcmcia/driver-changes.rst:76
msgid ""
"Instead of calling pcmcia_release_{configuration,io,irq,win}, all that's "
"necessary now is calling pcmcia_disable_device. As there is no valid reason "
"left to call pcmcia_release_io and pcmcia_release_irq, the exports for them "
"were removed."
msgstr ""

#: ../../../pcmcia/driver-changes.rst:81
msgid ""
"Unify detach and REMOVAL event code, as well as attach and INSERTION code "
"(as of 2.6.16)::"
msgstr ""

#: ../../../pcmcia/driver-changes.rst:87
msgid "Move suspend, resume and reset out of event handler (as of 2.6.16)::"
msgstr ""

#: ../../../pcmcia/driver-changes.rst:92
msgid ""
"should be initialized in struct pcmcia_driver, and handle (SUSPEND == "
"RESET_PHYSICAL) and (RESUME == CARD_RESET) events"
msgstr ""

#: ../../../pcmcia/driver-changes.rst:95
msgid "event handler initialization in struct pcmcia_driver (as of 2.6.13)"
msgstr ""

#: ../../../pcmcia/driver-changes.rst:96
msgid ""
"The event handler is notified of all events, and must be initialized as the "
"event() callback in the driver's struct pcmcia_driver."
msgstr ""

#: ../../../pcmcia/driver-changes.rst:99
msgid "pcmcia/version.h should not be used (as of 2.6.13)"
msgstr ""

#: ../../../pcmcia/driver-changes.rst:100
msgid "This file will be removed eventually."
msgstr ""

#: ../../../pcmcia/driver-changes.rst:102
msgid "in-kernel device<->driver matching (as of 2.6.13)"
msgstr ""

#: ../../../pcmcia/driver-changes.rst:103
msgid ""
"PCMCIA devices and their correct drivers can now be matched in kernelspace. "
"See 'devicetable.txt' for details."
msgstr ""

#: ../../../pcmcia/driver-changes.rst:106
msgid "Device model integration (as of 2.6.11)"
msgstr ""

#: ../../../pcmcia/driver-changes.rst:107
msgid ""
"A struct pcmcia_device is registered with the device model core, and can be "
"used (e.g. for SET_NETDEV_DEV) by using handle_to_dev(client_handle_t * "
"handle)."
msgstr ""

#: ../../../pcmcia/driver-changes.rst:111
msgid "Convert internal I/O port addresses to unsigned int (as of 2.6.11)"
msgstr ""

#: ../../../pcmcia/driver-changes.rst:112
msgid "ioaddr_t should be replaced by unsigned int in PCMCIA card drivers."
msgstr ""

#: ../../../pcmcia/driver-changes.rst:114
msgid "irq_mask and irq_list parameters (as of 2.6.11)"
msgstr ""

#: ../../../pcmcia/driver-changes.rst:115
msgid ""
"The irq_mask and irq_list parameters should no longer be used in PCMCIA card "
"drivers. Instead, it is the job of the PCMCIA core to determine which IRQ "
"should be used. Therefore, link->irq.IRQInfo2 is ignored."
msgstr ""

#: ../../../pcmcia/driver-changes.rst:120
msgid "client->PendingEvents is gone (as of 2.6.11)"
msgstr ""

#: ../../../pcmcia/driver-changes.rst:121
msgid "client->PendingEvents is no longer available."
msgstr ""

#: ../../../pcmcia/driver-changes.rst:123
msgid "client->Attributes are gone (as of 2.6.11)"
msgstr ""

#: ../../../pcmcia/driver-changes.rst:124
msgid ""
"client->Attributes is unused, therefore it is removed from all PCMCIA card "
"drivers"
msgstr ""

#: ../../../pcmcia/driver-changes.rst:127
msgid "core functions no longer available (as of 2.6.11)"
msgstr ""

#: ../../../pcmcia/driver-changes.rst:128
msgid ""
"The following functions have been removed from the kernel source because "
"they are unused by all in-kernel drivers, and no external driver was "
"reported to rely on them::"
msgstr ""

#: ../../../pcmcia/driver-changes.rst:139
msgid "device list iteration upon module removal (as of 2.6.10)"
msgstr ""

#: ../../../pcmcia/driver-changes.rst:140
msgid ""
"It is no longer necessary to iterate on the driver's internal client list "
"and call the ->detach() function upon module removal."
msgstr ""

#: ../../../pcmcia/driver-changes.rst:143
msgid "Resource management. (as of 2.6.8)"
msgstr ""

#: ../../../pcmcia/driver-changes.rst:144
msgid ""
"Although the PCMCIA subsystem will allocate resources for cards, it no "
"longer marks these resources busy. This means that driver authors are now "
"responsible for claiming your resources as per other drivers in Linux. You "
"should use request_region() to mark your IO regions in-use, and "
"request_mem_region() to mark your memory regions in-use. The name argument "
"should be a pointer to your driver name. Eg, for pcnet_cs, name should point "
"to the string \"pcnet_cs\"."
msgstr ""

#: ../../../pcmcia/driver-changes.rst:153
msgid ""
"CardServices is gone CardServices() in 2.4 is just a big switch statement to "
"call various services.  In 2.6, all of those entry points are exported and "
"called directly (except for pcmcia_report_error(), just use cs_error() "
"instead)."
msgstr ""

#: ../../../pcmcia/driver-changes.rst:158
msgid ""
"struct pcmcia_driver You need to use struct pcmcia_driver and pcmcia_{un,}"
"register_driver instead of {un,}register_pccard_driver"
msgstr ""
