# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-28 09:03+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../driver-api/target.rst:3
msgid "target and iSCSI Interfaces Guide"
msgstr ""

#: ../../../driver-api/target.rst:6
msgid "Introduction and Overview"
msgstr ""

#: ../../../driver-api/target.rst:8
msgid "TBD"
msgstr ""

#: ../../../driver-api/target.rst:11
msgid "Target core device interfaces"
msgstr ""

#: ../../../driver-api/target.rst:13
msgid ""
"This section is blank because no kerneldoc comments have been added to "
"drivers/target/target_core_device.c."
msgstr ""

#: ../../../driver-api/target.rst:17
msgid "Target core transport interfaces"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:272
msgid "initialize a session object"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:276
#: drivers/target/target_core_transport.c:290
#: drivers/target/target_core_transport.c:311
#: drivers/target/target_core_transport.c:1672
#: drivers/target/target_core_transport.c:1731
#: drivers/target/target_core_transport.c:1810
#: drivers/target/target_core_transport.c:1927
#: drivers/target/target_core_transport.c:1967
#: drivers/target/target_core_transport.c:2997
#: drivers/target/target_core_transport.c:3059
#: drivers/target/target_core_transport.c:3183
#: drivers/target/target_core_transport.c:3196
#: drivers/target/target_core_transport.c:3206
#: drivers/target/target_core_transport.c:3228
#: drivers/target/target_core_transport.c:3298
#: drivers/target/target_core_transport.c:3564 ../../../driver-api/target:34:
#: drivers/scsi/libiscsi.c:139 drivers/scsi/libiscsi.c:498
#: drivers/scsi/libiscsi.c:552 drivers/scsi/libiscsi.c:1177
#: drivers/scsi/libiscsi.c:1206 drivers/scsi/libiscsi.c:1402
#: drivers/scsi/libiscsi.c:1566 drivers/scsi/libiscsi.c:2005
#: drivers/scsi/libiscsi.c:2024 drivers/scsi/libiscsi.c:2049
#: drivers/scsi/libiscsi.c:2291 drivers/scsi/libiscsi.c:2602
#: drivers/scsi/libiscsi.c:2750 drivers/scsi/libiscsi.c:2875
#: drivers/scsi/libiscsi.c:2895 drivers/scsi/libiscsi.c:2940
#: drivers/scsi/libiscsi.c:3006 drivers/scsi/libiscsi.c:3131
#: drivers/scsi/libiscsi.c:3160 drivers/scsi/libiscsi.c:3171
#: drivers/scsi/libiscsi.c:3243 ../../../driver-api/target:41:
#: drivers/scsi/iscsi_boot_sysfs.c:394 drivers/scsi/iscsi_boot_sysfs.c:419
#: drivers/scsi/iscsi_boot_sysfs.c:445 drivers/scsi/iscsi_boot_sysfs.c:471
#: drivers/scsi/iscsi_boot_sysfs.c:497 drivers/scsi/iscsi_boot_sysfs.c:520
#: drivers/scsi/iscsi_boot_sysfs.c:539 ../../../driver-api/target:47:
#: drivers/scsi/iscsi_tcp.c:82 drivers/scsi/iscsi_tcp.c:110
#: drivers/scsi/iscsi_tcp.c:221 drivers/scsi/iscsi_tcp.c:285
#: drivers/scsi/iscsi_tcp.c:343 drivers/scsi/iscsi_tcp.c:394
#: ../../../driver-api/target:50: drivers/scsi/libiscsi_tcp.c:179
#: drivers/scsi/libiscsi_tcp.c:386 drivers/scsi/libiscsi_tcp.c:442
#: drivers/scsi/libiscsi_tcp.c:887 drivers/scsi/libiscsi_tcp.c:900
#: drivers/scsi/libiscsi_tcp.c:983 drivers/scsi/libiscsi_tcp.c:1055
msgid "**Parameters**"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:278
#: drivers/target/target_core_transport.c:313
#: drivers/target/target_core_transport.c:1671
#: drivers/target/target_core_transport.c:1810
#: drivers/target/target_core_transport.c:1968
#: drivers/target/target_core_transport.c:3198
#: drivers/target/target_core_transport.c:3230
msgid "``struct se_session *se_sess``"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:273
msgid "Session object pointer."
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:275
#: drivers/target/target_core_transport.c:1678
#: drivers/target/target_core_transport.c:1741
#: drivers/target/target_core_transport.c:1818
#: drivers/target/target_core_transport.c:1926
#: drivers/target/target_core_transport.c:1976
#: drivers/target/target_core_transport.c:3058 ../../../driver-api/target:34:
#: drivers/scsi/libiscsi.c:497 drivers/scsi/libiscsi.c:553
#: drivers/scsi/libiscsi.c:1177 drivers/scsi/libiscsi.c:1208
#: drivers/scsi/libiscsi.c:1402 drivers/scsi/libiscsi.c:1565
#: drivers/scsi/libiscsi.c:2004 drivers/scsi/libiscsi.c:2023
#: drivers/scsi/libiscsi.c:2291 drivers/scsi/libiscsi.c:2601
#: drivers/scsi/libiscsi.c:2749 drivers/scsi/libiscsi.c:2875
#: drivers/scsi/libiscsi.c:2896 drivers/scsi/libiscsi.c:2940
#: drivers/scsi/libiscsi.c:3011 drivers/scsi/libiscsi.c:3242
#: ../../../driver-api/target:41: drivers/scsi/iscsi_boot_sysfs.c:538
#: ../../../driver-api/target:47: drivers/scsi/iscsi_tcp.c:109
#: drivers/scsi/iscsi_tcp.c:285 ../../../driver-api/target:50:
#: drivers/scsi/libiscsi_tcp.c:181 drivers/scsi/libiscsi_tcp.c:385
#: drivers/scsi/libiscsi_tcp.c:441 drivers/scsi/libiscsi_tcp.c:886
#: drivers/scsi/libiscsi_tcp.c:903 drivers/scsi/libiscsi_tcp.c:1054
msgid "**Description**"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:274
msgid ""
"The caller must have zero-initialized **se_sess** before calling this "
"function."
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:286
msgid "allocate a session object and initialize it"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:292
msgid "``enum target_prot_op sup_prot_ops``"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:287
msgid "bitmask that defines which T10-PI modes are supported."
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:307
msgid "allocate target driver private data"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:308
msgid "Session pointer."
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:310
msgid "``unsigned int tag_num``"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:309
msgid "Maximum number of in-flight commands between initiator and target."
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:311
msgid "``unsigned int tag_size``"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:310
msgid ""
"Size in bytes of the private data a target driver associates with each "
"command."
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1668
msgid "initialize se_cmd"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1674
#: drivers/target/target_core_transport.c:1733
#: drivers/target/target_core_transport.c:1812
#: drivers/target/target_core_transport.c:1929
#: drivers/target/target_core_transport.c:1969
#: drivers/target/target_core_transport.c:2999
#: drivers/target/target_core_transport.c:3061
msgid "``struct se_cmd *se_cmd``"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1669
msgid "command descriptor to init"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1670
#: drivers/target/target_core_transport.c:1809
#: drivers/target/target_core_transport.c:1967
msgid "associated se_sess for endpoint"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1672
#: drivers/target/target_core_transport.c:1812
#: drivers/target/target_core_transport.c:1969
msgid "``unsigned char *sense``"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1671
#: drivers/target/target_core_transport.c:1811
#: drivers/target/target_core_transport.c:1968
msgid "pointer to SCSI sense buffer"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1673
#: drivers/target/target_core_transport.c:1813
#: drivers/target/target_core_transport.c:1970
msgid "``u64 unpacked_lun``"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1672
#: drivers/target/target_core_transport.c:1812
#: drivers/target/target_core_transport.c:1969
msgid "unpacked LUN to reference for struct se_lun"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1674
#: drivers/target/target_core_transport.c:1814
msgid "``u32 data_length``"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1673
#: drivers/target/target_core_transport.c:1813
msgid "fabric expected data transfer length"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1675
#: drivers/target/target_core_transport.c:1815
msgid "``int task_attr``"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1674
#: drivers/target/target_core_transport.c:1814
msgid "SAM task attribute"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1676
#: drivers/target/target_core_transport.c:1816
msgid "``int data_dir``"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1675
#: drivers/target/target_core_transport.c:1815
msgid "DMA data direction"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1677
#: drivers/target/target_core_transport.c:1817
#: drivers/target/target_core_transport.c:1975
msgid "``int flags``"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1676
#: drivers/target/target_core_transport.c:1816
msgid "flags for command submission from target_sc_flags_tables"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1677
#: drivers/target/target_core_transport.c:1817
msgid "Task tags are supported if the caller has set **se_cmd->tag**."
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1680
msgid ""
"If the fabric driver calls target_stop_session, then it must check the "
"return code and handle failures. This will never fail for other drivers, and "
"the return code can be ignored."
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1684
#: drivers/target/target_core_transport.c:1738
msgid "**Return**"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1680
msgid "less than zero to signal active I/O shutdown failure."
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1681
#: drivers/target/target_core_transport.c:1739
msgid "zero on success."
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1727
msgid "prepare cmd for submission"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1728
msgid "command descriptor to prep"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1730
#: drivers/target/target_core_transport.c:1811
msgid "``unsigned char *cdb``"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1729
#: drivers/target/target_core_transport.c:1810
msgid "pointer to SCSI CDB"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1731
msgid "``struct scatterlist *sgl``"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1730
msgid "struct scatterlist memory for unidirectional mapping"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1732
msgid "``u32 sgl_count``"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1731
msgid "scatterlist count for unidirectional mapping"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1733
msgid "``struct scatterlist *sgl_bidi``"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1732
msgid "struct scatterlist memory for bidirectional READ mapping"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1734
msgid "``u32 sgl_bidi_count``"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1733
msgid "scatterlist count for bidirectional READ mapping"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1735
msgid "``struct scatterlist *sgl_prot``"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1734
msgid "struct scatterlist memory protection information"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1736
msgid "``u32 sgl_prot_count``"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1735
msgid "scatterlist count for protection information"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1737
#: drivers/target/target_core_transport.c:1973
msgid "``gfp_t gfp``"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1736
msgid "gfp allocation type"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1738
msgid "less than zero to signal failure."
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1741
msgid ""
"If failure is returned, lio will the callers queue_status to complete the "
"cmd."
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1806
msgid "lookup unpacked lun and submit uninitialized se_cmd"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1808
#: drivers/target/target_core_transport.c:1924
#: drivers/target/target_core_transport.c:1966
msgid "command descriptor to submit"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1819
msgid ""
"This may only be called from process context, and also currently assumes "
"internal allocation of fabric payload buffer by target-core."
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1822
msgid "It also assumes interal target core SGL memory allocation."
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1824
msgid ""
"This function must only be used by drivers that do their own sync during "
"shutdown and does not use target_stop_session. If there is a failure this "
"function will call into the fabric driver's queue_status with a "
"CHECK_CONDITION."
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1923
msgid "perform final initialization and submit cmd to LIO core"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1925
msgid ""
"target_submit_prep or something similar must have been called on the cmd, "
"and this must be called from process context."
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1963
msgid "lookup unpacked lun and submit uninitialized se_cmd for TMR CDBs"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1971
msgid "``void *fabric_tmr_ptr``"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1970
msgid "fabric context for TMR req"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1972
msgid "``unsigned char tm_type``"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1971
msgid "Type of TM request"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1972
msgid "gfp type for caller"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1974
msgid "``u64 tag``"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1973
msgid "referenced task tag for TMR_ABORT_TASK"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1974
msgid "submit cmd flags"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:1975
msgid "Callable from all contexts."
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:2993
msgid "Verify the session is accepting cmds and take ref"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:2994
msgid "command descriptor to add"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:2996
msgid "``bool ack_kref``"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:2995
msgid "Signal that fabric will perform an ack target_put_sess_cmd()"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:3055
msgid "decrease the command reference count"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:3056
msgid "command to drop a reference from"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:3057
msgid ""
"Returns 1 if and only if this target_put_sess_cmd() call caused the refcount "
"to drop to zero. Returns zero otherwise."
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:3179
msgid "Stop new IO from being added to the counter."
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:3185
#: drivers/target/target_core_transport.c:3208
msgid "``struct target_cmd_counter *cmd_cnt``"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:3180
msgid "counter to stop"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:3192
msgid "Stop new IO from being queued on the session."
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:3193
msgid "session to stop"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:3202
msgid "Wait for outstanding cmds."
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:3203
msgid "counter to wait for active I/O for."
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:3224
msgid "Wait for outstanding commands"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:3225
msgid "session to wait for active I/O"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:3294
msgid "set CMD_T_STOP and wait for t_transport_stop_comp"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:3300
#: drivers/target/target_core_transport.c:3566
msgid "``struct se_cmd *cmd``"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:3295
msgid "command to wait on"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:3560
msgid "Send SCSI BUSY status back to the initiator"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:3561
msgid "SCSI command for which to send a BUSY reply."
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:3563
#: ../../../driver-api/target:41: drivers/scsi/iscsi_boot_sysfs.c:398
#: drivers/scsi/iscsi_boot_sysfs.c:423 drivers/scsi/iscsi_boot_sysfs.c:449
#: drivers/scsi/iscsi_boot_sysfs.c:475
msgid "**Note**"
msgstr ""

#: ../../../driver-api/target:19: drivers/target/target_core_transport.c:3563
msgid "Only call this function if target_submit_cmd*() failed."
msgstr ""

#: ../../../driver-api/target.rst:23
msgid "Target-supported userspace I/O"
msgstr ""

#: ../../../driver-api/target:25: drivers/target/target_core_user.c:37
msgid ""
"Define a shared-memory interface for LIO to pass SCSI commands and data to "
"userspace for processing. This is to allow backends that are too complex for "
"in-kernel support to be possible."
msgstr ""

#: ../../../driver-api/target:25: drivers/target/target_core_user.c:41
msgid ""
"It uses the UIO framework to do a lot of the device-creation and "
"introspection work for us."
msgstr ""

#: ../../../driver-api/target:25: drivers/target/target_core_user.c:44
msgid ""
"See the .h file for how the ring is laid out. Note that while the command "
"ring is defined, the particulars of the data area are not. Offset values in "
"the command entry point to other locations internal to the mmap-ed area. "
"There is separate space outside the command ring for data buffers. This "
"leaves maximum flexibility for moving buffer allocations, or even page "
"flipping or other allocation techniques, without altering the command ring "
"layout."
msgstr ""

#: ../../../driver-api/target:25: drivers/target/target_core_user.c:52
msgid ""
"SECURITY: The user process must be assumed to be malicious. There's no way "
"to prevent it breaking the command ring protocol if it wants, but in order "
"to prevent other issues we must only ever read *data* from the shared memory "
"area, not offsets or sizes. This applies to command ring entries as well as "
"the mailbox. Extra code needed for this may have a 'UAM' comment."
msgstr ""

#: ../../../driver-api/target:28: include/uapi/linux/target_core_user.h:16
msgid ""
"The mmaped area is divided into three parts: 1) The mailbox (struct "
"tcmu_mailbox, below); 2) The command ring; 3) Everything beyond the command "
"ring (data)."
msgstr ""

#: ../../../driver-api/target:28: include/uapi/linux/target_core_user.h:21
msgid ""
"The mailbox tells userspace the offset of the command ring from the start of "
"the shared memory region, and how big the command ring is."
msgstr ""

#: ../../../driver-api/target:28: include/uapi/linux/target_core_user.h:24
msgid ""
"The kernel passes SCSI commands to userspace by putting a struct "
"tcmu_cmd_entry in the ring, updating mailbox->cmd_head, and poking userspace "
"via UIO's interrupt mechanism."
msgstr ""

#: ../../../driver-api/target:28: include/uapi/linux/target_core_user.h:28
msgid ""
"tcmu_cmd_entry contains a header. If the header type is PAD, userspace "
"should skip hdr->length bytes (mod cmdr_size) to find the next cmd_entry."
msgstr ""

#: ../../../driver-api/target:28: include/uapi/linux/target_core_user.h:32
msgid ""
"Otherwise, the entry will contain offsets into the mmaped area that contain "
"the cdb and data buffers -- the latter accessible via the iov array. iov "
"addresses are also offsets into the shared area."
msgstr ""

#: ../../../driver-api/target:28: include/uapi/linux/target_core_user.h:36
msgid ""
"When userspace is completed handling the command, set entry->rsp."
"scsi_status, fill in rsp.sense_buffer if appropriate, and also set mailbox-"
">cmd_tail equal to the old cmd_tail plus hdr->length, mod cmdr_size. If "
"cmd_tail doesn't equal cmd_head, it should process the next packet the same "
"way, and so on."
msgstr ""

#: ../../../driver-api/target.rst:32
msgid "iSCSI helper functions"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:135
msgid "initialize Data-Out"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:141
#: drivers/scsi/libiscsi.c:500 drivers/scsi/libiscsi.c:554
#: drivers/scsi/libiscsi.c:1568 ../../../driver-api/target:50:
#: drivers/scsi/libiscsi_tcp.c:444 drivers/scsi/libiscsi_tcp.c:985
#: drivers/scsi/libiscsi_tcp.c:1057
msgid "``struct iscsi_task *task``"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:136
#: ../../../driver-api/target:50: drivers/scsi/libiscsi_tcp.c:980
msgid "scsi command task"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:138
msgid "``struct iscsi_r2t_info *r2t``"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:137
msgid "R2T info"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:139
msgid "``struct iscsi_data *hdr``"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:138
msgid "iscsi data in pdu"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:140
msgid "**Notes**"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:140
msgid ""
"Initialize Data-Out within this R2T sequence and finds proper data_offset "
"within this SCSI command."
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:143
msgid "This function is called with connection lock taken."
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:494
msgid "drop the refcount on a task"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:495
msgid "iscsi_task to drop the refcount on"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:496
msgid "The back_lock must be held when calling in case it frees the task."
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:548
msgid "finish scsi task normally"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:549
msgid "iscsi task for scsi cmd"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:551
msgid "``uint32_t exp_cmdsn``"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:550
msgid "expected cmd sn in cpu format"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:552
msgid "``uint32_t max_cmdsn``"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:551
msgid "max cmd sn in cpu format"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:552
msgid ""
"This is used when drivers do not need or cannot perform lower level pdu "
"processing."
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:555
msgid "Called with session back_lock"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:1173
msgid "look up task by itt"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:1179
#: drivers/scsi/libiscsi.c:1208 drivers/scsi/libiscsi.c:1404
#: drivers/scsi/libiscsi.c:2007 drivers/scsi/libiscsi.c:2026
#: drivers/scsi/libiscsi.c:2051 ../../../driver-api/target:47:
#: drivers/scsi/iscsi_tcp.c:345 drivers/scsi/iscsi_tcp.c:396
#: ../../../driver-api/target:50: drivers/scsi/libiscsi_tcp.c:902
msgid "``struct iscsi_conn *conn``"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:1174
#: drivers/scsi/libiscsi.c:1399 ../../../driver-api/target:47:
#: drivers/scsi/iscsi_tcp.c:340 drivers/scsi/iscsi_tcp.c:391
#: ../../../driver-api/target:50: drivers/scsi/libiscsi_tcp.c:897
msgid "iscsi connection"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:1176
#: drivers/scsi/libiscsi.c:1401
msgid "``itt_t itt``"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:1175
#: drivers/scsi/libiscsi.c:1400
msgid "itt"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:1176
msgid ""
"This should be used for mgmt tasks like login and nops, or if the LDD's itt "
"space does not include the session age."
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:1179
#: drivers/scsi/libiscsi.c:1403
msgid "The session back_lock must be held."
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:1202
msgid "complete pdu"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:1203
msgid "iscsi conn"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:1205
msgid "``struct iscsi_hdr *hdr``"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:1204
msgid "iscsi header"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:1206
msgid "``char *data``"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:1205
msgid "data buffer"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:1207
msgid "``int datalen``"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:1206
msgid "len of data buffer"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:1207
msgid ""
"Completes pdu processing by freeing any resources allocated at queuecommand "
"or send generic. session back_lock must be held and verify itt must have "
"been called."
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:1398
msgid "look up ctask by itt"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:1401
msgid "This should be used for cmd tasks."
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:1562
msgid "requeue task to run from session workqueue"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:1563
msgid "task to requeue"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:1564
msgid "Callers must have taken a ref to the task that is going to be requeued."
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:2001
msgid "suspend iscsi_queuecommand"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:2002
msgid "iscsi conn to stop queueing IO on"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:2003
msgid ""
"This grabs the session frwd_lock to make sure no one is in xmit_task/"
"queuecommand, and then sets suspend to prevent new commands from being "
"queued. This only needs to be called by offload drivers that need to sync a "
"path like ep disconnect with the iscsi_queuecommand/xmit_task. To start IO "
"again libiscsi will call iscsi_start_tx and iscsi_unblock_session when in "
"FFP."
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:2020
msgid "suspend iscsi_data_xmit"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:2021
msgid "iscsi conn to stop processing IO on."
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:2022
msgid ""
"This function sets the suspend bit to prevent iscsi_data_xmit from sending "
"new IO, and if work is queued on the xmit thread it will wait for it to be "
"completed."
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:2045
msgid "Prevent recvwork from running again."
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:2046
msgid "iscsi conn to stop."
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:2287
msgid "prevent queueing to conn."
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:2293
#: drivers/scsi/libiscsi.c:3245
msgid "``struct iscsi_cls_conn *cls_conn``"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:2288
msgid "iscsi conn ep is bound to."
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:2290
msgid "``bool is_active``"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:2289
msgid "is the conn in use for boot or is this for EH/termination"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:2290
msgid ""
"This must be called by drivers implementing the ep_disconnect callout. It "
"disables queueing to the connection from libiscsi in preparation for an "
"ep_disconnect call."
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:2598
msgid "drop session and attempt relogin"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:2604
#: drivers/scsi/libiscsi.c:2752
msgid "``struct scsi_cmnd *sc``"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:2599
#: drivers/scsi/libiscsi.c:2747
msgid "scsi command"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:2600
msgid ""
"This function will wait for a relogin, session termination from userspace, "
"or a recovery/replacement timeout."
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:2746
msgid "reset target and possibly the session"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:2748
msgid ""
"This will attempt to send a warm target reset. If that fails, we will "
"escalate to ERL0 session recovery."
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:2871
msgid "add host to system"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:2877
#: drivers/scsi/libiscsi.c:2942 drivers/scsi/libiscsi.c:3005
msgid "``struct Scsi_Host *shost``"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:2872
#: drivers/scsi/libiscsi.c:2937 drivers/scsi/libiscsi.c:3004
msgid "scsi host"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:2874
msgid "``struct device *pdev``"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:2873
msgid "parent device"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:2874
msgid ""
"This should be called by partial offload and software iscsi drivers to add a "
"host to the system."
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:2891
msgid "allocate a host and driver data"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:2897
msgid "``const struct scsi_host_template *sht``"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:2892
msgid "scsi host template"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:2894
msgid "``int dd_data_size``"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:2893
msgid "driver host data size"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:2895
msgid "``bool xmit_can_sleep``"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:2894
msgid "bool indicating if LLD will queue IO from a work queue"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:2895
msgid ""
"This should be called by partial offload and software iscsi drivers. To "
"access the driver specific memory use the iscsi_host_priv() macro."
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:2936
msgid "remove host and sessions"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:2939
msgid "``bool is_shutdown``"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:2938
msgid "true if called from a driver shutdown callout"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:2939
msgid ""
"If there are any sessions left, this will initiate the removal and wait for "
"the completion."
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:3002
msgid "create iscsi cls session and host and session"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:3008
msgid "``struct iscsi_transport *iscsit``"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:3003
msgid "iscsi transport template"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:3006
msgid "``uint16_t cmds_max``"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:3005
msgid "session can queue"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:3007
#: drivers/scsi/libiscsi.c:3170
msgid "``int dd_size``"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:3006
msgid "private driver data size, added to session allocation size"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:3008
msgid "``int cmd_task_size``"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:3007
msgid "LLD task private data size"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:3009
msgid "``uint32_t initial_cmdsn``"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:3008
msgid "initial CmdSN"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:3010
msgid "``unsigned int id``"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:3009
msgid "target ID to add to this session"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:3010
msgid ""
"This can be used by software iscsi_transports that allocate a session per "
"scsi host."
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:3013
msgid ""
"Callers should set cmds_max to the largest total numer (mgmt + scsi) of "
"tasks they support. The iscsi layer reserves ISCSI_MGMT_CMDS_MAX tasks for "
"nop handling and login/logout requests."
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:3127
msgid "Free iscsi session and it's resources"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:3133
#: drivers/scsi/libiscsi.c:3162 drivers/scsi/libiscsi.c:3173
msgid "``struct iscsi_cls_session *cls_session``"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:3128
#: drivers/scsi/libiscsi.c:3157
msgid "iscsi session"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:3156
msgid "destroy session and cls_session"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:3167
msgid "create iscsi_cls_conn and iscsi_conn"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:3168
msgid "iscsi_cls_session"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:3169
msgid "private driver data size"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:3171
msgid "``uint32_t conn_idx``"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:3170
msgid "cid"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:3239
msgid "teardown iscsi connection"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:3240
msgid "iscsi class connection"
msgstr ""

#: ../../../driver-api/target:34: drivers/scsi/libiscsi.c:3241
msgid ""
"TODO: we may need to make this into a two step process like scsi-mls remove "
"+ put host"
msgstr ""

#: ../../../driver-api/target.rst:39
msgid "iSCSI boot information"
msgstr ""

#: ../../../driver-api/target:41: drivers/scsi/iscsi_boot_sysfs.c:390
msgid "create boot target sysfs dir"
msgstr ""

#: ../../../driver-api/target:41: drivers/scsi/iscsi_boot_sysfs.c:396
#: drivers/scsi/iscsi_boot_sysfs.c:421 drivers/scsi/iscsi_boot_sysfs.c:447
#: drivers/scsi/iscsi_boot_sysfs.c:473 drivers/scsi/iscsi_boot_sysfs.c:541
msgid "``struct iscsi_boot_kset *boot_kset``"
msgstr ""

#: ../../../driver-api/target:41: drivers/scsi/iscsi_boot_sysfs.c:391
#: drivers/scsi/iscsi_boot_sysfs.c:416 drivers/scsi/iscsi_boot_sysfs.c:442
#: drivers/scsi/iscsi_boot_sysfs.c:468 drivers/scsi/iscsi_boot_sysfs.c:536
msgid "boot kset"
msgstr ""

#: ../../../driver-api/target:41: drivers/scsi/iscsi_boot_sysfs.c:393
#: drivers/scsi/iscsi_boot_sysfs.c:418 drivers/scsi/iscsi_boot_sysfs.c:444
#: drivers/scsi/iscsi_boot_sysfs.c:470
msgid "``int index``"
msgstr ""

#: ../../../driver-api/target:41: drivers/scsi/iscsi_boot_sysfs.c:392
msgid "the target id"
msgstr ""

#: ../../../driver-api/target:41: drivers/scsi/iscsi_boot_sysfs.c:394
#: drivers/scsi/iscsi_boot_sysfs.c:419 drivers/scsi/iscsi_boot_sysfs.c:445
#: drivers/scsi/iscsi_boot_sysfs.c:471
msgid "``void *data``"
msgstr ""

#: ../../../driver-api/target:41: drivers/scsi/iscsi_boot_sysfs.c:393
msgid "driver specific data for target"
msgstr ""

#: ../../../driver-api/target:41: drivers/scsi/iscsi_boot_sysfs.c:395
#: drivers/scsi/iscsi_boot_sysfs.c:420 drivers/scsi/iscsi_boot_sysfs.c:446
msgid "``ssize_t (*show) (void *data, int type, char *buf)``"
msgstr ""

#: ../../../driver-api/target:41: drivers/scsi/iscsi_boot_sysfs.c:394
#: drivers/scsi/iscsi_boot_sysfs.c:419 drivers/scsi/iscsi_boot_sysfs.c:445
#: drivers/scsi/iscsi_boot_sysfs.c:471
msgid "attr show function"
msgstr ""

#: ../../../driver-api/target:41: drivers/scsi/iscsi_boot_sysfs.c:396
#: drivers/scsi/iscsi_boot_sysfs.c:421 drivers/scsi/iscsi_boot_sysfs.c:447
msgid "``umode_t (*is_visible) (void *data, int type)``"
msgstr ""

#: ../../../driver-api/target:41: drivers/scsi/iscsi_boot_sysfs.c:395
#: drivers/scsi/iscsi_boot_sysfs.c:420 drivers/scsi/iscsi_boot_sysfs.c:446
#: drivers/scsi/iscsi_boot_sysfs.c:472
msgid "attr visibility function"
msgstr ""

#: ../../../driver-api/target:41: drivers/scsi/iscsi_boot_sysfs.c:397
#: drivers/scsi/iscsi_boot_sysfs.c:422 drivers/scsi/iscsi_boot_sysfs.c:448
msgid "``void (*release) (void *data)``"
msgstr ""

#: ../../../driver-api/target:41: drivers/scsi/iscsi_boot_sysfs.c:396
#: drivers/scsi/iscsi_boot_sysfs.c:421 drivers/scsi/iscsi_boot_sysfs.c:447
#: drivers/scsi/iscsi_boot_sysfs.c:473
msgid "release function"
msgstr ""

#: ../../../driver-api/target:41: drivers/scsi/iscsi_boot_sysfs.c:398
msgid ""
"The boot sysfs lib will free the data passed in for the caller when all refs "
"to the target kobject have been released."
msgstr ""

#: ../../../driver-api/target:41: drivers/scsi/iscsi_boot_sysfs.c:415
msgid "create boot initiator sysfs dir"
msgstr ""

#: ../../../driver-api/target:41: drivers/scsi/iscsi_boot_sysfs.c:417
msgid "the initiator id"
msgstr ""

#: ../../../driver-api/target:41: drivers/scsi/iscsi_boot_sysfs.c:418
#: drivers/scsi/iscsi_boot_sysfs.c:444 drivers/scsi/iscsi_boot_sysfs.c:470
msgid "driver specific data"
msgstr ""

#: ../../../driver-api/target:41: drivers/scsi/iscsi_boot_sysfs.c:423
msgid ""
"The boot sysfs lib will free the data passed in for the caller when all refs "
"to the initiator kobject have been released."
msgstr ""

#: ../../../driver-api/target:41: drivers/scsi/iscsi_boot_sysfs.c:441
msgid "create boot ethernet sysfs dir"
msgstr ""

#: ../../../driver-api/target:41: drivers/scsi/iscsi_boot_sysfs.c:443
msgid "the ethernet device id"
msgstr ""

#: ../../../driver-api/target:41: drivers/scsi/iscsi_boot_sysfs.c:449
msgid ""
"The boot sysfs lib will free the data passed in for the caller when all refs "
"to the ethernet kobject have been released."
msgstr ""

#: ../../../driver-api/target:41: drivers/scsi/iscsi_boot_sysfs.c:467
msgid "create boot acpi table sysfs dir"
msgstr ""

#: ../../../driver-api/target:41: drivers/scsi/iscsi_boot_sysfs.c:469
msgid "not used"
msgstr ""

#: ../../../driver-api/target:41: drivers/scsi/iscsi_boot_sysfs.c:472
msgid "``ssize_t (*show)(void *data, int type, char *buf)``"
msgstr ""

#: ../../../driver-api/target:41: drivers/scsi/iscsi_boot_sysfs.c:473
msgid "``umode_t (*is_visible)(void *data, int type)``"
msgstr ""

#: ../../../driver-api/target:41: drivers/scsi/iscsi_boot_sysfs.c:474
msgid "``void (*release)(void *data)``"
msgstr ""

#: ../../../driver-api/target:41: drivers/scsi/iscsi_boot_sysfs.c:475
msgid ""
"The boot sysfs lib will free the data passed in for the caller when all refs "
"to the acpitbl kobject have been released."
msgstr ""

#: ../../../driver-api/target:41: drivers/scsi/iscsi_boot_sysfs.c:493
msgid "creates root sysfs tree"
msgstr ""

#: ../../../driver-api/target:41: drivers/scsi/iscsi_boot_sysfs.c:499
msgid "``const char *set_name``"
msgstr ""

#: ../../../driver-api/target:41: drivers/scsi/iscsi_boot_sysfs.c:494
msgid "name of root dir"
msgstr ""

#: ../../../driver-api/target:41: drivers/scsi/iscsi_boot_sysfs.c:516
msgid "creates root sysfs tree for a scsi host"
msgstr ""

#: ../../../driver-api/target:41: drivers/scsi/iscsi_boot_sysfs.c:522
msgid "``unsigned int hostno``"
msgstr ""

#: ../../../driver-api/target:41: drivers/scsi/iscsi_boot_sysfs.c:517
msgid "host number of scsi host"
msgstr ""

#: ../../../driver-api/target:41: drivers/scsi/iscsi_boot_sysfs.c:535
msgid "destroy kset and kobjects under it"
msgstr ""

#: ../../../driver-api/target:41: drivers/scsi/iscsi_boot_sysfs.c:537
msgid "This will remove the kset and kobjects and attrs under it."
msgstr ""

#: ../../../driver-api/target.rst:45
msgid "iSCSI TCP interfaces"
msgstr ""

#: ../../../driver-api/target:47: drivers/scsi/iscsi_tcp.c:78
msgid "TCP receive in sendfile fashion"
msgstr ""

#: ../../../driver-api/target:47: drivers/scsi/iscsi_tcp.c:84
msgid "``read_descriptor_t *rd_desc``"
msgstr ""

#: ../../../driver-api/target:47: drivers/scsi/iscsi_tcp.c:79
msgid "read descriptor"
msgstr ""

#: ../../../driver-api/target:47: drivers/scsi/iscsi_tcp.c:81
#: ../../../driver-api/target:50: drivers/scsi/libiscsi_tcp.c:899
msgid "``struct sk_buff *skb``"
msgstr ""

#: ../../../driver-api/target:47: drivers/scsi/iscsi_tcp.c:80
msgid "socket buffer"
msgstr ""

#: ../../../driver-api/target:47: drivers/scsi/iscsi_tcp.c:82
#: ../../../driver-api/target:50: drivers/scsi/libiscsi_tcp.c:900
msgid "``unsigned int offset``"
msgstr ""

#: ../../../driver-api/target:47: drivers/scsi/iscsi_tcp.c:81
#: ../../../driver-api/target:50: drivers/scsi/libiscsi_tcp.c:899
msgid "offset in skb"
msgstr ""

#: ../../../driver-api/target:47: drivers/scsi/iscsi_tcp.c:83
msgid "``size_t len``"
msgstr ""

#: ../../../driver-api/target:47: drivers/scsi/iscsi_tcp.c:82
msgid "skb->len - offset"
msgstr ""

#: ../../../driver-api/target:47: drivers/scsi/iscsi_tcp.c:106
msgid "check socket state"
msgstr ""

#: ../../../driver-api/target:47: drivers/scsi/iscsi_tcp.c:112
#: drivers/scsi/iscsi_tcp.c:223
msgid "``struct sock *sk``"
msgstr ""

#: ../../../driver-api/target:47: drivers/scsi/iscsi_tcp.c:107
msgid "socket"
msgstr ""

#: ../../../driver-api/target:47: drivers/scsi/iscsi_tcp.c:108
msgid ""
"If the socket is in CLOSE or CLOSE_WAIT we should not close the connection "
"if there is still some data pending."
msgstr ""

#: ../../../driver-api/target:47: drivers/scsi/iscsi_tcp.c:112
msgid "Must be called with sk_callback_lock."
msgstr ""

#: ../../../driver-api/target:47: drivers/scsi/iscsi_tcp.c:217
msgid "Called when more output buffer space is available"
msgstr ""

#: ../../../driver-api/target:47: drivers/scsi/iscsi_tcp.c:218
msgid "socket space is available for"
msgstr ""

#: ../../../driver-api/target:47: drivers/scsi/iscsi_tcp.c:281
msgid "transmit segment"
msgstr ""

#: ../../../driver-api/target:47: drivers/scsi/iscsi_tcp.c:287
#: ../../../driver-api/target:50: drivers/scsi/libiscsi_tcp.c:181
#: drivers/scsi/libiscsi_tcp.c:388 drivers/scsi/libiscsi_tcp.c:889
msgid "``struct iscsi_tcp_conn *tcp_conn``"
msgstr ""

#: ../../../driver-api/target:47: drivers/scsi/iscsi_tcp.c:282
msgid "the iSCSI TCP connection"
msgstr ""

#: ../../../driver-api/target:47: drivers/scsi/iscsi_tcp.c:284
#: ../../../driver-api/target:50: drivers/scsi/libiscsi_tcp.c:178
msgid "``struct iscsi_segment *segment``"
msgstr ""

#: ../../../driver-api/target:47: drivers/scsi/iscsi_tcp.c:283
msgid "the buffer to transmnit"
msgstr ""

#: ../../../driver-api/target:47: drivers/scsi/iscsi_tcp.c:284
msgid ""
"This function transmits as much of the buffer as the network layer will "
"accept, and returns the number of bytes transmitted."
msgstr ""

#: ../../../driver-api/target:47: drivers/scsi/iscsi_tcp.c:288
msgid ""
"If CRC hashing is enabled, the function will compute the hash as it goes. "
"When the entire segment has been transmitted, it will retrieve the hash "
"value and send it as well."
msgstr ""

#: ../../../driver-api/target:47: drivers/scsi/iscsi_tcp.c:339
msgid "TCP transmit"
msgstr ""

#: ../../../driver-api/target:47: drivers/scsi/iscsi_tcp.c:390
msgid "return the number of bytes queued for xmit"
msgstr ""

#: ../../../driver-api/target:50: drivers/scsi/libiscsi_tcp.c:175
msgid "check whether the segment is complete"
msgstr ""

#: ../../../driver-api/target:50: drivers/scsi/libiscsi_tcp.c:176
msgid "iscsi tcp connection"
msgstr ""

#: ../../../driver-api/target:50: drivers/scsi/libiscsi_tcp.c:177
msgid "iscsi segment to check"
msgstr ""

#: ../../../driver-api/target:50: drivers/scsi/libiscsi_tcp.c:179
msgid "``int recv``"
msgstr ""

#: ../../../driver-api/target:50: drivers/scsi/libiscsi_tcp.c:178
msgid "set to one of this is called from the recv path"
msgstr ""

#: ../../../driver-api/target:50: drivers/scsi/libiscsi_tcp.c:180
msgid "``unsigned copied``"
msgstr ""

#: ../../../driver-api/target:50: drivers/scsi/libiscsi_tcp.c:179
msgid "number of bytes copied"
msgstr ""

#: ../../../driver-api/target:50: drivers/scsi/libiscsi_tcp.c:180
msgid ""
"Check if we're done receiving this segment. If the receive buffer is full "
"but we expect more data, move on to the next entry in the scatterlist."
msgstr ""

#: ../../../driver-api/target:50: drivers/scsi/libiscsi_tcp.c:184
msgid ""
"If the amount of data we received isn't a multiple of 4, we will "
"transparently receive the pad bytes, too."
msgstr ""

#: ../../../driver-api/target:50: drivers/scsi/libiscsi_tcp.c:187
msgid "This function must be re-entrant."
msgstr ""

#: ../../../driver-api/target:50: drivers/scsi/libiscsi_tcp.c:382
msgid "prep segment for hdr reception"
msgstr ""

#: ../../../driver-api/target:50: drivers/scsi/libiscsi_tcp.c:383
msgid "iscsi connection to prep for"
msgstr ""

#: ../../../driver-api/target:50: drivers/scsi/libiscsi_tcp.c:384
msgid ""
"This function always passes NULL for the crcp argument, because when this "
"function is called we do not yet know the final size of the header and want "
"to delay the digest processing until we know that."
msgstr ""

#: ../../../driver-api/target:50: drivers/scsi/libiscsi_tcp.c:438
msgid "free tcp_task resources"
msgstr ""

#: ../../../driver-api/target:50: drivers/scsi/libiscsi_tcp.c:439
msgid "iscsi task"
msgstr ""

#: ../../../driver-api/target:50: drivers/scsi/libiscsi_tcp.c:440
msgid "must be called with session back_lock"
msgstr ""

#: ../../../driver-api/target:50: drivers/scsi/libiscsi_tcp.c:883
msgid "tests if we are reading in a header"
msgstr ""

#: ../../../driver-api/target:50: drivers/scsi/libiscsi_tcp.c:884
msgid "iscsi tcp conn"
msgstr ""

#: ../../../driver-api/target:50: drivers/scsi/libiscsi_tcp.c:885
msgid ""
"returns non zero if we are currently processing or setup to process a header."
msgstr ""

#: ../../../driver-api/target:50: drivers/scsi/libiscsi_tcp.c:896
msgid "Process skb"
msgstr ""

#: ../../../driver-api/target:50: drivers/scsi/libiscsi_tcp.c:898
msgid "network buffer with header and/or data segment"
msgstr ""

#: ../../../driver-api/target:50: drivers/scsi/libiscsi_tcp.c:901
msgid "``bool offloaded``"
msgstr ""

#: ../../../driver-api/target:50: drivers/scsi/libiscsi_tcp.c:900
msgid "bool indicating if transfer was offloaded"
msgstr ""

#: ../../../driver-api/target:50: drivers/scsi/libiscsi_tcp.c:902
msgid "``int *status``"
msgstr ""

#: ../../../driver-api/target:50: drivers/scsi/libiscsi_tcp.c:901
msgid "iscsi TCP status result"
msgstr ""

#: ../../../driver-api/target:50: drivers/scsi/libiscsi_tcp.c:902
msgid ""
"Will return status of transfer in **status**. And will return number of "
"bytes copied."
msgstr ""

#: ../../../driver-api/target:50: drivers/scsi/libiscsi_tcp.c:979
msgid "Initialize iSCSI SCSI_READ or SCSI_WRITE commands"
msgstr ""

#: ../../../driver-api/target:50: drivers/scsi/libiscsi_tcp.c:1051
msgid "xmit normal PDU task"
msgstr ""

#: ../../../driver-api/target:50: drivers/scsi/libiscsi_tcp.c:1052
msgid "iscsi command task"
msgstr ""

#: ../../../driver-api/target:50: drivers/scsi/libiscsi_tcp.c:1053
msgid ""
"We're expected to return 0 when everything was transmitted successfully, -"
"EAGAIN if there's still data in the queue, or != 0 for any other kind of "
"error."
msgstr ""
