# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-21 08:55+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../driver-api/media/v4l2-fh.rst:4
msgid "V4L2 File handles"
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:6
msgid ""
"struct v4l2_fh provides a way to easily keep file handle specific data that "
"is used by the V4L2 framework. Its usage is mandatory in all drivers."
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:9
msgid ""
"struct v4l2_fh is allocated in the driver's ``open()`` file operation "
"handler. It is typically embedded in a larger driver-specific structure. "
"The :c:type:`v4l2_fh` must be initialized with a call to :c:func:"
"`v4l2_fh_init`, and added to the video device with :c:func:`v4l2_fh_add`. "
"This associates the :c:type:`v4l2_fh` with the :c:type:`file` by setting "
"``file->private_data`` to point to the :c:type:`v4l2_fh`."
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:16
msgid ""
"Similarly, the struct v4l2_fh is freed in the driver's ``release()`` file "
"operation handler. It must be removed from the video device with :c:func:"
"`v4l2_fh_del` and cleaned up with :c:func:`v4l2_fh_exit` before being freed."
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:21
msgid ""
"Drivers must not access ``file->private_data`` directly. They can retrieve "
"the :c:type:`v4l2_fh` associated with a :c:type:`file` by calling :c:func:"
"`file_to_v4l2_fh`. Drivers can extract their own file handle structure by "
"using the container_of macro."
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:26
msgid "Example:"
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:69
msgid "Below is a short description of the :c:type:`v4l2_fh` functions used:"
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:71
msgid ""
":c:func:`v4l2_fh_init <v4l2_fh_init>` (:c:type:`fh <v4l2_fh>`, :c:type:`vdev "
"<video_device>`)"
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:74
msgid ""
"Initialise the file handle. This **MUST** be performed in the driver's :c:"
"type:`v4l2_file_operations`->open() handler."
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:77
msgid ""
":c:func:`v4l2_fh_add <v4l2_fh_add>` (:c:type:`fh <v4l2_fh>`, struct file "
"\\*filp)"
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:80
msgid ""
"Add a :c:type:`v4l2_fh` to :c:type:`video_device` file handle list. Must be "
"called once the file handle is completely initialized."
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:83
msgid ""
":c:func:`v4l2_fh_del <v4l2_fh_del>` (:c:type:`fh <v4l2_fh>`, struct file "
"\\*filp)"
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:86
msgid ""
"Unassociate the file handle from :c:type:`video_device`. The file handle "
"exit function may now be called."
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:89
msgid ":c:func:`v4l2_fh_exit <v4l2_fh_exit>` (:c:type:`fh <v4l2_fh>`)"
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:92
msgid ""
"Uninitialise the file handle. After uninitialisation the :c:type:`v4l2_fh` "
"memory can be freed."
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:95
msgid ":c:func:`file_to_v4l2_fh <file_to_v4l2_fh>` (struct file \\*filp)"
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:98
msgid ""
"Retrieve the :c:type:`v4l2_fh` instance associated with a :c:type:`file`."
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:100
msgid ""
"If struct v4l2_fh is not embedded, then you can use these helper functions:"
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:102
msgid ":c:func:`v4l2_fh_open <v4l2_fh_open>` (struct file \\*filp)"
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:105
msgid ""
"This allocates a struct v4l2_fh, initializes it and adds it to the struct "
"video_device associated with the file struct."
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:108
msgid ":c:func:`v4l2_fh_release <v4l2_fh_release>` (struct file \\*filp)"
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:111
msgid ""
"This deletes it from the struct video_device associated with the file "
"struct, uninitialised the :c:type:`v4l2_fh` and frees it."
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:114
msgid ""
"These two functions can be plugged into the v4l2_file_operation's ``open()`` "
"and ``release()`` ops."
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:117
msgid ""
"Several drivers need to do something when the first file handle is opened "
"and when the last file handle closes. Two helper functions were added to "
"check whether the :c:type:`v4l2_fh` struct is the only open filehandle of "
"the associated device node:"
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:122
msgid ""
":c:func:`v4l2_fh_is_singular <v4l2_fh_is_singular>` (:c:type:`fh <v4l2_fh>`)"
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:125
msgid "Returns 1 if the file handle is the only open file handle, else 0."
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:127
msgid ""
":c:func:`v4l2_fh_is_singular_file <v4l2_fh_is_singular_file>` (struct file "
"\\*filp)"
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:130
msgid "Same, but it calls v4l2_fh_is_singular with filp->private_data."
msgstr ""

#: ../../../driver-api/media/v4l2-fh.rst:134
msgid "V4L2 fh functions and data structures"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:25
msgid "Describes a V4L2 file handler"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:29
msgid "**Definition**::"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:45
msgid "**Members**"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:27
msgid "``list``"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:28
msgid "list of file handlers"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:28
msgid "``vdev``"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:29
#: include/media/v4l2-fh.h:77
msgid "pointer to :c:type:`struct video_device <video_device>`"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:29
msgid "``ctrl_handler``"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:30
msgid "pointer to :c:type:`struct v4l2_ctrl_handler <v4l2_ctrl_handler>`"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:30
msgid "``prio``"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:31
msgid ""
"priority of the file handler, as defined by :c:type:`enum v4l2_priority "
"<v4l2_priority>`"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:32
msgid "``wait``"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:33
msgid "event' s wait queue"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:33
msgid "``subscribe_lock``"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:34
msgid ""
"serialise changes to the subscribed list; guarantee that the add and del "
"event callbacks are orderly called"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:35
msgid "``subscribed``"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:36
msgid "list of subscribed events"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:36
msgid "``available``"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:37
msgid "list of events waiting to be dequeued"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:37
msgid "``navailable``"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:38
msgid "number of available events at **available** list"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:38
msgid "``sequence``"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:39
msgid "event sequence number"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:40
msgid "``m2m_ctx``"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:41
msgid "pointer to :c:type:`struct v4l2_m2m_ctx <v4l2_m2m_ctx>`"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:60
msgid "Return the v4l2_fh associated with a struct file"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:64
#: include/media/v4l2-fh.h:78 include/media/v4l2-fh.h:91
#: include/media/v4l2-fh.h:104 include/media/v4l2-fh.h:118
#: include/media/v4l2-fh.h:132 include/media/v4l2-fh.h:146
#: include/media/v4l2-fh.h:160 include/media/v4l2-fh.h:170
msgid "**Parameters**"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:66
#: include/media/v4l2-fh.h:91 include/media/v4l2-fh.h:106
#: include/media/v4l2-fh.h:118 include/media/v4l2-fh.h:148
#: include/media/v4l2-fh.h:172
msgid "``struct file *filp``"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:62
msgid "pointer to :c:type:`struct file <file>`"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:64
#: include/media/v4l2-fh.h:79 include/media/v4l2-fh.h:92
#: include/media/v4l2-fh.h:105 include/media/v4l2-fh.h:119
#: include/media/v4l2-fh.h:132 include/media/v4l2-fh.h:147
#: include/media/v4l2-fh.h:161 include/media/v4l2-fh.h:171
msgid "**Description**"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:63
msgid ""
"This function should be used by drivers to retrieve the :c:type:`struct "
"v4l2_fh <v4l2_fh>` instance pointer stored in the file private_data instead "
"of accessing the private_data field directly."
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:74
msgid "Initialise the file handle."
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:80
#: include/media/v4l2-fh.h:93 include/media/v4l2-fh.h:120
#: include/media/v4l2-fh.h:134 include/media/v4l2-fh.h:162
msgid "``struct v4l2_fh *fh``"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:76
#: include/media/v4l2-fh.h:89 include/media/v4l2-fh.h:116
#: include/media/v4l2-fh.h:130 include/media/v4l2-fh.h:159
msgid "pointer to :c:type:`struct v4l2_fh <v4l2_fh>`"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:78
msgid "``struct video_device *vdev``"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:78
msgid ""
"Parts of the V4L2 framework using the file handles should be initialised in "
"this function. Must be called from driver's v4l2_file_operations->open\\(\\) "
"handler if the driver uses :c:type:`struct v4l2_fh <v4l2_fh>`."
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:87
msgid "Add the fh to the list of file handles on a video_device."
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:90
#: include/media/v4l2-fh.h:117
msgid "pointer to :c:type:`struct file <file>` associated with **fh**"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:91
msgid "The function sets filp->private_data to point to **fh**."
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:94
msgid "The **fh** file handle must be initialised first."
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:100
msgid ""
"Ancillary routine that can be used as the open\\(\\) op of "
"v4l2_file_operations."
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:103
#: include/media/v4l2-fh.h:145 include/media/v4l2-fh.h:169
msgid "pointer to struct file"
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:104
msgid ""
"It allocates a v4l2_fh and inits and adds it to the :c:type:`struct "
"video_device <video_device>` associated with the file pointer."
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:107
msgid ""
"On error filp->private_data will be ``NULL``, otherwise it will point to "
"the :c:type:`struct v4l2_fh <v4l2_fh>`."
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:114
msgid "Remove file handle from the list of file handles."
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:118
msgid "The function resets filp->private_data to NULL."
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:121
#: include/media/v4l2-fh.h:135
msgid ""
"Must be called in v4l2_file_operations->release\\(\\) handler if the driver "
"uses :c:type:`struct v4l2_fh <v4l2_fh>`."
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:128
msgid "Release resources related to a file handle."
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:131
msgid ""
"Parts of the V4L2 framework using the v4l2_fh must release their resources "
"here, too."
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:142
msgid ""
"Ancillary routine that can be used as the release\\(\\) op of "
"v4l2_file_operations."
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:146
msgid ""
"It deletes and exits the v4l2_fh associated with the file pointer and frees "
"it. It will do nothing if filp->private_data (the pointer to the v4l2_fh "
"struct) is ``NULL``."
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:150
msgid "This function always returns 0."
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:156
#: include/media/v4l2-fh.h:166
msgid ""
"Returns 1 if this filehandle is the only filehandle opened for the "
"associated video_device."
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:160
msgid "If **fh** is NULL, then it returns 0."
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:170
msgid ""
"This is a helper function variant of v4l2_fh_is_singular() with uses struct "
"file as argument."
msgstr ""

#: ../../../driver-api/media/v4l2-fh:136: include/media/v4l2-fh.h:173
msgid "If filp->private_data is ``NULL``, then it will return 0."
msgstr ""
