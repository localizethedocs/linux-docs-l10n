# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-30 08:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../driver-api/media/rc-core.rst:4
msgid "Remote Controller devices"
msgstr ""

#: ../../../driver-api/media/rc-core.rst:7
msgid "Remote Controller core"
msgstr ""

#: ../../../driver-api/media/rc-core.rst:9
msgid ""
"The remote controller core implements infrastructure to receive and send "
"remote controller keyboard keystrokes and mouse events."
msgstr ""

#: ../../../driver-api/media/rc-core.rst:12
msgid ""
"Every time a key is pressed on a remote controller, a scan code is produced. "
"Also, on most hardware, keeping a key pressed for more than a few dozens of "
"milliseconds produce a repeat key event. That's somewhat similar to what a "
"normal keyboard or mouse is handled internally on Linux\\ [#f1]_. So, the "
"remote controller core is implemented on the top of the linux input/evdev "
"interface."
msgstr ""

#: ../../../driver-api/media/rc-core.rst:21
msgid ""
"The main difference is that, on keyboard events, the keyboard controller "
"produces one event for a key press and another one for key release. On "
"infrared-based remote controllers, there's no key release event. Instead, an "
"extra code is produced to indicate key repeats."
msgstr ""

#: ../../../driver-api/media/rc-core.rst:26
msgid ""
"However, most of the remote controllers use infrared (IR) to transmit "
"signals. As there are several protocols used to modulate infrared signals, "
"one important part of the core is dedicated to adjust the driver and the "
"core system to support the infrared protocol used by the emitter."
msgstr ""

#: ../../../driver-api/media/rc-core.rst:31
msgid ""
"The infrared transmission is done by blinking a infrared emitter using a "
"carrier. The carrier can be switched on or off by the IR transmitter "
"hardware. When the carrier is switched on, it is called *PULSE*. When the "
"carrier is switched off, it is called *SPACE*."
msgstr ""

#: ../../../driver-api/media/rc-core.rst:36
msgid ""
"In other words, a typical IR transmission can be viewed as a sequence of "
"*PULSE* and *SPACE* events, each with a given duration."
msgstr ""

#: ../../../driver-api/media/rc-core.rst:39
msgid ""
"The carrier parameters (frequency, duty cycle) and the intervals for *PULSE* "
"and *SPACE* events depend on the protocol. For example, the NEC protocol "
"uses a carrier of 38kHz, and transmissions start with a 9ms *PULSE* and a "
"4.5ms SPACE. It then transmits 16 bits of scan code, being 8 bits for "
"address (usually it is a fixed number for a given remote controller), "
"followed by 8 bits of code. A bit \"1\" is modulated with 560µs *PULSE* "
"followed by 1690µs *SPACE* and a bit \"0\"  is modulated with 560µs *PULSE* "
"followed by 560µs *SPACE*."
msgstr ""

#: ../../../driver-api/media/rc-core.rst:48
msgid ""
"At receiver, a simple low-pass filter can be used to convert the received "
"signal in a sequence of *PULSE/SPACE* events, filtering out the carrier "
"frequency. Due to that, the receiver doesn't care about the carrier's actual "
"frequency parameters: all it has to do is to measure the amount of time it "
"receives *PULSE/SPACE* events. So, a simple IR receiver hardware will just "
"provide a sequence of timings for those events to the Kernel. The drivers "
"for hardware with such kind of receivers are identified by  "
"``RC_DRIVER_IR_RAW``, as defined by :c:type:`rc_driver_type`\\ [#f2]_. Other "
"hardware come with a microcontroller that decode the *PULSE/SPACE* sequence "
"and return scan codes to the Kernel. Such kind of receivers are identified "
"by ``RC_DRIVER_SCANCODE``."
msgstr ""

#: ../../../driver-api/media/rc-core.rst:63
msgid ""
"The RC core also supports devices that have just IR emitters, without any "
"receivers. Right now, all such devices work only in raw TX mode. Such kind "
"of hardware is identified as ``RC_DRIVER_IR_RAW_TX``."
msgstr ""

#: ../../../driver-api/media/rc-core.rst:68
msgid ""
"When the RC core receives events produced by ``RC_DRIVER_IR_RAW`` IR "
"receivers, it needs to decode the IR protocol, in order to obtain the "
"corresponding scan code. The protocols supported by the RC core are defined "
"at enum :c:type:`rc_proto`."
msgstr ""

#: ../../../driver-api/media/rc-core.rst:73
msgid ""
"When the RC code receives a scan code (either directly, by a driver of the "
"type ``RC_DRIVER_SCANCODE``, or via its IR decoders), it needs to convert "
"into a Linux input event code. This is done via a mapping table."
msgstr ""

#: ../../../driver-api/media/rc-core.rst:78
msgid ""
"The Kernel has support for mapping tables available on most media devices. "
"It also supports loading a table in runtime, via some sysfs nodes. See the :"
"ref:`RC userspace API <Remote_controllers_Intro>` for more details."
msgstr ""

#: ../../../driver-api/media/rc-core.rst:84
msgid "Remote controller data structures and functions"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:19
msgid "type of the RC driver."
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:23
#: include/media/rc-core.h:48
msgid "**Constants**"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:25
msgid "``RC_DRIVER_SCANCODE``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:26
msgid "Driver or hardware generates a scancode."
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:28
msgid "``RC_DRIVER_IR_RAW``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:29
msgid ""
"Driver or hardware generates pulse/space sequences. It needs a Infra-Red "
"pulse/space decoder"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:32
msgid "``RC_DRIVER_IR_RAW_TX``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:33
msgid "Device transmitter only, driver requires pulse/space data sequence."
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:34
msgid "Filter scan codes."
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:38
#: include/media/rc-core.h:61 include/media/rc-core.h:86
#: ../../../driver-api/media/rc-core:88: include/media/rc-map.h:139
#: include/media/rc-map.h:150 include/media/rc-map.h:172
msgid "**Definition**::"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:45
#: include/media/rc-core.h:74 include/media/rc-core.h:151
#: ../../../driver-api/media/rc-core:88: include/media/rc-map.h:146
#: include/media/rc-map.h:162 include/media/rc-map.h:179
msgid "**Members**"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:35
msgid "``data``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:36
msgid "Scancode data to match."
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:36
msgid "``mask``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:37
msgid "Mask of bits of scancode to compare."
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:44
msgid "Filter type constants."
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:50
msgid "``RC_FILTER_NORMAL``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:51
msgid "Filter for normal operation."
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:53
msgid "``RC_FILTER_WAKEUP``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:54
msgid "Filter for waking from suspend."
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:56
msgid "``RC_FILTER_MAX``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:57
msgid "Number of filter types."
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:57
msgid "represents an open lirc file"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:58
#: ../../../driver-api/media/rc-core:88: include/media/rc-map.h:170
msgid "``list``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:59
msgid "list of open file handles"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:59
msgid "``rc``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:60
msgid "rcdev for this lirc chardev"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:60
msgid "``rawir``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:61
msgid "queue for incoming raw IR"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:61
msgid "``scancodes``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:62
msgid "queue for incoming decoded scancodes"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:62
msgid "``wait_poll``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:63
msgid "poll struct for lirc device"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:63
msgid "``carrier_low``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:64
msgid ""
"when setting the carrier range, first the low end must be set with an ioctl "
"and then the high end with another ioctl"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:65
msgid "``send_mode``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:66
msgid "lirc mode for sending, either LIRC_MODE_SCANCODE or LIRC_MODE_PULSE"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:67
msgid "``rec_mode``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:68
msgid "lirc mode for receiving, either LIRC_MODE_SCANCODE or LIRC_MODE_MODE2"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:82
msgid "represents a remote control device"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:83
msgid "``dev``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:84
msgid "driver model's view of this device"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:84
msgid "``managed_alloc``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:85
msgid "devm_rc_allocate_device was used to create rc_dev"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:85
msgid "``registered``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:86
msgid "set to true by rc_register_device(), false by rc_unregister_device"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:87
msgid "``idle``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:88
msgid "used to keep track of RX state"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:88
msgid "``encode_wakeup``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:89
msgid ""
"wakeup filtering uses IR encode API, therefore the allowed wakeup protocols "
"is the set of all raw encoders"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:90
msgid "``minor``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:91
msgid "unique minor remote control device number"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:91
msgid "``sysfs_groups``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:92
msgid "sysfs attribute groups"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:92
msgid "``device_name``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:93
msgid "name of the rc child device"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:93
msgid "``input_phys``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:94
msgid "physical path to the input child device"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:94
msgid "``input_id``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:95
msgid "id of the input child device (struct input_id)"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:95
msgid "``driver_name``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:96
msgid "name of the hardware driver which registered this device"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:96
msgid "``map_name``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:97
msgid "name of the default keymap"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:97
msgid "``rc_map``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:98
msgid "current scan/key table"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:98
#: ../../../driver-api/media/rc-core:88: include/media/rc-map.h:155
msgid "``lock``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:99
msgid ""
"used to ensure we've filled in all protocol details before anyone can call "
"show_protocols or store_protocols"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:100
msgid "``raw``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:101
msgid "additional data for raw pulse/space devices"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:101
msgid "``input_dev``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:102
msgid "the input child device used to communicate events to userspace"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:102
msgid "``driver_type``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:103
msgid "specifies if protocol decoding is done in hardware or software"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:103
msgid "``users``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:104
msgid "number of current users of the device"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:104
msgid "``allowed_protocols``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:105
msgid "bitmask with the supported RC_PROTO_BIT_* protocols"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:105
msgid "``enabled_protocols``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:106
msgid "bitmask with the enabled RC_PROTO_BIT_* protocols"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:106
msgid "``allowed_wakeup_protocols``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:107
msgid "bitmask with the supported RC_PROTO_BIT_* wakeup protocols"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:108
msgid "``wakeup_protocol``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:109
msgid "the enabled RC_PROTO_* wakeup protocol or RC_PROTO_UNKNOWN if disabled."
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:110
msgid "``scancode_filter``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:111
msgid "scancode filter"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:111
msgid "``scancode_wakeup_filter``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:112
msgid "scancode wakeup filters"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:112
msgid "``scancode_mask``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:113
msgid ""
"some hardware decoders are not capable of providing the full scancode to the "
"application. As this is a hardware limit, we can't do anything with it. Yet, "
"as the same keycode table can be used with other devices, a mask is provided "
"to allow its usage. Drivers should generally leave this field in blank"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:117
msgid "``priv``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:118
msgid "driver-specific data"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:118
msgid "``keylock``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:119
msgid "protects the remaining members of the struct"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:119
msgid "``keypressed``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:120
msgid "whether a key is currently pressed"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:120
msgid "``last_toggle``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:121
msgid "toggle value of last command"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:121
msgid "``last_keycode``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:122
msgid "keycode of last keypress"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:122
msgid "``last_protocol``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:123
msgid "protocol of last keypress"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:123
msgid "``last_scancode``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:124
msgid "scancode of last keypress"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:124
msgid "``keyup_jiffies``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:125
msgid "time (in jiffies) when the current keypress should be released"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:125
msgid "``timer_keyup``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:126
msgid "timer for releasing a keypress"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:126
msgid "``timer_repeat``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:127
msgid ""
"timer for autorepeat events. This is needed for CEC, which has non-standard "
"repeats."
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:128
msgid "``timeout``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:129
msgid "optional time after which device stops sending data"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:129
msgid "``min_timeout``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:130
msgid "minimum timeout supported by device"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:130
msgid "``max_timeout``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:131
msgid "maximum timeout supported by device"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:131
msgid "``rx_resolution``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:132
msgid "resolution (in us) of input sampler"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:132
msgid "``lirc_dev``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:133
msgid "lirc device"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:133
msgid "``lirc_cdev``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:134
msgid "lirc char cdev"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:134
msgid "``gap_start``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:135
msgid "start time for gap after timeout if non-zero"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:135
msgid "``lirc_fh_lock``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:136
msgid "protects lirc_fh list"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:136
msgid "``lirc_fh``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:137
msgid "list of open files"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:137
msgid "``change_protocol``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:138
msgid "allow changing the protocol used on hardware decoders"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:138
msgid "``open``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:139
msgid ""
"callback to allow drivers to enable polling/irq when IR input device is "
"opened."
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:140
msgid "``close``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:141
msgid ""
"callback to allow drivers to disable polling/irq when IR input device is "
"opened."
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:142
msgid "``s_tx_mask``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:143
msgid "set transmitter mask (for devices with multiple tx outputs)"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:143
msgid "``s_tx_carrier``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:144
msgid "set transmit carrier frequency"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:144
msgid "``s_tx_duty_cycle``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:145
msgid "set transmit duty cycle (0% - 100%)"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:145
msgid "``s_rx_carrier_range``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:146
msgid "inform driver about carrier it is expected to handle"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:146
msgid "``tx_ir``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:147
msgid "transmit IR"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:147
msgid "``s_idle``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:148
msgid ""
"enable/disable hardware idle mode, upon which, device doesn't interrupt host "
"until it sees IR pulses"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:149
msgid "``s_wideband_receiver``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:150
msgid "enable wide band receiver used for learning"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:150
msgid "``s_carrier_report``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:151
msgid "enable carrier reports"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:151
msgid "``s_filter``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:152
msgid "set the scancode filter"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:152
msgid "``s_wakeup_filter``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:153
msgid ""
"set the wakeup scancode filter. If the mask is zero then wakeup should be "
"disabled. wakeup_protocol will be set to a valid protocol if mask is nonzero."
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:155
msgid "``s_timeout``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:156
msgid "set hardware timeout in us"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:233
msgid "Allocates a RC device"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:237
#: include/media/rc-core.h:245 include/media/rc-core.h:254
#: include/media/rc-core.h:261 include/media/rc-core.h:268
#: include/media/rc-core.h:276 ../../../driver-api/media/rc-core:88:
#: include/media/rc-map.h:192 include/media/rc-map.h:199
#: include/media/rc-map.h:206
msgid "**Parameters**"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:239
#: include/media/rc-core.h:245
msgid "``enum rc_driver_type``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:235
#: include/media/rc-core.h:244
msgid ""
"specifies the type of the RC output to be allocated returns a pointer to "
"struct rc_dev."
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:241
msgid "Managed RC device allocation"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:247
msgid "``struct device *dev``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:243
msgid "pointer to struct device"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:250
msgid "Frees a RC device"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:256
#: include/media/rc-core.h:263 include/media/rc-core.h:268
#: include/media/rc-core.h:278
msgid "``struct rc_dev *dev``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:252
#: include/media/rc-core.h:259 include/media/rc-core.h:267
#: include/media/rc-core.h:274
msgid "pointer to struct rc_dev."
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:257
msgid "Registers a RC device"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:264
msgid "Manageded registering of a RC device"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:270
msgid "``struct device *parent``"
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:266
msgid "pointer to struct device."
msgstr ""

#: ../../../driver-api/media/rc-core:86: include/media/rc-core.h:272
msgid "Unregisters a RC device"
msgstr ""

#: ../../../driver-api/media/rc-core:88: include/media/rc-map.h:135
msgid "represents a scancode/keycode pair"
msgstr ""

#: ../../../driver-api/media/rc-core:88: include/media/rc-map.h:137
msgid "``scancode``"
msgstr ""

#: ../../../driver-api/media/rc-core:88: include/media/rc-map.h:138
msgid "scan code (u64)"
msgstr ""

#: ../../../driver-api/media/rc-core:88: include/media/rc-map.h:138
msgid "``keycode``"
msgstr ""

#: ../../../driver-api/media/rc-core:88: include/media/rc-map.h:139
msgid "Linux input keycode"
msgstr ""

#: ../../../driver-api/media/rc-core:88: include/media/rc-map.h:146
msgid "represents a keycode map table"
msgstr ""

#: ../../../driver-api/media/rc-core:88: include/media/rc-map.h:148
msgid "``scan``"
msgstr ""

#: ../../../driver-api/media/rc-core:88: include/media/rc-map.h:149
msgid "pointer to struct :c:type:`rc_map_table`"
msgstr ""

#: ../../../driver-api/media/rc-core:88: include/media/rc-map.h:149
msgid "``size``"
msgstr ""

#: ../../../driver-api/media/rc-core:88: include/media/rc-map.h:150
msgid "Max number of entries"
msgstr ""

#: ../../../driver-api/media/rc-core:88: include/media/rc-map.h:150
msgid "``len``"
msgstr ""

#: ../../../driver-api/media/rc-core:88: include/media/rc-map.h:151
msgid "Number of entries that are in use"
msgstr ""

#: ../../../driver-api/media/rc-core:88: include/media/rc-map.h:151
msgid "``alloc``"
msgstr ""

#: ../../../driver-api/media/rc-core:88: include/media/rc-map.h:152
msgid "size of \\*scan, in bytes"
msgstr ""

#: ../../../driver-api/media/rc-core:88: include/media/rc-map.h:152
msgid "``rc_proto``"
msgstr ""

#: ../../../driver-api/media/rc-core:88: include/media/rc-map.h:153
msgid ""
"type of the remote controller protocol, as defined at enum :c:type:`rc_proto`"
msgstr ""

#: ../../../driver-api/media/rc-core:88: include/media/rc-map.h:154
msgid "``name``"
msgstr ""

#: ../../../driver-api/media/rc-core:88: include/media/rc-map.h:155
msgid "name of the key map table"
msgstr ""

#: ../../../driver-api/media/rc-core:88: include/media/rc-map.h:156
msgid "lock to protect access to this structure"
msgstr ""

#: ../../../driver-api/media/rc-core:88: include/media/rc-map.h:168
msgid "list of the registered :c:type:`rc_map` maps"
msgstr ""

#: ../../../driver-api/media/rc-core:88: include/media/rc-map.h:171
msgid "pointer to struct :c:type:`list_head`"
msgstr ""

#: ../../../driver-api/media/rc-core:88: include/media/rc-map.h:171
msgid "``map``"
msgstr ""

#: ../../../driver-api/media/rc-core:88: include/media/rc-map.h:172
msgid "pointer to struct :c:type:`rc_map`"
msgstr ""

#: ../../../driver-api/media/rc-core:88: include/media/rc-map.h:188
msgid "Registers a Remote Controller scancode map"
msgstr ""

#: ../../../driver-api/media/rc-core:88: include/media/rc-map.h:194
#: include/media/rc-map.h:201
msgid "``struct rc_map_list *map``"
msgstr ""

#: ../../../driver-api/media/rc-core:88: include/media/rc-map.h:190
#: include/media/rc-map.h:197
msgid "pointer to struct rc_map_list"
msgstr ""

#: ../../../driver-api/media/rc-core:88: include/media/rc-map.h:195
msgid "Unregisters a Remote Controller scancode map"
msgstr ""

#: ../../../driver-api/media/rc-core:88: include/media/rc-map.h:202
msgid "gets an RC map from its name"
msgstr ""

#: ../../../driver-api/media/rc-core:88: include/media/rc-map.h:208
msgid "``const char *name``"
msgstr ""

#: ../../../driver-api/media/rc-core:88: include/media/rc-map.h:203
msgid "name of the RC scancode map"
msgstr ""
