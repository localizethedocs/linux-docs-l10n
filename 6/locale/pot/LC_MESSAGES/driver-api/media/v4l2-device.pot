# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-21 08:55+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../driver-api/media/v4l2-device.rst:4
msgid "V4L2 device instance"
msgstr ""

#: ../../../driver-api/media/v4l2-device.rst:6
msgid ""
"Each device instance is represented by a struct v4l2_device. Very simple "
"devices can just allocate this struct, but most of the time you would embed "
"this struct inside a larger struct."
msgstr ""

#: ../../../driver-api/media/v4l2-device.rst:10
msgid "You must register the device instance by calling:"
msgstr ""

#: ../../../driver-api/media/v4l2-device.rst:12
msgid ""
":c:func:`v4l2_device_register <v4l2_device_register>` (dev, :c:type:"
"`v4l2_dev <v4l2_device>`)."
msgstr ""

#: ../../../driver-api/media/v4l2-device.rst:15
msgid ""
"Registration will initialize the :c:type:`v4l2_device` struct. If the dev-"
">driver_data field is ``NULL``, it will be linked to :c:type:`v4l2_dev "
"<v4l2_device>` argument."
msgstr ""

#: ../../../driver-api/media/v4l2-device.rst:19
msgid ""
"Drivers that want integration with the media device framework need to set "
"dev->driver_data manually to point to the driver-specific device structure "
"that embed the struct v4l2_device instance. This is achieved by a "
"``dev_set_drvdata()`` call before registering the V4L2 device instance. They "
"must also set the struct v4l2_device mdev field to point to a properly "
"initialized and registered :c:type:`media_device` instance."
msgstr ""

#: ../../../driver-api/media/v4l2-device.rst:26
msgid ""
"If :c:type:`v4l2_dev <v4l2_device>`\\ ->name is empty then it will be set to "
"a value derived from dev (driver name followed by the bus_id, to be "
"precise). If you set it up before  calling :c:func:`v4l2_device_register` "
"then it will be untouched. If dev is ``NULL``, then you **must** setup :c:"
"type:`v4l2_dev <v4l2_device>`\\ ->name before calling :c:func:"
"`v4l2_device_register`."
msgstr ""

#: ../../../driver-api/media/v4l2-device.rst:33
msgid ""
"You can use :c:func:`v4l2_device_set_name` to set the name based on a driver "
"name and a driver-global atomic_t instance. This will generate names like "
"``ivtv0``, ``ivtv1``, etc. If the name ends with a digit, then it will "
"insert a dash: ``cx18-0``, ``cx18-1``, etc. This function returns the "
"instance number."
msgstr ""

#: ../../../driver-api/media/v4l2-device.rst:38
msgid ""
"The first ``dev`` argument is normally the ``struct device`` pointer of a "
"``pci_dev``, ``usb_interface`` or ``platform_device``. It is rare for dev to "
"be ``NULL``, but it happens with ISA devices or when one device creates "
"multiple PCI devices, thus making it impossible to associate :c:type:"
"`v4l2_dev <v4l2_device>` with a particular parent."
msgstr ""

#: ../../../driver-api/media/v4l2-device.rst:44
msgid ""
"You can also supply a ``notify()`` callback that can be called by sub-"
"devices to notify you of events. Whether you need to set this depends on the "
"sub-device. Any notifications a sub-device supports must be defined in a "
"header in ``include/media/subdevice.h``."
msgstr ""

#: ../../../driver-api/media/v4l2-device.rst:49
msgid "V4L2 devices are unregistered by calling:"
msgstr ""

#: ../../../driver-api/media/v4l2-device.rst:51
msgid ":c:func:`v4l2_device_unregister` (:c:type:`v4l2_dev <v4l2_device>`)."
msgstr ""

#: ../../../driver-api/media/v4l2-device.rst:54
msgid ""
"If the dev->driver_data field points to :c:type:`v4l2_dev <v4l2_device>`, it "
"will be reset to ``NULL``. Unregistering will also automatically unregister "
"all subdevs from the device."
msgstr ""

#: ../../../driver-api/media/v4l2-device.rst:58
msgid ""
"If you have a hotpluggable device (e.g. a USB device), then when a "
"disconnect happens the parent device becomes invalid. Since :c:type:"
"`v4l2_device` has a pointer to that parent device it has to be cleared as "
"well to mark that the parent is gone. To do this call:"
msgstr ""

#: ../../../driver-api/media/v4l2-device.rst:63
msgid ":c:func:`v4l2_device_disconnect` (:c:type:`v4l2_dev <v4l2_device>`)."
msgstr ""

#: ../../../driver-api/media/v4l2-device.rst:66
msgid ""
"This does *not* unregister the subdevs, so you still need to call the :c:"
"func:`v4l2_device_unregister` function for that. If your driver is not "
"hotpluggable, then there is no need to call :c:func:`v4l2_device_disconnect`."
msgstr ""

#: ../../../driver-api/media/v4l2-device.rst:70
msgid ""
"Sometimes you need to iterate over all devices registered by a specific "
"driver. This is usually the case if multiple device drivers use the same "
"hardware. E.g. the ivtvfb driver is a framebuffer driver that uses the ivtv "
"hardware. The same is true for alsa drivers for example."
msgstr ""

#: ../../../driver-api/media/v4l2-device.rst:75
msgid "You can iterate over all registered devices as follows:"
msgstr ""

#: ../../../driver-api/media/v4l2-device.rst:104
msgid ""
"Sometimes you need to keep a running counter of the device instance. This is "
"commonly used to map a device instance to an index of a module option array."
msgstr ""

#: ../../../driver-api/media/v4l2-device.rst:107
msgid "The recommended approach is as follows:"
msgstr ""

#: ../../../driver-api/media/v4l2-device.rst:119
msgid ""
"If you have multiple device nodes then it can be difficult to know when it "
"is safe to unregister :c:type:`v4l2_device` for hotpluggable devices. For "
"this purpose :c:type:`v4l2_device` has refcounting support. The refcount is "
"increased whenever :c:func:`video_register_device` is called and it is "
"decreased whenever that device node is released. When the refcount reaches "
"zero, then the :c:type:`v4l2_device` release() callback is called. You can "
"do your final cleanup there."
msgstr ""

#: ../../../driver-api/media/v4l2-device.rst:127
msgid ""
"If other device nodes (e.g. ALSA) are created, then you can increase and "
"decrease the refcount manually as well by calling:"
msgstr ""

#: ../../../driver-api/media/v4l2-device.rst:130
msgid ":c:func:`v4l2_device_get` (:c:type:`v4l2_dev <v4l2_device>`)."
msgstr ""

#: ../../../driver-api/media/v4l2-device.rst:133
msgid "or:"
msgstr ""

#: ../../../driver-api/media/v4l2-device.rst:135
msgid ":c:func:`v4l2_device_put` (:c:type:`v4l2_dev <v4l2_device>`)."
msgstr ""

#: ../../../driver-api/media/v4l2-device.rst:138
msgid ""
"Since the initial refcount is 1 you also need to call :c:func:"
"`v4l2_device_put` in the ``disconnect()`` callback (for USB devices) or in "
"the ``remove()`` callback (for e.g. PCI devices), otherwise the refcount "
"will never reach 0."
msgstr ""

#: ../../../driver-api/media/v4l2-device.rst:144
msgid "v4l2_device functions and data structures"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:19
msgid "main struct to for V4L2 device drivers"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:23
msgid "**Definition**::"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:38
msgid "**Members**"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:21
msgid "``dev``"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:22
msgid "pointer to struct device."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:22
msgid "``mdev``"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:23
msgid "pointer to struct media_device, may be NULL."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:23
msgid "``subdevs``"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:24
msgid "used to keep track of the registered subdevs"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:24
msgid "``lock``"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:25
msgid ""
"lock this struct; can be used by the driver as well if this struct is "
"embedded into a larger struct."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:26
msgid "``name``"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:27
msgid "unique device name, by default the driver name + bus ID"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:27
msgid "``notify``"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:28
msgid "notify operation called by some sub-devices."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:28
msgid "``ctrl_handler``"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:29
msgid "The control handler. May be ``NULL``."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:29
msgid "``prio``"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:30
msgid "Device's priority state"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:30
msgid "``ref``"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:31
msgid "Keep track of the references to this struct."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:31
msgid "``release``"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:32
msgid "Release function that is called when the ref count goes to 0."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:36
#: include/media/v4l2-device.h:64 include/media/v4l2-device.h:77
#: include/media/v4l2-device.h:89 include/media/v4l2-device.h:106
#: include/media/v4l2-device.h:132 include/media/v4l2-device.h:154
#: include/media/v4l2-device.h:170 include/media/v4l2-device.h:200
#: include/media/v4l2-device.h:219 include/media/v4l2-device.h:266
#: include/media/v4l2-device.h:288 include/media/v4l2-device.h:313
#: include/media/v4l2-device.h:341 include/media/v4l2-device.h:376
#: include/media/v4l2-device.h:407 include/media/v4l2-device.h:436
#: include/media/v4l2-device.h:467 include/media/v4l2-device.h:495
msgid "**Description**"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:33
msgid ""
"Each instance of a V4L2 device should create the v4l2_device struct, either "
"stand-alone or embedded in a larger struct."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:36
msgid ""
"It allows easy access to sub-devices (see v4l2-subdev.h) and provides basic "
"V4L2 device-level support."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:41
msgid "**dev->driver_data** points to this struct."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:42
msgid "**dev** might be ``NULL`` if there is no parent device"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:60
msgid "gets a V4L2 device reference"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:64
#: include/media/v4l2-device.h:77 include/media/v4l2-device.h:87
#: include/media/v4l2-device.h:102 include/media/v4l2-device.h:132
#: include/media/v4l2-device.h:145 include/media/v4l2-device.h:153
#: include/media/v4l2-device.h:170 include/media/v4l2-device.h:182
#: include/media/v4l2-device.h:196 include/media/v4l2-device.h:215
#: include/media/v4l2-device.h:234 include/media/v4l2-device.h:250
#: include/media/v4l2-device.h:263 include/media/v4l2-device.h:278
#: include/media/v4l2-device.h:305 include/media/v4l2-device.h:331
#: include/media/v4l2-device.h:368 include/media/v4l2-device.h:397
#: include/media/v4l2-device.h:426 include/media/v4l2-device.h:458
#: include/media/v4l2-device.h:486 include/media/v4l2-device.h:518
#: include/media/v4l2-device.h:546
msgid "**Parameters**"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:66
#: include/media/v4l2-device.h:79 include/media/v4l2-device.h:88
#: include/media/v4l2-device.h:104 include/media/v4l2-device.h:134
#: include/media/v4l2-device.h:147 include/media/v4l2-device.h:184
#: include/media/v4l2-device.h:198 include/media/v4l2-device.h:217
#: include/media/v4l2-device.h:252
msgid "``struct v4l2_device *v4l2_dev``"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:62
#: include/media/v4l2-device.h:75 include/media/v4l2-device.h:87
#: include/media/v4l2-device.h:101 include/media/v4l2-device.h:151
msgid "pointer to struct :c:type:`v4l2_device`"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:63
msgid ""
"This is an ancillary routine meant to increment the usage for the struct :c:"
"type:`v4l2_device` pointed by **v4l2_dev**."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:73
msgid "puts a V4L2 device reference"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:76
msgid ""
"This is an ancillary routine meant to decrement the usage for the struct :c:"
"type:`v4l2_device` pointed by **v4l2_dev**."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:83
msgid ""
"Initialize v4l2_dev and make **dev->driver_data** point to **v4l2_dev**."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:89
msgid "``struct device *dev``"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:86
msgid "pointer to struct :c:type:`device`"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:89
msgid ""
"**dev** may be ``NULL`` in rare cases (ISA devices). In such case the caller "
"must fill in the **v4l2_dev->name** field before calling this function."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:98
msgid ""
"Optional function to initialize the name field of struct :c:type:"
"`v4l2_device`"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:103
msgid "``const char *basename``"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:102
msgid "base name for the device name"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:104
msgid "``atomic_t *instance``"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:103
msgid ""
"pointer to a static atomic_t var with the instance usage for the device "
"driver."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:105
msgid ""
"v4l2_device_set_name() initializes the name field of struct :c:type:"
"`v4l2_device` using the driver name and a driver-global atomic_t instance."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:108
msgid ""
"This function will increment the instance counter and returns the instance "
"value used in the name."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:111
msgid "**Example**"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:112
msgid "static atomic_t drv_instance = ATOMIC_INIT(0);"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:114
msgid "..."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:116
msgid ""
"instance = v4l2_device_set_name(&\\ v4l2_dev, \"foo\", &\\ drv_instance);"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:118
msgid ""
"The first time this is called the name field will be set to foo0 and this "
"function returns 0. If the name ends with a digit (e.g. cx18), then the name "
"will be set to cx18-0 since cx180 would look really odd."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:128
msgid "Change V4L2 device state to disconnected."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:130
#: include/media/v4l2-device.h:144 include/media/v4l2-device.h:182
#: include/media/v4l2-device.h:198 include/media/v4l2-device.h:217
#: include/media/v4l2-device.h:248
msgid "pointer to struct v4l2_device"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:131
msgid ""
"Should be called when the USB parent disconnects. Since the parent "
"disappears, this ensures that **v4l2_dev** doesn't have an invalid parent "
"pointer."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:135
msgid "This function sets **v4l2_dev->dev** to NULL."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:141
msgid ""
"Unregister all sub-devices and any other resources related to **v4l2_dev**."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:151
msgid "``v4l2_device_register_subdev (v4l2_dev, sd)``"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:149
msgid "Registers a subdev with a v4l2 device."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:155
#: include/media/v4l2-device.h:265 include/media/v4l2-device.h:280
#: include/media/v4l2-device.h:307 include/media/v4l2-device.h:333
#: include/media/v4l2-device.h:370 include/media/v4l2-device.h:399
#: include/media/v4l2-device.h:428 include/media/v4l2-device.h:460
#: include/media/v4l2-device.h:488 include/media/v4l2-device.h:520
#: include/media/v4l2-device.h:548
msgid "``v4l2_dev``"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:153
#: include/media/v4l2-device.h:265 include/media/v4l2-device.h:279
#: include/media/v4l2-device.h:332
msgid "``sd``"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:152
#: include/media/v4l2-device.h:168 include/media/v4l2-device.h:232
msgid "pointer to :c:type:`struct v4l2_subdev <v4l2_subdev>`"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:153
msgid "While registered, the subdev module is marked as in-use."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:155
msgid ""
"An error is returned if the module is no longer loaded on any attempts to "
"register it."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:166
msgid "Unregisters a subdev with a v4l2 device."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:172
#: include/media/v4l2-device.h:236
msgid "``struct v4l2_subdev *sd``"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:171
msgid ""
"Can also be called if the subdev wasn't registered. In such case, it will do "
"nothing."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:178
msgid ""
"Registers device nodes for all subdevs of the v4l2 device that are marked "
"with the ``V4L2_SUBDEV_FL_HAS_DEVNODE`` flag."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:184
msgid "``bool read_only``"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:183
msgid ""
"subdevices read-only flag. True to register the subdevices device nodes in "
"read-only mode, false to allow full access to the subdevice userspace API."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:192
msgid ""
"Registers subdevices device nodes with unrestricted access to the subdevice "
"userspace operations"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:193
#: include/media/v4l2-device.h:212
msgid ""
"Internally calls __v4l2_device_register_subdev_nodes(). See its "
"documentation for more details."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:211
msgid "Registers subdevices device nodes in read-only mode"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:230
msgid "Sends a notification to v4l2_device."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:234
msgid "``unsigned int notification``"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:233
msgid ""
"type of notification. Please notice that the notification type is driver-"
"specific."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:236
msgid "``void *arg``"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:235
msgid ""
"arguments for the notification. Those are specific to each notification type."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:246
msgid "Test if requests are supported."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:261
msgid "``v4l2_device_for_each_subdev (sd, v4l2_dev)``"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:259
msgid ""
"Helper macro that interates over all sub-devices of a given :c:type:"
"`v4l2_device`."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:262
#: include/media/v4l2-device.h:278
msgid ""
"pointer that will be filled by the macro with all :c:type:`struct "
"v4l2_subdev <v4l2_subdev>` pointer used as an iterator by the loop."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:264
#: include/media/v4l2-device.h:277 include/media/v4l2-device.h:304
#: include/media/v4l2-device.h:330 include/media/v4l2-device.h:367
#: include/media/v4l2-device.h:397 include/media/v4l2-device.h:426
#: include/media/v4l2-device.h:457 include/media/v4l2-device.h:485
#: include/media/v4l2-device.h:517 include/media/v4l2-device.h:545
msgid ""
":c:type:`struct v4l2_device <v4l2_device>` owning the sub-devices to iterate "
"over."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:265
msgid ""
"This macro iterates over all sub-devices owned by the **v4l2_dev** device. "
"It acts as a for loop iterator and executes the next statement with the "
"**sd** variable pointing to each sub-device in turn."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:276
msgid "``__v4l2_device_call_subdevs_p (v4l2_dev, sd, cond, o, f, args...)``"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:274
#: include/media/v4l2-device.h:301 include/media/v4l2-device.h:327
#: include/media/v4l2-device.h:364
msgid "Calls the specified operation for all subdevs matching the condition."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:281
#: include/media/v4l2-device.h:306 include/media/v4l2-device.h:334
#: include/media/v4l2-device.h:369
msgid "``cond``"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:280
#: include/media/v4l2-device.h:305 include/media/v4l2-device.h:333
#: include/media/v4l2-device.h:368
msgid "condition to be match"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:282
#: include/media/v4l2-device.h:307 include/media/v4l2-device.h:335
#: include/media/v4l2-device.h:370 include/media/v4l2-device.h:401
#: include/media/v4l2-device.h:430 include/media/v4l2-device.h:461
#: include/media/v4l2-device.h:489 include/media/v4l2-device.h:521
#: include/media/v4l2-device.h:549
msgid "``o``"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:281
#: include/media/v4l2-device.h:306 include/media/v4l2-device.h:334
#: include/media/v4l2-device.h:369 include/media/v4l2-device.h:400
#: include/media/v4l2-device.h:429 include/media/v4l2-device.h:460
#: include/media/v4l2-device.h:488 include/media/v4l2-device.h:520
#: include/media/v4l2-device.h:548
msgid ""
"name of the element at :c:type:`struct v4l2_subdev_ops <v4l2_subdev_ops>` "
"that contains **f**. Each element there groups a set of operations functions."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:284
#: include/media/v4l2-device.h:309 include/media/v4l2-device.h:337
#: include/media/v4l2-device.h:372 include/media/v4l2-device.h:403
#: include/media/v4l2-device.h:432 include/media/v4l2-device.h:463
#: include/media/v4l2-device.h:491 include/media/v4l2-device.h:523
#: include/media/v4l2-device.h:551
msgid "``f``"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:283
#: include/media/v4l2-device.h:308 include/media/v4l2-device.h:336
#: include/media/v4l2-device.h:371 include/media/v4l2-device.h:402
#: include/media/v4l2-device.h:431 include/media/v4l2-device.h:462
#: include/media/v4l2-device.h:490 include/media/v4l2-device.h:522
#: include/media/v4l2-device.h:550
msgid ""
"operation function that will be called if **cond** matches. The operation "
"functions are defined in groups, according to each element at :c:type:"
"`struct v4l2_subdev_ops <v4l2_subdev_ops>`."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:287
#: include/media/v4l2-device.h:312 include/media/v4l2-device.h:340
#: include/media/v4l2-device.h:375 include/media/v4l2-device.h:406
#: include/media/v4l2-device.h:435 include/media/v4l2-device.h:466
#: include/media/v4l2-device.h:494
msgid "``args...``"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:286
#: include/media/v4l2-device.h:311 include/media/v4l2-device.h:339
#: include/media/v4l2-device.h:374 include/media/v4l2-device.h:405
#: include/media/v4l2-device.h:434 include/media/v4l2-device.h:465
#: include/media/v4l2-device.h:493
msgid "arguments for **f**."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:287
#: include/media/v4l2-device.h:312 include/media/v4l2-device.h:406
#: include/media/v4l2-device.h:466
msgid "Ignore any errors."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:289
#: include/media/v4l2-device.h:314 include/media/v4l2-device.h:346
#: include/media/v4l2-device.h:381 include/media/v4l2-device.h:408
#: include/media/v4l2-device.h:441 include/media/v4l2-device.h:468
#: include/media/v4l2-device.h:500
msgid "**Note**"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:290
#: include/media/v4l2-device.h:315 include/media/v4l2-device.h:347
#: include/media/v4l2-device.h:382 include/media/v4l2-device.h:409
#: include/media/v4l2-device.h:442 include/media/v4l2-device.h:469
#: include/media/v4l2-device.h:501
msgid "subdevs cannot be added or deleted while walking the subdevs list."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:303
msgid "``__v4l2_device_call_subdevs (v4l2_dev, cond, o, f, args...)``"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:329
msgid ""
"``__v4l2_device_call_subdevs_until_err_p (v4l2_dev, sd, cond, o, f, "
"args...)``"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:331
msgid ""
"pointer that will be filled by the macro with all :c:type:`struct "
"v4l2_subdev <v4l2_subdev>` sub-devices associated with **v4l2_dev**."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:342
#: include/media/v4l2-device.h:377 include/media/v4l2-device.h:437
#: include/media/v4l2-device.h:496
msgid ""
"If the operation returns an error other than 0 or ``-ENOIOCTLCMD`` for any "
"subdevice, then abort and return with that error code, zero otherwise."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:366
msgid ""
"``__v4l2_device_call_subdevs_until_err (v4l2_dev, cond, o, f, args...)``"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:395
msgid "``v4l2_device_call_all (v4l2_dev, grpid, o, f, args...)``"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:393
msgid ""
"Calls the specified operation for all subdevs matching the :c:type:"
"`v4l2_subdev.grp_id <v4l2_subdev>`, as assigned by the bridge driver."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:399
#: include/media/v4l2-device.h:428 include/media/v4l2-device.h:519
msgid "``grpid``"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:398
#: include/media/v4l2-device.h:427 include/media/v4l2-device.h:518
msgid ""
":c:type:`struct v4l2_subdev <v4l2_subdev>`->grp_id group ID to match. Use 0 "
"to match them all."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:424
msgid "``v4l2_device_call_until_err (v4l2_dev, grpid, o, f, args...)``"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:422
msgid ""
"Calls the specified operation for all subdevs matching the :c:type:"
"`v4l2_subdev.grp_id <v4l2_subdev>`, as assigned by the bridge driver, until "
"an error occurs."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:456
msgid "``v4l2_device_mask_call_all (v4l2_dev, grpmsk, o, f, args...)``"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:454
#: include/media/v4l2-device.h:482
msgid ""
"Calls the specified operation for all subdevices where a group ID matches a "
"specified bitmask."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:459
#: include/media/v4l2-device.h:487 include/media/v4l2-device.h:547
msgid "``grpmsk``"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:458
#: include/media/v4l2-device.h:486 include/media/v4l2-device.h:546
msgid ""
"bitmask to be checked against :c:type:`struct v4l2_subdev <v4l2_subdev>`-"
">grp_id group ID to be matched. Use 0 to match them all."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:484
msgid "``v4l2_device_mask_call_until_err (v4l2_dev, grpmsk, o, f, args...)``"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:516
msgid "``v4l2_device_has_op (v4l2_dev, grpid, o, f)``"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:514
msgid "checks if any subdev with matching grpid has a given ops."
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:544
msgid "``v4l2_device_mask_has_op (v4l2_dev, grpmsk, o, f)``"
msgstr ""

#: ../../../driver-api/media/v4l2-device:146: include/media/v4l2-device.h:542
msgid "checks if any subdev with matching group mask has a given ops."
msgstr ""
