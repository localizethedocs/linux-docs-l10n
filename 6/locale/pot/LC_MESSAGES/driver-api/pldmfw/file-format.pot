# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-30 08:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../driver-api/pldmfw/file-format.rst:5
msgid "PLDM Firmware file format overview"
msgstr ""

#: ../../../driver-api/pldmfw/file-format.rst:7
msgid ""
"A PLDM firmware package is a binary file which contains a header that "
"describes the contents of the firmware package. This includes an initial "
"package header, one or more firmware records, and one or more components "
"describing the actual flash contents to program."
msgstr ""

#: ../../../driver-api/pldmfw/file-format.rst:12
msgid "This diagram provides an overview of the file format::"
msgstr ""

#: ../../../driver-api/pldmfw/file-format.rst:50
msgid "Package Header"
msgstr ""

#: ../../../driver-api/pldmfw/file-format.rst:52
msgid ""
"The package header begins with the UUID of the PLDM file format, and "
"contains information about the version of the format that the file uses. It "
"also includes the total header size, a release date, the size of the "
"component bitmap, and an overall package version."
msgstr ""

#: ../../../driver-api/pldmfw/file-format.rst:57
msgid "The following diagram provides an overview of the package header::"
msgstr ""

#: ../../../driver-api/pldmfw/file-format.rst:75
msgid "Device Records"
msgstr ""

#: ../../../driver-api/pldmfw/file-format.rst:77
msgid ""
"The device firmware records area starts with a count indicating the total "
"number of records in the file, followed by each record. A single device "
"record describes what device matches this record. All valid PLDM firmware "
"files must contain at least one record, but optionally may contain more than "
"one record if they support multiple devices."
msgstr ""

#: ../../../driver-api/pldmfw/file-format.rst:83
msgid ""
"Each record will identify the device it supports via TLVs that describe the "
"device, such as the PCI device and vendor information. It will also indicate "
"which set of components that are used by this device. It is possible that "
"only subset of provided components will be used by a given record. A record "
"may also optionally contain device-specific package data that will be used "
"by the device firmware during the update process."
msgstr ""

#: ../../../driver-api/pldmfw/file-format.rst:90
msgid "The following diagram provides an overview of the device record area::"
msgstr ""

#: ../../../driver-api/pldmfw/file-format.rst:137
msgid "Component Info"
msgstr ""

#: ../../../driver-api/pldmfw/file-format.rst:139
msgid ""
"The component information area begins with a count of the number of "
"components. Following this count is a description for each component. The "
"component information points to the location in the file where the component "
"data is stored, and includes version data used to identify the version of "
"the component."
msgstr ""

#: ../../../driver-api/pldmfw/file-format.rst:145
msgid "The following diagram provides an overview of the component area::"
msgstr ""

#: ../../../driver-api/pldmfw/file-format.rst:193
msgid "Package Header CRC"
msgstr ""

#: ../../../driver-api/pldmfw/file-format.rst:195
msgid ""
"Following the component information is a short 4-byte CRC calculated over "
"the contents of all of the header information."
msgstr ""

#: ../../../driver-api/pldmfw/file-format.rst:199
msgid "Component Images"
msgstr ""

#: ../../../driver-api/pldmfw/file-format.rst:201
msgid ""
"The component images follow the package header information in the PLDM "
"firmware file. Each of these is simply a binary chunk with its start and "
"size defined by the matching component structure in the component info area."
msgstr ""
