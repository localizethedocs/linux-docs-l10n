# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-14 08:59+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../driver-api/dpll.rst:5
msgid "The Linux kernel dpll subsystem"
msgstr ""

#: ../../../driver-api/dpll.rst:8
msgid "DPLL"
msgstr ""

#: ../../../driver-api/dpll.rst:10
msgid ""
"PLL - Phase Locked Loop is an electronic circuit which syntonizes clock "
"signal of a device with an external clock signal. Effectively enabling "
"device to run on the same clock signal beat as provided on a PLL input."
msgstr ""

#: ../../../driver-api/dpll.rst:14
msgid ""
"DPLL - Digital Phase Locked Loop is an integrated circuit which in addition "
"to plain PLL behavior incorporates a digital phase detector and may have "
"digital divider in the loop. As a result, the frequency on DPLL's input and "
"output may be configurable."
msgstr ""

#: ../../../driver-api/dpll.rst:20
msgid "Subsystem"
msgstr ""

#: ../../../driver-api/dpll.rst:22
msgid ""
"The main purpose of dpll subsystem is to provide general interface to "
"configure devices that use any kind of Digital PLL and could use different "
"sources of input signal to synchronize to, as well as different types of "
"outputs. The main interface is NETLINK_GENERIC based protocol with an event "
"monitoring multicast group defined."
msgstr ""

#: ../../../driver-api/dpll.rst:30
msgid "Device object"
msgstr ""

#: ../../../driver-api/dpll.rst:32
msgid ""
"Single dpll device object means single Digital PLL circuit and bunch of "
"connected pins. It reports the supported modes of operation and current "
"status to the user in response to the `do` request of netlink command "
"``DPLL_CMD_DEVICE_GET`` and list of dplls registered in the subsystem with "
"`dump` netlink request of the same command. Changing the configuration of "
"dpll device is done with `do` request of netlink ``DPLL_CMD_DEVICE_SET`` "
"command. A device handle is ``DPLL_A_ID``, it shall be provided to get or "
"set configuration of particular device in the system. It can be obtained "
"with a ``DPLL_CMD_DEVICE_GET`` `dump` request or a "
"``DPLL_CMD_DEVICE_ID_GET`` `do` request, where the one must provide "
"attributes that result in single device match."
msgstr ""

#: ../../../driver-api/dpll.rst:47
msgid "Pin object"
msgstr ""

#: ../../../driver-api/dpll.rst:49
msgid ""
"A pin is amorphic object which represents either input or output, it could "
"be internal component of the device, as well as externally connected. The "
"number of pins per dpll vary, but usually multiple pins shall be provided "
"for a single dpll device. Pin's properties, capabilities and status is "
"provided to the user in response to `do` request of netlink "
"``DPLL_CMD_PIN_GET`` command. It is also possible to list all the pins that "
"were registered in the system with `dump` request of ``DPLL_CMD_PIN_GET`` "
"command. Configuration of a pin can be changed by `do` request of netlink "
"``DPLL_CMD_PIN_SET`` command. Pin handle is a ``DPLL_A_PIN_ID``, it shall be "
"provided to get or set configuration of particular pin in the system. It can "
"be obtained with ``DPLL_CMD_PIN_GET`` `dump` request or "
"``DPLL_CMD_PIN_ID_GET`` `do` request, where user provides attributes that "
"result in single pin match."
msgstr ""

#: ../../../driver-api/dpll.rst:66
msgid "Pin selection"
msgstr ""

#: ../../../driver-api/dpll.rst:68
msgid ""
"In general, selected pin (the one which signal is driving the dpll device) "
"can be obtained from ``DPLL_A_PIN_STATE`` attribute, and only one pin shall "
"be in ``DPLL_PIN_STATE_CONNECTED`` state for any dpll device."
msgstr ""

#: ../../../driver-api/dpll.rst:73
msgid ""
"Pin selection can be done either manually or automatically, depending on "
"hardware capabilities and active dpll device work mode (``DPLL_A_MODE`` "
"attribute). The consequence is that there are differences for each mode in "
"terms of available pin states, as well as for the states the user can "
"request for a dpll device."
msgstr ""

#: ../../../driver-api/dpll.rst:79
msgid ""
"In manual mode (``DPLL_MODE_MANUAL``) the user can request or receive one of "
"following pin states:"
msgstr ""

#: ../../../driver-api/dpll.rst:82
msgid "``DPLL_PIN_STATE_CONNECTED`` - the pin is used to drive dpll device"
msgstr ""

#: ../../../driver-api/dpll.rst:83
msgid ""
"``DPLL_PIN_STATE_DISCONNECTED`` - the pin is not used to drive dpll device"
msgstr ""

#: ../../../driver-api/dpll.rst:86
msgid ""
"In automatic mode (``DPLL_MODE_AUTOMATIC``) the user can request or receive "
"one of following pin states:"
msgstr ""

#: ../../../driver-api/dpll.rst:89
msgid ""
"``DPLL_PIN_STATE_SELECTABLE`` - the pin shall be considered as valid input "
"for automatic selection algorithm"
msgstr ""

#: ../../../driver-api/dpll.rst:91
msgid ""
"``DPLL_PIN_STATE_DISCONNECTED`` - the pin shall be not considered as a valid "
"input for automatic selection algorithm"
msgstr ""

#: ../../../driver-api/dpll.rst:94
msgid ""
"In automatic mode (``DPLL_MODE_AUTOMATIC``) the user can only receive pin "
"state ``DPLL_PIN_STATE_CONNECTED`` once automatic selection algorithm locks "
"a dpll device with one of the inputs."
msgstr ""

#: ../../../driver-api/dpll.rst:99
msgid "Shared pins"
msgstr ""

#: ../../../driver-api/dpll.rst:101
msgid ""
"A single pin object can be attached to multiple dpll devices. Then there are "
"two groups of configuration knobs:"
msgstr ""

#: ../../../driver-api/dpll.rst:104
msgid ""
"Set on a pin - the configuration affects all dpll devices pin is registered "
"to (i.e., ``DPLL_A_PIN_FREQUENCY``),"
msgstr ""

#: ../../../driver-api/dpll.rst:106
msgid ""
"Set on a pin-dpll tuple - the configuration affects only selected dpll "
"device (i.e., ``DPLL_A_PIN_PRIO``, ``DPLL_A_PIN_STATE``, "
"``DPLL_A_PIN_DIRECTION``)."
msgstr ""

#: ../../../driver-api/dpll.rst:111
msgid "MUX-type pins"
msgstr ""

#: ../../../driver-api/dpll.rst:113
msgid ""
"A pin can be MUX-type, it aggregates child pins and serves as a pin "
"multiplexer. One or more pins are registered with MUX-type instead of being "
"directly registered to a dpll device. Pins registered with a MUX-type pin "
"provide user with additional nested attribute ``DPLL_A_PIN_PARENT_PIN`` for "
"each parent they were registered with. If a pin was registered with multiple "
"parent pins, they behave like a multiple output multiplexer. In this case "
"output of a ``DPLL_CMD_PIN_GET`` would contain multiple pin-parent nested "
"attributes with current state related to each parent, like::"
msgstr ""

#: ../../../driver-api/dpll.rst:136
msgid ""
"Only one child pin can provide its signal to the parent MUX-type pin at a "
"time, the selection is done by requesting change of a child pin state on "
"desired parent, with the use of ``DPLL_A_PIN_PARENT`` nested attribute. "
"Example of netlink `set state on parent pin` message format:"
msgstr ""

#: ../../../driver-api/dpll.rst:142 ../../../driver-api/dpll.rst:164
#: ../../../driver-api/dpll.rst:209 ../../../driver-api/dpll.rst:293
#: ../../../driver-api/dpll.rst:370 ../../../driver-api/dpll.rst:414
msgid "``DPLL_A_PIN_ID``"
msgstr ""

#: ../../../driver-api/dpll.rst:142
msgid "child pin id"
msgstr ""

#: ../../../driver-api/dpll.rst:143 ../../../driver-api/dpll.rst:404
#: ../../../driver-api/dpll.rst:426
msgid "``DPLL_A_PIN_PARENT_PIN``"
msgstr ""

#: ../../../driver-api/dpll.rst:143
msgid "nested attribute for requesting configuration related to parent pin"
msgstr ""

#: ../../../driver-api/dpll.rst:145 ../../../driver-api/dpll.rst:167
#: ../../../driver-api/dpll.rst:217 ../../../driver-api/dpll.rst:395
#: ../../../driver-api/dpll.rst:406 ../../../driver-api/dpll.rst:420
#: ../../../driver-api/dpll.rst:428
msgid "``DPLL_A_PIN_PARENT_ID``"
msgstr ""

#: ../../../driver-api/dpll.rst:145
msgid "parent pin id"
msgstr ""

#: ../../../driver-api/dpll.rst:146 ../../../driver-api/dpll.rst:294
#: ../../../driver-api/dpll.rst:398 ../../../driver-api/dpll.rst:407
#: ../../../driver-api/dpll.rst:424 ../../../driver-api/dpll.rst:429
msgid "``DPLL_A_PIN_STATE``"
msgstr ""

#: ../../../driver-api/dpll.rst:146
msgid "requested pin state on parent"
msgstr ""

#: ../../../driver-api/dpll.rst:150
msgid "Pin priority"
msgstr ""

#: ../../../driver-api/dpll.rst:152
msgid ""
"Some devices might offer a capability of automatic pin selection mode (enum "
"value ``DPLL_MODE_AUTOMATIC`` of ``DPLL_A_MODE`` attribute). Usually, "
"automatic selection is performed on the hardware level, which means only "
"pins directly connected to the dpll can be used for automatic input pin "
"selection. In automatic selection mode, the user cannot manually select a "
"input pin for the device, instead the user shall provide all directly "
"connected pins with a priority ``DPLL_A_PIN_PRIO``, the device would pick a "
"highest priority valid signal and use it to control the DPLL device. Example "
"of netlink `set priority on parent pin` message format:"
msgstr ""

#: ../../../driver-api/dpll.rst:164 ../../../driver-api/dpll.rst:209
msgid "configured pin id"
msgstr ""

#: ../../../driver-api/dpll.rst:165 ../../../driver-api/dpll.rst:214
#: ../../../driver-api/dpll.rst:393 ../../../driver-api/dpll.rst:418
msgid "``DPLL_A_PIN_PARENT_DEVICE``"
msgstr ""

#: ../../../driver-api/dpll.rst:165
msgid ""
"nested attribute for requesting configuration related to parent dpll device"
msgstr ""

#: ../../../driver-api/dpll.rst:167 ../../../driver-api/dpll.rst:217
msgid "parent dpll device id"
msgstr ""

#: ../../../driver-api/dpll.rst:168 ../../../driver-api/dpll.rst:396
#: ../../../driver-api/dpll.rst:422
msgid "``DPLL_A_PIN_PRIO``"
msgstr ""

#: ../../../driver-api/dpll.rst:168
msgid "requested pin prio on parent dpll"
msgstr ""

#: ../../../driver-api/dpll.rst:171
msgid ""
"Child pin of MUX-type pin is not capable of automatic input pin selection, "
"in order to configure active input of a MUX-type pin, the user needs to "
"request desired pin state of the child pin on the parent pin, as described "
"in the ``MUX-type pins`` chapter."
msgstr ""

#: ../../../driver-api/dpll.rst:177
msgid "Phase offset measurement and adjustment"
msgstr ""

#: ../../../driver-api/dpll.rst:179
msgid ""
"Device may provide ability to measure a phase difference between signals on "
"a pin and its parent dpll device. If pin-dpll phase offset measurement is "
"supported, it shall be provided with ``DPLL_A_PIN_PHASE_OFFSET`` attribute "
"for each parent dpll device. The reported phase offset may be computed as "
"the average of prior values and the current measurement, using the following "
"formula:"
msgstr ""

#: ../../../driver-api/dpll.rst:186
msgid ""
"curr\\_avg = prev\\_avg * \\frac{2^N-1}{2^N} + new\\_val * \\frac{1}{2^N}\n"
"\n"
msgstr ""

#: ../../../driver-api/dpll.rst:189
msgid ""
"where `curr_avg` is the current reported phase offset, `prev_avg` is the "
"previously reported value, `new_val` is the current measurement, and `N` is "
"the averaging factor. Configured averaging factor value is provided with "
"``DPLL_A_PHASE_OFFSET_AVG_FACTOR`` attribute of a device and value change "
"can be requested with the same attribute with ``DPLL_CMD_DEVICE_SET`` "
"command."
msgstr ""

#: ../../../driver-api/dpll.rst:196
msgid "``DPLL_A_PHASE_OFFSET_AVG_FACTOR``"
msgstr ""

#: ../../../driver-api/dpll.rst:196
msgid "attr configured value of phase offset averaging factor"
msgstr ""

#: ../../../driver-api/dpll.rst:200
msgid ""
"Device may also provide ability to adjust a signal phase on a pin. If pin "
"phase adjustment is supported, minimal and maximal values that pin handle "
"shall be provide to the user on ``DPLL_CMD_PIN_GET`` respond with "
"``DPLL_A_PIN_PHASE_ADJUST_MIN`` and ``DPLL_A_PIN_PHASE_ADJUST_MAX`` "
"attributes. Configured phase adjust value is provided with "
"``DPLL_A_PIN_PHASE_ADJUST`` attribute of a pin, and value change can be "
"requested with the same attribute with ``DPLL_CMD_PIN_SET`` command."
msgstr ""

#: ../../../driver-api/dpll.rst:210 ../../../driver-api/dpll.rst:387
msgid "``DPLL_A_PIN_PHASE_ADJUST_MIN``"
msgstr ""

#: ../../../driver-api/dpll.rst:210 ../../../driver-api/dpll.rst:387
msgid "attr minimum value of phase adjustment"
msgstr ""

#: ../../../driver-api/dpll.rst:211 ../../../driver-api/dpll.rst:389
msgid "``DPLL_A_PIN_PHASE_ADJUST_MAX``"
msgstr ""

#: ../../../driver-api/dpll.rst:211 ../../../driver-api/dpll.rst:389
msgid "attr maximum value of phase adjustment"
msgstr ""

#: ../../../driver-api/dpll.rst:212 ../../../driver-api/dpll.rst:391
#: ../../../driver-api/dpll.rst:416
msgid "``DPLL_A_PIN_PHASE_ADJUST``"
msgstr ""

#: ../../../driver-api/dpll.rst:212
msgid "attr configured value of phase adjustment on parent dpll device"
msgstr ""

#: ../../../driver-api/dpll.rst:214
msgid ""
"nested attribute for requesting configuration on given parent dpll device"
msgstr ""

#: ../../../driver-api/dpll.rst:218 ../../../driver-api/dpll.rst:402
msgid "``DPLL_A_PIN_PHASE_OFFSET``"
msgstr ""

#: ../../../driver-api/dpll.rst:218
msgid "attr measured phase difference between a pin and parent dpll device"
msgstr ""

#: ../../../driver-api/dpll.rst:222
msgid ""
"All phase related values are provided in pico seconds, which represents time "
"difference between signals phase. The negative value means that phase of "
"signal on pin is earlier in time than dpll's signal. Positive value means "
"that phase of signal on pin is later in time than signal of a dpll."
msgstr ""

#: ../../../driver-api/dpll.rst:228
msgid ""
"Phase adjust (also min and max) values are integers, but measured phase "
"offset values are fractional with 3-digit decimal places and shell be "
"divided with ``DPLL_PIN_PHASE_OFFSET_DIVIDER`` to get integer part and "
"modulo divided to get fractional part."
msgstr ""

#: ../../../driver-api/dpll.rst:234
msgid "Phase offset monitor"
msgstr ""

#: ../../../driver-api/dpll.rst:236
msgid ""
"Phase offset measurement is typically performed against the current active "
"source. However, some DPLL (Digital Phase-Locked Loop) devices may offer the "
"capability to monitor phase offsets across all available inputs. The "
"attribute and current feature state shall be included in the response "
"message of the ``DPLL_CMD_DEVICE_GET`` command for supported DPLL devices. "
"In such cases, users can also control the feature using the "
"``DPLL_CMD_DEVICE_SET`` command by setting the ``enum dpll_feature_state`` "
"values for the attribute. Once enabled the phase offset measurements for the "
"input shall be returned in the ``DPLL_A_PIN_PHASE_OFFSET`` attribute."
msgstr ""

#: ../../../driver-api/dpll.rst:248
msgid "``DPLL_A_PHASE_OFFSET_MONITOR``"
msgstr ""

#: ../../../driver-api/dpll.rst:248
msgid "attr state of a feature"
msgstr ""

#: ../../../driver-api/dpll.rst:252
msgid "Embedded SYNC"
msgstr ""

#: ../../../driver-api/dpll.rst:254
msgid ""
"Device may provide ability to use Embedded SYNC feature. It allows to embed "
"additional SYNC signal into the base frequency of a pin - a one special "
"pulse of base frequency signal every time SYNC signal pulse happens. The "
"user can configure the frequency of Embedded SYNC. The Embedded SYNC "
"capability is always related to a given base frequency and HW capabilities. "
"The user is provided a range of Embedded SYNC frequencies supported, "
"depending on current base frequency configured for the pin."
msgstr ""

#: ../../../driver-api/dpll.rst:264
msgid "``DPLL_A_PIN_ESYNC_FREQUENCY``"
msgstr ""

#: ../../../driver-api/dpll.rst:264
msgid "current Embedded SYNC frequency"
msgstr ""

#: ../../../driver-api/dpll.rst:265
msgid "``DPLL_A_PIN_ESYNC_FREQUENCY_SUPPORTED``"
msgstr ""

#: ../../../driver-api/dpll.rst:265
msgid "nest available Embedded SYNC frequency ranges"
msgstr ""

#: ../../../driver-api/dpll.rst:267
msgid "``DPLL_A_PIN_FREQUENCY_MIN``"
msgstr ""

#: ../../../driver-api/dpll.rst:267 ../../../driver-api/dpll.rst:385
msgid "attr minimum value of frequency"
msgstr ""

#: ../../../driver-api/dpll.rst:268
msgid "``DPLL_A_PIN_FREQUENCY_MAX``"
msgstr ""

#: ../../../driver-api/dpll.rst:268 ../../../driver-api/dpll.rst:386
msgid "attr maximum value of frequency"
msgstr ""

#: ../../../driver-api/dpll.rst:269
msgid "``DPLL_A_PIN_ESYNC_PULSE``"
msgstr ""

#: ../../../driver-api/dpll.rst:269
msgid "pulse type of Embedded SYNC"
msgstr ""

#: ../../../driver-api/dpll.rst:273
msgid "Reference SYNC"
msgstr ""

#: ../../../driver-api/dpll.rst:275
msgid ""
"The device may support the Reference SYNC feature, which allows the "
"combination of two inputs into a input pair. In this configuration, clock "
"signals from both inputs are used to synchronize the DPLL device. The higher "
"frequency signal is utilized for the loop bandwidth of the DPLL, while the "
"lower frequency signal is used to syntonize the output signal of the DPLL "
"device. This feature enables the provision of a high-quality loop bandwidth "
"signal from an external source."
msgstr ""

#: ../../../driver-api/dpll.rst:283
msgid ""
"A capable input provides a list of inputs that can be bound with to create "
"Reference SYNC. To control this feature, the user must request a desired "
"state for a target pin: use ``DPLL_PIN_STATE_CONNECTED`` to enable or "
"``DPLL_PIN_STATE_DISCONNECTED`` to disable the feature. An input pin can be "
"bound to only one other pin at any given time."
msgstr ""

#: ../../../driver-api/dpll.rst:290
msgid "``DPLL_A_PIN_REFERENCE_SYNC``"
msgstr ""

#: ../../../driver-api/dpll.rst:290
msgid ""
"nested attribute for providing info or requesting configuration of the "
"Reference SYNC feature"
msgstr ""

#: ../../../driver-api/dpll.rst:293
msgid "target pin id for Reference SYNC feature"
msgstr ""

#: ../../../driver-api/dpll.rst:294
msgid "state of Reference SYNC connection"
msgstr ""

#: ../../../driver-api/dpll.rst:298
msgid "Configuration commands group"
msgstr ""

#: ../../../driver-api/dpll.rst:300
msgid ""
"Configuration commands are used to get information about registered dpll "
"devices (and pins), as well as set configuration of device or pins. As dpll "
"devices must be abstracted and reflect real hardware, there is no way to add "
"new dpll device via netlink from user space and each device should be "
"registered by its driver."
msgstr ""

#: ../../../driver-api/dpll.rst:306
msgid ""
"All netlink commands require ``GENL_ADMIN_PERM``. This is to prevent any "
"spamming/DoS from unauthorized userspace applications."
msgstr ""

#: ../../../driver-api/dpll.rst:310
msgid "List of netlink commands with possible attributes"
msgstr ""

#: ../../../driver-api/dpll.rst:312
msgid ""
"Constants identifying command types for dpll device uses a ``DPLL_CMD_`` "
"prefix and suffix according to command purpose. The dpll device related "
"attributes use a ``DPLL_A_`` prefix and suffix according to attribute "
"purpose."
msgstr ""

#: ../../../driver-api/dpll.rst:318
msgid "``DPLL_CMD_DEVICE_ID_GET``"
msgstr ""

#: ../../../driver-api/dpll.rst:318
msgid "command to get device ID"
msgstr ""

#: ../../../driver-api/dpll.rst:319 ../../../driver-api/dpll.rst:330
msgid "``DPLL_A_MODULE_NAME``"
msgstr ""

#: ../../../driver-api/dpll.rst:319 ../../../driver-api/dpll.rst:330
#: ../../../driver-api/dpll.rst:354 ../../../driver-api/dpll.rst:371
msgid "attr module name of registerer"
msgstr ""

#: ../../../driver-api/dpll.rst:320 ../../../driver-api/dpll.rst:331
msgid "``DPLL_A_CLOCK_ID``"
msgstr ""

#: ../../../driver-api/dpll.rst:320 ../../../driver-api/dpll.rst:331
#: ../../../driver-api/dpll.rst:355 ../../../driver-api/dpll.rst:372
msgid ""
"attr Unique Clock Identifier (EUI-64), as defined by the IEEE 1588 standard"
msgstr ""

#: ../../../driver-api/dpll.rst:323 ../../../driver-api/dpll.rst:338
msgid "``DPLL_A_TYPE``"
msgstr ""

#: ../../../driver-api/dpll.rst:323 ../../../driver-api/dpll.rst:338
msgid "attr type of dpll device"
msgstr ""

#: ../../../driver-api/dpll.rst:327
msgid "``DPLL_CMD_DEVICE_GET``"
msgstr ""

#: ../../../driver-api/dpll.rst:327
msgid "command to get device info or dump list of available devices"
msgstr ""

#: ../../../driver-api/dpll.rst:329 ../../../driver-api/dpll.rst:343
msgid "``DPLL_A_ID``"
msgstr ""

#: ../../../driver-api/dpll.rst:329
msgid "attr unique dpll device ID"
msgstr ""

#: ../../../driver-api/dpll.rst:334 ../../../driver-api/dpll.rst:344
msgid "``DPLL_A_MODE``"
msgstr ""

#: ../../../driver-api/dpll.rst:334
msgid "attr selection mode"
msgstr ""

#: ../../../driver-api/dpll.rst:335
msgid "``DPLL_A_MODE_SUPPORTED``"
msgstr ""

#: ../../../driver-api/dpll.rst:335
msgid "attr available selection modes"
msgstr ""

#: ../../../driver-api/dpll.rst:336
msgid "``DPLL_A_LOCK_STATUS``"
msgstr ""

#: ../../../driver-api/dpll.rst:336
msgid "attr dpll device lock status"
msgstr ""

#: ../../../driver-api/dpll.rst:337
msgid "``DPLL_A_TEMP``"
msgstr ""

#: ../../../driver-api/dpll.rst:337
msgid "attr device temperature info"
msgstr ""

#: ../../../driver-api/dpll.rst:342
msgid "``DPLL_CMD_DEVICE_SET``"
msgstr ""

#: ../../../driver-api/dpll.rst:342
msgid "command to set dpll device config"
msgstr ""

#: ../../../driver-api/dpll.rst:343
msgid "attr internal dpll device index"
msgstr ""

#: ../../../driver-api/dpll.rst:344
msgid "attr selection mode to configure"
msgstr ""

#: ../../../driver-api/dpll.rst:347
msgid ""
"Constants identifying command types for pins uses a ``DPLL_CMD_PIN_`` prefix "
"and suffix according to command purpose. The pin related attributes use a "
"``DPLL_A_PIN_`` prefix and suffix according to attribute purpose."
msgstr ""

#: ../../../driver-api/dpll.rst:353
msgid "``DPLL_CMD_PIN_ID_GET``"
msgstr ""

#: ../../../driver-api/dpll.rst:353
msgid "command to get pin ID"
msgstr ""

#: ../../../driver-api/dpll.rst:354 ../../../driver-api/dpll.rst:371
msgid "``DPLL_A_PIN_MODULE_NAME``"
msgstr ""

#: ../../../driver-api/dpll.rst:355 ../../../driver-api/dpll.rst:372
msgid "``DPLL_A_PIN_CLOCK_ID``"
msgstr ""

#: ../../../driver-api/dpll.rst:358 ../../../driver-api/dpll.rst:375
msgid "``DPLL_A_PIN_BOARD_LABEL``"
msgstr ""

#: ../../../driver-api/dpll.rst:358 ../../../driver-api/dpll.rst:375
msgid "attr pin board label provided by registerer"
msgstr ""

#: ../../../driver-api/dpll.rst:360 ../../../driver-api/dpll.rst:377
msgid "``DPLL_A_PIN_PANEL_LABEL``"
msgstr ""

#: ../../../driver-api/dpll.rst:360 ../../../driver-api/dpll.rst:377
msgid "attr pin panel label provided by registerer"
msgstr ""

#: ../../../driver-api/dpll.rst:362 ../../../driver-api/dpll.rst:379
msgid "``DPLL_A_PIN_PACKAGE_LABEL``"
msgstr ""

#: ../../../driver-api/dpll.rst:362 ../../../driver-api/dpll.rst:379
msgid "attr pin package label provided by registerer"
msgstr ""

#: ../../../driver-api/dpll.rst:364 ../../../driver-api/dpll.rst:381
msgid "``DPLL_A_PIN_TYPE``"
msgstr ""

#: ../../../driver-api/dpll.rst:364 ../../../driver-api/dpll.rst:381
msgid "attr type of a pin"
msgstr ""

#: ../../../driver-api/dpll.rst:368
msgid "``DPLL_CMD_PIN_GET``"
msgstr ""

#: ../../../driver-api/dpll.rst:368
msgid "command to get pin info or dump list of available pins"
msgstr ""

#: ../../../driver-api/dpll.rst:370 ../../../driver-api/dpll.rst:414
msgid "attr unique a pin ID"
msgstr ""

#: ../../../driver-api/dpll.rst:382 ../../../driver-api/dpll.rst:415
msgid "``DPLL_A_PIN_FREQUENCY``"
msgstr ""

#: ../../../driver-api/dpll.rst:382
msgid "attr current frequency of a pin"
msgstr ""

#: ../../../driver-api/dpll.rst:383
msgid "``DPLL_A_PIN_FREQUENCY_SUPPORTED``"
msgstr ""

#: ../../../driver-api/dpll.rst:383
msgid "nested attr provides supported frequencies"
msgstr ""

#: ../../../driver-api/dpll.rst:385
msgid "``DPLL_A_PIN_ANY_FREQUENCY_MIN``"
msgstr ""

#: ../../../driver-api/dpll.rst:386
msgid "``DPLL_A_PIN_ANY_FREQUENCY_MAX``"
msgstr ""

#: ../../../driver-api/dpll.rst:391
msgid "attr configured value of phase adjustment on parent device"
msgstr ""

#: ../../../driver-api/dpll.rst:393
msgid "nested attr for each parent device the pin is connected with"
msgstr ""

#: ../../../driver-api/dpll.rst:395 ../../../driver-api/dpll.rst:420
msgid "attr parent dpll device id"
msgstr ""

#: ../../../driver-api/dpll.rst:396
msgid "attr priority of pin on the dpll device"
msgstr ""

#: ../../../driver-api/dpll.rst:398
msgid "attr state of pin on the parent dpll device"
msgstr ""

#: ../../../driver-api/dpll.rst:400 ../../../driver-api/dpll.rst:421
msgid "``DPLL_A_PIN_DIRECTION``"
msgstr ""

#: ../../../driver-api/dpll.rst:400
msgid "attr direction of a pin on the parent dpll device"
msgstr ""

#: ../../../driver-api/dpll.rst:402
msgid "attr measured phase difference between a pin and parent dpll"
msgstr ""

#: ../../../driver-api/dpll.rst:404
msgid "nested attr for each parent pin the pin is connected with"
msgstr ""

#: ../../../driver-api/dpll.rst:406 ../../../driver-api/dpll.rst:428
msgid "attr parent pin id"
msgstr ""

#: ../../../driver-api/dpll.rst:407
msgid "attr state of pin on the parent pin"
msgstr ""

#: ../../../driver-api/dpll.rst:409
msgid "``DPLL_A_PIN_CAPABILITIES``"
msgstr ""

#: ../../../driver-api/dpll.rst:409
msgid "attr bitmask of pin capabilities"
msgstr ""

#: ../../../driver-api/dpll.rst:413
msgid "``DPLL_CMD_PIN_SET``"
msgstr ""

#: ../../../driver-api/dpll.rst:413
msgid "command to set pins configuration"
msgstr ""

#: ../../../driver-api/dpll.rst:415
msgid "attr requested frequency of a pin"
msgstr ""

#: ../../../driver-api/dpll.rst:416
msgid "attr requested value of phase adjustment on parent device"
msgstr ""

#: ../../../driver-api/dpll.rst:418
msgid "nested attr for each parent dpll device configuration request"
msgstr ""

#: ../../../driver-api/dpll.rst:421
msgid "attr requested direction of a pin"
msgstr ""

#: ../../../driver-api/dpll.rst:422
msgid "attr requested priority of pin on the dpll device"
msgstr ""

#: ../../../driver-api/dpll.rst:424
msgid "attr requested state of pin on the dpll device"
msgstr ""

#: ../../../driver-api/dpll.rst:426
msgid "nested attr for each parent pin configuration request"
msgstr ""

#: ../../../driver-api/dpll.rst:429
msgid "attr requested state of pin on parent pin"
msgstr ""

#: ../../../driver-api/dpll.rst:434
msgid "Netlink dump requests"
msgstr ""

#: ../../../driver-api/dpll.rst:436
msgid ""
"The ``DPLL_CMD_DEVICE_GET`` and ``DPLL_CMD_PIN_GET`` commands are capable of "
"dump type netlink requests, in which case the response is in the same format "
"as for their ``do`` request, but every device or pin registered in the "
"system is returned."
msgstr ""

#: ../../../driver-api/dpll.rst:442
msgid "SET commands format"
msgstr ""

#: ../../../driver-api/dpll.rst:444
msgid ""
"``DPLL_CMD_DEVICE_SET`` - to target a dpll device, the user provides "
"``DPLL_A_ID``, which is unique identifier of dpll device in the system, as "
"well as parameter being configured (``DPLL_A_MODE``)."
msgstr ""

#: ../../../driver-api/dpll.rst:448
msgid ""
"``DPLL_CMD_PIN_SET`` - to target a pin user must provide a "
"``DPLL_A_PIN_ID``, which is unique identifier of a pin in the system. Also "
"configured pin parameters must be added. If ``DPLL_A_PIN_FREQUENCY`` is "
"configured, this affects all the dpll devices that are connected with the "
"pin, that is why frequency attribute shall not be enclosed in "
"``DPLL_A_PIN_PARENT_DEVICE``. Other attributes: ``DPLL_A_PIN_PRIO``, "
"``DPLL_A_PIN_STATE`` or ``DPLL_A_PIN_DIRECTION`` must be enclosed in "
"``DPLL_A_PIN_PARENT_DEVICE`` as their configuration relates to only one of "
"parent dplls, targeted by ``DPLL_A_PIN_PARENT_ID`` attribute which is also "
"required inside that nest. For MUX-type pins the ``DPLL_A_PIN_STATE`` "
"attribute is configured in similar way, by enclosing required state in "
"``DPLL_A_PIN_PARENT_PIN`` nested attribute and targeted parent pin id in "
"``DPLL_A_PIN_PARENT_ID``."
msgstr ""

#: ../../../driver-api/dpll.rst:463
msgid ""
"In general, it is possible to configure multiple parameters at once, but "
"internally each parameter change will be invoked separately, where order of "
"configuration is not guaranteed by any means."
msgstr ""

#: ../../../driver-api/dpll.rst:468
msgid "Configuration pre-defined enums"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:13
msgid ""
"working modes a dpll can support, differentiates if and how dpll selects one "
"of its inputs to syntonize with it, valid values for DPLL_A_MODE attribute"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:17
#: include/uapi/linux/dpll.h:33 include/uapi/linux/dpll.h:58
#: include/uapi/linux/dpll.h:112 include/uapi/linux/dpll.h:126
#: include/uapi/linux/dpll.h:147 include/uapi/linux/dpll.h:167
#: include/uapi/linux/dpll.h:185 include/uapi/linux/dpll.h:200
msgid "**Constants**"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:19
msgid "``DPLL_MODE_MANUAL``"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:20
msgid "input can be only selected by sending a request to dpll"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:22
msgid "``DPLL_MODE_AUTOMATIC``"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:23
msgid "highest prio input pin auto selected by dpll"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:29
msgid ""
"provides information of dpll device lock status, valid values for "
"DPLL_A_LOCK_STATUS attribute"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:35
msgid "``DPLL_LOCK_STATUS_UNLOCKED``"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:36
msgid ""
"dpll was not yet locked to any valid input (or forced by setting DPLL_A_MODE "
"to DPLL_MODE_DETACHED)"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:39
msgid "``DPLL_LOCK_STATUS_LOCKED``"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:40
msgid "dpll is locked to a valid signal, but no holdover available"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:43
msgid "``DPLL_LOCK_STATUS_LOCKED_HO_ACQ``"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:44
msgid "dpll is locked and holdover acquired"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:46
msgid "``DPLL_LOCK_STATUS_HOLDOVER``"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:47
msgid ""
"dpll is in holdover state - lost a valid lock or was forced by disconnecting "
"all the pins (latter possible only when dpll lock-state was already "
"DPLL_LOCK_STATUS_LOCKED_HO_ACQ, if dpll lock-state was not "
"DPLL_LOCK_STATUS_LOCKED_HO_ACQ, the dpll's lock-state shall remain "
"DPLL_LOCK_STATUS_UNLOCKED)"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:54
msgid ""
"if previous status change was done due to a failure, this provides "
"information of dpll device lock status error. Valid values for "
"DPLL_A_LOCK_STATUS_ERROR attribute"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:60
msgid "``DPLL_LOCK_STATUS_ERROR_NONE``"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:61
msgid "dpll device lock status was changed without any error"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:64
msgid "``DPLL_LOCK_STATUS_ERROR_UNDEFINED``"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:65
msgid ""
"dpll device lock status was changed due to undefined error. Driver fills "
"this value up in case it is not able to obtain suitable exact error type."
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:69
msgid "``DPLL_LOCK_STATUS_ERROR_MEDIA_DOWN``"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:70
msgid ""
"dpll device lock status was changed because of associated media got down. "
"This may happen for example if dpll device was previously locked on an input "
"pin of type PIN_TYPE_SYNCE_ETH_PORT."
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:75
msgid "``DPLL_LOCK_STATUS_ERROR_FRACTIONAL_FREQUENCY_OFFSET_TOO_HIGH``"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:76
msgid ""
"the FFO (Fractional Frequency Offset) between the RX and TX symbol rate on "
"the media got too high. This may happen for example if dpll device was "
"previously locked on an input pin of type PIN_TYPE_SYNCE_ETH_PORT."
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:108
msgid "type of dpll, valid values for DPLL_A_TYPE attribute"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:114
msgid "``DPLL_TYPE_PPS``"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:115
msgid "dpll produces Pulse-Per-Second signal"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:117
msgid "``DPLL_TYPE_EEC``"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:118
msgid "dpll drives the Ethernet Equipment Clock"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:122
msgid ""
"defines possible types of a pin, valid values for DPLL_A_PIN_TYPE attribute"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:128
msgid "``DPLL_PIN_TYPE_MUX``"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:129
msgid "aggregates another layer of selectable pins"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:131
msgid "``DPLL_PIN_TYPE_EXT``"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:132
msgid "external input"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:134
msgid "``DPLL_PIN_TYPE_SYNCE_ETH_PORT``"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:135
msgid "ethernet port PHY's recovered clock"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:137
msgid "``DPLL_PIN_TYPE_INT_OSCILLATOR``"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:138
msgid "device internal oscillator"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:140
msgid "``DPLL_PIN_TYPE_GNSS``"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:141
msgid "GNSS recovered clock"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:143
msgid ""
"defines possible direction of a pin, valid values for DPLL_A_PIN_DIRECTION "
"attribute"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:149
msgid "``DPLL_PIN_DIRECTION_INPUT``"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:150
msgid "pin used as a input of a signal"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:152
msgid "``DPLL_PIN_DIRECTION_OUTPUT``"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:153
msgid "pin used to output the signal"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:163
msgid ""
"defines possible states of a pin, valid values for DPLL_A_PIN_STATE attribute"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:169
msgid "``DPLL_PIN_STATE_CONNECTED``"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:170
msgid "pin connected, active input of phase locked loop"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:172
msgid "``DPLL_PIN_STATE_DISCONNECTED``"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:173
msgid "pin disconnected, not considered as a valid input"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:176
msgid "``DPLL_PIN_STATE_SELECTABLE``"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:177
msgid "pin enabled for automatic input selection"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:181
msgid ""
"defines possible capabilities of a pin, valid flags on "
"DPLL_A_PIN_CAPABILITIES attribute"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:187
msgid "``DPLL_PIN_CAPABILITIES_DIRECTION_CAN_CHANGE``"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:188
msgid "pin direction can be changed"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:190
msgid "``DPLL_PIN_CAPABILITIES_PRIORITY_CAN_CHANGE``"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:191
msgid "pin priority can be changed"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:193
msgid "``DPLL_PIN_CAPABILITIES_STATE_CAN_CHANGE``"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:194
msgid "pin state can be changed"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:196
msgid "Allow control (enable/disable) and status checking over features."
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:202
msgid "``DPLL_FEATURE_STATE_DISABLE``"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:203
msgid "feature shall be disabled"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:205
msgid "``DPLL_FEATURE_STATE_ENABLE``"
msgstr ""

#: ../../../driver-api/dpll:470: include/uapi/linux/dpll.h:206
msgid "feature shall be enabled"
msgstr ""

#: ../../../driver-api/dpll.rst:473
msgid "Notifications"
msgstr ""

#: ../../../driver-api/dpll.rst:475
msgid ""
"dpll device can provide notifications regarding status changes of the "
"device, i.e. lock status changes, input/output changes or other alarms. "
"There is one multicast group that is used to notify user-space apps via "
"netlink socket: ``DPLL_MCGRP_MONITOR``"
msgstr ""

#: ../../../driver-api/dpll.rst:480
msgid "Notifications messages:"
msgstr ""

#: ../../../driver-api/dpll.rst:483
msgid "``DPLL_CMD_DEVICE_CREATE_NTF``"
msgstr ""

#: ../../../driver-api/dpll.rst:483
msgid "dpll device was created"
msgstr ""

#: ../../../driver-api/dpll.rst:484
msgid "``DPLL_CMD_DEVICE_DELETE_NTF``"
msgstr ""

#: ../../../driver-api/dpll.rst:484
msgid "dpll device was deleted"
msgstr ""

#: ../../../driver-api/dpll.rst:485
msgid "``DPLL_CMD_DEVICE_CHANGE_NTF``"
msgstr ""

#: ../../../driver-api/dpll.rst:485
msgid "dpll device has changed"
msgstr ""

#: ../../../driver-api/dpll.rst:486
msgid "``DPLL_CMD_PIN_CREATE_NTF``"
msgstr ""

#: ../../../driver-api/dpll.rst:486
msgid "dpll pin was created"
msgstr ""

#: ../../../driver-api/dpll.rst:487
msgid "``DPLL_CMD_PIN_DELETE_NTF``"
msgstr ""

#: ../../../driver-api/dpll.rst:487
msgid "dpll pin was deleted"
msgstr ""

#: ../../../driver-api/dpll.rst:488
msgid "``DPLL_CMD_PIN_CHANGE_NTF``"
msgstr ""

#: ../../../driver-api/dpll.rst:488
msgid "dpll pin has changed"
msgstr ""

#: ../../../driver-api/dpll.rst:491
msgid ""
"Events format is the same as for the corresponding get command. Format of "
"``DPLL_CMD_DEVICE_`` events is the same as response of "
"``DPLL_CMD_DEVICE_GET``. Format of ``DPLL_CMD_PIN_`` events is same as "
"response of ``DPLL_CMD_PIN_GET``."
msgstr ""

#: ../../../driver-api/dpll.rst:498
msgid "Device driver implementation"
msgstr ""

#: ../../../driver-api/dpll.rst:500
msgid ""
"Device is allocated by dpll_device_get() call. Second call with the same "
"arguments will not create new object but provides pointer to previously "
"created device for given arguments, it also increases refcount of that "
"object. Device is deallocated by dpll_device_put() call, which first "
"decreases the refcount, once refcount is cleared the object is destroyed."
msgstr ""

#: ../../../driver-api/dpll.rst:508
msgid ""
"Device should implement set of operations and register device via "
"dpll_device_register() at which point it becomes available to the users. "
"Multiple driver instances can obtain reference to it with dpll_device_get(), "
"as well as register dpll device with their own ops and priv."
msgstr ""

#: ../../../driver-api/dpll.rst:514
msgid ""
"The pins are allocated separately with dpll_pin_get(), it works similarly to "
"dpll_device_get(). Function first creates object and then for each call with "
"the same arguments only the object refcount increases. Also dpll_pin_put() "
"works similarly to dpll_device_put()."
msgstr ""

#: ../../../driver-api/dpll.rst:519
msgid ""
"A pin can be registered with parent dpll device or parent pin, depending on "
"hardware needs. Each registration requires registerer to provide set of pin "
"callbacks, and private data pointer for calling them:"
msgstr ""

#: ../../../driver-api/dpll.rst:523
msgid "dpll_pin_register() - register pin with a dpll device,"
msgstr ""

#: ../../../driver-api/dpll.rst:524
msgid "dpll_pin_on_pin_register() - register pin with another MUX type pin."
msgstr ""

#: ../../../driver-api/dpll.rst:526
msgid ""
"Notifications of adding or removing dpll devices are created within "
"subsystem itself. Notifications about registering/deregistering pins are "
"also invoked by the subsystem. Notifications about status changes either of "
"dpll device or a pin are invoked in two ways:"
msgstr ""

#: ../../../driver-api/dpll.rst:533
msgid ""
"after successful change was requested on dpll subsystem, the subsystem calls "
"corresponding notification,"
msgstr ""

#: ../../../driver-api/dpll.rst:535
msgid ""
"requested by device driver with dpll_device_change_ntf() or "
"dpll_pin_change_ntf() when driver informs about the status change."
msgstr ""

#: ../../../driver-api/dpll.rst:538
msgid ""
"The device driver using dpll interface is not required to implement all the "
"callback operation. Nevertheless, there are few required to be implemented. "
"Required dpll device level callback operations:"
msgstr ""

#: ../../../driver-api/dpll.rst:543
msgid "``.mode_get``,"
msgstr ""

#: ../../../driver-api/dpll.rst:544
msgid "``.lock_status_get``."
msgstr ""

#: ../../../driver-api/dpll.rst:546
msgid "Required pin level callback operations:"
msgstr ""

#: ../../../driver-api/dpll.rst:548
msgid "``.state_on_dpll_get`` (pins registered with dpll device),"
msgstr ""

#: ../../../driver-api/dpll.rst:549
msgid "``.state_on_pin_get`` (pins registered with parent pin),"
msgstr ""

#: ../../../driver-api/dpll.rst:550
msgid "``.direction_get``."
msgstr ""

#: ../../../driver-api/dpll.rst:552
msgid ""
"Every other operation handler is checked for existence and ``-EOPNOTSUPP`` "
"is returned in case of absence of specific handler."
msgstr ""

#: ../../../driver-api/dpll.rst:555
msgid ""
"The simplest implementation is in the OCP TimeCard driver. The ops "
"structures are defined like this:"
msgstr ""

#: ../../../driver-api/dpll.rst:574
msgid "The registration part is then looks like this part:"
msgstr ""

#: ../../../driver-api/dpll.rst:605
msgid ""
"In the error path we have to rewind every allocation in the reverse order:"
msgstr ""

#: ../../../driver-api/dpll.rst:616
msgid ""
"More complex example can be found in Intel's ICE driver or nVidia's mlx5 "
"driver."
msgstr ""

#: ../../../driver-api/dpll.rst:619
msgid "SyncE enablement"
msgstr ""

#: ../../../driver-api/dpll.rst:620
msgid ""
"For SyncE enablement it is required to allow control over dpll device for a "
"software application which monitors and configures the inputs of dpll device "
"in response to current state of a dpll device and its inputs. In such "
"scenario, dpll device input signal shall be also configurable to drive dpll "
"with signal recovered from the PHY netdevice. This is done by exposing a pin "
"to the netdevice - attaching pin to the netdevice itself with "
"``dpll_netdev_pin_set(struct net_device *dev, struct dpll_pin *dpll_pin)``. "
"Exposed pin id handle ``DPLL_A_PIN_ID`` is then identifiable by the user as "
"it is attached to rtnetlink respond to get ``RTM_NEWLINK`` command in nested "
"attribute ``IFLA_DPLL_PIN``."
msgstr ""
