# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../driver-api/usb/bulk-streams.rst:2
msgid "USB bulk streams"
msgstr ""

#: ../../../driver-api/usb/bulk-streams.rst:5
msgid "Background"
msgstr ""

#: ../../../driver-api/usb/bulk-streams.rst:7
msgid ""
"Bulk endpoint streams were added in the USB 3.0 specification.  Streams "
"allow a device driver to overload a bulk endpoint so that multiple transfers "
"can be queued at once."
msgstr ""

#: ../../../driver-api/usb/bulk-streams.rst:11
msgid ""
"Streams are defined in sections 4.4.6.4 and 8.12.1.4 of the Universal Serial "
"Bus 3.0 specification at https://www.usb.org/developers/docs/  The USB "
"Attached SCSI Protocol, which uses streams to queue multiple SCSI commands, "
"can be found on the T10 website (https://t10.org/)."
msgstr ""

#: ../../../driver-api/usb/bulk-streams.rst:18
msgid "Device-side implications"
msgstr ""

#: ../../../driver-api/usb/bulk-streams.rst:20
msgid ""
"Once a buffer has been queued to a stream ring, the device is notified "
"(through an out-of-band mechanism on another endpoint) that data is ready "
"for that stream ID.  The device then tells the host which \"stream\" it "
"wants to start.  The host can also initiate a transfer on a stream without "
"the device asking, but the device can refuse that transfer.  Devices can "
"switch between streams at any time."
msgstr ""

#: ../../../driver-api/usb/bulk-streams.rst:29
msgid "Driver implications"
msgstr ""

#: ../../../driver-api/usb/bulk-streams.rst:37
msgid ""
"Device drivers will call this API to request that the host controller driver "
"allocate memory so the driver can use up to num_streams stream IDs.  They "
"must pass an array of usb_host_endpoints that need to be setup with similar "
"stream IDs.  This is to ensure that a UASP driver will be able to use the "
"same stream ID for the bulk IN and OUT endpoints used in a Bi-directional "
"command sequence."
msgstr ""

#: ../../../driver-api/usb/bulk-streams.rst:43
msgid ""
"The return value is an error condition (if one of the endpoints doesn't "
"support streams, or the xHCI driver ran out of memory), or the number of "
"streams the host controller allocated for this endpoint.  The xHCI host "
"controller hardware declares how many stream IDs it can support, and each "
"bulk endpoint on a SuperSpeed device will say how many stream IDs it can "
"handle.  Therefore, drivers should be able to deal with being allocated less "
"stream IDs than they requested."
msgstr ""

#: ../../../driver-api/usb/bulk-streams.rst:51
msgid ""
"Do NOT call this function if you have URBs enqueued for any of the endpoints "
"passed in as arguments.  Do not call this function to request less than two "
"streams."
msgstr ""

#: ../../../driver-api/usb/bulk-streams.rst:55
msgid ""
"Drivers will only be allowed to call this API once for the same endpoint "
"without calling usb_free_streams().  This is a simplification for the xHCI "
"host controller driver, and may change in the future."
msgstr ""

#: ../../../driver-api/usb/bulk-streams.rst:61
msgid "Picking new Stream IDs to use"
msgstr ""

#: ../../../driver-api/usb/bulk-streams.rst:63
msgid ""
"Stream ID 0 is reserved, and should not be used to communicate with "
"devices.  If usb_alloc_streams() returns with a value of N, you may use "
"streams 1 though N. To queue an URB for a specific stream, set the urb-"
">stream_id value.  If the endpoint does not support streams, an error will "
"be returned."
msgstr ""

#: ../../../driver-api/usb/bulk-streams.rst:68
msgid ""
"Note that new API to choose the next stream ID will have to be added if the "
"xHCI driver supports secondary stream IDs."
msgstr ""

#: ../../../driver-api/usb/bulk-streams.rst:73
msgid "Clean up"
msgstr ""

#: ../../../driver-api/usb/bulk-streams.rst:75
msgid ""
"If a driver wishes to stop using streams to communicate with the device, it "
"should call::"
msgstr ""

#: ../../../driver-api/usb/bulk-streams.rst:82
msgid ""
"All stream IDs will be deallocated when the driver releases the interface, "
"to ensure that drivers that don't support streams will be able to use the "
"endpoint."
msgstr ""
