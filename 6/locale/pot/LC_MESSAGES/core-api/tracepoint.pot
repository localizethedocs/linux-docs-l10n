# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-28 09:03+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../core-api/tracepoint.rst:3
msgid "The Linux Kernel Tracepoint API"
msgstr ""

#: ../../../core-api/tracepoint.rst:0
msgid "Author"
msgstr ""

#: ../../../core-api/tracepoint.rst:5
msgid "Jason Baron"
msgstr ""

#: ../../../core-api/tracepoint.rst:6
msgid "William Cohen"
msgstr ""

#: ../../../core-api/tracepoint.rst:9
msgid "Introduction"
msgstr ""

#: ../../../core-api/tracepoint.rst:11
msgid ""
"Tracepoints are static probe points that are located in strategic points "
"throughout the kernel. 'Probes' register/unregister with tracepoints via a "
"callback mechanism. The 'probes' are strictly typed functions that are "
"passed a unique set of parameters defined by each tracepoint."
msgstr ""

#: ../../../core-api/tracepoint.rst:16
msgid ""
"From this simple callback mechanism, 'probes' can be used to profile, debug, "
"and understand kernel behavior. There are a number of tools that provide a "
"framework for using 'probes'. These tools include Systemtap, ftrace, and "
"LTTng."
msgstr ""

#: ../../../core-api/tracepoint.rst:21
msgid ""
"Tracepoints are defined in a number of header files via various macros. "
"Thus, the purpose of this document is to provide a clear accounting of the "
"available tracepoints. The intention is to understand not only what "
"tracepoints are available but also to understand where future tracepoints "
"might be added."
msgstr ""

#: ../../../core-api/tracepoint.rst:27
msgid ""
"The API presented has functions of the form: ``trace_tracepointname(function "
"parameters)``. These are the tracepoints callbacks that are found throughout "
"the code. Registering and unregistering probes with these callback sites is "
"covered in the ``Documentation/trace/*`` directory."
msgstr ""

#: ../../../core-api/tracepoint.rst:34
msgid "IRQ"
msgstr ""

#: ../../../core-api/tracepoint:36: include/trace/events/irq.h:43
msgid "called immediately before the irq action handler"
msgstr ""

#: ../../../core-api/tracepoint:36: include/trace/events/irq.h:47
#: include/trace/events/irq.h:77 include/trace/events/irq.h:126
#: include/trace/events/irq.h:140 include/trace/events/irq.h:154
#: include/trace/events/irq.h:187 include/trace/events/irq.h:201
#: ../../../core-api/tracepoint:42: include/trace/events/signal.h:41
#: include/trace/events/signal.h:87 ../../../core-api/tracepoint:48:
#: include/trace/events/block.h:53 include/trace/events/block.h:66
#: include/trace/events/block.h:80 include/trace/events/block.h:160
#: include/trace/events/block.h:179 include/trace/events/block.h:234
#: include/trace/events/block.h:250 include/trace/events/block.h:264
#: include/trace/events/block.h:278 include/trace/events/block.h:291
#: include/trace/events/block.h:304 include/trace/events/block.h:368
#: include/trace/events/block.h:379 include/trace/events/block.h:390
#: include/trace/events/block.h:401 include/trace/events/block.h:412
#: include/trace/events/block.h:423 include/trace/events/block.h:467
#: include/trace/events/block.h:483 include/trace/events/block.h:522
#: include/trace/events/block.h:563 include/trace/events/block.h:607
#: ../../../core-api/tracepoint:54: include/trace/events/workqueue.h:18
#: include/trace/events/workqueue.h:56 include/trace/events/workqueue.h:83
#: include/trace/events/workqueue.h:108
msgid "**Parameters**"
msgstr ""

#: ../../../core-api/tracepoint:36: include/trace/events/irq.h:49
#: include/trace/events/irq.h:79
msgid "``int irq``"
msgstr ""

#: ../../../core-api/tracepoint:36: include/trace/events/irq.h:44
#: include/trace/events/irq.h:74
msgid "irq number"
msgstr ""

#: ../../../core-api/tracepoint:36: include/trace/events/irq.h:46
#: include/trace/events/irq.h:76
msgid "``struct irqaction *action``"
msgstr ""

#: ../../../core-api/tracepoint:36: include/trace/events/irq.h:45
#: include/trace/events/irq.h:75
msgid "pointer to struct irqaction"
msgstr ""

#: ../../../core-api/tracepoint:36: include/trace/events/irq.h:47
#: include/trace/events/irq.h:78 include/trace/events/irq.h:125
#: include/trace/events/irq.h:139 include/trace/events/irq.h:153
#: include/trace/events/irq.h:187 include/trace/events/irq.h:201
#: ../../../core-api/tracepoint:42: include/trace/events/signal.h:44
#: include/trace/events/signal.h:88 ../../../core-api/tracepoint:48:
#: include/trace/events/block.h:52 include/trace/events/block.h:65
#: include/trace/events/block.h:79 include/trace/events/block.h:161
#: include/trace/events/block.h:180 include/trace/events/block.h:233
#: include/trace/events/block.h:249 include/trace/events/block.h:263
#: include/trace/events/block.h:277 include/trace/events/block.h:290
#: include/trace/events/block.h:304 include/trace/events/block.h:367
#: include/trace/events/block.h:378 include/trace/events/block.h:389
#: include/trace/events/block.h:400 include/trace/events/block.h:411
#: include/trace/events/block.h:422 include/trace/events/block.h:468
#: include/trace/events/block.h:483 include/trace/events/block.h:523
#: include/trace/events/block.h:564 include/trace/events/block.h:607
#: ../../../core-api/tracepoint:54: include/trace/events/workqueue.h:19
#: include/trace/events/workqueue.h:55 include/trace/events/workqueue.h:82
#: include/trace/events/workqueue.h:108
msgid "**Description**"
msgstr ""

#: ../../../core-api/tracepoint:36: include/trace/events/irq.h:46
msgid ""
"The struct irqaction pointed to by **action** contains various information "
"about the handler, including the device name, **action->name**, and the "
"device id, **action->dev_id**. When used in conjunction with the "
"irq_handler_exit tracepoint, we can figure out irq handler latencies."
msgstr ""

#: ../../../core-api/tracepoint:36: include/trace/events/irq.h:73
msgid "called immediately after the irq action handler returns"
msgstr ""

#: ../../../core-api/tracepoint:36: include/trace/events/irq.h:77
msgid "``int ret``"
msgstr ""

#: ../../../core-api/tracepoint:36: include/trace/events/irq.h:76
msgid "return value"
msgstr ""

#: ../../../core-api/tracepoint:36: include/trace/events/irq.h:77
msgid ""
"If the **ret** value is set to IRQ_HANDLED, then we know that the "
"corresponding **action->handler** successfully handled this irq. Otherwise, "
"the irq might be a shared irq line, or the irq was not handled successfully. "
"Can be used in conjunction with the irq_handler_entry to understand irq "
"handler latencies."
msgstr ""

#: ../../../core-api/tracepoint:36: include/trace/events/irq.h:122
msgid "called immediately before the softirq handler"
msgstr ""

#: ../../../core-api/tracepoint:36: include/trace/events/irq.h:128
#: include/trace/events/irq.h:142 include/trace/events/irq.h:156
msgid "``unsigned int vec_nr``"
msgstr ""

#: ../../../core-api/tracepoint:36: include/trace/events/irq.h:123
#: include/trace/events/irq.h:137 include/trace/events/irq.h:151
msgid "softirq vector number"
msgstr ""

#: ../../../core-api/tracepoint:36: include/trace/events/irq.h:124
msgid ""
"When used in combination with the softirq_exit tracepoint we can determine "
"the softirq handler routine."
msgstr ""

#: ../../../core-api/tracepoint:36: include/trace/events/irq.h:136
msgid "called immediately after the softirq handler returns"
msgstr ""

#: ../../../core-api/tracepoint:36: include/trace/events/irq.h:138
msgid ""
"When used in combination with the softirq_entry tracepoint we can determine "
"the softirq handler routine."
msgstr ""

#: ../../../core-api/tracepoint:36: include/trace/events/irq.h:150
msgid "called immediately when a softirq is raised"
msgstr ""

#: ../../../core-api/tracepoint:36: include/trace/events/irq.h:152
msgid ""
"When used in combination with the softirq_entry tracepoint we can determine "
"the softirq raise to run latency."
msgstr ""

#: ../../../core-api/tracepoint:36: include/trace/events/irq.h:183
msgid "called immediately before the tasklet is run"
msgstr ""

#: ../../../core-api/tracepoint:36: include/trace/events/irq.h:189
#: include/trace/events/irq.h:203
msgid "``struct tasklet_struct *t``"
msgstr ""

#: ../../../core-api/tracepoint:36: include/trace/events/irq.h:184
#: include/trace/events/irq.h:198
msgid "tasklet pointer"
msgstr ""

#: ../../../core-api/tracepoint:36: include/trace/events/irq.h:186
#: include/trace/events/irq.h:200
msgid "``void *func``"
msgstr ""

#: ../../../core-api/tracepoint:36: include/trace/events/irq.h:185
#: include/trace/events/irq.h:199
msgid "tasklet callback or function being run"
msgstr ""

#: ../../../core-api/tracepoint:36: include/trace/events/irq.h:186
#: include/trace/events/irq.h:200
msgid "Used to find individual tasklet execution time"
msgstr ""

#: ../../../core-api/tracepoint:36: include/trace/events/irq.h:197
msgid "called immediately after the tasklet is run"
msgstr ""

#: ../../../core-api/tracepoint.rst:40
msgid "SIGNAL"
msgstr ""

#: ../../../core-api/tracepoint:42: include/trace/events/signal.h:37
msgid "called when a signal is generated"
msgstr ""

#: ../../../core-api/tracepoint:42: include/trace/events/signal.h:43
#: include/trace/events/signal.h:89
msgid "``int sig``"
msgstr ""

#: ../../../core-api/tracepoint:42: include/trace/events/signal.h:38
#: include/trace/events/signal.h:84
msgid "signal number"
msgstr ""

#: ../../../core-api/tracepoint:42: include/trace/events/signal.h:40
#: include/trace/events/signal.h:86
msgid "``struct kernel_siginfo *info``"
msgstr ""

#: ../../../core-api/tracepoint:42: include/trace/events/signal.h:39
#: include/trace/events/signal.h:85
msgid "pointer to struct siginfo"
msgstr ""

#: ../../../core-api/tracepoint:42: include/trace/events/signal.h:41
msgid "``struct task_struct *task``"
msgstr ""

#: ../../../core-api/tracepoint:42: include/trace/events/signal.h:40
msgid "pointer to struct task_struct"
msgstr ""

#: ../../../core-api/tracepoint:42: include/trace/events/signal.h:42
msgid "``int group``"
msgstr ""

#: ../../../core-api/tracepoint:42: include/trace/events/signal.h:41
msgid "shared or private"
msgstr ""

#: ../../../core-api/tracepoint:42: include/trace/events/signal.h:43
msgid "``int result``"
msgstr ""

#: ../../../core-api/tracepoint:42: include/trace/events/signal.h:42
msgid "TRACE_SIGNAL_*"
msgstr ""

#: ../../../core-api/tracepoint:42: include/trace/events/signal.h:43
msgid ""
"Current process sends a 'sig' signal to 'task' process with 'info' siginfo. "
"If 'info' is SEND_SIG_NOINFO or SEND_SIG_PRIV, 'info' is not a pointer and "
"you can't access its field. Instead, SEND_SIG_NOINFO means that si_code is "
"SI_USER, and SEND_SIG_PRIV means that si_code is SI_KERNEL."
msgstr ""

#: ../../../core-api/tracepoint:42: include/trace/events/signal.h:83
msgid "called when a signal is delivered"
msgstr ""

#: ../../../core-api/tracepoint:42: include/trace/events/signal.h:87
msgid "``struct k_sigaction *ka``"
msgstr ""

#: ../../../core-api/tracepoint:42: include/trace/events/signal.h:86
msgid "pointer to struct k_sigaction"
msgstr ""

#: ../../../core-api/tracepoint:42: include/trace/events/signal.h:87
msgid ""
"A 'sig' signal is delivered to current process with 'info' siginfo, and it "
"will be handled by 'ka'. ka->sa.sa_handler can be SIG_IGN or SIG_DFL. Note "
"that some signals reported by signal_generate tracepoint can be lost, "
"ignored or modified (by debugger) before hitting this tracepoint. This "
"means, this can show which signals are actually delivered, but matching "
"generated signals and delivered signals may not be correct."
msgstr ""

#: ../../../core-api/tracepoint.rst:46
msgid "Block IO"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:49
msgid "mark a buffer accessed"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:55
#: include/trace/events/block.h:68
msgid "``struct buffer_head *bh``"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:50
msgid "buffer_head being touched"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:51
msgid "Called from touch_buffer()."
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:62
msgid "mark a buffer dirty"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:63
msgid "buffer_head being dirtied"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:64
msgid "Called from mark_buffer_dirty()."
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:76
msgid "place block IO request back on a queue"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:82
#: include/trace/events/block.h:162 include/trace/events/block.h:181
#: include/trace/events/block.h:236 include/trace/events/block.h:252
#: include/trace/events/block.h:266 include/trace/events/block.h:280
#: include/trace/events/block.h:293 include/trace/events/block.h:414
#: include/trace/events/block.h:565
msgid "``struct request *rq``"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:77
#: include/trace/events/block.h:231 include/trace/events/block.h:247
#: include/trace/events/block.h:261 include/trace/events/block.h:275
#: include/trace/events/block.h:288 include/trace/events/block.h:560
msgid "block IO operation request"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:78
msgid ""
"The block operation request **rq** is being placed back into queue **q**.  "
"For some reason the request was not completed and needs to be put back in "
"the queue."
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:156
msgid "block IO operation completed by device driver"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:157
#: include/trace/events/block.h:176
msgid "block operations request"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:159
#: include/trace/events/block.h:178
msgid "``blk_status_t error``"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:158
#: include/trace/events/block.h:177
msgid "status code"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:160
#: include/trace/events/block.h:179
msgid "``unsigned int nr_bytes``"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:159
#: include/trace/events/block.h:178
msgid "number of completed bytes"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:160
msgid ""
"The block_rq_complete tracepoint event indicates that some portion of "
"operation request has been completed by the device driver.  If the **rq-"
">bio** is ``NULL``, then there is absolutely no additional work to do for "
"the request. If **rq->bio** is non-NULL then there is additional work "
"required to complete the request."
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:175
msgid "block IO operation error reported by device driver"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:179
msgid ""
"The block_rq_error tracepoint event indicates that some portion of operation "
"request has failed as reported by the device driver."
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:230
msgid "insert block operation request into queue"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:232
msgid ""
"Called immediately before block operation request **rq** is inserted into "
"queue **q**.  The fields in the operation request **rq** struct can be "
"examined to determine which device and sectors the pending operation would "
"access."
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:246
msgid "issue pending block IO request operation to device driver"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:248
msgid ""
"Called when block operation request **rq** from queue **q** is sent to a "
"device driver for processing."
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:260
msgid "merge request with another one in the elevator"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:262
msgid ""
"Called when block operation request **rq** from queue **q** is merged to "
"another request queued in the elevator."
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:274
msgid "insert a request for execution"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:276
msgid "Called when block operation request **rq** is queued for execution"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:287
msgid "block IO operation request completed"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:289
msgid "Called when block operation request **rq** is completed"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:300
msgid "completed all work on the block operation"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:306
#: include/trace/events/block.h:425 include/trace/events/block.h:469
msgid "``struct request_queue *q``"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:301
msgid "queue holding the block operation"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:303
#: include/trace/events/block.h:370 include/trace/events/block.h:381
#: include/trace/events/block.h:392 include/trace/events/block.h:403
#: include/trace/events/block.h:485 include/trace/events/block.h:524
#: include/trace/events/block.h:609
msgid "``struct bio *bio``"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:302
msgid "block operation completed"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:303
msgid ""
"This tracepoint indicates there is no further work to do on this block IO "
"operation **bio**."
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:364
msgid "merging block operation to the end of an existing operation"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:365
#: include/trace/events/block.h:376
msgid "new block operation to merge"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:366
msgid "Merging block request **bio** to the end of an existing block request."
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:375
msgid "merging block operation to the beginning of an existing operation"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:377
msgid ""
"Merging block IO operation **bio** to the beginning of an existing block "
"request."
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:386
msgid "putting new block IO operation in queue"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:387
msgid "new block operation"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:388
msgid "About to place the block IO operation **bio** into queue **q**."
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:397
msgid "get a free request entry in queue for block IO operations"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:398
msgid "pending block IO operation (can be ``NULL``)"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:399
msgid ""
"A request struct has been allocated to handle the block IO operation **bio**."
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:408
msgid "update bio sector after zone append"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:409
msgid "the completed request that sets the bio sector"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:410
msgid ""
"Update the bio's bi_sector after a zone append command has been completed."
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:419
msgid "keep operations requests in request queue"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:420
msgid "request queue to plug"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:421
msgid ""
"Plug the request queue **q**.  Do not allow block operation requests to be "
"sent to the device driver. Instead, accumulate requests in the queue to "
"improve throughput performance of the block device."
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:463
msgid "release of operations requests in request queue"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:464
msgid "request queue to unplug"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:466
msgid "``unsigned int depth``"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:465
msgid "number of requests just added to the queue"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:467
msgid "``bool explicit``"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:466
msgid "whether this was an explicit unplug, or one from schedule()"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:467
msgid ""
"Unplug request queue **q** because device driver is scheduled to work on "
"elements in the request queue."
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:479
msgid "split a single bio struct into two bio structs"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:480
msgid "block operation being split"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:482
msgid "``unsigned int new_sector``"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:481
msgid "The starting sector for the new bio"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:482
msgid ""
"The bio request **bio** needs to be split into two bio requests.  The newly "
"created **bio** request starts at **new_sector**. This split may be required "
"due to hardware limitations such as operation crossing device boundaries in "
"a RAID system."
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:518
msgid "map request for a logical device to the raw device"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:519
msgid "revised operation"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:521
#: include/trace/events/block.h:562
msgid "``dev_t dev``"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:520
msgid "original device for the operation"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:522
#: include/trace/events/block.h:563
msgid "``sector_t from``"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:521
#: include/trace/events/block.h:562
msgid "original sector for the operation"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:522
msgid ""
"An operation for a logical device has been mapped to the raw block device."
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:559
msgid "map request for a block operation request"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:561
msgid "device for the operation"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:563
msgid ""
"The block operation request **rq** in **q** has been remapped.  The block "
"operation request **rq** holds the current information and **from** hold the "
"original sector."
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:603
msgid "Execute a zone management operation on a range of zones"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:604
msgid "The block IO operation sent down to the device"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:606
msgid "``sector_t nr_sectors``"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:605
msgid "The number of sectors affected by this operation"
msgstr ""

#: ../../../core-api/tracepoint:48: include/trace/events/block.h:606
msgid ""
"Execute a zone management operation on a specified range of zones. This "
"range is encoded in ``nr_sectors``, which has to be a multiple of the zone "
"size."
msgstr ""

#: ../../../core-api/tracepoint.rst:52
msgid "Workqueue"
msgstr ""

#: ../../../core-api/tracepoint:54: include/trace/events/workqueue.h:14
msgid "called when a work gets queued"
msgstr ""

#: ../../../core-api/tracepoint:54: include/trace/events/workqueue.h:20
msgid "``int req_cpu``"
msgstr ""

#: ../../../core-api/tracepoint:54: include/trace/events/workqueue.h:15
msgid "the requested cpu"
msgstr ""

#: ../../../core-api/tracepoint:54: include/trace/events/workqueue.h:17
msgid "``struct pool_workqueue *pwq``"
msgstr ""

#: ../../../core-api/tracepoint:54: include/trace/events/workqueue.h:16
msgid "pointer to struct pool_workqueue"
msgstr ""

#: ../../../core-api/tracepoint:54: include/trace/events/workqueue.h:18
#: include/trace/events/workqueue.h:58 include/trace/events/workqueue.h:85
#: include/trace/events/workqueue.h:110
msgid "``struct work_struct *work``"
msgstr ""

#: ../../../core-api/tracepoint:54: include/trace/events/workqueue.h:17
#: include/trace/events/workqueue.h:53 include/trace/events/workqueue.h:80
#: include/trace/events/workqueue.h:105
msgid "pointer to struct work_struct"
msgstr ""

#: ../../../core-api/tracepoint:54: include/trace/events/workqueue.h:18
msgid ""
"This event occurs when a work is queued immediately or once a delayed work "
"is actually queued on a workqueue (ie: once the delay has been reached)."
msgstr ""

#: ../../../core-api/tracepoint:54: include/trace/events/workqueue.h:52
msgid "called when a work gets activated"
msgstr ""

#: ../../../core-api/tracepoint:54: include/trace/events/workqueue.h:54
msgid ""
"This event occurs when a queued work is put on the active queue, which "
"happens immediately after queueing unless **max_active** limit is reached."
msgstr ""

#: ../../../core-api/tracepoint:54: include/trace/events/workqueue.h:79
msgid "called immediately before the workqueue callback"
msgstr ""

#: ../../../core-api/tracepoint:54: include/trace/events/workqueue.h:81
#: include/trace/events/workqueue.h:107
msgid "Allows to track workqueue execution."
msgstr ""

#: ../../../core-api/tracepoint:54: include/trace/events/workqueue.h:104
msgid "called immediately after the workqueue callback"
msgstr ""

#: ../../../core-api/tracepoint:54: include/trace/events/workqueue.h:107
msgid "``work_func_t function``"
msgstr ""

#: ../../../core-api/tracepoint:54: include/trace/events/workqueue.h:106
msgid "pointer to worker function"
msgstr ""
