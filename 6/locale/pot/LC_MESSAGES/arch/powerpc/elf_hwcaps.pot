# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-30 08:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../arch/powerpc/elf_hwcaps.rst:5
msgid "POWERPC ELF HWCAPs"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:7
msgid ""
"This document describes the usage and semantics of the powerpc ELF HWCAPs."
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:11
msgid "1. Introduction"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:13
msgid ""
"Some hardware or software features are only available on some CPU "
"implementations, and/or with certain kernel configurations, but have no "
"other discovery mechanism available to userspace code. The kernel exposes "
"the presence of these features to userspace through a set of flags called "
"HWCAPs, exposed in the auxiliary vector."
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:19
msgid ""
"Userspace software can test for features by acquiring the AT_HWCAP or "
"AT_HWCAP2 entry of the auxiliary vector, and testing whether the relevant "
"flags are set, e.g.::"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:32
msgid ""
"Where software relies on a feature described by a HWCAP, it should check the "
"relevant HWCAP flag to verify that the feature is present before attempting "
"to make use of the feature."
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:36
msgid ""
"HWCAP is the preferred method to test for the presence of a feature rather "
"than probing through other means, which may not be reliable or may cause "
"unpredictable behaviour."
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:40
msgid ""
"Software that targets a particular platform does not necessarily have to "
"test for required or implied features. For example if the program requires "
"FPU, VMX, VSX, it is not necessary to test those HWCAPs, and it may be "
"impossible to do so if the compiler generates code requiring those features."
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:46
msgid "2. Facilities"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:48
msgid ""
"The Power ISA uses the term \"facility\" to describe a class of "
"instructions, registers, interrupts, etc. The presence or absence of a "
"facility indicates whether this class is available to be used, but the "
"specifics depend on the ISA version. For example, if the VSX facility is "
"available, the VSX instructions that can be used differ between the v3.0B "
"and v3.1B ISA versions."
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:56
msgid "3. Categories"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:58
msgid ""
"The Power ISA before v3.0 uses the term \"category\" to describe certain "
"classes of instructions and operating modes which may be optional or "
"mutually exclusive, the exact meaning of the HWCAP flag may depend on "
"context, e.g., the presence of the BOOKE feature implies that the server "
"category is not implemented."
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:65
msgid "4. HWCAP allocation"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:67
msgid ""
"HWCAPs are allocated as described in Power Architecture 64-Bit ELF V2 ABI "
"Specification (which will be reflected in the kernel's uapi headers)."
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:71
msgid "5. The HWCAPs exposed in AT_HWCAP"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:73
msgid "PPC_FEATURE_32"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:74
msgid "32-bit CPU"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:76
msgid "PPC_FEATURE_64"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:77
msgid "64-bit CPU (userspace may be running in 32-bit mode)."
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:79
msgid "PPC_FEATURE_601_INSTR"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:80
msgid ""
"The processor is PowerPC 601. Unused in the kernel since f0ed73f3fa2c "
"(\"powerpc: Remove PowerPC 601\")"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:83
msgid "PPC_FEATURE_HAS_ALTIVEC"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:84
msgid "Vector (aka Altivec, VMX) facility is available."
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:86
msgid "PPC_FEATURE_HAS_FPU"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:87
msgid "Floating point facility is available."
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:89
msgid "PPC_FEATURE_HAS_MMU"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:90
msgid "Memory management unit is present and enabled."
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:92
msgid "PPC_FEATURE_HAS_4xxMAC"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:93
msgid ""
"The processor is 40x or 44x family. Unused in the kernel since 732b32daef80 "
"(\"powerpc: Remove core support for 40x\")"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:96
msgid "PPC_FEATURE_UNIFIED_CACHE"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:97
msgid ""
"The processor has a unified L1 cache for instructions and data, as found in "
"NXP e200. Unused in the kernel since 39c8bf2b3cc1 (\"powerpc: Retire e200 "
"core (mpc555x processor)\")"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:101
msgid "PPC_FEATURE_HAS_SPE"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:102
msgid "Signal Processing Engine facility is available."
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:104
msgid "PPC_FEATURE_HAS_EFP_SINGLE"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:105
msgid "Embedded Floating Point single precision operations are available."
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:107
msgid "PPC_FEATURE_HAS_EFP_DOUBLE"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:108
msgid "Embedded Floating Point double precision operations are available."
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:110
msgid "PPC_FEATURE_NO_TB"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:111
msgid ""
"The timebase facility (mftb instruction) is not available. This is a 601 "
"specific HWCAP, so if it is known that the processor running is not a 601, "
"via other HWCAPs or other means, it is not required to test this bit before "
"using the timebase. Unused in the kernel since f0ed73f3fa2c (\"powerpc: "
"Remove PowerPC 601\")"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:117
msgid "PPC_FEATURE_POWER4"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:118
msgid ""
"The processor is POWER4 or PPC970/FX/MP. POWER4 support dropped from the "
"kernel since 471d7ff8b51b (\"powerpc/64s: Remove POWER4 support\")"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:121
msgid "PPC_FEATURE_POWER5"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:122
msgid "The processor is POWER5."
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:124
msgid "PPC_FEATURE_POWER5_PLUS"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:125
msgid "The processor is POWER5+."
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:127
msgid "PPC_FEATURE_CELL"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:128
msgid "The processor is Cell."
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:130
msgid "PPC_FEATURE_BOOKE"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:131
msgid ""
"The processor implements the embedded category (\"BookE\") architecture."
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:133
msgid "PPC_FEATURE_SMT"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:134
msgid "The processor implements SMT."
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:136
msgid "PPC_FEATURE_ICACHE_SNOOP"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:137
msgid ""
"The processor icache is coherent with the dcache, and instruction storage "
"can be made consistent with data storage for the purpose of executing "
"instructions with the sequence (as described in, e.g., POWER9 Processor "
"User's Manual, 4.6.2.2 Instruction Cache Block Invalidate (icbi))::"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:146
msgid "PPC_FEATURE_ARCH_2_05"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:147
msgid ""
"The processor supports the v2.05 userlevel architecture. Processors "
"supporting later architectures DO NOT set this feature."
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:150
msgid "PPC_FEATURE_PA6T"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:151
msgid "The processor is PA6T."
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:153
msgid "PPC_FEATURE_HAS_DFP"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:154
msgid "DFP facility is available."
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:156
msgid "PPC_FEATURE_POWER6_EXT"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:157
msgid "The processor is POWER6."
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:159
msgid "PPC_FEATURE_ARCH_2_06"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:160
msgid ""
"The processor supports the v2.06 userlevel architecture. Processors "
"supporting later architectures also set this feature."
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:163
msgid "PPC_FEATURE_HAS_VSX"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:164
msgid "VSX facility is available."
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:166
msgid "PPC_FEATURE_PSERIES_PERFMON_COMPAT"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:167
msgid "The processor supports architected PMU events in the range 0xE0-0xFF."
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:169
msgid "PPC_FEATURE_TRUE_LE"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:170
msgid "The processor supports true little-endian mode."
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:172
msgid "PPC_FEATURE_PPC_LE"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:173
msgid ""
"The processor supports \"PowerPC Little-Endian\", that uses address munging "
"to make storage access appear to be little-endian, but the data is stored in "
"a different format that is unsuitable to be accessed by other agents not "
"running in this mode."
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:179
msgid "6. The HWCAPs exposed in AT_HWCAP2"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:181
msgid "PPC_FEATURE2_ARCH_2_07"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:182
msgid ""
"The processor supports the v2.07 userlevel architecture. Processors "
"supporting later architectures also set this feature."
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:185
msgid "PPC_FEATURE2_HTM"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:186
msgid "Transactional Memory feature is available."
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:188
msgid "PPC_FEATURE2_DSCR"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:189
msgid "DSCR facility is available."
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:191
msgid "PPC_FEATURE2_EBB"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:192
msgid "EBB facility is available."
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:194
msgid "PPC_FEATURE2_ISEL"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:195
msgid ""
"isel instruction is available. This is superseded by ARCH_2_07 and later."
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:198
msgid "PPC_FEATURE2_TAR"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:199
msgid "TAR facility is available."
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:201
msgid "PPC_FEATURE2_VEC_CRYPTO"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:202
msgid "v2.07 crypto instructions are available."
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:204
msgid "PPC_FEATURE2_HTM_NOSC"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:205
msgid ""
"System calls fail if called in a transactional state, see Documentation/arch/"
"powerpc/syscall64-abi.rst"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:208
msgid "PPC_FEATURE2_ARCH_3_00"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:209
msgid ""
"The processor supports the v3.0B / v3.0C userlevel architecture. Processors "
"supporting later architectures also set this feature."
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:212
msgid "PPC_FEATURE2_HAS_IEEE128"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:213
msgid ""
"IEEE 128-bit binary floating point is supported with VSX quad-precision "
"instructions and data types."
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:216
msgid "PPC_FEATURE2_DARN"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:217
msgid "darn instruction is available."
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:219
msgid "PPC_FEATURE2_SCV"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:220
msgid ""
"The scv 0 instruction may be used for system calls, see Documentation/arch/"
"powerpc/syscall64-abi.rst."
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:223
msgid "PPC_FEATURE2_HTM_NO_SUSPEND"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:224
msgid ""
"A limited Transactional Memory facility that does not support suspend is "
"available, see Documentation/arch/powerpc/transactional_memory.rst."
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:227
msgid "PPC_FEATURE2_ARCH_3_1"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:228
msgid ""
"The processor supports the v3.1 userlevel architecture. Processors "
"supporting later architectures also set this feature."
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:231
msgid "PPC_FEATURE2_MMA"
msgstr ""

#: ../../../arch/powerpc/elf_hwcaps.rst:232
msgid "MMA facility is available."
msgstr ""
