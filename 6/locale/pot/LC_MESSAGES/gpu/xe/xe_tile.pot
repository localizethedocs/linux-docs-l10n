# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-28 09:03+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../gpu/xe/xe_tile.rst:5
msgid "Multi-tile Devices"
msgstr ""

#: ../../../gpu/xe/xe_tile:7: drivers/gpu/drm/xe/xe_tile.c:27
msgid ""
"Different vendors use the term \"tile\" a bit differently, but in the Intel "
"world, a 'tile' is pretty close to what most people would think of as being "
"a complete GPU.  When multiple GPUs are placed behind a single PCI device, "
"that's what is referred to as a \"multi-tile device.\"  In such cases, "
"pretty much all hardware is replicated per-tile, although certain "
"responsibilities like PCI communication, reporting of interrupts to the OS, "
"etc. are handled solely by the \"root tile.\"  A multi-tile platform takes "
"care of tying the tiles together in a way such that interrupt notifications "
"from remote tiles are forwarded to the root tile, the per-tile vram is "
"combined into a single address space, etc."
msgstr ""

#: ../../../gpu/xe/xe_tile:7: drivers/gpu/drm/xe/xe_tile.c:38
msgid ""
"In contrast, a \"GT\" (which officially stands for \"Graphics Technology\") "
"is the subset of a GPU/tile that is responsible for implementing graphics "
"and/or media operations.  The GT is where a lot of the driver implementation "
"happens since it's where the hardware engines, the execution units, and the "
"GuC all reside."
msgstr ""

#: ../../../gpu/xe/xe_tile:7: drivers/gpu/drm/xe/xe_tile.c:44
msgid ""
"Historically most Intel devices were single-tile devices that contained a "
"single GT.  PVC is an example of an Intel platform built on a multi-tile "
"design (i.e., multiple GPUs behind a single PCI device); each PVC tile only "
"has a single GT.  In contrast, platforms like MTL that have separate chips "
"for render and media IP are still only a single logical GPU, but the "
"graphics and media IP blocks are each exposed as a separate GT within that "
"single GPU.  This is important from a software perspective because multi-GT "
"platforms like MTL only replicate a subset of the GPU hardware and behave "
"differently than multi-tile platforms like PVC where nearly everything is "
"replicated."
msgstr ""

#: ../../../gpu/xe/xe_tile:7: drivers/gpu/drm/xe/xe_tile.c:55
msgid "Per-tile functionality (shared by all GTs within the tile):"
msgstr ""

#: ../../../gpu/xe/xe_tile:7: drivers/gpu/drm/xe/xe_tile.c:56
msgid ""
"Complete 4MB MMIO space (containing SGunit/SoC registers, GT registers, "
"display registers, etc.)"
msgstr ""

#: ../../../gpu/xe/xe_tile:7: drivers/gpu/drm/xe/xe_tile.c:58
msgid "Global GTT"
msgstr ""

#: ../../../gpu/xe/xe_tile:7: drivers/gpu/drm/xe/xe_tile.c:59
msgid "VRAM (if discrete)"
msgstr ""

#: ../../../gpu/xe/xe_tile:7: drivers/gpu/drm/xe/xe_tile.c:60
msgid "Interrupt flows"
msgstr ""

#: ../../../gpu/xe/xe_tile:7: drivers/gpu/drm/xe/xe_tile.c:61
msgid "Migration context"
msgstr ""

#: ../../../gpu/xe/xe_tile:7: drivers/gpu/drm/xe/xe_tile.c:62
msgid "kernel batchbuffer pool"
msgstr ""

#: ../../../gpu/xe/xe_tile:7: drivers/gpu/drm/xe/xe_tile.c:63
msgid "Primary GT"
msgstr ""

#: ../../../gpu/xe/xe_tile:7: drivers/gpu/drm/xe/xe_tile.c:64
msgid "Media GT (if media version >= 13)"
msgstr ""

#: ../../../gpu/xe/xe_tile:7: drivers/gpu/drm/xe/xe_tile.c:66
msgid "Per-GT functionality:"
msgstr ""

#: ../../../gpu/xe/xe_tile:7: drivers/gpu/drm/xe/xe_tile.c:67
msgid "GuC"
msgstr ""

#: ../../../gpu/xe/xe_tile:7: drivers/gpu/drm/xe/xe_tile.c:68
msgid "Hardware engines"
msgstr ""

#: ../../../gpu/xe/xe_tile:7: drivers/gpu/drm/xe/xe_tile.c:69
msgid "Programmable hardware units (subslices, EUs)"
msgstr ""

#: ../../../gpu/xe/xe_tile:7: drivers/gpu/drm/xe/xe_tile.c:70
msgid ""
"GSI subset of registers (multiple copies of these registers reside within "
"the complete MMIO space provided by the tile, but at different offsets --- 0 "
"for render, 0x380000 for media)"
msgstr ""

#: ../../../gpu/xe/xe_tile:7: drivers/gpu/drm/xe/xe_tile.c:73
msgid "Multicast register steering"
msgstr ""

#: ../../../gpu/xe/xe_tile:7: drivers/gpu/drm/xe/xe_tile.c:74
msgid "TLBs to cache page table translations"
msgstr ""

#: ../../../gpu/xe/xe_tile:7: drivers/gpu/drm/xe/xe_tile.c:75
msgid "Reset capability"
msgstr ""

#: ../../../gpu/xe/xe_tile:7: drivers/gpu/drm/xe/xe_tile.c:76
msgid "Low-level power management (e.g., C6)"
msgstr ""

#: ../../../gpu/xe/xe_tile:7: drivers/gpu/drm/xe/xe_tile.c:77
msgid "Clock frequency"
msgstr ""

#: ../../../gpu/xe/xe_tile:7: drivers/gpu/drm/xe/xe_tile.c:78
msgid "MOCS and PAT programming"
msgstr ""

#: ../../../gpu/xe/xe_tile.rst:11
msgid "Internal API"
msgstr ""

#: ../../../gpu/xe/xe_tile:13: drivers/gpu/drm/xe/xe_tile.c:84
msgid "Perform per-tile memory allocation"
msgstr ""

#: ../../../gpu/xe/xe_tile:13: drivers/gpu/drm/xe/xe_tile.c:88
#: drivers/gpu/drm/xe/xe_tile.c:110 drivers/gpu/drm/xe/xe_tile.c:135
#: drivers/gpu/drm/xe/xe_tile.c:167
msgid "**Parameters**"
msgstr ""

#: ../../../gpu/xe/xe_tile:13: drivers/gpu/drm/xe/xe_tile.c:90
#: drivers/gpu/drm/xe/xe_tile.c:112 drivers/gpu/drm/xe/xe_tile.c:137
#: drivers/gpu/drm/xe/xe_tile.c:169
msgid "``struct xe_tile *tile``"
msgstr ""

#: ../../../gpu/xe/xe_tile:13: drivers/gpu/drm/xe/xe_tile.c:85
#: drivers/gpu/drm/xe/xe_tile.c:107
msgid "Tile to perform allocations for"
msgstr ""

#: ../../../gpu/xe/xe_tile:13: drivers/gpu/drm/xe/xe_tile.c:87
#: drivers/gpu/drm/xe/xe_tile.c:109 drivers/gpu/drm/xe/xe_tile.c:136
#: drivers/gpu/drm/xe/xe_tile.c:166
msgid "**Description**"
msgstr ""

#: ../../../gpu/xe/xe_tile:13: drivers/gpu/drm/xe/xe_tile.c:86
msgid ""
"Allocates various per-tile data structures using DRM-managed allocations. "
"Does not touch the hardware."
msgstr ""

#: ../../../gpu/xe/xe_tile:13: drivers/gpu/drm/xe/xe_tile.c:89
#: drivers/gpu/drm/xe/xe_tile.c:111
msgid "Returns -ENOMEM if allocations fail, otherwise 0."
msgstr ""

#: ../../../gpu/xe/xe_tile:13: drivers/gpu/drm/xe/xe_tile.c:106
msgid "Perform per-tile VRAM structs allocation"
msgstr ""

#: ../../../gpu/xe/xe_tile:13: drivers/gpu/drm/xe/xe_tile.c:108
msgid ""
"Allocates VRAM per-tile data structures using DRM-managed allocations. Does "
"not touch the hardware."
msgstr ""

#: ../../../gpu/xe/xe_tile:13: drivers/gpu/drm/xe/xe_tile.c:131
msgid "Initialize the tile and primary GT"
msgstr ""

#: ../../../gpu/xe/xe_tile:13: drivers/gpu/drm/xe/xe_tile.c:132
msgid "Tile to initialize"
msgstr ""

#: ../../../gpu/xe/xe_tile:13: drivers/gpu/drm/xe/xe_tile.c:134
msgid "``struct xe_device *xe``"
msgstr ""

#: ../../../gpu/xe/xe_tile:13: drivers/gpu/drm/xe/xe_tile.c:133
msgid "Parent Xe device"
msgstr ""

#: ../../../gpu/xe/xe_tile:13: drivers/gpu/drm/xe/xe_tile.c:135
msgid "``u8 id``"
msgstr ""

#: ../../../gpu/xe/xe_tile:13: drivers/gpu/drm/xe/xe_tile.c:134
msgid "Tile ID"
msgstr ""

#: ../../../gpu/xe/xe_tile:13: drivers/gpu/drm/xe/xe_tile.c:135
msgid ""
"Initializes per-tile resources that don't require any interactions with the "
"hardware or any knowledge about the Graphics/Media IP version."
msgstr ""

#: ../../../gpu/xe/xe_tile:13: drivers/gpu/drm/xe/xe_tile.c:138
#: drivers/gpu/drm/xe/xe_tile.c:173
msgid "**Return**"
msgstr ""

#: ../../../gpu/xe/xe_tile:13: drivers/gpu/drm/xe/xe_tile.c:139
#: drivers/gpu/drm/xe/xe_tile.c:174
msgid "0 on success, negative error code on error."
msgstr ""

#: ../../../gpu/xe/xe_tile:13: drivers/gpu/drm/xe/xe_tile.c:163
msgid "Init tile up to the point where allocations can happen."
msgstr ""

#: ../../../gpu/xe/xe_tile:13: drivers/gpu/drm/xe/xe_tile.c:164
msgid "The tile to initialize."
msgstr ""

#: ../../../gpu/xe/xe_tile:13: drivers/gpu/drm/xe/xe_tile.c:165
msgid ""
"This function prepares the tile to allow memory allocations to VRAM, but is "
"not allowed to allocate memory itself. This state is useful for display "
"readout, because the inherited display framebuffer will otherwise be "
"overwritten as it is usually put at the start of VRAM."
msgstr ""

#: ../../../gpu/xe/xe_tile:13: drivers/gpu/drm/xe/xe_tile.c:170
msgid ""
"Note that since this is tile initialization, it should not perform any GT-"
"specific operations, and thus does not need to hold GT forcewake."
msgstr ""
