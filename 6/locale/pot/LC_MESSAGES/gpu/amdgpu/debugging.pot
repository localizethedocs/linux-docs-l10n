# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-30 08:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../gpu/amdgpu/debugging.rst:3
msgid "GPU Debugging"
msgstr ""

#: ../../../gpu/amdgpu/debugging.rst:6
msgid "General Debugging Options"
msgstr ""

#: ../../../gpu/amdgpu/debugging.rst:8
msgid ""
"The DebugFS section provides documentation on a number files to aid in "
"debugging issues on the GPU."
msgstr ""

#: ../../../gpu/amdgpu/debugging.rst:13
msgid "GPUVM Debugging"
msgstr ""

#: ../../../gpu/amdgpu/debugging.rst:15
msgid ""
"To aid in debugging GPU virtual memory related problems, the driver supports "
"a number of options module parameters:"
msgstr ""

#: ../../../gpu/amdgpu/debugging.rst:18
msgid ""
"`vm_fault_stop` - If non-0, halt the GPU memory controller on a GPU page "
"fault."
msgstr ""

#: ../../../gpu/amdgpu/debugging.rst:20
msgid ""
"`vm_update_mode` - If non-0, use the CPU to update GPU page tables rather "
"than the GPU."
msgstr ""

#: ../../../gpu/amdgpu/debugging.rst:25
msgid "Decoding a GPUVM Page Fault"
msgstr ""

#: ../../../gpu/amdgpu/debugging.rst:27
msgid ""
"If you see a GPU page fault in the kernel log, you can decode it to figure "
"out what is going wrong in your application.  A page fault in your kernel "
"log may look something like this:"
msgstr ""

#: ../../../gpu/amdgpu/debugging.rst:43
msgid ""
"First you have the memory hub, gfxhub and mmhub.  gfxhub is the memory hub "
"used for graphics, compute, and sdma on some chips.  mmhub is the memory hub "
"used for multi-media and sdma on some chips."
msgstr ""

#: ../../../gpu/amdgpu/debugging.rst:47
msgid ""
"Next you have the vmid and pasid.  If the vmid is 0, this fault was likely "
"caused by the kernel driver or firmware.  If the vmid is non-0, it is "
"generally a fault in a user application.  The pasid is used to link a vmid "
"to a system process id.  If the process is active when the fault happens, "
"the process information will be printed."
msgstr ""

#: ../../../gpu/amdgpu/debugging.rst:53
msgid "The GPU virtual address that caused the fault comes next."
msgstr ""

#: ../../../gpu/amdgpu/debugging.rst:55
msgid ""
"The client ID indicates the GPU block that caused the fault. Some common "
"client IDs:"
msgstr ""

#: ../../../gpu/amdgpu/debugging.rst:58
msgid "CB/DB: The color/depth backend of the graphics pipe"
msgstr ""

#: ../../../gpu/amdgpu/debugging.rst:59
msgid "CPF: Command Processor Frontend"
msgstr ""

#: ../../../gpu/amdgpu/debugging.rst:60
msgid "CPC: Command Processor Compute"
msgstr ""

#: ../../../gpu/amdgpu/debugging.rst:61
msgid "CPG: Command Processor Graphics"
msgstr ""

#: ../../../gpu/amdgpu/debugging.rst:62
msgid "TCP/SQC/SQG: Shaders"
msgstr ""

#: ../../../gpu/amdgpu/debugging.rst:63
msgid "SDMA: SDMA engines"
msgstr ""

#: ../../../gpu/amdgpu/debugging.rst:64
msgid "VCN: Video encode/decode engines"
msgstr ""

#: ../../../gpu/amdgpu/debugging.rst:65
msgid "JPEG: JPEG engines"
msgstr ""

#: ../../../gpu/amdgpu/debugging.rst:67
msgid "PERMISSION_FAULTS describe what faults were encountered:"
msgstr ""

#: ../../../gpu/amdgpu/debugging.rst:69
msgid "bit 0: the PTE was not valid"
msgstr ""

#: ../../../gpu/amdgpu/debugging.rst:70
msgid "bit 1: the PTE read bit was not set"
msgstr ""

#: ../../../gpu/amdgpu/debugging.rst:71
msgid "bit 2: the PTE write bit was not set"
msgstr ""

#: ../../../gpu/amdgpu/debugging.rst:72
msgid "bit 3: the PTE execute bit was not set"
msgstr ""

#: ../../../gpu/amdgpu/debugging.rst:74
msgid ""
"Finally, RW, indicates whether the access was a read (0) or a write (1)."
msgstr ""

#: ../../../gpu/amdgpu/debugging.rst:76
msgid ""
"In the example above, a shader (cliend id = TCP) generated a read (RW = 0x0) "
"to an invalid page (PERMISSION_FAULTS = 0x3) at GPU virtual address "
"0x0000800102800000.  The user can then inspect their shader code and "
"resource descriptor state to determine what caused the GPU page fault."
msgstr ""

#: ../../../gpu/amdgpu/debugging.rst:82
msgid "UMR"
msgstr ""

#: ../../../gpu/amdgpu/debugging.rst:84
msgid ""
"`umr <https://gitlab.freedesktop.org/tomstdenis/umr>`_ is a general purpose "
"GPU debugging and diagnostics tool.  Please see the umr `documentation "
"<https://umr.readthedocs.io/en/main/>`_ for more information about its "
"capabilities."
msgstr ""

#: ../../../gpu/amdgpu/debugging.rst:90
msgid "Debugging backlight brightness"
msgstr ""

#: ../../../gpu/amdgpu/debugging.rst:91
msgid ""
"Default backlight brightness is intended to be set via the policy advertised "
"by the firmware.  Firmware will often provide different defaults for AC or "
"DC. Furthermore, some userspace software will save backlight brightness "
"during the previous boot and attempt to restore it."
msgstr ""

#: ../../../gpu/amdgpu/debugging.rst:96
msgid ""
"Some firmware also has support for a feature called \"Custom Backlight "
"Curves\" where an input value for brightness is mapped along a linearly "
"interpolated curve of brightness values that better match display "
"characteristics."
msgstr ""

#: ../../../gpu/amdgpu/debugging.rst:100
msgid ""
"In the event of problems happening with backlight, there is a trace event "
"that can be enabled at bootup to log every brightness change request. This "
"can help isolate where the problem is. To enable the trace event add the "
"following to the kernel command line:"
msgstr ""

#: ../../../gpu/amdgpu/debugging.rst:105
msgid ""
"tp_printk trace_event=amdgpu_dm:amdgpu_dm_brightness:mod:amdgpu "
"trace_buf_size=1M"
msgstr ""
