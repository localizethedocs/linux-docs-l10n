# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../gpu/mcde.rst:5
msgid "drm/mcde ST-Ericsson MCDE Multi-channel display engine"
msgstr ""

#: ../../../gpu/mcde:7: drivers/gpu/drm/mcde/mcde_drv.c:9
msgid ""
"The MCDE (short for multi-channel display engine) is a graphics controller "
"found in the Ux500 chipsets, such as NovaThor U8500. It was initially "
"conceptualized by ST Microelectronics for the successor of the Nomadik line, "
"STn8500 but productified in the ST-Ericsson U8500 where is was used for mass-"
"market deployments in Android phones from Samsung and Sony Ericsson."
msgstr ""

#: ../../../gpu/mcde:7: drivers/gpu/drm/mcde/mcde_drv.c:16
msgid ""
"It can do 1080p30 on SDTV CCIR656, DPI-2, DBI-2 or DSI for panels with or "
"without frame buffering and can convert most input formats including most "
"variants of RGB and YUV."
msgstr ""

#: ../../../gpu/mcde:7: drivers/gpu/drm/mcde/mcde_drv.c:20
msgid ""
"The hardware has four display pipes, and the layout is a little bit like "
"this::"
msgstr ""

#: ../../../gpu/mcde:7: drivers/gpu/drm/mcde/mcde_drv.c:27
msgid ""
"FIFOs A and B are for LCD and HDMI while FIFO CO/C1 are for panels with "
"embedded buffer. 6 of the formatters are for DSI, 3 pairs for VID/CMD "
"respectively. 2 of the formatters are for DPI."
msgstr ""

#: ../../../gpu/mcde:7: drivers/gpu/drm/mcde/mcde_drv.c:32
msgid ""
"Behind the formatters are the DSI or DPI ports that route to the external "
"pins of the chip. As there are 3 DSI ports and one DPI port, it is possible "
"to configure up to 4 display pipelines (effectively using channels 0..3) for "
"concurrent use."
msgstr ""

#: ../../../gpu/mcde:7: drivers/gpu/drm/mcde/mcde_drv.c:37
msgid ""
"In the current DRM/KMS setup, we use one external source, one overlay, one "
"FIFO and one formatter which we connect to the simple DMA framebuffer "
"helpers. We then provide a bridge to the DSI port, and on the DSI port "
"bridge we connect hang a panel bridge or other bridge. This may be subject "
"to change as we exploit more of the hardware capabilities."
msgstr ""

#: ../../../gpu/mcde:7: drivers/gpu/drm/mcde/mcde_drv.c:43
msgid "TODO:"
msgstr ""

#: ../../../gpu/mcde:7: drivers/gpu/drm/mcde/mcde_drv.c:45
msgid ""
"Enabled damaged rectangles using drm_plane_enable_fb_damage_clips() so we "
"can selectively just transmit the damaged area to a command-only display."
msgstr ""

#: ../../../gpu/mcde:7: drivers/gpu/drm/mcde/mcde_drv.c:48
msgid ""
"Enable mixing of more planes, possibly at the cost of moving away from using "
"the simple framebuffer pipeline."
msgstr ""

#: ../../../gpu/mcde:7: drivers/gpu/drm/mcde/mcde_drv.c:50
msgid ""
"Enable output to bridges such as the AV8100 HDMI encoder from the DSI bridge."
msgstr ""
