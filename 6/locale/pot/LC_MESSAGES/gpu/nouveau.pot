# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-14 08:59+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../gpu/nouveau.rst:5
msgid "drm/nouveau NVIDIA GPU Driver"
msgstr ""

#: ../../../gpu/nouveau.rst:7
msgid ""
"The drm/nouveau driver provides support for a wide range of NVIDIA GPUs, "
"covering GeForce, Quadro, and Tesla series, from the NV04 architecture up to "
"the latest Turing, Ampere, Ada families."
msgstr ""

#: ../../../gpu/nouveau.rst:12
msgid "NVKM: NVIDIA Kernel Manager"
msgstr ""

#: ../../../gpu/nouveau.rst:14
msgid ""
"The NVKM component serves as the core abstraction layer within the nouveau "
"driver, responsible for managing NVIDIA GPU hardware at the kernel level. "
"NVKM provides a unified interface for handling various GPU  architectures."
msgstr ""

#: ../../../gpu/nouveau.rst:18
msgid ""
"It enables resource management, power control, memory handling, and command "
"submission required for the proper functioning of NVIDIA GPUs under the "
"nouveau driver."
msgstr ""

#: ../../../gpu/nouveau.rst:22
msgid ""
"NVKM plays a critical role in abstracting hardware complexities and "
"providing a consistent API to upper layers of the driver stack."
msgstr ""

#: ../../../gpu/nouveau.rst:26
msgid "GSP Support"
msgstr ""

#: ../../../gpu/nouveau:28:
#: drivers/gpu/drm/nouveau/nvkm/subdev/gsp/rm/r535/rpc.c:30
msgid ""
"https://github.com/NVIDIA/open-gpu-kernel-modules/blob/535/src/nvidia/inc/"
"kernel/gpu/gsp/message_queue_priv.h"
msgstr ""

#: ../../../gpu/nouveau:28:
#: drivers/gpu/drm/nouveau/nvkm/subdev/gsp/rm/r535/rpc.c:32
msgid ""
"The GSP command queue and status queue are message queues for the "
"communication between software and GSP. The software submits the GSP RPC via "
"the GSP command queue, GSP writes the status of the submitted RPC in the "
"status queue."
msgstr ""

#: ../../../gpu/nouveau:28:
#: drivers/gpu/drm/nouveau/nvkm/subdev/gsp/rm/r535/rpc.c:37
msgid "A GSP message queue element consists of three parts:"
msgstr ""

#: ../../../gpu/nouveau:28:
#: drivers/gpu/drm/nouveau/nvkm/subdev/gsp/rm/r535/rpc.c:39
msgid ""
"message element header (struct r535_gsp_msg), which mostly maintains the "
"metadata for queuing the element."
msgstr ""

#: ../../../gpu/nouveau:28:
#: drivers/gpu/drm/nouveau/nvkm/subdev/gsp/rm/r535/rpc.c:42
msgid ""
"RPC message header (struct nvfw_gsp_rpc), which maintains the info of the "
"RPC. E.g., the RPC function number."
msgstr ""

#: ../../../gpu/nouveau:28:
#: drivers/gpu/drm/nouveau/nvkm/subdev/gsp/rm/r535/rpc.c:45
msgid ""
"The payload, where the RPC message stays. E.g. the params of a specific RPC "
"function. Some RPC functions also have their headers in the payload. E.g. "
"rm_alloc, rm_control."
msgstr ""

#: ../../../gpu/nouveau:28:
#: drivers/gpu/drm/nouveau/nvkm/subdev/gsp/rm/r535/rpc.c:49
msgid "The memory layout of a GSP message element can be illustrated below::"
msgstr ""

#: ../../../gpu/nouveau:28:
#: drivers/gpu/drm/nouveau/nvkm/subdev/gsp/rm/r535/rpc.c:70
msgid ""
"The max size of a message queue element is 16 pages (including the headers). "
"When a GSP message to be sent is larger than 16 pages, the message should be "
"split into multiple elements and sent accordingly."
msgstr ""

#: ../../../gpu/nouveau:28:
#: drivers/gpu/drm/nouveau/nvkm/subdev/gsp/rm/r535/rpc.c:74
msgid ""
"In the bunch of the split elements, the first element has the expected "
"function number, while the rest of the elements are sent with the function "
"number NV_VGPU_MSG_FUNCTION_CONTINUATION_RECORD."
msgstr ""

#: ../../../gpu/nouveau:28:
#: drivers/gpu/drm/nouveau/nvkm/subdev/gsp/rm/r535/rpc.c:78
msgid ""
"GSP consumes the elements from the cmdq and always writes the result back to "
"the msgq. The result is also formed as split elements."
msgstr ""

#: ../../../gpu/nouveau:28:
#: drivers/gpu/drm/nouveau/nvkm/subdev/gsp/rm/r535/rpc.c:81
msgid "Terminology:"
msgstr ""

#: ../../../gpu/nouveau:28:
#: drivers/gpu/drm/nouveau/nvkm/subdev/gsp/rm/r535/rpc.c:83
msgid ""
"gsp_msg(msg): GSP message element (element header + GSP RPC header + payload)"
msgstr ""

#: ../../../gpu/nouveau:28:
#: drivers/gpu/drm/nouveau/nvkm/subdev/gsp/rm/r535/rpc.c:85
msgid "gsp_rpc(rpc): GSP RPC (RPC header + payload)"
msgstr ""

#: ../../../gpu/nouveau:28:
#: drivers/gpu/drm/nouveau/nvkm/subdev/gsp/rm/r535/rpc.c:86
msgid "gsp_rpc_buf: buffer for (GSP RPC header + payload)"
msgstr ""

#: ../../../gpu/nouveau:28:
#: drivers/gpu/drm/nouveau/nvkm/subdev/gsp/rm/r535/rpc.c:87
msgid "gsp_rpc_len: size of (GSP RPC header + payload)"
msgstr ""

#: ../../../gpu/nouveau:28:
#: drivers/gpu/drm/nouveau/nvkm/subdev/gsp/rm/r535/rpc.c:88
msgid "params_size: size of params in the payload"
msgstr ""

#: ../../../gpu/nouveau:28:
#: drivers/gpu/drm/nouveau/nvkm/subdev/gsp/rm/r535/rpc.c:89
msgid "payload_size: size of (header if exists + params) in the payload"
msgstr ""

#: ../../../gpu/nouveau:31:
#: drivers/gpu/drm/nouveau/include/nvkm/subdev/gsp.h:38
msgid ""
"When sending a GSP RPC command, there can be multiple cases of handling the "
"GSP RPC messages, which are the reply of GSP RPC commands, according to the "
"requirement of the callers and the nature of the GSP RPC commands."
msgstr ""

#: ../../../gpu/nouveau:31:
#: drivers/gpu/drm/nouveau/include/nvkm/subdev/gsp.h:42
msgid ""
"NVKM_GSP_RPC_REPLY_NOWAIT - If specified, immediately return to the caller "
"after the GSP RPC command is issued."
msgstr ""

#: ../../../gpu/nouveau:31:
#: drivers/gpu/drm/nouveau/include/nvkm/subdev/gsp.h:45
msgid ""
"NVKM_GSP_RPC_REPLY_RECV - If specified, wait and receive the entire GSP RPC "
"message after the GSP RPC command is issued."
msgstr ""

#: ../../../gpu/nouveau:31:
#: drivers/gpu/drm/nouveau/include/nvkm/subdev/gsp.h:48
msgid ""
"NVKM_GSP_RPC_REPLY_POLL - If specified, wait for the specific reply and "
"discard the reply before returning to the caller."
msgstr ""
