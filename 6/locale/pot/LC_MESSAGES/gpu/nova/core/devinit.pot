# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../gpu/nova/core/devinit.rst:5
msgid "Device Initialization (devinit)"
msgstr ""

#: ../../../gpu/nova/core/devinit.rst:6
msgid ""
"The devinit process is complex and subject to change. This document provides "
"a high-level overview using the Ampere GPU family as an example. The goal is "
"to provide a conceptual overview of the process to aid in understanding the "
"corresponding kernel code."
msgstr ""

#: ../../../gpu/nova/core/devinit.rst:10
msgid ""
"Device initialization (devinit) is a crucial sequence of register read/write "
"operations that occur after a GPU reset. The devinit sequence is essential "
"for properly configuring the GPU hardware before it can be used."
msgstr ""

#: ../../../gpu/nova/core/devinit.rst:14
msgid ""
"The devinit engine is an interpreter program that typically runs on the PMU "
"(Power Management Unit) microcontroller of the GPU. This interpreter "
"executes a \"script\" of initialization commands. The devinit engine itself "
"is part of the VBIOS ROM in the same ROM image as the FWSEC (Firmware "
"Security) image (see fwsec.rst and vbios.rst) and it runs before the nova-"
"core driver is even loaded. On an Ampere GPU, the devinit ucode is separate "
"from the FWSEC ucode. It is launched by FWSEC, which runs on the GSP in "
"'heavy-secure' mode, while devinit runs on the PMU in 'light-secure' mode."
msgstr ""

#: ../../../gpu/nova/core/devinit.rst:23
msgid "Key Functions of devinit"
msgstr ""

#: ../../../gpu/nova/core/devinit.rst:24
msgid "devinit performs several critical tasks:"
msgstr ""

#: ../../../gpu/nova/core/devinit.rst:26
msgid "Programming VRAM memory controller timings"
msgstr ""

#: ../../../gpu/nova/core/devinit.rst:27
msgid "Power sequencing"
msgstr ""

#: ../../../gpu/nova/core/devinit.rst:28
msgid "Clock and PLL (Phase-Locked Loop) configuration"
msgstr ""

#: ../../../gpu/nova/core/devinit.rst:29
msgid "Thermal management"
msgstr ""

#: ../../../gpu/nova/core/devinit.rst:32
msgid "Low-level Firmware Initialization Flow"
msgstr ""

#: ../../../gpu/nova/core/devinit.rst:33
msgid ""
"Upon reset, several microcontrollers on the GPU (such as PMU, SEC2, GSP, "
"etc.) run GPU firmware (gfw) code to set up the GPU and its core parameters. "
"Most of the GPU is considered unusable until this initialization process "
"completes."
msgstr ""

#: ../../../gpu/nova/core/devinit.rst:37
msgid "These low-level GPU firmware components are typically:"
msgstr ""

#: ../../../gpu/nova/core/devinit.rst:39
msgid ""
"Located in the VBIOS ROM in the same ROM partition (see vbios.rst and fwsec."
"rst)."
msgstr ""

#: ../../../gpu/nova/core/devinit.rst:40
msgid "Executed in sequence on different microcontrollers:"
msgstr ""

#: ../../../gpu/nova/core/devinit.rst:42
msgid "The devinit engine typically but not necessarily runs on the PMU."
msgstr ""

#: ../../../gpu/nova/core/devinit.rst:43
msgid ""
"On an Ampere GPU, the FWSEC typically runs on the GSP (GPU System Processor) "
"in heavy-secure mode."
msgstr ""

#: ../../../gpu/nova/core/devinit.rst:46
msgid ""
"Before the driver can proceed with further initialization, it must wait for "
"a signal indicating that core initialization is complete (known as "
"GFW_BOOT). This signal is asserted by the FWSEC running on the GSP in heavy-"
"secure mode."
msgstr ""

#: ../../../gpu/nova/core/devinit.rst:51
msgid "Runtime Considerations"
msgstr ""

#: ../../../gpu/nova/core/devinit.rst:52
msgid ""
"It's important to note that the devinit sequence also needs to run during "
"suspend/resume operations at runtime, not just during initial boot, as it is "
"critical to power management."
msgstr ""

#: ../../../gpu/nova/core/devinit.rst:56
msgid "Security and Access Control"
msgstr ""

#: ../../../gpu/nova/core/devinit.rst:57
msgid ""
"The initialization process involves careful privilege management. For "
"example, before accessing certain completion status registers, the driver "
"must check privilege level masks. Some registers are only accessible after "
"secure firmware (FWSEC) lowers the privilege level to allow CPU (LS/low-"
"secure) access. This is the case, for example, when receiving the GFW_BOOT "
"signal."
msgstr ""
