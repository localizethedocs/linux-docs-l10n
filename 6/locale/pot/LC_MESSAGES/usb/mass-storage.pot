# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../usb/mass-storage.rst:3
msgid "Mass Storage Gadget (MSG)"
msgstr ""

#: ../../../usb/mass-storage.rst:6
msgid "Overview"
msgstr ""

#: ../../../usb/mass-storage.rst:8
msgid ""
"Mass Storage Gadget (or MSG) acts as a USB Mass Storage device, appearing to "
"the host as a disk or a CD-ROM drive.  It supports multiple logical units "
"(LUNs).  Backing storage for each LUN is provided by a regular file or a "
"block device, access can be limited to read-only, and gadget can indicate "
"that it is removable and/or CD-ROM (the latter implies read-only access)."
msgstr ""

#: ../../../usb/mass-storage.rst:15
msgid ""
"Its requirements are modest; only a bulk-in and a bulk-out endpoint are "
"needed.  The memory requirement amounts to two 16K buffers. Support is "
"included for full-speed, high-speed and SuperSpeed operation."
msgstr ""

#: ../../../usb/mass-storage.rst:20
msgid ""
"Note that the driver is slightly non-portable in that it assumes a single "
"memory/DMA buffer will be usable for bulk-in and bulk-out endpoints.  With "
"most device controllers this is not an issue, but there may be some with "
"hardware restrictions that prevent a buffer from being used by more than one "
"endpoint."
msgstr ""

#: ../../../usb/mass-storage.rst:26
msgid ""
"This document describes how to use the gadget from user space, its relation "
"to mass storage function (or MSF) and different gadgets using it, and how it "
"differs from File Storage Gadget (or FSG) (which is no longer included in "
"Linux).  It will talk only briefly about how to use MSF within composite "
"gadgets."
msgstr ""

#: ../../../usb/mass-storage.rst:33
msgid "Module parameters"
msgstr ""

#: ../../../usb/mass-storage.rst:35
msgid ""
"The mass storage gadget accepts the following mass storage specific module "
"parameters:"
msgstr ""

#: ../../../usb/mass-storage.rst:38
msgid "file=filename[,filename...]"
msgstr ""

#: ../../../usb/mass-storage.rst:40
msgid ""
"This parameter lists paths to files or block devices used for backing "
"storage for each logical unit.  There may be at most FSG_MAX_LUNS (8) LUNs "
"set.  If more files are specified, they will be silently ignored.  See also "
"“luns” parameter."
msgstr ""

#: ../../../usb/mass-storage.rst:45
msgid ""
"*BEWARE* that if a file is used as a backing storage, it may not be modified "
"by any other process.  This is because the host assumes the data does not "
"change without its knowledge.  It may be read, but (if the logical unit is "
"writable) due to buffering on the host side, the contents are not well "
"defined."
msgstr ""

#: ../../../usb/mass-storage.rst:51
msgid ""
"The size of the logical unit will be rounded down to a full logical block.  "
"The logical block size is 2048 bytes for LUNs simulating CD-ROM, block size "
"of the device if the backing file is a block device, or 512 bytes otherwise."
msgstr ""

#: ../../../usb/mass-storage.rst:56
msgid "removable=b[,b...]"
msgstr ""

#: ../../../usb/mass-storage.rst:58
msgid ""
"This parameter specifies whether each logical unit should be removable.  “b” "
"here is either “y”, “Y” or “1” for true or “n”, “N” or “0” for false."
msgstr ""

#: ../../../usb/mass-storage.rst:62
msgid ""
"If this option is set for a logical unit, gadget will accept an “eject” SCSI "
"request (Start/Stop Unit).  When it is sent, the backing file will be closed "
"to simulate ejection and the logical unit will not be mountable by the host "
"until a new backing file is specified by userspace on the device (see “sysfs "
"entries” section)."
msgstr ""

#: ../../../usb/mass-storage.rst:69
msgid ""
"If a logical unit is not removable (the default), a backing file must be "
"specified for it with the “file” parameter as the module is loaded.  The "
"same applies if the module is built in, no exceptions."
msgstr ""

#: ../../../usb/mass-storage.rst:74
msgid ""
"The default value of the flag is false, *HOWEVER* it used to be true.  This "
"has been changed to better match File Storage Gadget and because it seems "
"like a saner default after all.  Thus to maintain compatibility with older "
"kernels, it's best to specify the default values.  Also, if one relied on "
"old default, explicit “n” needs to be specified now."
msgstr ""

#: ../../../usb/mass-storage.rst:81
msgid ""
"Note that “removable” means the logical unit's media can be ejected or "
"removed (as is true for a CD-ROM drive or a card reader).  It does *not* "
"mean that the entire gadget can be unplugged from the host; the proper term "
"for that is “hot-unpluggable”."
msgstr ""

#: ../../../usb/mass-storage.rst:87
msgid "cdrom=b[,b...]"
msgstr ""

#: ../../../usb/mass-storage.rst:89
msgid ""
"This parameter specifies whether each logical unit should simulate CD-ROM.  "
"The default is false."
msgstr ""

#: ../../../usb/mass-storage.rst:92
msgid "ro=b[,b...]"
msgstr ""

#: ../../../usb/mass-storage.rst:94
msgid ""
"This parameter specifies whether each logical unit should be reported as "
"read only.  This will prevent host from modifying the backing files."
msgstr ""

#: ../../../usb/mass-storage.rst:98
msgid ""
"Note that if this flag for given logical unit is false but the backing file "
"could not be opened in read/write mode, the gadget will fall back to read "
"only mode anyway."
msgstr ""

#: ../../../usb/mass-storage.rst:102
msgid ""
"The default value for non-CD-ROM logical units is false; for logical units "
"simulating CD-ROM it is forced to true."
msgstr ""

#: ../../../usb/mass-storage.rst:105
msgid "nofua=b[,b...]"
msgstr ""

#: ../../../usb/mass-storage.rst:107
msgid ""
"This parameter specifies whether FUA flag should be ignored in SCSI Write10 "
"and Write12 commands sent to given logical units."
msgstr ""

#: ../../../usb/mass-storage.rst:110
msgid ""
"MS Windows mounts removable storage in “Removal optimised mode” by default.  "
"All the writes to the media are synchronous, which is achieved by setting "
"the FUA (Force Unit Access) bit in SCSI Write(10,12) commands.  This forces "
"each write to wait until the data has actually been written out and prevents "
"I/O requests aggregation in block layer dramatically decreasing performance."
msgstr ""

#: ../../../usb/mass-storage.rst:117
msgid ""
"Note that this may mean that if the device is powered from USB and the user "
"unplugs the device without unmounting it first (which at least some Windows "
"users do), the data may be lost."
msgstr ""

#: ../../../usb/mass-storage.rst:121
msgid "The default value is false."
msgstr ""

#: ../../../usb/mass-storage.rst:123
msgid "luns=N"
msgstr ""

#: ../../../usb/mass-storage.rst:125
msgid ""
"This parameter specifies number of logical units the gadget will have.  It "
"is limited by FSG_MAX_LUNS (8) and higher value will be capped."
msgstr ""

#: ../../../usb/mass-storage.rst:129
msgid ""
"If this parameter is provided, and the number of files specified in “file” "
"argument is greater then the value of “luns”, all excess files will be "
"ignored."
msgstr ""

#: ../../../usb/mass-storage.rst:133
msgid ""
"If this parameter is not present, the number of logical units will be "
"deduced from the number of files specified in the “file” parameter.  If the "
"file parameter is missing as well, one is assumed."
msgstr ""

#: ../../../usb/mass-storage.rst:138
msgid "stall=b"
msgstr ""

#: ../../../usb/mass-storage.rst:140
msgid ""
"Specifies whether the gadget is allowed to halt bulk endpoints. The default "
"is determined according to the type of USB device controller, but usually "
"true."
msgstr ""

#: ../../../usb/mass-storage.rst:144
msgid ""
"In addition to the above, the gadget also accepts the following parameters "
"defined by the composite framework (they are common to all composite gadgets "
"so just a quick listing):"
msgstr ""

#: ../../../usb/mass-storage.rst:148
msgid "idVendor      -- USB Vendor ID (16 bit integer)"
msgstr ""

#: ../../../usb/mass-storage.rst:149
msgid "idProduct     -- USB Product ID (16 bit integer)"
msgstr ""

#: ../../../usb/mass-storage.rst:150
msgid "bcdDevice     -- USB Device version (BCD) (16 bit integer)"
msgstr ""

#: ../../../usb/mass-storage.rst:151
msgid "iManufacturer -- USB Manufacturer string (string)"
msgstr ""

#: ../../../usb/mass-storage.rst:152
msgid "iProduct      -- USB Product string (string)"
msgstr ""

#: ../../../usb/mass-storage.rst:153
msgid "iSerialNumber -- SerialNumber string (string)"
msgstr ""

#: ../../../usb/mass-storage.rst:156
msgid "sysfs entries"
msgstr ""

#: ../../../usb/mass-storage.rst:158
msgid ""
"For each logical unit, the gadget creates a directory in the sysfs "
"hierarchy.  Inside of it the following three files are created:"
msgstr ""

#: ../../../usb/mass-storage.rst:161
msgid "file"
msgstr ""

#: ../../../usb/mass-storage.rst:163
msgid ""
"When read it returns the path to the backing file for the given logical "
"unit.  If there is no backing file (possible only if the logical unit is "
"removable), the content is empty."
msgstr ""

#: ../../../usb/mass-storage.rst:167
msgid ""
"When written into, it changes the backing file for given logical unit.  This "
"change can be performed even if given logical unit is not specified as "
"removable (but that may look strange to the host).  It may fail, however, if "
"host disallowed medium removal with the Prevent-Allow Medium Removal SCSI "
"command."
msgstr ""

#: ../../../usb/mass-storage.rst:173
msgid "ro"
msgstr ""

#: ../../../usb/mass-storage.rst:175
msgid ""
"Reflects the state of ro flag for the given logical unit.  It can be read "
"any time, and written to when there is no backing file open for given "
"logical unit."
msgstr ""

#: ../../../usb/mass-storage.rst:179
msgid "nofua"
msgstr ""

#: ../../../usb/mass-storage.rst:181
msgid ""
"Reflects the state of nofua flag for given logical unit.  It can be read and "
"written."
msgstr ""

#: ../../../usb/mass-storage.rst:184
msgid "forced_eject"
msgstr ""

#: ../../../usb/mass-storage.rst:186
msgid ""
"When written into, it causes the backing file to be forcibly detached from "
"the LUN, regardless of whether the host has allowed it.  The content doesn't "
"matter, any non-zero number of bytes written will result in ejection."
msgstr ""

#: ../../../usb/mass-storage.rst:191
msgid "Can not be read."
msgstr ""

#: ../../../usb/mass-storage.rst:193
msgid ""
"Other then those, as usual, the values of module parameters can be read "
"from /sys/module/g_mass_storage/parameters/* files."
msgstr ""

#: ../../../usb/mass-storage.rst:197
msgid "Other gadgets using mass storage function"
msgstr ""

#: ../../../usb/mass-storage.rst:199
msgid ""
"The Mass Storage Gadget uses the Mass Storage Function to handle mass "
"storage protocol.  As a composite function, MSF may be used by other gadgets "
"as well (eg. g_multi and acm_ms)."
msgstr ""

#: ../../../usb/mass-storage.rst:203
msgid ""
"All of the information in previous sections are valid for other gadgets "
"using MSF, except that support for mass storage related module parameters "
"may be missing, or the parameters may have a prefix.  To figure out whether "
"any of this is true one needs to consult the gadget's documentation or its "
"source code."
msgstr ""

#: ../../../usb/mass-storage.rst:209
msgid ""
"For examples of how to include mass storage function in gadgets, one may "
"take a look at mass_storage.c, acm_ms.c and multi.c (sorted by complexity)."
msgstr ""

#: ../../../usb/mass-storage.rst:214
msgid "Relation to file storage gadget"
msgstr ""

#: ../../../usb/mass-storage.rst:216
msgid ""
"The Mass Storage Function and thus the Mass Storage Gadget has been based on "
"the File Storage Gadget.  The difference between the two is that MSG is a "
"composite gadget (ie. uses the composite framework) while file storage "
"gadget was a traditional gadget.  From userspace point of view this "
"distinction does not really matter, but from kernel hacker's point of view, "
"this means that (i) MSG does not duplicate code needed for handling basic "
"USB protocol commands and (ii) MSF can be used in any other composite gadget."
msgstr ""

#: ../../../usb/mass-storage.rst:225
msgid ""
"Because of that, File Storage Gadget has been removed in Linux 3.8. All "
"users need to transition to the Mass Storage Gadget.  The two gadgets behave "
"mostly the same from the outside except:"
msgstr ""

#: ../../../usb/mass-storage.rst:229
msgid ""
"In FSG the “removable” and “cdrom” module parameters set the flag for all "
"logical units whereas in MSG they accept a list of y/n values for each "
"logical unit.  If one uses only a single logical unit this does not matter, "
"but if there are more, the y/n value needs to be repeated for each logical "
"unit."
msgstr ""

#: ../../../usb/mass-storage.rst:235
msgid ""
"FSG's “serial”, “vendor”, “product” and “release” module parameters are "
"handled in MSG by the composite layer's parameters named respectively: "
"“iSerialnumber”, “idVendor”, “idProduct” and “bcdDevice”."
msgstr ""

#: ../../../usb/mass-storage.rst:240
msgid ""
"MSG does not support FSG's test mode, thus “transport”, “protocol” and "
"“buflen” FSG's module parameters are not supported.  MSG always uses SCSI "
"protocol with bulk only transport mode and 16 KiB buffers."
msgstr ""
