# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-30 08:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../bpf/drgn.rst:5
msgid "BPF drgn tools"
msgstr ""

#: ../../../bpf/drgn.rst:7
msgid ""
"drgn scripts is a convenient and easy to use mechanism to retrieve arbitrary "
"kernel data structures. drgn is not relying on kernel UAPI to read the data. "
"Instead it's reading directly from ``/proc/kcore`` or vmcore and pretty "
"prints the data based on DWARF debug information from vmlinux."
msgstr ""

#: ../../../bpf/drgn.rst:12
msgid "This document describes BPF related drgn tools."
msgstr ""

#: ../../../bpf/drgn.rst:14
msgid ""
"See `drgn/tools`_ for all tools available at the moment and `drgn/doc`_ for "
"more details on drgn itself."
msgstr ""

#: ../../../bpf/drgn.rst:18
msgid "bpf_inspect.py"
msgstr ""

#: ../../../bpf/drgn.rst:21
msgid "Description"
msgstr ""

#: ../../../bpf/drgn.rst:23
msgid ""
"`bpf_inspect.py`_ is a tool intended to inspect BPF programs and maps. It "
"can iterate over all programs and maps in the system and print basic "
"information about these objects, including id, type and name."
msgstr ""

#: ../../../bpf/drgn.rst:27
msgid ""
"The main use-case `bpf_inspect.py`_ covers is to show BPF programs of types "
"``BPF_PROG_TYPE_EXT`` and ``BPF_PROG_TYPE_TRACING`` attached to other BPF "
"programs via ``freplace``/``fentry``/``fexit`` mechanisms, since there is no "
"user-space API to get this information."
msgstr ""

#: ../../../bpf/drgn.rst:33
msgid "Getting started"
msgstr ""

#: ../../../bpf/drgn.rst:35
msgid "List BPF programs (full names are obtained from BTF)::"
msgstr ""

#: ../../../bpf/drgn.rst:42
msgid "List BPF maps::"
msgstr ""

#: ../../../bpf/drgn.rst:49
msgid "Find BPF programs attached to BPF program ``test_pkt_access``::"
msgstr ""

#: ../../../bpf/drgn.rst:61
msgid ""
"It can be seen that there is a program ``test_pkt_access``, id 650 and there "
"are multiple other tracing and ext programs attached to functions in "
"``test_pkt_access``."
msgstr ""

#: ../../../bpf/drgn.rst:65
msgid "For example the line::"
msgstr ""

#: ../../../bpf/drgn.rst:69
msgid ""
", means that BPF program id 658, type ``BPF_PROG_TYPE_EXT``, name "
"``new_get_skb_len`` replaces (``BPF_TRAMP_REPLACE``) function "
"``get_skb_len()`` that has BTF id 16 in BPF program id 650, name "
"``test_pkt_access``."
msgstr ""

#: ../../../bpf/drgn.rst:73
msgid "Getting help:"
msgstr ""

#: ../../../bpf/drgn.rst:94
msgid "Customization"
msgstr ""

#: ../../../bpf/drgn.rst:96
msgid ""
"The script is intended to be customized by developers to print relevant "
"information about BPF programs, maps and other objects."
msgstr ""

#: ../../../bpf/drgn.rst:99
msgid "For example, to print ``struct bpf_prog_aux`` for BPF program id 53077:"
msgstr ""

#: ../../../bpf/drgn.rst:120
msgid "It produces the output::"
msgstr ""
