# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../bpf/map_cgrp_storage.rst:6
msgid "BPF_MAP_TYPE_CGRP_STORAGE"
msgstr ""

#: ../../../bpf/map_cgrp_storage.rst:8
msgid ""
"The ``BPF_MAP_TYPE_CGRP_STORAGE`` map type represents a local fix-sized "
"storage for cgroups. It is only available with ``CONFIG_CGROUPS``. The "
"programs are made available by the same Kconfig. The data for a particular "
"cgroup can be retrieved by looking up the map with that cgroup."
msgstr ""

#: ../../../bpf/map_cgrp_storage.rst:14
msgid ""
"This document describes the usage and semantics of the "
"``BPF_MAP_TYPE_CGRP_STORAGE`` map type."
msgstr ""

#: ../../../bpf/map_cgrp_storage.rst:18
msgid "Usage"
msgstr ""

#: ../../../bpf/map_cgrp_storage.rst:20
msgid ""
"The map key must be ``sizeof(int)`` representing a cgroup fd. To access the "
"storage in a program, use ``bpf_cgrp_storage_get``::"
msgstr ""

#: ../../../bpf/map_cgrp_storage.rst:25
msgid ""
"``flags`` could be 0 or ``BPF_LOCAL_STORAGE_GET_F_CREATE`` which indicates "
"that a new local storage will be created if one does not exist."
msgstr ""

#: ../../../bpf/map_cgrp_storage.rst:28
msgid "The local storage can be removed with ``bpf_cgrp_storage_delete``::"
msgstr ""

#: ../../../bpf/map_cgrp_storage.rst:32
msgid "The map is available to all program types."
msgstr ""

#: ../../../bpf/map_cgrp_storage.rst:35
msgid "Examples"
msgstr ""

#: ../../../bpf/map_cgrp_storage.rst:37
msgid "A BPF program example with BPF_MAP_TYPE_CGRP_STORAGE::"
msgstr ""

#: ../../../bpf/map_cgrp_storage.rst:64
msgid "Userspace accessing map declared above::"
msgstr ""

#: ../../../bpf/map_cgrp_storage.rst:79
msgid ""
"Difference Between BPF_MAP_TYPE_CGRP_STORAGE and BPF_MAP_TYPE_CGROUP_STORAGE"
msgstr ""

#: ../../../bpf/map_cgrp_storage.rst:81
msgid ""
"The old cgroup storage map ``BPF_MAP_TYPE_CGROUP_STORAGE`` has been marked "
"as deprecated (renamed to ``BPF_MAP_TYPE_CGROUP_STORAGE_DEPRECATED``). The "
"new ``BPF_MAP_TYPE_CGRP_STORAGE`` map should be used instead. The following "
"illusates the main difference between ``BPF_MAP_TYPE_CGRP_STORAGE`` and "
"``BPF_MAP_TYPE_CGROUP_STORAGE_DEPRECATED``."
msgstr ""

#: ../../../bpf/map_cgrp_storage.rst:87
msgid ""
"(1). ``BPF_MAP_TYPE_CGRP_STORAGE`` can be used by all program types while"
msgstr ""

#: ../../../bpf/map_cgrp_storage.rst:88
msgid ""
"``BPF_MAP_TYPE_CGROUP_STORAGE_DEPRECATED`` is available only to cgroup "
"program types like BPF_CGROUP_INET_INGRESS or BPF_CGROUP_SOCK_OPS, etc."
msgstr ""

#: ../../../bpf/map_cgrp_storage.rst:91
msgid ""
"(2). ``BPF_MAP_TYPE_CGRP_STORAGE`` supports local storage for more than one"
msgstr ""

#: ../../../bpf/map_cgrp_storage.rst:92
msgid ""
"cgroup while ``BPF_MAP_TYPE_CGROUP_STORAGE_DEPRECATED`` only supports one "
"cgroup which is attached by a BPF program."
msgstr ""

#: ../../../bpf/map_cgrp_storage.rst:95
msgid ""
"(3). ``BPF_MAP_TYPE_CGROUP_STORAGE_DEPRECATED`` allocates local storage at "
"attach time so"
msgstr ""

#: ../../../bpf/map_cgrp_storage.rst:96
msgid ""
"``bpf_get_local_storage()`` always returns non-NULL local storage. "
"``BPF_MAP_TYPE_CGRP_STORAGE`` allocates local storage at runtime so it is "
"possible that ``bpf_cgrp_storage_get()`` may return null local storage. To "
"avoid such null local storage issue, user space can do "
"``bpf_map_update_elem()`` to pre-allocate local storage before a BPF program "
"is attached."
msgstr ""

#: ../../../bpf/map_cgrp_storage.rst:103
msgid ""
"(4). ``BPF_MAP_TYPE_CGRP_STORAGE`` supports deleting local storage by a BPF "
"program"
msgstr ""

#: ../../../bpf/map_cgrp_storage.rst:104
msgid ""
"while ``BPF_MAP_TYPE_CGROUP_STORAGE_DEPRECATED`` only deletes storage during "
"prog detach time."
msgstr ""

#: ../../../bpf/map_cgrp_storage.rst:107
msgid ""
"So overall, ``BPF_MAP_TYPE_CGRP_STORAGE`` supports all "
"``BPF_MAP_TYPE_CGROUP_STORAGE_DEPRECATED`` functionality and beyond. It is "
"recommended to use ``BPF_MAP_TYPE_CGRP_STORAGE`` instead of "
"``BPF_MAP_TYPE_CGROUP_STORAGE_DEPRECATED``."
msgstr ""
