# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-30 08:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../bpf/prog_sk_lookup.rst:5
msgid "BPF sk_lookup program"
msgstr ""

#: ../../../bpf/prog_sk_lookup.rst:7
msgid ""
"BPF sk_lookup program type (``BPF_PROG_TYPE_SK_LOOKUP``) introduces "
"programmability into the socket lookup performed by the transport layer when "
"a packet is to be delivered locally."
msgstr ""

#: ../../../bpf/prog_sk_lookup.rst:11
msgid ""
"When invoked BPF sk_lookup program can select a socket that will receive the "
"incoming packet by calling the ``bpf_sk_assign()`` BPF helper function."
msgstr ""

#: ../../../bpf/prog_sk_lookup.rst:14
msgid ""
"Hooks for a common attach point (``BPF_SK_LOOKUP``) exist for both TCP and "
"UDP."
msgstr ""

#: ../../../bpf/prog_sk_lookup.rst:17
msgid "Motivation"
msgstr ""

#: ../../../bpf/prog_sk_lookup.rst:19
msgid ""
"BPF sk_lookup program type was introduced to address setup scenarios where "
"binding sockets to an address with ``bind()`` socket call is impractical, "
"such as:"
msgstr ""

#: ../../../bpf/prog_sk_lookup.rst:23
msgid ""
"receiving connections on a range of IP addresses, e.g. 192.0.2.0/24, when "
"binding to a wildcard address ``INADRR_ANY`` is not possible due to a port "
"conflict,"
msgstr ""

#: ../../../bpf/prog_sk_lookup.rst:26
msgid ""
"receiving connections on all or a wide range of ports, i.e. an L7 proxy use "
"case."
msgstr ""

#: ../../../bpf/prog_sk_lookup.rst:29
msgid ""
"Such setups would require creating and ``bind()``'ing one socket to each of "
"the IP address/port in the range, leading to resource consumption and "
"potential latency spikes during socket lookup."
msgstr ""

#: ../../../bpf/prog_sk_lookup.rst:34
msgid "Attachment"
msgstr ""

#: ../../../bpf/prog_sk_lookup.rst:36
msgid ""
"BPF sk_lookup program can be attached to a network namespace with "
"``bpf(BPF_LINK_CREATE, ...)`` syscall using the ``BPF_SK_LOOKUP`` attach "
"type and a netns FD as attachment ``target_fd``."
msgstr ""

#: ../../../bpf/prog_sk_lookup.rst:40
msgid ""
"Multiple programs can be attached to one network namespace. Programs will be "
"invoked in the same order as they were attached."
msgstr ""

#: ../../../bpf/prog_sk_lookup.rst:44
msgid "Hooks"
msgstr ""

#: ../../../bpf/prog_sk_lookup.rst:46
msgid ""
"The attached BPF sk_lookup programs run whenever the transport layer needs "
"to find a listening (TCP) or an unconnected (UDP) socket for an incoming "
"packet."
msgstr ""

#: ../../../bpf/prog_sk_lookup.rst:49
msgid ""
"Incoming traffic to established (TCP) and connected (UDP) sockets is "
"delivered as usual without triggering the BPF sk_lookup hook."
msgstr ""

#: ../../../bpf/prog_sk_lookup.rst:52
msgid ""
"The attached BPF programs must return with either ``SK_PASS`` or ``SK_DROP`` "
"verdict code. As for other BPF program types that are network filters, "
"``SK_PASS`` signifies that the socket lookup should continue on to regular "
"hashtable-based lookup, while ``SK_DROP`` causes the transport layer to drop "
"the packet."
msgstr ""

#: ../../../bpf/prog_sk_lookup.rst:58
msgid ""
"A BPF sk_lookup program can also select a socket to receive the packet by "
"calling ``bpf_sk_assign()`` BPF helper. Typically, the program looks up a "
"socket in a map holding sockets, such as ``SOCKMAP`` or ``SOCKHASH``, and "
"passes a ``struct bpf_sock *`` to ``bpf_sk_assign()`` helper to record the "
"selection. Selecting a socket only takes effect if the program has "
"terminated with ``SK_PASS`` code."
msgstr ""

#: ../../../bpf/prog_sk_lookup.rst:65
msgid ""
"When multiple programs are attached, the end result is determined from "
"return codes of all the programs according to the following rules:"
msgstr ""

#: ../../../bpf/prog_sk_lookup.rst:68
msgid ""
"If any program returned ``SK_PASS`` and selected a valid socket, the socket "
"is used as the result of the socket lookup."
msgstr ""

#: ../../../bpf/prog_sk_lookup.rst:70
msgid ""
"If more than one program returned ``SK_PASS`` and selected a socket, the "
"last selection takes effect."
msgstr ""

#: ../../../bpf/prog_sk_lookup.rst:72
msgid ""
"If any program returned ``SK_DROP``, and no program returned ``SK_PASS`` and "
"selected a socket, socket lookup fails."
msgstr ""

#: ../../../bpf/prog_sk_lookup.rst:74
msgid ""
"If all programs returned ``SK_PASS`` and none of them selected a socket, "
"socket lookup continues on."
msgstr ""

#: ../../../bpf/prog_sk_lookup.rst:78
msgid "API"
msgstr ""

#: ../../../bpf/prog_sk_lookup.rst:80
msgid ""
"In its context, an instance of ``struct bpf_sk_lookup``, BPF sk_lookup "
"program receives information about the packet that triggered the socket "
"lookup. Namely:"
msgstr ""

#: ../../../bpf/prog_sk_lookup.rst:83
msgid "IP version (``AF_INET`` or ``AF_INET6``),"
msgstr ""

#: ../../../bpf/prog_sk_lookup.rst:84
msgid "L4 protocol identifier (``IPPROTO_TCP`` or ``IPPROTO_UDP``),"
msgstr ""

#: ../../../bpf/prog_sk_lookup.rst:85
msgid "source and destination IP address,"
msgstr ""

#: ../../../bpf/prog_sk_lookup.rst:86
msgid "source and destination L4 port,"
msgstr ""

#: ../../../bpf/prog_sk_lookup.rst:87
msgid "the socket that has been selected with ``bpf_sk_assign()``."
msgstr ""

#: ../../../bpf/prog_sk_lookup.rst:89
msgid ""
"Refer to ``struct bpf_sk_lookup`` declaration in ``linux/bpf.h`` user API "
"header, and `bpf-helpers(7) <https://man7.org/linux/man-pages/man7/bpf-"
"helpers.7.html>`_ man-page section for ``bpf_sk_assign()`` for details."
msgstr ""

#: ../../../bpf/prog_sk_lookup.rst:95
msgid "Example"
msgstr ""

#: ../../../bpf/prog_sk_lookup.rst:97
msgid ""
"See ``tools/testing/selftests/bpf/prog_tests/sk_lookup.c`` for the reference "
"implementation."
msgstr ""
