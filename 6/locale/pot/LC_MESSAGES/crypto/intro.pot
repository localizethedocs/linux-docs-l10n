# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-30 08:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../crypto/intro.rst:2
msgid "Kernel Crypto API Interface Specification"
msgstr ""

#: ../../../crypto/intro.rst:5
msgid "Introduction"
msgstr ""

#: ../../../crypto/intro.rst:7
msgid ""
"The kernel crypto API offers a rich set of cryptographic ciphers as well as "
"other data transformation mechanisms and methods to invoke these. This "
"document contains a description of the API and provides example code."
msgstr ""

#: ../../../crypto/intro.rst:12
msgid ""
"To understand and properly use the kernel crypto API a brief explanation of "
"its structure is given. Based on the architecture, the API can be separated "
"into different components. Following the architecture specification, hints "
"to developers of ciphers are provided. Pointers to the API function call "
"documentation are given at the end."
msgstr ""

#: ../../../crypto/intro.rst:18
msgid ""
"The kernel crypto API refers to all algorithms as \"transformations\". "
"Therefore, a cipher handle variable usually has the name \"tfm\". Besides "
"cryptographic operations, the kernel crypto API also knows compression "
"transformations and handles them the same way as ciphers."
msgstr ""

#: ../../../crypto/intro.rst:23
msgid "The kernel crypto API serves the following entity types:"
msgstr ""

#: ../../../crypto/intro.rst:25
msgid "consumers requesting cryptographic services"
msgstr ""

#: ../../../crypto/intro.rst:27
msgid ""
"data transformation implementations (typically ciphers) that can be called "
"by consumers using the kernel crypto API"
msgstr ""

#: ../../../crypto/intro.rst:30
msgid ""
"This specification is intended for consumers of the kernel crypto API as "
"well as for developers implementing ciphers. This API specification, "
"however, does not discuss all API calls available to data transformation "
"implementations (i.e. implementations of ciphers and other transformations "
"(such as CRC or even compression algorithms) that can register with the "
"kernel crypto API)."
msgstr ""

#: ../../../crypto/intro.rst:37
msgid ""
"Note: The terms \"transformation\" and cipher algorithm are used "
"interchangeably."
msgstr ""

#: ../../../crypto/intro.rst:41
msgid "Terminology"
msgstr ""

#: ../../../crypto/intro.rst:43
msgid ""
"The transformation implementation is an actual code or interface to hardware "
"which implements a certain transformation with precisely defined behavior."
msgstr ""

#: ../../../crypto/intro.rst:47
msgid ""
"The transformation object (TFM) is an instance of a transformation "
"implementation. There can be multiple transformation objects associated with "
"a single transformation implementation. Each of those transformation objects "
"is held by a crypto API consumer or another transformation. Transformation "
"object is allocated when a crypto API consumer requests a transformation "
"implementation. The consumer is then provided with a structure, which "
"contains a transformation object (TFM)."
msgstr ""

#: ../../../crypto/intro.rst:55
msgid ""
"The structure that contains transformation objects may also be referred to "
"as a \"cipher handle\". Such a cipher handle is always subject to the "
"following phases that are reflected in the API calls applicable to such a "
"cipher handle:"
msgstr ""

#: ../../../crypto/intro.rst:60
msgid "Initialization of a cipher handle."
msgstr ""

#: ../../../crypto/intro.rst:62
msgid ""
"Execution of all intended cipher operations applicable for the handle where "
"the cipher handle must be furnished to every API call."
msgstr ""

#: ../../../crypto/intro.rst:65
msgid "Destruction of a cipher handle."
msgstr ""

#: ../../../crypto/intro.rst:67
msgid ""
"When using the initialization API calls, a cipher handle is created and "
"returned to the consumer. Therefore, please refer to all initialization API "
"calls that refer to the data structure type a consumer is expected to "
"receive and subsequently to use. The initialization API calls have all the "
"same naming conventions of crypto_alloc\\*."
msgstr ""

#: ../../../crypto/intro.rst:73
msgid ""
"The transformation context is private data associated with the "
"transformation object."
msgstr ""
