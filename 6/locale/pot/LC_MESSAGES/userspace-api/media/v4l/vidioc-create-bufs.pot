# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../userspace-api/media/v4l/vidioc-create-bufs.rst:8
msgid "ioctl VIDIOC_CREATE_BUFS"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-create-bufs.rst:11
msgid "Name"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-create-bufs.rst:13
msgid ""
"VIDIOC_CREATE_BUFS - Create buffers for Memory Mapped or User Pointer or DMA "
"Buffer I/O"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-create-bufs.rst:16
msgid "Synopsis"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-create-bufs.rst:20
msgid ""
"``int ioctl(int fd, VIDIOC_CREATE_BUFS, struct v4l2_create_buffers *argp)``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-create-bufs.rst:23
msgid "Arguments"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-create-bufs.rst:25
msgid "``fd``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-create-bufs.rst:26
msgid "File descriptor returned by :c:func:`open()`."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-create-bufs.rst:28
msgid "``argp``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-create-bufs.rst:29
msgid "Pointer to struct :c:type:`v4l2_create_buffers`."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-create-bufs.rst:32
msgid "Description"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-create-bufs.rst:34
msgid ""
"This ioctl is used to create buffers for :ref:`memory mapped <mmap>` or :ref:"
"`user pointer <userp>` or :ref:`DMA buffer <dmabuf>` I/O. It can be used as "
"an alternative or in addition to the :ref:`VIDIOC_REQBUFS` ioctl, when a "
"tighter control over buffers is required. This ioctl can be called multiple "
"times to create buffers of different sizes."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-create-bufs.rst:41
msgid ""
"To allocate the device buffers applications must initialize the relevant "
"fields of the struct :c:type:`v4l2_create_buffers` structure. The ``count`` "
"field must be set to the number of requested buffers, the ``memory`` field "
"specifies the requested I/O method and the ``reserved`` array must be zeroed."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-create-bufs.rst:47
msgid ""
"The ``format`` field specifies the image format that the buffers must be "
"able to handle. The application has to fill in this struct :c:type:"
"`v4l2_format`. Usually this will be done using the :ref:`VIDIOC_TRY_FMT "
"<VIDIOC_G_FMT>` or :ref:`VIDIOC_G_FMT <VIDIOC_G_FMT>` ioctls to ensure that "
"the requested format is supported by the driver. Based on the format's "
"``type`` field the requested buffer size (for single-planar) or plane sizes "
"(for multi-planar formats) will be used for the allocated buffers. The "
"driver may return an error if the size(s) are not supported by the hardware "
"(usually because they are too small)."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-create-bufs.rst:58
msgid ""
"The buffers created by this ioctl will have as minimum size the size defined "
"by the ``format.pix.sizeimage`` field (or the corresponding fields for other "
"format types). Usually if the ``format.pix.sizeimage`` field is less than "
"the minimum required for the given format, then an error will be returned "
"since drivers will typically not allow this. If it is larger, then the value "
"will be used as-is. In other words, the driver may reject the requested "
"size, but if it is accepted the driver will use it unchanged."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-create-bufs.rst:67
msgid ""
"When the ioctl is called with a pointer to this structure the driver will "
"attempt to allocate up to the requested number of buffers and store the "
"actual number allocated and the starting index in the ``count`` and the "
"``index`` fields respectively. On return ``count`` can be smaller than the "
"number requested."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-create-bufs.rst:77
msgid "struct v4l2_create_buffers"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-create-bufs.rst:82
#: ../../../userspace-api/media/v4l/vidioc-create-bufs.rst:85
#: ../../../userspace-api/media/v4l/vidioc-create-bufs.rst:94
#: ../../../userspace-api/media/v4l/vidioc-create-bufs.rst:102
#: ../../../userspace-api/media/v4l/vidioc-create-bufs.rst:115
#: ../../../userspace-api/media/v4l/vidioc-create-bufs.rst:119
#: ../../../userspace-api/media/v4l/vidioc-create-bufs.rst:124
msgid "__u32"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-create-bufs.rst:83
msgid "``index``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-create-bufs.rst:84
msgid "The starting buffer index, returned by the driver."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-create-bufs.rst:86
msgid "``count``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-create-bufs.rst:87
msgid ""
"The number of buffers requested or granted. If count == 0, then :ref:"
"`VIDIOC_CREATE_BUFS` will set ``index`` to the current number of created "
"buffers, and it will check the validity of ``memory`` and ``format.type``. "
"If those are invalid -1 is returned and errno is set to ``EINVAL`` error "
"code, otherwise :ref:`VIDIOC_CREATE_BUFS` returns 0. It will never set errno "
"to ``EBUSY`` error code in this particular case."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-create-bufs.rst:95
msgid "``memory``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-create-bufs.rst:96
msgid ""
"Applications set this field to ``V4L2_MEMORY_MMAP``, ``V4L2_MEMORY_DMABUF`` "
"or ``V4L2_MEMORY_USERPTR``. See :c:type:`v4l2_memory`"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-create-bufs.rst:99
msgid "struct :c:type:`v4l2_format`"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-create-bufs.rst:100
msgid "``format``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-create-bufs.rst:101
msgid "Filled in by the application, preserved by the driver."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-create-bufs.rst:103
msgid "``capabilities``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-create-bufs.rst:104
msgid ""
"Set by the driver. If 0, then the driver doesn't support capabilities. In "
"that case all you know is that the driver is guaranteed to support "
"``V4L2_MEMORY_MMAP`` and *might* support other :c:type:`v4l2_memory` types. "
"It will not support any other capabilities. See :ref:`here <v4l2-buf-"
"capabilities>` for a list of the capabilities."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-create-bufs.rst:111
msgid ""
"If you want to just query the capabilities without making any other changes, "
"then set ``count`` to 0, ``memory`` to ``V4L2_MEMORY_MMAP`` and ``format."
"type`` to the buffer type."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-create-bufs.rst:116
msgid "``flags``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-create-bufs.rst:117
msgid ""
"Specifies additional buffer management attributes. See :ref:`memory-flags`."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-create-bufs.rst:120
msgid "``max_num_buffers``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-create-bufs.rst:121
msgid ""
"If the V4L2_BUF_CAP_SUPPORTS_MAX_NUM_BUFFERS capability flag is set this "
"field indicates the maximum possible number of buffers for this queue."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-create-bufs.rst:125
msgid "``reserved``\\ [5]"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-create-bufs.rst:126
msgid ""
"A place holder for future extensions. Drivers and applications must set the "
"array to zero."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-create-bufs.rst:130
msgid "Return Value"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-create-bufs.rst:132
msgid ""
"On success 0 is returned, on error -1 and the ``errno`` variable is set "
"appropriately. The generic error codes are described at the :ref:`Generic "
"Error Codes <gen-errors>` chapter."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-create-bufs.rst:136
msgid "ENOMEM"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-create-bufs.rst:137
msgid "No memory to allocate buffers for :ref:`memory mapped <mmap>` I/O."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-create-bufs.rst:139
msgid "EINVAL"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-create-bufs.rst:140
msgid ""
"The buffer type (``format.type`` field), requested I/O method (``memory``) "
"or format (``format`` field) is not valid."
msgstr ""
