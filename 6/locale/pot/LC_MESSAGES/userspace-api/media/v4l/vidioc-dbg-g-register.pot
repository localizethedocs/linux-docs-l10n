# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-30 08:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:8
msgid "ioctl VIDIOC_DBG_G_REGISTER, VIDIOC_DBG_S_REGISTER"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:11
msgid "Name"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:13
msgid ""
"VIDIOC_DBG_G_REGISTER - VIDIOC_DBG_S_REGISTER - Read or write hardware "
"registers"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:16
msgid "Synopsis"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:20
msgid ""
"``int ioctl(int fd, VIDIOC_DBG_G_REGISTER, struct v4l2_dbg_register *argp)``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:24
msgid ""
"``int ioctl(int fd, VIDIOC_DBG_S_REGISTER, const struct v4l2_dbg_register "
"*argp)``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:27
msgid "Arguments"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:29
msgid "``fd``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:30
msgid "File descriptor returned by :c:func:`open()`."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:32
msgid "``argp``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:33
msgid "Pointer to struct :c:type:`v4l2_dbg_register`."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:36
msgid "Description"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:40
msgid "This is an :ref:`experimental` interface and may change in the future."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:43
msgid ""
"For driver debugging purposes these ioctls allow test applications to access "
"hardware registers directly. Regular applications must not use them."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:47
msgid ""
"Since writing or even reading registers can jeopardize the system security, "
"its stability and damage the hardware, both ioctls require superuser "
"privileges. Additionally the Linux kernel must be compiled with the "
"``CONFIG_VIDEO_ADV_DEBUG`` option to enable these ioctls."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:52
msgid ""
"To write a register applications must initialize all fields of a struct :c:"
"type:`v4l2_dbg_register` except for ``size`` and call "
"``VIDIOC_DBG_S_REGISTER`` with a pointer to this structure. The ``match."
"type`` and ``match.addr`` or ``match.name`` fields select a chip on the TV "
"card, the ``reg`` field specifies a register number and the ``val`` field "
"the value to be written into the register."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:59
msgid ""
"To read a register applications must initialize the ``match.type``, ``match."
"addr`` or ``match.name`` and ``reg`` fields, and call "
"``VIDIOC_DBG_G_REGISTER`` with a pointer to this structure. On success the "
"driver stores the register value in the ``val`` field and the size (in "
"bytes) of the value in ``size``."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:65
msgid ""
"When ``match.type`` is ``V4L2_CHIP_MATCH_BRIDGE``, ``match.addr`` selects "
"the nth non-sub-device chip on the TV card. The number zero always selects "
"the host chip, e. g. the chip connected to the PCI or USB bus. You can find "
"out which chips are present with the :ref:`VIDIOC_DBG_G_CHIP_INFO` ioctl."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:71
msgid ""
"When ``match.type`` is ``V4L2_CHIP_MATCH_SUBDEV``, ``match.addr`` selects "
"the nth sub-device."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:74
msgid ""
"These ioctls are optional, not all drivers may support them. However when a "
"driver supports these ioctls it must also support :ref:"
"`VIDIOC_DBG_G_CHIP_INFO`. Conversely it may support "
"``VIDIOC_DBG_G_CHIP_INFO`` but not these ioctls."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:79
msgid ""
"``VIDIOC_DBG_G_REGISTER`` and ``VIDIOC_DBG_S_REGISTER`` were introduced in "
"Linux 2.6.21, but their API was changed to the one described here in kernel "
"2.6.29."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:83
msgid ""
"We recommended the v4l2-dbg utility over calling these ioctls directly. It "
"is available from the LinuxTV v4l-dvb repository; see `https://linuxtv.org/"
"repo/ <https://linuxtv.org/repo/>`__ for access instructions."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:92
#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:120
msgid "struct v4l2_dbg_match"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:97
#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:102
#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:123
msgid "__u32"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:98
msgid "``type``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:99
msgid "See :ref:`chip-match-types` for a list of possible types."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:100
msgid "union {"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:101
msgid "(anonymous)"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:103
msgid "``addr``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:104
msgid ""
"Match a chip by this number, interpreted according to the ``type`` field."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:106
msgid "char"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:107
msgid "``name[32]``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:108
msgid ""
"Match a chip by this name, interpreted according to the ``type`` field. "
"Currently unused."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:110
msgid "}"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:116
msgid "struct v4l2_dbg_register"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:121
msgid "``match``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:122
msgid "How to match the chip, see :c:type:`v4l2_dbg_match`."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:124
msgid "``size``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:125
msgid "The register size in bytes."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:126
#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:129
msgid "__u64"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:127
msgid "``reg``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:128
msgid "A register number."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:130
msgid "``val``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:131
msgid "The value read from, or to be written into the register."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:138
msgid "Chip Match Types"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:143
msgid "``V4L2_CHIP_MATCH_BRIDGE``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:144
msgid "0"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:145
msgid ""
"Match the nth chip on the card, zero for the bridge chip. Does not match sub-"
"devices."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:147
msgid "``V4L2_CHIP_MATCH_SUBDEV``"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:148
msgid "4"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:149
msgid "Match the nth sub-device."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:152
msgid "Return Value"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:154
msgid ""
"On success 0 is returned, on error -1 and the ``errno`` variable is set "
"appropriately. The generic error codes are described at the :ref:`Generic "
"Error Codes <gen-errors>` chapter."
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:158
msgid "EPERM"
msgstr ""

#: ../../../userspace-api/media/v4l/vidioc-dbg-g-register.rst:159
msgid ""
"Insufficient permissions. Root privileges are required to execute these "
"ioctls."
msgstr ""
