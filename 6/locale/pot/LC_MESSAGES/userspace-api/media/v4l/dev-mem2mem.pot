# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-27 13:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../userspace-api/media/v4l/dev-mem2mem.rst:7
msgid "Video Memory-To-Memory Interface"
msgstr ""

#: ../../../userspace-api/media/v4l/dev-mem2mem.rst:9
msgid ""
"A V4L2 memory-to-memory device can compress, decompress, transform, or "
"otherwise convert video data from one format into another format, in memory. "
"Such memory-to-memory devices set the ``V4L2_CAP_VIDEO_M2M`` or "
"``V4L2_CAP_VIDEO_M2M_MPLANE`` capability. Examples of memory-to-memory "
"devices are codecs, scalers, deinterlacers or format converters (i.e. "
"converting from YUV to RGB)."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-mem2mem.rst:16
msgid ""
"A memory-to-memory video node acts just like a normal video node, but it "
"supports both output (sending frames from memory to the hardware) and "
"capture (receiving the processed frames from the hardware into memory) "
"stream I/O. An application will have to setup the stream I/O for both sides "
"and finally call :ref:`VIDIOC_STREAMON <VIDIOC_STREAMON>` for both capture "
"and output to start the hardware."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-mem2mem.rst:23
msgid ""
"Memory-to-memory devices function as a shared resource: you can open the "
"video node multiple times, each application setting up their own properties "
"that are local to the file handle, and each can use it independently from "
"the others. The driver will arbitrate access to the hardware and reprogram "
"it whenever another file handler gets access. This is different from the "
"usual video node behavior where the video properties are global to the "
"device (i.e. changing something through one file handle is visible through "
"another file handle)."
msgstr ""

#: ../../../userspace-api/media/v4l/dev-mem2mem.rst:32
msgid ""
"One of the most common memory-to-memory device is the codec. Codecs are more "
"complicated than most and require additional setup for their codec "
"parameters. This is done through codec controls. See :ref:`codec-controls`. "
"More details on how to use codec memory-to-memory devices are given in the "
"following sections."
msgstr ""
