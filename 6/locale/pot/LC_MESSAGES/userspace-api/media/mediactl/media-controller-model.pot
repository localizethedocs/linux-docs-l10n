# SOME DESCRIPTIVE TITLE.
# Copyright (C) The kernel development community
# This file is distributed under the same license as the The Linux Kernel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Linux Kernel 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-30 08:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../userspace-api/media/mediactl/media-controller-model.rst:6
msgid "Media device model"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-controller-model.rst:8
msgid ""
"Discovering a device internal topology, and configuring it at runtime, is "
"one of the goals of the media controller API. To achieve this, hardware "
"devices and Linux Kernel interfaces are modelled as graph objects on an "
"oriented graph. The object types that constitute the graph are:"
msgstr ""

#: ../../../userspace-api/media/mediactl/media-controller-model.rst:14
msgid ""
"An **entity** is a basic media hardware or software building block. It can "
"correspond to a large variety of logical blocks such as physical hardware "
"devices (CMOS sensor for instance), logical hardware devices (a building "
"block in a System-on-Chip image processing pipeline), DMA channels or "
"physical connectors."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-controller-model.rst:20
msgid ""
"An **interface** is a graph representation of a Linux Kernel userspace API "
"interface, like a device node or a sysfs file that controls one or more "
"entities in the graph."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-controller-model.rst:24
msgid ""
"A **pad** is a data connection endpoint through which an entity can interact "
"with other entities. Data (not restricted to video) produced by an entity "
"flows from the entity's output to one or more entity inputs. Pads should not "
"be confused with physical pins at chip boundaries."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-controller-model.rst:30
msgid ""
"A **data link** is a point-to-point oriented connection between two pads, "
"either on the same entity or on different entities. Data flows from a source "
"pad to a sink pad."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-controller-model.rst:34
msgid ""
"An **interface link** is a point-to-point bidirectional control connection "
"between a Linux Kernel interface and an entity."
msgstr ""

#: ../../../userspace-api/media/mediactl/media-controller-model.rst:37
msgid ""
"An **ancillary link** is a point-to-point connection denoting that two "
"entities form a single logical unit. For example this could represent the "
"fact that a particular camera sensor and lens controller form a single "
"physical module, meaning this lens controller drives the lens for this "
"camera sensor."
msgstr ""
